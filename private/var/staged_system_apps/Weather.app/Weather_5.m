uint64_t sub_10032492C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v0 = type metadata accessor for VFXTestViewModel();
  v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v9 - v5;
  swift_retain();
  sub_10024E440();
  swift_release();
  swift_retain();
  sub_10024E440();
  swift_release();
  v7 = sub_10088B240((uint64_t)v6, (uint64_t)v3);
  sub_100325814((uint64_t)v3, (void (*)(void))type metadata accessor for VFXTestViewModel);
  sub_100325814((uint64_t)v6, (void (*)(void))type metadata accessor for VFXTestViewModel);
  return v7 & 1;
}

uint64_t sub_100324A38(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *(void *)a1 = *a2;
    a1 = v29 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_retain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    uint64_t v11 = a2[7];
    uint64_t v12 = a2[8];
    LOBYTE(v9) = *((unsigned char *)a2 + 72);
    sub_100195B88();
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    *(unsigned char *)(a1 + 72) = v9;
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    long long v13 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v13;
    uint64_t v14 = v13;
    v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
    swift_unknownObjectRetain();
    v15(a1 + 96, (uint64_t)(a2 + 12), v14);
    uint64_t v16 = a3[9];
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = type metadata accessor for SkyBackgroundGradient();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[10];
    uint64_t v21 = a1 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = type metadata accessor for Date();
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
    v24(v21, v22, v23);
    v24(a1 + a3[11], (uint64_t)a2 + a3[11], v23);
    v24(a1 + a3[12], (uint64_t)a2 + a3[12], v23);
    uint64_t v25 = a3[13];
    uint64_t v26 = a1 + v25;
    uint64_t v27 = (uint64_t)a2 + v25;
    uint64_t v28 = type metadata accessor for Elevation();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t sub_100324CC0(uint64_t a1, int *a2)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  sub_10018F6E4();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 96);
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for SkyBackgroundGradient();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = type metadata accessor for Date();
  long long v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[11], v7);
  v8(a1 + a2[12], v7);
  uint64_t v9 = a1 + a2[13];
  uint64_t v10 = type metadata accessor for Elevation();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_100324E20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  v10(a1 + 16, v7, v9);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  LOBYTE(v9) = *(unsigned char *)(a2 + 72);
  sub_100195B88();
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  long long v13 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v13;
  uint64_t v14 = v13;
  v15 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
  swift_unknownObjectRetain();
  v15(a1 + 96, a2 + 96, v14);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for SkyBackgroundGradient();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for Date();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  v24(a1 + a3[11], a2 + a3[11], v23);
  v24(a1 + a3[12], a2 + a3[12], v23);
  uint64_t v25 = a3[13];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  return a1;
}

uint64_t sub_100325058(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  char v8 = *(unsigned char *)(a2 + 72);
  sub_100195B88();
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = v8;
  sub_10018F6E4();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = v9;
  sub_1000C1E18((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for SkyBackgroundGradient();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  v18(a1 + a3[11], a2 + a3[11], v17);
  v18(a1 + a3[12], a2 + a3[12], v17);
  uint64_t v19 = a3[13];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_100325230(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 112) = v8;
  uint64_t v12 = type metadata accessor for SkyBackgroundGradient();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32);
  v17(v14, v15, v16);
  v17(a1 + a3[11], a2 + a3[11], v16);
  v17(a1 + a3[12], a2 + a3[12], v16);
  uint64_t v18 = a3[13];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

uint64_t sub_1003253C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = v8;
  sub_10018F6E4();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = v9;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for SkyBackgroundGradient();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40);
  v19(v16, v17, v18);
  v19(a1 + a3[11], a2 + a3[11], v18);
  v19(a1 + a3[12], a2 + a3[12], v18);
  uint64_t v20 = a3[13];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_100325590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003255A4);
}

uint64_t sub_1003255A4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for SkyBackgroundGradient();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[9];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[10];
      }
      else
      {
        uint64_t v10 = type metadata accessor for Elevation();
        uint64_t v11 = a3[13];
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100325674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100325688);
}

uint64_t sub_100325688(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for SkyBackgroundGradient();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[9];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[10];
      }
      else
      {
        uint64_t v10 = type metadata accessor for Elevation();
        uint64_t v11 = a4[13];
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100325754()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100325770()
{
  unint64_t result = qword_100E6BF18;
  if (!qword_100E6BF18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E6BF18);
  }
  return result;
}

uint64_t sub_1003257B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InternalStateWeatherConditionBackgroundModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100325814(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100325870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6D0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003258D8(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6D0B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10032593C()
{
  unint64_t result = qword_100E6D0C8;
  if (!qword_100E6D0C8)
  {
    sub_10018C6DC(&qword_100E6D0C0);
    sub_1003259DC();
    sub_1001246C8(&qword_100E6D0E0, &qword_100E6D0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D0C8);
  }
  return result;
}

unint64_t sub_1003259DC()
{
  unint64_t result = qword_100E6D0D0;
  if (!qword_100E6D0D0)
  {
    sub_10018C6DC(&qword_100E6D0B0);
    sub_100325A88(&qword_100E6D0D8, (void (*)(uint64_t))type metadata accessor for InternalStateWeatherConditionBackgroundModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D0D0);
  }
  return result;
}

uint64_t sub_100325A88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100325AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VFXTestView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for MoonDetailDayRangeProvider()
{
  return &type metadata for MoonDetailDayRangeProvider;
}

uint64_t sub_100325B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v86 = a4;
  uint64_t v87 = a3;
  uint64_t v83 = a1;
  uint64_t v84 = a2;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v77 = v5;
  uint64_t v78 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v76 = v6;
  uint64_t v7 = type metadata accessor for Calendar.Component();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v73 = v9;
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v10 - 8);
  sub_100162EF8();
  v70 = v11;
  sub_1001626D4();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v68 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v68 - v16;
  uint64_t v18 = type metadata accessor for Date();
  sub_100179C0C();
  v85 = v19;
  __chkstk_darwin(v20);
  sub_100162EF8();
  uint64_t v75 = v21;
  sub_1001626D4();
  __chkstk_darwin(v22);
  v74 = (char *)&v68 - v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  v71 = (char *)&v68 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  v79 = (char *)&v68 - v27;
  type metadata accessor for DateComponents();
  sub_100179C0C();
  uint64_t v81 = v29;
  uint64_t v82 = v28;
  __chkstk_darwin(v28);
  v31 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65238);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100C25ED0;
  uint64_t v72 = v8;
  v33 = *(void (**)(void))(v8 + 104);
  sub_10017CA10();
  v33();
  sub_10017CA10();
  v33();
  sub_1000EEDB0(v32);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  v80 = v31;
  Calendar.date(from:)();
  uint64_t v88 = v18;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18) == 1)
  {
    uint64_t v15 = v17;
    uint64_t v34 = v87;
    v35 = (void (**)(char *, void, uint64_t))v85;
  }
  else
  {
    uint64_t v36 = v88;
    v69 = (void (*)(void))*((void *)v85 + 4);
    sub_1001D1844();
    v37();
    uint64_t v38 = v73;
    sub_10017CA10();
    v33();
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    uint64_t v72 = *(void *)(v72 + 8);
    ((void (*)(uint64_t, uint64_t))v72)(v38, v7);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v36) == 1)
    {
      v35 = (void (**)(char *, void, uint64_t))v85;
      (*((void (**)(char *, uint64_t))v85 + 1))(v79, v88);
    }
    else
    {
      uint64_t v39 = v88;
      sub_1001D1844();
      v40();
      uint64_t v41 = v73;
      sub_10017CA10();
      v33();
      uint64_t v15 = v70;
      v42 = v79;
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      ((void (*)(uint64_t, uint64_t))v72)(v41, v7);
      v35 = (void (**)(char *, void, uint64_t))v85;
      v43 = (void (*)(char *, uint64_t))*((void *)v85 + 1);
      v43(v42, v39);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v39) != 1)
      {
        uint64_t v65 = sub_1001A0520();
        v66(v65);
        v67 = v69;
        sub_1001D1844();
        v67();
        sub_1001D1844();
        return ((uint64_t (*)(void))v67)();
      }
      v43(v71, v88);
    }
    uint64_t v34 = v87;
  }
  v44 = v74;
  sub_1001E7540((uint64_t)v15);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  sub_1002102B0(v45, (uint64_t)qword_100F51ED0);
  v35[2](v44, v34, v88);
  v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    *(_DWORD *)v48 = 136446210;
    sub_1000EF090(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v49 = v88;
    uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v89 = sub_10016414C(v50, v51, &v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v52 = sub_10017E1C0();
    v85 = v53;
    v53(v52, v49);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Failed to get month range from date: =%{public}s", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v54 = sub_10017E1C0();
    v85 = v55;
    v55(v54, v88);
  }

  uint64_t v56 = v75;
  Date.wc_addDays(_:calendar:)();
  Calendar.timeZone.getter();
  Date.startOfDay(timeZone:)();
  v57 = *(void (**)(uint64_t))(v77 + 8);
  uint64_t v58 = sub_10017E1D4();
  v57(v58);
  uint64_t v59 = v88;
  v60 = v85;
  v85(v56, v88);
  Date.wc_addDays(_:calendar:)();
  Calendar.timeZone.getter();
  Date.startOfDay(timeZone:)();
  uint64_t v61 = sub_10017E1D4();
  v57(v61);
  v60(v56, v59);
  uint64_t v62 = sub_1001A0520();
  return v63(v62);
}

uint64_t sub_1003262DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    v3 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_10017DF08(&qword_100E6D108);
  uint64_t result = sub_10017FA94();
  v3 = (unsigned char *)result;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v5 = 0;
  uint64_t v6 = result + 56;
  while (v5 < *(void *)(a1 + 16))
  {
    Swift::UInt v7 = *(unsigned __int8 *)(a1 + 32 + v5);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v7);
    uint64_t result = Hasher._finalize()();
    uint64_t v8 = -1 << v3[32];
    unint64_t v9 = result & ~v8;
    unint64_t v10 = v9 >> 6;
    uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
    uint64_t v12 = 1 << v9;
    uint64_t v13 = *((void *)v3 + 6);
    if (((1 << v9) & v11) != 0)
    {
      if (*(unsigned __int8 *)(v13 + v9) == v7) {
        goto LABEL_13;
      }
      uint64_t v14 = ~v8;
      while (1)
      {
        unint64_t v9 = (v9 + 1) & v14;
        unint64_t v10 = v9 >> 6;
        uint64_t v11 = *(void *)(v6 + 8 * (v9 >> 6));
        uint64_t v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v13 + v9) == v7) {
          goto LABEL_13;
        }
      }
    }
    *(void *)(v6 + 8 * v10) = v12 | v11;
    *(unsigned char *)(v13 + v9) = v7;
    uint64_t v15 = *((void *)v3 + 2);
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_18;
    }
    *((void *)v3 + 2) = v17;
LABEL_13:
    if (++v5 == v4) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

void *sub_100326434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
    sub_1007F3534(0, v4, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v7 = *(void *)(type metadata accessor for LocationModel() - 8);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = *(void *)(v7 + 72);
    do
    {
      sub_100326B88(a3, (uint64_t)__src);
      uint64_t v14 = v6;
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1)
      {
        sub_1007F3534((char *)(v10 > 1), v11 + 1, 1);
        uint64_t v6 = v14;
      }
      v6[2] = v11 + 1;
      memcpy(&v6[15 * v11 + 4], __src, 0x72uLL);
      v8 += v9;
      --v4;
    }
    while (v4);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  swift_release();
  return v6;
}

void *sub_1003265B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1001EA6A0(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for NotificationSubscription.Location() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = NotificationSubscription.Location.id.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1001EA6A0(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      unint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003266EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1003152D8();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_100328748(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_100326758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v46 = v5;
  uint64_t v47 = v4;
  __chkstk_darwin(v4);
  sub_10011BA28();
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  static TimeZone.current.getter();
  id v20 = sub_100326A90();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  Date.init()();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  id v22 = [v20 stringFromDate:isa];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v24;
  uint64_t v43 = v23;

  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.WeatherEnvironment.contentEnvironment.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  uint64_t v25 = ContentEnvironment.description.getter();
  uint64_t v40 = v26;
  uint64_t v41 = v25;
  uint64_t v27 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  uint64_t v28 = type metadata accessor for EnvironmentState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v2, v27 + *(int *)(v28 + 28), v47);
  uint64_t v39 = Locale.identifier.getter();
  uint64_t v30 = v29;
  sub_1001A0534();
  v31();
  LOBYTE(v8) = *(unsigned char *)(v27 + 2) != 4;
  int v32 = *(unsigned __int8 *)(v27 + 1);
  LOBYTE(v13) = (v32 - 1) < 2;
  unint64_t v33 = LocationAuthorizationState.rawValue.getter(v32);
  uint64_t v35 = v34;
  LOBYTE(v19) = *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications) == 1;
  type metadata accessor for LocationsState();
  swift_retain();
  swift_retain();
  uint64_t v36 = swift_bridgeObjectRetain();
  v37 = sub_100326434(v36, v44, a1);
  swift_bridgeObjectRelease();
  uint64_t result = sub_100326E14();
  *(void *)a2 = v43;
  *(void *)(a2 + 8) = v42;
  *(void *)(a2 + 16) = v41;
  *(void *)(a2 + 24) = v40;
  *(void *)(a2 + 32) = v39;
  *(void *)(a2 + 40) = v30;
  *(unsigned char *)(a2 + 48) = v8;
  *(unsigned char *)(a2 + 49) = v13;
  *(void *)(a2 + 56) = v33;
  *(void *)(a2 + 64) = v35;
  *(unsigned char *)(a2 + 72) = v19;
  *(void *)(a2 + 80) = v37;
  *(void *)(a2 + 88) = result;
  return result;
}

id sub_100326A90()
{
  TimeZone.identifier.getter();
  Cache.subscript.getter();
  swift_bridgeObjectRelease();
  id result = v4;
  if (!v4)
  {
    id v1 = [objc_allocWithZone((Class)NSDateFormatter) init];
    Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
    [v1 setTimeZone:isa];

    [v1 setDateStyle:3];
    [v1 setTimeStyle:3];
    TimeZone.identifier.getter();
    id v3 = v1;
    Cache.subscript.setter();
    return v3;
  }
  return result;
}

__n128 sub_100326B88@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocationModel.identifier.getter();
  uint64_t v8 = sub_1003272E8();
  uint64_t v42 = v9;
  uint64_t v43 = v8;
  uint64_t v10 = Location.Identifier.id.getter();
  uint64_t v40 = v11;
  uint64_t v41 = v10;
  uint64_t v12 = Location.Identifier.name.getter();
  uint64_t v38 = v13;
  uint64_t v39 = v12;
  Location.Identifier.coordinate.getter();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_100327570(a1, (uint64_t)v44);
  long long v35 = v44[0];
  __n128 v34 = (__n128)v44[1];
  uint64_t v33 = v45;
  HIDWORD(v32) = v46;
  int v36 = v49;
  int v37 = v48;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1003265B4(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = Location.Identifier.id.getter();
  int v21 = v47;
  char v23 = sub_100B09A74(v20, v22, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_1003265B4(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = Location.Identifier.id.getter();
  LOBYTE(v19) = sub_100B09A74(v26, v27, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v28 = v40;
  *(void *)a2 = v41;
  *(void *)(a2 + 8) = v28;
  uint64_t v29 = v38;
  *(void *)(a2 + 16) = v39;
  *(void *)(a2 + 24) = v29;
  uint64_t v30 = v42;
  *(void *)(a2 + 32) = v43;
  *(void *)(a2 + 40) = v30;
  *(void *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v17;
  __n128 result = v34;
  *(_OWORD *)(a2 + 64) = v35;
  *(__n128 *)(a2 + 80) = result;
  *(void *)(a2 + 96) = v33;
  *(unsigned char *)(a2 + 104) = BYTE4(v32);
  *(_DWORD *)(a2 + 105) = v21;
  *(_WORD *)(a2 + 109) = v37;
  *(unsigned char *)(a2 + 111) = v36;
  *(unsigned char *)(a2 + 112) = v23 & 1;
  *(unsigned char *)(a2 + 113) = v19 & 1;
  return result;
}

uint64_t sub_100326E14()
{
  uint64_t v0 = type metadata accessor for DebugBundle();
  sub_100179C0C();
  uint64_t v45 = v1;
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v44 - v4;
  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  DebugBundle.init(bundle:)();
  sub_10017DF08(&qword_100E6D1B8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C251B0;
  uint64_t v9 = DebugBundle.name.getter();
  uint64_t v11 = v10;
  uint64_t v12 = DebugBundle.displayVersion.getter();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 48) = v12;
  *(void *)(v8 + 56) = v13;
  uint64_t v50 = v8;
  id v14 = [v6 allFrameworks];
  sub_1003272A8();
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v44[1] = v5;
  if (!v16)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    v53._uint64_t countAndFlagsBits = v50;
    swift_bridgeObjectRetain_n();
    sub_1003266EC(&v53._countAndFlagsBits);
    swift_bridgeObjectRelease_n();
    uint64_t countAndFlagsBits = v53._countAndFlagsBits;
    sub_1001A0534();
    v42();
    return countAndFlagsBits;
  }
  if (v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v48 = v45 + 8;
    unint64_t v49 = v15 & 0xC000000000000001;
    uint64_t v46 = v16;
    uint64_t v47 = v0;
    do
    {
      if (v49) {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v18 = *(id *)(v15 + 8 * v17 + 32);
      }
      id v19 = v18;
      DebugBundle.init(bundle:)();
      uint64_t v20 = DebugBundle.name.getter();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      uint64_t v23 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
      }
      if (v23)
      {
        id v51 = v19;
        DebugBundle.name.getter();
        Swift::String v24 = String.lowercased()();
        swift_bridgeObjectRelease();
        Swift::String v53 = v24;
        Swift::String v52 = String.lowercased()();
        sub_1002AE218();
        sub_1002AE264();
        char v25 = sub_10017CA20();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v25) {
          goto LABEL_15;
        }
        DebugBundle.name.getter();
        Swift::String v26 = String.lowercased()();
        swift_bridgeObjectRelease();
        Swift::String v53 = v26;
        Swift::String v52 = String.lowercased()();
        char v27 = sub_10017CA20();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_15;
        }
        DebugBundle.name.getter();
        Swift::String v28 = String.lowercased()();
        swift_bridgeObjectRelease();
        Swift::String v53 = v28;
        Swift::String v52 = String.lowercased()();
        char v29 = sub_10017CA20();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v29)
        {
LABEL_15:
          uint64_t v30 = DebugBundle.name.getter();
          uint64_t v32 = v31;
          uint64_t v33 = DebugBundle.displayVersion.getter();
          uint64_t v35 = v34;
          uint64_t v36 = v50;
          unint64_t v37 = *(void *)(v50 + 16);
          if (v37 >= *(void *)(v50 + 24) >> 1)
          {
            sub_1007E9984();
            uint64_t v36 = v40;
          }
          *(void *)(v36 + 16) = v37 + 1;
          uint64_t v50 = v36;
          uint64_t v38 = (void *)(v36 + 32 * v37);
          v38[4] = v30;
          v38[5] = v32;
          v38[6] = v33;
          v38[7] = v35;
          uint64_t v16 = v46;
        }
        id v19 = v51;
      }
      ++v17;

      sub_1001A0534();
      v39();
    }
    while (v16 != v17);
    goto LABEL_22;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DiagnosticSummaryFactory()
{
  return self;
}

unint64_t sub_1003272A8()
{
  unint64_t result = qword_100E6D1C0;
  if (!qword_100E6D1C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E6D1C0);
  }
  return result;
}

uint64_t sub_1003272E8()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocationModel.timeZone.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_1001781AC((uint64_t)v6, &qword_100E6D1D8);
    return 0x2D656D69742D6F6ELL;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    id v12 = sub_100326A90();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v14 = [v12 stringFromDate:isa];

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11;
}

uint64_t sub_100327570@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v10 - 8);
  id v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  unint64_t v15 = &v30[-v14];
  uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v17 = Location.Identifier.id.getter();
  sub_1001BBE9C(v17, v18, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v19 = sub_100327860((uint64_t)v15);
  uint64_t v35 = v20;
  unint64_t v36 = v19;
  sub_100327BE8(a1, (uint64_t)v9);
  uint64_t v21 = sub_100327F9C((uint64_t)v9);
  uint64_t v33 = v22;
  uint64_t v34 = v21;
  uint64_t v32 = sub_100328218((uint64_t)v9);
  int v31 = v23;
  sub_1001262FC((uint64_t)v15, (uint64_t)v12, &qword_100E63770);
  uint64_t v24 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v24) == 1)
  {
    sub_1001781AC((uint64_t)v12, &qword_100E63770);
    uint64_t v25 = type metadata accessor for WeatherData(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v25);
  }
  else
  {
    sub_1001177B0((uint64_t)v6);
    sub_10015685C((uint64_t)v12, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  }
  unint64_t v26 = sub_1003283A4((uint64_t)v6);
  sub_1001781AC((uint64_t)v6, &qword_100E63850);
  sub_1001781AC((uint64_t)v9, (uint64_t *)&unk_100E73CA0);
  uint64_t result = sub_1001781AC((uint64_t)v15, &qword_100E63770);
  uint64_t v28 = v35;
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v28;
  uint64_t v29 = v33;
  *(void *)(a2 + 16) = v34;
  *(void *)(a2 + 24) = v29;
  *(void *)(a2 + 32) = v32;
  *(unsigned char *)(a2 + 40) = v31 & 1;
  *(_WORD *)(a2 + 41) = v26;
  *(unsigned char *)(a2 + 43) = BYTE2(v26);
  *(unsigned char *)(a2 + 44) = BYTE3(v26);
  *(unsigned char *)(a2 + 45) = BYTE4(v26);
  *(unsigned char *)(a2 + 46) = BYTE5(v26);
  *(unsigned char *)(a2 + 47) = BYTE6(v26);
  return result;
}

unint64_t sub_100327860(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationWeatherDataState(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (unint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - v9;
  sub_1001262FC(a1, (uint64_t)v4, &qword_100E63770);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    unint64_t v11 = 0xD000000000000010;
    sub_1001781AC((uint64_t)v4, &qword_100E63770);
  }
  else
  {
    sub_100178B70((uint64_t)v4, (uint64_t)v10, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_100329060((uint64_t)v10, (uint64_t)v7);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = sub_10017DF08(&qword_100E63748);
        uint64_t v18 = (uint64_t)v7 + *(int *)(v17 + 48);
        uint64_t v19 = (uint64_t)v7 + *(int *)(v17 + 64);
        sub_10015685C((uint64_t)v10, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_10015685C(v19, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_10015685C(v18, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        sub_10015685C((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherData);
        unint64_t v11 = 0x646564616F4CLL;
        break;
      case 2u:
        unint64_t v13 = *v7;
        unint64_t v12 = v7[1];
        uint64_t v14 = v7[2];
        unint64_t v15 = v7[3];
        unint64_t v21 = 0;
        unint64_t v22 = 0xE000000000000000;
        _StringGuts.grow(_:)(21);
        unint64_t v25 = v21;
        unint64_t v26 = v22;
        v16._uint64_t countAndFlagsBits = 0xD000000000000013;
        v16._object = (void *)0x8000000100C9AAE0;
        String.append(_:)(v16);
        unint64_t v21 = v13;
        unint64_t v22 = v12;
        uint64_t v23 = v14;
        unint64_t v24 = v15;
        sub_10017DF08(&qword_100E6D1D0);
        _print_unlocked<A, B>(_:_:)();
        swift_bridgeObjectRelease();
        sub_100303D6C(v14, v15);
        unint64_t v11 = v25;
        sub_10015685C((uint64_t)v10, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        break;
      case 3u:
        sub_10015685C((uint64_t)v10, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        unint64_t v11 = 0x676E6964616F4CLL;
        break;
      default:
        sub_10015685C((uint64_t)v10, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_10015685C((uint64_t)v7, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        unint64_t v11 = 0x6E20646564616F4CLL;
        break;
    }
  }
  return v11;
}

uint64_t sub_100327BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for CurrentWeather();
  uint64_t v28 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocationWeatherDataState(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v19 = Location.Identifier.id.getter();
  sub_1001BBE9C(v19, v20, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_1001781AC((uint64_t)v11, &qword_100E63770);
LABEL_6:
    uint64_t v25 = 1;
    uint64_t v24 = v29;
    goto LABEL_7;
  }
  sub_100178B70((uint64_t)v11, (uint64_t)v17, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_100329060((uint64_t)v17, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10015685C((uint64_t)v17, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_10015685C((uint64_t)v14, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    goto LABEL_6;
  }
  uint64_t v21 = sub_10017DF08(&qword_100E63748);
  uint64_t v22 = (uint64_t)&v14[*(int *)(v21 + 48)];
  uint64_t v23 = (uint64_t)&v14[*(int *)(v21 + 64)];
  sub_100178B70((uint64_t)v14, (uint64_t)v8, (void (*)(void))type metadata accessor for WeatherData);
  sub_10015685C(v23, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_10015685C(v22, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  WeatherDataModel.currentWeather.getter();
  uint64_t v24 = v29;
  CurrentWeather.date.getter();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v3);
  sub_10015685C((uint64_t)v8, (void (*)(void))type metadata accessor for WeatherData);
  sub_10015685C((uint64_t)v17, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v25 = 0;
LABEL_7:
  uint64_t v26 = type metadata accessor for Date();
  return _s7Weather24LocationCompositionStateOwst_0(v24, v25, 1, v26);
}

uint64_t sub_100327F9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimeZone();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001262FC(a1, (uint64_t)v8, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_1001781AC((uint64_t)v8, (uint64_t *)&unk_100E73CA0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    static TimeZone.current.getter();
    id v14 = sub_100326A90();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v16 = [v14 stringFromDate:isa];

    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13;
}

uint64_t sub_100328218(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001262FC(a1, (uint64_t)v4, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_1001781AC((uint64_t)v4, (uint64_t *)&unk_100E73CA0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    Date.timeIntervalSinceNow.getter();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v11 & 0x7FFFFFFFFFFFFFFFLL;
  }
}

unint64_t sub_1003283A4(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6D1C8);
  __chkstk_darwin(v3 - 8);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v7 - 8);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_10012B938();
  sub_1001262FC(a1, v10, &qword_100E63850);
  if (_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11) == 1)
  {
    sub_1001781AC(v10, &qword_100E63850);
    unint64_t v13 = 0x202000000;
    uint64_t v14 = 0x2000000000000;
    uint64_t v15 = 2;
  }
  else
  {
    sub_100178B70(v10, v1, (void (*)(void))type metadata accessor for WeatherData);
    unsigned __int8 v16 = sub_1003285C4(v1, (void (*)(uint64_t))&WeatherAvailability.airQualityAvailability.getter);
    unsigned __int8 v17 = sub_1003285C4(v1, (void (*)(uint64_t))&WeatherAvailability.minuteAvailability.getter);
    WeatherDataModel.weatherChanges.getter();
    sub_10015685C(v1, (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v18 = type metadata accessor for WeatherChanges();
    uint64_t v19 = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v18) == 1;
    sub_1001781AC(v6, &qword_100E6D1C8);
    uint64_t v15 = 0;
    uint64_t v14 = v19 << 49;
    unint64_t v13 = ((unint64_t)v16 << 24) | ((unint64_t)v17 << 32);
  }
  return ((v13 | v14 | (v15 << 40)) + (v15 << 16) + (v15 << 8)) | v15;
}

uint64_t sub_1003285C4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for WeatherAvailability.AvailabilityKind();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v9 = type metadata accessor for WeatherAvailability();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v13 = sub_10011BA28();
  type metadata accessor for WeatherData(v13);
  uint64_t v14 = WeatherDataModel.availability.getter();
  a2(v14);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v9);
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v2, v5);
  if (v15 == enum case for WeatherAvailability.AvailabilityKind.available(_:)) {
    return 0;
  }
  if (v15 == enum case for WeatherAvailability.AvailabilityKind.temporarilyUnavailable(_:)) {
    return 1;
  }
  if (v15 == enum case for WeatherAvailability.AvailabilityKind.unsupported(_:)
    || v15 == enum case for WeatherAvailability.AvailabilityKind.unknown(_:))
  {
    return 2;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100328748(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_100328DD4(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_100AD541C(v3 / 2);
  uint64_t v104 = result;
  uint64_t v105 = v3;
  v106 = v6;
  v102 = a1;
  if (v3 <= 0)
  {
    v107 = (char *)_swiftEmptyArrayStorage;
    unint64_t v35 = _swiftEmptyArrayStorage[2];
LABEL_110:
    if (v35 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v104 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v93 = *v102;
    while (1)
    {
      unint64_t v94 = v35 - 2;
      if (v35 < 2) {
        break;
      }
      if (!v93) {
        goto LABEL_153;
      }
      v95 = v107;
      uint64_t v96 = *(void *)&v107[16 * v94 + 32];
      uint64_t v97 = *(void *)&v107[16 * v35 + 24];
      uint64_t result = sub_100328EB0((char *)(v93 + 32 * v96), (char *)(v93 + 32 * *(void *)&v107[16 * v35 + 16]), v93 + 32 * v97, v106);
      if (v1) {
        goto LABEL_106;
      }
      if (v97 < v96) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_10031515C();
        v95 = (char *)result;
      }
      if (v94 >= *((void *)v95 + 2)) {
        goto LABEL_140;
      }
      v98 = &v95[16 * v94 + 32];
      *(void *)v98 = v96;
      *((void *)v98 + 1) = v97;
      unint64_t v99 = *((void *)v95 + 2);
      if (v35 > v99) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove(&v95[16 * v35 + 16], &v95[16 * v35 + 32], 16 * (v99 - v35));
      v107 = v95;
      *((void *)v95 + 2) = v99 - 1;
      unint64_t v35 = v99 - 1;
      Swift::Int v3 = v105;
      if (v99 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v103 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v100 = *a1 + 24;
  uint64_t v101 = *a1 + 8;
  v107 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 32 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 32 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      Swift::Int v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      unsigned __int8 v16 = (void *)(v101 + 32 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        unsigned __int8 v17 = (void *)(v8 + 32 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 4;
        Swift::Int v19 = v15 + 1;
        Swift::Int v7 = v15;
        Swift::Int v15 = v19;
      }
      while (v19 < v3);
      Swift::Int v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    int v14 = result;
    Swift::Int v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    Swift::Int v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 32 * v15;
      uint64_t v21 = 32 * v9;
      Swift::Int v22 = v15;
      Swift::Int v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = (_OWORD *)(v8 + v21);
          uint64_t v25 = v8 + v20;
          long long v26 = *(_OWORD *)(v8 + v21);
          uint64_t v27 = *(void *)(v8 + v21 + 16);
          uint64_t v28 = *(void *)(v8 + v21 + 24);
          long long v29 = *(_OWORD *)(v8 + v20 - 16);
          *uint64_t v24 = *(_OWORD *)(v8 + v20 - 32);
          v24[1] = v29;
          *(_OWORD *)(v25 - 32) = v26;
          *(void *)(v25 - 16) = v27;
          *(void *)(v25 - 8) = v28;
        }
        ++v23;
        v20 -= 32;
        v21 += 32;
      }
      while (v23 < v22);
    }
LABEL_31:
    Swift::Int v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v103) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v103)) {
      goto LABEL_146;
    }
    if (v9 + v103 >= v3) {
      Swift::Int v30 = v3;
    }
    else {
      Swift::Int v30 = v9 + v103;
    }
    if (v30 < v9) {
      goto LABEL_147;
    }
    if (v7 == v30)
    {
LABEL_41:
      int v31 = v107;
    }
    else
    {
      uint64_t v83 = (void *)(v100 + 32 * v7);
      int v31 = v107;
      do
      {
        uint64_t v84 = (uint64_t *)(v8 + 32 * v7);
        uint64_t result = *v84;
        uint64_t v85 = v84[1];
        Swift::Int v86 = v9;
        uint64_t v87 = v83;
        do
        {
          uint64_t v88 = (long long *)(v87 - 7);
          if (result == *(v87 - 7) && v85 == *(v87 - 6)) {
            break;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          long long v91 = *v88;
          long long v90 = *(_OWORD *)(v87 - 5);
          *(v87 - 4) = *v87;
          v87 -= 4;
          uint64_t result = v87[1];
          uint64_t v85 = v87[2];
          uint64_t v92 = v87[3];
          v88[2] = v91;
          v88[3] = v90;
          *(v87 - 3) = result;
          *(v87 - 2) = v85;
          *(v87 - 1) = v92;
          ++v86;
        }
        while (v7 != v86);
        ++v7;
        v83 += 4;
      }
      while (v7 != v30);
      Swift::Int v7 = v30;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v32 = v9;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1001AA1B0(0, *((void *)v31 + 2) + 1, 1, v31);
      int v31 = (char *)result;
    }
    unint64_t v34 = *((void *)v31 + 2);
    unint64_t v33 = *((void *)v31 + 3);
    unint64_t v35 = v34 + 1;
    if (v34 >= v33 >> 1)
    {
      uint64_t result = (uint64_t)sub_1001AA1B0((char *)(v33 > 1), v34 + 1, 1, v31);
      int v31 = (char *)result;
    }
    *((void *)v31 + 2) = v35;
    unint64_t v36 = v31 + 32;
    unint64_t v37 = &v31[16 * v34 + 32];
    *(void *)unint64_t v37 = v32;
    *((void *)v37 + 1) = v7;
    v107 = v31;
    if (v34) {
      break;
    }
    unint64_t v35 = 1;
LABEL_90:
    Swift::Int v3 = v105;
    if (v7 >= v105) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v38 = v35 - 1;
    if (v35 >= 4)
    {
      uint64_t v43 = &v36[2 * v35];
      uint64_t v44 = *(v43 - 8);
      uint64_t v45 = *(v43 - 7);
      BOOL v49 = __OFSUB__(v45, v44);
      uint64_t v46 = v45 - v44;
      if (v49) {
        goto LABEL_127;
      }
      uint64_t v48 = *(v43 - 6);
      uint64_t v47 = *(v43 - 5);
      BOOL v49 = __OFSUB__(v47, v48);
      uint64_t v41 = v47 - v48;
      char v42 = v49;
      if (v49) {
        goto LABEL_128;
      }
      unint64_t v50 = v35 - 2;
      id v51 = &v36[2 * v35 - 4];
      uint64_t v53 = *v51;
      uint64_t v52 = v51[1];
      BOOL v49 = __OFSUB__(v52, v53);
      uint64_t v54 = v52 - v53;
      if (v49) {
        goto LABEL_129;
      }
      BOOL v49 = __OFADD__(v41, v54);
      uint64_t v55 = v41 + v54;
      if (v49) {
        goto LABEL_131;
      }
      if (v55 >= v46)
      {
        uint64_t v73 = &v36[2 * v38];
        uint64_t v75 = *v73;
        uint64_t v74 = v73[1];
        BOOL v49 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v49) {
          goto LABEL_137;
        }
        BOOL v66 = v41 < v76;
        goto LABEL_79;
      }
    }
    else
    {
      if (v35 != 3)
      {
        uint64_t v67 = *((void *)v31 + 4);
        uint64_t v68 = *((void *)v31 + 5);
        BOOL v49 = __OFSUB__(v68, v67);
        uint64_t v60 = v68 - v67;
        char v61 = v49;
        goto LABEL_73;
      }
      uint64_t v40 = *((void *)v31 + 4);
      uint64_t v39 = *((void *)v31 + 5);
      BOOL v49 = __OFSUB__(v39, v40);
      uint64_t v41 = v39 - v40;
      char v42 = v49;
    }
    if (v42) {
      goto LABEL_130;
    }
    unint64_t v50 = v35 - 2;
    uint64_t v56 = &v36[2 * v35 - 4];
    uint64_t v58 = *v56;
    uint64_t v57 = v56[1];
    BOOL v59 = __OFSUB__(v57, v58);
    uint64_t v60 = v57 - v58;
    char v61 = v59;
    if (v59) {
      goto LABEL_132;
    }
    uint64_t v62 = &v36[2 * v38];
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    BOOL v49 = __OFSUB__(v63, v64);
    uint64_t v65 = v63 - v64;
    if (v49) {
      goto LABEL_134;
    }
    if (__OFADD__(v60, v65)) {
      goto LABEL_136;
    }
    if (v60 + v65 >= v41)
    {
      BOOL v66 = v41 < v65;
LABEL_79:
      if (v66) {
        unint64_t v38 = v50;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v61) {
      goto LABEL_133;
    }
    v69 = &v36[2 * v38];
    uint64_t v71 = *v69;
    uint64_t v70 = v69[1];
    BOOL v49 = __OFSUB__(v70, v71);
    uint64_t v72 = v70 - v71;
    if (v49) {
      goto LABEL_135;
    }
    if (v72 < v60) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v77 = v38 - 1;
    if (v38 - 1 >= v35)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v78 = &v36[2 * v77];
    uint64_t v79 = *v78;
    v80 = &v36[2 * v38];
    uint64_t v81 = v80[1];
    uint64_t result = sub_100328EB0((char *)(v8 + 32 * *v78), (char *)(v8 + 32 * *v80), v8 + 32 * v81, v106);
    if (v1) {
      break;
    }
    if (v81 < v79) {
      goto LABEL_124;
    }
    if (v38 > *((void *)v107 + 2)) {
      goto LABEL_125;
    }
    *uint64_t v78 = v79;
    v36[2 * v77 + 1] = v81;
    unint64_t v82 = *((void *)v107 + 2);
    if (v38 >= v82) {
      goto LABEL_126;
    }
    int v31 = v107;
    unint64_t v35 = v82 - 1;
    uint64_t result = (uint64_t)memmove(&v36[2 * v38], v80 + 2, 16 * (v82 - 1 - v38));
    *((void *)v107 + 2) = v82 - 1;
    if (v82 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v105 < -1) {
    goto LABEL_145;
  }
  *(void *)(v104 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100328DD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 24;
    while (2)
    {
      Swift::Int v9 = (uint64_t *)(v7 + 32 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (void *)v8;
      do
      {
        uint64_t v13 = (long long *)(v12 - 7);
        if (result == *(v12 - 7) && v10 == *(v12 - 6)) {
          break;
        }
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        long long v16 = *v13;
        long long v15 = *(_OWORD *)(v12 - 5);
        *(v12 - 4) = *v12;
        v12 -= 4;
        uint64_t result = v12[1];
        uint64_t v10 = v12[2];
        uint64_t v17 = v12[3];
        v13[2] = v16;
        v13[3] = v15;
        *(v12 - 3) = result;
        *(v12 - 2) = v10;
        *(v12 - 1) = v17;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 32;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100328EB0(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 32;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 32;
  if (v9 >= v11)
  {
    sub_1007EB158(a2, (uint64_t)(a3 - (void)a2) / 32, a4);
    unint64_t v12 = (unint64_t)&v4[32 * v11];
    if (v7 >= v6 || v10 < 32) {
      goto LABEL_43;
    }
    uint64_t v17 = (char *)(a3 - 32);
    while (1)
    {
      uint64_t v18 = v17 + 32;
      Swift::Int v19 = (char *)(v12 - 32);
      BOOL v20 = *(void *)(v12 - 32) == *((void *)v6 - 4) && *(void *)(v12 - 24) == *((void *)v6 - 3);
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        BOOL v22 = v18 != (char *)v12 || (unint64_t)v17 >= v12;
        v12 -= 32;
        if (!v22) {
          goto LABEL_39;
        }
      }
      else
      {
        BOOL v21 = v18 != v6 || v17 >= v6;
        Swift::Int v19 = v6 - 32;
        v6 -= 32;
        if (!v21) {
          goto LABEL_39;
        }
      }
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v19;
      *((_OWORD *)v17 + 1) = v23;
LABEL_39:
      v17 -= 32;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_43;
      }
    }
  }
  sub_1007EB158(a1, (a2 - a1) / 32, a4);
  unint64_t v12 = (unint64_t)&v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (1)
    {
      BOOL v13 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        break;
      }
      int v14 = v4;
      BOOL v13 = v7 == v4;
      v4 += 32;
      if (!v13) {
        goto LABEL_13;
      }
LABEL_14:
      v7 += 32;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    int v14 = v6;
    BOOL v13 = v7 == v6;
    v6 += 32;
    if (v13) {
      goto LABEL_14;
    }
LABEL_13:
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v14;
    *((_OWORD *)v7 + 1) = v15;
    goto LABEL_14;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_43:
  sub_1007EB158(v4, (uint64_t)(v12 - (void)v4) / 32, v6);
  return 1;
}

uint64_t sub_100329060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationWeatherDataState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1003290C4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = type metadata accessor for FeelsLikeComponentViewModel(0);
    uint64_t v10 = *(int *)(v9 + 24);
    uint64_t v11 = (uint64_t *)((char *)v4 + v10);
    unint64_t v12 = (uint64_t *)((char *)a2 + v10);
    uint64_t v13 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08(&qword_100E63750);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v16;
      uint64_t v17 = *(int *)(v13 + 20);
      uint64_t v18 = (char *)v11 + v17;
      Swift::Int v19 = (char *)v12 + v17;
      uint64_t v20 = type metadata accessor for TemperatureScaleConfiguration();
      id v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v51(v18, v19, v20);
      BOOL v21 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v18[v21[5]] = *(void *)&v19[v21[5]];
      *(void *)&v18[v21[6]] = *(void *)&v19[v21[6]];
      *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
      uint64_t v22 = v21[8];
      long long v23 = &v18[v22];
      uint64_t v24 = &v19[v22];
      uint64_t v26 = *(void *)v24;
      uint64_t v25 = *((void *)v24 + 1);
      *(void *)long long v23 = v26;
      *((void *)v23 + 1) = v25;
      v18[v21[9]] = v19[v21[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v27 = *(int *)(v9 + 28);
    uint64_t v28 = (uint64_t *)((char *)v4 + v27);
    long long v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = a3[5];
    Swift::Int v32 = (char *)v4 + v31;
    unint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = *(void *)v33;
    char v35 = v33[8];
    swift_bridgeObjectRetain();
    sub_100195B7C(v34, v35);
    *(void *)Swift::Int v32 = v34;
    v32[8] = v35;
    uint64_t v36 = a3[6];
    unint64_t v37 = (char *)v4 + v36;
    unint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = *(void *)v38;
    char v40 = v38[8];
    sub_100195B7C(*(void *)v38, v40);
    *(void *)unint64_t v37 = v39;
    v37[8] = v40;
    uint64_t v41 = a3[7];
    char v42 = (char *)v4 + v41;
    uint64_t v43 = (char *)a2 + v41;
    uint64_t v44 = *(void *)v43;
    char v45 = v43[8];
    sub_100195B7C(*(void *)v43, v45);
    *(void *)char v42 = v44;
    v42[8] = v45;
    uint64_t v46 = a3[8];
    uint64_t v47 = (uint64_t *)((char *)v4 + v46);
    uint64_t v48 = (uint64_t *)((char *)a2 + v46);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    }
    else
    {
      *uint64_t v47 = *v48;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1003293E8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
  uint64_t v5 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v8 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ContentSizeCategory();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1003295A0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = type metadata accessor for FeelsLikeComponentViewModel(0);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08(&qword_100E63750);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v14;
    uint64_t v15 = *(int *)(v12 + 20);
    uint64_t v16 = (char *)v10 + v15;
    uint64_t v17 = (char *)v11 + v15;
    uint64_t v18 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v49(v16, v17, v18);
    Swift::Int v19 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v16[v19[5]] = *(void *)&v17[v19[5]];
    *(void *)&v16[v19[6]] = *(void *)&v17[v19[6]];
    *(void *)&v16[v19[7]] = *(void *)&v17[v19[7]];
    uint64_t v20 = v19[8];
    BOOL v21 = &v16[v20];
    uint64_t v22 = &v17[v20];
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)BOOL v21 = v24;
    *((void *)v21 + 1) = v23;
    v16[v19[9]] = v17[v19[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v25 = *(int *)(v8 + 28);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = a3[5];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  char v33 = v31[8];
  swift_bridgeObjectRetain();
  sub_100195B7C(v32, v33);
  *(void *)uint64_t v30 = v32;
  v30[8] = v33;
  uint64_t v34 = a3[6];
  char v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)v36;
  char v38 = v36[8];
  sub_100195B7C(*(void *)v36, v38);
  *(void *)char v35 = v37;
  v35[8] = v38;
  uint64_t v39 = a3[7];
  char v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)v41;
  char v43 = v41[8];
  sub_100195B7C(*(void *)v41, v43);
  *(void *)char v40 = v42;
  v40[8] = v43;
  uint64_t v44 = a3[8];
  char v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)a2 + v44);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  else
  {
    *char v45 = *v46;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10032986C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for FeelsLikeComponentViewModel(0);
  uint64_t v7 = *(int *)(v6 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      uint64_t v13 = *(int *)(v10 + 20);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = type metadata accessor for TemperatureScaleConfiguration();
      BOOL v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v59(v14, v15, v16);
      uint64_t v17 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v14[v17[5]] = *(void *)&v15[v17[5]];
      *(void *)&v14[v17[6]] = *(void *)&v15[v17[6]];
      *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
      uint64_t v18 = v17[8];
      Swift::Int v19 = &v14[v18];
      uint64_t v20 = &v15[v18];
      *(void *)Swift::Int v19 = *(void *)v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      v14[v17[9]] = v15[v17[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_10032DA34((uint64_t)v8, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_6:
    uint64_t v21 = sub_10017DF08(&qword_100E63750);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = *(int *)(v10 + 20);
  uint64_t v52 = (char *)v8 + v51;
  uint64_t v53 = (char *)v9 + v51;
  uint64_t v54 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v52[v55[5]] = *(void *)&v53[v55[5]];
  *(void *)&v52[v55[6]] = *(void *)&v53[v55[6]];
  *(void *)&v52[v55[7]] = *(void *)&v53[v55[7]];
  uint64_t v56 = v55[8];
  uint64_t v57 = &v52[v56];
  uint64_t v58 = &v53[v56];
  *(void *)uint64_t v57 = *(void *)v58;
  *((void *)v57 + 1) = *((void *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52[v55[9]] = v53[v55[9]];
LABEL_7:
  uint64_t v22 = *(int *)(v6 + 28);
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[5];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = v27[8];
  sub_100195B7C(*(void *)v27, v29);
  uint64_t v30 = *(void *)v26;
  char v31 = v26[8];
  *(void *)uint64_t v26 = v28;
  v26[8] = v29;
  sub_10018F6D8(v30, v31);
  uint64_t v32 = a3[6];
  char v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  char v36 = v34[8];
  sub_100195B7C(*(void *)v34, v36);
  uint64_t v37 = *(void *)v33;
  char v38 = v33[8];
  *(void *)char v33 = v35;
  v33[8] = v36;
  sub_10018F6D8(v37, v38);
  uint64_t v39 = a3[7];
  char v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)v41;
  char v43 = v41[8];
  sub_100195B7C(*(void *)v41, v43);
  uint64_t v44 = *(void *)v40;
  char v45 = v40[8];
  *(void *)char v40 = v42;
  v40[8] = v43;
  sub_10018F6D8(v44, v45);
  if (a1 != a2)
  {
    uint64_t v46 = a3[8];
    uint64_t v47 = (void *)((char *)a1 + v46);
    uint64_t v48 = (void *)((char *)a2 + v46);
    sub_100178160((uint64_t)a1 + v46, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    }
    else
    {
      *uint64_t v47 = *v48;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100329CC4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = type metadata accessor for FeelsLikeComponentViewModel(0);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (_OWORD *)((char *)a1 + v8);
  uint64_t v10 = (_OWORD *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E63750);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    *uint64_t v9 = *v10;
    uint64_t v13 = *(int *)(v11 + 20);
    uint64_t v14 = (char *)v9 + v13;
    uint64_t v15 = (char *)v10 + v13;
    uint64_t v16 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    uint64_t v17 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v14[v17[5]] = *(void *)&v15[v17[5]];
    *(void *)&v14[v17[6]] = *(void *)&v15[v17[6]];
    *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
    *(_OWORD *)&v14[v17[8]] = *(_OWORD *)&v15[v17[8]];
    v14[v17[9]] = v15[v17[9]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + *(int *)(v7 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 28));
  uint64_t v18 = a3[5];
  uint64_t v19 = a3[6];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = *(void *)v21;
  uint64_t v22 = (char *)a1 + v19;
  uint64_t v23 = (char *)a2 + v19;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = *(void *)v23;
  uint64_t v24 = a3[7];
  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)a1 + v24;
  uint64_t v27 = (char *)a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = (char *)a1 + v25;
  char v29 = (char *)a2 + v25;
  uint64_t v30 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v28, v29, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  return a1;
}

void *sub_100329F18(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for FeelsLikeComponentViewModel(0);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      uint64_t v15 = *(int *)(v12 + 20);
      uint64_t v16 = (char *)v10 + v15;
      uint64_t v17 = (char *)v11 + v15;
      uint64_t v18 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v16[v19[5]] = *(void *)&v17[v19[5]];
      *(void *)&v16[v19[6]] = *(void *)&v17[v19[6]];
      *(void *)&v16[v19[7]] = *(void *)&v17[v19[7]];
      *(_OWORD *)&v16[v19[8]] = *(_OWORD *)&v17[v19[8]];
      v16[v19[9]] = v17[v19[9]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10032DA34((uint64_t)v10, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_6:
    uint64_t v20 = sub_10017DF08(&qword_100E63750);
    memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v50 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(int *)(v12 + 20);
  uint64_t v52 = (char *)v10 + v51;
  uint64_t v53 = (char *)v11 + v51;
  uint64_t v54 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v52[v55[5]] = *(void *)&v53[v55[5]];
  *(void *)&v52[v55[6]] = *(void *)&v53[v55[6]];
  *(void *)&v52[v55[7]] = *(void *)&v53[v55[7]];
  uint64_t v56 = v55[8];
  uint64_t v57 = &v52[v56];
  uint64_t v58 = &v53[v56];
  uint64_t v60 = *(void *)v58;
  uint64_t v59 = *((void *)v58 + 1);
  *(void *)uint64_t v57 = v60;
  *((void *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  v52[v55[9]] = v53[v55[9]];
LABEL_7:
  uint64_t v21 = *(int *)(v8 + 28);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[5];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)v28;
  LOBYTE(v28) = v28[8];
  uint64_t v30 = *(void *)v27;
  char v31 = v27[8];
  *(void *)uint64_t v27 = v29;
  v27[8] = (char)v28;
  sub_10018F6D8(v30, v31);
  uint64_t v32 = a3[6];
  char v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  LOBYTE(v34) = v34[8];
  uint64_t v36 = *(void *)v33;
  char v37 = v33[8];
  *(void *)char v33 = v35;
  v33[8] = (char)v34;
  sub_10018F6D8(v36, v37);
  uint64_t v38 = a3[7];
  uint64_t v39 = (char *)a1 + v38;
  char v40 = (char *)a2 + v38;
  uint64_t v41 = *(void *)v40;
  LOBYTE(v40) = v40[8];
  uint64_t v42 = *(void *)v39;
  char v43 = v39[8];
  *(void *)uint64_t v39 = v41;
  v39[8] = (char)v40;
  sub_10018F6D8(v42, v43);
  if (a1 != a2)
  {
    uint64_t v44 = a3[8];
    char v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    sub_100178160((uint64_t)a1 + v44, &qword_100E63BC8);
    uint64_t v47 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v48 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v45, v46, v48);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10032A2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10032A2D8);
}

uint64_t sub_10032A2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for FeelsLikeComponentViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
      if (v10 > 1) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v9 = a1 + *(int *)(a3 + 32);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10032A388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10032A39C);
}

void sub_10032A39C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for FeelsLikeComponentViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
      return;
    }
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v11 = a1 + *(int *)(a4 + 32);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_10032A44C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10032A468()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeelsLikeComponentView();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v5 = [self wu_systemUsesExuberatedLineHeight];
  sub_10032D9E0(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for FeelsLikeComponentView);
  if (v5)
  {
    uint64_t v6 = &v4[*(int *)(v2 + 24)];
    uint64_t v7 = *(void *)v6;
    char v8 = v6[8];
    sub_100195B7C(*(void *)v6, v8);
    sub_1005D1EBC();
    char v10 = v9;
    sub_10018F6D8(v7, v8);
    sub_10032DA34((uint64_t)v4, (void (*)(void))type metadata accessor for FeelsLikeComponentView);
    double result = 1.0;
    if (!v10) {
      return 2.0;
    }
  }
  else
  {
    sub_10032DA34((uint64_t)v4, (void (*)(void))type metadata accessor for FeelsLikeComponentView);
    return 2.0;
  }
  return result;
}

double sub_10032A5A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeelsLikeComponentView();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v5 = [self wu_systemUsesExuberatedLineHeight];
  sub_10032D9E0(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for FeelsLikeComponentView);
  if (v5)
  {
    uint64_t v6 = &v4[*(int *)(v2 + 24)];
    uint64_t v7 = *(void *)v6;
    char v8 = v6[8];
    sub_100195B7C(*(void *)v6, v8);
    sub_1005D1EBC();
    char v10 = v9;
    sub_10018F6D8(v7, v8);
    sub_10032DA34((uint64_t)v4, (void (*)(void))type metadata accessor for FeelsLikeComponentView);
    double result = 0.0;
    if (!v10) {
      return -4.0;
    }
  }
  else
  {
    sub_10032DA34((uint64_t)v4, (void (*)(void))type metadata accessor for FeelsLikeComponentView);
    return -4.0;
  }
  return result;
}

uint64_t sub_10032A6E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v2 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v76 = *(void *)(v2 - 8);
  uint64_t v77 = v2;
  __chkstk_darwin(v2);
  uint64_t v75 = &v67[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v67[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v74 = &v67[-v8];
  uint64_t v9 = type metadata accessor for Text.Scale();
  __chkstk_darwin(v9);
  int v13 = &v67[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = v1[3];
  if (v14)
  {
    uint64_t v15 = v1[1];
    uint64_t v16 = v1[2];
    uint64_t v81 = *v1;
    uint64_t v82 = v15;
    uint64_t v79 = v11;
    uint64_t v80 = v10;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v17 = Text.init<A>(_:)();
    uint64_t v69 = v18;
    uint64_t v70 = v17;
    uint64_t v71 = v19;
    int v68 = v20 & 1;
    uint64_t v81 = v16;
    uint64_t v82 = v14;
    uint64_t v21 = Text.init<A>(_:)();
    uint64_t v23 = v22;
    char v25 = v24 & 1;
    static Text.Scale.secondary.getter();
    uint64_t v26 = Text.textScale(_:isEnabled:)();
    uint64_t v28 = v27;
    uint64_t v72 = v6;
    char v30 = v29 & 1;
    sub_100191924(v21, v23, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v13, v80);
    uint64_t v32 = v69;
    uint64_t v31 = v70;
    LOBYTE(v21) = v68;
    uint64_t v79 = static Text.+ infix(_:_:)();
    uint64_t v80 = v33;
    uint64_t v73 = v34;
    char v36 = v35;
    char v37 = v30;
    uint64_t v6 = v72;
    sub_100191924(v26, v28, v37);
    swift_bridgeObjectRelease();
    sub_100191924(v31, v32, v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = v1[1];
    uint64_t v81 = *v1;
    uint64_t v82 = v38;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v79 = Text.init<A>(_:)();
    uint64_t v80 = v39;
    uint64_t v73 = v40;
    char v36 = v41;
  }
  LODWORD(v72) = v36 & 1;
  uint64_t v42 = static Font.largeTitle.getter();
  uint64_t v43 = static Font.title2.getter();
  uint64_t v44 = (char *)v1 + *(int *)(type metadata accessor for FeelsLikeComponentView() + 28);
  uint64_t v45 = *(void *)v44;
  char v46 = v44[8];
  sub_100195B7C(*(void *)v44, v46);
  sub_100149AE8();
  char v48 = v47;
  sub_10018F6D8(v45, v46);
  uint64_t v49 = enum case for Font.Leading.tight(_:);
  uint64_t v50 = type metadata accessor for Font.Leading();
  uint64_t v51 = (uint64_t)v74;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v74, v49, v50);
  _s7Weather24LocationCompositionStateOwst_0(v51, 0, 1, v50);
  sub_10006DF38(v51, (uint64_t)v6, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v42, v43, v48 & 1, (uint64_t)v6);
  uint64_t v52 = v73;
  uint64_t v53 = Text.font(_:)();
  uint64_t v55 = v54;
  char v57 = v56;
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v43) = v57 & 1;
  sub_100178160(v51, &qword_100E6D330);
  uint64_t v58 = v75;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v59 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  uint64_t v61 = v60;
  LOBYTE(v42) = v62;
  uint64_t v64 = v63;
  sub_100191924(v53, v55, v43);
  swift_bridgeObjectRelease();
  sub_100191924(v79, v52, (char)v72);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v76 + 8))(v58, v77);
  BOOL v66 = v78;
  *uint64_t v78 = v59;
  v66[1] = v61;
  *((unsigned char *)v66 + 16) = v42 & 1;
  v66[3] = v64;
  v66[4] = 0x3FF0000000000000;
  return result;
}

uint64_t sub_10032ABF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BlendMode();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100E6D350);
  __chkstk_darwin(v30);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[1];
  uint64_t v31 = *a1;
  uint64_t v32 = v13;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  double v21 = sub_10032A5A8();
  int v22 = static HierarchicalShapeStyle.secondary.getter();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for BlendMode.plusLighter(_:), v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
  sub_10032D9E0((uint64_t)v6, (uint64_t)&v12[*(int *)(v30 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v12 = v14;
  *((void *)v12 + 1) = v16;
  v12[16] = v20;
  *((void *)v12 + 3) = v18;
  *((void *)v12 + 4) = 0;
  *((double *)v12 + 5) = v21;
  *((_DWORD *)v12 + 12) = v22;
  sub_100190CC4(v14, v16, v20);
  swift_bridgeObjectRetain();
  sub_10032DA34((uint64_t)v6, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100191924(v14, v16, v20);
  swift_bridgeObjectRelease();
  uint64_t v23 = v26;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  sub_10032D850();
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v29);
  return sub_100178160((uint64_t)v12, &qword_100E6D350);
}

uint64_t sub_10032AF60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v57 = a3;
  uint64_t v58 = a1;
  uint64_t v4 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v54 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for FeelsLikeComponentVarianceView() - 8;
  __chkstk_darwin(v56);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v55 = (uint64_t)&v49 - v9;
  uint64_t v10 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Font.TextStyle();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10017DF08(&qword_100E6D338);
  uint64_t v17 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  char v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E6D340);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v51 = (uint64_t)&v49 - v25;
  uint64_t v26 = a2;
  uint64_t v27 = v58;
  sub_10032ABF8(v26, (uint64_t)v19);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Font.TextStyle.title3(_:), v13);
  static Font.Weight.semibold.getter();
  uint64_t v50 = static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v28 = static Font.headline.getter();
  uint64_t v29 = v27 + *(int *)(type metadata accessor for FeelsLikeComponentView() + 28);
  uint64_t v30 = *(void *)v29;
  LOBYTE(v14) = *(unsigned char *)(v29 + 8);
  sub_100195B7C(*(void *)v29, v14);
  sub_100149AE8();
  LOBYTE(v27) = v31;
  sub_10018F6D8(v30, v14);
  uint64_t v32 = enum case for Font.Leading.tight(_:);
  uint64_t v33 = type metadata accessor for Font.Leading();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v12, v32, v33);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v33);
  uint64_t v34 = (uint64_t *)&v23[*(int *)(v21 + 44)];
  uint64_t v35 = type metadata accessor for FontWithSmallVariantModifier();
  sub_10006DF38((uint64_t)v12, (uint64_t)v34 + *(int *)(v35 + 24), &qword_100E6D330);
  *uint64_t v34 = v50;
  v34[1] = v28;
  *((unsigned char *)v34 + *(int *)(v35 + 28)) = v27 & 1;
  uint64_t v36 = v53;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v19, v53);
  sub_100178160((uint64_t)v12, &qword_100E6D330);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v36);
  uint64_t v37 = v51;
  sub_10024D364((uint64_t)v23, v51, &qword_100E6D340);
  double v38 = sub_10032A468();
  uint64_t v39 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  uint64_t v40 = v54;
  sub_10032D9E0((uint64_t)v52 + *(int *)(v39 + 20), v54, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
  *(void *)uint64_t v7 = swift_getKeyPath();
  *((_WORD *)v7 + 4) = 0;
  sub_10032D7FC(v40, (uint64_t)&v7[*(int *)(v56 + 28)], (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
  uint64_t v41 = v55;
  sub_10032D7FC((uint64_t)v7, v55, (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  double v42 = sub_10032A468();
  sub_10006DF38(v37, (uint64_t)v23, &qword_100E6D340);
  uint64_t v43 = v41;
  sub_10032D9E0(v41, (uint64_t)v7, (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  uint64_t v44 = v57;
  sub_10006DF38((uint64_t)v23, v57, &qword_100E6D340);
  uint64_t v45 = (int *)sub_10017DF08(&qword_100E6D348);
  uint64_t v46 = v44 + v45[12];
  *(double *)uint64_t v46 = v38;
  *(unsigned char *)(v46 + 8) = 0;
  sub_10032D9E0((uint64_t)v7, v44 + v45[16], (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  uint64_t v47 = v44 + v45[20];
  *(double *)uint64_t v47 = v42;
  *(unsigned char *)(v47 + 8) = 0;
  sub_10032DA34(v43, (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  sub_100178160(v37, &qword_100E6D340);
  sub_10032DA34((uint64_t)v7, (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  return sub_100178160((uint64_t)v23, &qword_100E6D340);
}

uint64_t sub_10032B544()
{
  uint64_t v1 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = (uint64_t *)(v0 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 28));
  uint64_t v8 = v7[1];
  uint64_t v28 = *v7;
  uint64_t v29 = v8;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v13 = static Font.subheadline.getter();
  uint64_t v14 = static Font.footnote.getter();
  uint64_t v15 = v0 + *(int *)(type metadata accessor for FeelsLikeComponentView() + 28);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, v17);
  sub_100149AE8();
  LOBYTE(v8) = v18;
  sub_10018F6D8(v16, v17);
  uint64_t v19 = enum case for Font.Leading.tight(_:);
  uint64_t v20 = type metadata accessor for Font.Leading();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);
  uint64_t v26 = v6;
  v21(v6, v19, v20);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v20);
  sub_10006DF38((uint64_t)v6, (uint64_t)v3, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v13, v14, v8 & 1, (uint64_t)v3);
  uint64_t v22 = v27;
  uint64_t v25 = Text.font(_:)();
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v22, v10, v12);
  swift_bridgeObjectRelease();
  sub_100178160((uint64_t)v26, &qword_100E6D330);
  return v25;
}

uint64_t sub_10032B7B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v37 = v8;
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v9 = sub_10017DF08(&qword_100E6D280);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E6D288);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_10017DF08(&qword_100E6D290);
  __chkstk_darwin(v21 - 8);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  *(void *)uint64_t v13 = static VerticalAlignment.center.getter();
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 0;
  uint64_t v25 = sub_10017DF08(&qword_100E6D298);
  sub_10032BA8C(v2, v13 + *(int *)(v25 + 44));
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v26 = sub_1001246C8(&qword_100E6D2A0, &qword_100E6D280);
  View.accessibilityElement(children:)();
  uint64_t v27 = sub_100162728();
  v28(v27);
  sub_100178160(v13, &qword_100E6D280);
  swift_getOpaqueTypeConformance2();
  View.accessibilityRespondsToUserInteraction(_:)();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v14);
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D084(v6, v29, v30, v31, v32, v33, v34, v35, v37, v38, v39, a1, v9, v26, v41, v42, v43, v44, v45, v46);
  sub_10032DA34(v6, (void (*)(void))type metadata accessor for AutomationInfo);
  return sub_100178160(v24, &qword_100E6D290);
}

uint64_t sub_10032BA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6D2A8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6D2B0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - v12;
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v14 = sub_10017DF08(&qword_100E6D2B8);
  sub_10032BC3C(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  sub_10006DF38((uint64_t)v6, (uint64_t)v10, &qword_100E6D2A8);
  *(void *)&v10[*(int *)(v8 + 44)] = 0x3FF0000000000000;
  sub_100178160((uint64_t)v6, &qword_100E6D2A8);
  sub_10024D364((uint64_t)v10, (uint64_t)v13, &qword_100E6D2B0);
  sub_10006DF38((uint64_t)v13, (uint64_t)v10, &qword_100E6D2B0);
  sub_10006DF38((uint64_t)v10, a2, &qword_100E6D2B0);
  uint64_t v15 = a2 + *(int *)(sub_10017DF08(&qword_100E6D2C0) + 48);
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 0;
  sub_100178160((uint64_t)v13, &qword_100E6D2B0);
  return sub_100178160((uint64_t)v10, &qword_100E6D2B0);
}

uint64_t sub_10032BC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v95 = sub_10017DF08(&qword_100E6D2C8);
  __chkstk_darwin(v95);
  uint64_t v4 = (char *)v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10017DF08(&qword_100E6D2D0);
  __chkstk_darwin(v92);
  uint64_t v94 = (uint64_t)v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_10017DF08(&qword_100E6D2D8);
  __chkstk_darwin(v93);
  uint64_t v7 = (char *)v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6D2E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v90 = (uint64_t)v81 - v12;
  uint64_t v97 = sub_10017DF08(&qword_100E6D2E8);
  __chkstk_darwin(v97);
  long long v91 = (char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10017DF08(&qword_100E6D2F0);
  __chkstk_darwin(v96);
  uint64_t v15 = (char *)v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E63750);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for FeelsLikeComponentViewModel(0);
  sub_10006DF38(a1 + *(int *)(v22 + 24), (uint64_t)v18, &qword_100E63750);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19) == 1)
  {
    sub_100178160((uint64_t)v18, &qword_100E63750);
    sub_10032A6E8(&v99);
    uint64_t v23 = v99;
    int v24 = v101;
    uint64_t v94 = v102;
    uint64_t v95 = v100;
    uint64_t v25 = v103;
    double v26 = sub_10032A468();
    uint64_t v27 = sub_10032B544();
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v35 = a1 + *(int *)(type metadata accessor for FeelsLikeComponentView() + 20);
    uint64_t v36 = *(void *)v35;
    char v37 = *(unsigned char *)(v35 + 8);
    sub_100195B7C(*(void *)v35, v37);
    sub_100147CF4();
    LODWORD(v92) = v38;
    sub_10018F6D8(v36, v37);
    LODWORD(v36) = v24;
    LOBYTE(v99) = v24;
    uint64_t v93 = v23;
    uint64_t v39 = v95;
    sub_100190CC4(v23, v95, v24);
    uint64_t v40 = v94;
    swift_bridgeObjectRetain();
    sub_100190CC4(v27, v29, v33);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v41 = v39;
    LOBYTE(v39) = v36;
    LODWORD(v91) = v36;
    sub_100190CC4(v23, v41, v36);
    swift_bridgeObjectRetain();
    uint64_t v42 = v27;
    sub_100190CC4(v27, v29, v33);
    uint64_t v43 = v31;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v44 = v29;
    sub_100191924(v42, v29, v33);
    swift_release();
    uint64_t v45 = v43;
    swift_bridgeObjectRelease();
    uint64_t v46 = v93;
    uint64_t v47 = v95;
    sub_100191924(v93, v95, v99);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v15 = v46;
    *((void *)v15 + 1) = v47;
    v15[16] = v39;
    *((void *)v15 + 3) = v40;
    *((void *)v15 + 4) = v25;
    *((double *)v15 + 5) = v26;
    v15[48] = 0;
    *((void *)v15 + 7) = v42;
    *((void *)v15 + 8) = v44;
    v15[72] = v33;
    *((void *)v15 + 10) = v45;
    *((void *)v15 + 11) = KeyPath;
    *((void *)v15 + 12) = 4;
    *((_WORD *)v15 + 52) = 0;
    v15[106] = (v92 & 1) == 0;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E6D2F8);
    sub_10032D730();
    sub_1001246C8(&qword_100E6D318, &qword_100E6D2F8);
    _ConditionalContent<>.init(storage:)();
    sub_100191924(v42, v44, v33);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100191924(v93, v95, (char)v91);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10032D7FC((uint64_t)v18, (uint64_t)v21, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
    uint64_t v49 = a1 + *(int *)(type metadata accessor for FeelsLikeComponentView() + 20);
    uint64_t v50 = *(void *)v49;
    char v51 = *(unsigned char *)(v49 + 8);
    sub_100195B7C(*(void *)v49, v51);
    sub_100147CF4();
    char v53 = v52;
    sub_10018F6D8(v50, v51);
    if (v53)
    {
      *uint64_t v4 = static Axis.Set.vertical.getter();
      uint64_t v80 = sub_10017DF08(&qword_100E6D320);
      sub_10032C694(a1, v21, (uint64_t)&v4[*(int *)(v80 + 44)]);
      sub_10006DF38((uint64_t)v4, v94, &qword_100E6D2C8);
      swift_storeEnumTagMultiPayload();
      sub_1001246C8(&qword_100E6D308, &qword_100E6D2D8);
      sub_1001246C8(&qword_100E6D310, &qword_100E6D2C8);
      uint64_t v79 = (uint64_t)v91;
      _ConditionalContent<>.init(storage:)();
      sub_100178160((uint64_t)v4, &qword_100E6D2C8);
    }
    else
    {
      sub_10032A6E8(&v99);
      uint64_t v54 = v99;
      uint64_t v55 = v100;
      v81[0] = v100;
      int v56 = v101;
      uint64_t v57 = v102;
      v81[1] = v102;
      uint64_t v58 = v103;
      uint64_t v59 = v90;
      sub_10032AF60(a1, v21, v90);
      uint64_t v60 = sub_10032B544();
      uint64_t v61 = (uint64_t)v10;
      uint64_t v87 = v62;
      uint64_t v88 = v60;
      Swift::Int v86 = v21;
      uint64_t v89 = v63;
      int v65 = v64 & 1;
      uint64_t v66 = swift_getKeyPath();
      LOBYTE(v99) = v56;
      uint64_t v67 = v59;
      uint64_t v68 = v61;
      uint64_t v83 = v61;
      sub_10006DF38(v67, v61, &qword_100E6D2E0);
      *(void *)uint64_t v7 = v54;
      *((void *)v7 + 1) = v55;
      v7[16] = v56;
      *((void *)v7 + 3) = v57;
      *((void *)v7 + 4) = v58;
      uint64_t v84 = v7;
      uint64_t v69 = sub_10017DF08(&qword_100E6D328);
      sub_10006DF38(v68, (uint64_t)&v7[*(int *)(v69 + 48)], &qword_100E6D2E0);
      uint64_t v70 = &v7[*(int *)(v69 + 64)];
      uint64_t v71 = v87;
      uint64_t v72 = v88;
      *(void *)uint64_t v70 = v88;
      *((void *)v70 + 1) = v71;
      v70[16] = v65;
      *((void *)v70 + 3) = v89;
      *((void *)v70 + 4) = v66;
      *((void *)v70 + 5) = 3;
      v70[48] = 0;
      *(_WORD *)(v70 + 49) = 256;
      uint64_t v73 = v54;
      uint64_t v74 = v54;
      uint64_t v75 = v81[0];
      int v85 = v56;
      sub_100190CC4(v73, v81[0], v56);
      swift_bridgeObjectRetain();
      sub_100190CC4(v72, v71, v65);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100190CC4(v74, v75, v56);
      swift_bridgeObjectRetain();
      int v82 = v65;
      sub_100190CC4(v72, v71, v65);
      swift_bridgeObjectRetain();
      v81[2] = v66;
      swift_retain();
      sub_100191924(v72, v71, v65);
      swift_release();
      uint64_t v21 = v86;
      swift_bridgeObjectRelease();
      sub_100178160(v83, &qword_100E6D2E0);
      sub_100191924(v74, v75, v99);
      swift_bridgeObjectRelease();
      uint64_t v76 = (uint64_t)v84;
      sub_10006DF38((uint64_t)v84, v94, &qword_100E6D2D8);
      swift_storeEnumTagMultiPayload();
      sub_1001246C8(&qword_100E6D308, &qword_100E6D2D8);
      sub_1001246C8(&qword_100E6D310, &qword_100E6D2C8);
      uint64_t v77 = v91;
      _ConditionalContent<>.init(storage:)();
      uint64_t v78 = v76;
      uint64_t v79 = (uint64_t)v77;
      sub_100178160(v78, &qword_100E6D2D8);
      sub_100191924(v88, v87, v82);
      swift_release();
      swift_bridgeObjectRelease();
      sub_100178160(v90, &qword_100E6D2E0);
      sub_100191924(v74, v75, v85);
      swift_bridgeObjectRelease();
    }
    sub_10006DF38(v79, (uint64_t)v15, &qword_100E6D2E8);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E6D2F8);
    sub_10032D730();
    sub_1001246C8(&qword_100E6D318, &qword_100E6D2F8);
    _ConditionalContent<>.init(storage:)();
    sub_100178160(v79, &qword_100E6D2E8);
    return sub_10032DA34((uint64_t)v21, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
  }
}

uint64_t sub_10032C694@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v5 = sub_10017DF08(&qword_100E6D2E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = sub_10017DF08(&qword_100E6D380);
  __chkstk_darwin(v10 - 8);
  uint64_t v47 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = sub_10017DF08(&qword_100E6D388);
  __chkstk_darwin(v15 - 8);
  uint64_t v46 = (uint64_t)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = sub_10017DF08(&qword_100E6D390);
  __chkstk_darwin(v20 - 8);
  uint64_t v44 = (uint64_t)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  int v24 = (char *)&v42 - v23;
  *(void *)int v24 = static HorizontalAlignment.leading.getter();
  *((void *)v24 + 1) = 0;
  v24[16] = 0;
  uint64_t v25 = sub_10017DF08(&qword_100E6D398);
  sub_10032CAD0(a1, a2, (uint64_t)&v24[*(int *)(v25 + 44)]);
  *(void *)uint64_t v19 = static HorizontalAlignment.leading.getter();
  *((void *)v19 + 1) = 0;
  v19[16] = 0;
  uint64_t v26 = sub_10017DF08(&qword_100E6D3A0);
  sub_10032CCFC(a1, a2, (uint64_t)&v19[*(int *)(v26 + 44)]);
  *(void *)uint64_t v14 = static HorizontalAlignment.leading.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 0;
  uint64_t v43 = v14;
  uint64_t v27 = &v14[*(int *)(sub_10017DF08(&qword_100E6D3A8) + 44)];
  sub_10032A6E8(v49);
  uint64_t v29 = v49[0];
  uint64_t v28 = v49[1];
  char v30 = v50;
  uint64_t v31 = v51;
  uint64_t v32 = v52;
  sub_10032AF60(a1, a2, (uint64_t)v9);
  uint64_t v33 = v45;
  sub_10006DF38((uint64_t)v9, v45, &qword_100E6D2E0);
  *(void *)uint64_t v27 = v29;
  *((void *)v27 + 1) = v28;
  v27[16] = v30;
  *((void *)v27 + 3) = v31;
  *((void *)v27 + 4) = v32;
  uint64_t v34 = sub_10017DF08(&qword_100E6D3B0);
  sub_10006DF38(v33, (uint64_t)&v27[*(int *)(v34 + 48)], &qword_100E6D2E0);
  sub_100190CC4(v29, v28, v30);
  swift_bridgeObjectRetain();
  sub_100178160((uint64_t)v9, &qword_100E6D2E0);
  sub_100178160(v33, &qword_100E6D2E0);
  sub_100191924(v29, v28, v30);
  swift_bridgeObjectRelease();
  uint64_t v35 = v44;
  sub_10006DF38((uint64_t)v24, v44, &qword_100E6D390);
  uint64_t v36 = v46;
  sub_10006DF38((uint64_t)v19, v46, &qword_100E6D388);
  uint64_t v37 = (uint64_t)v43;
  uint64_t v38 = v47;
  sub_10006DF38((uint64_t)v43, v47, &qword_100E6D380);
  uint64_t v39 = v48;
  sub_10006DF38(v35, v48, &qword_100E6D390);
  uint64_t v40 = sub_10017DF08(&qword_100E6D3B8);
  sub_10006DF38(v36, v39 + *(int *)(v40 + 48), &qword_100E6D388);
  sub_10006DF38(v38, v39 + *(int *)(v40 + 64), &qword_100E6D380);
  sub_100178160(v37, &qword_100E6D380);
  sub_100178160((uint64_t)v19, &qword_100E6D388);
  sub_100178160((uint64_t)v24, &qword_100E6D390);
  sub_100178160(v38, &qword_100E6D380);
  sub_100178160(v36, &qword_100E6D388);
  return sub_100178160(v35, &qword_100E6D390);
}

uint64_t sub_10032CAD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6D2E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - v10;
  sub_10032A6E8(&v36);
  uint64_t v12 = v36;
  uint64_t v13 = v37;
  uint64_t v29 = v37;
  uint64_t v30 = v36;
  char v14 = v38;
  uint64_t v15 = v39;
  uint64_t v31 = v39;
  uint64_t v16 = v40;
  sub_10032AF60(a1, a2, (uint64_t)v11);
  uint64_t v17 = sub_10032B544();
  uint64_t v32 = v18;
  uint64_t v33 = v17;
  uint64_t v34 = v19;
  LOBYTE(a2) = v20 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v36) = v14;
  uint64_t v35 = v8;
  sub_10006DF38((uint64_t)v11, (uint64_t)v8, &qword_100E6D2E0);
  *(void *)a3 = v12;
  *(void *)(a3 + 8) = v13;
  *(unsigned char *)(a3 + 16) = v14;
  *(void *)(a3 + 24) = v15;
  *(void *)(a3 + 32) = v16;
  uint64_t v22 = sub_10017DF08(&qword_100E6D3C0);
  sub_10006DF38((uint64_t)v8, a3 + *(int *)(v22 + 48), &qword_100E6D2E0);
  uint64_t v23 = a3 + *(int *)(v22 + 64);
  uint64_t v25 = v32;
  uint64_t v24 = v33;
  *(void *)uint64_t v23 = v33;
  *(void *)(v23 + 8) = v25;
  *(unsigned char *)(v23 + 16) = (_BYTE)a2;
  *(void *)(v23 + 24) = v34;
  *(void *)(v23 + 32) = KeyPath;
  *(void *)(v23 + 40) = 3;
  *(unsigned char *)(v23 + 48) = 0;
  uint64_t v27 = v29;
  uint64_t v26 = v30;
  sub_100190CC4(v30, v29, v14);
  swift_bridgeObjectRetain();
  sub_100190CC4(v24, v25, (char)a2);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178160((uint64_t)v11, &qword_100E6D2E0);
  sub_100191924(v24, v25, (char)a2);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100178160((uint64_t)v35, &qword_100E6D2E0);
  sub_100191924(v26, v27, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10032CCFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v76 = a2;
  uint64_t v91 = a3;
  uint64_t v81 = type metadata accessor for Font.Leading();
  uint64_t v94 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  int v85 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v83 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for FeelsLikeComponentVarianceView() - 8;
  __chkstk_darwin(v84);
  uint64_t v92 = (uint64_t *)((char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v96 = (uint64_t)&v73 - v10;
  uint64_t v11 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v11 - 8);
  uint64_t v86 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v73 - v14;
  uint64_t v77 = sub_10017DF08(&qword_100E6D338);
  uint64_t v16 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v18 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E6D340);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v95 = (uint64_t)&v73 - v24;
  sub_10032A6E8(&v97);
  uint64_t v89 = v97;
  uint64_t v88 = v98;
  int v87 = v99;
  uint64_t v90 = v100;
  uint64_t v25 = v101;
  uint64_t v75 = a1;
  sub_10032ABF8(v3, v18);
  uint64_t v74 = static Font.headline.getter();
  uint64_t v73 = static Font.subheadline.getter();
  uint64_t v82 = a1 + *(int *)(type metadata accessor for FeelsLikeComponentView() + 28);
  uint64_t v26 = *(void *)v82;
  LOBYTE(a1) = *(unsigned char *)(v82 + 8);
  sub_100195B7C(*(void *)v82, a1);
  sub_100149AE8();
  LOBYTE(v3) = v27;
  sub_10018F6D8(v26, a1);
  unsigned int v79 = enum case for Font.Leading.tight(_:);
  uint64_t v78 = *(void (**)(char *))(v94 + 104);
  uint64_t v28 = (uint64_t)v15;
  uint64_t v29 = v15;
  uint64_t v30 = v81;
  v78(v29);
  _s7Weather24LocationCompositionStateOwst_0(v28, 0, 1, v30);
  uint64_t v31 = (uint64_t *)&v22[*(int *)(v20 + 44)];
  uint64_t v32 = type metadata accessor for FontWithSmallVariantModifier();
  uint64_t v33 = (uint64_t)v31 + *(int *)(v32 + 24);
  uint64_t v80 = v28;
  sub_10006DF38(v28, v33, &qword_100E6D330);
  uint64_t v34 = v73;
  uint64_t *v31 = v74;
  v31[1] = v34;
  *((unsigned char *)v31 + *(int *)(v32 + 28)) = v3 & 1;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v93 = v22;
  uint64_t v36 = v77;
  v35(v22, v18, v77);
  sub_100178160(v28, &qword_100E6D330);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v36);
  sub_10024D364((uint64_t)v22, v95, &qword_100E6D340);
  uint64_t v37 = v75;
  double v38 = sub_10032A468();
  uint64_t v39 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  uint64_t v40 = v83;
  sub_10032D9E0((uint64_t)v76 + *(int *)(v39 + 20), v83, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = v92;
  *uint64_t v92 = KeyPath;
  *((_WORD *)v42 + 4) = 0;
  sub_10032D7FC(v40, (uint64_t)v42 + *(int *)(v84 + 28), (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance);
  sub_10032D7FC((uint64_t)v42, v96, (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  double v43 = sub_10032A468();
  uint64_t v44 = (uint64_t *)(v37 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 28));
  uint64_t v45 = v44[1];
  uint64_t v97 = *v44;
  uint64_t v98 = v45;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v83 = Text.init<A>(_:)();
  uint64_t v77 = v46;
  uint64_t v84 = v47;
  LODWORD(v76) = v48 & 1;
  static Font.footnote.getter();
  uint64_t v49 = v85;
  uint64_t v50 = v79;
  uint64_t v51 = (void (*)(char *, uint64_t, uint64_t))v78;
  ((void (*)(char *, void, uint64_t))v78)(v85, v79, v30);
  uint64_t v52 = Font.leading(_:)();
  swift_release();
  char v53 = *(void (**)(char *, uint64_t))(v94 + 8);
  v53(v49, v30);
  static Font.caption2.getter();
  v51(v49, v50, v30);
  uint64_t v54 = Font.leading(_:)();
  swift_release();
  v53(v49, v30);
  uint64_t v55 = *(void *)v82;
  LOBYTE(v53) = *(unsigned char *)(v82 + 8);
  sub_100195B7C(*(void *)v82, (char)v53);
  sub_100149AE8();
  LOBYTE(v18) = v56;
  sub_10018F6D8(v55, (char)v53);
  uint64_t v57 = v80;
  v51((char *)v80, v50, v30);
  _s7Weather24LocationCompositionStateOwst_0(v57, 0, 1, v30);
  uint64_t v58 = v86;
  sub_10006DF38(v57, v86, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v52, v54, v18 & 1, v58);
  uint64_t v59 = v83;
  uint64_t v60 = v77;
  LOBYTE(v51) = (_BYTE)v76;
  uint64_t v86 = Text.font(_:)();
  uint64_t v62 = v61;
  LODWORD(v85) = v63;
  uint64_t v94 = v64;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v59, v60, (char)v51);
  swift_bridgeObjectRelease();
  sub_100178160(v57, &qword_100E6D330);
  uint64_t v65 = swift_getKeyPath();
  uint64_t v66 = v89;
  uint64_t v67 = v88;
  uint64_t v108 = v89;
  uint64_t v109 = v88;
  LOBYTE(v49) = v87;
  char v110 = v87;
  uint64_t v111 = v90;
  uint64_t v112 = v25;
  v113 = &v108;
  uint64_t v68 = v95;
  uint64_t v69 = (uint64_t)v93;
  sub_10006DF38(v95, (uint64_t)v93, &qword_100E6D340);
  double v106 = v38;
  char v107 = 0;
  uint64_t v114 = v69;
  v115 = &v106;
  uint64_t v70 = v96;
  uint64_t v71 = v92;
  sub_10032D9E0(v96, (uint64_t)v92, (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  double v104 = v43;
  char v105 = 0;
  v116 = v71;
  v117 = &v104;
  uint64_t v97 = v86;
  uint64_t v98 = v62;
  unsigned __int8 v99 = v85 & 1;
  uint64_t v100 = v94;
  uint64_t v101 = v65;
  uint64_t v102 = 3;
  char v103 = 0;
  v118 = &v97;
  sub_1004B8AC4();
  sub_100190CC4(v66, v67, (char)v49);
  swift_bridgeObjectRetain();
  sub_10032DA34(v70, (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  sub_100178160(v68, &qword_100E6D340);
  sub_100191924(v66, v67, (char)v49);
  swift_bridgeObjectRelease();
  sub_100191924(v97, v98, v99);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10032DA34((uint64_t)v71, (void (*)(void))type metadata accessor for FeelsLikeComponentVarianceView);
  sub_100178160((uint64_t)v93, &qword_100E6D340);
  sub_100191924(v108, v109, v110);
  return swift_bridgeObjectRelease();
}

unint64_t sub_10032D730()
{
  unint64_t result = qword_100E6D300;
  if (!qword_100E6D300)
  {
    sub_10018C6DC(&qword_100E6D2E8);
    sub_1001246C8(&qword_100E6D308, &qword_100E6D2D8);
    sub_1001246C8(&qword_100E6D310, &qword_100E6D2C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D300);
  }
  return result;
}

uint64_t sub_10032D7FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

unint64_t sub_10032D850()
{
  unint64_t result = qword_100E6D358;
  if (!qword_100E6D358)
  {
    sub_10018C6DC(&qword_100E6D350);
    sub_10032D8CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D358);
  }
  return result;
}

unint64_t sub_10032D8CC()
{
  unint64_t result = qword_100E6D360;
  if (!qword_100E6D360)
  {
    sub_10018C6DC(&qword_100E6D368);
    sub_10032D96C();
    sub_1001246C8(&qword_100E63EC8, &qword_100E63ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D360);
  }
  return result;
}

unint64_t sub_10032D96C()
{
  unint64_t result = qword_100E6D370;
  if (!qword_100E6D370)
  {
    sub_10018C6DC(&qword_100E6D378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D370);
  }
  return result;
}

uint64_t sub_10032D9E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10032DA34(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

unint64_t sub_10032DA88()
{
  unint64_t result = qword_100E6D3C8;
  if (!qword_100E6D3C8)
  {
    sub_10018C6DC(&qword_100E6D3D0);
    sub_10032DB34();
    sub_10032DC40((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D3C8);
  }
  return result;
}

unint64_t sub_10032DB34()
{
  unint64_t result = qword_100E6D3D8;
  if (!qword_100E6D3D8)
  {
    sub_10018C6DC(&qword_100E6D290);
    sub_10018C6DC(&qword_100E6D280);
    sub_1001246C8(&qword_100E6D2A0, &qword_100E6D280);
    swift_getOpaqueTypeConformance2();
    sub_10032DC40((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D3D8);
  }
  return result;
}

uint64_t sub_10032DC40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t property wrapper backing initializer of WeatherAsyncImage.loadingState(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherAsyncImage.LoadingState();
  sub_100179C0C();
  uint64_t v4 = v3;
  __n128 v6 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v9 - v7, a1, v2, v6);
  State.init(wrappedValue:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t type metadata accessor for WeatherAsyncImage.LoadingState()
{
  return sub_100109098();
}

uint64_t _s7Weather0A10AsyncImageV13_loadingState33_511D3CCAD74339EA7557309BE8DB11CCLL7SwiftUI0E0VyAC07LoadingE0AELLVyx_GGvpfi_0@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v3 = (uint64_t)a1 + *(int *)(v2 + 36);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v4);
  *(void *)((char *)a1 + *(int *)(v2 + 40)) = 0x8000000000000000;
  return result;
}

uint64_t WeatherAsyncImage.init<>(url:scale:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F350C(a1, (uint64_t)v8, &qword_100E749B0);
  sub_10032E040((uint64_t)v8, 0, (uint64_t)sub_10032DEAC, 0, a2, a3);
  return sub_1000F3400(a1, &qword_100E749B0);
}

uint64_t sub_10032DEAC@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (a1 >> 62)
  {
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E62730 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    if (v4 == 1) {
      uint64_t result = Image.init(systemName:)();
    }
    else {
      uint64_t result = Image.init(_:bundle:)();
    }
  }
  else
  {
    uint64_t result = swift_retain();
  }
  *a2 = result;
  return result;
}

uint64_t WeatherAsyncImagePhase.image.getter(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return swift_retain();
  }
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62730 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v2 == 1) {
    return Image.init(systemName:)();
  }
  else {
    return 0;
  }
}

uint64_t sub_10032E040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v10 = sub_10017DF08(&qword_100E6D588);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v21 - v14);
  uint64_t v16 = type metadata accessor for URL();
  _s7Weather24LocationCompositionStateOwst_0(a5, 1, 1, v16);
  uint64_t v17 = (int *)sub_10017DF08(qword_100E6D590);
  *uint64_t v15 = 0;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15 + *(int *)(v10 + 36), 1, 1, v16);
  *(void *)((char *)v15 + *(int *)(v10 + 40)) = 0x8000000000000000;
  sub_1000F350C((uint64_t)v15, (uint64_t)v12, &qword_100E6D588);
  State.init(wrappedValue:)();
  sub_1000F3400((uint64_t)v15, &qword_100E6D588);
  uint64_t result = sub_100330DA8(a1, a5);
  *(double *)(a5 + v17[9]) = a6;
  *(void *)(a5 + v17[10]) = a2;
  uint64_t v19 = (void *)(a5 + v17[11]);
  uint64_t v20 = v22;
  *uint64_t v19 = v21;
  v19[1] = v20;
  return result;
}

uint64_t WeatherAsyncImage.init(url:scale:transaction:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12 = type metadata accessor for WeatherAsyncImage.LoadingState();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v19 - v13);
  uint64_t v15 = type metadata accessor for URL();
  _s7Weather24LocationCompositionStateOwst_0(a5, 1, 1, v15);
  uint64_t v16 = (int *)type metadata accessor for WeatherAsyncImage();
  _s7Weather0A10AsyncImageV13_loadingState33_511D3CCAD74339EA7557309BE8DB11CCLL7SwiftUI0E0VyAC07LoadingE0AELLVyx_GGvpfi_0(v14);
  property wrapper backing initializer of WeatherAsyncImage.loadingState((uint64_t)v14);
  uint64_t result = sub_100330DA8(a1, a5);
  *(double *)(a5 + v16[9]) = a6;
  *(void *)(a5 + v16[10]) = a2;
  uint64_t v18 = (void *)(a5 + v16[11]);
  *uint64_t v18 = a3;
  v18[1] = a4;
  return result;
}

void *sub_10032E304@<X0>(unint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Image.ResizingMode();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (WeatherAsyncImagePhase.image.getter(a1))
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v10 = Image.resizable(capInsets:resizingMode:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    static Alignment.center.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    v14[0] = v10;
    v14[1] = 0;
    LOWORD(v14[2]) = 257;
    v14[3] = v18;
    LOBYTE(v14[4]) = v19;
    v14[5] = v20;
    LOBYTE(v14[6]) = v21;
    v14[7] = v22;
    LOBYTE(v14[8]) = v23;
    v14[9] = v24;
    LOBYTE(v14[10]) = v25;
    v14[11] = v26;
    LOBYTE(v14[12]) = v27;
    v14[13] = v28;
    LOBYTE(v14[14]) = v29;
    *(_OWORD *)&v14[15] = v30;
    memcpy(v16, v14, 0x88uLL);
    sub_100333368((uint64_t)v16);
    sub_100333210((uint64_t)v16, (uint64_t)v15);
    sub_1000618F8((uint64_t)v14);
    sub_1000618F8((uint64_t)v14);
    sub_10017DF08(&qword_100E6D620);
    sub_100333278();
    _ConditionalContent<>.init(storage:)();
    swift_release_n();
    swift_release();
  }
  else
  {
    static Color.white.getter();
    uint64_t v11 = Color.opacity(_:)();
    swift_release();
    v16[0] = v11;
    sub_100333204((uint64_t)v16);
    sub_100333210((uint64_t)v16, (uint64_t)v15);
    sub_10017DF08(&qword_100E6D620);
    sub_100333278();
    _ConditionalContent<>.init(storage:)();
  }
  return memcpy(a2, v17, 0x89uLL);
}

uint64_t sub_10032E5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = a2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v61 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v58 = &v48[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v50 = &v48[-v8];
  uint64_t v9 = sub_10017DF08(&qword_100E6D578);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = &v48[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v13 - 8);
  uint64_t v55 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v60 = &v48[-v16];
  __chkstk_darwin(v17);
  char v19 = &v48[-v18];
  uint64_t v20 = *(void *)(a3 + 24);
  uint64_t v56 = *(void *)(a3 + 16);
  uint64_t v57 = v20;
  uint64_t v21 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v54 = (id *)&v48[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  uint64_t v26 = (id *)&v48[-v25];
  uint64_t v51 = a3;
  uint64_t v27 = *(int *)(a3 + 48);
  uint64_t v59 = v3;
  uint64_t v28 = v3 + v27;
  uint64_t v52 = type metadata accessor for State();
  uint64_t v53 = v28;
  State.wrappedValue.getter();
  sub_1000F350C((uint64_t)v26 + *(int *)(v21 + 36), (uint64_t)v19, &qword_100E749B0);
  char v29 = v26;
  long long v30 = *(void (**)(id *, uint64_t))(v22 + 8);
  v30(v29, v21);
  uint64_t v31 = *(int *)(v10 + 56);
  uint64_t v32 = v5;
  uint64_t v33 = (uint64_t)&v12[v31];
  sub_1000F350C((uint64_t)v19, (uint64_t)v12, &qword_100E749B0);
  sub_1000F350C(v62, v33, &qword_100E749B0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v5) == 1)
  {
    sub_1000F3400((uint64_t)v19, &qword_100E749B0);
    if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v5) == 1) {
      return sub_1000F3400((uint64_t)v12, &qword_100E749B0);
    }
  }
  else
  {
    sub_1000F350C((uint64_t)v12, (uint64_t)v60, &qword_100E749B0);
    if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v5) != 1)
    {
      uint64_t v35 = v61;
      uint64_t v36 = v50;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v61 + 32))(v50, v33, v32);
      sub_100333160(qword_100E6D3E8);
      uint64_t v37 = v60;
      int v49 = dispatch thunk of static Equatable.== infix(_:_:)();
      double v38 = *(void (**)(unsigned char *, uint64_t))(v35 + 8);
      v38(v36, v32);
      sub_1000F3400((uint64_t)v19, &qword_100E749B0);
      v38(v37, v32);
      uint64_t result = sub_1000F3400((uint64_t)v12, &qword_100E749B0);
      if (v49) {
        return result;
      }
      goto LABEL_8;
    }
    sub_1000F3400((uint64_t)v19, &qword_100E749B0);
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v60, v5);
  }
  sub_1000F3400((uint64_t)v12, &qword_100E6D578);
LABEL_8:
  uint64_t v39 = v54;
  State.wrappedValue.getter();
  if (*v39)
  {
    id v40 = *v39;
    v30(v39, v21);
    [v40 cancel];
  }
  else
  {
    v30(v39, v21);
  }
  uint64_t v41 = v61;
  uint64_t v42 = v55;
  sub_1000F350C(v62, (uint64_t)v55, &qword_100E749B0);
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v32);
  uint64_t v44 = (uint64_t)v58;
  if (v43 == 1)
  {
    sub_1000F3400((uint64_t)v42, &qword_100E749B0);
    __chkstk_darwin(*(void *)(v59 + *(int *)(v51 + 40)));
    uint64_t v45 = v57;
    *(void *)&v48[-32] = v56;
    *(void *)&v48[-24] = v45;
    *(void *)&v48[-16] = v46;
    return withTransaction<A>(_:_:)();
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v41 + 32))(v58, v42, v32);
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = 0;
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E62730 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    sub_10032EE7C(v47, v63, v44, v59, v56, v57);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v32);
    return swift_release();
  }
}

uint64_t sub_10032EC34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v3 = type metadata accessor for State();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 -= 8;
  __chkstk_darwin(v10);
  uint64_t v12 = (id *)((char *)&v17 - v11);
  uint64_t v13 = a1 + *(int *)(type metadata accessor for WeatherAsyncImage() + 48);
  State.wrappedValue.getter();

  *uint64_t v12 = 0;
  State.wrappedValue.setter();
  uint64_t v14 = type metadata accessor for URL();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v13, v3);
  State.wrappedValue.getter();
  sub_100330DA8((uint64_t)v9, (uint64_t)v12 + *(int *)(v2 + 44));
  State.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  State.wrappedValue.getter();
  uint64_t v15 = *(int *)(v2 + 48);
  sub_100330EDC(*(unint64_t *)((char *)v12 + v15));
  *(id *)((char *)v12 + v15) = (id)0x8000000000000000;
  return State.wrappedValue.setter();
}

void sub_10032EE7C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  unsigned __int8 v6 = a2;
  int v52 = a2;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v8 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v61 = type metadata accessor for State();
  uint64_t v64 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  unsigned __int8 v63 = (char *)&v48 - v9;
  uint64_t v10 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v60 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v8 - 8;
  __chkstk_darwin(v12);
  uint64_t v14 = (id *)((char *)&v48 - v13);
  uint64_t v54 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v54 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v54);
  uint64_t v50 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for WeatherAsyncImage();
  uint64_t v49 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v48 - v20;
  uint64_t v53 = a1;
  swift_beginAccess();
  int v51 = (*(void *)(a1 + 16) < 1) & v6;
  id v58 = [self sharedSession];
  uint64_t v22 = v65;
  URL._bridgeToObjectiveC()(v23);
  uint64_t v57 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v66, v17);
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v25 = v54;
  v59((char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v54);
  unint64_t v26 = (*(unsigned __int8 *)(v18 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v27 = (v19 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (*(unsigned __int8 *)(v15 + 80) + v27 + 9) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v56;
  *(void *)(v29 + 16) = v55;
  *(void *)(v29 + 24) = v30;
  *(unsigned char *)(v29 + 32) = v51;
  unint64_t v31 = v29 + v26;
  uint64_t v32 = v49;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v31, v21, v49);
  unint64_t v33 = v29 + v27;
  *(void *)unint64_t v33 = v53;
  *(unsigned char *)(v33 + 8) = v52;
  unint64_t v34 = v29 + v28;
  uint64_t v35 = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v34, v50, v25);
  aBlock[4] = sub_100333010;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100330294;
  aBlock[3] = &unk_100E114D0;
  uint64_t v36 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  double v38 = v57;
  id v37 = v58;
  id v39 = [v58 downloadTaskWithURL:v57 completionHandler:v36];
  _Block_release(v36);

  uint64_t v40 = v66 + *(int *)(v32 + 48);
  id v41 = v39;
  uint64_t v42 = v61;
  State.wrappedValue.getter();

  *uint64_t v14 = v39;
  State.wrappedValue.setter();
  uint64_t v43 = (uint64_t)v60;
  uint64_t v44 = v35;
  v59(v60, v65, v35);
  uint64_t v45 = v43;
  _s7Weather24LocationCompositionStateOwst_0(v43, 0, 1, v44);
  uint64_t v47 = v63;
  uint64_t v46 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v40, v42);
  State.wrappedValue.getter();
  sub_100330DA8(v45, (uint64_t)v14 + *(int *)(v62 + 44));
  State.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v42);
  [v41 resume];
}

void sub_10032F41C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v17 - 8);
  uint64_t v47 = (uint64_t)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v22 = type metadata accessor for URL();
  __chkstk_darwin(v22);
  unint64_t v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) == 0)
  {
    uint64_t v43 = v26;
    uint64_t v44 = v24;
    int v45 = a7;
    uint64_t v46 = a6;
    uint64_t v27 = v23;
    sub_1000F350C(a1, (uint64_t)v21, &qword_100E749B0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v27) == 1)
    {
      sub_1000F3400((uint64_t)v21, &qword_100E749B0);
    }
    else
    {
      uint64_t v42 = a1;
      unint64_t v28 = v43;
      uint64_t v29 = v44;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v21, v27);
      URL._bridgeToObjectiveC()(v30);
      CFURLRef v32 = v31;
      unint64_t v33 = CGImageSourceCreateWithURL(v31, 0);

      if (v33)
      {
        if ((uint64_t)CGImageSourceGetCount(v33) > 0)
        {
          CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v33, 0, 0);
          if (ImageAtIndex)
          {
            CGImageRef v35 = ImageAtIndex;
            uint64_t v36 = type metadata accessor for WeatherAsyncImage();
            __chkstk_darwin(*(void *)(a5 + *(int *)(v36 + 40)));
            *(&v41 - 8) = a9;
            *(&v41 - 7) = a10;
            id v37 = v43;
            uint64_t v38 = v46;
            *(&v41 - 6) = (uint64_t)v43;
            *(&v41 - 5) = v38;
            *(&v41 - 4) = a5;
            *(&v41 - 3) = (uint64_t)v35;
            *(&v41 - 2) = (uint64_t)v33;
            withTransaction<A>(_:_:)();

            (*(void (**)(char *, uint64_t))(v44 + 8))(v37, v27);
            return;
          }
        }
        (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v27);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v27);
      }
      a1 = v42;
    }
    uint64_t v39 = v47;
    sub_1000F350C(a1, v47, &qword_100E749B0);
    _s7Weather24LocationCompositionStateOwet_0(v39, 1, v27);
    sub_1000F3400(v39, &qword_100E749B0);
    a6 = v46;
    LOBYTE(a7) = v45;
  }
  uint64_t v40 = type metadata accessor for WeatherAsyncImage();
  __chkstk_darwin(*(void *)(a5 + *(int *)(v40 + 40)));
  *(&v41 - 8) = a9;
  *(&v41 - 7) = a10;
  *(&v41 - 6) = a6;
  *(&v41 - 5) = a1;
  *((unsigned char *)&v41 - 32) = a7 & 1;
  *(&v41 - 3) = a8;
  *(&v41 - 2) = a5;
  *(&v41 - 1) = a3;
  withTransaction<A>(_:_:)();
}

uint64_t sub_10032F7C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a5;
  id v35 = a4;
  uint64_t v36 = a3;
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v37 = type metadata accessor for WeatherAsyncImage.LoadingState();
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62890 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1002102B0(v16, (uint64_t)qword_100F520B8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  swift_retain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v31 = v7;
    uint64_t v20 = v19;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v40 = v30;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v29 = v20 + 4;
    sub_100333160(&qword_100E6D580);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v39 = sub_10016414C(v21, v22, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    *(_WORD *)(v20 + 12) = 2048;
    swift_beginAccess();
    uint64_t v23 = *(void *)(a2 + 16);
    swift_release();
    uint64_t v38 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Successfully loaded image for URL=%s. retryCount=%ld", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

    swift_release();
  }
  type metadata accessor for WeatherAsyncImage();
  sub_10032FBB4(0);
  id v24 = v35;
  uint64_t v25 = Image.init(decorative:scale:orientation:)();
  uint64_t v26 = v37;
  type metadata accessor for State();
  State.wrappedValue.getter();
  uint64_t v27 = *(int *)(v26 + 40);
  sub_100330EDC(*(void *)&v11[v27]);
  *(void *)&v11[v27] = v25;
  return State.wrappedValue.setter();
}

uint64_t sub_10032FBB4(size_t index)
{
  CFDictionaryRef v2 = CGImageSourceCopyPropertiesAtIndex(v1, index, 0);
  if (v2)
  {
    CFDictionaryRef v3 = v2;
    Value = (void *)CFDictionaryGetValue(v2, kCGImagePropertyOrientation);

    if (Value)
    {
      id v5 = Value;
      static Int._conditionallyBridgeFromObjectiveC(_:result:)();
    }
  }
  return 8;
}

uint64_t sub_10032FC5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v48 = a5;
  uint64_t v45 = a4;
  uint64_t v46 = a6;
  int v44 = a3;
  uint64_t v12 = type metadata accessor for WeatherAsyncImage.LoadingState();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v43 - v19;
  swift_beginAccess();
  if (*(uint64_t *)(a1 + 16) > 2)
  {
    if (qword_100E62890 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_1002102B0(v29, (uint64_t)qword_100F520B8);
    sub_1000F350C(a2, (uint64_t)v17, &qword_100E749B0);
    swift_retain_n();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v47 = (void *)(a1 + 16);
      uint64_t v34 = v33;
      uint64_t v45 = swift_slowAlloc();
      v49[0] = v45;
      *(_DWORD *)uint64_t v34 = 136446466;
      int v44 = v32;
      os_log_t v43 = v30;
      uint64_t v35 = sub_10063326C();
      v50[0] = sub_10016414C(v35, v36, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000F3400((uint64_t)v17, &qword_100E749B0);
      *(_WORD *)(v34 + 12) = 2048;
      swift_beginAccess();
      uint64_t v37 = *(void *)(a1 + 16);
      swift_release();
      uint64_t v51 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      os_log_t v38 = v43;
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v44, "Max retries hit, failed to load image for URL=%{public}s. retryCount=%ld", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      sub_1000F3400((uint64_t)v17, &qword_100E749B0);

      swift_release();
    }
    uint64_t v40 = v46;
    if (!v46)
    {
      type metadata accessor for WeatherAsyncImage.LoadingError();
      swift_getWitnessTable();
      uint64_t v40 = swift_allocError();
    }
    uint64_t v41 = v40 | 0x4000000000000000;
    type metadata accessor for WeatherAsyncImage();
    swift_errorRetain();
    type metadata accessor for State();
    State.wrappedValue.getter();
    uint64_t v42 = *(int *)(v12 + 40);
    sub_100330EDC(*(void *)&v14[v42]);
    *(void *)&v14[v42] = v41;
    return State.wrappedValue.setter();
  }
  else
  {
    uint64_t v47 = (void *)(a1 + 16);
    if (qword_100E62890 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1002102B0(v21, (uint64_t)qword_100F520B8);
    sub_1000F350C(a2, (uint64_t)v20, &qword_100E749B0);
    swift_retain_n();
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      v50[0] = v46;
      *(_DWORD *)uint64_t v24 = 136446466;
      uint64_t v25 = sub_10063326C();
      v49[0] = sub_10016414C(v25, v26, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000F3400((uint64_t)v20, &qword_100E749B0);
      *(_WORD *)(v24 + 12) = 2048;
      uint64_t v27 = v47;
      swift_beginAccess();
      uint64_t v28 = *(void *)(a1 + 16);
      swift_release();
      uint64_t v51 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Retrying - failed to load image for URL=%{public}s. retryCount=%ld", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release();
      sub_1000F3400((uint64_t)v20, &qword_100E749B0);

      swift_release();
      uint64_t v27 = v47;
    }
    uint64_t result = swift_beginAccess();
    if (__OFADD__(*v27, 1))
    {
      __break(1u);
    }
    else
    {
      *(void *)(a1 + 16) = *v27 + 1;
      return sub_10032EE7C(a1, v44 & 1, v45, v48, a7, a8);
    }
  }
  return result;
}

uint64_t sub_100330294(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, void *, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, v13, 1, v12);
  swift_retain();
  id v14 = a3;
  id v15 = a4;
  v11(v10, a3, a4);

  swift_release();
  return sub_1000F3400((uint64_t)v10, &qword_100E749B0);
}

uint64_t WeatherAsyncImage.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v56 = a2;
  sub_100179C0C();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v7);
  uint64_t v47 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v45 = *(void *)(v8 + 16);
  uint64_t v44 = v9;
  uint64_t v10 = type metadata accessor for WeatherAsyncImage.LoadingState();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  id v15 = (char *)&v44 - v14;
  type metadata accessor for WeatherAsyncImage.Inner();
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v49 = v16;
  uint64_t v17 = sub_10018C6DC(&qword_100E749B0);
  uint64_t v53 = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v75 = WitnessTable;
  uint64_t v76 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v52 = v18;
  unint64_t v51 = sub_100330E28();
  unint64_t v68 = v16;
  uint64_t v69 = v17;
  uint64_t v70 = (void (*)())v18;
  unint64_t v71 = v51;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  sub_100179C0C();
  uint64_t v54 = v19;
  __chkstk_darwin(v20);
  uint64_t v48 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v50 = (char *)&v44 - v23;
  uint64_t v24 = v57;
  type metadata accessor for State();
  State.wrappedValue.getter();
  unint64_t v25 = *(void *)&v15[*(int *)(v10 + 40)];
  sub_100330EB8(v25);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
  uint64_t v26 = v24;
  uint64_t v27 = (uint64_t *)(v24 + *(int *)(a1 + 44));
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  unint64_t v65 = v25;
  uint64_t v66 = v28;
  uint64_t v67 = v29;
  uint64_t v30 = v47;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v47, v26, a1);
  unint64_t v31 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v45;
  uint64_t v34 = v44;
  *(void *)(v32 + 16) = v45;
  *(void *)(v32 + 24) = v34;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v32 + v31, v30, a1);
  unint64_t v58 = 0;
  uint64_t v59 = 0;
  uint64_t v60 = sub_100330EFC;
  uint64_t v61 = v32;
  swift_retain();
  swift_checkMetadataState();
  View.modifier<A>(_:)();
  swift_release();
  sub_100330EDC(v65);
  swift_release();
  unint64_t v35 = v68;
  uint64_t v36 = v71;
  uint64_t v47 = v73;
  unint64_t v58 = v68;
  uint64_t v59 = v69;
  uint64_t v60 = v70;
  uint64_t v61 = v71;
  uint64_t v62 = v72;
  uint64_t v63 = v73;
  uint64_t v64 = v74;
  sub_1003309D0(v57, v33, v34);
  swift_checkMetadataState();
  uint64_t v37 = v48;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100330EDC(v35);
  swift_release();
  sub_1001361AC(v36);
  sub_1001361AC(v47);
  uint64_t v38 = v54;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v40 = v50;
  uint64_t v41 = OpaqueTypeMetadata2;
  v39(v50, v37, OpaqueTypeMetadata2);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  v42(v37, v41);
  v39(v56, v40, v41);
  return ((uint64_t (*)(char *, uint64_t))v42)(v40, v41);
}

void sub_10033089C()
{
  uint64_t v0 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (id *)((char *)&v6 - v2);
  type metadata accessor for WeatherAsyncImage();
  type metadata accessor for State();
  State.wrappedValue.getter();
  if (*v3)
  {
    uint64_t v4 = *(void (**)(id *, uint64_t))(v1 + 8);
    id v5 = *v3;
    v4(v3, v0);
    [v5 cancel];
  }
  else
  {
    (*(void (**)(id *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t (*sub_1003309D0(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for WeatherAsyncImage();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v14 - v9, a1, v6, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v10, v6);
  return sub_100332D78;
}

uint64_t sub_100330B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherAsyncImage();
  return sub_10032E5D0(a1, a2, v4);
}

uint64_t sub_100330B58@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, __n128)@<X1>, char *a3@<X8>)
{
  uint64_t v17 = a3;
  __chkstk_darwin(a1);
  uint64_t v5 = type metadata accessor for _UnaryViewAdaptor();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  __n128 v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - v11;
  a2(a1, v10);
  _UnaryViewAdaptor.init(_:)();
  swift_getWitnessTable();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v13(v12, v8, v5);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v13(v17, v12, v5);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v5);
}

uint64_t sub_100330D38@<X0>(char *a1@<X8>)
{
  return sub_100330B58(*(void *)v1, *(void (**)(uint64_t, __n128))(v1 + 8), a1);
}

uint64_t WeatherAsyncImagePhase.error.getter(unint64_t a1)
{
  if (a1 >> 62 != 1) {
    return 0;
  }
  uint64_t v1 = a1 & 0x3FFFFFFFFFFFFFFFLL;
  swift_errorRetain();
  return v1;
}

uint64_t type metadata accessor for WeatherAsyncImage()
{
  return sub_100109098();
}

uint64_t sub_100330DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for WeatherAsyncImage.Inner()
{
  return sub_100109098();
}

unint64_t sub_100330E28()
{
  unint64_t result = qword_100E6D3E0;
  if (!qword_100E6D3E0)
  {
    sub_10018C6DC(&qword_100E749B0);
    sub_100333160(qword_100E6D3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D3E0);
  }
  return result;
}

unint64_t sub_100330EB8(unint64_t result)
{
  if (result >> 62 == 1) {
    return swift_errorRetain();
  }
  if (!(result >> 62)) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_100330EDC(unint64_t result)
{
  if (result >> 62 == 1) {
    return swift_errorRelease();
  }
  if (!(result >> 62)) {
    return swift_release();
  }
  return result;
}

void sub_100330EFC()
{
  uint64_t v0 = sub_100179FAC();
  sub_1001627C0(v0);

  sub_10033089C();
}

uint64_t sub_100330F50()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100330F94()
{
  sub_10000AFF4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WeatherAsyncImage.LoadingState();
    type metadata accessor for State();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100331090(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E749B0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v11 = a3[11];
    uint64_t v12 = a3[12];
    uint64_t v13 = (uint64_t *)((char *)a1 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (char *)a1 + v12;
    uint64_t v17 = (char *)a2 + v12;
    uint64_t v18 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v18;
    uint64_t v19 = type metadata accessor for WeatherAsyncImage.LoadingState();
    uint64_t v20 = *(int *)(v19 + 36);
    uint64_t v21 = &v16[v20];
    uint64_t v22 = &v17[v20];
    swift_retain();
    swift_retain();
    id v23 = v18;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v7))
    {
      uint64_t v24 = sub_10017DF08(&qword_100E749B0);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v21, v22, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v7);
    }
    uint64_t v25 = *(int *)(v19 + 40);
    unint64_t v26 = *(void *)&v17[v25];
    sub_100330EB8(v26);
    *(void *)&v16[v25] = v26;
    uint64_t v27 = type metadata accessor for State();
    *(void *)&v16[*(int *)(v27 + 28)] = *(void *)&v17[*(int *)(v27 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_1003312E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  swift_release();
  swift_release();
  int v5 = (id *)(a1 + *(int *)(a2 + 48));

  uint64_t v6 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v7 = (uint64_t)v5 + *(int *)(v6 + 36);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v7, v4);
  }
  sub_100330EDC(*(unint64_t *)((char *)v5 + *(int *)(v6 + 40)));
  type metadata accessor for State();

  return swift_release();
}

char *sub_100331418(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E749B0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[11];
  uint64_t v10 = a3[12];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *(void **)&a2[v10];
  *(void *)&a1[v10] = v16;
  uint64_t v17 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v18 = *(int *)(v17 + 36);
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  swift_retain();
  swift_retain();
  id v21 = v16;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v6))
  {
    uint64_t v22 = sub_10017DF08(&qword_100E749B0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v19, v20, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v6);
  }
  uint64_t v23 = *(int *)(v17 + 40);
  unint64_t v24 = *(void *)&v15[v23];
  sub_100330EB8(v24);
  *(void *)&v14[v23] = v24;
  uint64_t v25 = type metadata accessor for State();
  *(void *)&v14[*(int *)(v25 + 28)] = *(void *)&v15[*(int *)(v25 + 28)];
  swift_retain();
  return a1;
}

char *sub_100331620(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_10017DF08(&qword_100E749B0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_retain();
  swift_release();
  uint64_t v11 = a3[11];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a3[12];
  uint64_t v16 = (void **)&a1[v15];
  uint64_t v17 = (void **)&a2[v15];
  uint64_t v18 = *(void **)&a1[v15];
  uint64_t v19 = *v17;
  *uint64_t v16 = *v17;
  id v20 = v19;

  uint64_t v21 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v22 = *(int *)(v21 + 36);
  uint64_t v23 = (char *)v16 + v22;
  unint64_t v24 = (char *)v17 + v22;
  int v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16 + v22, 1, v6);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v6);
  if (!v25)
  {
    uint64_t v27 = *(void *)(v6 - 8);
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v23, v24, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v6);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v28 = sub_10017DF08(&qword_100E749B0);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v23, v24, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v6);
LABEL_13:
  uint64_t v29 = *(int *)(v21 + 40);
  unint64_t v30 = *(unint64_t *)((char *)v17 + v29);
  sub_100330EB8(v30);
  unint64_t v31 = *(unint64_t *)((char *)v16 + v29);
  *(void **)((char *)v16 + v29) = (void *)v30;
  sub_100330EDC(v31);
  uint64_t v32 = type metadata accessor for State();
  *(void **)((char *)v16 + *(int *)(v32 + 28)) = *(void **)((char *)v17 + *(int *)(v32 + 28));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100331954(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E749B0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v12 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v13 = *(int *)(v12 + 36);
  uint64_t v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v11[v13], 1, v6))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E749B0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v14, v15, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v6);
  }
  *(void *)&v10[*(int *)(v12 + 40)] = *(void *)&v11[*(int *)(v12 + 40)];
  uint64_t v17 = type metadata accessor for State();
  *(void *)&v10[*(int *)(v17 + 28)] = *(void *)&v11[*(int *)(v17 + 28)];
  return a1;
}

char *sub_100331B2C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_10017DF08(&qword_100E749B0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_release();
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  swift_release();
  uint64_t v12 = a3[12];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void **)&a1[v12];
  *(void *)uint64_t v13 = *(void *)v14;

  uint64_t v16 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v17 = *(int *)(v16 + 36);
  uint64_t v18 = &v13[v17];
  uint64_t v19 = &v14[v17];
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v17], 1, v6);
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v6);
  if (!v20)
  {
    uint64_t v22 = *(void *)(v6 - 8);
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v18, v19, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v6);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v23 = sub_10017DF08(&qword_100E749B0);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v18, v19, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v6);
LABEL_13:
  uint64_t v24 = *(int *)(v16 + 40);
  unint64_t v25 = *(void *)&v13[v24];
  *(void *)&v13[v24] = *(void *)&v14[v24];
  sub_100330EDC(v25);
  uint64_t v26 = type metadata accessor for State();
  *(void *)&v13[*(int *)(v26 + 28)] = *(void *)&v14[*(int *)(v26 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_100331E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100331E48);
}

uint64_t sub_100331E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E749B0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for WeatherAsyncImage.LoadingState();
    uint64_t v8 = type metadata accessor for State();
    uint64_t v9 = a1 + *(int *)(a3 + 48);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100331F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100331F20);
}

void sub_100331F20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E749B0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
      return;
    }
    type metadata accessor for WeatherAsyncImage.LoadingState();
    uint64_t v10 = type metadata accessor for State();
    uint64_t v11 = a1 + *(int *)(a4 + 48);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

unint64_t *initializeBufferWithCopyOfBuffer for WeatherAsyncImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_100330EB8(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for WeatherAsyncImagePhase(unint64_t *a1)
{
  return sub_100330EDC(*a1);
}

unint64_t *assignWithCopy for WeatherAsyncImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_100330EB8(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_100330EDC(v4);
  return a1;
}

void *initializeWithTake for ConfiguredUnitState(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for WeatherAsyncImagePhase(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_100330EDC(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherAsyncImagePhase(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for WeatherAsyncImagePhase(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)unint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_10033213C(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_100332158(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_100332168(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for WeatherAsyncImagePhase()
{
  return &type metadata for WeatherAsyncImagePhase;
}

uint64_t sub_1003321A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100332284(unint64_t *a1)
{
  sub_100330EDC(*a1);

  return swift_release();
}

unint64_t *sub_1003322C0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_100330EB8(*a2);
  unint64_t v6 = a2[1];
  unint64_t v5 = a2[2];
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v5;
  swift_retain();
  return a1;
}

unint64_t *sub_10033230C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  sub_100330EB8(*a2);
  unint64_t v5 = *a1;
  *a1 = v4;
  sub_100330EDC(v5);
  unint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10033236C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  sub_100330EDC(v4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WindCategoryTableViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WindCategoryTableViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_100332434()
{
  sub_10000AFF4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void **sub_1003324D4(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = v4;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v13 = sub_10017DF08(&qword_100E749B0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(a3 + 40);
    unint64_t v15 = *(unint64_t *)((char *)a2 + v14);
    sub_100330EB8(v15);
    *(void **)((char *)v7 + v14) = (void *)v15;
  }
  return v7;
}

unint64_t sub_100332628(id *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  unint64_t v6 = *(unint64_t *)((char *)a1 + *(int *)(a2 + 40));

  return sub_100330EDC(v6);
}

void **sub_1003326CC(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  id v11 = v6;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 40);
  unint64_t v14 = *(unint64_t *)((char *)a2 + v13);
  sub_100330EB8(v14);
  *(void **)((char *)a1 + v13) = (void *)v14;
  return a1;
}

void **sub_1003327D4(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  id v8 = v7;

  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = (char *)a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_10017DF08(&qword_100E749B0);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 40);
  unint64_t v18 = *(unint64_t *)((char *)a2 + v17);
  sub_100330EB8(v18);
  unint64_t v19 = *(unint64_t *)((char *)a1 + v17);
  *(void **)((char *)a1 + v17) = (void *)v18;
  sub_100330EDC(v19);
  return a1;
}

void *sub_10033296C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 40)) = *(void *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

void **sub_100332A60(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 36);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 40);
  unint64_t v16 = *(unint64_t *)((char *)a1 + v15);
  *(void **)((char *)a1 + v15) = *(void **)((char *)a2 + v15);
  sub_100330EDC(v16);
  return a1;
}

uint64_t sub_100332BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100332C00);
}

uint64_t sub_100332C00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10017DF08(&qword_100E749B0);
    uint64_t v10 = (uint64_t)a1 + *(int *)(a3 + 36);
    return _s7Weather24LocationCompositionStateOwet_0(v10, a2, v9);
  }
}

uint64_t sub_100332C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100332CAC);
}

void *sub_100332CAC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *unint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E749B0);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 36);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100332D30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100332D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherAsyncImage();
  sub_1001627C0(v4);

  return sub_100330B08(a1, a2);
}

uint64_t sub_100332DF4()
{
  return sub_10032EC34(*(void *)(v0 + 32));
}

uint64_t sub_100332E14()
{
  return swift_deallocObject();
}

uint64_t sub_100332E24()
{
  type metadata accessor for WeatherAsyncImage();
  sub_10019E848();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v13 = *(void *)(v4 + 64);
  uint64_t v5 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v3, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v3, v5);
  }
  swift_release();
  swift_release();
  uint64_t v9 = (id *)(v0 + v3 + *(int *)(v1 + 48));

  uint64_t v10 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v11 = (uint64_t)v9 + *(int *)(v10 + 36);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  }
  sub_100330EDC(*(unint64_t *)((char *)v9 + *(int *)(v10 + 40)));
  type metadata accessor for State();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + ((((v13 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v8 + 9) & ~v8), v5);

  return swift_deallocObject();
}

void sub_100333010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(type metadata accessor for WeatherAsyncImage() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = type metadata accessor for URL();
  sub_1001627C0(v12);
  sub_10032F41C(a1, a2, a3, *(unsigned char *)(v3 + 32), v3 + v10, *(void *)(v3 + v11), *(unsigned __int8 *)(v3 + v11 + 8), v3 + ((v11 + *(unsigned __int8 *)(v13 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), v7, v8);
}

uint64_t sub_10033310C()
{
  return sub_10032FC5C(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100333138()
{
  return sub_10032F7C4(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100333160(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for URL();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for WeatherAsyncImage.LoadingError()
{
  return sub_100109098();
}

uint64_t sub_1003331BC()
{
  type metadata accessor for _UnaryViewAdaptor();

  return swift_getWitnessTable();
}

uint64_t sub_100333204(uint64_t result)
{
  *(unsigned char *)(result + 136) = 1;
  return result;
}

uint64_t sub_100333210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6D618);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100333278()
{
  unint64_t result = qword_100E6D628;
  if (!qword_100E6D628)
  {
    sub_10018C6DC(&qword_100E6D620);
    sub_1003332F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D628);
  }
  return result;
}

unint64_t sub_1003332F4()
{
  unint64_t result = qword_100E6D630;
  if (!qword_100E6D630)
  {
    sub_10018C6DC(&qword_100E6D638);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D630);
  }
  return result;
}

uint64_t sub_100333368(uint64_t result)
{
  *(unsigned char *)(result + 136) = 0;
  return result;
}

uint64_t sub_100333374(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = type metadata accessor for Text.Measurements();
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_100333470(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Text.Measurements();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1003334F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for Text.Measurements();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1003335A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_10033365C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1003336E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100333784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100333798);
}

uint64_t sub_100333798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100179FCC();
  }
  uint64_t v7 = type metadata accessor for Text.Measurements();
  uint64_t v8 = a1 + *(int *)(a3 + 20);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_100333810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100333824);
}

void sub_100333824()
{
  sub_100163298();
  if (v3)
  {
    *uint64_t v1 = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = type metadata accessor for Text.Measurements();
    uint64_t v6 = (uint64_t)v1 + *(int *)(v4 + 20);
    _s7Weather24LocationCompositionStateOwst_0(v6, v0, v0, v5);
  }
}

uint64_t type metadata accessor for ConditionDetailLegendView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6D698);
}

uint64_t sub_1003338B8()
{
  uint64_t result = type metadata accessor for Text.Measurements();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100333950()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10033396C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  v10[2] = v1 + *(int *)(type metadata accessor for ConditionDetailLegendView(0) + 20);
  uint64_t v4 = sub_100A963AC((void (*)(void))sub_100333F24, (uint64_t)v10, v3);
  uint64_t v5 = *(void *)v1;
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void *)(v1 + 16);
  int v8 = *(unsigned __int8 *)(v1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100333A20(v5, v6, v7, v8, v4, a1);
}

uint64_t sub_100333A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v24 = a5;
  int v23 = a4;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v8 = type metadata accessor for GridItem.Size();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (long long *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10017DF08(&qword_100E6D6D0);
  type metadata accessor for GridItem();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100C25ED0;
  long long v20 = xmmword_100C32460;
  *unint64_t v11 = xmmword_100C32460;
  uint64_t v13 = enum case for GridItem.Size.flexible(_:);
  uint64_t v14 = *(void (**)(long long *, uint64_t, uint64_t))(v9 + 104);
  v14(v11, enum case for GridItem.Size.flexible(_:), v8);
  GridItem.init(_:spacing:alignment:)();
  *unint64_t v11 = v20;
  v14(v11, v13, v8);
  GridItem.init(_:spacing:alignment:)();
  *(void *)(a6 + 32) = v12;
  uint64_t v25 = 0;
  State.init(wrappedValue:)();
  uint64_t v15 = v27;
  *(void *)(a6 + 40) = v26;
  *(void *)(a6 + 48) = v15;
  uint64_t v16 = type metadata accessor for MeasuredConditionDetailLegendView(0);
  uint64_t v17 = (uint64_t *)(a6 + *(int *)(v16 + 28));
  *uint64_t v17 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  uint64_t result = swift_storeEnumTagMultiPayload();
  uint64_t v19 = v21;
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = v19;
  *(void *)(a6 + 16) = v22;
  *(unsigned char *)(a6 + 24) = v23;
  *(void *)(a6 + *(int *)(v16 + 32)) = v24;
  return result;
}

double sub_100333CA4(Swift::String *a1, uint64_t a2)
{
  v24[1] = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v7);
  Image.init(systemName:)();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._uint64_t countAndFlagsBits = 32;
  v8._object = (void *)0xE100000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v8);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(a1[1]);
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v9);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  swift_beginAccess();
  sub_10052E5D8();
  swift_endAccess();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_release();
  sub_100191924(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v20 = type metadata accessor for Text.WritingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v20);
  Text.Measurements.size(of:in:writingMode:)();
  double v22 = v21;
  sub_100191924(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v5, &qword_100E63DB8);
  return v22;
}

void sub_100333F24(Swift::String *a1@<X0>, double *a2@<X8>)
{
  *a2 = sub_100333CA4(a1, *(void *)(v2 + 16));
}

uint64_t type metadata accessor for MeasuredConditionDetailLegendView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6D730);
}

uint64_t sub_100333F78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v37 = sub_10017DF08(&qword_100E6D780) - 8;
  __chkstk_darwin(v37);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CoordinateSpace();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v35 = (char *)&v33 - v9;
  uint64_t v10 = type metadata accessor for MeasuredConditionDetailLegendView(0);
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v34 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = sub_10017DF08(&qword_100E6D788);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E6D790);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v14 = static HorizontalAlignment.leading.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v18 = sub_10017DF08(&qword_100E6D798);
  sub_100334418(v2, (uint64_t)&v14[*(int *)(v18 + 44)]);
  static Alignment.center.getter();
  sub_100BD7C78();
  sub_100178110((uint64_t)v14, &qword_100E6D788);
  sub_100337FD0((uint64_t)v2, (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
  unint64_t v19 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v20 = swift_allocObject();
  sub_100338030((uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
  double v21 = v35;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v35, enum case for CoordinateSpace.global(_:), v5);
  double v22 = v36;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v36, v21, v5);
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v24 + v23, v22, v5);
  uint64_t v25 = static Alignment.center.getter();
  uint64_t v27 = v26;
  sub_10006DF38((uint64_t)v17, (uint64_t)v4, &qword_100E6D790);
  uint64_t v28 = (uint64_t (**)())&v4[*(int *)(v37 + 44)];
  *uint64_t v28 = sub_100337994;
  v28[1] = (uint64_t (*)())v24;
  v28[2] = (uint64_t (*)())v25;
  v28[3] = v27;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_1003378A0;
  *(void *)(v29 + 24) = v20;
  uint64_t v30 = v38;
  sub_10006DF38((uint64_t)v4, v38, &qword_100E6D780);
  unint64_t v31 = (uint64_t (**)(double *))(v30 + *(int *)(sub_10017DF08(&qword_100E6D7A0) + 36));
  uint64_t *v31 = sub_100337A4C;
  v31[1] = (uint64_t (*)(double *))v29;
  sub_100178110((uint64_t)v4, &qword_100E6D780);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v5);
  return sub_100178110((uint64_t)v17, &qword_100E6D790);
}

uint64_t sub_100334418@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v130 = a2;
  uint64_t v3 = type metadata accessor for MeasuredConditionDetailLegendView(0);
  uint64_t v101 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v103 = v4;
  uint64_t v105 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10017DF08(&qword_100E6D7A8);
  __chkstk_darwin(v114);
  char v110 = (uint64_t *)((char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v116 = sub_10017DF08(&qword_100E6D7B0);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  v113 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_10017DF08(&qword_100E6D7B8);
  __chkstk_darwin(v129);
  uint64_t v112 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v111 = (char *)&v91 - v9;
  __chkstk_darwin(v10);
  uint64_t v117 = (uint64_t)&v91 - v11;
  uint64_t v96 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v96);
  uint64_t v97 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10017DF08(&qword_100E6D7C0);
  uint64_t v102 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v98 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10017DF08(&qword_100E6D7C8);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  double v104 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10017DF08(&qword_100E6D7D0);
  __chkstk_darwin(v122);
  uint64_t v100 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unsigned __int8 v99 = (char *)&v91 - v17;
  __chkstk_darwin(v18);
  uint64_t v109 = (uint64_t)&v91 - v19;
  uint64_t v126 = sub_10017DF08(&qword_100E6D7D8);
  __chkstk_darwin(v126);
  uint64_t v128 = (uint64_t)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_10017DF08(&qword_100E6D7E0);
  __chkstk_darwin(v119);
  uint64_t v120 = (uint64_t)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_10017DF08(&qword_100E6D7E8);
  __chkstk_darwin(v127);
  v121 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v124 = *(void *)(v23 - 8);
  uint64_t v125 = v23;
  __chkstk_darwin(v23);
  v123 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10017DF08(&qword_100E6D7F0);
  __chkstk_darwin(v92);
  uint64_t v26 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10017DF08(&qword_100E6D7F8);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v28 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10017DF08(&qword_100E6D800);
  __chkstk_darwin(v118);
  uint64_t v30 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v91 - v32;
  __chkstk_darwin(v34);
  uint64_t v95 = (uint64_t)&v91 - v35;
  uint64_t v36 = type metadata accessor for ContentSizeCategory();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v91 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v91 - v41;
  sub_10014E6E8();
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v39, v42, v36);
  int v43 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v39, v36);
  if (v43 == enum case for ContentSizeCategory.extraSmall(_:)
    || v43 == enum case for ContentSizeCategory.small(_:)
    || v43 == enum case for ContentSizeCategory.medium(_:)
    || v43 == enum case for ContentSizeCategory.large(_:)
    || v43 == enum case for ContentSizeCategory.extraLarge(_:)
    || v43 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v43 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v36);
  }
  else
  {
    uint64_t v50 = *(void (**)(char *, uint64_t))(v37 + 8);
    if (v43 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v43 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v43 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v43 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v43 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v50(v42, v36);
      *(void *)uint64_t v26 = static HorizontalAlignment.leading.getter();
      *((void *)v26 + 1) = 0;
      v26[16] = 1;
      sub_10017DF08(&qword_100E6D8B8);
      uint64_t v133 = *a1;
      swift_bridgeObjectRetain();
      sub_10017DF08(&qword_100E6D810);
      sub_10017DF08(&qword_100E6D8C0);
      sub_1001246C8(&qword_100E6D820, &qword_100E6D810);
      sub_1001246C8(&qword_100E6D8C8, &qword_100E6D8C0);
      sub_100337AA8(&qword_100E6D830, (void (*)(uint64_t))type metadata accessor for ConditionDetailLegend);
      ForEach<>.init(_:content:)();
      uint64_t v55 = v123;
      static AccessibilityChildBehavior.contain.getter();
      uint64_t v56 = sub_1001246C8(&qword_100E6D850, &qword_100E6D7F0);
      uint64_t v57 = (void *)v92;
      View.accessibilityElement(children:)();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v55, v125);
      sub_100178110((uint64_t)v26, &qword_100E6D7F0);
      uint64_t v58 = a1[2];
      uint64_t v133 = a1[1];
      uint64_t v134 = v58;
      v135 = v57;
      uint64_t v136 = v56;
      swift_getOpaqueTypeConformance2();
      sub_10014A85C();
      uint64_t v59 = v94;
      View.accessibilityLabel<A>(_:)();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v28, v59);
      ModifiedContent<>.accessibilityRespondsToUserInteraction(_:)();
      uint64_t v60 = &qword_100E6D800;
      sub_100178110((uint64_t)v30, &qword_100E6D800);
      uint64_t v61 = v95;
      sub_10024D364((uint64_t)v33, v95, &qword_100E6D800);
      sub_10006DF38(v61, v120, &qword_100E6D800);
      swift_storeEnumTagMultiPayload();
      sub_100337B6C();
      sub_100337C78();
      uint64_t v62 = (uint64_t)v121;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v62, v128, &qword_100E6D7E8);
      swift_storeEnumTagMultiPayload();
      sub_100337AF0();
      sub_100337D84();
      _ConditionalContent<>.init(storage:)();
      sub_100178110(v62, &qword_100E6D7E8);
      uint64_t v63 = v61;
      return sub_100178110(v63, v60);
    }
    v50(v39, v36);
    v50(v42, v36);
  }
  if (sub_1003357B8())
  {
    swift_bridgeObjectRetain();
    static HorizontalAlignment.leading.getter();
    swift_beginAccess();
    sub_10052E620();
    v135 = _swiftEmptyArrayStorage;
    sub_100337AA8(&qword_100E6D870, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
    sub_10017DF08(&qword_100E6D878);
    sub_1001246C8(&qword_100E6D880, &qword_100E6D878);
    uint64_t v64 = dispatch thunk of SetAlgebra.init<A>(_:)();
    __chkstk_darwin(v64);
    sub_10017DF08(&qword_100E6D888);
    sub_100337E98();
    unint64_t v65 = v98;
    LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)();
    uint64_t v66 = v123;
    static AccessibilityChildBehavior.contain.getter();
    uint64_t v67 = sub_1001246C8(&qword_100E6D860, &qword_100E6D7C0);
    unint64_t v68 = v104;
    uint64_t v69 = v106;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v66, v125);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v65, v69);
    uint64_t v70 = a1[2];
    v135 = (void *)a1[1];
    uint64_t v136 = v70;
    uint64_t v131 = v69;
    uint64_t v132 = v67;
    swift_getOpaqueTypeConformance2();
    sub_10014A85C();
    uint64_t v71 = (uint64_t)v100;
    uint64_t v72 = v108;
    View.accessibilityLabel<A>(_:)();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v68, v72);
    uint64_t v73 = (uint64_t)v99;
    ModifiedContent<>.accessibilityRespondsToUserInteraction(_:)();
    uint64_t v60 = &qword_100E6D7D0;
    sub_100178110(v71, &qword_100E6D7D0);
    uint64_t v74 = v109;
    sub_10024D364(v73, v109, &qword_100E6D7D0);
    sub_10006DF38(v74, v120, &qword_100E6D7D0);
    swift_storeEnumTagMultiPayload();
    sub_100337B6C();
    sub_100337C78();
    uint64_t v75 = (uint64_t)v121;
    _ConditionalContent<>.init(storage:)();
    sub_10006DF38(v75, v128, &qword_100E6D7E8);
    swift_storeEnumTagMultiPayload();
    sub_100337AF0();
    sub_100337D84();
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v75, &qword_100E6D7E8);
    uint64_t v63 = v74;
  }
  else
  {
    uint64_t v76 = static VerticalAlignment.center.getter();
    uint64_t v77 = (uint64_t)v110;
    *char v110 = v76;
    *(void *)(v77 + 8) = 0;
    *(unsigned char *)(v77 + 16) = 0;
    sub_10017DF08(&qword_100E6D808);
    uint64_t v133 = *a1;
    uint64_t v78 = v105;
    sub_100337FD0((uint64_t)a1, v105, (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
    unint64_t v79 = (*(unsigned __int8 *)(v101 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    uint64_t v80 = swift_allocObject();
    sub_100338030(v78, v80 + v79, (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E6D810);
    sub_10017DF08(&qword_100E6D818);
    sub_1001246C8(&qword_100E6D820, &qword_100E6D810);
    sub_1001246C8(&qword_100E6D828, &qword_100E6D818);
    sub_100337AA8(&qword_100E6D830, (void (*)(uint64_t))type metadata accessor for ConditionDetailLegend);
    ForEach<>.init(_:content:)();
    uint64_t v81 = v123;
    static AccessibilityChildBehavior.contain.getter();
    uint64_t v82 = sub_1001246C8(&qword_100E6D838, &qword_100E6D7A8);
    uint64_t v83 = v113;
    uint64_t v84 = (void *)v114;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v81, v125);
    sub_100178110(v77, &qword_100E6D7A8);
    uint64_t v85 = a1[2];
    uint64_t v133 = a1[1];
    uint64_t v134 = v85;
    v135 = v84;
    uint64_t v136 = v82;
    swift_getOpaqueTypeConformance2();
    sub_10014A85C();
    uint64_t v86 = (uint64_t)v112;
    uint64_t v87 = v116;
    View.accessibilityLabel<A>(_:)();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v83, v87);
    uint64_t v88 = (uint64_t)v111;
    ModifiedContent<>.accessibilityRespondsToUserInteraction(_:)();
    uint64_t v60 = &qword_100E6D7B8;
    sub_100178110(v86, &qword_100E6D7B8);
    uint64_t v89 = v117;
    sub_10024D364(v88, v117, &qword_100E6D7B8);
    sub_10006DF38(v89, v128, &qword_100E6D7B8);
    swift_storeEnumTagMultiPayload();
    sub_100337AF0();
    sub_100337D84();
    _ConditionalContent<>.init(storage:)();
    uint64_t v63 = v89;
  }
  return sub_100178110(v63, v60);
}

uint64_t sub_10033576C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_10017DF08(&qword_100E6D8D0);
  return sub_100335A04(a1, a2 + *(int *)(v4 + 44));
}

BOOL sub_1003357B8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MeasuredConditionDetailLegendView(0) + 32));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (double *)(v1 + 32);
    double v4 = 0.0;
    uint64_t v5 = v2;
    do
    {
      double v6 = *v3++;
      double v4 = v4 + v6;
      --v5;
    }
    while (v5);
  }
  else
  {
    double v4 = 0.0;
  }
  double v7 = (double)(v2 - 1) * 8.0 + v4;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  return v9 < v7;
}

uint64_t sub_100335868()
{
  return Section<>.init(content:)();
}

uint64_t sub_1003358D0()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100335A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LegendView(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  double v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - v9;
  sub_100337FD0(a1, (uint64_t)v7, (void (*)(void))type metadata accessor for ConditionDetailLegend);
  uint64_t v11 = (uint64_t *)&v7[*(int *)(v5 + 28)];
  *uint64_t v11 = swift_getKeyPath();
  sub_10017DF08(&qword_100E6D8D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (uint64_t *)&v7[*(int *)(v5 + 32)];
  *uint64_t v12 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  sub_100338030((uint64_t)v7, (uint64_t)v10, (void (*)(void))type metadata accessor for LegendView);
  sub_100337FD0((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for LegendView);
  sub_100337FD0((uint64_t)v7, a2, (void (*)(void))type metadata accessor for LegendView);
  uint64_t v13 = a2 + *(int *)(sub_10017DF08(&qword_100E6D8E0) + 48);
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  sub_10033808C((uint64_t)v10, (void (*)(void))type metadata accessor for LegendView);
  return sub_10033808C((uint64_t)v7, (void (*)(void))type metadata accessor for LegendView);
}

uint64_t sub_100335BCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v58 = a3;
  uint64_t v4 = type metadata accessor for MeasuredConditionDetailLegendView(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v57 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for ConditionDetailLegend(0);
  __chkstk_darwin(v59);
  uint64_t v55 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6D8E8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6D8F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v54 = (char **)((char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v53 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = type metadata accessor for LegendView(0);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v53 - v24;
  sub_100337FD0(a1, (uint64_t)v22, (void (*)(void))type metadata accessor for ConditionDetailLegend);
  uint64_t v26 = (uint64_t *)&v22[*(int *)(v20 + 28)];
  *uint64_t v26 = swift_getKeyPath();
  sub_10017DF08(&qword_100E6D8D8);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = (uint64_t *)&v22[*(int *)(v20 + 32)];
  *uint64_t v27 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  uint64_t v28 = v59;
  swift_storeEnumTagMultiPayload();
  uint64_t v56 = v25;
  sub_100338030((uint64_t)v22, (uint64_t)v25, (void (*)(void))type metadata accessor for LegendView);
  uint64_t v29 = a1;
  uint64_t v30 = (uint64_t)v15;
  sub_100337FD0(v29, (uint64_t)v18, (void (*)(void))type metadata accessor for ConditionDetailLegend);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v28);
  uint64_t v31 = (uint64_t)v10;
  sub_100304178(*v60, (uint64_t)v15);
  uint64_t v32 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10006DF38((uint64_t)v18, (uint64_t)v10, &qword_100E6D8F0);
  sub_10006DF38((uint64_t)v15, v32, &qword_100E6D8F0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v28) != 1)
  {
    uint64_t v53 = v10;
    uint64_t v39 = (uint64_t)v10;
    uint64_t v41 = v54;
    uint64_t v40 = v55;
    sub_10006DF38(v39, (uint64_t)v54, &qword_100E6D8F0);
    if (_s7Weather24LocationCompositionStateOwet_0(v32, 1, v28) == 1)
    {
      uint64_t v42 = &qword_100E6D8E8;
    }
    else
    {
      sub_100338030(v32, (uint64_t)v40, (void (*)(void))type metadata accessor for ConditionDetailLegend);
      BOOL v43 = *v41 == *v40 && v41[1] == v40[1];
      if (v43 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        BOOL v44 = v41[2] == v40[2] && v41[3] == v40[3];
        if (v44 || (_stringCompareWithSmolCheck(_:_:expecting:)())
          && (sub_100292E80((uint64_t)v41 + *(int *)(v28 + 24), (uint64_t)v40 + *(int *)(v28 + 24)) & 1) != 0)
        {
          uint64_t v45 = *(int *)(v28 + 28);
          uint64_t v46 = *(void *)((char *)v41 + v45);
          uint64_t v47 = *(void *)((char *)v41 + v45 + 8);
          uint64_t v48 = (void *)((char *)v40 + v45);
          BOOL v49 = v46 == *v48 && v47 == v48[1];
          uint64_t v35 = (uint64_t)v56;
          uint64_t v34 = (uint64_t)v57;
          if (v49)
          {
            sub_10033808C((uint64_t)v40, (void (*)(void))type metadata accessor for ConditionDetailLegend);
            sub_100178110(v30, &qword_100E6D8F0);
            sub_100178110((uint64_t)v18, &qword_100E6D8F0);
            sub_10033808C((uint64_t)v41, (void (*)(void))type metadata accessor for ConditionDetailLegend);
            uint64_t v31 = (uint64_t)v53;
            goto LABEL_3;
          }
          char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_10033808C((uint64_t)v40, (void (*)(void))type metadata accessor for ConditionDetailLegend);
          sub_100178110(v30, &qword_100E6D8F0);
          sub_100178110((uint64_t)v18, &qword_100E6D8F0);
          sub_10033808C((uint64_t)v41, (void (*)(void))type metadata accessor for ConditionDetailLegend);
          sub_100178110((uint64_t)v53, &qword_100E6D8F0);
          sub_100337FD0((uint64_t)v60, v34, (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
          uint64_t v36 = v58;
          if (v50) {
            goto LABEL_4;
          }
LABEL_28:
          sub_10033808C(v34, (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
          char v38 = 0;
          char v37 = 1;
          goto LABEL_29;
        }
      }
      sub_10033808C((uint64_t)v40, (void (*)(void))type metadata accessor for ConditionDetailLegend);
      uint64_t v42 = &qword_100E6D8F0;
    }
    uint64_t v34 = (uint64_t)v57;
    uint64_t v36 = v58;
    uint64_t v35 = (uint64_t)v56;
    sub_100178110(v30, &qword_100E6D8F0);
    sub_100178110((uint64_t)v18, &qword_100E6D8F0);
    sub_10033808C((uint64_t)v41, (void (*)(void))type metadata accessor for ConditionDetailLegend);
    uint64_t v31 = (uint64_t)v53;
LABEL_27:
    sub_100178110(v31, v42);
    sub_100337FD0((uint64_t)v60, v34, (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
    goto LABEL_28;
  }
  sub_100178110((uint64_t)v15, &qword_100E6D8F0);
  sub_100178110((uint64_t)v18, &qword_100E6D8F0);
  int v33 = _s7Weather24LocationCompositionStateOwet_0(v32, 1, v28);
  uint64_t v35 = (uint64_t)v56;
  uint64_t v34 = (uint64_t)v57;
  if (v33 != 1)
  {
    uint64_t v42 = &qword_100E6D8E8;
    uint64_t v36 = v58;
    goto LABEL_27;
  }
LABEL_3:
  sub_100178110(v31, &qword_100E6D8F0);
  sub_100337FD0((uint64_t)v60, v34, (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
  uint64_t v36 = v58;
LABEL_4:
  char v37 = *(unsigned char *)(v34 + 24);
  sub_10033808C(v34, (void (*)(void))type metadata accessor for MeasuredConditionDetailLegendView);
  char v38 = v37 ^ 1;
LABEL_29:
  sub_100337FD0(v35, (uint64_t)v22, (void (*)(void))type metadata accessor for LegendView);
  sub_100337FD0((uint64_t)v22, v36, (void (*)(void))type metadata accessor for LegendView);
  uint64_t v51 = v36 + *(int *)(sub_10017DF08(&qword_100E6D8F8) + 48);
  *(void *)uint64_t v51 = 0;
  *(unsigned char *)(v51 + 8) = v37;
  *(unsigned char *)(v51 + 9) = v38;
  sub_10033808C(v35, (void (*)(void))type metadata accessor for LegendView);
  return sub_10033808C((uint64_t)v22, (void (*)(void))type metadata accessor for LegendView);
}

uint64_t sub_1003362CC(double a1, double a2, double a3, double a4)
{
  return State.wrappedValue.setter();
}

double sub_100336328@<D0>(_OWORD *a1@<X8>)
{
  BOOL v43 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E6DA28);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RedactionReasons();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = type metadata accessor for ConditionDetailLegendForeground(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for ConditionDetailLegend(0);
  sub_100337FD0(v1 + *(int *)(v18 + 24), (uint64_t)v17, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100338030((uint64_t)v17, (uint64_t)v7, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground.LegendGradient);
    uint64_t v19 = static Alignment.center.getter();
    uint64_t v21 = v20;
    uint64_t v22 = Image.init(systemName:)();
    type metadata accessor for LegendView(0);
    sub_10014BB38();
    uint64_t v23 = type metadata accessor for ColorSchemeContrast();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v23);
    DetailChartGradientModel.linearGradient(minValue:maxValue:colorSchemeContrast:)();
    int64x2_t v42 = v58;
    long long v41 = v59;
    uint64_t v24 = v60;
    sub_100178110((uint64_t)v4, &qword_100E6DA28);
    uint64_t v25 = *(void *)&v7[*(int *)(v5 + 24)];
    uint64_t v44 = v19;
    uint64_t v45 = v21;
    uint64_t v46 = v22;
    int64x2_t v47 = v42;
    long long v48 = v41;
    uint64_t v49 = v24;
    uint64_t v50 = v25;
    char v51 = 1;
    sub_10017DF08(&qword_100E6DA30);
    sub_10017DF08(&qword_100E6DA38);
    sub_1003396FC();
    sub_1001246C8(&qword_100E6DA68, &qword_100E6DA38);
    _ConditionalContent<>.init(storage:)();
    sub_10033808C((uint64_t)v7, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground.LegendGradient);
  }
  else
  {
    uint64_t v26 = *v17;
    uint64_t v27 = Image.init(systemName:)();
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    v42.i64[0] = static Alignment.center.getter();
    uint64_t v30 = v29;
    type metadata accessor for LegendView(0);
    sub_1005D1FDC();
    static RedactionReasons.placeholder.getter();
    sub_100337AA8(&qword_100E6DA70, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    char v31 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v9 + 8);
    v32(v11, v8);
    v32(v14, v8);
    int64x2_t v33 = 0uLL;
    if (v31)
    {
      swift_retain();
      int64x2_t v33 = vdupq_n_s64(0x100uLL);
      v33.i64[0] = v26;
    }
    uint64_t v44 = v27;
    uint64_t v45 = KeyPath;
    uint64_t v46 = v26;
    int64x2_t v47 = v33;
    *(void *)&long long v48 = v42.i64[0];
    *((void *)&v48 + 1) = v30;
    uint64_t v50 = 0;
    uint64_t v49 = 0;
    char v51 = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017DF08(&qword_100E6DA30);
    sub_10017DF08(&qword_100E6DA38);
    sub_1003396FC();
    sub_1001246C8(&qword_100E6DA68, &qword_100E6DA38);
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release_n();
  }
  double result = *(double *)&v52;
  long long v35 = v53;
  long long v36 = v54;
  long long v37 = v55;
  uint64_t v38 = v56;
  char v39 = v57;
  uint64_t v40 = v43;
  *BOOL v43 = v52;
  v40[1] = v35;
  v40[2] = v36;
  v40[3] = v37;
  *((void *)v40 + 8) = v38;
  *((unsigned char *)v40 + 72) = v39;
  return result;
}

uint64_t sub_100336914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v2 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E6D9F8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  uint64_t v43 = v6;
  __chkstk_darwin(v5);
  long long v37 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08(&qword_100E6DA00);
  __chkstk_darwin(v44);
  uint64_t v38 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v41 = (char *)&v32 - v10;
  swift_beginAccess();
  double v11 = sub_10052E620();
  uint64_t v12 = static VerticalAlignment.center.getter();
  sub_100336D20(v1, (uint64_t)__dst);
  long long v34 = __dst[1];
  long long v35 = __dst[0];
  long long v32 = __dst[3];
  long long v33 = __dst[2];
  uint64_t v13 = *(void *)&__dst[4];
  char v14 = BYTE8(__dst[4]);
  long long v15 = __dst[5];
  char v16 = __dst[6];
  uint64_t v17 = *((void *)&__dst[6] + 1);
  char v51 = 0;
  char v50 = BYTE8(__dst[4]);
  char v49 = __dst[6];
  swift_beginAccess();
  uint64_t v18 = sub_10052E5D8();
  swift_endAccess();
  uint64_t KeyPath = swift_getKeyPath();
  v48[0] = v12;
  *(double *)&v48[1] = v11;
  LOBYTE(v48[2]) = 0;
  *(_OWORD *)&v48[3] = v35;
  *(_OWORD *)&v48[5] = v34;
  *(_OWORD *)&v48[7] = v33;
  *(_OWORD *)&v48[9] = v32;
  v48[11] = v13;
  LOBYTE(v48[12]) = v14;
  *(_OWORD *)&v48[13] = v15;
  LOBYTE(v48[15]) = v16;
  v48[16] = v17;
  v48[17] = KeyPath;
  v48[18] = v18;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v20 = sub_10017DF08(&qword_100E6DA08);
  unint64_t v21 = sub_100339478();
  uint64_t v22 = v37;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v40);
  memcpy(__dst, v48, 0x98uLL);
  sub_10033953C((uint64_t)__dst);
  uint64_t v23 = *(void *)(v36 + 24);
  uint64_t v24 = v36;
  v48[0] = *(void *)(v36 + 16);
  v48[1] = v23;
  uint64_t v46 = v20;
  unint64_t v47 = v21;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  uint64_t v25 = (uint64_t)v38;
  uint64_t v26 = v42;
  View.accessibilityLabel<A>(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v26);
  uint64_t v27 = (uint64_t *)(v24 + *(int *)(type metadata accessor for ConditionDetailLegend(0) + 28));
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  v48[0] = v29;
  v48[1] = v28;
  uint64_t v30 = (uint64_t)v41;
  ModifiedContent<>.accessibilityValue<A>(_:)();
  sub_100178110(v25, &qword_100E6DA00);
  ModifiedContent<>.accessibilityRespondsToUserInteraction(_:)();
  return sub_100178110(v30, &qword_100E6DA00);
}

uint64_t sub_100336D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100336328(&v28);
  uint64_t v23 = *((void *)&v28 + 1);
  uint64_t v24 = v28;
  uint64_t v21 = v30;
  uint64_t v22 = v29;
  uint64_t v19 = v32;
  uint64_t v20 = v31;
  uint64_t v26 = v34;
  uint64_t v27 = v33;
  uint64_t v25 = v35;
  char v18 = v36;
  uint64_t v4 = *(void *)(a1 + 24);
  *(void *)&long long v28 = *(void *)(a1 + 16);
  *((void *)&v28 + 1) = v4;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  static Color.secondary.getter();
  uint64_t v10 = Text.foregroundColor(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  swift_release();
  sub_100191924(v5, v7, v9);
  swift_bridgeObjectRelease();
  LOBYTE(v28) = v18;
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v27;
  *(void *)(a2 + 56) = v26;
  *(void *)(a2 + 64) = v25;
  *(unsigned char *)(a2 + 72) = v18;
  *(void *)(a2 + 80) = v10;
  *(void *)(a2 + 88) = v12;
  *(unsigned char *)(a2 + 96) = v14 & 1;
  *(void *)(a2 + 104) = v16;
  sub_100339668(v24, v23, v22, v21, v20, v19, v27, v26, v25, v18);
  sub_100190CC4(v10, v12, v14 & 1);
  swift_bridgeObjectRetain();
  sub_100191924(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  return sub_1003395DC(v24, v23, v22, v21, v20, v19, v27, v26, v25, v28);
}

uint64_t sub_100336F10(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    *(void *)(a1 + 48) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(void *)(a1 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100337080(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100337150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100337278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_100178110(a1 + v6, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003373F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1003374F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_100178110(a1 + v7, &qword_100E63BC8);
    uint64_t v10 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100337650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100337664);
}

uint64_t sub_100337664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100179FCC();
  }
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA530);
  uint64_t v8 = a1 + *(int *)(a3 + 28);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_1003376E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003376F4);
}

void sub_1003376F4()
{
  sub_100163298();
  if (v3)
  {
    *uint64_t v1 = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v6 = (uint64_t)v1 + *(int *)(v4 + 28);
    _s7Weather24LocationCompositionStateOwst_0(v6, v0, v0, v5);
  }
}

void sub_10033776C()
{
  sub_10002086C(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100337838()
{
  return sub_100337AA8(&qword_100E6D778, (void (*)(uint64_t))type metadata accessor for MeasuredConditionDetailLegendView);
}

uint64_t sub_100337880()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003378A0(double a1, double a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for MeasuredConditionDetailLegendView(0);
  sub_1001627C0(v8);

  return sub_1003362CC(a1, a2, a3, a4);
}

uint64_t sub_100337910()
{
  type metadata accessor for CoordinateSpace();
  sub_100162E4C();
  sub_100162F0C();
  v0();

  return swift_deallocObject();
}

uint64_t sub_100337994()
{
  uint64_t v0 = type metadata accessor for CoordinateSpace();
  sub_1001627C0(v0);
  sub_10017F930();

  return sub_1008E49CC(v1);
}

uint64_t sub_1003379E4(double *a1, uint64_t (*a2)(double, double, double, double))
{
  return a2(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_100337A14()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100337A4C(double *a1)
{
  return sub_1003379E4(a1, *(uint64_t (**)(double, double, double, double))(v1 + 16));
}

uint64_t sub_100337A58()
{
  uint64_t v0 = type metadata accessor for MeasuredConditionDetailLegendView(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_10017F930();

  return sub_100335BCC(v1, v2, v3);
}

uint64_t sub_100337AA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100337AF0()
{
  unint64_t result = qword_100E6D840;
  if (!qword_100E6D840)
  {
    sub_10018C6DC(&qword_100E6D7E8);
    sub_100337B6C();
    sub_100337C78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D840);
  }
  return result;
}

unint64_t sub_100337B6C()
{
  unint64_t result = qword_100E6D848;
  if (!qword_100E6D848)
  {
    sub_10018C6DC(&qword_100E6D800);
    sub_10018C6DC(&qword_100E6D7F0);
    sub_1001246C8(&qword_100E6D850, &qword_100E6D7F0);
    swift_getOpaqueTypeConformance2();
    sub_100337AA8((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D848);
  }
  return result;
}

unint64_t sub_100337C78()
{
  unint64_t result = qword_100E6D858;
  if (!qword_100E6D858)
  {
    sub_10018C6DC(&qword_100E6D7D0);
    sub_10018C6DC(&qword_100E6D7C0);
    sub_1001246C8(&qword_100E6D860, &qword_100E6D7C0);
    swift_getOpaqueTypeConformance2();
    sub_100337AA8((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D858);
  }
  return result;
}

unint64_t sub_100337D84()
{
  unint64_t result = qword_100E6D868;
  if (!qword_100E6D868)
  {
    sub_10018C6DC(&qword_100E6D7B8);
    sub_10018C6DC(&qword_100E6D7A8);
    sub_1001246C8(&qword_100E6D838, &qword_100E6D7A8);
    swift_getOpaqueTypeConformance2();
    sub_100337AA8((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D868);
  }
  return result;
}

uint64_t sub_100337E90()
{
  return sub_100335868();
}

unint64_t sub_100337E98()
{
  unint64_t result = qword_100E6D890;
  if (!qword_100E6D890)
  {
    sub_10018C6DC(&qword_100E6D888);
    sub_100337F18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D890);
  }
  return result;
}

unint64_t sub_100337F18()
{
  unint64_t result = qword_100E6D898;
  if (!qword_100E6D898)
  {
    sub_10018C6DC(&qword_100E6D8A0);
    sub_1001246C8(&qword_100E6D8A8, &qword_100E6D8B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D898);
  }
  return result;
}

uint64_t type metadata accessor for LegendView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E6D968);
}

uint64_t sub_100337FD0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100338030(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100338084()
{
  return sub_1003358D0();
}

uint64_t sub_10033808C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t *sub_1003380E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = type metadata accessor for ConditionDetailLegend(0);
    uint64_t v10 = *(int *)(v9 + 24);
    uint64_t v11 = (uint64_t *)((char *)v4 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    type metadata accessor for ConditionDetailLegendForeground(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      uint64_t v14 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)v11 + *(int *)(v14 + 20)) = *(_OWORD *)((char *)v12 + *(int *)(v14 + 20));
      *(void *)((char *)v11 + *(int *)(v14 + 24)) = *(void *)((char *)v12 + *(int *)(v14 + 24));
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(v9 + 28);
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    char v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = *(int *)(a3 + 20);
    uint64_t v21 = (uint64_t *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E6D8D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = *(int *)(a3 + 24);
    uint64_t v25 = (uint64_t *)((char *)v4 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100338394(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ConditionDetailLegend(0) + 24);
  type metadata accessor for ConditionDetailLegendForeground(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E6D8D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for RedactionReasons();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ColorSchemeContrast();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100338550(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = type metadata accessor for ConditionDetailLegend(0);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  type metadata accessor for ConditionDetailLegendForeground(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)((char *)v10 + *(int *)(v13 + 20)) = *(_OWORD *)((char *)v11 + *(int *)(v13 + 20));
    *(void *)((char *)v10 + *(int *)(v13 + 24)) = *(void *)((char *)v11 + *(int *)(v13 + 24));
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(int *)(v8 + 28);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E6D8D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *uint64_t v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *uint64_t v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1003387AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for ConditionDetailLegend(0);
  uint64_t v7 = v6;
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    sub_10033808C((uint64_t)a1 + v8, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
    type metadata accessor for ConditionDetailLegendForeground(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      uint64_t v12 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)v9 + *(int *)(v12 + 20)) = *(_OWORD *)((char *)v10 + *(int *)(v12 + 20));
      *(void *)((char *)v9 + *(int *)(v12 + 24)) = *(void *)((char *)v10 + *(int *)(v12 + 24));
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = *(int *)(v7 + 28);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    sub_100178110((uint64_t)a1 + v16, &qword_100E6D8D8);
    sub_10017DF08(&qword_100E6D8D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = *(int *)(a3 + 24);
    uint64_t v21 = (void *)((char *)a1 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    sub_100178110((uint64_t)a1 + v20, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100338A80(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = type metadata accessor for ConditionDetailLegend(0);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ConditionDetailLegendForeground(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    uint64_t v13 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)&v9[*(int *)(v13 + 20)] = *(_OWORD *)&v10[*(int *)(v13 + 20)];
    *(void *)&v9[*(int *)(v13 + 24)] = *(void *)&v10[*(int *)(v13 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(v7 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 28));
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_10017DF08(&qword_100E6D8D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for RedactionReasons();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  return a1;
}

void *sub_100338CE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for ConditionDetailLegend(0);
  uint64_t v9 = v8;
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(v8 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    sub_10033808C((uint64_t)a1 + v10, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
    uint64_t v13 = type metadata accessor for ConditionDetailLegendForeground(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      uint64_t v15 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)&v11[*(int *)(v15 + 20)] = *(_OWORD *)&v12[*(int *)(v15 + 20)];
      *(void *)&v11[*(int *)(v15 + 24)] = *(void *)&v12[*(int *)(v15 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v16 = *(int *)(v9 + 28);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v21 = *(int *)(a3 + 20);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    sub_100178110((uint64_t)a1 + v21, &qword_100E6D8D8);
    uint64_t v24 = sub_10017DF08(&qword_100E6D8D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = type metadata accessor for RedactionReasons();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    uint64_t v26 = *(int *)(a3 + 24);
    uint64_t v27 = (char *)a1 + v26;
    long long v28 = (char *)a2 + v26;
    sub_100178110((uint64_t)a1 + v26, &qword_100E66E50);
    uint64_t v29 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100338FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100338FC8);
}

uint64_t sub_100338FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ConditionDetailLegend(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6D900);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E6D908);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100339070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100339084);
}

uint64_t sub_100339084(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ConditionDetailLegend(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6D900);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E6D908);
      uint64_t v14 = *(int *)(a4 + 24);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_100339134()
{
  type metadata accessor for ConditionDetailLegend(319);
  if (v0 <= 0x3F)
  {
    sub_10002086C(319, &qword_100E6D978, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    if (v1 <= 0x3F)
    {
      sub_10002086C(319, (unint64_t *)&qword_100E6D980, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unint64_t sub_100339274()
{
  unint64_t result = qword_100E6D9B8;
  if (!qword_100E6D9B8)
  {
    sub_10018C6DC(&qword_100E6D7A0);
    sub_100339314();
    sub_1001246C8(&qword_100E6D9E8, &qword_100E6D9F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D9B8);
  }
  return result;
}

unint64_t sub_100339314()
{
  unint64_t result = qword_100E6D9C0;
  if (!qword_100E6D9C0)
  {
    sub_10018C6DC(&qword_100E6D780);
    sub_1003393B4();
    sub_1001246C8(&qword_100E6D9D8, &qword_100E6D9E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D9C0);
  }
  return result;
}

unint64_t sub_1003393B4()
{
  unint64_t result = qword_100E6D9C8;
  if (!qword_100E6D9C8)
  {
    sub_10018C6DC(&qword_100E6D790);
    sub_1001246C8(&qword_100E6D9D0, &qword_100E6D788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6D9C8);
  }
  return result;
}

uint64_t sub_100339454()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100339478()
{
  unint64_t result = qword_100E6DA10;
  if (!qword_100E6DA10)
  {
    sub_10018C6DC(&qword_100E6DA08);
    sub_1001246C8(&qword_100E6DA18, &qword_100E6DA20);
    sub_1001246C8(&qword_100E65218, &qword_100E65220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DA10);
  }
  return result;
}

uint64_t sub_10033953C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_1003395DC(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1003395DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_100339668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
}

unint64_t sub_1003396FC()
{
  unint64_t result = qword_100E6DA40;
  if (!qword_100E6DA40)
  {
    sub_10018C6DC(&qword_100E6DA30);
    sub_10033979C();
    sub_1001246C8(&qword_100E6DA58, &qword_100E6DA60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DA40);
  }
  return result;
}

unint64_t sub_10033979C()
{
  unint64_t result = qword_100E6DA48;
  if (!qword_100E6DA48)
  {
    sub_10018C6DC(&qword_100E6DA50);
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DA48);
  }
  return result;
}

unint64_t sub_100339848()
{
  unint64_t result = qword_100E6DA78;
  if (!qword_100E6DA78)
  {
    sub_10018C6DC(&qword_100E6DA00);
    sub_10018C6DC(&qword_100E6DA08);
    sub_100339478();
    swift_getOpaqueTypeConformance2();
    sub_100337AA8((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DA78);
  }
  return result;
}

uint64_t LocationSearchEntityFromStringResolver.resolve(from:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a2;
  v3[21] = a3;
  v3[19] = a1;
  sub_10017DF08(&qword_100E6B3E8);
  v3[22] = swift_task_alloc();
  uint64_t v4 = sub_10017DF08(&qword_100E6B3F0);
  v3[23] = v4;
  sub_100164920(v4);
  v3[24] = v5;
  v3[25] = swift_task_alloc();
  uint64_t v6 = sub_10017DF08(&qword_100E6B3F8);
  v3[26] = v6;
  sub_100164920(v6);
  v3[27] = v7;
  v3[28] = swift_task_alloc();
  return _swift_task_switch(sub_100339A38, 0, 0);
}

uint64_t sub_100339A38()
{
  sub_10017DF08(&qword_100E6B400);
  Regex.init(_regexString:version:)();
  Regex.wholeMatch(in:)();
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 184);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
    sub_1002F049C(v2);
LABEL_3:
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    char v7 = 0;
    goto LABEL_4;
  }
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 192) + 32))(*(void *)(v0 + 200), v2, v1);
  swift_getKeyPath();
  Regex.Match.subscript.getter();
  swift_release();
  uint64_t v33 = Double.init(_:)();
  char v12 = v11;
  swift_getKeyPath();
  Regex.Match.subscript.getter();
  swift_release();
  uint64_t v13 = Double.init(_:)();
  char v15 = v14;
  swift_getKeyPath();
  Regex.Match.subscript.getter();
  swift_release();
  if (*(void *)(v0 + 144))
  {
    uint64_t v16 = static String._fromSubstring(_:)();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  char v19 = v12 | v15;
  uint64_t v20 = *(void *)(v0 + 216);
  uint64_t v21 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v22 = *(void *)(v0 + 208);
  uint64_t v25 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  if (v19)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    goto LABEL_3;
  }
  uint64_t v32 = *(void *)(v0 + 208);
  uint64_t v26 = *(void *)(v0 + 168);
  uint64_t v31 = *(void *)(v0 + 160);
  double v27 = *(double *)&v33;
  sub_100339DE4();
  uint64_t v34 = v21;
  id v28 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v27 longitude:*(double *)&v13];
  swift_bridgeObjectRetain();
  id v29 = sub_1002F04FC(v28, v16, v18, 0);
  swift_bridgeObjectRetain();
  LocationSearchEntity.init(id:name:placemark:isLocal:)(v31, v26, v29, 0, v0 + 16);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v30 = v23;
  char v7 = *(unsigned char *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v30, v25);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v34, v32);
LABEL_4:
  uint64_t v8 = *(void *)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(void *)uint64_t v8 = v3;
  *(void *)(v8 + 8) = v4;
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v6;
  *(unsigned char *)(v8 + 32) = v7;
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

unint64_t sub_100339DE4()
{
  unint64_t result = qword_100E6B408;
  if (!qword_100E6B408)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E6B408);
  }
  return result;
}

Swift::Int LocationSearchEntityFromStringResolver.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t sub_100339E5C(uint64_t a1, uint64_t *a2)
{
  *(void *)(v2 + 56) = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 64) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100339F0C;
  return LocationSearchEntityFromStringResolver.resolve(from:context:)(v2 + 16, v3, v4);
}

uint64_t sub_100339F0C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0) {
    sub_10033A154(v2 + 16, *(void *)(v2 + 56));
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

Swift::Int sub_10033A020()
{
  return Hasher._finalize()();
}

unint64_t sub_10033A058()
{
  unint64_t result = qword_100E6DA88;
  if (!qword_100E6DA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DA88);
  }
  return result;
}

unint64_t sub_10033A0A8()
{
  unint64_t result = qword_100E6DA90;
  if (!qword_100E6DA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DA90);
  }
  return result;
}

unint64_t sub_10033A0F8()
{
  unint64_t result = qword_100E6DAA0;
  if (!qword_100E6DAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DAA0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSearchEntityFromStringResolver()
{
  return &type metadata for LocationSearchEntityFromStringResolver;
}

uint64_t sub_10033A154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6DAA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall WeatherConditionBackgroundManager.windowDidLoseFocus()()
{
  if (WeatherConditionBackgroundManager.isVfxSceneLoaded.getter())
  {
    if (qword_100E627D0 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_1002102B0(v0, (uint64_t)qword_100F51E88);
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)sub_100163DC4();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Window did lose focus. VFXScene is loaded and will be paused.", v3, 2u);
      sub_100162EE0();
    }

    WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
  }
  else
  {
    if (qword_100E627D0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1002102B0(v4, (uint64_t)qword_100F51E88);
    oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      *(_WORD *)sub_100163DC4() = 0;
      sub_100187BE4((void *)&_mh_execute_header, v6, v7, "Window did lose focus. VFXScene is not loaded yet.", v8, v9, v10, v11, v12, oslog);
      sub_100162EE0();
    }
  }
}

uint64_t sub_10033A39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    uint64_t v6 = *(void *)a1;
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = sub_10019E868();
    sub_100147E1C(v10, v11, v12, v13);
    uint64_t v28 = v6;
    sub_100147E1C(v6, v7, v8, v4);
    LOBYTE(v39) = v9 & 1;
    LOBYTE(v6) = static Text.== infix(_:_:)();
    uint64_t v14 = sub_10019E868();
    sub_100147E60(v14, v15, v16, v17);
    sub_100147E60(v28, v7, v8, v4);
    if ((v6 & 1) == 0) {
      return 0;
    }
LABEL_6:
    sub_10033A9C8((long long *)(a1 + 32), v30);
    sub_10033A9C8((long long *)(a2 + 32), v29);
    sub_10033A9C8(v30, &v35);
    if (v38)
    {
      v31[0] = v35;
      v31[1] = v36;
      v32[0] = *(_OWORD *)v37;
      *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)&v37[9];
      sub_10033A9C8(v29, &v39);
      if ((v42 & 1) == 0) {
        return 0;
      }
      v33[0] = v39;
      v33[1] = v40;
      v34[0] = *(_OWORD *)v41;
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v41[9];
      sub_10033AAF4((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033A9E8);
      sub_10033AAF4((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033A9E8);
      BOOL v18 = sub_100888AA8((uint64_t)v31, (uint64_t)v33);
      sub_10033AAF4((uint64_t)v29, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033AB48);
      sub_10033AAF4((uint64_t)v30, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033AB48);
      if (!v18) {
        return 0;
      }
    }
    else
    {
      int v19 = v35;
      uint64_t v20 = *((void *)&v35 + 1);
      long long v22 = v36;
      double v21 = *(double *)v37;
      sub_10033A9C8(v29, &v39);
      if (v42) {
        return 0;
      }
      if (v19 != v39) {
        return 0;
      }
      double v23 = *((double *)&v40 + 1);
      double v24 = *(double *)v41;
      uint64_t v25 = v40;
      if (!sub_100BDA9E8(v20, *((uint64_t *)&v39 + 1)) || (sub_1001D4180(v22, v25) & 1) == 0) {
        return 0;
      }
      if (*((double *)&v22 + 1) != v23 || v21 != v24) {
        return 0;
      }
    }
    return 1;
  }
  if (!v5) {
    goto LABEL_6;
  }
  return 0;
}

BOOL sub_10033A5E4(long long *a1, long long *a2)
{
  sub_10033A9C8(a1, &v41);
  if ((v47 & 1) == 0)
  {
    int v18 = v41;
    uint64_t v20 = *((void *)&v41 + 1);
    uint64_t v19 = v42;
    double v21 = v43;
    double v22 = v44;
    sub_10033A9C8(a2, &v34);
    if ((v40 & 1) == 0 && v18 == v34)
    {
      double v23 = v36;
      double v24 = v37;
      uint64_t v25 = v35;
      if (sub_100BDA9E8(v20, *((uint64_t *)&v34 + 1)) && (sub_1001D4180(v19, v25) & 1) != 0 && v21 == v23 && v22 == v24) {
        return 1;
      }
    }
    return 0;
  }
  long long v4 = v41;
  uint64_t v5 = v42;
  double v6 = v43;
  uint64_t v7 = v45;
  uint64_t v8 = v46;
  sub_10033A9C8(a2, &v34);
  if (v40 != 1) {
    return 0;
  }
  uint64_t v31 = v5;
  double v32 = v6;
  uint64_t v33 = v8;
  uint64_t v9 = v34;
  uint64_t v29 = v35;
  uint64_t v30 = *((void *)&v34 + 1);
  uint64_t v10 = v38;
  uint64_t v11 = v39;
  sub_10033AAF4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033A9E8);
  sub_10033AAF4((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033A9E8);
  if ((sub_100BDA844(v4, v9) & 1) == 0)
  {
LABEL_19:
    sub_10033AAF4((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033AB48);
    sub_10033AAF4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033AB48);
    return 0;
  }
  if (v31)
  {
    sub_10017CA48();
    if (v29)
    {
      v48[0] = *((void *)&v4 + 1);
      v48[1] = v31;
      *(double *)&v48[2] = v32;
      v48[3] = v13;
      unsigned char v48[4] = v7;
      v48[5] = v33;
      char v49 = v12 & 1;
      v50[0] = v30;
      v50[1] = v29;
      v50[2] = v10;
      uint64_t v50[3] = *((void *)&v4 + 1);
      v50[4] = v10;
      v50[5] = v11;
      char v51 = v4 & 1;
      sub_10033AAA4(*((uint64_t *)&v4 + 1), v31);
      uint64_t v14 = sub_100187C04();
      sub_10033AAA4(v14, v15);
      char v28 = sub_100888C7C((uint64_t)v48, (uint64_t)v50);
      uint64_t v16 = sub_100187C04();
      sub_10033AC04(v16, v17);
      sub_10033AC04(*((uint64_t *)&v4 + 1), v31);
      sub_10033AAF4((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033AB48);
      sub_10033AAF4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033AB48);
      return (v28 & 1) != 0;
    }
    goto LABEL_18;
  }
  sub_10017CA48();
  if (v29)
  {
LABEL_18:
    sub_10033AAA4(*((uint64_t *)&v4 + 1), v31);
    sub_10033AAA4(v30, v29);
    sub_10033AC04(*((uint64_t *)&v4 + 1), v31);
    sub_10033AC04(v30, v29);
    goto LABEL_19;
  }
  sub_10033AAF4((uint64_t)a2, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033AB48);
  sub_10033AAF4((uint64_t)a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_10033AB48);
  return 1;
}

uint64_t sub_10033A924(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x5AuLL);
  memcpy(__dst, a2, 0x5AuLL);
  return sub_10033A39C((uint64_t)v4, (uint64_t)__dst) & 1;
}

BOOL sub_10033A97C(long long *a1, long long *a2)
{
  sub_10033A9C8(a1, v4);
  sub_10033A9C8(a2, v5);
  return sub_10033A5E4(v4, v5);
}

_OWORD *sub_10033A9C8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(_OWORD *)((char *)a2 + 42) = *(long long *)((char *)a1 + 42);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

uint64_t sub_10033A9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    swift_bridgeObjectRetain();
    return sub_10033AAA4(a2, a3);
  }
  else
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10033AAA4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10033AAF4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 57);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 56), v4);
  return a1;
}

uint64_t sub_10033AB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    swift_bridgeObjectRelease();
    return sub_10033AC04(a2, a3);
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10033AC04(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t destroy for ComparisonChartViewModel(uint64_t a1)
{
  return sub_10033AB48(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned __int8 *)(a1 + 56), *(unsigned char *)(a1 + 57));
}

uint64_t initializeWithCopy for ComparisonChartViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 57);
  uint64_t v11 = *(unsigned __int8 *)(a2 + 56);
  sub_10033A9E8(*(void *)a2, v4, v5, v6, v7, v8, v9, v11, v10);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 57) = v10;
  return a1;
}

uint64_t assignWithCopy for ComparisonChartViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  char v10 = *(unsigned char *)(a2 + 57);
  uint64_t v11 = *(unsigned __int8 *)(a2 + 56);
  sub_10033A9E8(*(void *)a2, v4, v5, v6, v7, v8, v9, v11, v10);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  char v19 = *(unsigned char *)(a1 + 57);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  uint64_t v20 = *(unsigned __int8 *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 57) = v10;
  sub_10033AB48(v12, v13, v14, v15, v16, v17, v18, v20, v19);
  return a1;
}

__n128 initializeWithTake for ComparisonChartViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ComparisonChartViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  char v4 = *(unsigned char *)(a2 + 56);
  char v5 = *(unsigned char *)(a2 + 57);
  uint64_t v6 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  char v13 = *(unsigned char *)(a1 + 57);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v3;
  uint64_t v15 = *(unsigned __int8 *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 57) = v5;
  sub_10033AB48(v6, v8, v7, v9, v10, v11, v12, v15, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComparisonChartViewModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 58))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 57);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComparisonChartViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 57) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10033AF24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 57);
}

uint64_t sub_10033AF2C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 57) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ComparisonChartViewModel()
{
  return &type metadata for ComparisonChartViewModel;
}

uint64_t destroy for ComparisonDetailComponentViewModel(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_100191924(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
    swift_bridgeObjectRelease();
  }
  return sub_10033AB48(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned __int8 *)(a1 + 88), *(unsigned char *)(a1 + 89));
}

uint64_t initializeWithCopy for ComparisonDetailComponentViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    char v7 = *(unsigned char *)(a2 + 16);
    sub_100190CC4(*(void *)a2, v6, v7);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  char v16 = *(unsigned char *)(a2 + 89);
  uint64_t v17 = *(unsigned __int8 *)(a2 + 88);
  sub_10033A9E8(v9, v10, v11, v12, v13, v14, v15, v17, v16);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(unsigned char *)(a1 + 88) = v17;
  *(unsigned char *)(a1 + 89) = v16;
  return a1;
}

uint64_t assignWithCopy for ComparisonDetailComponentViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      char v7 = *(unsigned char *)(a2 + 16);
      sub_100190CC4(*(void *)a2, v6, v7);
      uint64_t v8 = *(void *)a1;
      uint64_t v9 = *(void *)(a1 + 8);
      char v10 = *(unsigned char *)(a1 + 16);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 16) = v7;
      sub_100191924(v8, v9, v10);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10024ADC8(a1);
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
    }
  }
  else if (v4)
  {
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)(a2 + 8);
    char v13 = *(unsigned char *)(a2 + 16);
    sub_100190CC4(*(void *)a2, v12, v13);
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(unsigned char *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v20 = *(void *)(a2 + 64);
  uint64_t v21 = *(void *)(a2 + 72);
  uint64_t v22 = *(void *)(a2 + 80);
  char v23 = *(unsigned char *)(a2 + 89);
  uint64_t v24 = *(unsigned __int8 *)(a2 + 88);
  sub_10033A9E8(v16, v17, v18, v19, v20, v21, v22, v24, v23);
  uint64_t v25 = *(void *)(a1 + 32);
  uint64_t v26 = *(void *)(a1 + 40);
  uint64_t v27 = *(void *)(a1 + 48);
  uint64_t v28 = *(void *)(a1 + 56);
  uint64_t v29 = *(void *)(a1 + 64);
  uint64_t v30 = *(void *)(a1 + 72);
  uint64_t v31 = *(void *)(a1 + 80);
  char v32 = *(unsigned char *)(a1 + 89);
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v17;
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v22;
  uint64_t v33 = *(unsigned __int8 *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v24;
  *(unsigned char *)(a1 + 89) = v23;
  sub_10033AB48(v25, v26, v27, v28, v29, v30, v31, v33, v32);
  return a1;
}

void *initializeWithTake for ComparisonDetailComponentViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x5AuLL);
}

uint64_t assignWithTake for ComparisonDetailComponentViewModel(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 24);
  if (!v4)
  {
    sub_10024ADC8(a1);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_6;
  }
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100191924(v6, v7, v8);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 80);
  char v11 = *(unsigned char *)(a2 + 88);
  char v12 = *(unsigned char *)(a2 + 89);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  char v20 = *(unsigned char *)(a1 + 89);
  long long v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v10;
  uint64_t v22 = *(unsigned __int8 *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 89) = v12;
  sub_10033AB48(v13, v14, v15, v16, v17, v18, v19, v22, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComparisonDetailComponentViewModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 90))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComparisonDetailComponentViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 90) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 90) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonDetailComponentViewModel()
{
  return &type metadata for ComparisonDetailComponentViewModel;
}

uint64_t sub_10033B3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  long long v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v21 = v3;
    uint64_t v10 = 0;
    uint64_t v11 = *(void *)(type metadata accessor for LocationModel() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    uint64_t v14 = (void (**)(char *, uint64_t))(v7 + 8);
    while (1)
    {
      LocationModel.identifier.getter();
      uint64_t v15 = Location.Identifier.id.getter();
      uint64_t v17 = v16;
      (*v14)(v9, v23);
      if (v15 == a2 && v17 == a3)
      {
        swift_bridgeObjectRelease_n();
        return v10;
      }
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v19) {
        break;
      }
      ++v10;
      v12 += v13;
      if (v22 == v10) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

uint64_t sub_10033B5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    uint64_t v3 = 1;
    return sub_10033B5D0(a1, (uint64_t (*)(uint64_t))v3);
  }
  if (a3 == 1)
  {
    uint64_t v3 = -1;
    return sub_10033B5D0(a1, (uint64_t (*)(uint64_t))v3);
  }
  return sub_10033C3DC(a1, a2, a3);
}

uint64_t sub_10033B5D0(uint64_t a1, uint64_t (*a2)(uint64_t a1))
{
  uint64_t v125 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v124 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v5 - 8);
  uint64_t v123 = (uint64_t)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v7 - 8);
  uint64_t v122 = (uint64_t)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v9 - 8);
  uint64_t v121 = (uint64_t)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v11 - 8);
  uint64_t v120 = (uint64_t)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v13 - 8);
  uint64_t v119 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v15 - 8);
  uint64_t v118 = (uint64_t)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v17 - 8);
  uint64_t v117 = (uint64_t)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v19 - 8);
  uint64_t v116 = (uint64_t)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v21 - 8);
  uint64_t v115 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v23 - 8);
  v113 = (uint64_t *)((char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_10017DF08(&qword_100E663D0);
  __chkstk_darwin(v25 - 8);
  uint64_t v111 = (uint64_t)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for LocationModel();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v28 = (char *)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v29 - 8);
  uint64_t v105 = (uint64_t)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for LocationsState();
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v34);
  uint64_t v104 = (uint64_t)&v100 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active);
  uint64_t v126 = (uint64_t)&v100 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v100 - v38;
  uint64_t v40 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v40);
  uint64_t v42 = (uint64_t *)((char *)&v100 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v43 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v43);
  uint64_t v110 = (uint64_t)&v100 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v114 = (char *)&v100 - v46;
  __chkstk_darwin(v47);
  char v49 = (char *)&v100 - v48;
  uint64_t v108 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_100113738(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)&v100 - v48, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v112 = v43;
  sub_100113738((uint64_t)&v49[*(int *)(v43 + 20)], (uint64_t)v42, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  sub_10013EF0C((uint64_t)v49, (void (*)(void))type metadata accessor for ViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10013EF0C((uint64_t)v42, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_18:
    swift_retain();
    return a1;
  }
  uint64_t v50 = *v42;
  uint64_t v51 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  if (!*(void *)(*(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + *(int *)(v31 + 36)) + 16))
  {
    swift_release();
    goto LABEL_18;
  }
  uint64_t v103 = a1;
  uint64_t v102 = v50;
  sub_100113738(v50 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v39, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v52 = sub_1001782AC();
  uint64_t v54 = v53;
  sub_10013EF0C((uint64_t)v39, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v101 = v31;
  uint64_t v55 = *(void *)(v51 + *(int *)(v31 + 24));
  swift_bridgeObjectRetain();
  uint64_t v56 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_10033B3A8(v56, v52, v54);
  char v59 = v58;
  uint64_t result = swift_bridgeObjectRelease();
  if (v59) {
    uint64_t v61 = -1;
  }
  else {
    uint64_t v61 = v57;
  }
  uint64_t v62 = (uint64_t)v125 + v61;
  if (__OFADD__(v61, v125))
  {
    __break(1u);
  }
  else
  {
    if (v62 < 0)
    {
      uint64_t v63 = v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      uint64_t result = swift_beginAccess();
      if (*(unsigned __int8 *)(v63 + 1) - 1 <= 1)
      {
        swift_bridgeObjectRelease();
        sub_100113738(v51, (uint64_t)v33, (void (*)(void))type metadata accessor for LocationsState);
        uint64_t v64 = v105;
        sub_10013B3F0((uint64_t)v33, v105);
        sub_10013EF0C((uint64_t)v33, (void (*)(void))type metadata accessor for LocationsState);
        if (_s7Weather24LocationCompositionStateOwet_0(v64, 1, v34) == 1)
        {
          sub_1001781AC(v64, (uint64_t *)&unk_100EADD50);
          uint64_t v65 = type metadata accessor for Location.Identifier();
          uint64_t v66 = v126;
          uint64_t v67 = v126;
          uint64_t v68 = 1;
        }
        else
        {
          uint64_t v98 = v64;
          uint64_t v99 = v104;
          sub_10033CC44(v98, v104, (void (*)(void))&type metadata accessor for CurrentLocation);
          uint64_t v66 = v126;
          CurrentLocation.identifier.getter();
          sub_10013EF0C(v99, (void (*)(void))&type metadata accessor for CurrentLocation);
          uint64_t v65 = type metadata accessor for Location.Identifier();
          uint64_t v67 = v66;
          uint64_t v68 = 0;
        }
        _s7Weather24LocationCompositionStateOwst_0(v67, v68, 1, v65);
        goto LABEL_16;
      }
    }
    unint64_t v69 = *(void *)(v55 + 16);
    uint64_t v70 = v69 - 1;
    if (v62 < (uint64_t)(v69 - 1)) {
      uint64_t v70 = v62;
    }
    unint64_t v71 = v70 & ~(v70 >> 63);
    if (v71 < v69)
    {
      uint64_t v72 = v106;
      uint64_t v73 = v107;
      (*(void (**)(char *, unint64_t, uint64_t))(v106 + 16))(v28, v55+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v71, v107);
      swift_bridgeObjectRelease();
      LocationModel.identifier.getter();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v73);
      uint64_t v74 = type metadata accessor for Location.Identifier();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v74);
      uint64_t v66 = v126;
      sub_10033CC44((uint64_t)v39, v126, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
LABEL_16:
      uint64_t v75 = v111;
      sub_100113738(v66, v111, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      _s7Weather24LocationCompositionStateOwst_0(v75, 0, 1, active);
      uint64_t v76 = sub_1001CCC58(v75, 3, 2, 4, 2, 3, v102);
      sub_1001781AC(v75, &qword_100E663D0);
      uint64_t v77 = v110;
      sub_100113738(v108, v110, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v78 = (uint64_t)v113;
      uint64_t *v113 = v76;
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v40);
      uint64_t v79 = type metadata accessor for SearchViewState(0);
      uint64_t v80 = v115;
      _s7Weather24LocationCompositionStateOwst_0(v115, 1, 1, v79);
      uint64_t v81 = type metadata accessor for DisplayMetrics();
      uint64_t v82 = v116;
      _s7Weather24LocationCompositionStateOwst_0(v116, 1, 1, v81);
      uint64_t v83 = type metadata accessor for WeatherMapPresentationState(0);
      uint64_t v84 = v117;
      _s7Weather24LocationCompositionStateOwst_0(v117, 1, 1, v83);
      swift_retain();
      uint64_t v85 = (uint64_t)v114;
      sub_10011D8AC();
      sub_1001781AC(v84, &qword_100E663F8);
      sub_1001781AC(v82, &qword_100E66400);
      sub_1001781AC(v80, &qword_100E66408);
      sub_1001781AC(v78, &qword_100E66410);
      uint64_t v125 = type metadata accessor for ViewState;
      sub_10013EF0C(v77, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v86 = type metadata accessor for AppConfigurationState();
      uint64_t v87 = v118;
      _s7Weather24LocationCompositionStateOwst_0(v118, 1, 1, v86);
      uint64_t v88 = type metadata accessor for EnvironmentState();
      uint64_t v89 = v119;
      _s7Weather24LocationCompositionStateOwst_0(v119, 1, 1, v88);
      uint64_t v90 = v120;
      _s7Weather24LocationCompositionStateOwst_0(v120, 1, 1, v101);
      uint64_t v91 = type metadata accessor for NotificationsOptInState();
      uint64_t v92 = v121;
      _s7Weather24LocationCompositionStateOwst_0(v121, 1, 1, v91);
      uint64_t v93 = type metadata accessor for TimeState();
      uint64_t v94 = v122;
      _s7Weather24LocationCompositionStateOwst_0(v122, 1, 1, v93);
      uint64_t v95 = v123;
      sub_100113738(v85, v123, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0(v95, 0, 1, v112);
      uint64_t v96 = type metadata accessor for ModalViewState(0);
      uint64_t v97 = v124;
      _s7Weather24LocationCompositionStateOwst_0(v124, 1, 1, v96);
      a1 = sub_1001659F0(0, 3, v87, v89, v90, 0, 0, 0, 0, v92, v94, v95, v97, 0, 0, 0, 0, 0, 0,
             0,
             v103);
      swift_release();
      swift_release();
      sub_1001781AC(v97, &qword_100E663F0);
      sub_1001781AC(v95, &qword_100E66418);
      sub_1001781AC(v94, &qword_100E66420);
      sub_1001781AC(v92, &qword_100E66428);
      sub_1001781AC(v90, &qword_100E66430);
      sub_1001781AC(v89, &qword_100E66438);
      sub_1001781AC(v87, &qword_100E66440);
      sub_10013EF0C(v85, (void (*)(void))v125);
      sub_10013EF0C(v126, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      return a1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10033C3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v81 = a3;
  uint64_t v82 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v78 = (uint64_t)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v6 - 8);
  uint64_t v75 = (uint64_t)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v8 - 8);
  uint64_t v77 = (uint64_t)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v10 - 8);
  uint64_t v76 = (uint64_t)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v12 - 8);
  uint64_t v79 = (uint64_t)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v14 - 8);
  uint64_t v80 = (uint64_t)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v83 = (char *)v71 - v35;
  __chkstk_darwin(v36);
  uint64_t v38 = (void (**)(void))((char *)v71 - v37);
  uint64_t v39 = a1;
  uint64_t v40 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_100113738(v40, (uint64_t)v71 - v37, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v41 = (void (*)(void))*v38;
  uint64_t v42 = *(void *)((char *)v38 + *(int *)(v31 + 36) + 8);
  uint64_t v84 = v18;
  uint64_t v73 = v30;
  uint64_t v74 = v31;
  uint64_t v72 = v21;
  if (v42 != 1)
  {
    uint64_t v47 = v41;
    swift_retain();
    goto LABEL_5;
  }
  uint64_t v43 = v41;
  uint64_t v44 = v39;
  uint64_t v45 = v33;
  uint64_t v46 = self;
  uint64_t v47 = v43;
  swift_retain();
  id v48 = [v46 currentDevice];
  [v48 userInterfaceIdiom];

  uint64_t v33 = v45;
  uint64_t v39 = v44;
  if (*((unsigned char *)v38 + *(int *)(v31 + 28)) != 1)
  {
LABEL_5:
    v71[0] = (void (*)(void))type metadata accessor for ViewState;
    sub_10013EF0C((uint64_t)v38, (void (*)(void))type metadata accessor for ViewState);
    v71[1] = v47;
    uint64_t v82 = sub_1007210CC(0, 256, 2, 2, 3, 0, 0, v82, v81, 1, 0, 0, 2, 2, (uint64_t)v47);
    sub_100113738(v40, (uint64_t)v33, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v49 = type metadata accessor for ViewState.SecondaryViewState(0);
    uint64_t v50 = (uint64_t)v73;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 1, 1, v49);
    uint64_t v51 = type metadata accessor for SearchViewState(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 1, 1, v51);
    uint64_t v52 = type metadata accessor for DisplayMetrics();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 1, 1, v52);
    uint64_t v53 = type metadata accessor for WeatherMapPresentationState(0);
    uint64_t v54 = (uint64_t)v72;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 1, 1, v53);
    uint64_t v55 = (uint64_t)v83;
    sub_10011D8AC();
    sub_1001781AC(v54, &qword_100E663F8);
    sub_1001781AC((uint64_t)v24, &qword_100E66400);
    sub_1001781AC((uint64_t)v27, &qword_100E66408);
    sub_1001781AC(v50, &qword_100E66410);
    uint64_t v56 = v71[0];
    sub_10013EF0C((uint64_t)v33, v71[0]);
    uint64_t v57 = type metadata accessor for AppConfigurationState();
    uint64_t v58 = (uint64_t)v84;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 1, 1, v57);
    uint64_t v59 = type metadata accessor for EnvironmentState();
    uint64_t v60 = v80;
    _s7Weather24LocationCompositionStateOwst_0(v80, 1, 1, v59);
    uint64_t v61 = type metadata accessor for LocationsState();
    uint64_t v62 = v79;
    _s7Weather24LocationCompositionStateOwst_0(v79, 1, 1, v61);
    uint64_t v63 = type metadata accessor for NotificationsOptInState();
    uint64_t v64 = v76;
    _s7Weather24LocationCompositionStateOwst_0(v76, 1, 1, v63);
    uint64_t v65 = type metadata accessor for TimeState();
    uint64_t v66 = v77;
    _s7Weather24LocationCompositionStateOwst_0(v77, 1, 1, v65);
    uint64_t v67 = v75;
    sub_100113738(v55, v75, (void (*)(void))type metadata accessor for ViewState);
    _s7Weather24LocationCompositionStateOwst_0(v67, 0, 1, v74);
    uint64_t v68 = type metadata accessor for ModalViewState(0);
    uint64_t v69 = v78;
    _s7Weather24LocationCompositionStateOwst_0(v78, 1, 1, v68);
    uint64_t v39 = sub_1001659F0(0, 3, v58, v60, v62, 0, 0, 0, 0, v64, v66, v67, v69, 0, 0, 0, 0, 0, 0,
            0,
            v39);
    swift_release();
    swift_release();
    sub_1001781AC(v69, &qword_100E663F0);
    sub_1001781AC(v67, &qword_100E66418);
    sub_1001781AC(v66, &qword_100E66420);
    sub_1001781AC(v64, &qword_100E66428);
    sub_1001781AC(v62, &qword_100E66430);
    sub_1001781AC(v60, &qword_100E66438);
    sub_1001781AC(v58, &qword_100E66440);
    sub_10013EF0C(v55, v56);
    return v39;
  }
  swift_release();
  sub_10013EF0C((uint64_t)v38, (void (*)(void))type metadata accessor for ViewState);
  swift_retain();
  return v39;
}

uint64_t sub_10033CC44(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10033CCA4(uint64_t a1)
{
  int v2 = (int *)type metadata accessor for LocationViewObserverView();
  type metadata accessor for LocationViewObserverViewState();
  sub_100128B54(&qword_100E6DD20, (void (*)(uint64_t))type metadata accessor for LocationViewObserverViewState);
  StateObject.wrappedValue.getter();
  sub_10005027C(0, a1 + v2[6], *(void *)(a1 + v2[7]), *(void *)(a1 + v2[7] + 8), *(void *)(a1 + v2[9]));

  return swift_release();
}

uint64_t sub_10033CD84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)type metadata accessor for LocationViewObserverView();
  type metadata accessor for LocationViewObserverViewState();
  sub_100128B54(&qword_100E6DD20, (void (*)(uint64_t))type metadata accessor for LocationViewObserverViewState);
  StateObject.wrappedValue.getter();
  sub_10005027C(0, a2 + v3[6], *(void *)(a2 + v3[7]), *(void *)(a2 + v3[7] + 8), *(void *)(a2 + v3[9]));

  return swift_release();
}

uint64_t sub_10033CE64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Location.Identifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &qword_100E6DC08;
  uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v34 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v32 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v32 - v20;
  uint64_t v22 = (int *)type metadata accessor for LocationViewObserverView();
  uint64_t v23 = a2 + v22[6];
  uint64_t v33 = v4;
  uint64_t v24 = *(void (**)(char *))(v4 + 16);
  uint64_t v35 = v23;
  v24(v21);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v3);
  swift_retain();
  sub_1001362A4();
  swift_release();
  sub_1001373E4((uint64_t)v12, (uint64_t)v19);
  uint64_t v25 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10006DF38((uint64_t)v21, (uint64_t)v9, &qword_100E6DC08);
  sub_10006DF38((uint64_t)v19, v25, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v3) == 1)
  {
    sub_100178110((uint64_t)v19, &qword_100E6DC08);
    sub_100178110((uint64_t)v21, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v25, 1, v3) == 1)
    {
      char v26 = -1;
    }
    else
    {
      uint64_t v13 = &qword_100E6DD18;
      char v26 = 0;
    }
  }
  else
  {
    uint64_t v27 = (uint64_t)v34;
    sub_10006DF38((uint64_t)v9, (uint64_t)v34, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v25, 1, v3) == 1)
    {
      sub_100178110((uint64_t)v19, &qword_100E6DC08);
      sub_100178110((uint64_t)v21, &qword_100E6DC08);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v27, v3);
      char v26 = 0;
      uint64_t v13 = &qword_100E6DD18;
    }
    else
    {
      uint64_t v28 = v32;
      uint64_t v29 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v32, v25, v3);
      sub_100128B54((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v29 + 8);
      v30(v28, v3);
      uint64_t v13 = &qword_100E6DC08;
      sub_100178110((uint64_t)v19, &qword_100E6DC08);
      sub_100178110((uint64_t)v21, &qword_100E6DC08);
      v30(v34, v3);
    }
  }
  sub_100178110((uint64_t)v9, v13);
  type metadata accessor for LocationViewObserverViewState();
  sub_100128B54(&qword_100E6DD20, (void (*)(uint64_t))type metadata accessor for LocationViewObserverViewState);
  StateObject.wrappedValue.getter();
  sub_10005027C(v26 & 1, v35, *(void *)(a2 + v22[7]), *(void *)(a2 + v22[7] + 8), *(void *)(a2 + v22[9]));
  return swift_release();
}

uint64_t sub_10033D324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v4 = type metadata accessor for ScenePhase();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v37 = (char *)&v36 - v7;
  uint64_t v8 = (int *)type metadata accessor for LocationViewObserverView();
  __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Location.Identifier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v24 = *(void (**)(char *))(v11 + 16);
  uint64_t v42 = a3 + v8[6];
  v24((char *)&v36 - v22);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v10);
  uint64_t v25 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_10006DF38((uint64_t)v23, (uint64_t)v17, &qword_100E6DC08);
  sub_10006DF38(v41, v25, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v10) != 1)
  {
    sub_10006DF38((uint64_t)v17, (uint64_t)v21, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v25, 1, v10) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v25, v10);
      sub_100128B54((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      LODWORD(v41) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v11 + 8);
      v27(v13, v10);
      sub_100178110((uint64_t)v23, &qword_100E6DC08);
      v27(v21, v10);
      sub_100178110((uint64_t)v17, &qword_100E6DC08);
      uint64_t v26 = (uint64_t)v43;
      sub_1001372AC();
      if (v41) {
        goto LABEL_8;
      }
LABEL_9:
      sub_100133888(v26, (void (*)(void))type metadata accessor for LocationViewObserverView);
      char v34 = 0;
      goto LABEL_10;
    }
    sub_100178110((uint64_t)v23, &qword_100E6DC08);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, v10);
LABEL_6:
    sub_100178110((uint64_t)v17, &qword_100E6DD18);
    uint64_t v26 = (uint64_t)v43;
    sub_1001372AC();
    goto LABEL_9;
  }
  sub_100178110((uint64_t)v23, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0(v25, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_100178110((uint64_t)v17, &qword_100E6DC08);
  uint64_t v26 = (uint64_t)v43;
  sub_1001372AC();
LABEL_8:
  uint64_t v28 = v37;
  sub_1000F80DC();
  uint64_t v30 = v38;
  uint64_t v29 = v39;
  uint64_t v31 = v40;
  (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, enum case for ScenePhase.background(_:), v40);
  sub_100128B54(&qword_100EAA8E0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v29 + 8);
  v33(v30, v31);
  v33(v28, v31);
  sub_100133888(v26, (void (*)(void))type metadata accessor for LocationViewObserverView);
  char v34 = v32 ^ 1;
LABEL_10:
  type metadata accessor for LocationViewObserverViewState();
  sub_100128B54(&qword_100E6DD20, (void (*)(uint64_t))type metadata accessor for LocationViewObserverViewState);
  StateObject.wrappedValue.getter();
  sub_10005027C(v34 & 1, v42, *(void *)(a3 + v8[7]), *(void *)(a3 + v8[7] + 8), *(void *)(a3 + v8[9]));
  return swift_release();
}

uint64_t sub_10033D964(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_10033D9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a4 + 72) = 1;
  return sub_100BC5520();
}

uint64_t sub_10033D9DC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_10033D9EC()
{
  type metadata accessor for LocationViewModel();
  sub_100179CD4();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = v1 + v3;
  uint64_t v5 = type metadata accessor for Location.Identifier();
  sub_100162E4C();
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v7(v1 + v3, v5);
  uint64_t v8 = v1 + v3 + v0[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v5)) {
    v7(v8, v5);
  }
  uint64_t v9 = v4 + v0[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(unsigned char *)(v9 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1001859C0();
  uint64_t v10 = type metadata accessor for LocationFooterViewModel();
  if (!sub_1001632AC(v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = type metadata accessor for URL();
    if (!sub_10019D4C8())
    {
      sub_100162880();
      sub_10017B290();
      v12();
    }
    uint64_t v13 = v9 + *(int *)(v8 + 36);
    swift_bridgeObjectRelease();
    uint64_t v14 = type metadata accessor for LearnMoreAttributorViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v13 + *(int *)(v14 + 24), 1, v11))
    {
      sub_100162880();
      sub_10017B290();
      v15();
    }
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for LocationOfInterest();
    if (!sub_10019D4C8())
    {
      sub_100162880();
      sub_10017B290();
      v16();
    }
    v9 += *(int *)(v8 + 56);
    uint64_t v17 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!sub_1001632AC(v17))
    {
      type metadata accessor for Location();
      sub_100162E4C();
      sub_100162F0C();
      v18();
      sub_100162880();
      sub_10017B290();
      v19();
    }
  }

  sub_1001859C0();
  type metadata accessor for Date();
  sub_100162E4C();
  sub_100162F0C();
  v20();
  sub_1001859C0();
  uint64_t v21 = type metadata accessor for ForegroundEffect();
  if (!sub_1001632AC(v21))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v9, v8);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for LocationEntity();
  sub_100162E4C();
  sub_100162F0C();
  v23();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10033DDD8()
{
  type metadata accessor for LocationViewModel();
  sub_1001810D8();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10033D9A0(v6, v7, v0 + v5, v8);
}

void *sub_10033DE48(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *((void *)v12 + 1);
    char v15 = v12[16];
    sub_100195B88();
    *(void *)uint64_t v11 = v13;
    *((void *)v11 + 1) = v14;
    v11[16] = v15;
    uint64_t v112 = a3;
    v113 = a2;
    uint64_t v16 = a3[6];
    uint64_t v114 = a1;
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for Location.Identifier();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    uint64_t v21 = type metadata accessor for LocationViewModel();
    uint64_t v22 = *(int *)(v21 + 20);
    uint64_t v23 = &v17[v22];
    uint64_t v24 = &v18[v22];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v18[v22], 1, v19))
    {
      uint64_t v25 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v20(v23, v24, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v19);
    }
    uint64_t v26 = *(int *)(v21 + 24);
    uint64_t v27 = &v17[v26];
    uint64_t v28 = &v18[v26];
    uint64_t v29 = *(void *)&v18[v26 + 8];
    *(void *)uint64_t v27 = *(void *)&v18[v26];
    *((void *)v27 + 1) = v29;
    uint64_t v30 = *(void *)&v18[v26 + 16];
    uint64_t v31 = *(void *)&v18[v26 + 24];
    char v32 = v17;
    uint64_t v33 = *(void *)&v18[v26 + 32];
    uint64_t v34 = *(void *)&v18[v26 + 40];
    uint64_t v35 = (int *)v21;
    char v36 = v18[v26 + 48];
    swift_bridgeObjectRetain();
    sub_100193004(v30, v31, v33, v34, v36);
    *((void *)v27 + 2) = v30;
    *((void *)v27 + 3) = v31;
    *((void *)v27 + 4) = v33;
    *((void *)v27 + 5) = v34;
    v27[48] = v36;
    uint64_t v37 = *((void *)v28 + 8);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((void *)v27 + 8) = v37;
    uint64_t v38 = *((void *)v28 + 10);
    *((void *)v27 + 9) = *((void *)v28 + 9);
    *((void *)v27 + 10) = v38;
    uint64_t v39 = *((void *)v28 + 12);
    *((void *)v27 + 11) = *((void *)v28 + 11);
    *((void *)v27 + 12) = v39;
    uint64_t v40 = *((void *)v28 + 14);
    *((void *)v27 + 13) = *((void *)v28 + 13);
    *((void *)v27 + 14) = v40;
    uint64_t v41 = *((void *)v28 + 16);
    *((void *)v27 + 15) = *((void *)v28 + 15);
    *((void *)v27 + 16) = v41;
    v27[136] = v28[136];
    *(_WORD *)(v27 + 137) = *(_WORD *)(v28 + 137);
    uint64_t v42 = *((void *)v28 + 19);
    *((void *)v27 + 18) = *((void *)v28 + 18);
    *((void *)v27 + 19) = v42;
    v27[160] = v28[160];
    v27[161] = v28[161];
    *(void *)&v32[v35[7]] = *(void *)&v18[v35[7]];
    *(void *)&v32[v35[8]] = *(void *)&v18[v35[8]];
    uint64_t v111 = v35;
    uint64_t v43 = v35[9];
    uint64_t v44 = v32;
    uint64_t v45 = &v32[v43];
    uint64_t v46 = v18;
    uint64_t v47 = &v18[v43];
    uint64_t v48 = type metadata accessor for LocationFooterViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v49 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v50 = (int *)v48;
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
    {
      uint64_t v51 = sub_10017DF08(&qword_100E6DC18);
      memcpy(v45, v47, *(void *)(*(void *)(v51 - 8) + 64));
      uint64_t v52 = v44;
    }
    else
    {
      *uint64_t v45 = *v47;
      *(_WORD *)(v45 + 1) = *(_WORD *)(v47 + 1);
      uint64_t v53 = *((void *)v47 + 2);
      *((void *)v45 + 1) = *((void *)v47 + 1);
      *((void *)v45 + 2) = v53;
      uint64_t v54 = v50[8];
      uint64_t v55 = &v45[v54];
      uint64_t v56 = &v47[v54];
      uint64_t v57 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
      {
        uint64_t v58 = sub_10017DF08(&qword_100E749B0);
        memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
      }
      uint64_t v109 = v49;
      uint64_t v110 = v50;
      uint64_t v59 = v50[9];
      uint64_t v60 = &v45[v59];
      uint64_t v61 = &v49[v59];
      *uint64_t v60 = v49[v59];
      *((void *)v60 + 1) = *(void *)&v49[v59 + 8];
      uint64_t v62 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v63 = v62[6];
      uint64_t v64 = &v60[v63];
      uint64_t v65 = &v61[v63];
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v57))
      {
        uint64_t v66 = sub_10017DF08(&qword_100E749B0);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v64, v65, v57);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v57);
      }
      uint64_t v67 = v62[7];
      uint64_t v68 = &v60[v67];
      uint64_t v69 = &v61[v67];
      uint64_t v70 = *((void *)v69 + 1);
      *(void *)uint64_t v68 = *(void *)v69;
      *((void *)v68 + 1) = v70;
      *(void *)&v60[v62[8]] = *(void *)&v61[v62[8]];
      uint64_t v71 = (uint64_t)v45;
      v45[v110[10]] = v109[v110[10]];
      uint64_t v72 = v110[11];
      uint64_t v73 = &v45[v72];
      uint64_t v74 = &v109[v72];
      uint64_t v75 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v52 = v44;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
      {
        uint64_t v76 = sub_10017DF08(&qword_100E63508);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
      }
      *(unsigned char *)(v71 + v110[12]) = v109[v110[12]];
      *(unsigned char *)(v71 + v110[13]) = v109[v110[13]];
      uint64_t v77 = v110[14];
      uint64_t v78 = (char *)(v71 + v77);
      uint64_t v79 = &v109[v77];
      uint64_t v80 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, (uint64_t)v80))
      {
        uint64_t v81 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        *uint64_t v78 = *v79;
        uint64_t v82 = v80[5];
        uint64_t v83 = &v78[v82];
        uint64_t v84 = &v79[v82];
        uint64_t v85 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(&v78[v80[6]], &v79[v80[6]], v75);
        v78[v80[7]] = v79[v80[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, (uint64_t)v80);
      }
      _s7Weather24LocationCompositionStateOwst_0(v71, 0, 1, (uint64_t)v110);
    }
    v52[v111[10]] = v46[v111[10]];
    v52[v111[11]] = v46[v111[11]];
    v52[v111[12]] = v46[v111[12]];
    v52[v111[13]] = v46[v111[13]];
    v52[v111[14]] = v46[v111[14]];
    uint64_t v86 = v111[15];
    uint64_t v87 = *(void **)&v46[v86];
    *(void *)&v52[v86] = v87;
    v52[v111[16]] = v46[v111[16]];
    v52[v111[17]] = v46[v111[17]];
    v52[v111[18]] = v46[v111[18]];
    uint64_t v88 = v111[19];
    uint64_t v89 = &v52[v88];
    uint64_t v90 = &v46[v88];
    uint64_t v91 = type metadata accessor for Date();
    uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
    id v93 = v87;
    v92(v89, v90, v91);
    uint64_t v94 = v111[20];
    uint64_t v95 = &v52[v94];
    uint64_t v96 = &v46[v94];
    uint64_t v97 = type metadata accessor for ForegroundEffect();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
    {
      uint64_t v98 = sub_10017DF08(&qword_100E65FA8);
      memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
    }
    v52[v111[21]] = v46[v111[21]];
    *(void *)&v52[v111[22]] = *(void *)&v46[v111[22]];
    v52[v111[23]] = v46[v111[23]];
    uint64_t v99 = v111[24];
    uint64_t v100 = &v52[v99];
    uint64_t v101 = &v46[v99];
    uint64_t v102 = type metadata accessor for LocationEntity();
    uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
    swift_bridgeObjectRetain();
    v103(v100, v101, v102);
    uint64_t v104 = v112[8];
    uint64_t v9 = v114;
    *(_OWORD *)((char *)v114 + v112[7]) = *(_OWORD *)((char *)v113 + v112[7]);
    uint64_t v105 = (void *)((char *)v114 + v104);
    uint64_t v106 = (void *)((char *)v113 + v104);
    uint64_t v107 = v106[1];
    *uint64_t v105 = *v106;
    v105[1] = v107;
    *(void *)((char *)v114 + v112[9]) = *(void *)((char *)v113 + v112[9]);
    swift_unknownObjectRetain();
    swift_retain();
  }
  swift_retain();
  return v9;
}

char *sub_10033E7D8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ScenePhase();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v70 = a3;
  uint64_t v71 = a2;
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  uint64_t v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  uint64_t v14 = type metadata accessor for Location.Identifier();
  char v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  uint64_t v16 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v17 = v16[5];
  uint64_t v18 = &v12[v17];
  uint64_t v19 = &v13[v17];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v17], 1, v14))
  {
    uint64_t v20 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v15(v18, v19, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v14);
  }
  memcpy(&v12[v16[6]], &v13[v16[6]], 0xA2uLL);
  *(void *)&v12[v16[7]] = *(void *)&v13[v16[7]];
  *(void *)&v12[v16[8]] = *(void *)&v13[v16[8]];
  uint64_t v21 = v16[9];
  uint64_t v22 = &v12[v21];
  uint64_t v23 = &v13[v21];
  uint64_t v24 = type metadata accessor for LocationFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v67 = a1;
    *uint64_t v22 = *v23;
    *(_WORD *)(v22 + 1) = *(_WORD *)(v23 + 1);
    *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
    uint64_t v26 = *(int *)(v24 + 32);
    uint64_t v27 = &v22[v26];
    uint64_t v28 = &v23[v26];
    uint64_t v29 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
    {
      uint64_t v30 = sub_10017DF08(&qword_100E749B0);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
    }
    uint64_t v66 = (int *)v24;
    uint64_t v31 = *(int *)(v24 + 36);
    char v32 = &v22[v31];
    uint64_t v33 = &v23[v31];
    *char v32 = v23[v31];
    *((void *)v32 + 1) = *(void *)&v23[v31 + 8];
    uint64_t v34 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v35 = v34[6];
    __dst = &v32[v35];
    char v36 = &v33[v35];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v33[v35], 1, v29))
    {
      uint64_t v37 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(__dst, v36, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v29);
    }
    *(_OWORD *)&v32[v34[7]] = *(_OWORD *)&v33[v34[7]];
    *(void *)&v32[v34[8]] = *(void *)&v33[v34[8]];
    v22[v66[10]] = v23[v66[10]];
    uint64_t v38 = v66[11];
    uint64_t v39 = &v22[v38];
    uint64_t v40 = &v23[v38];
    uint64_t v41 = type metadata accessor for LocationOfInterest();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = sub_10017DF08(&qword_100E63508);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v22[v66[12]] = v23[v66[12]];
    v22[v66[13]] = v23[v66[13]];
    uint64_t v43 = v66[14];
    uint64_t v44 = &v22[v43];
    uint64_t v45 = &v23[v43];
    uint64_t v46 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, (uint64_t)v46))
    {
      uint64_t v47 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      char *v44 = *v45;
      uint64_t v48 = v46[5];
      __dsta = &v44[v48];
      uint64_t v49 = &v45[v48];
      uint64_t v50 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(__dsta, v49, v50);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(&v44[v46[6]], &v45[v46[6]], v41);
      v44[v46[7]] = v45[v46[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, (uint64_t)v46);
    }
    a1 = v67;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, (uint64_t)v66);
  }
  v12[v16[10]] = v13[v16[10]];
  v12[v16[11]] = v13[v16[11]];
  v12[v16[12]] = v13[v16[12]];
  v12[v16[13]] = v13[v16[13]];
  v12[v16[14]] = v13[v16[14]];
  *(void *)&v12[v16[15]] = *(void *)&v13[v16[15]];
  v12[v16[16]] = v13[v16[16]];
  v12[v16[17]] = v13[v16[17]];
  v12[v16[18]] = v13[v16[18]];
  uint64_t v51 = v16[19];
  uint64_t v52 = &v12[v51];
  uint64_t v53 = &v13[v51];
  uint64_t v54 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = v16[20];
  uint64_t v56 = &v12[v55];
  uint64_t v57 = &v13[v55];
  uint64_t v58 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
  {
    uint64_t v59 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
  }
  v12[v16[21]] = v13[v16[21]];
  *(void *)&v12[v16[22]] = *(void *)&v13[v16[22]];
  v12[v16[23]] = v13[v16[23]];
  uint64_t v60 = v16[24];
  uint64_t v61 = &v12[v60];
  uint64_t v62 = &v13[v60];
  uint64_t v63 = type metadata accessor for LocationEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
  uint64_t v64 = v70[8];
  *(_OWORD *)&a1[v70[7]] = *(_OWORD *)&v71[v70[7]];
  *(_OWORD *)&a1[v64] = *(_OWORD *)&v71[v64];
  *(void *)&a1[v70[9]] = *(void *)&v71[v70[9]];
  return a1;
}

char *sub_10033EFAC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100EAA740);
    uint64_t v6 = sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ScenePhase();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v11;
  sub_10018F6E4();
  v157 = a3;
  v158 = a2;
  uint64_t v12 = a3[6];
  v159 = a1;
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Location.Identifier();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  uint64_t v18 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v19 = v18[5];
  uint64_t v20 = &v13[v19];
  uint64_t v21 = &v14[v19];
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v19], 1, v15);
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v15);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v21, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v15);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
LABEL_10:
    uint64_t v24 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_11;
  }
  v17(v20, v21, v15);
LABEL_11:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v13[v25];
  uint64_t v27 = &v14[v25];
  uint64_t v28 = *(void *)&v14[v25 + 8];
  *(void *)uint64_t v26 = *(void *)&v14[v25];
  *((void *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  char v29 = v27[48];
  uint64_t v30 = *((void *)v26 + 2);
  uint64_t v31 = *((void *)v26 + 3);
  uint64_t v32 = *((void *)v26 + 4);
  uint64_t v33 = *((void *)v26 + 5);
  long long v34 = *((_OWORD *)v27 + 2);
  *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
  *((_OWORD *)v26 + 2) = v34;
  char v35 = v26[48];
  v26[48] = v29;
  sub_100191D78(v30, v31, v32, v33, v35);
  uint64_t v36 = *((void *)v27 + 8);
  *((void *)v26 + 7) = *((void *)v27 + 7);
  *((void *)v26 + 8) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *((void *)v27 + 10);
  *((void *)v26 + 9) = *((void *)v27 + 9);
  *((void *)v26 + 10) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *((void *)v27 + 12);
  *((void *)v26 + 11) = *((void *)v27 + 11);
  *((void *)v26 + 12) = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = *((void *)v27 + 14);
  *((void *)v26 + 13) = *((void *)v27 + 13);
  *((void *)v26 + 14) = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *((void *)v27 + 16);
  *((void *)v26 + 15) = *((void *)v27 + 15);
  *((void *)v26 + 16) = v40;
  swift_bridgeObjectRelease();
  v26[136] = v27[136];
  v26[137] = v27[137];
  v26[138] = v27[138];
  uint64_t v41 = *((void *)v27 + 19);
  *((void *)v26 + 18) = *((void *)v27 + 18);
  *((void *)v26 + 19) = v41;
  swift_bridgeObjectRelease();
  v26[160] = v27[160];
  v26[161] = v27[161];
  *(void *)&v13[v18[7]] = *(void *)&v14[v18[7]];
  swift_bridgeObjectRelease();
  *(void *)&v13[v18[8]] = *(void *)&v14[v18[8]];
  swift_release();
  uint64_t v42 = v18[9];
  uint64_t v43 = (uint64_t)&v13[v42];
  uint64_t v44 = (uint64_t)&v14[v42];
  uint64_t v45 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v26) = _s7Weather24LocationCompositionStateOwet_0(v43, 1, (uint64_t)v45);
  int v46 = _s7Weather24LocationCompositionStateOwet_0(v44, 1, (uint64_t)v45);
  if (v26)
  {
    if (!v46)
    {
      *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
      *(_WORD *)(v43 + 1) = *(_WORD *)(v44 + 1);
      *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
      uint64_t v47 = v45[8];
      uint64_t v48 = (void *)(v43 + v47);
      uint64_t v49 = (const void *)(v44 + v47);
      uint64_t v50 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
      {
        uint64_t v51 = sub_10017DF08(&qword_100E749B0);
        memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
      }
      v152 = v45;
      uint64_t v62 = v45[9];
      uint64_t v63 = v43 + v62;
      uint64_t v64 = v44 + v62;
      *(unsigned char *)uint64_t v63 = *(unsigned char *)(v44 + v62);
      *(void *)(v63 + 8) = *(void *)(v44 + v62 + 8);
      uint64_t v65 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v66 = v65[6];
      __dst = (void *)(v63 + v66);
      uint64_t v67 = (const void *)(v64 + v66);
      if (_s7Weather24LocationCompositionStateOwet_0(v64 + v66, 1, v50))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(__dst, v67, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v50);
      }
      *(_OWORD *)(v63 + v65[7]) = *(_OWORD *)(v64 + v65[7]);
      *(void *)(v63 + v65[8]) = *(void *)(v64 + v65[8]);
      *(unsigned char *)(v43 + v152[10]) = *(unsigned char *)(v44 + v152[10]);
      uint64_t v69 = v152[11];
      uint64_t v70 = (void *)(v43 + v69);
      uint64_t v71 = (const void *)(v44 + v69);
      uint64_t v72 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
      {
        uint64_t v73 = sub_10017DF08(&qword_100E63508);
        memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
      }
      *(unsigned char *)(v43 + v152[12]) = *(unsigned char *)(v44 + v152[12]);
      *(unsigned char *)(v43 + v152[13]) = *(unsigned char *)(v44 + v152[13]);
      uint64_t v74 = v152[14];
      uint64_t v75 = (unsigned char *)(v43 + v74);
      uint64_t v76 = (unsigned char *)(v44 + v74);
      uint64_t v77 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, (uint64_t)v77))
      {
        uint64_t v78 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        *uint64_t v75 = *v76;
        uint64_t v79 = v77[5];
        uint64_t v80 = &v75[v79];
        __dstb = &v76[v79];
        uint64_t v81 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v81 - 8) + 32))(v80, __dstb, v81);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 32))(&v75[v77[6]], &v76[v77[6]], v72);
        v75[v77[7]] = v76[v77[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, (uint64_t)v77);
      }
      uint64_t v82 = v43;
      uint64_t v83 = (uint64_t)v152;
      goto LABEL_34;
    }
    goto LABEL_17;
  }
  if (v46)
  {
    sub_100133888(v43, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_17:
    size_t v52 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v53 = (void *)v43;
    uint64_t v54 = (const void *)v44;
LABEL_18:
    memcpy(v53, v54, v52);
    goto LABEL_35;
  }
  *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
  *(unsigned char *)(v43 + 1) = *(unsigned char *)(v44 + 1);
  *(unsigned char *)(v43 + 2) = *(unsigned char *)(v44 + 2);
  uint64_t v55 = *(void *)(v44 + 16);
  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  *(void *)(v43 + 16) = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = v45[8];
  uint64_t v57 = (void *)(v43 + v56);
  uint64_t v58 = (const void *)(v44 + v56);
  uint64_t v59 = type metadata accessor for URL();
  int v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v59);
  int v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  uint64_t v111 = *(void *)(v59 - 8);
  if (v61)
  {
    (*(void (**)(void *, uint64_t))(v111 + 8))(v57, v59);
LABEL_45:
    uint64_t v112 = sub_10017DF08(&qword_100E749B0);
    memcpy(v57, v58, *(void *)(*(void *)(v112 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(void *, const void *, uint64_t))(v111 + 40))(v57, v58, v59);
LABEL_46:
  uint64_t v113 = v45[9];
  uint64_t v114 = v43 + v113;
  uint64_t v115 = v44 + v113;
  *(unsigned char *)uint64_t v114 = *(unsigned char *)(v44 + v113);
  *(void *)(v114 + 8) = *(void *)(v44 + v113 + 8);
  swift_bridgeObjectRelease();
  uint64_t v153 = v115;
  __dsta = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v116 = __dsta[6];
  uint64_t v117 = (const void *)(v115 + v116);
  uint64_t v151 = v114 + v116;
  LODWORD(v115) = _s7Weather24LocationCompositionStateOwet_0(v114 + v116, 1, v59);
  int v118 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v59);
  if (v115)
  {
    if (v118)
    {
      size_t v119 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v120 = (void *)v151;
LABEL_51:
      memcpy(v120, v117, v119);
      goto LABEL_55;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v59 - 8) + 32))(v151, v117, v59);
    _s7Weather24LocationCompositionStateOwst_0(v151, 0, 1, v59);
  }
  else
  {
    uint64_t v121 = *(void *)(v59 - 8);
    if (v118)
    {
      (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v151, v59);
      size_t v119 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v120 = (void *)v151;
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v121 + 40))(v151, v117, v59);
  }
LABEL_55:
  uint64_t v122 = __dsta[7];
  uint64_t v123 = (void *)(v114 + v122);
  uint64_t v124 = (uint64_t *)(v153 + v122);
  uint64_t v126 = *v124;
  uint64_t v125 = v124[1];
  void *v123 = v126;
  v123[1] = v125;
  swift_bridgeObjectRelease();
  *(void *)(v114 + __dsta[8]) = *(void *)(v153 + __dsta[8]);
  swift_release();
  *(unsigned char *)(v43 + v45[10]) = *(unsigned char *)(v44 + v45[10]);
  uint64_t v127 = v45[11];
  uint64_t v128 = (void *)(v43 + v127);
  uint64_t v129 = (const void *)(v44 + v127);
  uint64_t v130 = type metadata accessor for LocationOfInterest();
  int v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v130);
  int v132 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130);
  if (v131)
  {
    if (!v132)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  uint64_t v133 = *(void *)(v130 - 8);
  if (v132)
  {
    (*(void (**)(void *, uint64_t))(v133 + 8))(v128, v130);
LABEL_60:
    uint64_t v134 = sub_10017DF08(&qword_100E63508);
    memcpy(v128, v129, *(void *)(*(void *)(v134 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(void *, const void *, uint64_t))(v133 + 40))(v128, v129, v130);
LABEL_61:
  *(unsigned char *)(v43 + v45[12]) = *(unsigned char *)(v44 + v45[12]);
  *(unsigned char *)(v43 + v45[13]) = *(unsigned char *)(v44 + v45[13]);
  uint64_t v135 = v45[14];
  uint64_t v136 = (unsigned char *)(v43 + v135);
  v137 = (unsigned char *)(v44 + v135);
  v138 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, (uint64_t)v138);
  int v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, (uint64_t)v138);
  if (v139)
  {
    if (!v140)
    {
      *uint64_t v136 = *v137;
      uint64_t v141 = v138[5];
      v142 = &v136[v141];
      uint64_t v143 = v130;
      v144 = &v137[v141];
      uint64_t v145 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v145 - 8) + 32))(v142, v144, v145);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v143 - 8) + 32))(&v136[v138[6]], &v137[v138[6]], v143);
      v136[v138[7]] = v137[v138[7]];
      uint64_t v82 = (uint64_t)v136;
      uint64_t v83 = (uint64_t)v138;
LABEL_34:
      _s7Weather24LocationCompositionStateOwst_0(v82, 0, 1, v83);
      goto LABEL_35;
    }
    goto LABEL_66;
  }
  if (v140)
  {
    sub_100133888((uint64_t)v136, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_66:
    size_t v52 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v53 = v136;
    uint64_t v54 = v137;
    goto LABEL_18;
  }
  *uint64_t v136 = *v137;
  uint64_t v146 = v138[5];
  v147 = &v136[v146];
  uint64_t v148 = v130;
  v149 = &v137[v146];
  uint64_t v150 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v150 - 8) + 40))(v147, v149, v150);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v148 - 8) + 40))(&v136[v138[6]], &v137[v138[6]], v148);
  v136[v138[7]] = v137[v138[7]];
LABEL_35:
  v13[v18[10]] = v14[v18[10]];
  v13[v18[11]] = v14[v18[11]];
  v13[v18[12]] = v14[v18[12]];
  v13[v18[13]] = v14[v18[13]];
  v13[v18[14]] = v14[v18[14]];
  uint64_t v84 = v18[15];
  uint64_t v85 = *(void **)&v13[v84];
  *(void *)&v13[v84] = *(void *)&v14[v84];

  v13[v18[16]] = v14[v18[16]];
  v13[v18[17]] = v14[v18[17]];
  v13[v18[18]] = v14[v18[18]];
  uint64_t v86 = v18[19];
  uint64_t v87 = &v13[v86];
  uint64_t v88 = &v14[v86];
  uint64_t v89 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 40))(v87, v88, v89);
  uint64_t v90 = v18[20];
  uint64_t v91 = &v13[v90];
  uint64_t v92 = &v14[v90];
  uint64_t v93 = type metadata accessor for ForegroundEffect();
  LODWORD(v87) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v93);
  int v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93);
  if (!v87)
  {
    uint64_t v95 = *(void *)(v93 - 8);
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 40))(v91, v92, v93);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(v91, v93);
    goto LABEL_40;
  }
  if (v94)
  {
LABEL_40:
    uint64_t v96 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v91, v92, *(void *)(*(void *)(v96 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v93);
LABEL_41:
  v13[v18[21]] = v14[v18[21]];
  *(void *)&v13[v18[22]] = *(void *)&v14[v18[22]];
  swift_bridgeObjectRelease();
  v13[v18[23]] = v14[v18[23]];
  uint64_t v97 = v18[24];
  uint64_t v98 = &v13[v97];
  uint64_t v99 = &v14[v97];
  uint64_t v100 = type metadata accessor for LocationEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 40))(v98, v99, v100);
  uint64_t v101 = v157[7];
  uint64_t v102 = &v159[v101];
  uint64_t v103 = &v158[v101];
  uint64_t v104 = *((void *)v103 + 1);
  *(void *)uint64_t v102 = *(void *)v103;
  swift_unknownObjectRelease();
  *((void *)v102 + 1) = v104;
  uint64_t v105 = v157[8];
  uint64_t v106 = &v159[v105];
  uint64_t v107 = &v158[v105];
  uint64_t v109 = *(void *)v107;
  uint64_t v108 = *((void *)v107 + 1);
  *(void *)uint64_t v106 = v109;
  *((void *)v106 + 1) = v108;
  swift_release();
  *(void *)&v159[v157[9]] = *(void *)&v158[v157[9]];
  swift_release();
  return v159;
}

uint64_t sub_10033FFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10033FFFC);
}

uint64_t sub_10033FFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E6DC20);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for LocationViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1003400B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003400C8);
}

void sub_1003400C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E6DC20);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for LocationViewModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100340184()
{
  return sub_100226AE0(sub_10033CCA4);
}

uint64_t sub_1003401A0(uint64_t a1)
{
  return sub_1003401D4(a1, sub_10033CD84);
}

uint64_t sub_1003401BC(uint64_t a1)
{
  return sub_1003401D4(a1, sub_10033CE64);
}

uint64_t sub_1003401D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationViewObserverView();
  sub_1001627C0(v4);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a2(a1, v6);
}

uint64_t sub_10034023C()
{
  uint64_t v0 = sub_100183938();
  sub_1001627C0(v0);
  uint64_t v1 = sub_10018521C();

  return sub_10033D324(v1, v2, v3);
}

uint64_t sub_100340284()
{
  return sub_10034029C();
}

uint64_t sub_10034029C()
{
  uint64_t v3 = sub_100183938();
  sub_1001627C0(v3);
  return sub_10033D964(v2, v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v0);
}

uint64_t sub_1003402E8()
{
  return sub_10034029C();
}

uint64_t sub_100340304()
{
  uint64_t v0 = sub_100183938();
  sub_1001627C0(v0);
  uint64_t v1 = sub_10018521C();

  return sub_10001424C(v1, v2, v3);
}

uint64_t sub_100340348()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003403DC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100097814(v6, static OpenUnitsConfigurationIntent.title);
  sub_1002102B0(v6, (uint64_t)static OpenUnitsConfigurationIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenUnitsConfigurationIntent.title.unsafeMutableAddressor()
{
  return sub_10034090C(&qword_100E62220, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenUnitsConfigurationIntent.title);
}

uint64_t static OpenUnitsConfigurationIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003409A0(&qword_100E62220, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenUnitsConfigurationIntent.title, a1);
}

uint64_t sub_10034062C()
{
  uint64_t v0 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for IntentDescription();
  sub_100097814(v10, static OpenUnitsConfigurationIntent.description);
  sub_1002102B0(v10, (uint64_t)static OpenUnitsConfigurationIntent.description);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v9);
  return IntentDescription.init(_:categoryName:searchKeywords:)();
}

uint64_t OpenUnitsConfigurationIntent.description.unsafeMutableAddressor()
{
  return sub_10034090C(&qword_100E62228, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenUnitsConfigurationIntent.description);
}

uint64_t sub_10034090C(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return sub_1002102B0(v5, a3);
}

uint64_t static OpenUnitsConfigurationIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003409A0(&qword_100E62228, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenUnitsConfigurationIntent.description, a1);
}

uint64_t sub_1003409A0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_1002102B0(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

void *OpenUnitsConfigurationIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenUnitsConfigurationIntent.openAppWhenRun;
}

void *OpenUnitsConfigurationIntent.isDiscoverable.unsafeMutableAddressor()
{
  return &static OpenUnitsConfigurationIntent.isDiscoverable;
}

uint64_t OpenNotificationsConfigurationIntent.init()()
{
  return AppDependency.__allocating_init(key:manager:)();
}

uint64_t OpenUnitsConfigurationIntent.perform()()
{
  sub_1000A9DE8();
  v0[7] = v1;
  v0[8] = v2;
  uint64_t v3 = type metadata accessor for WeatherIntentType();
  v0[9] = v3;
  v0[10] = *(void *)(v3 - 8);
  v0[11] = swift_task_alloc();
  return _swift_task_switch(sub_100340B74, 0, 0);
}

uint64_t sub_100340B74()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  AppDependency.wrappedValue.getter();
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_1001B1E64(v0 + 2, v4);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for WeatherIntentType.openUnitsConfiguration(_:), v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100340C78;
  uint64_t v7 = v0[11];
  return dispatch thunk of WeatherIntentHandlerType.handleIntent(_:)(v7, v4, v5);
}

uint64_t sub_100340C78()
{
  sub_100119470();
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[9];
  *(void *)(v5 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v6 = sub_100340E3C;
  }
  else {
    uint64_t v6 = sub_100340DC4;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100340DC4()
{
  sub_1000A9DE8();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  static IntentResult.result<>()();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100340E3C()
{
  sub_1000A9DE8();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100340EAC()
{
  unint64_t result = qword_100E6DD30;
  if (!qword_100E6DD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DD30);
  }
  return result;
}

unint64_t sub_100340EFC()
{
  unint64_t result = qword_100E6DD38;
  if (!qword_100E6DD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DD38);
  }
  return result;
}

uint64_t sub_100340F48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100340F64()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100340FB4()
{
  unint64_t result = qword_100E6DD40;
  if (!qword_100E6DD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DD40);
  }
  return result;
}

uint64_t sub_100341000@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OpenUnitsConfigurationIntent.title.unsafeMutableAddressor();
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v2, v3);
}

uint64_t sub_10034107C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100321064;
  return OpenUnitsConfigurationIntent.perform()();
}

uint64_t sub_10034111C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OpenNotificationsConfigurationIntent.init()();
  *a1 = result;
  return result;
}

uint64_t sub_100341144(uint64_t a1)
{
  unint64_t v2 = sub_100340FB4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenUnitsConfigurationIntent()
{
  return &type metadata for OpenUnitsConfigurationIntent;
}

unint64_t sub_100341194()
{
  unint64_t result = qword_100E6DD50;
  if (!qword_100E6DD50)
  {
    sub_10018C6DC(&qword_100E6DD58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DD50);
  }
  return result;
}

void *sub_1003411E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v32 = a3;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = *(void **)((char *)a2 + v8);
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *uint64_t v9 = v12;
    v9[1] = v11;
    uint64_t v13 = v10[3];
    v9[2] = v10[2];
    v9[3] = v13;
    uint64_t v14 = v10[5];
    v9[4] = v10[4];
    v9[5] = v14;
    v9[6] = v10[6];
    uint64_t v15 = type metadata accessor for SearchLocation();
    uint64_t v16 = *(int *)(v15 + 32);
    __dst = (char *)v9 + v16;
    uint64_t v31 = v15;
    uint64_t v17 = (char *)v10 + v16;
    uint64_t v18 = type metadata accessor for Location();
    id v19 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v20 = sub_10017DF08(&qword_100E639E8);
      memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(__dst, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v18);
    }
    uint64_t v22 = *(int *)(v31 + 36);
    int v23 = (char *)v9 + v22;
    uint64_t v24 = (char *)v10 + v22;
    *(_OWORD *)int v23 = *(_OWORD *)v24;
    v23[16] = v24[16];
    uint64_t v25 = *(int *)(v32 + 24);
    uint64_t v26 = (void *)((char *)v4 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100341404(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  uint64_t v4 = (id *)(a1 + *(int *)(a2 + 20));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t)v4 + *(int *)(type metadata accessor for SearchLocation() + 32);
  uint64_t v6 = type metadata accessor for Location();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003414D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v30 = a3;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v11 = *(void **)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = v11;
  v8[1] = v10;
  uint64_t v12 = v9[3];
  v8[2] = v9[2];
  v8[3] = v12;
  uint64_t v13 = v9[5];
  v8[4] = v9[4];
  v8[5] = v13;
  v8[6] = v9[6];
  uint64_t v14 = type metadata accessor for SearchLocation();
  uint64_t v15 = *(int *)(v14 + 32);
  __dst = (char *)v8 + v15;
  uint64_t v29 = v14;
  uint64_t v16 = (char *)v9 + v15;
  uint64_t v17 = type metadata accessor for Location();
  id v18 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E639E8);
    memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v17);
  }
  uint64_t v20 = *(int *)(v29 + 36);
  uint64_t v21 = (char *)v8 + v20;
  uint64_t v22 = (char *)v9 + v20;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  v21[16] = v22[16];
  uint64_t v23 = *(int *)(v30 + 24);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_10034169C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1000C1E18(a1, a2);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (uint64_t *)((char *)a1 + v6);
  uint64_t v8 = (uint64_t *)((char *)a2 + v6);
  uint64_t v9 = *(void **)((char *)a1 + v6);
  uint64_t v10 = *(void **)((char *)a2 + v6);
  *uint64_t v7 = v10;
  id v11 = v10;

  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[3] = v8[3];
  v7[4] = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[5] = v8[5];
  v7[6] = v8[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for SearchLocation();
  uint64_t v13 = *(int *)(v12 + 32);
  uint64_t v14 = (char *)v7 + v13;
  uint64_t v15 = (char *)v8 + v13;
  uint64_t v16 = type metadata accessor for Location();
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v16);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16);
  if (!v17)
  {
    uint64_t v19 = *(void *)(v16 - 8);
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v20 = sub_10017DF08(&qword_100E639E8);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
LABEL_7:
  uint64_t v21 = *(int *)(v12 + 36);
  uint64_t v22 = (char *)v7 + v21;
  uint64_t v23 = (char *)v8 + v21;
  long long v24 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(_OWORD *)uint64_t v22 = v24;
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = (uint64_t *)((char *)a1 + v25);
  uint64_t v27 = (uint64_t *)((char *)a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003418E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a2 + v7 + 40);
  uint64_t v10 = type metadata accessor for SearchLocation();
  uint64_t v11 = *(int *)(v10 + 32);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E639E8);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = *(int *)(v10 + 36);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100341A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = *(void **)(a1 + v7);
  *uint64_t v8 = *v9;

  uint64_t v11 = v9[2];
  v8[1] = v9[1];
  v8[2] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = v9[4];
  v8[3] = v9[3];
  v8[4] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = v9[6];
  v8[5] = v9[5];
  v8[6] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for SearchLocation();
  uint64_t v15 = *(int *)(v14 + 32);
  uint64_t v16 = (char *)v8 + v15;
  uint64_t v17 = (char *)v9 + v15;
  uint64_t v18 = type metadata accessor for Location();
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    uint64_t v21 = *(void *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v22 = sub_10017DF08(&qword_100E639E8);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_7:
  uint64_t v23 = *(int *)(v14 + 36);
  long long v24 = (char *)v8 + v23;
  uint64_t v25 = (char *)v9 + v23;
  *(_OWORD *)long long v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  uint64_t v26 = *(int *)(a3 + 24);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100341C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100341C6C);
}

uint64_t sub_100341C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SearchLocation();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100341CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100341D08);
}

uint64_t sub_100341D08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SearchLocation();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SearchResultRowView()
{
  uint64_t result = qword_100E6DDB8;
  if (!qword_100E6DDB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100341DD0()
{
  uint64_t result = type metadata accessor for SearchLocation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100341E70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100341E8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v56 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = (void *)(v4 - v3);
  uint64_t v55 = type metadata accessor for SearchResultButtonStyle();
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v51 = (uint64_t)&v48 - v10;
  uint64_t v11 = type metadata accessor for SearchResultRowView();
  uint64_t v12 = v11 - 8;
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v11);
  uint64_t v15 = sub_10017DF08(&qword_100E6DDF8);
  sub_100179C0C();
  uint64_t v52 = v16;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  sub_10017DF08(&qword_100E6DE00);
  sub_100179C0C();
  uint64_t v53 = v21;
  uint64_t v54 = v22;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = sub_10017DF08(&qword_100E6DE08);
  __chkstk_darwin(v26 - 8);
  sub_1001626E0();
  uint64_t v49 = v1;
  uint64_t v50 = v28 - v27;
  sub_100342958(v1, (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v29 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v30 = swift_allocObject();
  sub_100342BF8((uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v30 + v29, (void (*)(void))type metadata accessor for SearchResultRowView);
  uint64_t v60 = v1;
  sub_10017DF08(&qword_100E6DE10);
  sub_100342B7C();
  Button.init(action:label:)();
  *uint64_t v8 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = v51;
  sub_100342BF8((uint64_t)v8, v51, (void (*)(void))type metadata accessor for SearchResultButtonStyle);
  uint64_t v32 = sub_1001246C8(&qword_100E6DE40, &qword_100E6DDF8);
  uint64_t v33 = sub_100342F68(&qword_100E6DE48, (void (*)(uint64_t))type metadata accessor for SearchResultButtonStyle);
  uint64_t v34 = v55;
  View.buttonStyle<A>(_:)();
  sub_100342C58(v31, (void (*)(void))type metadata accessor for SearchResultButtonStyle);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v20, v15);
  uint64_t v35 = v49 + *(int *)(v12 + 28);
  uint64_t v36 = *(void *)(v35 + 48);
  uint64_t v65 = *(void *)(v35 + 40);
  uint64_t v66 = v36;
  uint64_t v61 = v15;
  uint64_t v62 = v34;
  uint64_t v63 = v32;
  uint64_t v64 = v33;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  uint64_t v37 = v50;
  uint64_t v38 = v53;
  View.accessibilityLabel<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v25, v38);
  uint64_t v39 = *(void *)(v35 + 48);
  *uint64_t v5 = *(void *)(v35 + 40);
  v5[1] = v39;
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D0AC((uint64_t)v5, v40, v41, v42, v43, v44, v45, v46, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
    v59);
  swift_bridgeObjectRetain();
  sub_100342C58((uint64_t)v5, (void (*)(void))type metadata accessor for AutomationInfo);
  return sub_100342CB0(v37);
}

uint64_t sub_100342374(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v2 = type metadata accessor for SearchResultRowView();
  return sub_1007744F0((uint64_t)a1 + *(int *)(v2 + 20));
}

uint64_t sub_1003423B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SearchResultRowView();
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = a1 + *(int *)(v4 + 20);
  uint64_t v8 = *(void *)(v6 + 40);
  unint64_t v7 = *(void *)(v6 + 48);
  uint64_t v38 = v8;
  unint64_t v39 = v7;
  uint64_t v9 = *(void *)(a1 + v5 + 8);
  *(void *)&long long v46 = *(void *)(a1 + v5);
  *((void *)&v46 + 1) = v9;
  sub_10014A85C();
  uint64_t v10 = StringProtocol.localizedStandardRange<A>(of:)();
  if (v12)
  {
    uint64_t v38 = v8;
    unint64_t v39 = v7;
    swift_bridgeObjectRetain();
    uint64_t v19 = Text.init<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22 & 1;
    static Color.secondary.getter();
    uint64_t v13 = Text.foregroundColor(_:)();
    uint64_t v15 = v24;
    char v26 = v25;
    uint64_t v28 = v27;
    swift_release();
    char v17 = v26 & 1;
    sub_100191924(v19, v21, v23);
    swift_bridgeObjectRelease();
    *(void *)&long long v46 = v13;
    *((void *)&v46 + 1) = v15;
    char v47 = v26 & 1;
    uint64_t v48 = v28;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v50 = 1;
    char v51 = 0;
    sub_100190CC4(v13, v15, v26 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1006E8CD0(&v46, (uint64_t)&v38);
  }
  else
  {
    uint64_t v13 = sub_100342638(v8, v7, v10, v11);
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    *(void *)&long long v46 = v13;
    *((void *)&v46 + 1) = v14;
    char v47 = v17;
    uint64_t v48 = v18;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v50 = 1;
    char v51 = 0;
    sub_100190CC4(v13, *((uint64_t *)&v46 + 1), v17);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1006E8CB8(&v46, (uint64_t)&v38);
  }
  unint64_t v36 = v39;
  uint64_t v37 = v38;
  uint64_t v29 = v42;
  uint64_t v34 = v41;
  uint64_t v35 = v40;
  uint64_t v30 = v43;
  char v31 = v44;
  char v32 = v45;
  sub_100191924(v13, v15, v17);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v13, v15, v17);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v37;
  *(void *)(a2 + 8) = v36;
  *(void *)(a2 + 16) = v35;
  *(void *)(a2 + 24) = v34;
  *(void *)(a2 + 32) = v29;
  *(void *)(a2 + 40) = v30;
  *(unsigned char *)(a2 + 48) = v31;
  *(unsigned char *)(a2 + 49) = v32;
  return result;
}

uint64_t sub_100342638(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v41 = a1;
  String.subscript.getter();
  swift_bridgeObjectRelease();
  sub_100342D18();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Color.secondary.getter();
  uint64_t v11 = Text.foregroundColor(_:)();
  uint64_t v37 = v12;
  uint64_t v38 = v11;
  char v14 = v13;
  swift_release();
  char v36 = v14 & 1;
  sub_100191924(v6, v8, v10);
  swift_bridgeObjectRelease();
  String.subscript.getter();
  uint64_t v15 = Text.init<A>(_:)();
  uint64_t v17 = v16;
  LOBYTE(v8) = v18 & 1;
  static Color.primary.getter();
  uint64_t v19 = Text.foregroundColor(_:)();
  uint64_t v21 = v20;
  char v23 = v22;
  swift_release();
  sub_100191924(v15, v17, v8);
  swift_bridgeObjectRelease();
  uint64_t v24 = static Text.+ infix(_:_:)();
  uint64_t v40 = v25;
  char v39 = v26 & 1;
  sub_100191924(v19, v21, v23 & 1);
  swift_bridgeObjectRelease();
  sub_100191924(v38, v37, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100ABDCF0(a4, v41, a2);
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v29 = v28;
  LOBYTE(v15) = v30 & 1;
  static Color.secondary.getter();
  uint64_t v31 = Text.foregroundColor(_:)();
  uint64_t v33 = v32;
  LOBYTE(v6) = v34;
  swift_release();
  sub_100191924(v27, v29, v15);
  swift_bridgeObjectRelease();
  uint64_t v43 = static Text.+ infix(_:_:)();
  sub_100191924(v31, v33, v6 & 1);
  swift_bridgeObjectRelease();
  sub_100191924(v24, v40, v39);
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_100342958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultRowView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003429BC()
{
  uint64_t v1 = type metadata accessor for SearchResultRowView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2);
  uint64_t v3 = (id *)(v2 + *(int *)(v1 + 20));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t)v3 + *(int *)(type metadata accessor for SearchLocation() + 32);
  uint64_t v5 = type metadata accessor for Location();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100342B14()
{
  uint64_t v1 = *(void *)(type metadata accessor for SearchResultRowView() - 8);
  uint64_t v2 = (void *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_100342374(v2);
}

uint64_t sub_100342B74@<X0>(uint64_t a1@<X8>)
{
  return sub_1003423B8(*(void *)(v1 + 16), a1);
}

unint64_t sub_100342B7C()
{
  unint64_t result = qword_100E6DE18;
  if (!qword_100E6DE18)
  {
    sub_10018C6DC(&qword_100E6DE10);
    sub_10022F2CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE18);
  }
  return result;
}

uint64_t sub_100342BF8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100342C58(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100342CB0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6DE08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100342D18()
{
  unint64_t result = qword_100E6DE50;
  if (!qword_100E6DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE50);
  }
  return result;
}

unint64_t sub_100342D68()
{
  unint64_t result = qword_100E6DE58;
  if (!qword_100E6DE58)
  {
    sub_10018C6DC(&qword_100E6DE60);
    sub_100342E14();
    sub_100342F68((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE58);
  }
  return result;
}

unint64_t sub_100342E14()
{
  unint64_t result = qword_100E6DE68;
  if (!qword_100E6DE68)
  {
    sub_10018C6DC(&qword_100E6DE08);
    sub_10018C6DC(&qword_100E6DDF8);
    type metadata accessor for SearchResultButtonStyle();
    sub_1001246C8(&qword_100E6DE40, &qword_100E6DDF8);
    sub_100342F68(&qword_100E6DE48, (void (*)(uint64_t))type metadata accessor for SearchResultButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100342F68((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE68);
  }
  return result;
}

uint64_t sub_100342F68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100342FB0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E06448, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t sub_100342FFC(char a1)
{
  unint64_t result = 1768319351;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    case 3:
      unint64_t result = 0x72656874616577;
      break;
    case 4:
      unint64_t result = 0x436C6F72746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003430C0()
{
  return sub_10088A1EC();
}

Swift::Int sub_1003430CC()
{
  return sub_100652510(*v0);
}

uint64_t sub_1003430D4()
{
  return sub_1002C2480();
}

Swift::Int sub_1003430DC(uint64_t a1)
{
  return sub_1002C47FC(a1, *v1);
}

unint64_t sub_1003430E4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100342FB0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100343114@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100342FFC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100343140()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1003431A0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1003431F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6DE78);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_100343584();
  uint64_t v6 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
}

uint64_t sub_1003434A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1003431F0(a1);
}

uint64_t sub_1003434B0()
{
  sub_1003435D8();

  return ShortDescribable.description.getter();
}

uint64_t sub_1003434EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static LocationAuthorizationState.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_100343518()
{
  return LocationAuthorizationState.write(to:)();
}

unint64_t sub_100343538()
{
  unint64_t result = qword_100E6DE70;
  if (!qword_100E6DE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE70);
  }
  return result;
}

unint64_t sub_100343584()
{
  unint64_t result = qword_100E6DE80;
  if (!qword_100E6DE80)
  {
    sub_10018C6DC(&qword_100E6DE78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE80);
  }
  return result;
}

unint64_t sub_1003435D8()
{
  unint64_t result = qword_100E6DE88;
  if (!qword_100E6DE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE88);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationAuthorizationState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SystemSettingLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100343778);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemSettingLocation()
{
  return &type metadata for SystemSettingLocation;
}

unint64_t sub_1003437B4()
{
  unint64_t result = qword_100E6DE90;
  if (!qword_100E6DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE90);
  }
  return result;
}

unint64_t sub_100343800()
{
  unint64_t result = qword_100E6DE98[0];
  if (!qword_100E6DE98[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E6DE98);
  }
  return result;
}

id sub_10034384C()
{
  uint64_t v1 = *(void **)(v0 + 8);
  if (v1)
  {
    id v2 = *(id *)(v0 + 8);
  }
  else
  {
    id v3 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
    *(void *)(v0 + 8) = v3;
    id v2 = v3;
    uint64_t v1 = 0;
  }
  id v4 = v1;
  return v2;
}

uint64_t type metadata accessor for ElevatedAqiContentView()
{
  return sub_100109098();
}

uint64_t sub_1003438D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100343918@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = type metadata accessor for Optional();
  v70[2] = a5;
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E7A830;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E7ABC0;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E7A9F8;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E7A4A0;
  }
  else {
    uint64_t v21 = &qword_100E7A668;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  char v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  char v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  char v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100343DE0@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v100 = a6;
  uint64_t v108 = a2;
  uint64_t v88 = a7;
  uint64_t v11 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Optional();
  uint64_t v98 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v103 = (char *)&v84 - v16;
  uint64_t v86 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v84 - v19;
  uint64_t v21 = *(void *)(a5 - 8);
  __chkstk_darwin(v22);
  uint64_t v97 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v96 = (char *)&v84 - v25;
  __chkstk_darwin(v26);
  uint64_t v95 = (char *)&v84 - v27;
  __chkstk_darwin(v28);
  uint64_t v93 = (char *)&v84 - v29;
  __chkstk_darwin(v30);
  int v94 = (char *)&v84 - v31;
  __chkstk_darwin(v32);
  uint64_t v92 = (char *)&v84 - v33;
  __chkstk_darwin(v34);
  uint64_t v101 = (char *)&v84 - v35;
  __chkstk_darwin(v36);
  uint64_t v107 = (char *)&v84 - v37;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v84 - v39;
  __chkstk_darwin(v41);
  unsigned int v43 = (char *)&v84 - v42;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_airQuality, (uint64_t)v20);
  uint64_t v44 = *a4;
  uint64_t v45 = a4[1];
  uint64_t v46 = a4[2];
  uint64_t v47 = a4[3];
  uint64_t v89 = a3;
  v108(v20, v44, v45, v46, v47);
  uint64_t v48 = (uint64_t)v20;
  sub_1001F2B74((uint64_t)v20);
  uint64_t v91 = v43;
  sub_100121584((uint64_t)v40, a5, (uint64_t)v43);
  uint64_t v87 = v21;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  uint64_t v106 = v40;
  uint64_t v99 = v21 + 8;
  uint64_t v90 = v49;
  v49((uint64_t)v40, a5);
  uint64_t v102 = a1;
  uint64_t v50 = a1 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map;
  swift_beginAccess();
  sub_10027A764(v50, (uint64_t)v13);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v86) == 1)
  {
    sub_10027A7CC((uint64_t)v13);
  }
  else
  {
    uint64_t v51 = v85;
    sub_10027A82C((uint64_t)v13, v85);
    sub_10027A890((uint64_t)(a4 + 24), (uint64_t)v128);
    sub_10027A890((uint64_t)v128, (uint64_t)v129);
    if (v130 != 1)
    {
      uint64_t v55 = (uint64_t)v107;
      v108((char *)v51, v129[0], v129[1], v129[2], v129[3]);
      sub_1001F2B74(v51);
      uint64_t v56 = (uint64_t)v106;
      sub_100121584(v55, a5, (uint64_t)v106);
      uint64_t v57 = v90;
      uint64_t v48 = (uint64_t)v20;
      v90(v55, a5);
      uint64_t v58 = (uint64_t)v104;
      sub_100121584(v56, a5, (uint64_t)v104);
      v57(v56, a5);
      _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, a5);
      sub_1000CA354();
      uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v59(v58, v105);
      goto LABEL_7;
    }
    sub_1001F2B74(v51);
  }
  uint64_t v52 = (uint64_t)v104;
  uint64_t v53 = v105;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 1, 1, a5);
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v52, v53);
LABEL_7:
  uint64_t v60 = v102;
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v48);
  uint64_t v61 = (uint64_t)v107;
  v108((char *)v48, a4[16], a4[17], a4[18], a4[19]);
  sub_1001F2B74(v48);
  sub_100121584(v61, a5, (uint64_t)v106);
  uint64_t v62 = v90;
  v90(v61, a5);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v48);
  uint64_t v63 = (uint64_t)v101;
  uint64_t v64 = v108;
  v108((char *)v48, a4[8], a4[9], a4[10], a4[11]);
  sub_1001F2B74(v48);
  sub_100121584(v63, a5, v61);
  v62(v63, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v48);
  uint64_t v65 = (uint64_t)v92;
  v64((char *)v48, a4[45], a4[46], a4[47], a4[48]);
  sub_1001F2B74(v48);
  uint64_t v66 = v63;
  uint64_t v67 = v100;
  sub_100121584(v65, a5, v66);
  v62(v65, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v48);
  uint64_t v68 = a4[41];
  uint64_t v69 = a4[42];
  uint64_t v70 = a4[43];
  uint64_t v71 = a4[44];
  uint64_t v72 = (uint64_t)v94;
  v108((char *)v48, v68, v69, v70, v71);
  sub_1001F2B74(v48);
  sub_100121584(v72, a5, v65);
  v62(v72, a5);
  uint64_t v73 = *(void (**)(void))(v87 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v73)(v72, v91, a5);
  uint64_t v122 = v72;
  uint64_t v74 = v98 + 16;
  uint64_t v75 = (uint64_t)v104;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v104, v103, v105);
  uint64_t v123 = v75;
  uint64_t v76 = v93;
  v73();
  uint64_t v124 = v76;
  uint64_t v77 = v95;
  v73();
  uint64_t v125 = v77;
  uint64_t v78 = v96;
  ((void (*)(char *, char *, uint64_t))v73)(v96, v101, a5);
  uint64_t v126 = v78;
  uint64_t v79 = v97;
  uint64_t v80 = v92;
  ((void (*)(char *, char *, uint64_t))v73)(v97, v92, a5);
  uint64_t v127 = v79;
  uint64_t v81 = v105;
  uint64_t v116 = a5;
  uint64_t v117 = v105;
  uint64_t v118 = a5;
  uint64_t v119 = a5;
  uint64_t v120 = a5;
  uint64_t v121 = a5;
  uint64_t v109 = v67;
  uint64_t v110 = v67;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v112 = v67;
  uint64_t v113 = v67;
  uint64_t v114 = v67;
  uint64_t v115 = v67;
  sub_1006E9080();
  v62((uint64_t)v80, a5);
  v62((uint64_t)v101, a5);
  v62((uint64_t)v107, a5);
  v62((uint64_t)v106, a5);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v74 - 8);
  v82(v103, v81);
  v62((uint64_t)v91, a5);
  v62((uint64_t)v97, a5);
  v62((uint64_t)v96, a5);
  v62((uint64_t)v95, a5);
  v62((uint64_t)v93, a5);
  v82(v104, v81);
  return ((uint64_t (*)(char *, uint64_t))v62)(v94, a5);
}

uint64_t sub_100344774@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  int v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[53];
  uint64_t v50 = a3[54];
  uint64_t v51 = a3[55];
  uint64_t v52 = a3[56];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_1003451BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100343918(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_1003451E8()
{
  return sub_100345218((uint64_t (*)(void, void, void, void, void, void, void))sub_100343DE0);
}

uint64_t sub_100345200()
{
  return sub_100345218((uint64_t (*)(void, void, void, void, void, void, void))sub_100344774);
}

uint64_t sub_100345218(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10034524C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, a1, v7);
  type metadata accessor for ConditionDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1001AAF58((uint64_t)v5, (uint64_t)v9, v6);
  sub_100016E7C((uint64_t)v9);
  sub_1001ABE70((uint64_t)v5);
  return swift_release();
}

uint64_t SidebarVisibilityMonitor.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DayPickerInteractor()
{
  return self;
}

ValueMetadata *type metadata accessor for LocationViewerTracker()
{
  return &type metadata for LocationViewerTracker;
}

uint64_t SavedLocationsMonitor.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 104);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 144);
  return v0;
}

uint64_t SavedLocationsMonitor.__deallocating_deinit()
{
  SavedLocationsMonitor.deinit();

  return swift_deallocClassInstance();
}

void sub_10034546C()
{
}

uint64_t SavedLocationsMonitor.savedLocationsDidUpdate(manager:savedLocations:)(uint64_t a1, uint64_t a2)
{
  return sub_10001DCE4(a2);
}

uint64_t sub_1003454A4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void *sub_1003454EC(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = sub_10017DF08(&qword_100E66478);
        *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
        goto LABEL_9;
      case 1u:
        uint64_t v10 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_9;
      case 2u:
        uint64_t v11 = type metadata accessor for DetailCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = sub_10017DF08(&qword_100E66488);
        *((unsigned char *)a1 + *(int *)(v12 + 48)) = *((unsigned char *)a2 + *(int *)(v12 + 48));
        goto LABEL_9;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

unsigned char *sub_100345768(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = sub_10017DF08(&qword_100E66478);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      goto LABEL_7;
    case 1u:
      uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_7;
    case 2u:
      uint64_t v9 = type metadata accessor for DetailCondition();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = sub_10017DF08(&qword_100E66488);
      a1[*(int *)(v10 + 48)] = a2[*(int *)(v10 + 48)];
      goto LABEL_7;
    case 4u:
      *a1 = *a2;
      uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *sub_10034598C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100345BC0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for URL();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = sub_10017DF08(&qword_100E66478);
        a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
        goto LABEL_8;
      case 1u:
        uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_8;
      case 2u:
        uint64_t v9 = type metadata accessor for DetailCondition();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = sub_10017DF08(&qword_100E66488);
        a1[*(int *)(v10 + 48)] = a2[*(int *)(v10 + 48)];
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100345BC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationComponentAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *sub_100345C1C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_10017DF08(&qword_100E66478);
      a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
      goto LABEL_7;
    case 1u:
      uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_7;
    case 2u:
      uint64_t v9 = type metadata accessor for DetailCondition();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = sub_10017DF08(&qword_100E66488);
      a1[*(int *)(v10 + 48)] = a2[*(int *)(v10 + 48)];
      goto LABEL_7;
    case 4u:
      *a1 = *a2;
      uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *sub_100345E40(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100345BC0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for URL();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = sub_10017DF08(&qword_100E66478);
        a1[*(int *)(v7 + 48)] = a2[*(int *)(v7 + 48)];
        goto LABEL_8;
      case 1u:
        uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        goto LABEL_8;
      case 2u:
        uint64_t v9 = type metadata accessor for DetailCondition();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v10 = sub_10017DF08(&qword_100E66488);
        a1[*(int *)(v10 + 48)] = a2[*(int *)(v10 + 48)];
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        uint64_t v14 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t *sub_100346074(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for Location();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_100346180(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = a1 + *(int *)(sub_10017DF08(&qword_100E66450) + 48);
  uint64_t v4 = type metadata accessor for LocationOfInterest();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t sub_100346230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t sub_1003462F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_1003463B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_100346470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t sub_100346530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66450);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10034657C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E66450);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, v6);
}

uint64_t type metadata accessor for LocationFooterAction(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E6E1B0);
}

uint64_t sub_1003465F8(uint64_t a1)
{
  uint64_t result = type metadata accessor for Location();
  if (v3 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationOfInterest();
    if (v4 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSingleCase();
      uint64_t result = 0;
      *(_DWORD *)(*(void *)(a1 - 8) + 84) = v5;
    }
  }
  return result;
}

uint64_t sub_1003466E8(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = a1;
  uint64_t v82 = a2;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v79 = v3;
  uint64_t v80 = v2;
  __chkstk_darwin(v2);
  sub_100162EF8();
  uint64_t v71 = v4;
  __chkstk_darwin(v5);
  uint64_t v72 = (char *)&v69 - v6;
  sub_100129064();
  type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v77 = v8;
  uint64_t v78 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v70 = v9;
  sub_100129064();
  type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v75 = v11;
  uint64_t v76 = v10;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v69 = v12;
  sub_100129064();
  type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v73 = v14;
  uint64_t v74 = v13;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for LocationComponentAction(0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (unsigned __int8 *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v69 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v69 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v69 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v69 - v31;
  uint64_t v33 = sub_10017DF08(&qword_100E6E1C0);
  __chkstk_darwin(v33 - 8);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v38 = (unsigned char *)(v35 - v34 + *(int *)(v37 + 56));
  sub_1003470FC(v81, v35 - v34, type metadata accessor for LocationComponentAction);
  sub_1003470FC(v82, (uint64_t)v38, type metadata accessor for LocationComponentAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003470FC(v36, (uint64_t)v30, type metadata accessor for LocationComponentAction);
      if (sub_10019E87C() == 1)
      {
        uint64_t v42 = v75;
        uint64_t v41 = v76;
        uint64_t v43 = v69;
        (*(void (**)(char *, unsigned char *, uint64_t))(v75 + 32))(v69, v38, v76);
        char v44 = static WeatherMapOverlayKind.== infix(_:_:)();
        uint64_t v45 = *(void (**)(char *, uint64_t))(v42 + 8);
        v45(v43, v41);
        v45(v30, v41);
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v75 + 8))(v30, v76);
      goto LABEL_25;
    case 2u:
      sub_1003470FC(v36, (uint64_t)v27, type metadata accessor for LocationComponentAction);
      uint64_t v46 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
      char v47 = v27[v46];
      if (sub_10019E87C() != 2)
      {
        (*(void (**)(char *, uint64_t))(v77 + 8))(v27, v78);
        goto LABEL_25;
      }
      char v48 = v38[v46];
      uint64_t v50 = v77;
      uint64_t v49 = v78;
      uint64_t v51 = v70;
      (*(void (**)(char *, unsigned char *, uint64_t))(v77 + 32))(v70, v38, v78);
      char v52 = static DetailCondition.== infix(_:_:)();
      uint64_t v53 = *(void (**)(char *, uint64_t))(v50 + 8);
      v53(v51, v49);
      v53(v27, v49);
      if ((v52 & 1) == 0) {
        goto LABEL_31;
      }
      char v54 = v47 ^ v48;
      goto LABEL_30;
    case 3u:
      sub_1003470FC(v36, (uint64_t)v24, type metadata accessor for LocationComponentAction);
      if (sub_10019E87C() != 3) {
        goto LABEL_25;
      }
      char v54 = *v24 ^ *v38;
      goto LABEL_30;
    case 4u:
      sub_1003470FC(v36, (uint64_t)v21, type metadata accessor for LocationComponentAction);
      uint64_t v55 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
      if (sub_10019E87C() != 4)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v79 + 8))(&v21[v55], v80);
        goto LABEL_25;
      }
      int v56 = *v21;
      int v57 = *v38;
      uint64_t v59 = v79;
      uint64_t v58 = v80;
      uint64_t v60 = *(void (**)(void))(v79 + 32);
      uint64_t v61 = v72;
      sub_1001A0544();
      v60();
      sub_1001A0544();
      v60();
      if (v56 != v57)
      {
        uint64_t v62 = *(void (**)(void))(v59 + 8);
        sub_10017CA60();
        v62();
        sub_10017CA60();
        v62();
        goto LABEL_31;
      }
      char v44 = static Location.== infix(_:_:)();
      uint64_t v68 = *(void (**)(void))(v59 + 8);
      sub_10017CA60();
      v68();
      ((void (*)(char *, uint64_t))v68)(v61, v58);
LABEL_33:
      sub_100345BC0(v36);
      return v44 & 1;
    case 5u:
      if (sub_10019E87C() != 5) {
        goto LABEL_25;
      }
      goto LABEL_21;
    case 6u:
      if (sub_10019E87C() != 6) {
        goto LABEL_25;
      }
      goto LABEL_21;
    case 7u:
      if (sub_10019E87C() != 7) {
        goto LABEL_25;
      }
      goto LABEL_21;
    case 8u:
      if (sub_10019E87C() != 8) {
        goto LABEL_25;
      }
LABEL_21:
      sub_100345BC0(v36);
      char v44 = 1;
      return v44 & 1;
    default:
      sub_1003470FC(v36, (uint64_t)v32, type metadata accessor for LocationComponentAction);
      uint64_t v39 = *(int *)(sub_10017DF08(&qword_100E66478) + 48);
      char v40 = v32[v39];
      if (sub_10019E87C())
      {
        (*(void (**)(char *, uint64_t))(v73 + 8))(v32, v74);
LABEL_25:
        sub_10034709C(v36);
        goto LABEL_26;
      }
      char v64 = v38[v39];
      uint64_t v65 = v73;
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v73 + 32))(v17, v38, v74);
      char v66 = static URL.== infix(_:_:)();
      uint64_t v67 = *(void (**)(void))(v65 + 8);
      sub_10017CA60();
      v67();
      sub_10017CA60();
      v67();
      if ((v66 & 1) == 0)
      {
LABEL_31:
        sub_100345BC0(v36);
LABEL_26:
        char v44 = 0;
        return v44 & 1;
      }
      char v54 = v40 ^ v64;
LABEL_30:
      sub_100345BC0(v36);
      char v44 = v54 ^ 1;
      return v44 & 1;
  }
}

uint64_t sub_100346DC4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v31 = v5;
  uint64_t v32 = v4;
  __chkstk_darwin(v4);
  sub_100162EF8();
  v30[1] = v6;
  __chkstk_darwin(v7);
  v30[0] = (char *)v30 - v8;
  sub_100129064();
  uint64_t v9 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v16 = sub_10017DF08(&qword_100E6E1C8);
  __chkstk_darwin(v16 - 8);
  sub_1001626E0();
  uint64_t v20 = v18 - v17 + *(int *)(v19 + 56);
  sub_1003470FC(a1, v18 - v17, type metadata accessor for LocationFooterAction);
  sub_1003470FC(a2, v20, type metadata accessor for LocationFooterAction);
  sub_10017DF08(&qword_100E66450);
  uint64_t v21 = *(void (**)(void))(v11 + 32);
  sub_1001A0544();
  v21();
  uint64_t v33 = v9;
  sub_1001A0544();
  v21();
  uint64_t v22 = v31;
  uint64_t v23 = *(void (**)(void))(v31 + 32);
  sub_1001A0544();
  v23();
  sub_1001A0544();
  v23();
  uint64_t v34 = v14;
  if (static Location.== infix(_:_:)())
  {
    char v24 = static LocationOfInterest.== infix(_:_:)();
    uint64_t v25 = *(void (**)(void))(v22 + 8);
    sub_100179FE4();
    v25();
    sub_100179FE4();
    v25();
    uint64_t v26 = *(void (**)(void))(v11 + 8);
    sub_10017FAB0();
    v26();
    sub_10017FAB0();
    v26();
  }
  else
  {
    uint64_t v27 = *(void (**)(void))(v22 + 8);
    sub_100179FE4();
    v27();
    sub_100179FE4();
    v27();
    uint64_t v28 = *(void (**)(void))(v11 + 8);
    sub_10017FAB0();
    v28();
    sub_10017FAB0();
    v28();
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_10034709C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6E1C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003470FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for Map(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Map(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_1003471B4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1003471D0(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

ValueMetadata *type metadata accessor for Map()
{
  return &type metadata for Map;
}

uint64_t sub_100347200(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 185) = a4;
  *(void *)(v4 + 248) = a2;
  *(void *)(v4 + 256) = a3;
  *(void *)(v4 + 240) = a1;
  uint64_t v5 = type metadata accessor for WeatherMapPerformanceTestConditions();
  *(void *)(v4 + 264) = v5;
  sub_100164920(v5);
  *(void *)(v4 + 272) = v6;
  *(void *)(v4 + 280) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Location();
  *(void *)(v4 + 288) = v7;
  sub_100164920(v7);
  *(void *)(v4 + 296) = v8;
  *(void *)(v4 + 304) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SavedLocation();
  *(void *)(v4 + 312) = v9;
  sub_100164920(v9);
  *(void *)(v4 + 320) = v10;
  *(void *)(v4 + 328) = swift_task_alloc();
  *(void *)(v4 + 336) = swift_task_alloc();
  sub_10017DF08(&qword_100E639E8);
  *(void *)(v4 + 344) = swift_task_alloc();
  sub_10017DF08(&qword_100E6E1E0);
  *(void *)(v4 + 352) = swift_task_alloc();
  *(void *)(v4 + 360) = swift_task_alloc();
  *(void *)(v4 + 368) = swift_task_alloc();
  *(void *)(v4 + 376) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 384) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003473E0, v12, v11);
}

uint64_t sub_1003473E0()
{
  uint64_t v60 = v0;
  swift_release();
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  char v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = *(unsigned char *)(v0 + 185);
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v59 = v8;
    *(void *)(v0 + 168) = v6;
    *(void *)(v0 + 176) = v5;
    *(unsigned char *)(v0 + 184) = v4 & 1;
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)(v0 + 232) = sub_10016414C(v9, v10, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Performing Map instruction: %s", v7, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }

  uint64_t v11 = *(void *)(v0 + 368);
  uint64_t v12 = *(void *)(v0 + 264);
  CurrentValueSubject.value.getter();
  int v13 = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v12);
  uint64_t v14 = *(void *)(v0 + 368);
  if (v13 == 1)
  {
    _s7Weather24LocationCompositionStateOwst_0(*(void *)(v0 + 344), 1, 1, *(void *)(v0 + 288));
    WeatherMapPerformanceTestConditions.init(location:zoomLevel:)();
    sub_1000F3400(v14, &qword_100E6E1E0);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 272) + 32))(*(void *)(v0 + 376), *(void *)(v0 + 368), *(void *)(v0 + 264));
  }
  char v15 = *(unsigned char *)(v0 + 185);
  _s7Weather24LocationCompositionStateOwst_0(*(void *)(v0 + 376), 0, 1, *(void *)(v0 + 264));
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  if ((v15 & 1) == 0)
  {
    if (v18)
    {
      uint64_t v19 = *(void *)(v0 + 248);
      uint64_t v20 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134218242;
      *(void *)(v0 + 208) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v21 = Double.description.getter();
      *(void *)(v0 + 216) = sub_10016414C(v21, v22, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Set map location and zoomLevel. index=%ld, zoomLevel=%s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }

    uint64_t v23 = *(void *)(v0 + 248);
    uint64_t v24 = *(void *)(sub_10019E894() + 16);
    swift_bridgeObjectRelease();
    if (v24 <= v23)
    {
      sub_100321130(*(void *)(v0 + 240), v0 + 16);
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = *(void *)(v0 + 248);
        uint64_t v42 = swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 134218240;
        *(void *)(v0 + 224) = v41;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v42 + 12) = 2048;
        sub_1001B1E64((void *)(v0 + 64), *(void *)(v0 + 88));
        uint64_t v43 = *(void *)(dispatch thunk of SavedLocationsManagerType.savedLocations.getter() + 16);
        swift_bridgeObjectRelease();
        sub_10032118C(v0 + 16);
        *(void *)(v0 + 192) = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Cannot select location. index=%ld, count=%ld", (uint8_t *)v42, 0x16u);
        sub_100162EE0();
      }
      else
      {
        sub_10032118C(v0 + 16);
      }

      goto LABEL_26;
    }
    uint64_t v25 = *(void *)(v0 + 248);
    uint64_t result = sub_10019E894();
    if (v25 < 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v27 = *(void *)(v0 + 248);
      if (*(void *)(result + 16) > v27)
      {
        uint64_t v29 = *(void *)(v0 + 328);
        uint64_t v28 = *(void *)(v0 + 336);
        sub_100347CE4(result+ ((*(unsigned __int8 *)(*(void *)(v0 + 320) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 320) + 80))+ *(void *)(*(void *)(v0 + 320) + 72) * v27, v28);
        swift_bridgeObjectRelease();
        sub_100347CE4(v28, v29);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1000EBE64(*(void *)(v0 + 328));
          uint64_t v30 = Logger.logObject.getter();
          os_log_type_t v31 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v30, v31))
          {
            uint64_t v32 = *(void *)(v0 + 248);
            uint64_t v33 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v33 = 134217984;
            *(void *)(v0 + 200) = v32;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v30, v31, "Selected location was pending reverse geocode. index=%ld", v33, 0xCu);
            sub_100162EE0();
          }
          uint64_t v34 = *(void *)(v0 + 336);

          sub_1000EBE64(v34);
          goto LABEL_26;
        }
        uint64_t v45 = *(void *)(v0 + 376);
        uint64_t v46 = *(void *)(v0 + 264);
        (*(void (**)(void, void, void))(*(void *)(v0 + 296) + 32))(*(void *)(v0 + 304), *(void *)(v0 + 328), *(void *)(v0 + 288));
        uint64_t v47 = 1;
        if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v46))
        {
          uint64_t v48 = *(void *)(v0 + 344);
          uint64_t v50 = *(void *)(v0 + 296);
          uint64_t v49 = *(void *)(v0 + 304);
          uint64_t v52 = *(void *)(v0 + 280);
          uint64_t v51 = *(void *)(v0 + 288);
          uint64_t v54 = *(void *)(v0 + 264);
          uint64_t v53 = *(void *)(v0 + 272);
          (*(void (**)(uint64_t, void, uint64_t))(v53 + 16))(v52, *(void *)(v0 + 376), v54);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v48, v49, v51);
          _s7Weather24LocationCompositionStateOwst_0(v48, 0, 1, v51);
          WeatherMapPerformanceTestConditions.with(location:zoomLevel:)();
          sub_1000F3400(v48, &qword_100E639E8);
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
          uint64_t v47 = 0;
        }
        uint64_t v55 = *(void *)(v0 + 376);
        uint64_t v56 = *(void *)(v0 + 360);
        uint64_t v57 = *(void *)(v0 + 336);
        uint64_t v58 = *(void *)(v0 + 264);
        (*(void (**)(void, void))(*(void *)(v0 + 296) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 288));
        sub_1000EBE64(v57);
        _s7Weather24LocationCompositionStateOwst_0(v56, v47, 1, v58);
        sub_100347D48(v56, v55);
        goto LABEL_21;
      }
    }
    __break(1u);
    return result;
  }
  if (v18)
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Reset map conditions.", v35, 2u);
    sub_100162EE0();
  }
  uint64_t v36 = *(void *)(v0 + 376);
  uint64_t v37 = *(void *)(v0 + 264);

  sub_1000F3400(v36, &qword_100E6E1E0);
  _s7Weather24LocationCompositionStateOwst_0(v36, 1, 1, v37);
LABEL_21:
  uint64_t v38 = *(void *)(v0 + 352);
  sub_100347DB0(*(void *)(v0 + 376), v38);
  sub_100920004(v38);
  sub_1000F3400(v38, &qword_100E6E1E0);
LABEL_26:
  sub_1000F3400(*(void *)(v0 + 376), &qword_100E6E1E0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_100347C34(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  char v6 = *(unsigned char *)(v1 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1002205C0;
  return sub_100347200(a1, v4, v5, v6);
}

uint64_t sub_100347CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SavedLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100347D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6E1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100347DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6E1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100347E18(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6E1E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100347E78()
{
  unint64_t result = qword_100E6E1F8;
  if (!qword_100E6E1F8)
  {
    type metadata accessor for SessionEndData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E1F8);
  }
  return result;
}

uint64_t SessionScenePhaseObserver.deinit()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  return v0;
}

uint64_t SessionScenePhaseObserver.__deallocating_deinit()
{
  SessionScenePhaseObserver.deinit();

  return swift_deallocClassInstance();
}

void sub_100347F2C()
{
  qword_100F51340 = 0x4028000000000000;
}

void sub_100347F3C()
{
  qword_100F51350 = 0x4028000000000000;
}

void sub_100347F4C()
{
  qword_100F51358 = 0x4020000000000000;
}

void sub_100347F5C()
{
  qword_100F51360 = 0x402C000000000000;
}

void sub_100347F6C()
{
  qword_100F51368 = 0x402C000000000000;
}

unint64_t sub_100347F7C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E064E0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_100347FC8(char a1)
{
  uint64_t result = 0x696C617551726961;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7469706963657270;
      break;
    case 2:
      uint64_t result = 0x74617265706D6574;
      break;
    case 3:
      uint64_t result = 1684957559;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10034806C()
{
  return sub_100889FE0();
}

Swift::Int sub_100348078()
{
  return sub_100652528(*v0);
}

uint64_t sub_100348080()
{
  return sub_1002C2374();
}

Swift::Int sub_100348088(uint64_t a1)
{
  return sub_1002C4884(a1, *v1);
}

unint64_t sub_100348090@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100347F7C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003480C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100347FC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t destroy for LocationViewDescription()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s7Weather23LocationViewDescriptionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocationViewDescription(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for LocationViewDescription(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocationViewDescription()
{
  return &type metadata for LocationViewDescription;
}

uint64_t getEnumTagSinglePayload for NotificationAuthorizationState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LocationViewDescription.NotableCondition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100348368);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewDescription.NotableCondition()
{
  return &type metadata for LocationViewDescription.NotableCondition;
}

unint64_t sub_1003483A4()
{
  unint64_t result = qword_100E6E2B0;
  if (!qword_100E6E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E2B0);
  }
  return result;
}

uint64_t sub_1003483F0(uint64_t a1)
{
  unint64_t v2 = sub_1003484F4();

  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_100348444(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1003484F4();

  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

uint64_t sub_1003484A0(uint64_t a1)
{
  unint64_t v2 = sub_1003484F4();

  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

unint64_t sub_1003484F4()
{
  unint64_t result = qword_100E6E2B8;
  if (!qword_100E6E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E2B8);
  }
  return result;
}

uint64_t sub_100348540()
{
  uint64_t v0 = type metadata accessor for RoundedCornerStyle();
  sub_100097814(v0, qword_100F51370);
  uint64_t v1 = sub_1002102B0(v0, (uint64_t)qword_100F51370);
  uint64_t v2 = enum case for RoundedCornerStyle.continuous(_:);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_1003485C8()
{
  return static AnyTransition.modifier<A>(active:identity:)();
}

unint64_t sub_100348628()
{
  unint64_t result = qword_100E6E2C8;
  if (!qword_100E6E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E2C8);
  }
  return result;
}

uint64_t sub_100348674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8 = sub_10017DF08(&qword_100E6E358);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E6E360);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a1, v12);
  *(double *)&v11[*(int *)(v9 + 44)] = a4;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100348CD4((uint64_t)v11, a2);
  uint64_t v14 = a2 + *(int *)(sub_10017DF08(&qword_100E6E368) + 36);
  *(void *)uint64_t v14 = KeyPath;
  *(double *)(v14 + 8) = a3;
  return sub_100348D3C((uint64_t)v11);
}

double sub_100348788()
{
  sub_100348800();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t sub_1003487C4()
{
  return EnvironmentValues.subscript.setter();
}

unint64_t sub_100348800()
{
  unint64_t result = qword_100E6E2D0[0];
  if (!qword_100E6E2D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E6E2D0);
  }
  return result;
}

ValueMetadata *_s15CornerRadiusKeyVMa()
{
  return &_s15CornerRadiusKeyVN;
}

ValueMetadata *type metadata accessor for LocationListTransitionModifier()
{
  return &type metadata for LocationListTransitionModifier;
}

uint64_t sub_10034886C(uint64_t a1)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));

  return swift_release();
}

uint64_t sub_1003488AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_retain();
  return a1;
}

uint64_t sub_100348904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10018F6D8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100348974(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10018F6D8(v6, v7);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppStateTransitionModifier(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppStateTransitionModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100348A48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100348A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100348674(a1, a2, *v2, v2[1]);
}

void sub_100348A94()
{
  qword_100E6E2C0 = 0;
}

uint64_t *sub_100348AA0()
{
  if (qword_100E62278 != -1) {
    swift_once();
  }
  return &qword_100E6E2C0;
}

double sub_100348AEC@<D0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_100348AA0();
  double result = *(double *)v2;
  *a1 = *v2;
  return result;
}

uint64_t sub_100348B18@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, double)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int v13 = (char *)&v22 - v12;
  char v15 = v14 & 1;
  sub_100195B7C(v16, v14 & 1);
  sub_100201DE4();
  double v18 = v17;
  uint64_t v19 = sub_10018F6D8(a1, v15);
  a2(v19, v18);
  sub_100121584((uint64_t)v10, a3, (uint64_t)v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, a3);
  sub_100121584((uint64_t)v13, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, a3);
}

uint64_t sub_100348C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100348B18(*(void *)v2, *(void (**)(uint64_t, double))(v2 + 16), *(void *)(a1 + 16), a2);
}

uint64_t sub_100348CB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100348CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6E358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100348D3C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6E358);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100348DA0()
{
  unint64_t result = qword_100E6E370;
  if (!qword_100E6E370)
  {
    sub_10018C6DC(&qword_100E6E368);
    sub_100348E40();
    sub_1001246C8(&qword_100E6E388, &qword_100E6E390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E370);
  }
  return result;
}

unint64_t sub_100348E40()
{
  unint64_t result = qword_100E6E378;
  if (!qword_100E6E378)
  {
    sub_10018C6DC(&qword_100E6E358);
    sub_1001246C8(&qword_100E6E380, &qword_100E6E360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E378);
  }
  return result;
}

uint64_t sub_100348EE0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t *sub_100348EE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for WeatherDescription();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100348FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10034905C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003490D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100349164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100349178);
}

uint64_t sub_100349178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for WeatherDescription();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100349208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10034921C);
}

void sub_10034921C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for WeatherDescription();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_1003492A8(uint64_t a1, uint64_t a2)
{
  if ((static WeatherDescription.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100349328(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100349430(char a1)
{
  if (a1) {
    return 0x79726F6765746163;
  }
  else {
    return 0x7470697263736564;
  }
}

uint64_t sub_100349470(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6E440);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10034995C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for WeatherDescription();
  sub_1003499A8(&qword_100E6E448);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1003495DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v29 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v27 = v5;
  __chkstk_darwin(v6);
  sub_10012B938();
  uint64_t v30 = sub_10017DF08(&qword_100E6E428);
  sub_100179C0C();
  uint64_t v28 = v7;
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_10034995C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v27;
  char v32 = 0;
  sub_1003499A8(&qword_100E6E438);
  uint64_t v14 = v29;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  char v15 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  uint64_t v25 = (uint64_t)v12;
  v15(v12, v3, v14);
  char v31 = 1;
  uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v18 = v17;
  uint64_t v19 = sub_10019E8D0();
  v20(v19);
  uint64_t v22 = v25;
  uint64_t v21 = v26;
  uint64_t v23 = (uint64_t *)(v25 + *(int *)(v9 + 20));
  *uint64_t v23 = v16;
  v23[1] = v18;
  sub_100218358(v22, v21);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1002182FC(v22);
}

uint64_t sub_100349880()
{
  return sub_100349430(*v0);
}

uint64_t sub_100349888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100349328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003498B0(uint64_t a1)
{
  unint64_t v2 = sub_10034995C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003498EC(uint64_t a1)
{
  unint64_t v2 = sub_10034995C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100349928@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003495DC(a1, a2);
}

uint64_t sub_100349940(void *a1)
{
  return sub_100349470(a1);
}

unint64_t sub_10034995C()
{
  unint64_t result = qword_100E6E430;
  if (!qword_100E6E430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E430);
  }
  return result;
}

uint64_t sub_1003499A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WeatherDescription();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UVIndexComponentPreprocessedDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100349AB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UVIndexComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for UVIndexComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_100349AF4()
{
  unint64_t result = qword_100E6E450;
  if (!qword_100E6E450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E450);
  }
  return result;
}

unint64_t sub_100349B44()
{
  unint64_t result = qword_100E6E458;
  if (!qword_100E6E458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E458);
  }
  return result;
}

unint64_t sub_100349B94()
{
  unint64_t result = qword_100E6E460;
  if (!qword_100E6E460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E460);
  }
  return result;
}

uint64_t sub_100349BE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6E500);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v4 = sub_1000DF0C4((uint64_t)v18, v19);
    __chkstk_darwin(v4);
    unsigned int v6 = (void *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    uint64_t v9 = type metadata accessor for MessageCoverInteractor();
    v17[3] = v9;
    v17[4] = &off_100E1DF78;
    v17[0] = v8;
    uint64_t v10 = type metadata accessor for MessageCoverModule();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v12 = sub_1000DF0C4((uint64_t)v17, v9);
    __chkstk_darwin(v12);
    uint64_t v14 = (void *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_100E1DF78;
    v11[2] = v16;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_100E35D68;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100349DFC()
{
  sub_10017DF08(&qword_100E6E500);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_100349E60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MessageCoverInteractor();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E1DF78;
  *a1 = result;
  return result;
}

BOOL sub_100349EA8()
{
  uint64_t v1 = type metadata accessor for AppStoreReviewConfiguration();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  unsigned int v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(v0 + 2, v0[5]);
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.appStoreReview.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  AppStoreReviewConfiguration.reviewPromptSamplingRate.getter();
  double v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  float v15 = v14;
  sub_1001B1E64(v0 + 7, v0[10]);
  Swift::Bool v16 = PrivacySamplerType.canRecord(samplingRate:)(v15);
  if (qword_100E62778 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_1002102B0(v17, (uint64_t)qword_100F51D80);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 67240448;
    int v23 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 8) = 2050;
    double v22 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "App Store Review Privacy Sampler evinced result %{BOOL,public}d for sampling rate : %{public}f", (uint8_t *)v20, 0x12u);
    swift_slowDealloc();
  }

  return v16;
}

char *sub_10034A13C(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = v9[6];
    float v15 = &a1[v14];
    Swift::Bool v16 = (char *)a2 + v14;
    uint64_t v17 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v9[7];
    os_log_type_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = v9[8];
    int v23 = &a1[v22];
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for Locale();
    uint64_t v76 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 16);
    uint64_t v77 = v25;
    v76(v23, v24);
    uint64_t v26 = v9[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
    {
      uint64_t v30 = sub_10017DF08(&qword_100E6B670);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v27 = *v28;
      v8(&v27[v29[5]], (char *)v28 + v29[5], v7);
      *(void *)&v27[v29[6]] = *(void *)((char *)v28 + v29[6]);
      *(void *)&v27[v29[7]] = *(void *)((char *)v28 + v29[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
    }
    uint64_t v32 = a3[5];
    uint64_t v33 = &a1[v32];
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = type metadata accessor for Calendar();
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    v73(v33, v34, v35);
    uint64_t v36 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v74 = v8;
    uint64_t v75 = v7;
    v8(&v33[v36[5]], &v34[v36[5]], v7);
    uint64_t v37 = v36[6];
    uint64_t v38 = &v33[v37];
    uint64_t v39 = &v34[v37];
    uint64_t v40 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    uint64_t v41 = v36[7];
    uint64_t v42 = &v33[v41];
    uint64_t v43 = &v34[v41];
    uint64_t v44 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    uint64_t v45 = v36[8];
    uint64_t v46 = &v33[v45];
    uint64_t v47 = &v34[v45];
    uint64_t v48 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
    ((void (*)(char *, char *, uint64_t))v76)(&v33[v36[9]], &v34[v36[9]], v77);
    uint64_t v49 = a3[7];
    *(void *)&a1[a3[6]] = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v50 = &a1[v49];
    uint64_t v51 = (uint64_t *)((char *)a2 + v49);
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v50 = *v51;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v52 = type metadata accessor for News();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    }
    swift_storeEnumTagMultiPayload();
    v73(&a1[a3[8]], (char *)a2 + a3[8], v35);
    v74(&a1[a3[9]], (char *)a2 + a3[9], v75);
    uint64_t v53 = a3[10];
    uint64_t v54 = &a1[v53];
    uint64_t v55 = (char *)a2 + v53;
    uint64_t v56 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    uint64_t v57 = a3[11];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = (char *)a2 + v57;
    uint64_t v60 = *(void **)v59;
    uint64_t v61 = (void *)*((void *)v59 + 1);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v61;
    uint64_t v62 = (void *)*((void *)v59 + 2);
    uint64_t v63 = (void *)*((void *)v59 + 3);
    *((void *)v58 + 2) = v62;
    *((void *)v58 + 3) = v63;
    char v64 = (void *)*((void *)v59 + 4);
    uint64_t v65 = (void *)*((void *)v59 + 5);
    *((void *)v58 + 4) = v64;
    *((void *)v58 + 5) = v65;
    id v66 = v60;
    id v67 = v61;
    id v68 = v62;
    id v69 = v63;
    id v70 = v64;
    id v71 = v65;
  }
  return a1;
}

void sub_10034A6F0(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  unsigned int v6 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v7 = a1 + v6[5];
  uint64_t v8 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + v6[6];
  uint64_t v10 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + v6[7];
  uint64_t v12 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + v6[8];
  uint64_t v14 = type metadata accessor for Locale();
  float v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  uint64_t v16 = a1 + v6[9];
  uint64_t v17 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17)) {
    v5(v16 + *(int *)(v17 + 20), v4);
  }
  uint64_t v18 = a1 + a2[5];
  uint64_t v19 = type metadata accessor for Calendar();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
  v35(v18, v19);
  uint64_t v20 = type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v21 = v5;
  uint64_t v22 = (int *)v20;
  uint64_t v36 = v21;
  uint64_t v37 = v4;
  v21(v18 + *(int *)(v20 + 20), v4);
  uint64_t v23 = v18 + v22[6];
  uint64_t v24 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = v18 + v22[7];
  uint64_t v26 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = v18 + v22[8];
  uint64_t v28 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  v15(v18 + v22[9], v14);
  swift_bridgeObjectRelease();
  uint64_t v29 = a1 + a2[7];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = type metadata accessor for News();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  }
  v35(a1 + a2[8], v19);
  v36(a1 + a2[9], v37);
  uint64_t v31 = a1 + a2[10];
  uint64_t v32 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  uint64_t v33 = a1 + a2[11];

  uint64_t v34 = *(void **)(v33 + 40);
}

uint64_t sub_10034AB58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = v8[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = v8[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for Locale();
  uint64_t v74 = *(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  uint64_t v75 = v24;
  v74(v22, v23);
  uint64_t v25 = v8[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E6B670);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    *uint64_t v26 = *v27;
    v7((uint64_t)v26 + v28[5], (uint64_t)v27 + v28[5], v6);
    *(void *)((char *)v26 + v28[6]) = *(void *)((char *)v27 + v28[6]);
    *(void *)((char *)v26 + v28[7]) = *(void *)((char *)v27 + v28[7]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  }
  uint64_t v30 = a3[5];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for Calendar();
  id v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  v71(v31, v32, v33);
  uint64_t v34 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v72 = v7;
  uint64_t v73 = v6;
  v7(v31 + v34[5], v32 + v34[5], v6);
  uint64_t v35 = v34[6];
  uint64_t v36 = v31 + v35;
  uint64_t v37 = v32 + v35;
  uint64_t v38 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = v34[7];
  uint64_t v40 = v31 + v39;
  uint64_t v41 = v32 + v39;
  uint64_t v42 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = v34[8];
  uint64_t v44 = v31 + v43;
  uint64_t v45 = v32 + v43;
  uint64_t v46 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  ((void (*)(uint64_t, uint64_t, uint64_t))v74)(v31 + v34[9], v32 + v34[9], v75);
  uint64_t v47 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  type metadata accessor for NewsDataModel();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    void *v48 = *v49;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v50 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  }
  swift_storeEnumTagMultiPayload();
  v71(a1 + a3[8], a2 + a3[8], v33);
  v72(a1 + a3[9], a2 + a3[9], v73);
  uint64_t v51 = a3[10];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[11];
  uint64_t v56 = (void *)(a1 + v55);
  uint64_t v57 = a2 + v55;
  uint64_t v58 = *(void **)v57;
  uint64_t v59 = *(void **)(v57 + 8);
  *uint64_t v56 = *(void *)v57;
  v56[1] = v59;
  uint64_t v60 = *(void **)(v57 + 16);
  uint64_t v61 = *(void **)(v57 + 24);
  v56[2] = v60;
  v56[3] = v61;
  uint64_t v62 = *(void **)(v57 + 32);
  uint64_t v63 = *(void **)(v57 + 40);
  v56[4] = v62;
  v56[5] = v63;
  id v64 = v58;
  id v65 = v59;
  id v66 = v60;
  id v67 = v61;
  id v68 = v62;
  id v69 = v63;
  return a1;
}

uint64_t sub_10034B0BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v82(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v8[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = v8[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for Locale();
  uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24);
  v80(v22, v23, v24);
  uint64_t v25 = v8[9];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (v29)
  {
    if (!v30)
    {
      *(void *)uint64_t v26 = *(void *)v27;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v26[v28[5]], &v27[v28[5]], v6);
      *(void *)&v26[v28[6]] = *(void *)&v27[v28[6]];
      *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    sub_10034D8B4((uint64_t)v26, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
LABEL_6:
    uint64_t v31 = sub_10017DF08(&qword_100E6B670);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v26 = *(void *)v27;
  v82((uint64_t)&v26[v28[5]], (uint64_t)&v27[v28[5]], v6);
  *(void *)&v26[v28[6]] = *(void *)&v27[v28[6]];
  *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
LABEL_7:
  uint64_t v32 = a3[5];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = type metadata accessor for Calendar();
  uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24);
  v79(v33, v34, v35);
  uint64_t v36 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v81 = v6;
  v82(v33 + v36[5], v34 + v36[5], v6);
  uint64_t v37 = v36[6];
  uint64_t v38 = v33 + v37;
  uint64_t v39 = v34 + v37;
  uint64_t v40 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
  uint64_t v41 = v36[7];
  uint64_t v42 = v33 + v41;
  uint64_t v43 = v34 + v41;
  uint64_t v44 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
  uint64_t v45 = v36[8];
  uint64_t v46 = v33 + v45;
  uint64_t v47 = v34 + v45;
  uint64_t v48 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  v80(v33 + v36[9], v34 + v36[9], v24);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v49 = a3[7];
    uint64_t v50 = (void *)(a1 + v49);
    uint64_t v51 = (void *)(a2 + v49);
    sub_10034D8B4(a1 + v49, (void (*)(void))type metadata accessor for NewsDataModel);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v50 = *v51;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v52 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    }
    swift_storeEnumTagMultiPayload();
  }
  v79(a1 + a3[8], a2 + a3[8], v35);
  v82(a1 + a3[9], a2 + a3[9], v81);
  uint64_t v53 = a3[10];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 24))(v54, v55, v56);
  uint64_t v57 = a3[11];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = a2 + v57;
  uint64_t v60 = *(void **)(a1 + v57);
  uint64_t v61 = *(void **)v59;
  *uint64_t v58 = *(void *)v59;
  id v62 = v61;

  uint64_t v63 = (void *)v58[1];
  id v64 = *(void **)(v59 + 8);
  v58[1] = v64;
  id v65 = v64;

  id v66 = (void *)v58[2];
  id v67 = *(void **)(v59 + 16);
  v58[2] = v67;
  id v68 = v67;

  id v69 = (void *)v58[3];
  id v70 = *(void **)(v59 + 24);
  v58[3] = v70;
  id v71 = v70;

  uint64_t v72 = (void *)v58[4];
  uint64_t v73 = *(void **)(v59 + 32);
  v58[4] = v73;
  id v74 = v73;

  uint64_t v75 = (void *)v58[5];
  uint64_t v76 = *(void **)(v59 + 40);
  v58[5] = v76;
  id v77 = v76;

  return a1;
}

uint64_t sub_10034B73C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = v8[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = v8[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for Locale();
  id v62 = *(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 32);
  uint64_t v63 = v24;
  v62(v22, v23);
  uint64_t v25 = v8[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E6B670);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    *uint64_t v26 = *v27;
    v7((uint64_t)v26 + v28[5], (uint64_t)v27 + v28[5], v6);
    *(void *)((char *)v26 + v28[6]) = *(void *)((char *)v27 + v28[6]);
    *(void *)((char *)v26 + v28[7]) = *(void *)((char *)v27 + v28[7]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  }
  uint64_t v30 = a3[5];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for Calendar();
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32);
  v61(v31, v32, v33);
  uint64_t v34 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  id v64 = v7;
  uint64_t v65 = v6;
  v7(v31 + v34[5], v32 + v34[5], v6);
  uint64_t v35 = v34[6];
  uint64_t v36 = v31 + v35;
  uint64_t v37 = v32 + v35;
  uint64_t v38 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = v34[7];
  uint64_t v40 = v31 + v39;
  uint64_t v41 = v32 + v39;
  uint64_t v42 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = v34[8];
  uint64_t v44 = v31 + v43;
  uint64_t v45 = v32 + v43;
  uint64_t v46 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  ((void (*)(uint64_t, uint64_t, uint64_t))v62)(v31 + v34[9], v32 + v34[9], v63);
  uint64_t v47 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  uint64_t v50 = type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    uint64_t v51 = type metadata accessor for News();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 32))(v48, v49, v51);
    swift_storeEnumTagMultiPayload();
  }
  v61(a1 + a3[8], a2 + a3[8], v33);
  v64(a1 + a3[9], a2 + a3[9], v65);
  uint64_t v52 = a3[10];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  uint64_t v55 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
  uint64_t v56 = a3[11];
  uint64_t v57 = (_OWORD *)(a1 + v56);
  uint64_t v58 = (_OWORD *)(a2 + v56);
  long long v59 = v58[1];
  *uint64_t v57 = *v58;
  v57[1] = v59;
  v57[2] = v58[2];
  return a1;
}

uint64_t sub_10034BC7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  id v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v71(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v9 = v8[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = v8[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for Locale();
  id v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40);
  v69(v22, v23, v24);
  uint64_t v25 = v8[9];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (v29)
  {
    if (!v30)
    {
      *(void *)uint64_t v26 = *(void *)v27;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v26[v28[5]], &v27[v28[5]], v6);
      *(void *)&v26[v28[6]] = *(void *)&v27[v28[6]];
      *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    sub_10034D8B4((uint64_t)v26, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
LABEL_6:
    uint64_t v31 = sub_10017DF08(&qword_100E6B670);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v26 = *(void *)v27;
  v71((uint64_t)&v26[v28[5]], (uint64_t)&v27[v28[5]], v6);
  *(void *)&v26[v28[6]] = *(void *)&v27[v28[6]];
  *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
LABEL_7:
  uint64_t v32 = a3[5];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = type metadata accessor for Calendar();
  id v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40);
  v68(v33, v34, v35);
  uint64_t v36 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v70 = v6;
  v71(v33 + v36[5], v34 + v36[5], v6);
  uint64_t v37 = v36[6];
  uint64_t v38 = v33 + v37;
  uint64_t v39 = v34 + v37;
  uint64_t v40 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
  uint64_t v41 = v36[7];
  uint64_t v42 = v33 + v41;
  uint64_t v43 = v34 + v41;
  uint64_t v44 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = v36[8];
  uint64_t v46 = v33 + v45;
  uint64_t v47 = v34 + v45;
  uint64_t v48 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  v69(v33 + v36[9], v34 + v36[9], v24);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v49 = a3[7];
    uint64_t v50 = (void *)(a1 + v49);
    uint64_t v51 = (const void *)(a2 + v49);
    sub_10034D8B4(a1 + v49, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v52 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      uint64_t v53 = type metadata accessor for News();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v53 - 8) + 32))(v50, v51, v53);
      swift_storeEnumTagMultiPayload();
    }
  }
  v68(a1 + a3[8], a2 + a3[8], v35);
  v71(a1 + a3[9], a2 + a3[9], v70);
  uint64_t v54 = a3[10];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 40))(v55, v56, v57);
  uint64_t v58 = a3[11];
  long long v59 = (void *)(a1 + v58);
  uint64_t v60 = (void *)(a2 + v58);
  uint64_t v61 = *(void **)(a1 + v58);
  *long long v59 = *v60;

  id v62 = (void *)v59[1];
  v59[1] = v60[1];

  uint64_t v63 = (void *)v59[2];
  v59[2] = v60[2];

  id v64 = (void *)v59[3];
  v59[3] = v60[3];

  uint64_t v65 = (void *)v59[4];
  v59[4] = v60[4];

  id v66 = (void *)v59[5];
  v59[5] = v60[5];

  return a1;
}

uint64_t sub_10034C2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10034C2FC);
}

uint64_t sub_10034C2FC(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for PrecipitationAveragesHeroChartInput();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_19:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for MonthlyAveragesChartInput();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_18:
    uint64_t v9 = a1 + v12;
    goto LABEL_19;
  }
  if (a2 != 2147483646)
  {
    type metadata accessor for NewsDataModel();
    sub_100162F30();
    if (*(_DWORD *)(v17 + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = a3[7];
    }
    else
    {
      type metadata accessor for Calendar();
      sub_100162F30();
      if (*(_DWORD *)(v19 + 84) == a2)
      {
        uint64_t v8 = v18;
        uint64_t v12 = a3[8];
      }
      else
      {
        type metadata accessor for Date();
        sub_100162F30();
        if (*(_DWORD *)(v21 + 84) == a2)
        {
          uint64_t v8 = v20;
          uint64_t v12 = a3[9];
        }
        else
        {
          uint64_t v8 = type metadata accessor for Location();
          uint64_t v12 = a3[10];
        }
      }
    }
    goto LABEL_18;
  }
  unint64_t v13 = *(void *)(a1 + a3[6]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v14 = v13 - 1;
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10034C448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10034C45C);
}

void sub_10034C45C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for PrecipitationAveragesHeroChartInput();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for MonthlyAveragesChartInput();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(void *)(a1 + a4[6]) = a2;
        return;
      }
      type metadata accessor for NewsDataModel();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        type metadata accessor for Calendar();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[8];
        }
        else
        {
          type metadata accessor for Date();
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[9];
          }
          else
          {
            uint64_t v10 = type metadata accessor for Location();
            uint64_t v14 = a4[10];
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for PrecipitationAveragesDetailInput()
{
  uint64_t result = qword_100E6E6A8;
  if (!qword_100E6E6A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10034C5E0()
{
  uint64_t result = type metadata accessor for PrecipitationAveragesHeroChartInput();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MonthlyAveragesChartInput();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for NewsDataModel();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for Calendar();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for Date();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for Location();
            if (v6 <= 0x3F)
            {
              swift_initStructMetadata();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10034C7A8(uint64_t a1, uint64_t a2)
{
  if (!sub_1003BD1C4(a1, a2)) {
    goto LABEL_13;
  }
  unint64_t v4 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
  sub_10017E1E8(v4[5]);
  if ((sub_100A5FBA4() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v5 = v4[6];
  uint64_t v6 = *(void *)(a2 + v5);
  if (*(void *)(a1 + v5))
  {
    if (!v6) {
      goto LABEL_13;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100BDD244();
    char v8 = v7;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else if (v6)
  {
LABEL_13:
    char v15 = 0;
    return v15 & 1;
  }
  uint64_t v9 = sub_10017E1E8(v4[7]);
  if ((sub_100BBEEE4(v9, v10) & 1) == 0) {
    goto LABEL_13;
  }
  sub_10017E1E8(v4[8]);
  if ((static Calendar.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  sub_10017E1E8(v4[9]);
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  sub_10017E1E8(v4[10]);
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v11 = (_OWORD *)(a1 + v4[11]);
  long long v12 = v11[2];
  v17[1] = v11[1];
  v17[2] = v12;
  v17[0] = *v11;
  uint64_t v13 = (_OWORD *)(a2 + v4[11]);
  long long v14 = v13[2];
  v18[1] = v13[1];
  v18[2] = v14;
  v18[0] = *v13;
  char v15 = sub_10011C8A8((uint64_t)v17, (id *)v18);
  return v15 & 1;
}

char *sub_10034C8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v151 = a4;
  uint64_t v152 = a2;
  uint64_t v170 = a5;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v168 = v8;
  uint64_t v169 = v7;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v150 = (char *)v140 - v12;
  sub_100129064();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v157 = v14;
  uint64_t v158 = v13;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v156 = v15;
  sub_100129064();
  type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v159 = v17;
  uint64_t v160 = v16;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v167 = v18;
  sub_100129064();
  uint64_t v146 = type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  uint64_t v145 = v19;
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v144 = v21;
  uint64_t v22 = sub_10017DF08(&qword_100E63850);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v147 = v24;
  uint64_t v25 = sub_10017DF08(&qword_100E6B8A8);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v148 = v27;
  sub_100129064();
  uint64_t v149 = type metadata accessor for HistoricalFacts();
  sub_100179C0C();
  uint64_t v143 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v142 = v30;
  sub_100129064();
  uint64_t v31 = type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_100162EF8();
  uint64_t v155 = v33;
  __chkstk_darwin(v34);
  uint64_t v164 = (uint64_t)v140 - v35;
  sub_100129064();
  uint64_t v36 = type metadata accessor for TimeState();
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v165 = v38;
  sub_100129064();
  uint64_t v39 = type metadata accessor for PrecipitationAveragesHeroChartInput();
  sub_100162E4C();
  __chkstk_darwin(v40);
  sub_100162EF8();
  uint64_t v153 = v41;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)v140 - v43;
  uint64_t v45 = type metadata accessor for NewsDataModel();
  uint64_t v46 = sub_100109308(v45);
  __chkstk_darwin(v46);
  sub_100162EF8();
  uint64_t v166 = v47;
  __chkstk_darwin(v48);
  uint64_t v163 = (uint64_t)v140 - v49;
  uint64_t v50 = sub_100129064();
  uint64_t v161 = type metadata accessor for WeatherData(v50);
  sub_100162E4C();
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v162 = v52;
  uint64_t v53 = sub_10017DF08(&qword_100E63770);
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)v140 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  uint64_t v59 = __chkstk_darwin(v58);
  uint64_t v61 = (char *)v140 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  uint64_t v63 = (char *)v140 - v62;
  uint64_t v64 = a1;
  uint64_t v65 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  v171 = a3;
  uint64_t v66 = Location.id.getter();
  sub_1001BBE9C(v66, v67, v65);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57) == 1)
  {
    sub_100178160((uint64_t)v56, &qword_100E63770);
    if (qword_100E62810 != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    sub_1002102B0(v68, (uint64_t)qword_100F51F38);
    (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v11, v171, v169);
    id v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v172 = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 141558275;
      sub_1001632CC();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v71 + 12) = 2081;
      sub_1002FF134();
      uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v173 = sub_10016414C(v72, v73, &v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v74 = sub_100183954();
      v75(v74);
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Failed to create averages detail input due to missing weather data; location=%{private,mask.hash}s",
        (uint8_t *)v71,
        0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      uint64_t v94 = sub_100183954();
      v95(v94);
    }

LABEL_20:
    uint64_t v108 = type metadata accessor for PrecipitationAveragesDetailInput();
    return (char *)_s7Weather24LocationCompositionStateOwst_0(v170, 1, 1, v108);
  }
  sub_1001E1044((uint64_t)v56, (uint64_t)v63, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_1001BCBC0((uint64_t)v63, (uint64_t)v61, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10034D8B4((uint64_t)v61, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (qword_100E62810 != -1) {
      swift_once();
    }
    uint64_t v96 = type metadata accessor for Logger();
    sub_1002102B0(v96, (uint64_t)qword_100F51F38);
    (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v150, v171, v169);
    uint64_t v97 = Logger.logObject.getter();
    os_log_type_t v98 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v97, v98))
    {
      uint64_t v99 = swift_slowAlloc();
      swift_slowAlloc();
      *(_DWORD *)uint64_t v99 = 141558275;
      sub_1001632CC();
      v171 = v63;
      uint64_t v172 = v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v99 + 12) = 2081;
      sub_1002FF134();
      uint64_t v101 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v173 = sub_10016414C(v101, v102, &v172);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v103 = sub_1001810EC();
      v104(v103);
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "Failed to create averages detail input due to missing weather data; location=%{private,mask.hash}s",
        (uint8_t *)v99,
        0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      uint64_t v105 = (uint64_t)v171;
    }
    else
    {

      uint64_t v106 = sub_1001810EC();
      v107(v106);
      uint64_t v105 = (uint64_t)v63;
    }
    sub_10034D8B4(v105, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    goto LABEL_20;
  }
  uint64_t v76 = sub_10017DF08(&qword_100E63748);
  uint64_t v77 = (uint64_t)&v61[*(int *)(v76 + 48)];
  uint64_t v78 = (uint64_t)&v61[*(int *)(v76 + 64)];
  sub_1001E1044((uint64_t)v61, v162, (void (*)(void))type metadata accessor for WeatherData);
  sub_1001E1044(v78, v163, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_10034D8B4(v77, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  uint64_t v79 = v64;
  uint64_t v80 = v64 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time;
  uint64_t v81 = v165;
  sub_1001BCBC0(v80, v165, (void (*)(void))type metadata accessor for TimeState);
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v83 = *(void (**)(uint64_t, uint64_t, char *))(v82 + 32);
  uint64_t v150 = v84;
  uint64_t v141 = v83;
  v140[1] = v82 + 32;
  ((void (*)(char *, uint64_t))v83)(v44, v81);
  type metadata accessor for WeatherStatisticsModel();
  sub_100162E4C();
  sub_10008B8B4();
  v85();
  WeatherDataModel.dailyForecast.getter();
  Location.timeZone.getter();
  uint64_t v86 = v79 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  v140[0] = type metadata accessor for EnvironmentState();
  sub_1002F8E04(v151, (uint64_t)&v44[*(int *)(v39 + 36)]);
  type metadata accessor for Locale();
  sub_100162E4C();
  sub_10008B8B4();
  v87();
  uint64_t v88 = v154;
  sub_1001B1E64((void *)(v154 + 40), *(void *)(v154 + 64));
  sub_100A5FDB4(v79, v164);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62658 != -1) {
    swift_once();
  }
  char v89 = SettingReader.isEnabled(_:with:)();
  swift_release();
  uint64_t v90 = (uint64_t)v63;
  if (v89)
  {
    uint64_t v91 = v147;
    sub_1001177B0(v147);
    uint64_t v92 = v161;
    if (_s7Weather24LocationCompositionStateOwet_0(v91, 1, v161) == 1)
    {
      sub_100178160(v91, &qword_100E63850);
      uint64_t v93 = v148;
      _s7Weather24LocationCompositionStateOwst_0(v148, 1, 1, v149);
    }
    else
    {
      uint64_t v110 = v91 + *(int *)(v92 + 24);
      uint64_t v111 = v145;
      uint64_t v112 = v144;
      uint64_t v113 = v146;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 16))(v144, v110, v146);
      sub_10034D8B4(v91, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v93 = v148;
      WeatherDataModel.historicalFacts.getter();
      (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v112, v113);
      uint64_t v114 = v149;
      if (_s7Weather24LocationCompositionStateOwet_0(v93, 1, v149) != 1)
      {
        uint64_t v138 = v143;
        uint64_t v139 = v142;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 32))(v142, v93, v114);
        sub_1001B1E64((void *)(v88 + 80), *(void *)(v88 + 104));
        uint64_t v161 = sub_10073325C(v139);
        (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v139, v114);
        goto LABEL_24;
      }
    }
    sub_100178160(v93, &qword_100E6B8A8);
  }
  uint64_t v161 = 0;
LABEL_24:
  uint64_t v115 = v153;
  sub_1001BCBC0((uint64_t)v44, v153, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartInput);
  uint64_t v116 = v164;
  uint64_t v117 = v155;
  sub_1001BCBC0(v164, v155, (void (*)(void))type metadata accessor for MonthlyAveragesChartInput);
  uint64_t v118 = v163;
  sub_1001BCBC0(v163, v166, (void (*)(void))type metadata accessor for NewsDataModel);
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v119 = sub_100162728();
  v120(v119);
  sub_10034D8B4(v116, (void (*)(void))type metadata accessor for MonthlyAveragesChartInput);
  sub_10034D8B4((uint64_t)v44, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartInput);
  sub_10034D8B4(v118, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_10034D8B4(v162, (void (*)(void))type metadata accessor for WeatherData);
  sub_10034D8B4(v90, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v121 = v165;
  sub_1001BCBC0(v80, v165, (void (*)(void))type metadata accessor for TimeState);
  uint64_t v122 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
  uint64_t v123 = v170;
  v141(v170 + v122[9], v121, v150);
  sub_10008B8B4();
  v124();
  uint64_t v125 = v86 + *(int *)(v140[0] + 68);
  uint64_t v127 = *(void **)v125;
  uint64_t v126 = *(void **)(v125 + 8);
  uint64_t v129 = *(void **)(v125 + 16);
  uint64_t v128 = *(void **)(v125 + 24);
  char v130 = *(void **)(v125 + 40);
  v171 = *(char **)(v125 + 32);
  sub_1001E1044(v115, v123, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartInput);
  sub_1001E1044(v117, v123 + v122[5], (void (*)(void))type metadata accessor for MonthlyAveragesChartInput);
  *(void *)(v123 + v122[6]) = v161;
  sub_1001E1044(v166, v123 + v122[7], (void (*)(void))type metadata accessor for NewsDataModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v159 + 32))(v123 + v122[8], v167, v160);
  int v131 = (void *)(v123 + v122[11]);
  *int v131 = v127;
  v131[1] = v126;
  v131[2] = v129;
  v131[3] = v128;
  v131[4] = v171;
  v131[5] = v130;
  _s7Weather24LocationCompositionStateOwst_0(v123, 0, 1, (uint64_t)v122);
  id v132 = v130;
  id v133 = v127;
  id v134 = v126;
  id v135 = v129;
  id v136 = v128;
  v137 = v171;

  return v137;
}

uint64_t sub_10034D8B4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

ValueMetadata *type metadata accessor for PrecipitationAveragesDetailInputFactory()
{
  return &type metadata for PrecipitationAveragesDetailInputFactory;
}

uint64_t getEnumTagSinglePayload for Down(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && a1[48])
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 4;
      int v2 = v3 - 4;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Down(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Down()
{
  return &type metadata for Down;
}

uint64_t sub_10034D9B0()
{
  return *v0;
}

double sub_10034D9B8()
{
  return *(double *)(v0 + 8);
}

double sub_10034D9C4()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_10034D9CC(uint64_t a1)
{
  int v2 = v1;
  uint64_t v246 = *v2;
  sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v250 = v5;
  v251 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v249 = v6;
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v247 = v8;
  uint64_t v248 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  v253 = v9;
  uint64_t v266 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v269 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v270 = v12;
  uint64_t v13 = sub_10017DF08(&qword_100E6B8B8);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100162EF8();
  v252 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  sub_100128F8C();
  uint64_t v238 = v17;
  uint64_t HourPrecipitationComponentParameters = type metadata accessor for NextHourPrecipitationComponentParameters();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v264 = v19;
  type metadata accessor for WeatherAlert.Prominence();
  sub_100179C0C();
  uint64_t v258 = v21;
  *(void *)&long long v259 = v20;
  __chkstk_darwin(v20);
  sub_100109314();
  v257 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E6E830);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  v239 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100109770();
  uint64_t v243 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100109770();
  uint64_t v241 = v29;
  sub_1001626D4();
  __chkstk_darwin(v30);
  sub_100128F8C();
  v260 = v31;
  uint64_t v32 = type metadata accessor for LocationViewComponent();
  sub_100179C0C();
  uint64_t v245 = v33;
  __chkstk_darwin(v34);
  sub_100162EF8();
  uint64_t v234 = v35;
  sub_1001626D4();
  __chkstk_darwin(v36);
  sub_100109770();
  uint64_t v236 = v37;
  sub_1001626D4();
  __chkstk_darwin(v38);
  sub_100109770();
  v263 = v39;
  sub_1001626D4();
  __chkstk_darwin(v40);
  sub_100109770();
  uint64_t v235 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  sub_100128F8C();
  uint64_t v233 = v43;
  v271 = (int *)type metadata accessor for PreprocessedWeatherData();
  sub_100162E4C();
  __chkstk_darwin(v44);
  sub_1001626E0();
  uint64_t v47 = v46 - v45;
  uint64_t v48 = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v49);
  sub_100162EF8();
  uint64_t v244 = v50;
  sub_1001626D4();
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v231 - v52;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v55 = v54;
  __chkstk_darwin(v56);
  sub_1001626E0();
  uint64_t v59 = v58 - v57;
  uint64_t v255 = v55;
  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16);
  uint64_t v265 = v61;
  v256 = v60;
  ((void (*)(uint64_t, uint64_t))v60)(v58 - v57, a1);
  uint64_t v62 = (int *)type metadata accessor for LocationViewConfigurationInputs();
  sub_10014FD90(a1 + v62[5], (uint64_t)v53, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v63 = a1 + v62[6];
  uint64_t v274 = v47;
  sub_10014FD90(v63, v47, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  int v64 = *(unsigned __int8 *)(a1 + v62[8]);
  int v262 = *(unsigned __int8 *)(a1 + v62[9]);
  uint64_t v65 = v62[11];
  LODWORD(v261) = *(unsigned __int8 *)(a1 + v62[10]);
  int v240 = *(unsigned __int8 *)(a1 + v65);
  type metadata accessor for LocationViewConfigurationBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = _swiftEmptyArrayStorage;
  uint64_t v254 = inited + 16;
  uint64_t v276 = inited;
  *(void *)(inited + 24) = &_swiftEmptySetSingleton;
  uint64_t v237 = v48;
  v272 = &v53[*(int *)(v48 + 24)];
  uint64_t v67 = WeatherDataModel.weatherAlerts.getter();
  uint64_t v275 = v32;
  v273 = v53;
  v267 = v2;
  uint64_t v268 = v59;
  if (v67)
  {
    int v232 = v64;
    Array<A>.filteredEvents.getter();
    swift_bridgeObjectRelease();
    sub_1001B1E64(v2 + 2, v2[5]);
    uint64_t v68 = v257;
    uint64_t v69 = v258;
    uint64_t v70 = v259;
    sub_1001649D0();
    v71();
    uint64_t v72 = v260;
    sub_1001A2B64();
    sub_1000C1470(v73);
    uint64_t v74 = v275;
    swift_bridgeObjectRelease();
    (*(void (**)(void (*)(void, void, void), uint64_t))(v69 + 8))(v68, v70);
    uint64_t v32 = v74;
    sub_10012B520((uint64_t)v72, 1, v74);
    if (v75)
    {
      sub_100178110((uint64_t)v260, &qword_100E6E830);
    }
    else
    {
      uint64_t v76 = v233;
      sub_100178BD0((uint64_t)v260, v233, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_1000C13A0(v76);
      sub_1000C12F8(v76, (void (*)(void))type metadata accessor for LocationViewComponent);
    }
    uint64_t v53 = v273;
    int v2 = v267;
    uint64_t v59 = v268;
    LOBYTE(v64) = v232;
  }
  uint64_t v77 = v264;
  v256(v264, v59, v265);
  uint64_t v78 = HourPrecipitationComponentParameters;
  sub_10014FD90((uint64_t)v53, v77 + *(int *)(HourPrecipitationComponentParameters + 20), (void (*)(void))type metadata accessor for WeatherData);
  *(void *)(v77 + *(int *)(v78 + 24)) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v77 + *(int *)(v78 + 28)) = v261;
  uint64_t v79 = v2[5];
  v260 = v2 + 2;
  sub_10018440C(v2 + 2, v79);
  uint64_t v80 = v241;
  sub_100A63440(v77, v241);
  sub_10012B520(v80, 1, v32);
  uint64_t v81 = v32;
  if (v75)
  {
    sub_100178110(v80, &qword_100E6E830);
    uint64_t v82 = v263;
    uint64_t v83 = v243;
    char v84 = v240;
  }
  else
  {
    uint64_t v85 = v80;
    uint64_t v86 = v235;
    sub_100178BD0(v85, v235, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1000C13A0(v86);
    uint64_t v82 = v263;
    uint64_t v83 = v243;
    char v84 = v240;
    if ((v240 & 1) == 0 && (v64 & 1) == 0)
    {
      v256((uint64_t)v263, v268, v265);
      sub_1001A2B64();
      swift_storeEnumTagMultiPayload();
      sub_100184960();
      sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
    }
    sub_1000C12F8(v86, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  BOOL v87 = sub_1002190D8();
  BOOL v88 = v87;
  char v89 = v84 ^ 1 | v64;
  uint64_t v90 = v274;
  if ((v89 & 1) == 0 && !v87)
  {
    swift_storeEnumTagMultiPayload();
    sub_100184960();
    sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  sub_10018440C(v260, v267[5]);
  sub_1000277CC(v83);
  sub_10012B520(v83, 1, v81);
  if (v75)
  {
    sub_100178110(v83, &qword_100E6E830);
  }
  else
  {
    uint64_t v91 = v83;
    uint64_t v92 = v236;
    sub_100178BD0(v91, v236, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1000C13A0(v92);
    sub_1000C12F8(v92, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  if (!(v89 & 1 | !v88))
  {
    swift_storeEnumTagMultiPayload();
    sub_100184960();
    sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  WeatherDataModel.currentWeather.getter();
  uint64_t v93 = v271;
  uint64_t v94 = v90 + v271[7];
  uint64_t v95 = (int *)type metadata accessor for HourlyForecastComponent();
  sub_10014FD90(v94, (uint64_t)&v82[v95[5]], (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  WeatherDataModel.hourlyForecast.getter();
  WeatherDataModel.dailyForecast.getter();
  WeatherDataModel.weatherChanges.getter();
  v82[v95[9]] = 1;
  v82[v95[10]] = v261;
  sub_1001A2B64();
  swift_storeEnumTagMultiPayload();
  sub_1000C13A0((uint64_t)v82);
  sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
  WeatherDataModel.currentWeather.getter();
  uint64_t v96 = *(void *)(v90 + v93[5]);
  *(void *)&v82[*(int *)(type metadata accessor for DailyForecastComponent() + 20)] = v96;
  sub_1001A2B64();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1000C13A0((uint64_t)v82);
  sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
  if (v262)
  {
    if (v64) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  *uint64_t v82 = 0;
  sub_1001A2B64();
  swift_storeEnumTagMultiPayload();
  sub_100184960();
  sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
  if ((v64 & 1) == 0)
  {
LABEL_23:
    type metadata accessor for WeatherMapOverlayKind();
    sub_100162E4C();
    sub_1001A0550();
    v97();
    uint64_t v98 = type metadata accessor for MapComponent();
    sub_10014FD90((uint64_t)v273, (uint64_t)&v82[*(int *)(v98 + 20)], (void (*)(void))type metadata accessor for WeatherData);
    sub_1001A2B64();
    swift_storeEnumTagMultiPayload();
    sub_100184960();
    sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
LABEL_24:
  if (WeatherDataModel.weatherAlerts.getter())
  {
    sub_1001B1E64(v260, v267[5]);
    uint64_t v99 = v257;
    uint64_t v100 = v258;
    uint64_t v101 = v259;
    sub_1001649D0();
    v102();
    uint64_t v103 = v239;
    sub_1000C1470(v239);
    swift_bridgeObjectRelease();
    (*(void (**)(void (*)(void, void, void), uint64_t))(v100 + 8))(v99, v101);
    sub_10012B520((uint64_t)v103, 1, v81);
    if (v75)
    {
      sub_100178110((uint64_t)v103, &qword_100E6E830);
    }
    else
    {
      uint64_t v104 = v234;
      sub_100178BD0((uint64_t)v103, v234, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_1000C13A0(v104);
      sub_1000C12F8(v104, (void (*)(void))type metadata accessor for LocationViewComponent);
    }
  }
  if (qword_100E62A10 != -1) {
    swift_once();
  }
  sub_100350EC8();
  Configurable.setting<A>(_:)();
  int v105 = v277[239];
  uint64_t v106 = v244;
  sub_10014FD90((uint64_t)v273, v244, (void (*)(void))type metadata accessor for WeatherData);
  if (v105 == 1)
  {
    sub_1000C12F8(v106, (void (*)(void))type metadata accessor for WeatherData);
LABEL_38:
    sub_10017DF08(&qword_100E6E840);
    sub_10018A880();
    uint64_t v112 = v111;
    v260 = v111;
    uint64_t v114 = (uint64_t)v113;
    v267 = v113;
    uint64_t v258 = v116 | 7;
    *(void *)&long long v259 = v115;
    v257 = v117;
    uint64_t v118 = swift_allocObject();
    long long v261 = xmmword_100C25ED0;
    *(_OWORD *)(v118 + 16) = xmmword_100C25ED0;
    uint64_t v119 = (char *)v112 + v118;
    WeatherDataModel.historicalComparisons.getter();
    uint64_t v120 = sub_1001823C8();
    sub_100350F14(v120, v121);
    swift_storeEnumTagMultiPayload();
    uint64_t v122 = (uint64_t)&v119[v114];
    uint64_t v123 = v271;
    uint64_t v124 = v274;
    sub_10014FD90(v274 + v271[6], v122, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
    swift_storeEnumTagMultiPayload();
    sub_1001DA998();
    swift_setDeallocating();
    sub_1000C12E0();
    WeatherDataModel.currentWeather.getter();
    uint64_t v125 = v124;
    memcpy(v277, (const void *)(v124 + v123[13]), 0xE8uLL);
    uint64_t v126 = type metadata accessor for WindComponent();
    sub_1001889A8(v126);
    swift_storeEnumTagMultiPayload();
    sub_100049160((uint64_t)v277);
    sub_1000C13A0((uint64_t)v82);
    v252 = type metadata accessor for LocationViewComponent;
    sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
    uint64_t v127 = (__n128 *)swift_allocObject();
    sub_100189DC0(v127);
    WeatherDataModel.currentWeather.getter();
    uint64_t v128 = v124 + v123[10];
    WeatherDataModel.dailyForecast.getter();
    WeatherDataModel.hourlyForecast.getter();
    uint64_t v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(v269 + 32);
    v269 += 32;
    v256 = v129;
    sub_1001190D4();
    v130();
    type metadata accessor for UVIndexComponent();
    sub_1001628A4();
    sub_10014FD90(v128, v131, (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
    sub_10017F010();
    sub_1001190D4();
    v132();
    sub_10018C408();
    sub_1001190D4();
    v133();
    swift_storeEnumTagMultiPayload();
    WeatherDataModel.currentWeather.getter();
    WeatherDataModel.dailyForecast.getter();
    SunriseSunsetModel.init(currentWeather:dailyForecast:)();
    swift_storeEnumTagMultiPayload();
    sub_1001DA998();
    swift_setDeallocating();
    sub_1000C12E0();
    v253 = (__n128 *)swift_allocObject();
    sub_100189DC0(v253);
    id v136 = (void *)(v134 + v135);
    v137 = (void *)(v125 + v271[9]);
    uint64_t v138 = v137[1];
    uint64_t v139 = v137[2];
    uint64_t v140 = v137[3];
    uint64_t v141 = v137[4];
    uint64_t v142 = v137[5];
    uint64_t v143 = v137[6];
    uint64_t v144 = v137[7];
    uint64_t v145 = v137[8];
    uint64_t v146 = v137[9];
    uint64_t v147 = v137[10];
    uint64_t v148 = v137[11];
    uint64_t v149 = v137[12];
    uint64_t v150 = v137[13];
    *id v136 = *v137;
    v136[1] = v138;
    v136[2] = v139;
    v136[3] = v140;
    v136[4] = v141;
    v136[5] = v142;
    v136[6] = v143;
    v136[7] = v144;
    v136[8] = v145;
    v136[9] = v146;
    v136[10] = v147;
    v136[11] = v148;
    v136[12] = v149;
    v136[13] = v150;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v151 = (uint64_t)v272;
    WeatherDataModel.currentWeather.getter();
    sub_100164FE0();
    uint64_t v154 = v152[2];
    uint64_t v153 = v152[3];
    uint64_t v156 = v152[4];
    uint64_t v155 = v152[5];
    uint64_t v157 = v266;
    sub_1001190D4();
    v158();
    uint64_t v159 = type metadata accessor for VisibilityComponent();
    sub_100166B28(v159);
    v160[2] = v154;
    v160[3] = v153;
    v160[4] = v156;
    v160[5] = v155;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v161 = v263;
    swift_bridgeObjectRetain();
    sub_1001DA998();
    swift_setDeallocating();
    sub_1000C12E0();
    sub_10014FD90((uint64_t)v273, (uint64_t)v161, (void (*)(void))type metadata accessor for WeatherData);
    swift_storeEnumTagMultiPayload();
    sub_1000C13A0((uint64_t)v161);
    sub_1000C12F8((uint64_t)v161, (void (*)(void))v252);
    uint64_t v162 = (__n128 *)swift_allocObject();
    sub_100189DC0(v162);
    uint64_t v165 = v163 + v164;
    uint64_t v166 = v270;
    uint64_t v167 = v151;
    WeatherDataModel.currentWeather.getter();
    uint64_t v168 = v157;
    uint64_t v169 = v157;
    uint64_t v170 = (void (*)(char *, uint64_t, uint64_t))v256;
    v256(v165, v166, v168);
    sub_1001823C8();
    swift_storeEnumTagMultiPayload();
    v171 = (char *)v267 + v165;
    WeatherDataModel.currentWeather.getter();
    sub_100182F80();
    sub_10017F35C();
    sub_10014FD90(v167, v172, (void (*)(void))type metadata accessor for PressureComponentPreprocessedDataModel);
    v170(v171, v166, v169);
    swift_storeEnumTagMultiPayload();
    uint64_t v173 = v276;
    goto LABEL_40;
  }
  uint64_t v107 = v238;
  WeatherDataModel.historicalComparisons.getter();
  uint64_t v108 = type metadata accessor for HistoricalComparisons();
  sub_10012B520(v107, 1, v108);
  if (v75)
  {
    sub_1000C12F8(v106, (void (*)(void))type metadata accessor for WeatherData);
    sub_100178110(v107, &qword_100E6B8B8);
  }
  else
  {
    char v109 = HistoricalComparisons.hasDeviationsFromTrend.getter();
    sub_1000C12F8(v106, (void (*)(void))type metadata accessor for WeatherData);
    sub_100162F0C();
    v110();
    if (v109) {
      goto LABEL_38;
    }
  }
  v256 = (void (*)(uint64_t, uint64_t, uint64_t))sub_10017DF08(&qword_100E6E840);
  sub_10018A880();
  v267 = v174;
  uint64_t v176 = v175;
  uint64_t v258 = v175;
  v260 = v178;
  *(void *)&long long v261 = v177 | 7;
  uint64_t v179 = swift_allocObject();
  long long v259 = xmmword_100C25ED0;
  *(_OWORD *)(v179 + 16) = xmmword_100C25ED0;
  v180 = v271;
  uint64_t v181 = v274;
  sub_10014FD90(v274 + v271[6], v179 + v176, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
  swift_storeEnumTagMultiPayload();
  WeatherDataModel.currentWeather.getter();
  uint64_t v182 = v181 + v180[10];
  WeatherDataModel.dailyForecast.getter();
  WeatherDataModel.hourlyForecast.getter();
  v183 = *(void (**)(void, void, void))(v269 + 32);
  v269 += 32;
  v257 = v183;
  sub_1001190D4();
  v184();
  type metadata accessor for UVIndexComponent();
  sub_1001628A4();
  sub_10014FD90(v182, v185, (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
  sub_10017F010();
  sub_1001190D4();
  v186();
  sub_10018C408();
  sub_1001190D4();
  v187();
  sub_10019B438();
  swift_storeEnumTagMultiPayload();
  uint64_t v188 = v276;
  sub_1001DA998();
  swift_setDeallocating();
  sub_1000C12E0();
  WeatherDataModel.currentWeather.getter();
  v189 = v271;
  memcpy(v277, (const void *)(v274 + v271[13]), 0xE8uLL);
  uint64_t v190 = type metadata accessor for WindComponent();
  sub_1001889A8(v190);
  swift_storeEnumTagMultiPayload();
  sub_100049160((uint64_t)v277);
  sub_1000C13A0((uint64_t)v82);
  v251 = type metadata accessor for LocationViewComponent;
  sub_1000C12F8((uint64_t)v82, (void (*)(void))type metadata accessor for LocationViewComponent);
  v191 = (__n128 *)swift_allocObject();
  sub_100181EB4(v191);
  WeatherDataModel.currentWeather.getter();
  WeatherDataModel.dailyForecast.getter();
  sub_1001823C8();
  SunriseSunsetModel.init(currentWeather:dailyForecast:)();
  swift_storeEnumTagMultiPayload();
  v192 = (void *)((char *)v260 + v188);
  v193 = (void *)(v274 + v189[9]);
  uint64_t v194 = v193[1];
  uint64_t v195 = v193[2];
  uint64_t v196 = v193[3];
  uint64_t v197 = v193[4];
  uint64_t v198 = v193[5];
  uint64_t v199 = v193[6];
  uint64_t v200 = v193[7];
  uint64_t v201 = v193[8];
  uint64_t v202 = v193[9];
  uint64_t v203 = v193[10];
  uint64_t v204 = v193[11];
  uint64_t v205 = v193[12];
  uint64_t v206 = v193[13];
  void *v192 = *v193;
  v192[1] = v194;
  v192[2] = v195;
  v192[3] = v196;
  v192[4] = v197;
  v192[5] = v198;
  v192[6] = v199;
  v192[7] = v200;
  v192[8] = v201;
  v192[9] = v202;
  v192[10] = v203;
  v192[11] = v204;
  v192[12] = v205;
  v192[13] = v206;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001DA998();
  swift_setDeallocating();
  sub_1000C12E0();
  v207 = (__n128 *)swift_allocObject();
  sub_100181EB4(v207);
  uint64_t v208 = v270;
  WeatherDataModel.currentWeather.getter();
  sub_100164FE0();
  uint64_t v210 = v209[3];
  v253 = (__n128 *)v209[2];
  uint64_t v211 = v209[5];
  uint64_t v250 = v209[4];
  uint64_t v212 = v208;
  uint64_t v213 = v266;
  v214 = (void (*)(char *, uint64_t, uint64_t))v257;
  v257(v196, v212, v266);
  uint64_t v215 = type metadata accessor for VisibilityComponent();
  sub_100166B28(v215);
  v216[2] = v253;
  v216[3] = v210;
  v216[4] = v250;
  v216[5] = v211;
  swift_storeEnumTagMultiPayload();
  v217 = (char *)v260 + v196;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v161 = v263;
  swift_bridgeObjectRetain();
  uint64_t v218 = v270;
  WeatherDataModel.currentWeather.getter();
  uint64_t v219 = v213;
  uint64_t v220 = v276;
  v214(v217, v218, v219);
  swift_storeEnumTagMultiPayload();
  sub_1001DA998();
  swift_setDeallocating();
  sub_1000C12E0();
  sub_10014FD90((uint64_t)v273, (uint64_t)v161, (void (*)(void))type metadata accessor for WeatherData);
  swift_storeEnumTagMultiPayload();
  sub_1000C13A0((uint64_t)v161);
  sub_1000C12F8((uint64_t)v161, (void (*)(void))v251);
  uint64_t v221 = swift_allocObject();
  *(_OWORD *)(v221 + 16) = v259;
  uint64_t v222 = v221 + v258;
  v223 = v252;
  uint64_t v224 = (uint64_t)v272;
  WeatherDataModel.historicalComparisons.getter();
  sub_100350F14((uint64_t)v223, v222);
  sub_1001823C8();
  swift_storeEnumTagMultiPayload();
  v225 = (char *)v260 + v222;
  uint64_t v226 = v270;
  WeatherDataModel.currentWeather.getter();
  sub_100182F80();
  sub_10017F35C();
  sub_10014FD90(v224, v227, (void (*)(void))type metadata accessor for PressureComponentPreprocessedDataModel);
  v257(v225, v226, v266);
  swift_storeEnumTagMultiPayload();
  uint64_t v173 = v220;
LABEL_40:
  sub_1001DA998();
  swift_setDeallocating();
  sub_1000C12E0();
  if (v262 == 1)
  {
    *uint64_t v161 = 1;
    swift_storeEnumTagMultiPayload();
    sub_1000C13A0((uint64_t)v161);
    sub_1000C12F8((uint64_t)v161, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  sub_1000C12F8(v264, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
  sub_1000C12F8(v274, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_1000C12F8((uint64_t)v273, (void (*)(void))type metadata accessor for WeatherData);
  sub_100162F0C();
  v228();
  swift_beginAccess();
  uint64_t v229 = *(void *)(v173 + 16);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_10000DD14();
  swift_deallocClassInstance();
  return v229;
}

unint64_t sub_10034F218(uint64_t a1)
{
  uint64_t HourPrecipitationComponentParameters = type metadata accessor for NextHourPrecipitationComponentParameters();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100162EF8();
  uint64_t v175 = v3;
  sub_1001626D4();
  __chkstk_darwin(v4);
  sub_100128F8C();
  uint64_t v177 = v5;
  type metadata accessor for WeatherAlert.Prominence();
  sub_100179C0C();
  uint64_t v185 = v7;
  uint64_t v186 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v184 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E6E830);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v168 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  sub_100109770();
  uint64_t v174 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100109770();
  uint64_t v169 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  sub_100109770();
  uint64_t v181 = v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  sub_100109770();
  uint64_t v166 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  sub_100109770();
  uint64_t v165 = v21;
  sub_1001626D4();
  __chkstk_darwin(v22);
  sub_100109770();
  uint64_t v170 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100128F8C();
  uint64_t v190 = v25;
  uint64_t v26 = type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100162EF8();
  uint64_t v167 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  sub_100109770();
  uint64_t v172 = v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  sub_100109770();
  uint64_t v164 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100109770();
  uint64_t v182 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v160 - v36;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v160 - v39;
  __chkstk_darwin(v41);
  sub_100109770();
  uint64_t v176 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100109770();
  uint64_t v183 = v44;
  sub_1001626D4();
  __chkstk_darwin(v45);
  sub_100109770();
  uint64_t v188 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  sub_100109770();
  uint64_t v163 = v48;
  sub_1001626D4();
  __chkstk_darwin(v49);
  sub_100109770();
  uint64_t v171 = v50;
  sub_1001626D4();
  __chkstk_darwin(v51);
  sub_100128F8C();
  uint64_t v178 = v52;
  uint64_t v53 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  sub_1001626E0();
  uint64_t v57 = v56 - v55;
  uint64_t v58 = type metadata accessor for WeatherData(0);
  uint64_t v59 = v58 - 8;
  __chkstk_darwin(v58);
  sub_1001626E0();
  uint64_t v62 = v61 - v60;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v64 = v63;
  __chkstk_darwin(v65);
  sub_1001626E0();
  uint64_t v68 = v67 - v66;
  uint64_t v189 = v64;
  uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
  uint64_t v192 = v70;
  uint64_t v179 = v69;
  ((void (*)(uint64_t, uint64_t))v69)(v67 - v66, a1);
  uint64_t v71 = (int *)type metadata accessor for LocationViewConfigurationInputs();
  sub_10014FD90(a1 + v71[5], v62, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v72 = a1 + v71[6];
  uint64_t v193 = v57;
  sub_10014FD90(v72, v57, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  uint64_t v73 = v71[10];
  uint64_t v187 = a1;
  int v191 = *(unsigned __int8 *)(a1 + v73);
  uint64_t v173 = v62 + *(int *)(v59 + 32);
  uint64_t v74 = WeatherDataModel.weatherAlerts.getter();
  uint64_t v75 = v194;
  if (v74)
  {
    uint64_t v160 = v37;
    uint64_t v161 = v40;
    uint64_t v76 = *(void *)(v194 + 40);
    uint64_t v162 = (void *)(v194 + 16);
    sub_1001B1E64((void *)(v194 + 16), v76);
    uint64_t v78 = v184;
    uint64_t v77 = v185;
    uint64_t v79 = v186;
    sub_1001649D0();
    v80();
    uint64_t v81 = v26;
    uint64_t v82 = v190;
    sub_10019B438();
    sub_1000C1470(v83);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v78, v79);
    sub_10012B520(v82, 1, v81);
    uint64_t v84 = v81;
    if (!v85)
    {
      sub_100178BD0(v190, v178, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t v118 = v177;
      v179(v177, v68, v192);
      uint64_t v119 = HourPrecipitationComponentParameters;
      sub_10014FD90(v62, v118 + *(int *)(HourPrecipitationComponentParameters + 20), (void (*)(void))type metadata accessor for WeatherData);
      *(void *)(v118 + *(int *)(v119 + 24)) = _swiftEmptyArrayStorage;
      *(unsigned char *)(v118 + *(int *)(v119 + 28)) = v191;
      uint64_t v120 = v194;
      uint64_t v121 = v162;
      sub_10018440C(v162, *(void *)(v194 + 40));
      uint64_t v122 = v170;
      sub_100A63440(v118, v170);
      int v123 = _s7Weather24LocationCompositionStateOwet_0(v122, 1, v84);
      if (v123 == 1)
      {
        sub_100178110(v122, &qword_100E6E830);
        sub_10018440C(v121, *(void *)(v120 + 40));
        sub_1001868E0((uint64_t)&v196);
        sub_10012B520(v122, 1, v84);
        if (v85)
        {
          sub_100178110(v122, &qword_100E6E830);
          sub_10017E1F4(v62, v187, v68);
          sub_1000C12F8(v177, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
          sub_1000C12F8((uint64_t)v121, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
          sub_10019D4E4();
          v124();
          type metadata accessor for WeatherMapOverlayKind();
          sub_100162E4C();
          sub_1001A0550();
          v125();
          type metadata accessor for MapComponent();
          sub_1001628A4();
          sub_100178BD0(v62, v126, (void (*)(void))type metadata accessor for WeatherData);
          sub_10018AFEC();
          sub_100178BD0(v178, v183, (void (*)(void))type metadata accessor for LocationViewComponent);
          type metadata accessor for LocationNoAqiSevereConfiguration._Storage(0);
          sub_100181044();
          uint64_t v127 = sub_10019AA7C();
          uint64_t v103 = sub_1002D1EB8(v127);
          unint64_t v104 = 0x9000000000000000;
        }
        else
        {
          uint64_t v146 = (uint64_t)v160;
          sub_100178BD0(v122, (uint64_t)v160, (void (*)(void))type metadata accessor for LocationViewComponent);
          sub_10017E1F4(v62, v187, v68);
          sub_1000C12F8(v177, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
          sub_1000C12F8((uint64_t)v121, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
          sub_10019D4E4();
          v147();
          type metadata accessor for WeatherMapOverlayKind();
          sub_100162E4C();
          sub_1001A0550();
          v148();
          type metadata accessor for MapComponent();
          sub_10017F35C();
          sub_100178BD0(v62, v149, (void (*)(void))type metadata accessor for WeatherData);
          sub_10018AFEC();
          sub_1001859CC(v146);
          sub_1001A3168(v178);
          type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(0);
          sub_100181044();
          sub_1001632E0();
          uint64_t v103 = sub_1002CC2C4();
          unint64_t v104 = 0x2000000000000000;
        }
      }
      else
      {
        sub_100178BD0(v122, v171, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_10018440C(v121, *(void *)(v120 + 40));
        sub_1001868E0((uint64_t)&v195);
        sub_10012B520(v122, 1, v84);
        if (v85)
        {
          sub_100178110(v122, &qword_100E6E830);
          sub_10017E1F4(v62, v187, v68);
          sub_1000C12F8(v177, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
          sub_1000C12F8((uint64_t)v121, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
          sub_10019D4E4();
          v137();
          type metadata accessor for WeatherMapOverlayKind();
          sub_100162E4C();
          sub_1001A0550();
          v138();
          type metadata accessor for MapComponent();
          sub_1001628A4();
          sub_100178BD0(v62, v139, (void (*)(void))type metadata accessor for WeatherData);
          sub_10018AFEC();
          uint64_t v103 = (uint64_t)type metadata accessor for LocationViewComponent;
          sub_100178BD0(v178, v183, (void (*)(void))type metadata accessor for LocationViewComponent);
          sub_100178BD0(v171, v176, (void (*)(void))type metadata accessor for LocationViewComponent);
          type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(0);
          sub_100181044();
          sub_10019AA7C();
          sub_1002D31C8();
          sub_1001870E0();
          unint64_t v104 = v140 & 0xFFFFFFFFFFFFLL | 0x4000000000000000;
        }
        else
        {
          uint64_t v154 = v163;
          sub_100178BD0(v122, v163, (void (*)(void))type metadata accessor for LocationViewComponent);
          sub_10017E1F4(v62, v187, v68);
          sub_1000C12F8(v177, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
          sub_1000C12F8((uint64_t)v121, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
          sub_10019D4E4();
          v155();
          type metadata accessor for WeatherMapOverlayKind();
          sub_100162E4C();
          sub_1001A0550();
          v156();
          type metadata accessor for MapComponent();
          sub_10017F35C();
          sub_100178BD0(v62, v157, (void (*)(void))type metadata accessor for WeatherData);
          sub_10018AFEC();
          sub_1001859CC(v178);
          sub_1001A3168(v171);
          sub_100178BD0(v154, (uint64_t)v161, (void (*)(void))type metadata accessor for LocationViewComponent);
          type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(0);
          sub_100181044();
          sub_1001632E0();
          sub_1002D59D0();
          uint64_t v103 = v158;
          unint64_t v104 = 0x6000000000000000;
        }
      }
      return v104 | v103;
    }
    sub_100178110(v190, &qword_100E6E830);
    uint64_t v26 = v81;
    uint64_t v75 = v194;
  }
  uint64_t v86 = (void *)(v75 + 16);
  sub_1001B1E64((void *)(v75 + 16), *(void *)(v75 + 40));
  uint64_t v87 = v181;
  sub_10019B438();
  sub_1000277CC(v88);
  sub_10012B520(v87, 1, v26);
  uint64_t v89 = v26;
  if (!v85)
  {
    uint64_t HourPrecipitationComponentParameters = v68;
    sub_100178BD0(v87, v182, (void (*)(void))type metadata accessor for LocationViewComponent);
    uint64_t v105 = WeatherDataModel.weatherAlerts.getter();
    uint64_t v106 = v193;
    char v107 = v191;
    if (v105)
    {
      sub_1001B1E64(v86, *(void *)(v75 + 40));
      sub_1001649D0();
      v108();
      char v109 = v169;
      uint64_t v110 = HourPrecipitationComponentParameters;
      uint64_t v190 = v62;
      sub_1000C1470(v169);
      swift_bridgeObjectRelease();
      sub_1001628B0();
      v111();
      sub_10012B520((uint64_t)v109, 1, v89);
      if (!v85)
      {
        uint64_t v141 = v164;
        sub_100178BD0((uint64_t)v109, v164, (void (*)(void))type metadata accessor for LocationViewComponent);
        uint64_t v142 = v190;
        sub_10035067C(v190, v187, v110, v106, v191, 0);
        sub_1000C12F8(v106, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        sub_100162F0C();
        v143();
        type metadata accessor for WeatherMapOverlayKind();
        sub_100162E4C();
        sub_1001A0550();
        v144();
        type metadata accessor for MapComponent();
        sub_10017F35C();
        sub_100178BD0(v142, v145, (void (*)(void))type metadata accessor for WeatherData);
        swift_storeEnumTagMultiPayload();
        sub_1001859CC(v141);
        sub_1001A3168(v182);
        type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(0);
        sub_100181044();
        uint64_t v103 = sub_1002CB41C();
        unint64_t v104 = 0xC000000000000000;
        return v104 | v103;
      }
      sub_100178110((uint64_t)v109, &qword_100E6E830);
      uint64_t v62 = v190;
      char v107 = v191;
    }
    sub_10035067C(v62, v187, HourPrecipitationComponentParameters, v106, v107, 0);
    uint64_t v113 = v112;
    sub_1000C12F8(v106, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_100162F0C();
    v114();
    type metadata accessor for WeatherMapOverlayKind();
    sub_100162E4C();
    sub_1001A0550();
    v115();
    type metadata accessor for MapComponent();
    sub_1001628A4();
    sub_100178BD0(v62, v116, (void (*)(void))type metadata accessor for WeatherData);
    swift_storeEnumTagMultiPayload();
    sub_100178BD0(v182, v183, (void (*)(void))type metadata accessor for LocationViewComponent);
    type metadata accessor for LocationElevatedAqiConfiguration._Storage(0);
    uint64_t v103 = sub_100181044();
    sub_1002CACA8(v113);
    sub_1001870E0();
    unint64_t v104 = v117 & 0xFFFFFFFFFFFFLL | 0x8000000000000000;
    return v104 | v103;
  }
  sub_100178110(v87, &qword_100E6E830);
  uint64_t v90 = v175;
  v179(v175, v68, v192);
  uint64_t v91 = HourPrecipitationComponentParameters;
  uint64_t v92 = v90 + *(int *)(HourPrecipitationComponentParameters + 20);
  uint64_t v190 = v62;
  sub_10014FD90(v62, v92, (void (*)(void))type metadata accessor for WeatherData);
  *(void *)(v90 + *(int *)(v91 + 24)) = _swiftEmptyArrayStorage;
  char v93 = v191;
  *(unsigned char *)(v90 + *(int *)(v91 + 28)) = v191;
  sub_10018440C(v86, *(void *)(v75 + 40));
  uint64_t v94 = v174;
  sub_100A63440(v90, v174);
  sub_10012B520(v94, 1, v89);
  if (v85)
  {
    sub_100178110(v94, &qword_100E6E830);
    uint64_t v95 = v190;
    uint64_t v96 = v193;
    sub_10035067C(v190, v187, v68, v193, v93, 1);
    uint64_t v98 = v97;
    sub_1000C12F8(v90, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
    sub_1000C12F8(v96, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_10019B438();
    sub_100162F0C();
    v99();
    type metadata accessor for WeatherMapOverlayKind();
    sub_100162E4C();
    uint64_t v100 = v188;
    sub_1001A0550();
    v101();
    type metadata accessor for MapComponent();
    sub_1001628A4();
    sub_100178BD0(v95, v102, (void (*)(void))type metadata accessor for WeatherData);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for LocationNoAqiConfiguration._Storage(0);
    uint64_t v103 = sub_100181044();
    *(void *)(v103 + 16) = v98;
    sub_100178BD0(v100, v103 + OBJC_IVAR____TtCV7Weather26LocationNoAqiConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
    unint64_t v104 = 0xA000000000000000;
  }
  else
  {
    sub_100178BD0(v94, v172, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_10018440C(v86, *(void *)(v75 + 40));
    uint64_t v128 = v168;
    uint64_t v129 = v190;
    uint64_t v130 = v193;
    sub_1000277CC(v168);
    int v131 = _s7Weather24LocationCompositionStateOwet_0(v128, 1, v89);
    if (v131 == 1)
    {
      sub_100178110(v128, &qword_100E6E830);
      sub_1001D0E48(v129, v187, v68);
      sub_1000C12F8(v90, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
      sub_1000C12F8(v130, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_1001628B0();
      v132();
      uint64_t v103 = enum case for WeatherMapOverlayKind.airQuality(_:);
      type metadata accessor for WeatherMapOverlayKind();
      sub_100162E4C();
      sub_1001A0550();
      v133();
      type metadata accessor for MapComponent();
      sub_1001628A4();
      sub_100178BD0(v129, v134, (void (*)(void))type metadata accessor for WeatherData);
      swift_storeEnumTagMultiPayload();
      sub_100178BD0(v172, v183, (void (*)(void))type metadata accessor for LocationViewComponent);
      type metadata accessor for LocationNoAqiNhpConfiguration._Storage(0);
      sub_100181044();
      uint64_t v135 = sub_10019AA7C();
      sub_1002D0DD4(v135);
      sub_1001870E0();
      unint64_t v104 = v136 & 0xFFFFFFFFFFFFLL | 0x9000000000000000;
    }
    else
    {
      sub_100178BD0(v128, v167, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_1001D0E48(v129, v187, v68);
      sub_1000C12F8(v90, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
      sub_1000C12F8(v130, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_1001628B0();
      v150();
      uint64_t v103 = enum case for WeatherMapOverlayKind.airQuality(_:);
      type metadata accessor for WeatherMapOverlayKind();
      sub_100162E4C();
      sub_1001A0550();
      v151();
      type metadata accessor for MapComponent();
      sub_10017F35C();
      sub_100178BD0(v129, v152, (void (*)(void))type metadata accessor for WeatherData);
      swift_storeEnumTagMultiPayload();
      sub_1001859CC(v172);
      sub_1001A3168(v167);
      type metadata accessor for LocationNhpConfiguration._Storage(0);
      sub_100181044();
      sub_1001632E0();
      sub_1002CDD8C();
      sub_1001870E0();
      unint64_t v104 = v153 & 0xFFFFFFFFFFFFLL | 0x1000000000000000;
    }
  }
  return v104 | v103;
}

void sub_10035067C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, int a6)
{
  LODWORD(v77) = a6;
  uint64_t v76 = a4;
  uint64_t v75 = a3;
  uint64_t v8 = sub_10017DF08(&qword_100E66CA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for CurrentWeather();
  __chkstk_darwin(v9 - 8);
  uint64_t v87 = type metadata accessor for LocationViewComponent();
  __chkstk_darwin(v87);
  uint64_t v86 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v85 = (char *)&v73 - v12;
  __chkstk_darwin(v13);
  uint64_t v83 = (char *)&v73 - v14;
  __chkstk_darwin(v15);
  uint64_t v80 = (char *)&v73 - v16;
  __chkstk_darwin(v17);
  uint64_t v90 = (char *)&v73 - v18;
  __chkstk_darwin(v19);
  uint64_t v88 = (uint64_t)&v73 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (int **)((char *)&v73 - v22);
  __chkstk_darwin(v24);
  uint64_t v89 = (char *)&v73 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v73 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v73 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v73 - v33;
  uint64_t v82 = (char *)&v73 - v33;
  __chkstk_darwin(v35);
  uint64_t v84 = (char *)&v73 - v36;
  uint64_t v37 = v76;
  sub_100350D90(v76, v77, a5, (uint64_t)&v73 - v36);
  uint64_t v81 = a1;
  sub_100010B10(v37, (uint64_t)v34);
  type metadata accessor for WeatherData(0);
  uint64_t v79 = v31;
  WeatherDataModel.currentWeather.getter();
  uint64_t v38 = (int *)type metadata accessor for PreprocessedWeatherData();
  uint64_t v39 = v37 + v38[10];
  uint64_t v40 = type metadata accessor for UVIndexComponent();
  sub_10014FD90(v39, (uint64_t)&v31[*(int *)(v40 + 20)], (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
  WeatherDataModel.dailyForecast.getter();
  WeatherDataModel.hourlyForecast.getter();
  swift_storeEnumTagMultiPayload();
  WeatherDataModel.currentWeather.getter();
  WeatherDataModel.dailyForecast.getter();
  uint64_t v78 = v28;
  SunriseSunsetModel.init(currentWeather:dailyForecast:)();
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = v89;
  WeatherDataModel.currentWeather.getter();
  uint64_t v42 = (const void *)(v37 + v38[13]);
  memcpy(__dst, v42, sizeof(__dst));
  uint64_t v43 = type metadata accessor for WindComponent();
  memcpy(&v41[*(int *)(v43 + 20)], v42, 0xE8uLL);
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = (uint64_t *)(v37 + v38[9]);
  uint64_t v45 = *v44;
  uint64_t v46 = v44[1];
  uint64_t v47 = v44[2];
  uint64_t v48 = v44[3];
  uint64_t v49 = v44[4];
  uint64_t v50 = v44[5];
  uint64_t v51 = v44[6];
  uint64_t v52 = v44[7];
  uint64_t v53 = v44[8];
  uint64_t v74 = v44[9];
  uint64_t v54 = v74;
  uint64_t v55 = v44[10];
  uint64_t v75 = v44[11];
  uint64_t v56 = v75;
  uint64_t v58 = v44[12];
  uint64_t v57 = v44[13];
  uint64_t v77 = v57;
  *uint64_t v23 = v45;
  v23[1] = v46;
  v23[2] = v47;
  v23[3] = v48;
  v23[4] = v49;
  v23[5] = v50;
  v23[6] = v51;
  v23[7] = v52;
  v23[8] = v53;
  v23[9] = v54;
  v23[10] = v55;
  v23[11] = v56;
  v23[12] = v58;
  v23[13] = v57;
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = v38[6];
  uint64_t v73 = v38;
  sub_10014FD90(v37 + v59, v88, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
  swift_storeEnumTagMultiPayload();
  sub_100049160((uint64_t)__dst);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  WeatherDataModel.currentWeather.getter();
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = v80;
  WeatherDataModel.currentWeather.getter();
  uint64_t v61 = v37;
  uint64_t v62 = (uint64_t *)(v37 + v38[11]);
  uint64_t v64 = *v62;
  uint64_t v63 = v62[1];
  uint64_t v66 = v62[2];
  uint64_t v65 = v62[3];
  uint64_t v68 = v62[4];
  uint64_t v67 = v62[5];
  uint64_t v69 = &v60[*(int *)(type metadata accessor for VisibilityComponent() + 20)];
  *(void *)uint64_t v69 = v64;
  *((void *)v69 + 1) = v63;
  *((void *)v69 + 2) = v66;
  *((void *)v69 + 3) = v65;
  *((void *)v69 + 4) = v68;
  *((void *)v69 + 5) = v67;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v70 = v83;
  WeatherDataModel.currentWeather.getter();
  uint64_t v71 = v61 + v73[12];
  uint64_t v72 = type metadata accessor for PressureComponent();
  sub_10014FD90(v71, (uint64_t)&v70[*(int *)(v72 + 20)], (void (*)(void))type metadata accessor for PressureComponentPreprocessedDataModel);
  swift_storeEnumTagMultiPayload();
  WeatherDataModel.historicalComparisons.getter();
  swift_storeEnumTagMultiPayload();
  sub_10014FD90(v81, v86, (void (*)(void))type metadata accessor for WeatherData);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
  swift_allocObject();
  sub_1002C70AC();
}

uint64_t sub_100350D90@<X0>(uint64_t a1@<X3>, char a2@<W4>, char a3@<W6>, uint64_t a4@<X8>)
{
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  uint64_t v8 = a1 + *(int *)(type metadata accessor for PreprocessedWeatherData() + 28);
  uint64_t v9 = (int *)type metadata accessor for HourlyForecastComponent();
  sub_10014FD90(v8, a4 + v9[5], (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  WeatherDataModel.hourlyForecast.getter();
  WeatherDataModel.dailyForecast.getter();
  WeatherDataModel.weatherChanges.getter();
  *(unsigned char *)(a4 + v9[9]) = a2;
  *(unsigned char *)(a4 + v9[10]) = a3;
  type metadata accessor for LocationViewComponent();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100350E80(uint64_t a1)
{
  return sub_10034D9CC(a1);
}

unint64_t sub_100350EA4(uint64_t a1)
{
  return sub_10034F218(a1);
}

unint64_t sub_100350EC8()
{
  unint64_t result = qword_100E6E838;
  if (!qword_100E6E838)
  {
    type metadata accessor for AlternativeLocationViewConfigurationFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E838);
  }
  return result;
}

uint64_t sub_100350F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100350F7C(long long *a1, uint64_t a2, uint64_t a3)
{
  sub_1001262E4(a1, v3 + 16);
  *(void *)(v3 + 56) = a2;
  *(void *)(v3 + 64) = a3;
  return v3;
}

uint64_t sub_100350FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6E8F8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_100179C0C();
  uint64_t v212 = v9;
  uint64_t v213 = v10;
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v228 = v11;
  __chkstk_darwin(v12);
  uint64_t v211 = (char *)&v187 - v13;
  sub_100129064();
  uint64_t v210 = type metadata accessor for ConditionDetailMapViewModel();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v229 = v15;
  __chkstk_darwin(v16);
  uint64_t v226 = (Swift::String *)((char *)&v187 - v17);
  sub_100129064();
  uint64_t v227 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v225 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v224 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v208 = v23;
  uint64_t v207 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v206 = v24;
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v205 = v26;
  uint64_t v204 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v203 = v27;
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v201 = v29;
  sub_100129064();
  uint64_t v202 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v200 = v30;
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v199 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E63758);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v221 = v35;
  sub_100129064();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v222 = v37;
  uint64_t v223 = v36;
  __chkstk_darwin(v36);
  sub_100109314();
  uint64_t v230 = v38;
  sub_100129064();
  uint64_t HourPrecipitationChartPlacement = type metadata accessor for NextHourPrecipitationChartPlacement();
  sub_100179C0C();
  uint64_t v40 = v39;
  __chkstk_darwin(v41);
  sub_100109314();
  uint64_t v43 = v42;
  sub_100129064();
  type metadata accessor for NextHourPrecipitationChartViewModel();
  sub_100179C0C();
  uint64_t v214 = v45;
  uint64_t v215 = v44;
  __chkstk_darwin(v44);
  sub_100162EF8();
  uint64_t v220 = v46;
  __chkstk_darwin(v47);
  uint64_t v219 = (char *)&v187 - v48;
  sub_100129064();
  uint64_t v216 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v50 = v49;
  __chkstk_darwin(v51);
  sub_1001626E0();
  uint64_t v54 = v53 - v52;
  uint64_t HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  uint64_t v56 = sub_100109308(HourPrecipitationDetailInput);
  __chkstk_darwin(v56);
  sub_1001626E0();
  uint64_t v59 = v58 - v57;
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  sub_100162E4C();
  __chkstk_darwin(v61);
  sub_1001626E0();
  uint64_t v64 = v63 - v62;
  sub_1003523CC(a1, v59, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
  if (_s7Weather24LocationCompositionStateOwet_0(v59, 1, HourPrecipitationDetail) == 1)
  {
    sub_10035242C(v59, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
    uint64_t HourPrecipitationDetailView = type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
    _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, HourPrecipitationDetailView);
    type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  }
  else
  {
    uint64_t v194 = v8;
    uint64_t v195 = (char *)a2;
    sub_100352480(v59, v64, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
    uint64_t v66 = v64;
    uint64_t v218 = v64;
    uint64_t v67 = v217;
    unint64_t v189 = *(void *)(v217 + 56);
    uint64_t v209 = v66 + *(int *)(HourPrecipitationDetail + 20);
    Date.init()();
    uint64_t v68 = NextHourPrecipitationStringBuilder.buildShortString(from:referenceDate:)();
    unint64_t v70 = v69;
    uint64_t v188 = *(void (**)(void))(v50 + 8);
    uint64_t v196 = v50 + 8;
    ((void (*)(uint64_t, uint64_t))v188)(v54, v216);
    if (v70) {
      uint64_t v71 = v68;
    }
    else {
      uint64_t v71 = 0;
    }
    uint64_t v193 = v71;
    unint64_t v72 = 0xE000000000000000;
    if (v70) {
      unint64_t v72 = v70;
    }
    unint64_t v192 = v72;
    id v197 = self;
    uint64_t v73 = (objc_class *)[v197 mainBundle];
    sub_100181104();
    sub_1001631D8();
    v74.super.Class isa = v73;
    uint64_t v191 = sub_1001632F8(v75, 0x8000000100C99FF0, 0, 0, v74, v76, v77, v78);
    v231._object = v79;

    sub_1001B1E64((void *)(v67 + 16), *(void *)(v67 + 40));
    uint64_t v80 = v43;
    uint64_t v81 = v43;
    uint64_t v82 = HourPrecipitationChartPlacement;
    (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v81, enum case for NextHourPrecipitationChartPlacement.detailView(_:), HourPrecipitationChartPlacement);
    Date.init()();
    uint64_t v83 = v218;
    uint64_t v187 = HourPrecipitationDetail;
    dispatch thunk of NextHourPrecipitationChartViewModelFactoryType.makeViewModel(for:precipitation:placement:currentTime:minutesToConsider:)();
    uint64_t v84 = v188;
    sub_10019D4F4();
    v84();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v80, v82);
    char v85 = (objc_class *)[v197 mainBundle];
    sub_100181104();
    sub_1001631D8();
    v86.super.Class isa = v85;
    uint64_t HourPrecipitationChartPlacement = sub_1001632F8(0x7473616365726F46, 0xE800000000000000, 0, 0, v86, v87, v88, v89);
    uint64_t v190 = v90;

    Location.timeZone.getter();
    Date.init()();
    uint64_t v91 = NextHourPrecipitationStringBuilder.buildLongString(from:timeZone:referenceDate:)();
    unint64_t v93 = v92;
    sub_10019D4F4();
    v84();
    uint64_t v94 = *(void (**)(uint64_t))(v222 + 8);
    uint64_t v95 = sub_100183968();
    v94(v95);
    if (v93) {
      uint64_t v96 = v91;
    }
    else {
      uint64_t v96 = 0;
    }
    uint64_t v196 = v96;
    unint64_t v97 = 0xE000000000000000;
    if (v93) {
      unint64_t v97 = v93;
    }
    unint64_t v189 = v97;
    uint64_t v188 = *(void (**)(void))(v217 + 64);
    uint64_t v216 = v83 + *(int *)(v187 + 24);
    uint64_t v217 = type metadata accessor for WeatherData(0);
    WeatherDataModel.currentWeather.getter();
    WeatherDataModel.hourlyForecast.getter();
    WeatherDataModel.dailyForecast.getter();
    uint64_t v98 = v208;
    WeatherDataModel.weatherChanges.getter();
    Location.timeZone.getter();
    uint64_t v99 = v221;
    WeatherForecastDescriptionStringBuilder.buildWeatherDescription(from:hourlyForecast:dailyForecast:weatherChanges:timeZone:)();
    uint64_t v100 = sub_100183968();
    v94(v100);
    sub_100178110(v98, &qword_100E6D1C8);
    sub_100162F0C();
    v101();
    sub_100162F0C();
    v102();
    sub_100162F0C();
    v103();
    uint64_t v104 = v224;
    id v105 = v197;
    sub_100352000(v99, v196, v189, v224);
    swift_bridgeObjectRelease();
    id v106 = [v105 mainBundle];
    sub_100181104();
    sub_1001631D8();
    v107._object = (void *)0x8000000100C9B150;
    v108._object = (void *)0x8000000100C9B180;
    Swift::String v109 = NSLocalizedString(_:tableName:bundle:value:comment:)(v107, (Swift::String_optional)0, (NSBundle)v106, v108, v231);

    uint64_t v110 = (int *)v210;
    uint64_t v111 = v226;
    uint64_t v112 = (char *)v226 + *(int *)(v210 + 20);
    type metadata accessor for Location();
    sub_100162E4C();
    (*(void (**)(char *, uint64_t))(v113 + 16))(v112, v218);
    sub_1003523CC(v216, (uint64_t)v111 + v110[6], (void (*)(void))type metadata accessor for WeatherData);
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v114, v115, v116, v217);
    uint64_t v117 = (objc_class *)[v105 mainBundle];
    sub_1001631D8();
    v118.super.Class isa = v117;
    uint64_t v122 = sub_1001632F8(0x65726F4D20656553, 0xE800000000000000, 0, 0, v118, v119, v120, v121);
    uint64_t v124 = v123;

    type metadata accessor for WeatherMapPrecipitationOverlayKind();
    sub_100162E4C();
    uint64_t v125 = sub_100163310();
    v126(v125);
    type metadata accessor for WeatherMapOverlayKind();
    sub_100162E4C();
    uint64_t v127 = sub_100163310();
    v128(v127);
    *uint64_t v111 = v109;
    uint64_t v129 = (uint64_t *)((char *)&v111->_countAndFlagsBits + v110[7]);
    *uint64_t v129 = v122;
    v129[1] = v124;
    *((unsigned char *)&v111->_countAndFlagsBits + v110[9]) = 1;
    uint64_t v130 = (uint64_t)v211;
    int v131 = v212;
    uint64_t v132 = v227;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)&v211[v212[6]], 1, 1, v227);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v225 + 16))(v130 + v131[7], v104, v132);
    uint64_t v133 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v130 + v131[8], 1, 1, v133);
    *(void *)uint64_t v130 = 0;
    *(void *)(v130 + 8) = 0;
    *(unsigned char *)(v130 + 16) = 2;
    uint64_t v134 = v190;
    *(void *)(v130 + 24) = HourPrecipitationChartPlacement;
    *(void *)(v130 + 32) = v134;
    *(unsigned char *)(v130 + v131[9]) = 0;
    *(unsigned char *)(v130 + v131[10]) = 0;
    uint64_t v135 = sub_1007E9A64(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v137 = *(void *)(v135 + 16);
    unint64_t v136 = *(void *)(v135 + 24);
    if (v137 >= v136 >> 1) {
      uint64_t v135 = sub_1007E9A64(v136 > 1, v137 + 1, 1, v135);
    }
    *(void *)(v135 + 16) = v137 + 1;
    uint64_t v217 = (*(unsigned __int8 *)(v213 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v213 + 80);
    uint64_t v216 = *(void *)(v213 + 72);
    sub_100352480(v130, v135 + v217 + v216 * v137, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v138 = (objc_class *)[v105 mainBundle];
    sub_100181104();
    sub_1001631D8();
    v139.super.Class isa = v138;
    uint64_t v213 = sub_1001632F8(0xD00000000000001DLL, 0x8000000100C9B240, 0, 0, v139, v140, v141, v142);
    uint64_t v144 = v143;

    uint64_t v145 = v131[6];
    uint64_t v146 = v131;
    uint64_t v147 = v228;
    _s7Weather24LocationCompositionStateOwst_0(v228 + v145, 1, 1, v132);
    uint64_t v148 = (uint64_t *)(v147 + v146[7]);
    uint64_t v149 = (objc_class *)[v105 mainBundle];
    sub_100181104();
    sub_1001631D8();
    v150.super.Class isa = v149;
    uint64_t v154 = sub_1001632F8(0x1000000000000172, 0x8000000100C9B2C0, 0, 0, v150, v151, v152, v153);
    uint64_t v156 = v155;

    *uint64_t v148 = v154;
    v148[1] = v156;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v147 + v146[8], 1, 1, v133);
    sub_100181104();
    *(void *)uint64_t v147 = v157;
    *(void *)(v147 + 8) = 0x8000000100C9B240;
    *(unsigned char *)(v147 + 16) = 0;
    *(void *)(v147 + 24) = v213;
    *(void *)(v147 + 32) = v144;
    *(unsigned char *)(v147 + v146[9]) = 0;
    *(unsigned char *)(v147 + v146[10]) = 0;
    unint64_t v159 = *(void *)(v135 + 16);
    unint64_t v158 = *(void *)(v135 + 24);
    if (v159 >= v158 >> 1) {
      uint64_t v135 = sub_1007E9A64(v158 > 1, v159 + 1, 1, v135);
    }
    uint64_t v160 = v195;
    uint64_t v161 = (uint64_t)v226;
    uint64_t v162 = v222;
    uint64_t v163 = v219;
    *(void *)(v135 + 16) = v159 + 1;
    sub_100352480(v228, v135 + v217 + v159 * v216, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v164 = v214;
    uint64_t v165 = v163;
    uint64_t v166 = v163;
    uint64_t v167 = v215;
    (*(void (**)(uint64_t, char *, uint64_t))(v214 + 16))(v220, v165, v215);
    sub_1003523CC(v161, v229, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
    uint64_t v168 = v218;
    Location.timeZone.getter();
    sub_10035242C(v161, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
    sub_100162F0C();
    v169();
    sub_100178110(v221, &qword_100E63758);
    (*(void (**)(char *, uint64_t))(v164 + 8))(v166, v167);
    uint64_t v170 = sub_10017DF08(&qword_100E6E900);
    sub_100162E4C();
    uint64_t v172 = v194;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v171 + 16))(v194, v209, v170);
    sub_10035242C(v168, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v173, v174, v175, v170);
    unint64_t v176 = v192;
    *(void *)uint64_t v160 = v193;
    *((void *)v160 + 1) = v176;
    object = v231._object;
    *((void *)v160 + 2) = v191;
    *((void *)v160 + 3) = object;
    *((void *)v160 + 4) = v135;
    uint64_t v178 = (int *)type metadata accessor for NextHourPrecipitationDetailViewModel.Model(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v164 + 32))(&v160[v178[7]], v220, v167);
    sub_100352480(v229, (uint64_t)&v160[v178[8]], (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
    (*(void (**)(char *, uint64_t, uint64_t))(v162 + 32))(&v160[v178[9]], v230, v223);
    sub_1003524E0(v172, (uint64_t)&v160[v178[10]]);
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v179, v180, v181, (uint64_t)v178);
    type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  }
  sub_1001093B0();
  return _s7Weather24LocationCompositionStateOwst_0(v182, v183, v184, v185);
}

uint64_t sub_100352000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10017DF08(&qword_100E63758);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeatherDescription();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100352548(a1, (uint64_t)v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_100178110((uint64_t)v10, &qword_100E63758);
    return static WeatherDescription.string(_:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    id v16 = [self mainBundle];
    uint64_t v31 = v12;
    id v17 = v16;
    v32._uint64_t countAndFlagsBits = 0xD0000000000000E4;
    v32._object = (void *)0x8000000100C9B4D0;
    v18._object = (void *)0x8000000100C9B4A0;
    v18._uint64_t countAndFlagsBits = 0xD000000000000029;
    v19._uint64_t countAndFlagsBits = 0x4025204025;
    v19._object = (void *)0xE500000000000000;
    Swift::String v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v32);
    v30[1] = v20._object;
    void v30[2] = v20._countAndFlagsBits;

    sub_10017DF08(&qword_100E6E908);
    uint64_t v21 = type metadata accessor for WeatherDescription.Argument();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(void *)(v22 + 72);
    unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_100C25ED0;
    uint64_t v26 = (char *)(v25 + v24);
    *(void *)uint64_t v26 = a2;
    *((void *)v26 + 1) = a3;
    v30[0] = a4;
    uint64_t v27 = *(void (**)(char *, void, uint64_t))(v22 + 104);
    v27(v26, enum case for WeatherDescription.Argument.string(_:), v21);
    uint64_t v28 = &v26[v23];
    uint64_t v29 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v14, v11);
    v27(v28, enum case for WeatherDescription.Argument.description(_:), v21);
    swift_bridgeObjectRetain();
    WeatherDescription.init(format:_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v11);
  }
}

uint64_t sub_100352344()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100352374()
{
  sub_100352344();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NextHourPrecipitationDetailViewModelFactory()
{
  return self;
}

uint64_t sub_1003523CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10035242C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100352480(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1003524E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6E8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100352548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63758);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ResizeMacWindow()
{
  return &type metadata for ResizeMacWindow;
}

uint64_t sub_1003525C4()
{
  sub_1000A9DE8();
  v0[13] = v1;
  v0[14] = v2;
  v0[11] = v3;
  v0[12] = v4;
  v0[15] = type metadata accessor for MainActor();
  v0[16] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[17] = v6;
  v0[18] = v5;
  return _swift_task_switch(sub_100352660, v6, v5);
}

uint64_t sub_100352660()
{
  uint64_t v28 = v0;
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    CGFloat v4 = v0[11];
    CGFloat v6 = v0[13];
    CGFloat v5 = v0[14];
    CGFloat v7 = v0[12];
    uint64_t v8 = swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    v29.width = v4;
    v29.height = v7;
    uint64_t v9 = NSStringFromCGSize(v29);
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    *((void *)v0 + 10) = sub_10016414C(v10, v12, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v30.width = v6;
    v30.height = v5;
    uint64_t v13 = NSStringFromCGSize(v30);
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    *((void *)v0 + 10) = sub_10016414C(v14, v16, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Performing resize test with minimum %s, maximum %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v17 = [self sharedApplication];
  uint64_t v18 = UIApplication.maybeWindow.getter();
  *((void *)v0 + 19) = v18;

  if (!v18)
  {
    swift_release();
    sub_100352E6C();
    swift_allocError();
    swift_willThrow();
    sub_10017CA70();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v19 = static MainActor.shared.getter();
  *((void *)v0 + 20) = v19;
  if (v19)
  {
    swift_getObjectType();
    dispatch thunk of Actor.unownedExecutor.getter();
  }
  sub_10017CA70();
  return _swift_task_switch(v22, v23, v24);
}

uint64_t sub_100352978()
{
  uint64_t v1 = (void *)*((void *)v0 + 19);
  double v3 = v0[13];
  double v2 = v0[14];
  double v5 = v0[11];
  double v4 = v0[12];
  *((void *)v0 + 2) = v0;
  *((void *)v0 + 3) = sub_100352A38;
  uint64_t v6 = swift_continuation_init();
  sub_100352BBC(v6, v1, v5, v4, v3, v2);
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100352A38()
{
  sub_1000A9DE8();
  uint64_t v1 = *v0;
  swift_release();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_100352B54, v3, v2);
}

uint64_t sub_100352B54()
{
  sub_1000A9DE8();
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100352BBC(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  id v13 = objc_allocWithZone((Class)RPTResizeTestParameters);
  id v14 = sub_100352EB8(0, 0, a2, (uint64_t)sub_100352FC8, v12);
  [v14 setMinimumWindowSize:a3, a4];
  [v14 setMaximumWindowSize:a5, a6];
  [self runTestWithParameters:v14];
}

uint64_t sub_100352CC8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100352D7C;
  return sub_1003525C4();
}

uint64_t sub_100352D7C()
{
  sub_1000A9DE8();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_100352E6C()
{
  unint64_t result = qword_100E6E920;
  if (!qword_100E6E920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E920);
  }
  return result;
}

id sub_100352EB8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  if (!a2)
  {
    NSString v10 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    unint64_t v11 = 0;
    goto LABEL_6;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  v14[4] = a4;
  v14[5] = a5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_10010A4D4;
  v14[3] = &unk_100E12000;
  unint64_t v11 = _Block_copy(v14);
  swift_release();
LABEL_6:
  id v12 = [v6 initWithTestName:v10 window:a3 completionHandler:v11];

  _Block_release(v11);
  return v12;
}

uint64_t sub_100352FB8()
{
  return swift_deallocObject();
}

uint64_t sub_100352FC8()
{
  return _swift_continuation_throwingResume(*(void *)(v0 + 16));
}

unsigned char *storeEnumTagSinglePayload for ResizeMacWindow.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10035306CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResizeMacWindow.Errors()
{
  return &type metadata for ResizeMacWindow.Errors;
}

unint64_t sub_1003530A8()
{
  unint64_t result = qword_100E6E928;
  if (!qword_100E6E928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E928);
  }
  return result;
}

void sub_1003530F8()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for Location.Identifier();
  uint64_t v24 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v8 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v10 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100129860();
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)v23 - v14;
  __chkstk_darwin(v13);
  id v17 = (char *)v23 - v16;
  v23[1] = v6;
  sub_10006DF38(v6, (uint64_t)v23 - v16, &qword_100E6DC08);
  v23[2] = v4;
  sub_10006DF38(v4, (uint64_t)v15, &qword_100E6DC08);
  uint64_t v18 = v0 + *(int *)(v9 + 56);
  sub_10006DF38((uint64_t)v17, v0, &qword_100E6DC08);
  sub_10006DF38((uint64_t)v15, v18, &qword_100E6DC08);
  sub_10012B520(v0, 1, v7);
  if (v20)
  {
    sub_10018397C();
    sub_1001781AC((uint64_t)v17, &qword_100E6DC08);
    sub_10012B520(v18, 1, v7);
    if (v20)
    {
      sub_1001781AC(v0, &qword_100E6DC08);
LABEL_12:
      type metadata accessor for ActiveLocationModel(0);
      goto LABEL_13;
    }
LABEL_9:
    sub_1001781AC(v0, &qword_100E6DD18);
    goto LABEL_13;
  }
  uint64_t v19 = v24;
  sub_10006DF38(v0, v2, &qword_100E6DC08);
  sub_10012B520(v18, 1, v7);
  if (v20)
  {
    sub_1001781AC((uint64_t)v15, &qword_100E6DC08);
    sub_1001781AC((uint64_t)v17, &qword_100E6DC08);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v2, v7);
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v1, v18, v7);
  sub_1001CF7B8();
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v22(v1, v7);
  sub_10018397C();
  sub_1001781AC((uint64_t)v17, &qword_100E6DC08);
  v22(v2, v7);
  sub_1001781AC(v0, &qword_100E6DC08);
  if (v21) {
    goto LABEL_12;
  }
LABEL_13:
  sub_100162694();
}

uint64_t *sub_100353448(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E6DC08);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
  }
  return a1;
}

char *sub_100353580(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *(void *)v13;
  v12[8] = v13[8];
  *(void *)uint64_t v12 = v14;
  return a1;
}

char *sub_1003536F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  return a1;
}

char *sub_1003537D8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

uint64_t sub_100353948()
{
  sub_1001097B4();
  uint64_t v2 = sub_10017DF08(&qword_100E6DC08);

  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_100353990()
{
  sub_1001097B4();
  uint64_t v2 = sub_10017DF08(&qword_100E6DC08);

  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

uint64_t *sub_1003539DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, active))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E663D0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for Location.Identifier();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v13))
      {
        memcpy(v8, v9, *(void *)(*(void *)(active - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v13);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, active);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

unsigned char *sub_100353B88(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, active);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, active);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for Location.Identifier();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v12))
      {
        memcpy(v7, v8, *(void *)(*(void *)(active - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v12);
      }
      uint64_t v17 = (uint64_t)v7;
      uint64_t v18 = active;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_10013C290((uint64_t)v7, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(sub_10017DF08(&qword_100E663D0) - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for Location.Identifier();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      uint64_t v17 = (uint64_t)v7;
      uint64_t v18 = v14;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v18);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v20 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 24))(v7, v8, v14);
      goto LABEL_15;
    }
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v7, v14);
  }
  size_t v13 = *(void *)(*(void *)(active - 8) + 64);
LABEL_8:
  memcpy(v7, v8, v13);
LABEL_15:
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_100353E28(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, active))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E663D0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v11))
    {
      memcpy(v7, v8, *(void *)(*(void *)(active - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v11);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, active);
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_100353F80(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  int v8 = &a2[v6];
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, active);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, active);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for Location.Identifier();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v12))
      {
        memcpy(v7, v8, *(void *)(*(void *)(active - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v12);
      }
      uint64_t v17 = (uint64_t)v7;
      uint64_t v18 = active;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_10013C290((uint64_t)v7, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(sub_10017DF08(&qword_100E663D0) - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for Location.Identifier();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      uint64_t v17 = (uint64_t)v7;
      uint64_t v18 = v14;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v18);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v20 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 40))(v7, v8, v14);
      goto LABEL_15;
    }
    (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v7, v14);
  }
  size_t v13 = *(void *)(*(void *)(active - 8) + 64);
LABEL_8:
  memcpy(v7, v8, v13);
LABEL_15:
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100354218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E663D0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(v4 + *(int *)(a3 + 24));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

void sub_1003542A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E663D0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5 + *(int *)(a4 + 20);
    _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 24)) = (v4 - 1);
  }
}

void sub_100354338()
{
  sub_10016314C();
  sub_10018B004(v4, v5, v6);
  type metadata accessor for MonthTemperatureStatistics();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100189DD0();
  uint64_t v9 = __chkstk_darwin(v8);
  sub_10017F024(v9, v10, v11, v12, v13, v14, v15, v16, v36);
  sub_10017DF08(&qword_100E65258);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_100162E88();
  sub_10017DF08(&qword_100E6ED48);
  sub_10018A360();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1001A0560();
  v20(v19);
  sub_1001246C8(&qword_100E6ED50, &qword_100E65258);
  sub_10019B444();
  sub_10018A270();
  sub_1001246C8(&qword_100E6ED58, &qword_100E65258);
  sub_100183994();
  sub_10019112C();
  if (v21)
  {
LABEL_8:
    sub_100178110(v3, &qword_100E6ED48);
    sub_1001D138C();
  }
  else
  {
    sub_100188FE0();
    while (1)
    {
      sub_100181ECC();
      uint64_t v22 = sub_100185248();
      v23(v22);
      uint64_t v24 = sub_100182EE0();
      v1(v24);
      uint64_t v25 = sub_1001859E8();
      v26(v25);
      sub_100179048();
      sub_100162F0C();
      v27();
      uint64_t v28 = sub_1001A3184();
      v0(v28);
      uint64_t v29 = sub_1001823D4();
      char v31 = v30(v29);
      uint64_t v1 = v2;
      if (v2)
      {
        sub_100162F0C();
        v34();
        sub_100178110(v3, &qword_100E6ED48);
        goto LABEL_12;
      }
      if (v31) {
        break;
      }
      sub_100162F0C();
      v32();
      sub_100183994();
      sub_10019112C();
      if (v21) {
        goto LABEL_8;
      }
    }
    sub_100178110(v3, &qword_100E6ED48);
    uint64_t v35 = sub_10019D508();
    v0(v35);
    uint64_t v33 = 0;
  }
  sub_10018A348(v3, v33);
LABEL_12:
  sub_1001194B0();
  sub_100163164();
}

void sub_100354594()
{
  sub_10016314C();
  sub_10018B004(v4, v5, v6);
  type metadata accessor for HourWeather();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100189DD0();
  __chkstk_darwin(v8);
  sub_10017F024(v9, v10, v11, v12, v13, v14, v15, v16, v36);
  sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_100162E88();
  sub_10017DF08(&qword_100E66CD0);
  sub_10018A360();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1001A0560();
  v20(v19);
  sub_1001246C8(&qword_100E66CD8, &qword_100E66CC8);
  sub_10019B444();
  sub_10018A270();
  sub_1001246C8((unint64_t *)&qword_100E66CE0, &qword_100E66CC8);
  sub_100183994();
  sub_10019112C();
  if (v21)
  {
LABEL_8:
    sub_100178110(v3, &qword_100E66CD0);
    sub_1001D138C();
  }
  else
  {
    sub_100188FE0();
    while (1)
    {
      sub_100181ECC();
      uint64_t v22 = sub_100185248();
      v23(v22);
      uint64_t v24 = sub_100182EE0();
      v1(v24);
      uint64_t v25 = sub_1001859E8();
      v26(v25);
      sub_100179048();
      sub_100162F0C();
      v27();
      uint64_t v28 = sub_1001A3184();
      v0(v28);
      uint64_t v29 = sub_1001823D4();
      char v31 = v30(v29);
      uint64_t v1 = v2;
      if (v2)
      {
        sub_100162F0C();
        v34();
        sub_100178110(v3, &qword_100E66CD0);
        goto LABEL_12;
      }
      if (v31) {
        break;
      }
      sub_100162F0C();
      v32();
      sub_100183994();
      sub_10019112C();
      if (v21) {
        goto LABEL_8;
      }
    }
    sub_100178110(v3, &qword_100E66CD0);
    uint64_t v35 = sub_10019D508();
    v0(v35);
    uint64_t v33 = 0;
  }
  sub_10018A348(v3, v33);
LABEL_12:
  sub_1001194B0();
  sub_100163164();
}

void sub_1003547F0()
{
  sub_10016314C();
  sub_10018B004(v4, v5, v6);
  type metadata accessor for MonthPrecipitationStatistics();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100189DD0();
  uint64_t v9 = __chkstk_darwin(v8);
  sub_10017F024(v9, v10, v11, v12, v13, v14, v15, v16, v36);
  sub_10017DF08(&qword_100E6B7D0);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_100162E88();
  sub_10017DF08(&qword_100E6ED30);
  sub_10018A360();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1001A0560();
  v20(v19);
  sub_1001246C8(&qword_100E6ED38, &qword_100E6B7D0);
  sub_10019B444();
  sub_10018A270();
  sub_1001246C8(&qword_100E6ED40, &qword_100E6B7D0);
  sub_100183994();
  sub_10019112C();
  if (v21)
  {
LABEL_8:
    sub_100178110(v3, &qword_100E6ED30);
    sub_1001D138C();
  }
  else
  {
    sub_100188FE0();
    while (1)
    {
      sub_100181ECC();
      uint64_t v22 = sub_100185248();
      v23(v22);
      uint64_t v24 = sub_100182EE0();
      v1(v24);
      uint64_t v25 = sub_1001859E8();
      v26(v25);
      sub_100179048();
      sub_100162F0C();
      v27();
      uint64_t v28 = sub_1001A3184();
      v0(v28);
      uint64_t v29 = sub_1001823D4();
      char v31 = v30(v29);
      uint64_t v1 = v2;
      if (v2)
      {
        sub_100162F0C();
        v34();
        sub_100178110(v3, &qword_100E6ED30);
        goto LABEL_12;
      }
      if (v31) {
        break;
      }
      sub_100162F0C();
      v32();
      sub_100183994();
      sub_10019112C();
      if (v21) {
        goto LABEL_8;
      }
    }
    sub_100178110(v3, &qword_100E6ED30);
    uint64_t v35 = sub_10019D508();
    v0(v35);
    uint64_t v33 = 0;
  }
  sub_10018A348(v3, v33);
LABEL_12:
  sub_1001194B0();
  sub_100163164();
}

void sub_100354A4C()
{
  sub_10016314C();
  uint64_t v4 = v3;
  uint64_t v29 = v5;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100109370();
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162F18();
  uint64_t v14 = *(void *)(v4 + 16);
  uint64_t v25 = v7;
  if (v14)
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    uint64_t v15 = v10 + 16;
    uint64_t v17 = v4 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v27 = v16;
    uint64_t v28 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    uint64_t v26 = *(void *)(v15 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v18 = v15;
      v27(v2, v17, v8);
      sub_10018A348(v2, 0);
      if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v8) == 1) {
        break;
      }
      uint64_t v19 = *v28;
      (*v28)(v1, v2, v8);
      char v20 = v29(v1);
      if (v0)
      {
        sub_100162F0C();
        v24();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      if (v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v23 = v25;
        v19(v25, v1, v8);
        uint64_t v22 = 0;
        goto LABEL_11;
      }
      sub_100162F0C();
      v21();
      v17 += v26;
      --v14;
      uint64_t v15 = v18;
      if (!v14) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    sub_10018A348(v2, 1);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = 1;
  uint64_t v23 = v25;
LABEL_11:
  sub_10018A348(v23, v22);
LABEL_12:
  sub_100163164();
}

uint64_t sub_100354C7C@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v5 = type metadata accessor for ExtremaResult();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(v2, (uint64_t)v11, &qword_100E6BCB0);
  uint64_t v12 = 1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v16(v8);
    if (v3) {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = 0;
  }
  uint64_t v14 = sub_10017DF08(&qword_100E6D0A8);
  return _s7Weather24LocationCompositionStateOwst_0(a2, v12, 1, v14);
}

void sub_100354E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(char *), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10016314C();
  a19 = v23;
  a20 = v24;
  a10 = v25;
  uint64_t v27 = v26;
  uint64_t v28 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100109370();
  sub_10006DF38(v20, v22, &qword_100E6D1D8);
  uint64_t v36 = 1;
  if (_s7Weather24LocationCompositionStateOwet_0(v22, 1, v28) == 1) {
    goto LABEL_5;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v33, v22, v28);
  a10(v33);
  if (!v21)
  {
    uint64_t v39 = sub_1001093BC();
    v40(v39);
    uint64_t v36 = 0;
LABEL_5:
    uint64_t v41 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v27, v36, 1, v41);
    goto LABEL_6;
  }
  uint64_t v37 = sub_1001093BC();
  v38(v37);
LABEL_6:
  sub_100163164();
}

__n128 *sub_100354FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int w4_0)
{
  int v393 = w4_0;
  uint64_t v388 = a4;
  uint64_t v422 = a3;
  uint64_t v401 = a2;
  uint64_t v425 = a1;
  uint64_t v6 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v391 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E66E40);
  uint64_t v421 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v10);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v11);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v12);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v13);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v14);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100109770();
  sub_100179C90();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v432._object - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v432._object - v24;
  __chkstk_darwin(v23);
  sub_100128F8C();
  uint64_t v424 = v26;
  uint64_t v27 = sub_10017DF08(&qword_100E66E28);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100179C90();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v432._object - v33;
  __chkstk_darwin(v32);
  sub_100128F8C();
  uint64_t v414 = v35;
  sub_100129064();
  uint64_t v36 = type metadata accessor for DetailComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v37);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v38);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v39);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v40);
  sub_100109770();
  uint64_t v417 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  sub_100128F8C();
  uint64_t v407 = v43;
  uint64_t v44 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_100179C0C();
  uint64_t v427 = v45;
  __chkstk_darwin(v46);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v47);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100179C90();
  __chkstk_darwin(v49);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v50);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v51);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v52);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v53);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v54);
  sub_100109770();
  uint64_t v423 = v55;
  sub_1001626D4();
  __chkstk_darwin(v56);
  sub_100109770();
  uint64_t v416 = v57;
  sub_1001626D4();
  __chkstk_darwin(v58);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v59);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v60);
  sub_100179C90();
  uint64_t v62 = __chkstk_darwin(v61);
  uint64_t v64 = (char *)&v432._object - v63;
  __chkstk_darwin(v62);
  sub_100109770();
  uint64_t v429 = v65;
  sub_1001626D4();
  uint64_t v67 = __chkstk_darwin(v66);
  unint64_t v69 = (char *)&v432._object - v68;
  __chkstk_darwin(v67);
  sub_100109770();
  uint64_t v415 = v70;
  sub_1001626D4();
  __chkstk_darwin(v71);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v72);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v73);
  sub_100128F8C();
  uint64_t v413 = v74;
  uint64_t v75 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v77 = v76;
  __chkstk_darwin(v78);
  sub_100125FF8();
  sub_100162808();
  v79();
  uint64_t v418 = v5;
  *(void *)&long long v419 = v77;
  uint64_t v81 = *(uint64_t (**)(uint64_t, uint64_t))(v77 + 88);
  uint64_t v80 = v77 + 88;
  uint64_t v420 = v75;
  int v82 = v81(v5, v75);
  v428 = v44;
  if (v82 == enum case for DetailCondition.conditions(_:))
  {
    uint64_t v83 = v424;
    sub_10035771C(v424);
    _s7Weather24LocationCompositionStateOwst_0(v83, 0, 1, (uint64_t)v44);
    sub_10006DF38(v422, (uint64_t)v34, &qword_100E66E28);
    sub_10012B520((uint64_t)v34, 1, v36);
    if (v84)
    {
      sub_100178110((uint64_t)v34, &qword_100E66E28);
      sub_10017DF08(&qword_100E6ECC0);
      char v85 = (__n128 *)sub_10017E214();
      sub_10019D168(v85, (__n128)xmmword_100C251B0);
      sub_10006DF38(v83, v75, &qword_100E66E40);
      sub_10006DF38(v75, v411, &qword_100E66E40);
      sub_100127AB8();
      sub_10024D364(v86, v87, &qword_100E66E40);
      sub_10012B520(v80, 1, (uint64_t)v44);
      if (v84)
      {
        sub_100178110(v80, &qword_100E66E40);
        uint64_t v116 = (__n128 *)_swiftEmptyArrayStorage;
      }
      else
      {
        sub_10035E22C(v80, (uint64_t)v64, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_100127AB8();
        sub_10035E22C(v144, v145, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        uint64_t v116 = (__n128 *)_swiftEmptyArrayStorage;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v116 = (__n128 *)sub_10017F368();
        }
        unint64_t v148 = v116[1].n128_u64[0];
        unint64_t v147 = v116[1].n128_u64[1];
        if (v148 >= v147 >> 1) {
          uint64_t v116 = (__n128 *)sub_1001649DC(v147);
        }
        v116[1].n128_u64[0] = v148 + 1;
        sub_10018A89C();
        sub_10035E22C(v80, v149 + v150 * v148, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      }
      swift_setDeallocating();
      sub_1006BB104();
      uint64_t v143 = v83;
    }
    else
    {
      uint64_t v99 = v417;
      sub_10035E22C((uint64_t)v34, v417, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
      id v100 = [self mainBundle];
      sub_1001631D8();
      sub_10017FAD0();
      v101._uint64_t countAndFlagsBits = 1937204558;
      v101._object = (void *)0xE400000000000000;
      Swift::String v105 = NSLocalizedString(_:tableName:bundle:value:comment:)(v102, v103, v104, v101, v432);

      uint64_t v106 = v415;
      uint64_t v107 = v415 + v44[6];
      uint64_t v108 = type metadata accessor for WeatherDescription();
      _s7Weather24LocationCompositionStateOwst_0(v107, 1, 1, v108);
      uint64_t v109 = v106 + v44[7];
      sub_10035E2B0(v99, v109, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
      uint64_t v110 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v106 + v44[8], 1, 1, v110);
      *(_OWORD *)uint64_t v106 = xmmword_100C251C0;
      *(unsigned char *)(v106 + 16) = 2;
      *(Swift::String *)(v106 + 24) = v105;
      *(unsigned char *)(v106 + v44[9]) = 0;
      *(unsigned char *)(v106 + v44[10]) = 0;
      sub_10017DF08(&qword_100E6ECC0);
      uint64_t v111 = *(void *)(v421 + 72);
      sub_100166B3C();
      uint64_t v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = xmmword_100C25ED0;
      uint64_t v426 = v112;
      uint64_t v113 = v112 + v109;
      sub_10035E2B0(v106, v112 + v109, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      _s7Weather24LocationCompositionStateOwst_0(v113, 0, 1, (uint64_t)v44);
      sub_10006DF38(v424, v113 + v111, &qword_100E66E40);
      char v114 = 0;
      uint64_t v115 = 0;
      uint64_t v116 = (__n128 *)_swiftEmptyArrayStorage;
      do
      {
        char v117 = v114;
        sub_10006DF38(v113 + v115 * v111, (uint64_t)v25, &qword_100E66E40);
        sub_10024D364((uint64_t)v25, (uint64_t)v22, &qword_100E66E40);
        sub_10012B520((uint64_t)v22, 1, (uint64_t)v44);
        if (v84)
        {
          sub_100178110((uint64_t)v22, &qword_100E66E40);
        }
        else
        {
          sub_10035E22C((uint64_t)v22, (uint64_t)v69, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
          sub_10035E22C((uint64_t)v69, v429, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
          char v118 = swift_isUniquelyReferenced_nonNull_native();
          if ((v118 & 1) == 0) {
            uint64_t v116 = (__n128 *)sub_10017F368();
          }
          unint64_t v120 = v116[1].n128_u64[0];
          unint64_t v119 = v116[1].n128_u64[1];
          if (v120 >= v119 >> 1) {
            uint64_t v116 = (__n128 *)sub_1001649DC(v119);
          }
          v116[1].n128_u64[0] = v120 + 1;
          sub_10018A89C();
          sub_10035E22C(v429, v121 + v122 * v120, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
          uint64_t v44 = v428;
        }
        char v114 = 1;
        uint64_t v115 = 1;
      }
      while ((v117 & 1) == 0);
      swift_setDeallocating();
      sub_1006BB104();
      sub_10035E304(v415, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10035E304(v417, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
      uint64_t v143 = v424;
    }
    sub_100178110(v143, &qword_100E66E40);
    sub_100162F0C();
    v151();
    return v116;
  }
  uint64_t v429 = v36;
  if (v82 == enum case for DetailCondition.humidity(_:))
  {
    uint64_t v88 = self;
    uint64_t v89 = (objc_class *)[v88 mainBundle];
    uint64_t v423 = 0x8000000100C9C290;
    v90.super.Class isa = v89;
    uint64_t v91 = sub_1001870EC(0xD000000000000017, 0x8000000100C9C270, 0, 0, v90);
    uint64_t v424 = v92;
    uint64_t v425 = v91;

    sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    unint64_t v93 = (void *)static NSNumberFormatter.percent.getter();
    sub_1001ABC4C(0, &qword_100E6ECC8);
    Class isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
    id v95 = [v93 stringFromNumber:isa];

    if (v95)
    {
      uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v98 = v97;
    }
    else
    {
      uint64_t v96 = 0;
      unint64_t v98 = 0xE000000000000000;
    }
    uint64_t v186 = v413;
    uint64_t v187 = (objc_class *)[v88 mainBundle];
    uint64_t v420 = 0xD000000000000057;
    sub_10017F38C();
    v188.super.Class isa = v187;
    sub_1001632F8(v189, v190, v191, v192, v188, v193, v194, v195);

    sub_10017DF08(&qword_100E64020);
    uint64_t v196 = sub_100182E98();
    long long v419 = xmmword_100C251B0;
    *(_OWORD *)(v196 + 16) = xmmword_100C251B0;
    *(void *)(v196 + 56) = &type metadata for String;
    unint64_t v197 = sub_10012B7C0();
    *(void *)(v196 + 64) = v197;
    *(void *)(v196 + 32) = v96;
    *(void *)(v196 + 40) = v98;
    swift_bridgeObjectRetain();
    uint64_t v198 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v421 = v199;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v200 = (objc_class *)[v88 mainBundle];
    v201.super.Class isa = v200;
    uint64_t v423 = sub_1001870EC(0x65442074756F6241, 0xEF746E696F502077, 0, 0, v201);
    uint64_t v418 = v202;

    id v203 = [v88 mainBundle];
    v431._object = (void *)0x8000000100C9C3B0;
    v204._object = (void *)0x8000000100C9C410;
    v204._uint64_t countAndFlagsBits = 0x100000000000012CLL;
    v205._uint64_t countAndFlagsBits = 0;
    v205._object = (void *)0xE000000000000000;
    v431._uint64_t countAndFlagsBits = v420;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v204, (Swift::String_optional)0, (NSBundle)v203, v205, v431);

    uint64_t v206 = sub_100182E98();
    *(_OWORD *)(v206 + 16) = v419;
    *(void *)(v206 + 56) = &type metadata for String;
    *(void *)(v206 + 64) = v197;
    *(void *)(v206 + 32) = v96;
    *(void *)(v206 + 40) = v98;
    uint64_t v207 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v209 = v208;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v210 = v428;
    uint64_t v211 = v186 + v428[6];
    uint64_t v212 = type metadata accessor for WeatherDescription();
    _s7Weather24LocationCompositionStateOwst_0(v211, 1, 1, v212);
    uint64_t v213 = (uint64_t *)(v186 + v210[7]);
    uint64_t v214 = v421;
    *uint64_t v213 = v198;
    v213[1] = v214;
    uint64_t v215 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v186 + v210[8], 1, 1, v215);
    *(_OWORD *)uint64_t v186 = xmmword_100C33BB0;
    *(unsigned char *)(v186 + 16) = 0;
    uint64_t v216 = v424;
    *(void *)(v186 + 24) = v425;
    *(void *)(v186 + 32) = v216;
    *(unsigned char *)(v186 + v210[9]) = 0;
    *(unsigned char *)(v186 + v210[10]) = 0;
    uint64_t v217 = v412;
    uint64_t v218 = sub_10019ADF8(v210[6]);
    _s7Weather24LocationCompositionStateOwst_0(v218, v219, v220, v212);
    uint64_t v221 = (uint64_t *)(v217 + v210[7]);
    *uint64_t v221 = v207;
    v221[1] = v209;
    swift_storeEnumTagMultiPayload();
    uint64_t v222 = sub_10019ADF8(v210[8]);
    _s7Weather24LocationCompositionStateOwst_0(v222, v223, v224, v215);
    *(_OWORD *)uint64_t v217 = xmmword_100C33BC0;
    *(unsigned char *)(v217 + 16) = 0;
    uint64_t v225 = v422;
    uint64_t v226 = v418;
    *(void *)(v217 + 24) = v423;
    *(void *)(v217 + 32) = v226;
    *(unsigned char *)(v217 + v210[9]) = 0;
    *(unsigned char *)(v217 + v210[10]) = 0;
    uint64_t v227 = v414;
    sub_10006DF38(v225, v414, &qword_100E66E28);
    sub_10012B520(v227, 1, v429);
    if (v84)
    {
      sub_100178110(v227, &qword_100E66E28);
      sub_10017DF08(&qword_100E6ECB8);
      uint64_t v228 = *(void *)(v427 + 72);
      unint64_t v229 = (*(unsigned __int8 *)(v427 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v427 + 80);
      uint64_t v116 = (__n128 *)swift_allocObject();
      sub_10018AED8(v116, (__n128)xmmword_100C25ED0);
      uint64_t v230 = sub_10012B950();
      sub_10035E2B0(v230, v231, v232);
      sub_10035E22C(v217, v229 + v228, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      uint64_t v142 = type metadata accessor for ConditionDetailPlatterViewModel;
      uint64_t v239 = v186;
    }
    else
    {
      uint64_t v233 = v407;
      sub_10035E22C(v227, v407, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
      uint64_t v234 = v410;
      uint64_t v235 = v426;
      sub_1003575A8(v233, v410);
      sub_10017DF08(&qword_100E6ECB8);
      uint64_t v116 = (__n128 *)sub_1001CA7F8();
      sub_10018AED8(v116, (__n128)xmmword_100C33BA0);
      sub_10035E2B0(v234, v235, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10035E2B0(v186, v235 + v209, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10035E2B0(v217, v235 + 2 * v209, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10035E304(v234, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10035E304(v233, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
      sub_10035E304(v217, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      uint64_t v239 = sub_10012B950();
    }
    goto LABEL_58;
  }
  if (v82 == enum case for DetailCondition.pressure(_:))
  {
    uint64_t v123 = self;
    uint64_t p_type = (uint64_t)&stru_100E5BFF0.type;
    uint64_t v125 = (objc_class *)[v123 mainBundle];
    sub_1001631D8();
    v126.super.Class isa = v125;
    uint64_t v127 = sub_1001870EC(0x72502074756F6241, 0xEE00657275737365, 0, 0, v126);
    uint64_t v129 = v128;

    id v130 = [v123 mainBundle];
    sub_1001631D8();
    sub_100164F9C(v131, v132, (uint64_t)"Significant, rapid changes in pressure are used to predict changes in the weather. For example, a drop in pressure can mean that rain or snow is on the way, and rising pressure can mean that weather will improve. Pressure is also called barometric pressure or atmospheric pressure.");
    sub_10019DE4C();
LABEL_22:
    uint64_t v133 = DetailCondition.rawValue.getter();
    uint64_t v135 = v134;
    unint64_t v136 = v44;
    uint64_t v137 = v409;
    uint64_t v138 = v409 + v44[6];
    uint64_t v139 = type metadata accessor for WeatherDescription();
    _s7Weather24LocationCompositionStateOwst_0(v138, 1, 1, v139);
    uint64_t v140 = (objc_class **)(v137 + v136[7]);
    *uint64_t v140 = v125;
    v140[1] = (objc_class *)p_type;
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    swift_storeEnumTagMultiPayload();
    sub_10012B5A0(v137 + v136[8]);
    *(void *)uint64_t v137 = v133;
    *(void *)(v137 + 8) = v135;
    *(unsigned char *)(v137 + 16) = 0;
    *(void *)(v137 + 24) = v127;
    *(void *)(v137 + 32) = v129;
    *(unsigned char *)(v137 + v136[9]) = 0;
    *(unsigned char *)(v137 + v136[10]) = 0;
    uint64_t v141 = v408;
    sub_10006DF38(v422, v408, &qword_100E66E28);
    sub_10012B520(v141, 1, v429);
    if (v84)
    {
      sub_100178110(v141, &qword_100E66E28);
      sub_10017DF08(&qword_100E6ECB8);
      uint64_t v116 = (__n128 *)sub_10017E214();
      v116[1] = (__n128)xmmword_100C251B0;
      sub_10035E2B0(v137, (uint64_t)v116 + v141, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      uint64_t v142 = type metadata accessor for ConditionDetailPlatterViewModel;
      uint64_t v239 = v137;
LABEL_58:
      sub_10035E304(v239, (void (*)(void))v142);
      return v116;
    }
    uint64_t v236 = v405;
    sub_10035E22C(v141, v405, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v237 = v410;
    sub_1003575A8(v236, v410);
    sub_10017DF08(&qword_100E6ECB8);
    uint64_t v238 = *(void *)(v427 + 72);
    sub_100166B3C();
    uint64_t v116 = (__n128 *)swift_allocObject();
    sub_10019D168(v116, (__n128)xmmword_100C25ED0);
    sub_10035E2B0(v237, v141, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10035E2B0(v137, v141 + v238, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10035E304(v237, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10035E304(v236, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v239 = v137;
LABEL_57:
    uint64_t v142 = type metadata accessor for ConditionDetailPlatterViewModel;
    goto LABEL_58;
  }
  if (v82 == enum case for DetailCondition.precipitationTotal(_:))
  {
    uint64_t v152 = self;
    uint64_t v153 = (objc_class *)[v152 mainBundle];
    sub_1001631D8();
    uint64_t v154 = sub_10012B950();
    v155.super.Class isa = v153;
    uint64_t v160 = sub_1001632F8(v154, v156, 0, 0, v155, v157, v158, v159);
    uint64_t v162 = v161;

    uint64_t v163 = v428;
    uint64_t v164 = v406;
    uint64_t v165 = v406 + v428[6];
    uint64_t v166 = type metadata accessor for WeatherDescription();
    _s7Weather24LocationCompositionStateOwst_0(v165, 1, 1, v166);
    uint64_t v167 = (uint64_t *)(v164 + v163[7]);
    uint64_t v168 = (objc_class *)[v152 mainBundle];
    sub_1001631D8();
    sub_10017F38C();
    v169.super.Class isa = v168;
    uint64_t v177 = sub_1001632F8(v170, v171, v172, v173, v169, v174, v175, v176);
    uint64_t v179 = v178;

    *uint64_t v167 = v177;
    v167[1] = v179;
    uint64_t v180 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v164 + v163[8], 1, 1, v180);
    *(void *)uint64_t v164 = 0xD00000000000001DLL;
    *(void *)(v164 + 8) = 0x8000000100C9B240;
    *(unsigned char *)(v164 + 16) = 0;
    *(void *)(v164 + 24) = v160;
    *(void *)(v164 + 32) = v162;
    *(unsigned char *)(v164 + v163[9]) = 0;
    *(unsigned char *)(v164 + v163[10]) = 0;
    uint64_t v181 = v402;
    sub_10006DF38(v422, v402, &qword_100E66E28);
    sub_10012B520(v181, 1, v429);
    if (v84)
    {
      sub_100178110(v181, &qword_100E66E28);
      sub_10017DF08(&qword_100E6ECC0);
      uint64_t v182 = (__n128 *)sub_10017E214();
      sub_10019D168(v182, (__n128)xmmword_100C251B0);
      sub_10035E2B0(v164, v181, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10011C018(v181);
      uint64_t v183 = v181;
      uint64_t v184 = v397;
      sub_10006DF38(v183, v397, &qword_100E66E40);
      uint64_t v185 = v398;
      sub_10024D364(v184, v398, &qword_100E66E40);
      sub_10012B520(v185, 1, (uint64_t)v163);
      if (v84)
      {
        sub_100178110(v185, &qword_100E66E40);
        uint64_t v116 = (__n128 *)_swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v279 = v392;
        sub_10035E22C(v185, v392, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        uint64_t v280 = v394;
        sub_10035E22C(v279, v394, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        uint64_t v116 = (__n128 *)_swiftEmptyArrayStorage;
        char v281 = swift_isUniquelyReferenced_nonNull_native();
        if ((v281 & 1) == 0) {
          uint64_t v116 = (__n128 *)sub_10017F368();
        }
        unint64_t v283 = v116[1].n128_u64[0];
        unint64_t v282 = v116[1].n128_u64[1];
        if (v283 >= v282 >> 1) {
          uint64_t v116 = (__n128 *)sub_1001649DC(v282);
        }
        v116[1].n128_u64[0] = v283 + 1;
        sub_10018A89C();
        sub_10035E22C(v280, v284 + v285 * v283, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      }
      swift_setDeallocating();
      sub_1006BB104();
      uint64_t v142 = type metadata accessor for ConditionDetailPlatterViewModel;
      uint64_t v239 = v164;
      goto LABEL_58;
    }
    uint64_t v253 = v181;
    uint64_t v254 = v404;
    sub_10035E22C(v253, v404, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v255 = v403;
    sub_1003575A8(v254, v403);
    sub_10017DF08(&qword_100E6ECC0);
    uint64_t v256 = *(void *)(v421 + 72);
    sub_100166B3C();
    v257 = (__n128 *)swift_allocObject();
    sub_10019D168(v257, (__n128)xmmword_100C25ED0);
    sub_10035E2B0(v255, v254, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10011C018(v254);
    sub_10035E2B0(v164, v254 + v256, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10011C018(v254 + v256);
    char v258 = 0;
    uint64_t v259 = 0;
    uint64_t v116 = (__n128 *)_swiftEmptyArrayStorage;
    uint64_t v260 = v400;
    uint64_t v261 = v399;
    do
    {
      char v262 = v258;
      sub_10006DF38(v254 + v259 * v256, v261, &qword_100E66E40);
      sub_10024D364(v261, v260, &qword_100E66E40);
      sub_10012B520(v260, 1, (uint64_t)v428);
      if (v84)
      {
        sub_100178110(v260, &qword_100E66E40);
      }
      else
      {
        uint64_t v263 = v416;
        sub_10035E22C(v260, v416, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10035E22C(v263, v423, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        char v264 = swift_isUniquelyReferenced_nonNull_native();
        if ((v264 & 1) == 0) {
          uint64_t v116 = (__n128 *)sub_10017F368();
        }
        unint64_t v266 = v116[1].n128_u64[0];
        unint64_t v265 = v116[1].n128_u64[1];
        if (v266 >= v265 >> 1) {
          uint64_t v116 = (__n128 *)sub_1007E9A64(v265 > 1, v266 + 1, 1, (uint64_t)v116);
        }
        v116[1].n128_u64[0] = v266 + 1;
        sub_10018A89C();
        sub_10035E22C(v423, v267 + v268 * v266, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      }
      char v258 = 1;
      uint64_t v259 = 1;
    }
    while ((v262 & 1) == 0);
    swift_setDeallocating();
    sub_1006BB104();
    sub_10035E304(v403, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10035E304(v404, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v239 = v406;
    goto LABEL_57;
  }
  if (v82 == enum case for DetailCondition.uvIndex(_:))
  {
    int v240 = self;
    uint64_t v241 = (objc_class *)[v240 mainBundle];
    sub_1001631D8();
    sub_10017F38C();
    v242.super.Class isa = v241;
    uint64_t v127 = sub_1001870EC(v243, v244, v245, v246, v242);
    uint64_t v129 = v247;

    id v248 = [v240 mainBundle];
    sub_1001631D8();
    sub_100164F9C(v249, v250, (uint64_t)"The World Health Organization’s UV index (UVI) measures ultraviolet radiation. The higher the UVI, the greater the potential for damage, and the faster harm can occur. The UVI can help you decide when to protect yourself from the sun and when to avoid being outside. The WHO recommends using shade, sunscreen, hats, and protective clothing at levels of %d (Moderate) or higher.");

    sub_10017DF08(&qword_100E64020);
    uint64_t v251 = sub_100182E98();
    *(_OWORD *)(v251 + 16) = xmmword_100C251B0;
    *(void *)(v251 + 56) = &type metadata for Int;
    *(void *)(v251 + 64) = &protocol witness table for Int;
    *(void *)(v251 + 32) = 3;
    uint64_t v125 = (objc_class *)static String.localizedStringWithFormat(_:_:)();
    uint64_t p_type = v252;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v428;
    goto LABEL_22;
  }
  if (v82 == enum case for DetailCondition.visibility(_:))
  {
    uint64_t v125 = (objc_class *)self;
    id v269 = [(objc_class *)v125 mainBundle];
    sub_1001631D8();
    uint64_t v127 = sub_100164F9C(v270, v271, (uint64_t)"About Visibility");
    uint64_t v129 = v272;

    v273 = (void *)ConditionUnits.visibility.getter();
    uint64_t p_type = NSUnitLength.isMetricVisibility.getter();

    id v274 = [(objc_class *)v125 mainBundle];
    sub_1001631D8();
    if (p_type) {
      v277 = "Visibility tells you how far away you can clearly see objects like buildings and hills. It is a measure of "
    }
             "the transparency of the air and does not take into account the amount of sunlight or the presence of obstru"
             "ctions. Visibility at or above 10 km is considered clear.";
    else {
      v277 = "Visibility tells you how far away you can clearly see objects like buildings and hills. It is a measure of "
    }
             "the transparency of the air and does not take into account the amount of sunlight or the presence of obstru"
             "ctions. Visibility at or above 10 km (6 mi) is considered clear.";
    sub_100164F9C(v275, v276, (uint64_t)v277);
    sub_10019DE4C();
    uint64_t v44 = v428;
    goto LABEL_22;
  }
  v286 = v428;
  if (v82 == enum case for DetailCondition.wind(_:))
  {
    if ((v393 & 1) == 0) {
      return (__n128 *)_swiftEmptyArrayStorage;
    }
    v287 = self;
    id v288 = [v287 mainBundle];
    sub_1001631D8();
    uint64_t v295 = sub_100163324(0x74726F6675616542, 0xEE00656C61635320, v289, v290, v291, v292, v293, v294);
    uint64_t v423 = v296;
    uint64_t v424 = v295;

    id v297 = [v287 mainBundle];
    sub_1001631D8();
    uint64_t v300 = sub_100164F9C(v298, v299, (uint64_t)"About Wind Speed and Gusts");
    uint64_t v302 = v301;

    id v303 = [v287 mainBundle];
    sub_1001631D8();
    sub_100164F9C(v304, v305, (uint64_t)"The wind speed is calculated using the average over a short period of time. Gusts are short bursts of wind above this average. A gust typically lasts under %d seconds.");
    sub_10019DE4C();
    sub_10017DF08(&qword_100E64020);
    uint64_t v306 = sub_100182E98();
    *(_OWORD *)(v306 + 16) = xmmword_100C251B0;
    *(void *)(v306 + 56) = &type metadata for Int;
    *(void *)(v306 + 64) = &protocol witness table for Int;
    *(void *)(v306 + 32) = 20;
    uint64_t v307 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v309 = v308;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v310 = DetailCondition.rawValue.getter();
    uint64_t v312 = v311;
    uint64_t v313 = v396;
    uint64_t v314 = v396 + v286[6];
    uint64_t v315 = type metadata accessor for WeatherDescription();
    _s7Weather24LocationCompositionStateOwst_0(v314, 1, 1, v315);
    v316 = (uint64_t *)(v313 + v428[7]);
    uint64_t *v316 = v307;
    v316[1] = v309;
    uint64_t v317 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v318 = sub_10012B5A0(v313 + v428[8]);
    *(void *)uint64_t v313 = v310;
    *(void *)(v313 + 8) = v312;
    *(unsigned char *)(v313 + 16) = 0;
    *(void *)(v313 + 24) = v300;
    *(void *)(v313 + 32) = v302;
    *(unsigned char *)(v313 + v428[9]) = 0;
    *(unsigned char *)(v313 + v428[10]) = 0;
    __chkstk_darwin(v318);
    uint64_t v384 = v401;
    uint64_t v319 = v391;
    sub_100354C7C((void (*)(char *))sub_10035E0A4, v391);
    uint64_t v320 = sub_100357960(v319);
    uint64_t v322 = v321;
    uint64_t v324 = v323;
    uint64_t v325 = v395;
    uint64_t v326 = v395 + v428[6];
    uint64_t v425 = v315;
    _s7Weather24LocationCompositionStateOwst_0(v326, 1, 1, v315);
    v327 = (uint64_t *)(v325 + v428[7]);
    uint64_t *v327 = v320;
    v327[1] = v322;
    v327[2] = v324;
    type metadata accessor for ConditionDetailDynamicContentIdentifier();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_10012B5A0(v325 + v428[8]);
    *(void *)uint64_t v325 = 0xD000000000000011;
    *(void *)(v325 + 8) = 0x8000000100C9B9C0;
    *(unsigned char *)(v325 + 16) = 1;
    uint64_t v328 = v423;
    *(void *)(v325 + 24) = v424;
    *(void *)(v325 + 32) = v328;
    *(unsigned char *)(v325 + v428[9]) = 1;
    v329 = v428;
    *(unsigned char *)(v325 + v428[10]) = 0;
    sub_100127AB8();
    sub_10006DF38(v330, v331, v332);
    sub_10012B520(v322, 1, v429);
    if (v84)
    {
      sub_100178110(v322, &qword_100E66E28);
      uint64_t v335 = 1;
      uint64_t v336 = v390;
      uint64_t v334 = v389;
    }
    else
    {
      uint64_t v333 = v384;
      sub_10035E22C(v322, v384, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
      uint64_t v334 = v389;
      sub_1003575A8(v333, v389);
      sub_10035E304(v333, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
      uint64_t v335 = 0;
      uint64_t v336 = v390;
    }
    _s7Weather24LocationCompositionStateOwst_0(v334, v335, 1, (uint64_t)v329);
    sub_10024D364(v334, v336, &qword_100E66E40);
    v337 = (void *)ConditionUnits.windSpeed.getter();
    char v338 = NSUnitSpeed.isBeaufort.getter();

    if (v338)
    {
      uint64_t v339 = v385;
      sub_10006DF38(v336, v385, &qword_100E66E40);
      sub_10012B520(v339, 1, (uint64_t)v329);
      if (!v84)
      {
        object = v432._object;
        sub_10035E22C(v339, (uint64_t)v432._object, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10017DF08(&qword_100E6ECB8);
        uint64_t v375 = *(void *)(v427 + 72);
        sub_100166B3C();
        uint64_t v116 = (__n128 *)swift_allocObject();
        sub_10019D168(v116, (__n128)xmmword_100C33BA0);
        uint64_t v376 = v396;
        sub_10035E2B0(v396, (uint64_t)v287, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10035E2B0((uint64_t)object, (uint64_t)v287 + v375, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        uint64_t v377 = (uint64_t)v287 + 2 * v375;
        uint64_t v378 = v395;
        sub_10035E2B0(v395, v377, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10035E304((uint64_t)object, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_100178110(v336, &qword_100E66E40);
        uint64_t v379 = v378;
LABEL_82:
        sub_10035E304(v379, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_100178110(v319, &qword_100E6ECB0);
        uint64_t v239 = v376;
        goto LABEL_57;
      }
      sub_100178110(v339, &qword_100E66E40);
      sub_10017DF08(&qword_100E6ECB8);
      uint64_t v340 = *(void *)(v427 + 72);
      unint64_t v341 = (*(unsigned __int8 *)(v427 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v427 + 80);
      uint64_t v116 = (__n128 *)swift_allocObject();
      sub_10018AED8(v116, (__n128)xmmword_100C25ED0);
      uint64_t v342 = v396;
      sub_10035E2B0(v396, v341, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      uint64_t v343 = v341 + v340;
      uint64_t v344 = v395;
      sub_10035E2B0(v395, v343, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_100178110(v336, &qword_100E66E40);
      uint64_t v345 = v344;
    }
    else
    {
      v346 = (objc_class *)[v287 mainBundle];
      sub_1001631D8();
      sub_10017F38C();
      v347.super.Class isa = v346;
      uint64_t v355 = sub_1001632F8(v348, v349, v350, v351, v347, v352, v353, v354);
      uint64_t v357 = v356;

      id v358 = [v287 mainBundle];
      sub_1001631D8();
      sub_10017FAD0();
      uint64_t v366 = sub_1001632F8(v359, v360, v361, v362, v430, v363, v364, v365);
      v367 = v329;
      uint64_t v369 = v368;

      uint64_t v370 = v386;
      _s7Weather24LocationCompositionStateOwst_0(v386 + v367[6], 1, 1, v425);
      v371 = (uint64_t *)(v370 + v367[7]);
      uint64_t *v371 = v366;
      v371[1] = v369;
      swift_storeEnumTagMultiPayload();
      sub_10012B5A0(v370 + v367[8]);
      *(void *)uint64_t v370 = 0xD000000000000012;
      *(void *)(v370 + 8) = 0x8000000100C9BB90;
      *(unsigned char *)(v370 + 16) = 0;
      *(void *)(v370 + 24) = v355;
      *(void *)(v370 + 32) = v357;
      *(unsigned char *)(v370 + v367[9]) = 0;
      *(unsigned char *)(v370 + v367[10]) = 0;
      uint64_t v372 = v387;
      sub_10006DF38(v336, v387, &qword_100E66E40);
      sub_10012B520(v372, 1, (uint64_t)v367);
      if (!v84)
      {
        uint64_t v380 = v383;
        sub_10035E22C(v372, v383, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10017DF08(&qword_100E6ECB8);
        uint64_t v381 = *(void *)(v427 + 72);
        sub_100166B3C();
        uint64_t v116 = (__n128 *)swift_allocObject();
        sub_10019D168(v116, (__n128)xmmword_100C31870);
        uint64_t v376 = v396;
        sub_10035E2B0(v396, v370, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10035E2B0(v380, v370 + v381, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        uint64_t v382 = v395;
        sub_10035E2B0(v395, v370 + 2 * v381, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10035E2B0(v370, v370 + 3 * v381, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10035E304(v380, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_10035E304(v370, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_100178110(v336, &qword_100E66E40);
        uint64_t v379 = v382;
        goto LABEL_82;
      }
      sub_100178110(v372, &qword_100E66E40);
      sub_10017DF08(&qword_100E6ECB8);
      uint64_t v116 = (__n128 *)sub_1001CA7F8();
      sub_10018AED8(v116, (__n128)xmmword_100C33BA0);
      uint64_t v342 = v396;
      sub_10035E2B0(v396, v372, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      uint64_t v373 = v395;
      sub_10035E2B0(v395, v372 + v317, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10035E22C(v370, v372 + 2 * v317, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_100178110(v336, &qword_100E66E40);
      uint64_t v345 = v373;
    }
    sub_10035E304(v345, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100178110(v319, &qword_100E6ECB0);
    uint64_t v239 = v342;
    goto LABEL_57;
  }
  unint64_t result = (__n128 *)_diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

double sub_1003575A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [self mainBundle];
  v13._uint64_t countAndFlagsBits = 0xD000000000000021;
  v13._object = (void *)0x8000000100C9C0C0;
  v5._object = (void *)0x8000000100C9C0A0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000014;
  v6._uint64_t countAndFlagsBits = 1937204558;
  v6._object = (void *)0xE400000000000000;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v13);

  uint64_t v8 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v9 = a2 + v8[6];
  uint64_t v10 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v9, 1, 1, v10);
  sub_10035E2B0(a1, a2 + v8[7], (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
  uint64_t v11 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(a2 + v8[8], 1, 1, v11);
  *(void *)&double result = 1;
  *(_OWORD *)a2 = xmmword_100C251C0;
  *(unsigned char *)(a2 + 16) = 2;
  *(Swift::String *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + v8[9]) = 0;
  *(unsigned char *)(a2 + v8[10]) = 0;
  return result;
}

uint64_t sub_10035771C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v17._uint64_t countAndFlagsBits = 0xD000000000000052;
  v17._object = (void *)0x8000000100C9C560;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v4._object = (void *)0x8000000100C9C540;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v17);

  Swift::String v7 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v8 = a1 + v7[6];
  uint64_t v9 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v9);
  uint64_t v10 = (Swift::String *)(a1 + v7[7]);
  id v11 = [v2 mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
  v12._uint64_t countAndFlagsBits = 0xD0000000000000A6;
  v18._object = (void *)0x8000000100C9C670;
  v12._object = (void *)0x8000000100C9C5C0;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v18);

  *uint64_t v10 = v14;
  uint64_t v15 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(a1 + v7[8], 1, 1, v15);
  *(void *)a1 = 0xD00000000000001CLL;
  *(void *)(a1 + 8) = 0x8000000100C9C540;
  *(unsigned char *)(a1 + 16) = 0;
  *(Swift::String *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + v7[9]) = 0;
  *(unsigned char *)(a1 + v7[10]) = 0;
  return result;
}

uint64_t sub_1003578E0()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_100357960(uint64_t a1)
{
  uint64_t v72 = a1;
  uint64_t v62 = type metadata accessor for Beaufort.Category();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10017DF08(&qword_100E6ECB0);
  __chkstk_darwin(v2 - 8);
  *(void *)&long long v65 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = (void *)v4;
  __chkstk_darwin(v4);
  unint64_t v69 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NSUnitSpeed.WeatherFormatUsage();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v67 = v13;
  uint64_t v68 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E6D0A8);
  uint64_t v66 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v59 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v59 - v20;
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v22 = (void *)UnitManager.windGust.getter();
  swift_release();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
  id v23 = v22;
  uint64_t v24 = v65;
  id v73 = v23;
  Measurement.init(value:unit:)();
  static Set<>.unit.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for NSUnitSpeed.WeatherFormatUsage.windGust(_:), v9);
  uint64_t v25 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v25);
  static WeatherFormatStyle<>.weather(_:usage:locale:)();
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v8, &qword_100E63730);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v27 = v69;
  uint64_t v26 = v70;
  uint64_t v28 = v71;
  (*(void (**)(char *, void, void *))(v70 + 104))(v69, enum case for WeatherFormatPlaceholder.none(_:), v71);
  static UnitManager.standard.getter();
  sub_10035E1E4(&qword_100E6ECD0, (void (*)(uint64_t))&type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
  uint64_t v29 = v67;
  uint64_t v30 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v31 = v66;
  uint64_t v64 = v30;
  uint64_t v63 = v32;
  swift_release();
  (*(void (**)(char *, void *))(v26 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v16, v29);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v31 + 8);
  v33(v21, v17);
  sub_10006DF38(v72, v24, &qword_100E6ECB0);
  if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v17) == 1)
  {
    sub_100178110(v24, &qword_100E6ECB0);
  }
  else
  {
    uint64_t v34 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v59, v24, v17);
    uint64_t v35 = v60;
    Measurement<>.beaufortCategory(useExtendedScale:)();
    uint64_t v36 = Beaufort.Category.level.getter();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v62);
    uint64_t v37 = static Beaufort.maxLevel.getter();
    v33(v34, v17);
    if (v37 < v36)
    {
      LODWORD(v72) = 1;
      uint64_t result = static Beaufort.maxExtendedLevel.getter();
      uint64_t v39 = result;
      goto LABEL_6;
    }
  }
  uint64_t result = static Beaufort.maxLevel.getter();
  uint64_t v39 = result;
  LODWORD(v72) = 0;
LABEL_6:
  if (v39 < 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v40 = v39 + 1;
  if (!__OFADD__(v39, 1))
  {
    char v84 = _swiftEmptyArrayStorage;
    uint64_t result = (uint64_t)sub_1007F3574(0, v40 & ~(v40 >> 63), 0);
    if (v40 < 0) {
      goto LABEL_23;
    }
    uint64_t v41 = 0;
    BOOL v42 = 0;
    uint64_t v43 = -1;
    uint64_t v44 = v84;
    while (v39 != v43)
    {
      if (v42) {
        goto LABEL_24;
      }
      uint64_t v74 = v41;
      uint64_t result = sub_10035DC64(&v75);
      uint64_t countAndFlagsBits = v75._countAndFlagsBits;
      object = v75._object;
      uint64_t v48 = v76;
      uint64_t v47 = v77;
      uint64_t v49 = v78;
      uint64_t v50 = v79;
      uint64_t v51 = v80;
      uint64_t v52 = v81;
      unint64_t v54 = v44[2];
      unint64_t v53 = v44[3];
      uint64_t v55 = v82;
      long long v56 = v83;
      char v84 = v44;
      if (v54 >= v53 >> 1)
      {
        uint64_t v70 = v77;
        uint64_t v71 = v75._object;
        uint64_t v68 = v79;
        unint64_t v69 = v78;
        uint64_t v67 = v80;
        uint64_t v66 = v81;
        long long v65 = v83;
        uint64_t result = (uint64_t)sub_1007F3574((char *)(v53 > 1), v54 + 1, 1);
        long long v56 = v65;
        uint64_t v52 = v66;
        uint64_t v51 = v67;
        uint64_t v50 = v68;
        uint64_t v49 = v69;
        uint64_t v47 = v70;
        object = v71;
        uint64_t v44 = v84;
      }
      void v44[2] = v54 + 1;
      uint64_t v57 = &v44[11 * v54];
      v57[4] = countAndFlagsBits;
      v57[5] = object;
      v57[6] = v48;
      v57[7] = v47;
      v57[8] = v49;
      v57[9] = v50;
      v57[10] = v51;
      v57[11] = v52;
      v57[12] = v55;
      *(_OWORD *)(v57 + 13) = v56;
      BOOL v42 = v41 == v39;
      if (v41 == v39)
      {
        uint64_t v41 = 0;
      }
      else if (__OFADD__(v41++, 1))
      {
        goto LABEL_20;
      }
      if (v39 == ++v43)
      {

        return v64;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100358138(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v276 = a4;
  uint64_t v269 = a3;
  uint64_t v272 = a2;
  uint64_t v265 = type metadata accessor for ConditionDetailMapViewModel();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v267 = v9;
  uint64_t v278 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_100179C0C();
  uint64_t v281 = v10;
  __chkstk_darwin(v11);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v12);
  sub_100128F8C();
  uint64_t v270 = v13;
  sub_100129064();
  uint64_t v279 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v275 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v274 = v16;
  type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v295 = v18;
  uint64_t v296 = v17;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v294 = v19;
  sub_100129064();
  uint64_t v282 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v283 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v308 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v293 = v25;
  uint64_t v26 = sub_100129064();
  v313._object = (void *)type metadata accessor for WeatherData(v26);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v300 = v28;
  uint64_t v310 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v301 = v29;
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v309 = v31;
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v302 = v32;
  uint64_t v303 = v33;
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v311 = v34;
  sub_100129064();
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v304 = v35;
  uint64_t v305 = v36;
  __chkstk_darwin(v35);
  sub_100109314();
  uint64_t v312 = v37;
  sub_100129064();
  type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v306 = v38;
  uint64_t v307 = v39;
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)v264 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v285 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v286 = v42;
  __chkstk_darwin(v43);
  sub_100125FF8();
  uint64_t v44 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v46 = v45;
  __chkstk_darwin(v47);
  sub_100162F18();
  uint64_t v48 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v50 = v49;
  __chkstk_darwin(v51);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v52);
  unint64_t v53 = (int *)sub_10019B874();
  uint64_t v54 = (uint64_t)a1 + v53[10];
  uint64_t v289 = v50;
  uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
  uint64_t v298 = v4;
  uint64_t v288 = v48;
  uint64_t v268 = v55;
  v55(v4, v54, v48);
  uint64_t v287 = v46;
  uint64_t v56 = v46 + 16;
  uint64_t v57 = *(void *)(v46 + 16);
  uint64_t v290 = v6;
  uint64_t v58 = v293;
  uint64_t v291 = v44;
  v264[1] = v56;
  v264[0] = v57;
  sub_100162808();
  v59();
  Location.timeZone.getter();
  id v297 = v41;
  sub_100162808();
  v60();
  sub_100162808();
  v61();
  sub_100162808();
  v62();
  sub_100162808();
  v63();
  sub_10035E2B0((uint64_t)a1 + v53[18], v300, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v64 = a1;
  sub_10006DF38((uint64_t)a1 + v53[22], v58, &qword_100E6D1C8);
  uint64_t v299 = v5;
  static Calendar.currentCalendar(with:)();
  long long v65 = self;
  id v66 = [v65 mainBundle];
  sub_1001631D8();
  uint64_t countAndFlagsBits = sub_100163324(0x755320796C696144, 0xED00007972616D6DLL, v67, v68, v69, v70, v71, v72);
  uint64_t v74 = v73;

  uint64_t v75 = swift_allocObject();
  *(unsigned char *)(v75 + 16) = 2;
  uint64_t v76 = swift_allocObject();
  *(unsigned char *)(v76 + 16) = 2;
  uint64_t v77 = v64;
  uint64_t v79 = v294;
  uint64_t v78 = v295;
  uint64_t v80 = v296;
  sub_100162808();
  v83(v81, v82);
  int v84 = (*(uint64_t (**)(uint64_t, void *))(v78 + 88))(v79, v80);
  uint64_t v284 = v76;
  if (v84 == enum case for DetailCondition.conditions(_:))
  {
    char v85 = sub_1001523D0();
    uint64_t v273 = v75;
    if (v85)
    {
      swift_bridgeObjectRelease();
      id v86 = [v65 mainBundle:v313._object, v265];
      sub_1001631D8();
      v87._uint64_t countAndFlagsBits = 0x7473616365726F46;
      v87._object = (void *)0xE800000000000000;
      v88._uint64_t countAndFlagsBits = 0;
      v88._object = (void *)0xE000000000000000;
      v313._uint64_t countAndFlagsBits = 0xD000000000000035;
      Swift::String v89 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, (Swift::String_optional)0, (NSBundle)v86, v88, v313);
      uint64_t countAndFlagsBits = v89._countAndFlagsBits;
      object = v89._object;

      NSBundle v90 = (char *)v280[5];
      uint64_t v91 = v280[6];
      sub_100183470(v280 + 2);
      v313._object = v90;
      uint64_t v265 = v91;
      sub_10035E358();
      uint64_t v92 = v58;
      dispatch thunk of ConditionsPlatterStringBuilderType.makeForecastPlatterWeatherDescription(from:timeZone:dayWeather:currentWeather:hourlyForecast:dailyForecast:weatherChanges:units:)();
    }
    else
    {
      long long v65 = v77;
      NSBundle v90 = (char *)v280[5];
      sub_100183470(v280 + 2);
      sub_1003599B4(v76);
      sub_10035E358();
      dispatch thunk of ConditionsPlatterStringBuilderType.makeDailySummaryPlatterWeatherDescription(from:timeZone:hourlyForecast:dayWeather:isYesterday:units:)();
      uint64_t v92 = v58;
      object = v74;
    }
    sub_10017DF08(&qword_100E6ECB8);
    uint64_t v94 = sub_10017E214();
    *(_OWORD *)(v94 + 16) = xmmword_100C251B0;
    Swift::String v105 = &v90[v94];
    uint64_t v106 = (int *)v278;
    uint64_t v107 = v279;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)&v90[v94 + *(int *)(v278 + 24)], 1, 1, v279);
    uint64_t v108 = v275;
    sub_100162808();
    v109();
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    sub_10012B950();
    swift_storeEnumTagMultiPayload();
    sub_1001A1588(v106[8]);
    v105[v106[9]] = 0;
    v105[v106[10]] = 0;
    (*(void (**)(void *, uint64_t))(v108 + 8))(v65, v107);
    sub_100162F0C();
    v110();
    sub_100178110(v92, &qword_100E6D1C8);
    sub_10035E304(v300, (void (*)(void))type metadata accessor for WeatherData);
    sub_100162F0C();
    v111();
    sub_100162F0C();
    v112();
    sub_100162F0C();
    v113();
    sub_100162F0C();
    v114();
    sub_100162F0C();
    v115();
    sub_100162F0C();
    v116();
    sub_100188D3C();
    sub_100162F0C();
    v117();
    (*(void (**)(uint64_t, void *))(v295 + 8))(v294, v296);
    goto LABEL_35;
  }
  object = v74;
  if (v84 == enum case for DetailCondition.humidity(_:))
  {
    sub_1001D4040();
    sub_1001B1E64((void *)(v93 + 136), *(void *)(v93 + 160));
    Forecast.forecast.getter();
    dispatch thunk of HumidityPlatterStringBuilderType.makeL2SummaryString(hourlyForecast:dayWeather:date:calendar:timeZone:units:)();
    sub_1001849A8();
    swift_bridgeObjectRelease();
    sub_10017DF08(&qword_100E6ECB8);
    uint64_t v94 = sub_100184978();
    sub_1001628C0((__n128 *)v94, (__n128)xmmword_100C251B0);
    sub_100176D30();
    sub_1001A2B70();
    sub_100162F0C();
    v97(v95, v96);
    sub_100178110(v293, &qword_100E6D1C8);
    sub_10035E304(v300, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001EC3E8();
    goto LABEL_6;
  }
  uint64_t v118 = v299;
  uint64_t v273 = v75;
  if (v84 == enum case for DetailCondition.pressure(_:))
  {
    if (sub_1001523D0())
    {
      uint64_t v119 = sub_1001846C4();
      sub_100186908();
      uint64_t v120 = dispatch thunk of PressurePlatterStringBuilderType.makeTodayString(from:hourlyForecast:extrema:timeZone:units:)();
      uint64_t v122 = v121;
    }
    else
    {
      char v123 = sub_1003599B4(v76);
      uint64_t v119 = sub_1001846C4();
      sub_100186908();
      if (v123) {
        uint64_t v124 = dispatch thunk of PressurePlatterStringBuilderType.makeYesterdayString(for:hourlyForecast:extrema:timeZone:units:)();
      }
      else {
        uint64_t v124 = dispatch thunk of PressurePlatterStringBuilderType.makeFutureDayString(for:hourlyForecast:extrema:timeZone:units:)();
      }
      uint64_t v120 = v124;
      uint64_t v122 = v125;
    }
    swift_bridgeObjectRelease();
    sub_10017DF08(&qword_100E6ECB8);
    uint64_t v94 = sub_10017E214();
    *(_OWORD *)(v94 + 16) = xmmword_100C251B0;
    uint64_t v132 = v94 + v119;
    uint64_t v133 = (int *)v278;
    _s7Weather24LocationCompositionStateOwst_0(v94 + v119 + *(int *)(v278 + 24), 1, 1, v279);
    uint64_t v134 = (uint64_t *)(v94 + v119 + v133[7]);
    *uint64_t v134 = v120;
    v134[1] = v122;
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    sub_10012B950();
    swift_storeEnumTagMultiPayload();
    sub_1001A1588(v133[8]);
    *(unsigned char *)(v132 + v133[9]) = 0;
    *(unsigned char *)(v132 + v133[10]) = 0;
    sub_100162F0C();
    v137(v135, v136);
    sub_100178110(v293, &qword_100E6D1C8);
    sub_10035E304(v300, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001EC3E8();
    sub_100162F0C();
    v140(v138, v139);
    sub_100162F0C();
    v143(v141, v142);
    sub_100162F0C();
    v146(v144, v145);
LABEL_34:
    sub_100162F0C();
    v213(v211, v212);
    sub_100162F0C();
    v216(v214, v215);
    sub_100162F0C();
    v219(v217, v218);
    uint64_t v220 = sub_100188D3C();
    v222(v220, v221);
    goto LABEL_35;
  }
  if (v84 == enum case for DetailCondition.precipitationTotal(_:))
  {
    if (sub_1001523D0())
    {
      sub_100183470(v280 + 32);
      dispatch thunk of PrecipitationPlatterStringBuilderType.makeTodayString(from:dayWeather:dailyForecast:hourlyForecast:timeZone:)();
      sub_1001849A8();
    }
    else
    {
      char v131 = sub_1003599B4(v76);
      sub_100183470(v280 + 32);
      if (v131) {
        dispatch thunk of PrecipitationPlatterStringBuilderType.makeYesterdayString(for:dayWeather:timeZone:units:)();
      }
      else {
        dispatch thunk of PrecipitationPlatterStringBuilderType.makeFutureDayString(for:dayWeather:timeZone:units:)();
      }
      sub_1001849A8();
    }
    sub_10017DF08(&qword_100E6ECB8);
    uint64_t v94 = sub_100184978();
    sub_1001628C0((__n128 *)v94, (__n128)xmmword_100C251B0);
    sub_100176D30();
    sub_1001A2B70();
    sub_100162F0C();
    v201(v199, v200);
    sub_100178110(v293, &qword_100E6D1C8);
    sub_10035E304(v300, (void (*)(void))type metadata accessor for WeatherData);
    sub_100162F0C();
    v204(v202, v203);
    sub_100162F0C();
    v207(v205, v206);
    sub_100162F0C();
    v210(v208, v209);
    goto LABEL_34;
  }
  if (v84 == enum case for DetailCondition.uvIndex(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v126 = v58;
    if (sub_1001523D0())
    {
      uint64_t v127 = v271;
      uint64_t v128 = v312;
      CurrentWeather.date.getter();
      uint64_t v129 = v288;
      uint64_t v130 = v298;
    }
    else
    {
      uint64_t v127 = v271;
      uint64_t v130 = v298;
      uint64_t v129 = v288;
      v268(v271, v298, v288);
      uint64_t v128 = v312;
    }
    sub_10017DF08(&qword_100E6ECB8);
    uint64_t v94 = sub_10017E214();
    sub_10019D168((__n128 *)v94, (__n128)xmmword_100C251B0);
    sub_1001D4040();
    sub_1001B1E64((void *)(v176 + 56), *(void *)(v176 + 80));
    sub_1002812EC(v127, v299, v128, v309, v272);
    uint64_t v177 = *(void (**)(uint64_t, uint64_t))(v289 + 8);
    v177(v127, v129);
    sub_100162F0C();
    v180(v178, v179);
    sub_100178110(v126, &qword_100E6D1C8);
    sub_10035E304(v300, (void (*)(void))type metadata accessor for WeatherData);
    sub_100162F0C();
    v183(v181, v182);
    sub_100162F0C();
    v186(v184, v185);
    sub_100162F0C();
    v189(v187, v188);
    sub_100162F0C();
    v192(v190, v191);
    sub_100162F0C();
    v195(v193, v194);
    sub_100162F0C();
    v198(v196, v197);
    v177(v130, v129);
    goto LABEL_35;
  }
  if (v84 == enum case for DetailCondition.visibility(_:))
  {
    sub_1001D4040();
    uint64_t v148 = *(void *)(v147 + 200);
    sub_100183470((void *)(v147 + 176));
    dispatch thunk of VisibilityPlatterStringBuilderType.makeSummaryString(currentWeather:extrema:date:calendar:timeZone:units:)();
    sub_1001849A8();
    sub_10017DF08(&qword_100E6ECB8);
    uint64_t v149 = sub_100184978();
    *(_OWORD *)(v149 + 16) = xmmword_100C251B0;
    uint64_t v150 = v149 + v118;
    uint64_t v151 = (int *)v278;
    sub_10019AA90(*(int *)(v278 + 24));
    uint64_t v152 = (uint64_t *)(v150 + v151[7]);
    uint64_t *v152 = v148;
    v152[1] = (uint64_t)v80;
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    sub_100176D30();
    _s7Weather24LocationCompositionStateOwst_0(v150 + v151[8], 1, 1, v148);
    *(void *)uint64_t v150 = 0;
    *(void *)(v150 + 8) = 0;
    *(unsigned char *)(v150 + 16) = 2;
    uint64_t v153 = object;
    *(void *)(v150 + 24) = countAndFlagsBits;
    *(void *)(v150 + 32) = v153;
    *(unsigned char *)(v150 + v151[9]) = 0;
    uint64_t v154 = v151[10];
    uint64_t v94 = v149;
    *(unsigned char *)(v150 + v154) = 0;
    sub_100162F0C();
    v157(v155, v156);
    sub_100178110(v58, &qword_100E6D1C8);
    sub_10035E304(v300, (void (*)(void))type metadata accessor for WeatherData);
    sub_100162F0C();
    v160(v158, v159);
    sub_100162F0C();
    v163(v161, v162);
    sub_100162F0C();
    v166(v164, v165);
    sub_100162F0C();
    v169(v167, v168);
    sub_100162F0C();
    v172(v170, v171);
    sub_100162F0C();
    v175(v173, v174);
    goto LABEL_8;
  }
  if (v84 == enum case for DetailCondition.wind(_:))
  {
    uint64_t v224 = (uint64_t)v77;
    sub_1001D4040();
    uint64_t v226 = v225[15];
    uint64_t v227 = v225[16];
    sub_100183470(v225 + 12);
    v264[0] = v227;
    dispatch thunk of WindPlatterStringBuilderType.makeSummaryString(currentWeather:extrema:secondaryValueExtrema:date:calendar:timeZone:units:)();
    sub_1001849A8();
    uint64_t v228 = (int *)v278;
    uint64_t v229 = v270;
    sub_10019AA90(*(int *)(v278 + 24));
    uint64_t v230 = (void *)(v229 + v228[7]);
    *uint64_t v230 = v226;
    v230[1] = v80;
    uint64_t v231 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    swift_storeEnumTagMultiPayload();
    sub_1001A1588(v228[8]);
    *(unsigned char *)(v229 + v228[9]) = 0;
    *(unsigned char *)(v229 + v228[10]) = 0;
    if ((sub_100359948(v75, v224) & 1) == 0)
    {
      sub_10017DF08(&qword_100E6ECB8);
      uint64_t v94 = sub_10017E214();
      *(_OWORD *)(v94 + 16) = xmmword_100C251B0;
      sub_10035E22C(v229, v94 + v226, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_100162F0C();
      v257(v255, v256);
      sub_100178110(v293, &qword_100E6D1C8);
      sub_10035E304(v300, (void (*)(void))type metadata accessor for WeatherData);
      sub_100162F0C();
      v260(v258, v259);
      sub_100162F0C();
      v263(v261, v262);
      goto LABEL_7;
    }
    id v232 = [v65 mainBundle:v313._object, v265];
    sub_1001631D8();
    v233._uint64_t countAndFlagsBits = 0x6C7469745F70616DLL;
    v233._object = (void *)0xEC000000326C5F65;
    v234._uint64_t countAndFlagsBits = 7364941;
    v234._object = (void *)0xE300000000000000;
    Swift::String v235 = NSLocalizedString(_:tableName:bundle:value:comment:)(v233, (Swift::String_optional)0, (NSBundle)v232, v234, v314);
    uint64_t v296 = v235._object;

    uint64_t v236 = (int *)v265;
    uint64_t v237 = v267;
    sub_100162808();
    v238();
    uint64_t v239 = (uint64_t)v237 + v236[6];
    uint64_t v240 = v300;
    sub_10035E2B0(v300, v239, (void (*)(void))type metadata accessor for WeatherData);
    _s7Weather24LocationCompositionStateOwst_0(v239, 0, 1, (uint64_t)v313._object);
    uint64_t v241 = (char *)v237 + v236[8];
    uint64_t v242 = enum case for WeatherMapOverlayKind.wind(_:);
    type metadata accessor for WeatherMapOverlayKind();
    sub_100162E4C();
    (*(void (**)(char *, uint64_t))(v243 + 104))(v241, v242);
    *uint64_t v237 = 0;
    v237[1] = 0;
    uint64_t v244 = (void *)((char *)v237 + v236[7]);
    *uint64_t v244 = 0;
    v244[1] = 0xE000000000000000;
    *((unsigned char *)v237 + v236[9]) = 0;
    uint64_t v245 = v266;
    uint64_t v246 = sub_10019ADF8(v228[6]);
    _s7Weather24LocationCompositionStateOwst_0(v246, v247, v248, v279);
    sub_10035E2B0((uint64_t)v237, v245 + v228[7], (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
    type metadata accessor for ConditionDetailDynamicContentIdentifier();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v249 = sub_10019ADF8(v228[8]);
    _s7Weather24LocationCompositionStateOwst_0(v249, v250, v251, v231);
    *(_OWORD *)uint64_t v245 = xmmword_100C33BD0;
    *(unsigned char *)(v245 + 16) = 1;
    uint64_t v252 = v296;
    *(void *)(v245 + 24) = v235._countAndFlagsBits;
    *(void *)(v245 + 32) = v252;
    *(unsigned char *)(v245 + v228[9]) = 1;
    *(unsigned char *)(v245 + v228[10]) = 0;
    sub_10017DF08(&qword_100E6ECB8);
    uint64_t v253 = *(void *)(v281 + 72);
    sub_100166B3C();
    uint64_t v94 = swift_allocObject();
    sub_10019D168((__n128 *)v94, (__n128)xmmword_100C25ED0);
    sub_10035E2B0(v229, (uint64_t)v236, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10035E22C(v245, (uint64_t)v236 + v253, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10035E304((uint64_t)v237, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
    sub_10035E304(v229, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100162F0C();
    v254();
    sub_100178110(v293, &qword_100E6D1C8);
    sub_10035E304(v240, (void (*)(void))type metadata accessor for WeatherData);
LABEL_6:
    sub_100162F0C();
    v98();
    sub_100162F0C();
    v99();
LABEL_7:
    sub_100162F0C();
    v100();
    sub_100162F0C();
    v101();
    sub_100162F0C();
    v102();
    sub_100162F0C();
    v103();
LABEL_8:
    sub_100162F0C();
    v104();
LABEL_35:
    swift_release();
    swift_release();
    return v94;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100359948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unsigned char *)(a1 + 16);
  int v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 != 2) {
    return v2 & 1;
  }
  uint64_t v4 = *(unsigned __int8 *)(a2 + *(int *)(type metadata accessor for ConditionDetailInput.Input(0) + 44));
  swift_beginAccess();
  unsigned char *v3 = v4;
  return v4;
}

uint64_t sub_1003599B4(uint64_t a1)
{
  int v2 = (unsigned char *)(a1 + 16);
  int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 == 2)
  {
    type metadata accessor for ConditionDetailInput.Input(0);
    char v3 = static Date.== infix(_:_:)();
    swift_beginAccess();
    *int v2 = v3 & 1;
  }
  else
  {
    char v3 = v1 & 1;
  }
  return v3 & 1;
}

void sub_100359A40(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v163 = a6;
  uint64_t v165 = a5;
  uint64_t v164 = a4;
  uint64_t v162 = a3;
  uint64_t v161 = a2;
  uint64_t v174 = a7;
  uint64_t v168 = type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v152 = v9;
  __chkstk_darwin(v10);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v11);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v12);
  sub_100128F8C();
  uint64_t v149 = v13;
  sub_100129064();
  *(void *)&long long v173 = type metadata accessor for Precipitation();
  sub_100179C0C();
  uint64_t v151 = v14;
  __chkstk_darwin(v15);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v19);
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v170 = v22;
  uint64_t v23 = sub_100129064();
  uint64_t v156 = type metadata accessor for ConditionDetailChartDataInput(v23);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v155 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E6ECE0);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100128F8C();
  uint64_t v158 = v29;
  uint64_t v30 = sub_100129064();
  uint64_t v159 = type metadata accessor for ConditionDetailChartInputs(v30);
  sub_100179C0C();
  uint64_t v157 = v31;
  __chkstk_darwin(v32);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v33);
  sub_100128F8C();
  uint64_t v167 = v34;
  uint64_t v35 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v37 = v36;
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v141 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v42 = sub_10019B874();
  if (*(unsigned char *)(a1 + *(int *)(v42 + 44)) != 1) {
    goto LABEL_45;
  }
  uint64_t v43 = v42;
  uint64_t v44 = a1 + *(int *)(v42 + 32);
  uint64_t v45 = (char *)v37[2];
  uint64_t v147 = a1;
  uint64_t v146 = v44;
  uint64_t v144 = v45;
  ((void (*)(uint64_t))v45)(v7);
  unint64_t v145 = v37[13];
  ((void (*)(char *, void, uint64_t))v145)(v41, enum case for DetailCondition.pressure(_:), v35);
  sub_10035E1E4(&qword_100E6ECE8, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
  char v46 = sub_10018B2E8();
  uint64_t v47 = (void (*)(void))v37[1];
  sub_10019DE3C();
  v47();
  sub_10019DE3C();
  v47();
  if (v46) {
    goto LABEL_45;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))v144)(v7, v146, v35);
  sub_10019B0F8();
  v48();
  char v49 = sub_10018B2E8();
  sub_10019DE3C();
  v47();
  sub_10019DE3C();
  uint64_t v50 = ((uint64_t (*)(void))v47)();
  if (v49) {
    goto LABEL_45;
  }
  uint64_t v144 = (char *)*(int *)(v43 + 28);
  uint64_t v51 = *(void *)&v144[v147];
  __chkstk_darwin(v50);
  *(&v141 - 2) = v52;
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_100A96BD4(sub_10035E110, (uint64_t)(&v141 - 4), v51);
  char v55 = v54;
  swift_bridgeObjectRelease();
  if ((v55 & 1) != 0 || (unint64_t v56 = v53 - 1, v53 < 1))
  {
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v70 = type metadata accessor for Logger();
    sub_1002102B0(v70, (uint64_t)qword_100F51ED0);
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v71, v72))
    {
      id v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Not enough data to compare weather data from yesterday and today. Comparison platter will not be shown.", v73, 2u);
      swift_slowDealloc();
    }

    goto LABEL_45;
  }
  sub_10019B0F8();
  v57();
  uint64_t v58 = v146;
  char v59 = static DetailCondition.== infix(_:_:)();
  sub_10019DE3C();
  v47();
  if ((v59 & 1) == 0) {
    goto LABEL_44;
  }
  unint64_t v145 = v53;
  sub_1001279D4();
  if (v56 >= v61)
  {
    __break(1u);
LABEL_52:
    __break(1u);
    return;
  }
  unint64_t v62 = (*(unsigned __int8 *)(v157 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80);
  uint64_t v63 = *(void *)(v157 + 72);
  uint64_t v64 = v167;
  sub_10035E2B0(v60 + v62 + v63 * v56, (uint64_t)v167, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
  uint64_t v65 = v159;
  uint64_t v66 = *(void *)&v64[*(int *)(v159 + 20)];
  uint64_t v67 = v158;
  sub_10043F6E0(v66, v158);
  uint64_t v68 = type metadata accessor for ConditionDetailChartInput(0);
  sub_10012B520(v67, 1, v68);
  uint64_t v69 = v168;
  if (v100)
  {
    sub_100178110(v67, &qword_100E6ECE0);
    uint64_t v75 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v74 = v155;
    sub_10035E2B0(v67 + *(int *)(v68 + 20), v155, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    sub_10035E304(v67, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
    uint64_t v75 = *(void **)(v74 + *(int *)(v156 + 44));
    swift_bridgeObjectRetain();
    sub_10035E304(v74, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
  }
  sub_10035E304((uint64_t)v167, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
  sub_1001279D4();
  if (v145 >= v77) {
    goto LABEL_52;
  }
  uint64_t v78 = v154;
  sub_10035E2B0(v76 + v62 + v63 * v145, v154, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
  uint64_t v79 = v153;
  sub_10043F6E0(*(void *)(v78 + *(int *)(v65 + 20)), (uint64_t)v153);
  sub_10012B520((uint64_t)v79, 1, v68);
  if (v100)
  {
    sub_100178110((uint64_t)v79, &qword_100E6ECE0);
    long long v83 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100127AB8();
    sub_10035E2B0(v80, v81, v82);
    sub_10035E304((uint64_t)v79, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
    long long v83 = *(void **)(v63 + *(int *)(v156 + 44));
    swift_bridgeObjectRetain();
    sub_10035E304(v63, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
  }
  sub_10035E304(v78, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
  *(void *)&v178[0] = v75;
  sub_10037FAC8((uint64_t)v83);
  int v84 = *(char **)(*(void *)&v178[0] + 16);
  if (!v84)
  {
LABEL_49:
    swift_bridgeObjectRelease();
LABEL_50:
    uint64_t v140 = v174;
    uint64_t v117 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v118 = v140;
LABEL_46:
    uint64_t v119 = 1;
    goto LABEL_47;
  }
  unint64_t v143 = v56;
  uint64_t v157 = *(void *)(v152 + 16);
  unint64_t v85 = *(void *)&v178[0]
      + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80));
  uint64_t v155 = *(void *)(v152 + 72);
  LODWORD(v154) = enum case for Precipitation.none(_:);
  uint64_t v153 = (void *)(v151 + 104);
  uint64_t v159 = v151 + 8;
  uint64_t v158 = v152 + 16;
  uint64_t v156 = v152 + 8;
  uint64_t v144 = *(char **)&v178[0];
  swift_bridgeObjectRetain();
  unint64_t v142 = v85;
  uint64_t v86 = v150;
  uint64_t v87 = v172;
  while (1)
  {
    uint64_t v167 = v84;
    sub_100162808();
    v88();
    HourWeather.precipitation.getter();
    Swift::String v89 = (char *)*v153;
    ((void (*)(uint64_t, void, void))*v153)(v87, v154, v173);
    sub_10035E1E4(&qword_100E6ED00, (void (*)(uint64_t))&type metadata accessor for Precipitation);
    char v90 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v91 = *(void (**)(void))v159;
    sub_100163348();
    v91();
    sub_100163348();
    v91();
    if ((v90 & 1) == 0) {
      break;
    }
    sub_100162F0C();
    v92();
    v85 += v155;
    int v84 = v167 - 1;
    if (v167 == (char *)1)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_50;
    }
  }
  uint64_t v167 = v89;
  uint64_t v93 = v144;
  swift_bridgeObjectRelease();
  uint64_t v94 = v152 + 32;
  uint64_t v95 = v149;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 32))(v149, v86, v69);
  uint64_t v96 = v148;
  HourWeather.precipitation.getter();
  *(void *)&long long v171 = *(void *)(v94 - 24);
  ((void (*)(uint64_t, uint64_t))v171)(v95, v69);
  (*(void (**)(uint64_t, uint64_t, void))(v151 + 32))(v170, v96, v173);
  uint64_t v97 = *((void *)v93 + 2);
  if (!v97) {
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  unint64_t v98 = v142;
  uint64_t v99 = (void (*)(uint64_t, uint64_t))v171;
  do
  {
    HourWeather.precipitation.getter();
    sub_10035E1E4(&qword_100E6ED08, (void (*)(uint64_t))&type metadata accessor for Precipitation);
    sub_1001A3848();
    sub_1001A3848();
    BOOL v100 = *(void *)&v178[0] == v176 && *((void *)&v178[0] + 1) == v177;
    if (v100)
    {
      swift_bridgeObjectRelease_n();
      sub_10018C41C();
      v91();
      uint64_t v101 = v169;
      ((void (*)(uint64_t, unint64_t, uint64_t))v157)(v169, v98, v69);
LABEL_39:
      v99(v101, v69);
      goto LABEL_40;
    }
    LODWORD(v172) = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10018C41C();
    v91();
    uint64_t v101 = v169;
    sub_100162808();
    v102();
    if (v172) {
      goto LABEL_39;
    }
    HourWeather.precipitation.getter();
    ((void (*)(uint64_t, void, void))v167)(v166, v154, v173);
    sub_1001A3848();
    sub_1001A3848();
    if (*(void *)&v178[0] == v176 && *((void *)&v178[0] + 1) == v177)
    {
      swift_bridgeObjectRelease_n();
      sub_100163348();
      v91();
      sub_100163348();
      v91();
      uint64_t v69 = v168;
      uint64_t v99 = (void (*)(uint64_t, uint64_t))v171;
      ((void (*)(uint64_t, uint64_t))v171)(v101, v168);
    }
    else
    {
      uint64_t v104 = v101;
      char v105 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100163348();
      v91();
      sub_100163348();
      v91();
      uint64_t v69 = v168;
      uint64_t v106 = (void (*)(uint64_t, uint64_t))v171;
      ((void (*)(uint64_t, uint64_t))v171)(v104, v168);
      uint64_t v99 = v106;
      if ((v105 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_10018C41C();
        v91();
        goto LABEL_49;
      }
    }
LABEL_40:
    v98 += v155;
    --v97;
  }
  while (v97);
  swift_bridgeObjectRelease();
LABEL_43:
  sub_10018C41C();
  v91();
  swift_bridgeObjectRelease();
  uint64_t v58 = v146;
  uint64_t v53 = v145;
  unint64_t v56 = v143;
LABEL_44:
  uint64_t v107 = v147;
  unint64_t v108 = v53;
  unint64_t v109 = v56;
  uint64_t v110 = v161;
  uint64_t v111 = v162;
  uint64_t v112 = v164;
  uint64_t v113 = v165;
  uint64_t v114 = v163;
  uint64_t v115 = v160;
  sub_10035AC7C(v147, v108, v109, v161, v162, v164, v165, v163, &v176);
  sub_10024D364((uint64_t)&v176, (uint64_t)v178, &qword_100E6ECF0);
  unsigned __int16 v116 = v180;
  if (HIBYTE(v180) > 0xFEu)
  {
LABEL_45:
    uint64_t v117 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v118 = v174;
    goto LABEL_46;
  }
  long long v173 = v178[0];
  long long v172 = v178[1];
  long long v171 = v178[2];
  uint64_t v170 = v179;
  sub_10035C0CC(v58, (uint64_t)v175);
  sub_10035C2C0((uint64_t)v175, v107, v114, v110, v111, v112, v113);
  sub_1001849A8();
  uint64_t v121 = v120;
  uint64_t v123 = v122 & 1;
  uint64_t v124 = self;
  sub_100190CC4(v113, v115, v123);
  swift_bridgeObjectRetain();
  sub_10035E168((uint64_t)&v176, (void (*)(void, void, void, void, void, void, void, void))sub_10035E130);
  uint64_t v125 = (objc_class *)[v124 mainBundle];
  sub_1001631D8();
  v126.super.Class isa = v125;
  uint64_t v130 = sub_1001632F8(0xD000000000000010, 0x8000000100C9C6C0, 0, 0, v126, v127, v128, v129);
  uint64_t v132 = v131;

  sub_10035E168((uint64_t)&v176, (void (*)(void, void, void, void, void, void, void, void))sub_10035E1AC);
  sub_100191924(v113, v115, v123);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v175, &qword_100E6ECF8);
  uint64_t v133 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v134 = v174;
  uint64_t v135 = v174 + v133[6];
  uint64_t v136 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v135, 1, 1, v136);
  uint64_t v137 = v134 + v133[7];
  *(void *)uint64_t v137 = v113;
  *(void *)(v137 + 8) = v115;
  *(void *)(v137 + 16) = v123;
  *(void *)(v137 + 24) = v121;
  long long v138 = v172;
  *(_OWORD *)(v137 + 32) = v173;
  *(_OWORD *)(v137 + 48) = v138;
  *(_OWORD *)(v137 + 64) = v171;
  *(void *)(v137 + 80) = v170;
  *(unsigned char *)(v137 + 88) = v116;
  *(unsigned char *)(v137 + 89) = HIBYTE(v116) & 1;
  uint64_t v139 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v134 + v133[8], 1, 1, v139);
  *(_OWORD *)uint64_t v134 = xmmword_100C27710;
  *(unsigned char *)(v134 + 16) = 2;
  *(void *)(v134 + 24) = v130;
  *(void *)(v134 + 32) = v132;
  *(unsigned char *)(v134 + v133[9]) = 0;
  *(unsigned char *)(v134 + v133[10]) = 0;
  uint64_t v118 = v134;
  uint64_t v119 = 0;
  uint64_t v117 = (uint64_t)v133;
LABEL_47:
  _s7Weather24LocationCompositionStateOwst_0(v118, v119, 1, v117);
}

uint64_t sub_10035AC2C()
{
  return static Date.== infix(_:_:)() & 1;
}

uint64_t sub_10035AC7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v192 = a8;
  uint64_t v182 = a7;
  uint64_t v189 = a6;
  uint64_t v191 = a5;
  *(void *)&long long v203 = a4;
  unint64_t v183 = a3;
  unint64_t v193 = a2;
  uint64_t v202 = a9;
  uint64_t v196 = (void *)type metadata accessor for Date();
  NSBundle v201 = (void (*)(char *, uint64_t, uint64_t))*(v196 - 1);
  uint64_t v10 = __chkstk_darwin(v196);
  object = (void (*)(void))((char *)&v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t countAndFlagsBits = (char *)&v163 - v12;
  uint64_t v13 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v13 - 8);
  uint64_t v177 = (char *)&v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  __chkstk_darwin(v179);
  uint64_t v176 = (char *)&v163 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_10017DF08(&qword_100E65250);
  uint64_t v180 = *(void *)(v181 - 8);
  uint64_t v16 = __chkstk_darwin(v181);
  uint64_t v175 = (char *)&v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v174 = (uint64_t)&v163 - v19;
  __chkstk_darwin(v18);
  uint64_t v187 = (char *)&v163 - v20;
  uint64_t v21 = type metadata accessor for TemperatureScaleConfiguration.Gradient();
  __chkstk_darwin(v21 - 8);
  uint64_t v171 = (uint64_t)&v163 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for TemperatureScaleConfiguration();
  uint64_t v168 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v167 = (uint64_t)&v163 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for AppConfiguration();
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v25 = (char *)&v163 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v173 = (uint64_t)&v163 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v170 = (uint64_t)&v163 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v163 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v163 - v34;
  uint64_t v197 = type metadata accessor for ExtremaResult();
  uint64_t v188 = *(void *)(v197 - 8);
  uint64_t v36 = __chkstk_darwin(v197);
  uint64_t v172 = (uint64_t)&v163 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v178 = (char *)&v163 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v164 = (uint64_t)&v163 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v184 = (char *)&v163 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v185 = (char *)&v163 - v45;
  __chkstk_darwin(v44);
  uint64_t v186 = (char *)&v163 - v46;
  uint64_t v47 = type metadata accessor for DetailCondition();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v51 = (char *)&v163 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  uint64_t v53 = (char *)&v163 - v52;
  uint64_t v54 = type metadata accessor for ConditionDetailInput.Input(0);
  uint64_t v55 = a1;
  uint64_t v56 = a1 + *(int *)(v54 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v53, v56, v47);
  uint64_t v199 = v48;
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t))(v48 + 88);
  uint64_t v194 = v53;
  uint64_t v200 = v47;
  uint64_t result = v57(v53, v47);
  if (result == enum case for DetailCondition.conditions(_:))
  {
    sub_10006DF38(v203, (uint64_t)v35, &qword_100E6BCB0);
    uint64_t v59 = v197;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v197) == 1)
    {
      uint64_t v33 = v35;
    }
    else
    {
      uint64_t v94 = v188;
      uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v188 + 32);
      uint64_t v96 = v186;
      v95(v186, v35, v59);
      sub_10006DF38(v189, (uint64_t)v33, &qword_100E6BCB0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v59) != 1)
      {
        v95(v185, v33, v59);
        NSBundle v201 = (void (*)(char *, uint64_t, uint64_t))v95;
        sub_1001B1E64((void *)(v190 + 536), *(void *)(v190 + 560));
        dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
        uint64_t v97 = v167;
        AppConfiguration.temperatureScale.getter();
        (*(void (**)(char *, uint64_t))(v165 + 8))(v25, v166);
        uint64_t v98 = v171;
        TemperatureScaleConfiguration.gradient.getter();
        (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v97, v169);
        *(void *)&long long v203 = sub_1001B6D94(v98);
        CurrentWeather.temperature.getter();
        uint64_t v99 = v170;
        sub_10006DF38(v191, v170, &qword_100E6BCB0);
        BOOL v100 = *(void (**)(uint64_t, char *, uint64_t))(v94 + 16);
        uint64_t v101 = v164;
        v100(v164, v96, v59);
        if (_s7Weather24LocationCompositionStateOwet_0(v99, 1, v59) == 1)
        {
          Swift::String v102 = v201;
          v201(v184, v101, v59);
          sub_100178110(v99, &qword_100E6BCB0);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v101, v59);
          Swift::String v102 = v201;
          v201(v184, v99, v59);
        }
        char v122 = v178;
        uint64_t v123 = v173;
        uint64_t v124 = v172;
        sub_10006DF38(v182, v173, &qword_100E6BCB0);
        v100(v124, v185, v59);
        if (_s7Weather24LocationCompositionStateOwet_0(v123, 1, v59) == 1)
        {
          v102(v122, v124, v59);
          sub_100178110(v123, &qword_100E6BCB0);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v124, v59);
          v102(v122, v123, v59);
        }
        sub_10017DF08(&qword_100E6ED18);
        uint64_t v125 = (int *)(type metadata accessor for ComparisonCapsuleViewModel.Row(0) - 8);
        uint64_t v126 = *(void *)v125;
        uint64_t countAndFlagsBits = *(char **)(*(void *)v125 + 72);
        unint64_t v127 = (*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
        uint64_t v128 = swift_allocObject();
        NSBundle v201 = (void (*)(char *, uint64_t, uint64_t))v128;
        *(_OWORD *)(v128 + 16) = xmmword_100C25ED0;
        unint64_t v129 = v128 + v127;
        uint64_t v196 = self;
        id v130 = [v196 mainBundle];
        v214._uint64_t countAndFlagsBits = 0xD000000000000031;
        v214._object = (void *)0x8000000100C9C730;
        v131._uint64_t countAndFlagsBits = 0x7961646F54;
        v131._object = (void *)0xE500000000000000;
        v132._uint64_t countAndFlagsBits = 0;
        v132._object = (void *)0xE000000000000000;
        Swift::String v133 = NSLocalizedString(_:tableName:bundle:value:comment:)(v131, (Swift::String_optional)0, (NSBundle)v130, v132, v214);
        object = (void (*)(void))v133._object;

        ExtremaResult.minValue.getter();
        ConditionUnits.temperature.getter();
        sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
        uint64_t v134 = v174;
        Measurement.init(value:unit:)();
        ExtremaResult.maxValue.getter();
        ConditionUnits.temperature.getter();
        uint64_t v135 = (uint64_t)v175;
        Measurement.init(value:unit:)();
        uint64_t v136 = (uint64_t)v177;
        uint64_t v137 = v181;
        (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v177, v187, v181);
        _s7Weather24LocationCompositionStateOwst_0(v136, 0, 1, v137);
        uint64_t v138 = (uint64_t)v176;
        sub_100786A8C(v134, v135, v136, v139, v140, v141, v142, v143, v163, v164, v165, v166, v167, v168, v169, v170, v171, v172, v173,
          v174);
        swift_storeEnumTagMultiPayload();
        uint64_t v144 = object;
        *(void *)unint64_t v129 = v133._countAndFlagsBits;
        *(void *)(v129 + 8) = v144;
        *(_OWORD *)(v129 + 16) = 0u;
        *(_OWORD *)(v129 + 32) = 0u;
        uint64_t v145 = v129 + v125[7];
        object = (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body;
        sub_10035E22C(v138, v145, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
        *(unsigned char *)(v129 + v125[8]) = 0;
        uint64_t v146 = &countAndFlagsBits[v129];
        id v147 = [v196 mainBundle];
        v215._object = (void *)0x8000000100C9C770;
        v148._uint64_t countAndFlagsBits = 0x6164726574736559;
        v148._object = (void *)0xE900000000000079;
        v149._uint64_t countAndFlagsBits = 0;
        v149._object = (void *)0xE000000000000000;
        v215._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
        Swift::String v150 = NSLocalizedString(_:tableName:bundle:value:comment:)(v148, (Swift::String_optional)0, (NSBundle)v147, v149, v215);
        uint64_t countAndFlagsBits = (char *)v150._countAndFlagsBits;
        uint64_t v196 = v150._object;

        uint64_t v151 = v178;
        ExtremaResult.minValue.getter();
        ConditionUnits.temperature.getter();
        Measurement.init(value:unit:)();
        ExtremaResult.maxValue.getter();
        ConditionUnits.temperature.getter();
        Measurement.init(value:unit:)();
        uint64_t v152 = v181;
        _s7Weather24LocationCompositionStateOwst_0(v136, 1, 1, v181);
        sub_100786A8C(v134, v135, v136, v153, v154, v155, v156, v157, v163, v164, v165, v166, v167, v168, v169, v170, v171, v172, v173,
          v174);
        swift_storeEnumTagMultiPayload();
        uint64_t v158 = v196;
        *(void *)uint64_t v146 = countAndFlagsBits;
        *((void *)v146 + 1) = v158;
        *((_OWORD *)v146 + 1) = 0u;
        *((_OWORD *)v146 + 2) = 0u;
        sub_10035E22C(v138, (uint64_t)&v146[v125[7]], object);
        v146[v125[8]] = 0;
        sub_100786C7C(0, (uint64_t)v201, v203, &v204);
        uint64_t v159 = *(void (**)(char *, uint64_t))(v188 + 8);
        uint64_t v160 = v197;
        v159(v151, v197);
        v159(v184, v160);
        (*(void (**)(char *, uint64_t))(v180 + 8))(v187, v152);
        v159(v185, v160);
        v159(v186, v160);
        sub_10024D364((uint64_t)&v204, (uint64_t)&v205, &qword_100E65248);
        uint64_t v105 = v206;
        if (v206)
        {
          uint64_t v104 = v205;
          uint64_t v106 = v207;
          uint64_t v107 = v208;
          uint64_t v162 = *(uint64_t (**)(char *, uint64_t))(v199 + 8);
          *(void *)&long long v161 = v209;
          long long v203 = v161;
          uint64_t result = v162(v194, v200);
          long long v109 = v203;
          uint64_t v108 = 0;
          __int16 v110 = 0;
        }
        else
        {
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v199 + 8))(v194, v200);
          uint64_t v104 = 0;
          uint64_t v106 = 0;
          uint64_t v107 = 0;
          uint64_t v108 = 0;
          __int16 v110 = -256;
          long long v109 = 0uLL;
        }
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v94 + 8))(v96, v59);
    }
    sub_100178110((uint64_t)v33, &qword_100E6BCB0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v199 + 8))(v194, v200);
LABEL_32:
    uint64_t v104 = 0;
    uint64_t v105 = 0;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    long long v109 = 0uLL;
    __int16 v110 = -256;
LABEL_33:
    uint64_t v111 = v202;
    *uint64_t v202 = v104;
    v111[1] = v105;
    v111[2] = v106;
    v111[3] = v107;
    *((_OWORD *)v111 + 2) = v109;
    v111[6] = v108;
    *((_WORD *)v111 + 28) = v110;
    return result;
  }
  uint64_t v60 = countAndFlagsBits;
  uint64_t v61 = v55;
  uint64_t v62 = v203;
  unint64_t v63 = v193;
  if (result == enum case for DetailCondition.humidity(_:)) {
    goto LABEL_17;
  }
  if (result == enum case for DetailCondition.pressure(_:)) {
    goto LABEL_32;
  }
  BOOL v64 = result == enum case for DetailCondition.precipitationTotal(_:)
     || result == enum case for DetailCondition.uvIndex(_:);
  BOOL v65 = v64 || result == enum case for DetailCondition.visibility(_:);
  if (v65 || result == enum case for DetailCondition.wind(_:))
  {
LABEL_17:
    if ((v193 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v67 = *(void *)(v61 + *(int *)(v54 + 28));
      if (*(void *)(v67 + 16) > v193)
      {
        uint64_t v197 = v56;
        uint64_t v68 = *(void *)(type metadata accessor for ConditionDetailChartInputs(0) - 8);
        uint64_t v69 = v67 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
        uint64_t v70 = *(void *)(v68 + 72);
        uint64_t v71 = (void (*)(char *, unint64_t, void *))*((void *)v201 + 2);
        os_log_type_t v72 = v196;
        v71(v60, v69 + v70 * v63, v196);
        if ((v183 & 0x8000000000000000) == 0)
        {
          if (*(void *)(v67 + 16) > v183)
          {
            unint64_t v73 = v69 + v70 * v183;
            uint64_t v74 = (char *)object;
            v71((char *)object, v73, v72);
            uint64_t v75 = v192;
            uint64_t v76 = sub_10035C72C(v61, v60, v62, v191, v192);
            if (v77)
            {
              uint64_t v79 = v76;
              uint64_t v80 = v77;
              uint64_t v81 = v78;
              uint64_t v82 = sub_10035C72C(v61, v74, v189, v182, v75);
              if (v83)
              {
                uint64_t v192 = v81;
                unint64_t v193 = v82;
                uint64_t v194 = v84;
                *(void *)&long long v203 = v83;
                sub_10017DF08(&qword_100E6ED10);
                uint64_t v85 = swift_allocObject();
                *(_OWORD *)(v85 + 16) = xmmword_100C25ED0;
                uint64_t v86 = self;
                v87.super.Class isa = (Class)[v86 mainBundle];
                v212._uint64_t countAndFlagsBits = 0xD000000000000031;
                v212._object = (void *)0x8000000100C9C730;
                v88._uint64_t countAndFlagsBits = 0x7961646F54;
                v88._object = (void *)0xE500000000000000;
                v89._uint64_t countAndFlagsBits = 0;
                v89._object = (void *)0xE000000000000000;
                Swift::String v90 = NSLocalizedString(_:tableName:bundle:value:comment:)(v88, (Swift::String_optional)0, v87, v89, v212);

                uint64_t v92 = v199;
                uint64_t v91 = v200;
                (*(void (**)(char *, void, uint64_t))(v199 + 104))(v51, enum case for DetailCondition.precipitationTotal(_:), v200);
                LOBYTE(v87.super.isa) = static DetailCondition.== infix(_:_:)();
                (*(void (**)(char *, uint64_t))(v92 + 8))(v51, v91);
                if ((uint64_t)v87.super.isa) {
                  uint64_t v93 = static Color.teal.getter();
                }
                else {
                  uint64_t v93 = static Color.white.getter();
                }
                *(Swift::String *)(v85 + 32) = v90;
                *(void *)(v85 + 48) = v79;
                *(void *)(v85 + 56) = v80;
                *(void *)(v85 + 64) = v192;
                *(void *)(v85 + 72) = v93;
                *(unsigned char *)(v85 + 80) = 1;
                id v112 = [v86 mainBundle];
                v213._object = (void *)0x8000000100C9C770;
                v113._uint64_t countAndFlagsBits = 0x6164726574736559;
                v113._object = (void *)0xE900000000000079;
                v114._uint64_t countAndFlagsBits = 0;
                v114._object = (void *)0xE000000000000000;
                v213._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
                Swift::String v115 = NSLocalizedString(_:tableName:bundle:value:comment:)(v113, (Swift::String_optional)0, (NSBundle)v112, v114, v213);

                id v116 = [self systemFillColor];
                uint64_t v117 = Color.init(uiColor:)();
                *(Swift::String *)(v85 + 88) = v115;
                uint64_t v118 = v203;
                *(void *)(v85 + 104) = v193;
                *(void *)(v85 + 112) = v118;
                *(void *)(v85 + 120) = v194;
                *(void *)(v85 + 128) = v117;
                *(unsigned char *)(v85 + 136) = 0;
                sub_10088891C(v85, (uint64_t)&v205);
                uint64_t v104 = v205;
                uint64_t v105 = v206;
                uint64_t v106 = v207;
                uint64_t v107 = v208;
                long long v203 = v209;
                uint64_t v108 = v210;
                __int16 v119 = v211;
                uint64_t v120 = (uint64_t (*)(char *, void *))*((void *)v201 + 1);
                uint64_t v121 = v196;
                v120((char *)object, v196);
                uint64_t result = v120(countAndFlagsBits, v121);
                long long v109 = v203;
                __int16 v110 = v119 | 0x100;
                goto LABEL_33;
              }
              swift_bridgeObjectRelease();
            }
            Swift::String_optional v103 = (void (*)(char *, void *))*((void *)v201 + 1);
            v103(v74, v72);
            uint64_t result = ((uint64_t (*)(char *, void *))v103)(v60, v72);
            goto LABEL_32;
          }
          goto LABEL_46;
        }
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    __break(1u);
    goto LABEL_45;
  }
LABEL_47:
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10035C0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for DetailCondition();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (result == enum case for DetailCondition.conditions(_:))
  {
    sub_10020D948(v2 + 296, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (result == enum case for DetailCondition.humidity(_:))
  {
    uint64_t v10 = v2 + 336;
    return sub_10020D948(v10, a2);
  }
  if (result == enum case for DetailCondition.pressure(_:)
    || result == enum case for DetailCondition.precipitationTotal(_:))
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else if (result == enum case for DetailCondition.uvIndex(_:))
  {
    *(void *)(a2 + 24) = &type metadata for UVIndexComparisonTextBuilder;
    *(void *)(a2 + 32) = &off_100E3ACA8;
  }
  else
  {
    if (result == enum case for DetailCondition.visibility(_:))
    {
      uint64_t v10 = v2 + 376;
      return sub_10020D948(v10, a2);
    }
    if (result == enum case for DetailCondition.wind(_:))
    {
      uint64_t v10 = v2 + 416;
      return sub_10020D948(v10, a2);
    }
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10035C2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v41 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v11 = type metadata accessor for TimeZone();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v39 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v42 = (char *)&v35 - v19;
  uint64_t v20 = (int *)type metadata accessor for PastDataComparisonTextContext();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(a1, (uint64_t)&v43, &qword_100E6ECF8);
  if (v44)
  {
    sub_1001262E4(&v43, (uint64_t)v45);
    uint64_t v23 = type metadata accessor for ConditionDetailInput.Input(0);
    uint64_t v36 = a7;
    uint64_t v24 = v23;
    CurrentWeather.date.getter();
    uint64_t v35 = a6;
    Location.timeZone.getter();
    Date.midnight(timeZone:)();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v26 = v39;
    uint64_t v25 = v40;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v40);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(&v22[v20[5]], a2 + *(int *)(v24 + 48), v25);
    Location.timeZone.getter();
    sub_10017DF08(&qword_100E66CA0);
    uint64_t v27 = Forecast.forecast.getter();
    sub_10017DF08(&qword_100E66CC8);
    uint64_t v28 = Forecast.forecast.getter();
    uint64_t v29 = &v22[v20[9]];
    uint64_t v30 = type metadata accessor for ConditionUnits();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v29, v37, v30);
    sub_10006DF38(v38, (uint64_t)&v22[v20[10]], &qword_100E6BCB0);
    sub_10006DF38(v41, (uint64_t)&v22[v20[11]], &qword_100E6BCB0);
    sub_10006DF38(v35, (uint64_t)&v22[v20[12]], &qword_100E6BCB0);
    sub_10006DF38(v36, (uint64_t)&v22[v20[13]], &qword_100E6BCB0);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v22, v42, v25);
    *(void *)&v22[v20[7]] = v27;
    *(void *)&v22[v20[8]] = v28;
    uint64_t v31 = v46;
    uint64_t v32 = v47;
    sub_1001B1E64(v45, v46);
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 8))(v22, v31, v32);
    sub_10035E304((uint64_t)v22, (void (*)(void))type metadata accessor for PastDataComparisonTextContext);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v45);
  }
  else
  {
    sub_100178110((uint64_t)&v43, &qword_100E6ECF8);
    LocalizedStringKey.init(stringLiteral:)();
    return Text.init(_:tableName:bundle:comment:)();
  }
  return v33;
}

uint64_t sub_10035C72C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v130 = a5;
  uint64_t v127 = a4;
  uint64_t v141 = a3;
  uint64_t v151 = a2;
  uint64_t v114 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  id v112 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v7 - 8);
  uint64_t v106 = (uint64_t)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for NSUnitSpeed.WeatherFormatUsage();
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v104 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  unint64_t v129 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10017DF08(&qword_100E6D0A8);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v128 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for NumberFormatStyleConfiguration.Precision();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v121 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for Locale();
  __chkstk_darwin(v102);
  uint64_t v118 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10017DF08(&qword_100E6ED20);
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v14 = __chkstk_darwin(v123);
  __int16 v119 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v120 = (char *)&v101 - v16;
  uint64_t v17 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v116 = (uint64_t)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v115 = (uint64_t)&v101 - v21;
  __chkstk_darwin(v20);
  uint64_t v131 = (uint64_t)&v101 - v22;
  uint64_t v147 = type metadata accessor for ExtremaResult();
  uint64_t v140 = *(void *)(v147 - 8);
  uint64_t v23 = __chkstk_darwin(v147);
  uint64_t v126 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v101 = (char *)&v101 - v26;
  __chkstk_darwin(v25);
  uint64_t v117 = (char *)&v101 - v27;
  uint64_t v28 = type metadata accessor for RoundedPrecipitation();
  uint64_t v138 = *(void *)(v28 - 8);
  uint64_t v139 = v28;
  __chkstk_darwin(v28);
  uint64_t v137 = (char *)&v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10017DF08(&qword_100E6B648);
  uint64_t v135 = *(void *)(v136 - 8);
  uint64_t v30 = __chkstk_darwin(v136);
  Swift::String v133 = (char *)&v101 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v134 = (char *)&v101 - v32;
  uint64_t v33 = sub_10017DF08(&qword_100E6B6C8);
  __chkstk_darwin(v33 - 8);
  uint64_t v142 = (char *)&v101 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for DayWeather();
  uint64_t v132 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v143 = (char *)&v101 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Calendar();
  uint64_t v144 = *(void *)(v36 - 8);
  uint64_t v145 = v36;
  __chkstk_darwin(v36);
  Swift::String v148 = (char *)&v101 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for TimeZone();
  uint64_t v149 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v101 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v150 = *(void *)(v41 - 8);
  uint64_t v42 = __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v101 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v101 - v45;
  uint64_t v47 = type metadata accessor for DetailCondition();
  uint64_t v48 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v50 = (char *)&v101 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for ConditionDetailInput.Input(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v50, a1 + *(int *)(v51 + 32), v47);
  int v52 = (*(uint64_t (**)(char *, uint64_t))(v48 + 88))(v50, v47);
  if (v52 == enum case for DetailCondition.conditions(_:))
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
    return 0;
  }
  if (v52 == enum case for DetailCondition.humidity(_:))
  {
    type metadata accessor for WeatherData(0);
    WeatherDataModel.dailyForecast.getter();
    Location.timeZone.getter();
    Forecast<>.humidity(for:timeZone:)();
    char v56 = v55;
    (*(void (**)(char *, uint64_t))(v149 + 8))(v40, v38);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v46, v41);
    if ((v56 & 1) == 0)
    {
      sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
      uint64_t v57 = (void *)static NSNumberFormatter.percent.getter();
      Class isa = Double._bridgeToObjectiveC()().super.super.isa;
      id v59 = [v57 stringFromNumber:isa];

      if (!v59) {
        return 0;
      }
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v53;
    }
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    sub_1002102B0(v69, (uint64_t)qword_100F51ED0);
    uint64_t v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v70, v71))
    {
      os_log_type_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "Failed to get dayWeather when make comparison chart value", v72, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  if (v52 == enum case for DetailCondition.pressure(_:)) {
    return 0;
  }
  if (v52 == enum case for DetailCondition.precipitationTotal(_:))
  {
    Location.timeZone.getter();
    uint64_t v60 = v148;
    static Calendar.currentCalendar(with:)();
    (*(void (**)(char *, uint64_t))(v149 + 8))(v40, v38);
    uint64_t v61 = a1 + *(int *)(v51 + 68);
    uint64_t v62 = v150;
    uint64_t v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v150 + 16))(v44, v61, v41);
    __chkstk_darwin(v63);
    BOOL v64 = v151;
    *(&v101 - 2) = v60;
    *(&v101 - 1) = v64;
    uint64_t v65 = (uint64_t)v142;
    sub_10019AB54();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v41);
    uint64_t v66 = v146;
    if (_s7Weather24LocationCompositionStateOwet_0(v65, 1, v146) != 1)
    {
      uint64_t v83 = v132;
      (*(void (**)(char *, uint64_t, uint64_t))(v132 + 32))(v143, v65, v66);
      int v84 = v134;
      DayWeather.precipitationAmount.getter();
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      uint64_t v85 = v137;
      Measurement<>.convertAndRoundPrecipitation(unitManager:)();
      swift_release();
      uint64_t v53 = RoundedPrecipitation.formattedString.getter();
      uint64_t v86 = v133;
      RoundedPrecipitation.measurement.getter();
      uint64_t v87 = v136;
      Measurement.value.getter();
      Swift::String v88 = *(void (**)(char *, uint64_t))(v135 + 8);
      v88(v86, v87);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v85, v139);
      v88(v84, v87);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v143, v66);
      (*(void (**)(char *, uint64_t))(v144 + 8))(v148, v145);
      return v53;
    }
    (*(void (**)(char *, uint64_t))(v144 + 8))(v60, v145);
    uint64_t v67 = &qword_100E6B6C8;
    uint64_t v68 = v65;
    goto LABEL_29;
  }
  if (v52 == enum case for DetailCondition.uvIndex(_:))
  {
    uint64_t v73 = v131;
    sub_10006DF38(v141, v131, &qword_100E6BCB0);
    uint64_t v74 = v147;
    if (_s7Weather24LocationCompositionStateOwet_0(v73, 1, v147) != 1)
    {
      uint64_t v75 = v140;
      uint64_t v76 = v117;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 32))(v117, v73, v74);
      ExtremaResult.maxValue.getter();
      double v152 = round(v77);
      static Locale.autoupdatingCurrent.getter();
      sub_100146A70();
      uint64_t v78 = v119;
      FloatingPointFormatStyle.init(locale:)();
      uint64_t v79 = v121;
      static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
      uint64_t v80 = v120;
      uint64_t v81 = v123;
      FloatingPointFormatStyle.precision(_:)();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v79, v125);
      uint64_t v82 = *(void (**)(char *, uint64_t))(v122 + 8);
      v82(v78, v81);
      sub_1001246C8(&qword_100E6ED28, &qword_100E6ED20);
      BinaryFloatingPoint.formatted<A>(_:)();
      v82(v80, v81);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v74);
      return v153;
    }
    goto LABEL_28;
  }
  uint64_t v89 = v147;
  if (v52 == enum case for DetailCondition.visibility(_:))
  {
    uint64_t v73 = v115;
    sub_10006DF38(v141, v115, &qword_100E6BCB0);
    if (_s7Weather24LocationCompositionStateOwet_0(v73, 1, v89) != 1)
    {
      uint64_t v90 = v140;
      uint64_t v91 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 32))(v101, v73, v89);
      ExtremaResult.maxValue.getter();
      sub_1001B1E64((void *)(v103 + 176), *(void *)(v103 + 200));
      uint64_t v53 = dispatch thunk of VisibilityPlatterStringBuilderType.makeVisibilityWithUnitString(visibility:units:)();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v89);
      return v53;
    }
    goto LABEL_28;
  }
  if (v52 == enum case for DetailCondition.wind(_:))
  {
    uint64_t v73 = v116;
    sub_10006DF38(v127, v116, &qword_100E6BCB0);
    if (_s7Weather24LocationCompositionStateOwet_0(v73, 1, v89) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 32))(v126, v73, v89);
      ExtremaResult.maxValue.getter();
      ConditionUnits.windGust.getter();
      sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
      Measurement.init(value:unit:)();
      uint64_t v92 = v105;
      uint64_t v93 = v104;
      uint64_t v94 = v107;
      (*(void (**)(char *, void, uint64_t))(v105 + 104))(v104, enum case for NSUnitSpeed.WeatherFormatUsage.windGust(_:), v107);
      uint64_t v95 = v106;
      _s7Weather24LocationCompositionStateOwst_0(v106, 1, 1, v102);
      static Set<>.full.getter();
      static WeatherFormatStyle<>.weather(_:usage:locale:)();
      swift_bridgeObjectRelease();
      sub_100178110(v95, &qword_100E63730);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v94);
      uint64_t v96 = v113;
      uint64_t v97 = v112;
      uint64_t v98 = v114;
      (*(void (**)(char *, void, uint64_t))(v113 + 104))(v112, enum case for WeatherFormatPlaceholder.none(_:), v114);
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      sub_10035E1E4(&qword_100E6ECD0, (void (*)(uint64_t))&type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
      uint64_t v99 = v109;
      uint64_t v100 = v111;
      uint64_t v53 = Measurement.formatted<A>(_:placeholder:unitManager:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v98);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v129, v100);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v128, v99);
      (*(void (**)(char *, uint64_t))(v140 + 8))(v126, v89);
      return v53;
    }
LABEL_28:
    uint64_t v67 = &qword_100E6BCB0;
    uint64_t v68 = v73;
LABEL_29:
    sub_100178110(v68, v67);
    return 0;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10035DB68()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayWeather.date.getter();
  char v4 = Calendar.isDate(_:inSameDayAs:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_10035DC64@<X0>(Swift::String *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Beaufort.Category.Range();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Beaufort.Category();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E6D0A8);
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  __chkstk_darwin(v9);
  uint64_t v33 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
  static NSUnitSpeed.beaufort.getter();
  Measurement.init(value:unit:)();
  Measurement<>.beaufortCategory(useExtendedScale:)();
  uint64_t v38 = Beaufort.Category.level.getter();
  sub_10035E0C4();
  Swift::String v11 = BinaryInteger.formatted()();
  object = v11._object;
  uint64_t countAndFlagsBits = v11._countAndFlagsBits;
  uint64_t v12 = Beaufort.Category.name.getter();
  uint64_t v29 = v13;
  uint64_t v30 = v12;
  Beaufort.Category.range(in:)();
  Swift::String v14 = Beaufort.Category.Range.formattedRange(forAccessibility:)(0);
  uint64_t v27 = v14._object;
  uint64_t v28 = v14._countAndFlagsBits;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v5, v2);
  Beaufort.Category.range(in:)();
  Swift::String v16 = Beaufort.Category.Range.formattedRange(forAccessibility:includeUnit:)(0, 1);
  uint64_t v25 = v16._object;
  uint64_t v26 = v16._countAndFlagsBits;
  v15(v5, v2);
  Beaufort.Category.range(in:)();
  Swift::String v17 = Beaufort.Category.Range.formattedRange(forAccessibility:)(1);
  v15(v5, v2);
  uint64_t v18 = Beaufort.Category.color.getter();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v33, v35);
  uint64_t v20 = object;
  a1->_uint64_t countAndFlagsBits = countAndFlagsBits;
  a1->_object = v20;
  uint64_t v21 = v29;
  a1[1]._uint64_t countAndFlagsBits = v30;
  a1[1]._object = v21;
  uint64_t v22 = v27;
  a1[2]._uint64_t countAndFlagsBits = v28;
  a1[2]._object = v22;
  uint64_t v23 = v25;
  a1[3]._uint64_t countAndFlagsBits = v26;
  a1[3]._object = v23;
  a1[4] = v17;
  a1[5]._uint64_t countAndFlagsBits = v18;
  return result;
}

uint64_t sub_10035DFC4()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 176);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 216);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 256);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 296);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 336);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 376);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 416);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 456);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 496);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 536);
  return v0;
}

uint64_t sub_10035E04C()
{
  sub_10035DFC4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConditionDetailPlatterViewModelFactory()
{
  return self;
}

uint64_t sub_10035E0A4()
{
  return sub_1003578E0();
}

unint64_t sub_10035E0C4()
{
  unint64_t result = qword_100E6ECD8;
  if (!qword_100E6ECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ECD8);
  }
  return result;
}

uint64_t sub_10035E110()
{
  return sub_10035AC2C() & 1;
}

uint64_t sub_10035E130(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE1(a8) != 255) {
    return sub_10033A9E8(result, a2, a3, a4, a5, a6, a7, a8, BYTE1(a8) & 1);
  }
  return result;
}

uint64_t sub_10035E168(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10035E1AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (BYTE1(a8) != 255) {
    return sub_10033AB48(result, a2, a3, a4, a5, a6, a7, a8, BYTE1(a8) & 1);
  }
  return result;
}

uint64_t sub_10035E1E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10035E22C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10035E280()
{
  return sub_10035DB68() & 1;
}

uint64_t sub_10035E2A0()
{
  return swift_deallocObject();
}

uint64_t sub_10035E2B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10035E304(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10035E358()
{
  return *(void *)(v0 - 208);
}

void *sub_10035E36C(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E639E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v14[1] = v1;
    uint64_t v15 = _swiftEmptyArrayStorage;
    sub_1007F3594();
    uint64_t v8 = v15;
    uint64_t v9 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    do
    {
      SavedLocation.location.getter();
      uint64_t v15 = v8;
      unint64_t v12 = v8[2];
      if (v12 >= v8[3] >> 1)
      {
        sub_1007F3594();
        uint64_t v8 = v15;
      }
      v8[2] = v12 + 1;
      sub_100360330((uint64_t)v6, (uint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_10035E534(__int16 *a1, __int16 *a2)
{
  uint64_t v5 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6EEC0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_10012B938();
  uint64_t v13 = sub_10017DF08(&qword_100E639E8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  Swift::String v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v50 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v50 - v20;
  __int16 v22 = *a1;
  __int16 v23 = *a2;
  int v24 = *a2;
  if (*a1 == 2)
  {
    if (v24 != 2) {
      goto LABEL_43;
    }
  }
  else
  {
    if (v24 == 2)
    {
LABEL_43:
      char v25 = 0;
      return v25 & 1;
    }
    char v25 = 0;
    BOOL v26 = (v22 & 1) == 0;
    BOOL v27 = (v22 & 0x100) == 0;
    if (v26 == (v23 & 1) || ((v27 ^ ((unsigned __int16)(v23 & 0x100) >> 8)) & 1) == 0) {
      return v25 & 1;
    }
  }
  sub_100126FA8();
  if ((v28 & 1) == 0) {
    goto LABEL_43;
  }
  sub_100126FA8();
  if ((v29 & 1) == 0 || (sub_1001197F8(*((unsigned __int8 *)a1 + 24), *((unsigned __int8 *)a2 + 24)) & 1) == 0) {
    goto LABEL_43;
  }
  char v30 = *((unsigned char *)a1 + 25);
  LODWORD(v52) = *((unsigned __int8 *)a2 + 25);
  unint64_t v51 = LocationAuthorizationState.rawValue.getter(v30);
  uint64_t v53 = v31;
  BOOL v33 = v51 == LocationAuthorizationState.rawValue.getter(v52) && v53 == v32;
  if (v33)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v50 = v32;
    LODWORD(v52) = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v25 = 0;
    if ((v52 & 1) == 0) {
      return v25 & 1;
    }
  }
  uint64_t v53 = v7;
  uint64_t v34 = type metadata accessor for NotificationSettingsInput();
  sub_1001262FC((uint64_t)a1 + *(int *)(v34 + 36), (uint64_t)v21, &qword_100E639E8);
  uint64_t v52 = v34;
  sub_1001262FC((uint64_t)a2 + *(int *)(v34 + 36), (uint64_t)v19, &qword_100E639E8);
  uint64_t v35 = v2 + *(int *)(v11 + 48);
  sub_1001262FC((uint64_t)v21, v2, &qword_100E639E8);
  sub_1001262FC((uint64_t)v19, v35, &qword_100E639E8);
  sub_100162F8C(v2);
  if (!v33)
  {
    sub_1001262FC(v2, (uint64_t)v16, &qword_100E639E8);
    sub_100162F8C(v35);
    if (!v36)
    {
      uint64_t v37 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v10, v35, v5);
      sub_1003602E8((unint64_t *)&qword_100E639A8, 255, (void (*)(uint64_t))&type metadata accessor for Location);
      LODWORD(v51) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v37 + 8);
      v38(v10, v5);
      sub_1001781AC((uint64_t)v19, &qword_100E639E8);
      sub_1001781AC((uint64_t)v21, &qword_100E639E8);
      v38(v16, v5);
      sub_1001781AC(v2, &qword_100E639E8);
      if ((v51 & 1) == 0) {
        goto LABEL_43;
      }
      goto LABEL_27;
    }
    sub_1001781AC((uint64_t)v19, &qword_100E639E8);
    sub_1001781AC((uint64_t)v21, &qword_100E639E8);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v5);
    goto LABEL_25;
  }
  sub_1001781AC((uint64_t)v19, &qword_100E639E8);
  sub_1001781AC((uint64_t)v21, &qword_100E639E8);
  sub_100162F8C(v35);
  if (!v33)
  {
LABEL_25:
    sub_1001781AC(v2, &qword_100E6EEC0);
    goto LABEL_43;
  }
  sub_1001781AC(v2, &qword_100E639E8);
LABEL_27:
  uint64_t v39 = v52;
  sub_100126FA8();
  if ((v40 & 1) == 0) {
    goto LABEL_43;
  }
  sub_10019E8EC();
  if (!v33) {
    goto LABEL_43;
  }
  sub_10019E8EC();
  if (!v33) {
    goto LABEL_43;
  }
  sub_10019E8EC();
  if (!v33 || (sub_100222164(*((unsigned char *)a1 + *(int *)(v39 + 56)), *((unsigned char *)a2 + *(int *)(v39 + 56))) & 1) == 0) {
    goto LABEL_43;
  }
  uint64_t v41 = *(int *)(v39 + 60);
  uint64_t v42 = *(void *)((char *)a1 + v41);
  uint64_t v43 = *(void *)((char *)a1 + v41 + 8);
  uint64_t v44 = (void *)((char *)a2 + v41);
  BOOL v45 = v42 == *v44 && v43 == v44[1];
  if (v45 || (v46 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v25 = 0, (v46 & 1) != 0))
  {
    sub_10011AD08();
    if (v47)
    {
      sub_10011A5D0();
      if (v48)
      {
        sub_10019E8EC();
        if (v33)
        {
          char v25 = *((unsigned char *)a1 + *(int *)(v52 + 68)) ^ *((unsigned char *)a2 + *(int *)(v52 + 68)) ^ 1;
          return v25 & 1;
        }
      }
    }
    goto LABEL_43;
  }
  return v25 & 1;
}

__n128 sub_10035EA78@<Q0>(__int16 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, __n128 a13, unint64_t a14, unint64_t a15, char a16, char a17)
{
  *(_WORD *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 25) = a5;
  uint64_t v21 = (int *)type metadata accessor for NotificationSettingsInput();
  sub_100360330(a6, a9 + v21[9]);
  *(void *)(a9 + v21[10]) = a7;
  *(unsigned char *)(a9 + v21[11]) = a8;
  *(unsigned char *)(a9 + v21[12]) = a10;
  *(unsigned char *)(a9 + v21[13]) = a11;
  *(unsigned char *)(a9 + v21[14]) = a12;
  __int16 v22 = (__n128 *)(a9 + v21[15]);
  __n128 result = a13;
  *__int16 v22 = a13;
  v22[1].n128_u64[0] = a14;
  v22[1].n128_u64[1] = a15;
  *(unsigned char *)(a9 + v21[16]) = a16;
  *(unsigned char *)(a9 + v21[17]) = a17;
  return result;
}

uint64_t sub_10035EB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  v97[2] = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  sub_100162EF8();
  uint64_t v112 = v5;
  sub_1001626D4();
  __chkstk_darwin(v6);
  uint64_t v118 = (uint64_t)v97 - v7;
  sub_1001626D4();
  __chkstk_darwin(v8);
  uint64_t v107 = (uint64_t)v97 - v9;
  type metadata accessor for NotificationSubscription.Location();
  sub_100179C0C();
  uint64_t v120 = v11;
  uint64_t v121 = v10;
  __chkstk_darwin(v10);
  sub_10012B938();
  uint64_t v12 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v117 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  uint64_t v111 = (char *)v97 - v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  __int16 v119 = (char *)v97 - v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  __int16 v23 = (char *)v97 - v22;
  uint64_t v24 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v24 - 8);
  sub_100162EF8();
  uint64_t v98 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v110 = (uint64_t)v97 - v27;
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v28);
  char v30 = (unsigned __int8 *)v97 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002C0A38(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (v30[1]) {
      int v31 = 256;
    }
    else {
      int v31 = 0;
    }
    int v32 = v31 | *v30;
  }
  else
  {
    sub_100360398((uint64_t)v30, (void (*)(void))type metadata accessor for ModalViewState);
    int v32 = 2;
  }
  int v105 = v32;
  unint64_t v33 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  unint64_t v104 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  unint64_t v34 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  unint64_t v35 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  v97[3] = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  sub_1001262FC(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v110, (uint64_t *)&unk_100EADD50);
  unint64_t v103 = v33;
  swift_bridgeObjectRetain();
  unint64_t v102 = v34;
  swift_bridgeObjectRetain();
  unint64_t v101 = v35;
  swift_bridgeObjectRetain();
  uint64_t v36 = swift_retain();
  int v100 = sub_10069837C(v36);
  uint64_t v108 = a1;
  uint64_t v37 = v112;
  if ((v100 & 0xFE) == 2)
  {
    uint64_t v38 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
    if (*(unsigned char *)(v38 + *(int *)(type metadata accessor for NotificationsOptInState() + 52)) == 1)
    {
      int v99 = 1;
      a1 = v108;
    }
    else
    {
      if (qword_100E622A0 != -1) {
        swift_once();
      }
      sub_1003602E8(&qword_100E6EEC8, v39, (void (*)(uint64_t))type metadata accessor for NotificationSettingsInputFactory);
      Configurable.setting<A>(_:)();
      int v99 = v123 ^ 1;
      a1 = v108;
      uint64_t v37 = v112;
    }
  }
  else
  {
    int v99 = 0;
  }
  uint64_t v109 = (unsigned __int8 *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  uint64_t v40 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
  uint64_t v41 = *(void *)(v40 + 16);
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v122 = v12;
  if (v41)
  {
    uint64_t v123 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100181110();
    uint64_t v43 = v120 + 16;
    uint64_t v115 = *(unsigned __int8 **)(v120 + 16);
    sub_100129058();
    v97[1] = v40;
    uint64_t v45 = v40 + v44;
    uint64_t v46 = *(void *)(v43 + 56);
    uint64_t v113 = v14 + 32;
    uint64_t v114 = v46;
    uint64_t v116 = (void (*)(uint64_t, uint64_t, void *))v23;
    do
    {
      char v47 = v121;
      ((void (*)(uint64_t, uint64_t, void *))v115)(v2, v45, v121);
      NotificationSubscription.Location.location.getter();
      (*(void (**)(uint64_t, void *))(v43 - 8))(v2, v47);
      uint64_t v42 = v123;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001D1850();
        uint64_t v42 = v123;
      }
      unint64_t v48 = v42[2];
      if (v48 >= v42[3] >> 1)
      {
        sub_1001A1D40();
        uint64_t v42 = v123;
      }
      v42[2] = v48 + 1;
      sub_100129058();
      uint64_t v50 = (char *)v42 + v49 + *(void *)(v14 + 72) * v48;
      uint64_t v12 = v122;
      (*(void (**)(char *, void, uint64_t))(v14 + 32))(v50, v116, v122);
      uint64_t v123 = v42;
      v45 += v114;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    uint64_t v37 = v112;
  }
  uint64_t v51 = *((void *)v109 + 2);
  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = _swiftEmptyArrayStorage;
  if (v52)
  {
    uint64_t v123 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100181110();
    sub_100129058();
    uint64_t v113 = v51;
    uint64_t v55 = v51 + v54;
    uint64_t v115 = *(unsigned __int8 **)(v56 + 56);
    uint64_t v116 = v57;
    uint64_t v120 = v56;
    uint64_t v58 = (void (**)(uint64_t, void *))(v56 - 8);
    uint64_t v114 = v14 + 32;
    do
    {
      id v59 = v121;
      v116(v2, v55, v121);
      NotificationSubscription.Location.location.getter();
      (*v58)(v2, v59);
      uint64_t v53 = v123;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001D1850();
        uint64_t v53 = v123;
      }
      unint64_t v60 = v53[2];
      uint64_t v61 = v119;
      if (v60 >= v53[3] >> 1)
      {
        sub_1001A1D40();
        uint64_t v61 = v119;
        uint64_t v53 = v123;
      }
      v53[2] = v60 + 1;
      sub_100129058();
      uint64_t v63 = (char *)v53 + v62 + *(void *)(v14 + 72) * v60;
      uint64_t v12 = v122;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v63, v61, v122);
      uint64_t v123 = v53;
      v55 += (uint64_t)v115;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
    uint64_t v37 = v112;
  }
  int v64 = *v109;
  uint64_t v65 = (unsigned __int8 *)(v108 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment);
  swift_beginAccess();
  int v66 = v65[1];
  uint64_t v67 = v98;
  sub_1001262FC(v110, v98, (uint64_t *)&unk_100EADD50);
  uint64_t v68 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0(v67, 1, v68) == 1)
  {
    sub_1001781AC(v67, (uint64_t *)&unk_100EADD50);
    _s7Weather24LocationCompositionStateOwst_0(v107, 1, 1, v12);
  }
  else
  {
    CurrentLocation.location.getter();
    sub_100360398(v67, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  type metadata accessor for LocationsState();
  uint64_t v69 = swift_bridgeObjectRetain();
  uint64_t v70 = sub_10035E36C(v69);
  swift_bridgeObjectRelease();
  uint64_t v71 = v70[2];
  if (v71)
  {
    uint64_t v115 = v65;
    LODWORD(v116) = v66;
    LODWORD(v119) = v64;
    sub_100129058();
    uint64_t v73 = (uint64_t)v70 + v72;
    uint64_t v75 = *(void *)(v74 + 72);
    uint64_t v76 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
    uint64_t v114 = (uint64_t)v70;
    swift_bridgeObjectRetain();
    uint64_t v120 = v75;
    uint64_t v121 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v77 = v118;
      sub_1001262FC(v73, v118, &qword_100E639E8);
      sub_100360330(v77, v37);
      uint64_t v78 = v122;
      if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v122) == 1)
      {
        sub_1001781AC(v37, &qword_100E639E8);
      }
      else
      {
        uint64_t v79 = v14;
        uint64_t v80 = *v76;
        uint64_t v81 = v111;
        (*v76)(v111, v37, v78);
        v80(v117, (uint64_t)v81, v78);
        uint64_t v82 = v121;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v82 = (void *)sub_1001D262C(0, v82[2] + 1, 1, (uint64_t)v82);
        }
        unint64_t v84 = v82[2];
        unint64_t v83 = v82[3];
        uint64_t v121 = v82;
        uint64_t v14 = v79;
        if (v84 >= v83 >> 1) {
          uint64_t v121 = (void *)sub_1001D262C(v83 > 1, v84 + 1, 1, (uint64_t)v121);
        }
        uint64_t v75 = v120;
        v121[2] = v84 + 1;
        sub_100129058();
        v80((char *)(v86 + v85 + *(void *)(v14 + 72) * v84), (uint64_t)v117, v122);
        uint64_t v37 = v112;
      }
      v73 += v75;
      --v71;
    }
    while (v71);
    swift_bridgeObjectRelease_n();
    LOBYTE(v64) = (_BYTE)v119;
    LOBYTE(v66) = (_BYTE)v116;
    uint64_t v65 = v115;
    uint64_t v87 = v121;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v87 = _swiftEmptyArrayStorage;
  }
  sub_1001781AC(v110, (uint64_t *)&unk_100EADD50);
  uint64_t v88 = v108 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
  uint64_t v89 = type metadata accessor for NotificationsOptInState();
  char v90 = *(unsigned char *)(v88 + *(int *)(v89 + 56));
  LOBYTE(v88) = *(unsigned char *)(v88 + *(int *)(v89 + 60));
  uint64_t v91 = type metadata accessor for EnvironmentState();
  v96.n128_u64[1] = v103;
  v96.n128_u64[0] = v104;
  char v95 = v88;
  uint64_t v92 = v106;
  sub_10035EA78(v105, (uint64_t)v42, (uint64_t)v53, v64, v66, v107, (uint64_t)v87, v90, v106, v95, v99 & 1, v100, v96, v102, v101, v65[*(int *)(v91 + 60)], v109[24]);
  uint64_t v93 = type metadata accessor for NotificationSettingsInput();
  return _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v93);
}

uint64_t type metadata accessor for NotificationSettingsInputFactory()
{
  return self;
}

void *sub_10035F66C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    uint64_t v8 = a3[9];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Location();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E639E8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v4 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v16 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    uint64_t v17 = (void *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v18[3];
    v17[2] = v18[2];
    _OWORD v17[3] = v20;
    uint64_t v21 = a3[17];
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10035F848(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for Location();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10035F914(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Location();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E639E8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v16[3];
  v15[2] = v16[2];
  v15[3] = v18;
  uint64_t v19 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10035FAA0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Location();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E639E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v14 = a3[15];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  *uint64_t v15 = *(void *)(a2 + v14);
  v15[1] = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[3] = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_10035FD10(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E639E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  return a1;
}

uint64_t sub_10035FE60(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Location();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E639E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[15];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *uint64_t v17 = *(void *)(a2 + v16);
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v17[2] = *(void *)(v18 + 16);
  swift_bridgeObjectRelease();
  _OWORD v17[3] = *(void *)(v18 + 24);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  return a1;
}

uint64_t sub_100360084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100360098);
}

uint64_t sub_100360098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E639E8);
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100360124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100360138);
}

uint64_t sub_100360138(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E639E8);
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for NotificationSettingsInput()
{
  uint64_t result = qword_100E6EE50;
  if (!qword_100E6EE50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100360204()
{
  sub_100011588();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1003602E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100360330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100360398(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void *sub_1003603F0(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E749B0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)((char *)v4 + v14);
    uint64_t v17 = (void *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (char *)v4 + v15;
    uint64_t v20 = (char *)a2 + v15;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v19, v20, v11);
    uint64_t v22 = a3[8];
    __int16 v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v22, 1, v11))
    {
      uint64_t v25 = sub_10017DF08(&qword_100E749B0);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v21(v23, v24, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v11);
    }
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return v4;
}

uint64_t sub_100360614(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v8(a1 + a2[7], v5);
  uint64_t v6 = a1 + a2[8];
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v5);
  if (!result)
  {
    return v8(v6, v5);
  }
  return result;
}

void *sub_100360744(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (char *)a1 + v13;
  uint64_t v18 = (char *)a2 + v13;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v17, v18, v10);
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v20, 1, v10))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E749B0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v19(v21, v22, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v10);
  }
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

char *sub_100360918(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for URL();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v9 - 8);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v17 + 24);
  v18(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v19], 1, v9);
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v9);
  if (!v22)
  {
    if (!v23)
    {
      v18(v20, v21, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v9);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = sub_10017DF08(&qword_100E749B0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v21, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v9);
LABEL_13:
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_100360C00(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    uint64_t v11 = *(void *)(v9 - 8);
  }
  else
  {
    uint64_t v11 = *(void *)(v9 - 8);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v13(&a1[v12], &a2[v12], v9);
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v14], 1, v9))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E749B0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v9);
  }
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_100360DC0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for URL();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v10 - 8);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 40);
  v21(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v22 = a3[8];
  int v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  int v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v22], 1, v10);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v10);
  if (!v25)
  {
    if (!v26)
    {
      v21(v23, v24, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v10);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = sub_10017DF08(&qword_100E749B0);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v24, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v10);
LABEL_13:
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

uint64_t sub_100361088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036109C);
}

uint64_t sub_10036109C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10017DF08(&qword_100E749B0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(int *)(a3 + 28);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_10036114C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100361160);
}

uint64_t sub_100361160(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10017DF08(&qword_100E749B0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

void *sub_10036120C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E749B0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v15 = v8[6];
      uint64_t v16 = (void *)((char *)a1 + v15);
      uint64_t v17 = (void *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v8[7];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v20, v21, v12);
      uint64_t v23 = v8[8];
      uint64_t v24 = (char *)a1 + v23;
      int v25 = (char *)a2 + v23;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v23, 1, v12))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E749B0);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        v22(v24, v25, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v12);
      }
      *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100361484(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v4 = a1 + v3[5];
    uint64_t v5 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v7(a1 + v3[7], v5);
    uint64_t v6 = a1 + v3[8];
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v5);
    if (!result)
    {
      return v7(v6, v5);
    }
  }
  return result;
}

void *sub_1003615C8(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E749B0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v13 = v7[6];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v7[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v20(v18, v19, v11);
    uint64_t v21 = v7[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v21, 1, v11))
    {
      uint64_t v24 = sub_10017DF08(&qword_100E749B0);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v20(v22, v23, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v11);
    }
    *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1003617FC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100363108((uint64_t)a1, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v6 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_10017DF08(&qword_100E749B0);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      }
      uint64_t v12 = v6[6];
      uint64_t v13 = (void *)((char *)a1 + v12);
      uint64_t v14 = (void *)((char *)a2 + v12);
      *uint64_t v13 = *v14;
      v13[1] = v14[1];
      uint64_t v15 = v6[7];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v17, v10);
      uint64_t v19 = v6[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v19, 1, v10))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E749B0);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        v18(v20, v21, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v10);
      }
      *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *sub_100361A64(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v6 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v7 = v6[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E749B0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      uint64_t v12 = *(void *)(v10 - 8);
    }
    else
    {
      uint64_t v12 = *(void *)(v10 - 8);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v13(&a1[v6[7]], &a2[v6[7]], v10);
    uint64_t v14 = v6[8];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v14], 1, v10))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E749B0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v10);
    }
    a1[v6[9]] = a2[v6[9]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_100361C84(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100363108((uint64_t)a1, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v6 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_10017DF08(&qword_100E749B0);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
        uint64_t v12 = *(void *)(v10 - 8);
      }
      else
      {
        uint64_t v12 = *(void *)(v10 - 8);
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      }
      *(_OWORD *)&a1[v6[6]] = *(_OWORD *)&a2[v6[6]];
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(&a1[v6[7]], &a2[v6[7]], v10);
      uint64_t v14 = v6[8];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v14], 1, v10))
      {
        uint64_t v17 = sub_10017DF08(&qword_100E749B0);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v10);
      }
      a1[v6[9]] = a2[v6[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100361EC8()
{
  return sub_100362FCC(&qword_100E6F018, (void (*)(uint64_t))type metadata accessor for NewsArticleComponentViewModel);
}

uint64_t sub_100361F10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_10017E23C();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1003630A4(v1, v7 - v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100363160(v8, v1);
    uint64_t v9 = v1 + *(int *)(v3 + 28);
    uint64_t v10 = type metadata accessor for URL();
    sub_100162E4C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v9, v10);
    sub_100363108(v1, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
    uint64_t v12 = a1;
    uint64_t v13 = 0;
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v14 = type metadata accessor for URL();
    uint64_t v12 = a1;
    uint64_t v13 = 1;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v12, v13, 1, v14);
}

uint64_t sub_100362068()
{
  uint64_t v1 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NewsArticleComponentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001A0598(v6, v9);
  uint64_t v7 = 0;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100363160(v0, (uint64_t)v4);
    uint64_t v7 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_100363108((uint64_t)v4, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
  }
  return v7;
}

uint64_t sub_100362174()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NewsArticleComponentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003630A4(v1, (uint64_t)v8);
  uint64_t v9 = 0;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100363160((uint64_t)v8, (uint64_t)v5);
    uint64_t v9 = *v5;
    swift_bridgeObjectRetain();
    sub_100363108((uint64_t)v5, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
  }
  return v9;
}

uint64_t sub_100362288(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10017E23C();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10016278C();
  uint64_t v10 = (void *)(v8 - v9);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E6F028);
  uint64_t v15 = sub_100109308(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = &v18[*(int *)(v16 + 56)];
  sub_1003630A4(a1, (uint64_t)v18);
  sub_1003630A4(a2, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1003630A4((uint64_t)v18, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v21 = *v13 ^ *v19;
      sub_100363108((uint64_t)v18, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
      char v20 = v21 ^ 1;
      return v20 & 1;
    }
LABEL_7:
    sub_1001781AC((uint64_t)v18, &qword_100E6F028);
    char v20 = 0;
    return v20 & 1;
  }
  sub_1003630A4((uint64_t)v18, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100363108((uint64_t)v10, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
    goto LABEL_7;
  }
  sub_100363160((uint64_t)v19, (uint64_t)v2);
  char v20 = sub_1003625E4(v10, v2);
  sub_100363108((uint64_t)v2, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
  sub_100363108((uint64_t)v10, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
  sub_100363108((uint64_t)v18, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
  return v20 & 1;
}

void sub_1003624D0()
{
  uint64_t v1 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NewsArticleComponentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001A0598(v6, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100363160((uint64_t)v0, (uint64_t)v4);
    Hasher._combine(_:)(1uLL);
    sub_100362BF8();
    sub_100363108((uint64_t)v4, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
  }
  else
  {
    Swift::UInt8 v7 = *v0;
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v7);
  }
}

uint64_t sub_1003625E4(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v68 = v9 - v8;
  uint64_t v69 = sub_10017DF08(&qword_100E6D578);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = &v59[-v15];
  uint64_t v17 = sub_10017DF08(&qword_100E749B0);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_10016278C();
  uint64_t v64 = v19 - v20;
  uint64_t v22 = __chkstk_darwin(v21);
  int v66 = &v59[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v67 = &v59[-v25];
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = &v59[-v27];
  uint64_t v29 = __chkstk_darwin(v26);
  int v31 = &v59[-v30];
  __chkstk_darwin(v29);
  unint64_t v33 = &v59[-v32];
  BOOL v34 = *a1 == *a2 && a1[1] == a2[1];
  if (!v34)
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v36 = 0;
    if ((v35 & 1) == 0) {
      return v36 & 1;
    }
  }
  uint64_t v37 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  sub_1000F32E4((uint64_t)a1 + *(int *)(v37 + 20), (uint64_t)v33);
  uint64_t v65 = v37;
  sub_1000F32E4((uint64_t)a2 + *(int *)(v37 + 20), (uint64_t)v31);
  uint64_t v38 = (uint64_t)&v16[*(int *)(v69 + 48)];
  sub_1000F32E4((uint64_t)v33, (uint64_t)v16);
  sub_1000F32E4((uint64_t)v31, v38);
  sub_100162F8C((uint64_t)v16);
  if (v34)
  {
    sub_1001781AC((uint64_t)v31, &qword_100E749B0);
    sub_1001781AC((uint64_t)v33, &qword_100E749B0);
    sub_100162F8C(v38);
    if (v34)
    {
      sub_1001781AC((uint64_t)v16, &qword_100E749B0);
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v40 = (uint64_t)v16;
    goto LABEL_15;
  }
  sub_1000F32E4((uint64_t)v16, (uint64_t)v28);
  sub_100162F8C(v38);
  if (v39)
  {
    sub_1001781AC((uint64_t)v31, &qword_100E749B0);
    sub_1001781AC((uint64_t)v33, &qword_100E749B0);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v28, v4);
    goto LABEL_14;
  }
  uint64_t v61 = a1;
  sub_1001627D4();
  v41();
  sub_100362FCC(qword_100E6D3E8, (void (*)(uint64_t))&type metadata accessor for URL);
  int v60 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v62 = v13;
  uint64_t v63 = a2;
  uint64_t v42 = *(void (**)(void))(v6 + 8);
  a1 = v61;
  sub_10017A008();
  v42();
  sub_1001781AC((uint64_t)v31, &qword_100E749B0);
  sub_1001781AC((uint64_t)v33, &qword_100E749B0);
  sub_10017A008();
  v42();
  uint64_t v13 = v62;
  a2 = v63;
  sub_1001781AC((uint64_t)v16, &qword_100E749B0);
  if ((v60 & 1) == 0) {
    goto LABEL_34;
  }
LABEL_17:
  uint64_t v43 = v65;
  uint64_t v44 = *(int *)(v65 + 24);
  uint64_t v45 = *(void *)((char *)a1 + v44);
  uint64_t v46 = *(void *)((char *)a1 + v44 + 8);
  char v47 = (void *)((char *)a2 + v44);
  BOOL v48 = v45 == *v47 && v46 == v47[1];
  if (v48 || (v49 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v36 = 0, (v49 & 1) != 0))
  {
    if ((static URL.== infix(_:_:)() & 1) == 0) {
      goto LABEL_34;
    }
    uint64_t v50 = v67;
    sub_1000F32E4((uint64_t)a1 + *(int *)(v43 + 32), (uint64_t)v67);
    uint64_t v51 = v66;
    sub_1000F32E4((uint64_t)a2 + *(int *)(v43 + 32), (uint64_t)v66);
    uint64_t v52 = v13 + *(int *)(v69 + 48);
    sub_1000F32E4((uint64_t)v50, v13);
    sub_1000F32E4((uint64_t)v51, v52);
    sub_100162F8C(v13);
    if (v34)
    {
      sub_1001781AC((uint64_t)v51, &qword_100E749B0);
      sub_1001781AC((uint64_t)v50, &qword_100E749B0);
      sub_100162F8C(v52);
      if (v34)
      {
        sub_1001781AC(v13, &qword_100E749B0);
LABEL_33:
        char v36 = *((unsigned char *)a1 + *(int *)(v43 + 36)) ^ *((unsigned char *)a2 + *(int *)(v43 + 36)) ^ 1;
        return v36 & 1;
      }
    }
    else
    {
      uint64_t v53 = v64;
      sub_1000F32E4(v13, v64);
      sub_100162F8C(v52);
      if (!v54)
      {
        sub_1001627D4();
        v55();
        sub_100362FCC(qword_100E6D3E8, (void (*)(uint64_t))&type metadata accessor for URL);
        LODWORD(v69) = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v56 = (uint64_t)v51;
        uint64_t v57 = *(void (**)(void))(v6 + 8);
        sub_10017A008();
        v57();
        sub_1001781AC(v56, &qword_100E749B0);
        sub_1001781AC((uint64_t)v50, &qword_100E749B0);
        sub_10017A008();
        v57();
        sub_1001781AC(v13, &qword_100E749B0);
        uint64_t v43 = v65;
        if (v69) {
          goto LABEL_33;
        }
LABEL_34:
        char v36 = 0;
        return v36 & 1;
      }
      sub_1001781AC((uint64_t)v51, &qword_100E749B0);
      sub_1001781AC((uint64_t)v50, &qword_100E749B0);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v53, v4);
    }
    uint64_t v40 = v13;
LABEL_15:
    sub_1001781AC(v40, &qword_100E6D578);
    goto LABEL_34;
  }
  return v36 & 1;
}

void sub_100362BF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10017DF08(&qword_100E749B0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v20 - v15;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
  sub_1000F32E4(v1 + v17[5], (uint64_t)v16);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_1001627D4();
    v18();
    Hasher._combine(_:)(1u);
    sub_100362FCC(&qword_100E6F030, (void (*)(uint64_t))&type metadata accessor for URL);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_100362FCC(&qword_100E6F030, (void (*)(uint64_t))&type metadata accessor for URL);
  dispatch thunk of Hashable.hash(into:)();
  sub_1000F32E4(v1 + v17[8], v13);
  if (_s7Weather24LocationCompositionStateOwet_0(v13, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    sub_1001627D4();
    v19();
    Hasher._combine(_:)(1u);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  }
  Hasher._combine(_:)(*(unsigned char *)(v1 + v17[9]));
}

Swift::Int sub_100362EF0(void (*a1)(unsigned char *))
{
  Hasher.init(_seed:)();
  a1(v3);
  return Hasher._finalize()();
}

Swift::Int sub_100362F3C()
{
  return sub_100362EF0((void (*)(unsigned char *))sub_1003624D0);
}

Swift::Int sub_100362F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100363060(a1, a2, a3, (void (*)(unsigned char *))sub_1003624D0);
}

uint64_t sub_100362F84()
{
  return sub_100362FCC(&qword_100E6F020, (void (*)(uint64_t))type metadata accessor for NewsArticleComponentContentViewModel);
}

uint64_t sub_100362FCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_100363018()
{
  return sub_100362EF0((void (*)(unsigned char *))sub_100362BF8);
}

Swift::Int sub_100363048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100363060(a1, a2, a3, (void (*)(unsigned char *))sub_100362BF8);
}

Swift::Int sub_100363060(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_1003630A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100363108(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100363160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL LocationAuthorizationState.isAlwaysAuthorized.getter(char a1)
{
  return a1 == 2;
}

BOOL LocationAuthorizationState.isAuthorized.getter(unsigned __int8 a1)
{
  return a1 - 1 < 2;
}

Weather::LocationAuthorizationState_optional __swiftcall LocationAuthorizationState.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E06560, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return (Weather::LocationAuthorizationState_optional)5;
  }
  else {
    return (Weather::LocationAuthorizationState_optional)v3;
  }
}

Swift::Int sub_100363248()
{
  return sub_100652540(*v0);
}

uint64_t sub_100363250()
{
  return sub_1002C22A0();
}

Swift::Int sub_100363258(uint64_t a1)
{
  return sub_1002C48B4(a1, *v1);
}

Weather::LocationAuthorizationState_optional sub_100363260@<W0>(Swift::String *a1@<X0>, Weather::LocationAuthorizationState_optional *a2@<X8>)
{
  result.value = LocationAuthorizationState.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t sub_100363290@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = LocationAuthorizationState.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1003632BC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10036331C()
{
  return RawRepresentable<>.encode(to:)();
}

BOOL LocationAuthorizationState.isUndetermined.getter(char a1)
{
  return a1 == 0;
}

uint64_t LocationAuthorizationState.locationAccessData.getter@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  if (a1 - 1 < 2)
  {
    unint64_t v3 = (unsigned int *)&enum case for LocationAccessData.enabled(_:);
  }
  else if (a1 - 3 >= 2)
  {
    unint64_t v3 = (unsigned int *)&enum case for LocationAccessData.unknown(_:);
  }
  else
  {
    unint64_t v3 = (unsigned int *)&enum case for LocationAccessData.disabled(_:);
  }
  uint64_t v4 = *v3;
  uint64_t v5 = type metadata accessor for LocationAccessData();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a2, v4, v5);
}

uint64_t sub_100363420()
{
  return sub_100889E5C();
}

unint64_t sub_100363444()
{
  unint64_t result = qword_100E6F048;
  if (!qword_100E6F048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F048);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationAuthorizationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10036355CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unint64_t sub_100363584()
{
  unint64_t result = qword_100E6F060[0];
  if (!qword_100E6F060[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E6F060);
  }
  return result;
}

uint64_t sub_1003635D0()
{
  StubLocalSearchRequestService.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_100363604()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_100363620()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_10036363C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_100363658()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_100363674(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_10036367C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___testManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___testManager))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___testManager);
LABEL_5:
    swift_retain();
    return v2;
  }
  uint64_t v3 = v0;
  sub_1000A0944((uint64_t)v5);
  sub_1001B1E64(v5, v5[3]);
  type metadata accessor for PerformanceTestManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v2 = result;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v5);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100363738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001643C8(a4, a2);
}

id LocalSearchCompleterManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_10036391C()
{
  swift_getObjectType();

  return Configurable.setting<A>(_:)();
}

uint64_t sub_100363974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = swift_getObjectType();

  return Configurable.setting<A>(_:_:)(a1, a2, a3, ObjectType, a7);
}

uint64_t sub_1003639E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();

  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, ObjectType, a8);
}

uint64_t sub_100363A64()
{
  uint64_t v2 = v0;
  uint64_t v19 = type metadata accessor for EndReason();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SessionEndData();
  sub_100179C0C();
  uint64_t v20 = v9;
  __chkstk_darwin(v10);
  sub_10012B938();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  uint64_t v11 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  uint64_t v12 = OBJC_IVAR____TtC7Weather11AppDelegate_sessionManager;
  if (!*(void *)(v2 + OBJC_IVAR____TtC7Weather11AppDelegate_sessionManager)
    || !*(void *)(v2 + OBJC_IVAR____TtC7Weather11AppDelegate_appSessionManager))
  {
    if (qword_100E627B0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1002102B0(v13, (uint64_t)qword_100F51E28);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Terminating app without session managers", v16, 2u);
      swift_slowDealloc();
    }
  }
  sub_10017A018();
  sub_1001B1E64(v21, v21[3]);
  sub_10017DF08((uint64_t *)&unk_100E6F470);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
  sub_1007FB0B8();
  if (*(void *)(v2 + v12))
  {
    swift_retain();
    SessionManager.tracker.getter();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for EndReason.forceQuit(_:), v19);
    SessionEndData.init(endReason:)();
    sub_1000A382C((unint64_t *)&qword_100E6E1F8, 255, (void (*)(uint64_t))&type metadata accessor for SessionEndData);
    Tracker.push<A>(data:traits:file:line:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v8);
  }
  sub_10017A018();
  sub_1001D1870(v21);
  type metadata accessor for LazyEventProcessor();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result) {
    goto LABEL_16;
  }
  LazyEventProcessor.resolve()();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
  if (*(void *)(v2 + OBJC_IVAR____TtC7Weather11AppDelegate_appSessionManager))
  {
    swift_retain();
    AppSessionManager.appSessionDidTerminate(timeout:)(1.0);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_100363EDC()
{
  swift_getObjectType();

  return Updatable.save<A>(setting:value:)();
}

uint64_t sub_100363F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return Updatable.reset<A>(setting:)(a1, ObjectType, a5);
}

uint64_t sub_100363F84()
{
  swift_getObjectType();

  return Updatable.apply(preset:)();
}

uint64_t sub_100363FD4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ContainerScope();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10012B938();
  sub_10001F464();
  uint64_t v3 = sub_10017FAE8();
  v4(v3);
  uint64_t v5 = ContainerManager.container(for:)();
  swift_release();
  uint64_t v6 = sub_10017E264();
  v7(v6);
  uint64_t result = type metadata accessor for Container();
  a1[3] = result;
  *a1 = v5;
  return result;
}

uint64_t sub_100364104()
{
  sub_1000A02F4(&OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___windowFocusManager, &qword_100E6F438, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, &qword_100E6F440, (uint64_t)v3);
  sub_1001B1E64(v3, v3[3]);
  uint64_t v0 = sub_10017FB00();
  v1(v0);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
}

uint64_t sub_1003641D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LOBYTE(a3) = sub_100B71BC4(a2, a3);
  swift_release();
  return a3 & 1;
}

uint64_t sub_1003642D4(uint64_t a1, uint64_t a2)
{
  return sub_1000A382C(&qword_100E6F298, a2, (void (*)(uint64_t))type metadata accessor for AppDelegate);
}

unint64_t sub_10036431C()
{
  unint64_t result = qword_100E6F488;
  if (!qword_100E6F488)
  {
    sub_1001ABC4C(255, &qword_100E6F480);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F488);
  }
  return result;
}

void sub_10036437C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a5 resetLocationAuthorizationForBundleId:v6 orBundlePath:v7];
}

void *sub_100364418(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for WeatherDescription();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    v10[32] = v11[32];
    uint64_t v14 = *((void *)v11 + 6);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *((void *)v10 + 6) = v14;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100364520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  uint64_t v13 = *(void *)(v10 + 48);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(void *)(v9 + 48) = v13;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1003645D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1003646D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(void *)(v9 + 48) = *(void *)(v10 + 48);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_10036476C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v12 = *(void *)(v9 + 48);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100364834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100364848);
}

uint64_t sub_100364848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for WeatherDescription();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 20) + 8));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_1003648CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003648E0);
}

void sub_1003648E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for WeatherDescription();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_10036496C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v11 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v11;
        uint64_t v12 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v12;
        uint64_t v13 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v13;
        uint64_t v14 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v14;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v15 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v15;
        *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v16 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v16;
        uint64_t v17 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v17;
        uint64_t v18 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v18;
        uint64_t v19 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v19;
        uint64_t v20 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v20;
        uint64_t v21 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v21;
        *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
        uint64_t v22 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v22;
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v23 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v25 = *(int *)(v24 + 20);
        uint64_t v26 = a1 + v25;
        uint64_t v27 = (uint64_t)a2 + v25;
        uint64_t v29 = *(uint64_t *)((char *)a2 + v25);
        uint64_t v28 = *(uint64_t *)((char *)a2 + v25 + 8);
        *(void *)uint64_t v26 = v29;
        *(void *)(v26 + 8) = v28;
        uint64_t v30 = *(void *)(v27 + 24);
        *(void *)(v26 + 16) = *(void *)(v27 + 16);
        *(void *)(v26 + 24) = v30;
        *(unsigned char *)(v26 + 32) = *(unsigned char *)(v27 + 32);
        uint64_t v31 = *(void *)(v27 + 48);
        *(void *)(v26 + 40) = *(void *)(v27 + 40);
        *(void *)(v26 + 48) = v31;
        *(unsigned char *)(a1 + *(int *)(v24 + 24)) = *((unsigned char *)a2 + *(int *)(v24 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v32 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v32;
        uint64_t v33 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v33;
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        uint64_t v34 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v34;
        uint64_t v35 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v35;
        uint64_t v36 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v36;
        *(void *)(a1 + 96) = a2[12];
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        uint64_t v37 = a2[14];
        uint64_t v38 = a2[15];
        *(void *)(a1 + 112) = v37;
        *(void *)(a1 + 120) = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v7;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v8 = a2[5];
        uint64_t v9 = a2[6];
        *(void *)(a1 + 40) = v8;
        *(void *)(a1 + 48) = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100364D38(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10020044C(a1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v4 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v6 = *(int *)(v5 + 20);
        uint64_t v7 = a1 + v6;
        *(void *)uint64_t v7 = *(void *)(a2 + v6);
        *(void *)(v7 + 8) = *(void *)(a2 + v6 + 8);
        *(void *)(v7 + 16) = *(void *)(a2 + v6 + 16);
        *(void *)(v7 + 24) = *(void *)(a2 + v6 + 24);
        *(unsigned char *)(v7 + 32) = *(unsigned char *)(a2 + v6 + 32);
        *(void *)(v7 + 40) = *(void *)(a2 + v6 + 40);
        *(void *)(v7 + 48) = *(void *)(a2 + v6 + 48);
        *(unsigned char *)(a1 + *(int *)(v5 + 24)) = *(unsigned char *)(a2 + *(int *)(v5 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_100365188(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = type metadata accessor for WeatherDescription();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((void *)v9 + 6) = *((void *)v10 + 6);
    a1[*(int *)(v7 + 24)] = a2[*(int *)(v7 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_100365278(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10020044C((uint64_t)a1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = type metadata accessor for WeatherDescription();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v8 = *(int *)(v7 + 20);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      long long v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((void *)v9 + 6) = *((void *)v10 + 6);
      a1[*(int *)(v7 + 24)] = a2[*(int *)(v7 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10036538C(uint64_t a1)
{
  sub_10017CA94(a1);
  BOOL v5 = v5 && v3 == v4;
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    sub_100181130();
    BOOL v10 = v5 && v8 == v9;
    if (v10 || (char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v11 & 1) != 0))
    {
      if ((*(unsigned __int8 *)(v2 + 32) ^ *(unsigned __int8 *)(v1 + 32))) {
        return 0;
      }
      uint64_t v12 = *(void *)(v2 + 48);
      uint64_t v13 = *(void *)(v1 + 48);
      if (v12)
      {
        if (!v13) {
          return 0;
        }
        BOOL v14 = *(void *)(v2 + 40) == *(void *)(v1 + 40) && v12 == v13;
        if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          return 0;
        }
      }
      else if (v13)
      {
        return 0;
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_100365440(uint64_t a1)
{
  sub_10017CA94(a1);
  BOOL v5 = v5 && v3 == v4;
  if (!v5)
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v7 = 0;
    if ((v6 & 1) == 0) {
      return v7 & 1;
    }
  }
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = *(void *)(v1 + 24);
  if (!v8)
  {
    if (v9) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  if (!v9) {
    goto LABEL_17;
  }
  BOOL v10 = *(void *)(v2 + 16) == *(void *)(v1 + 16) && v8 == v9;
  if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v7 = 0, (v11 & 1) != 0))
  {
LABEL_15:
    if (sub_10036538C(v2 + 32))
    {
      char v7 = ((*(unsigned char *)(v2 + 88) & 1) == 0) ^ *(unsigned char *)(v1 + 88);
      return v7 & 1;
    }
LABEL_17:
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1003654E8(uint64_t a1)
{
  sub_10017CA94(a1);
  BOOL v5 = v5 && v3 == v4;
  if (v5 || (v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v7 = 0, (v6 & 1) != 0))
  {
    sub_100181130();
    BOOL v10 = v5 && v8 == v9;
    if (v10 || (v11 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v7 = 0, (v11 & 1) != 0))
    {
      BOOL v12 = *(void *)(v2 + 32) == *(void *)(v1 + 32) && *(void *)(v2 + 40) == *(void *)(v1 + 40);
      if (v12 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v7 = 0, (v13 & 1) != 0))
      {
        BOOL v14 = *(void *)(v2 + 48) == *(void *)(v1 + 48) && *(void *)(v2 + 56) == *(void *)(v1 + 56);
        if (v14 || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v7 = 0, (v15 & 1) != 0))
        {
          if (sub_10036538C(v2 + 64)) {
            char v7 = ((*(unsigned char *)(v2 + 120) & 1) == 0) ^ *(unsigned char *)(v1 + 120);
          }
          else {
            char v7 = 0;
          }
        }
      }
    }
  }
  return v7 & 1;
}

uint64_t sub_1003655B8()
{
  sub_1001097B4();
  if ((static WeatherDescription.== infix(_:_:)() & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v2 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  uint64_t v3 = (long long *)(v1 + *(int *)(v2 + 20));
  long long v4 = v3[2];
  uint64_t v12 = *((void *)v3 + 6);
  long long v5 = *v3;
  v11[1] = v3[1];
  v11[2] = v4;
  v11[0] = v5;
  char v6 = (long long *)(v0 + *(int *)(v2 + 20));
  uint64_t v16 = *((void *)v6 + 6);
  long long v7 = v6[2];
  long long v8 = *v6;
  long long v14 = v6[1];
  long long v15 = v7;
  long long v13 = v8;
  if (sub_10036538C((uint64_t)v11)) {
    char v9 = *(unsigned char *)(v1 + *(int *)(v2 + 24)) ^ *(unsigned char *)(v0 + *(int *)(v2 + 24)) ^ 1;
  }
  else {
LABEL_4:
  }
    char v9 = 0;
  return v9 & 1;
}

void sub_100365674()
{
  sub_100162EA0();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  int v9 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  BOOL v12 = *(void *)v0 == *(void *)v1 && *(void *)(v0 + 8) == *(void *)(v1 + 8);
  if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    BOOL v13 = v2 == v7 && v3 == v8;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)())
      && ((v4 ^ v9) & 1) == 0
      && v5
      && v10
      && (v6 != v11 || v5 != v10))
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  sub_100162694();
}

#error "1003657E0: call analysis failed (funcsize=57)"

uint64_t sub_100365860()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100162EB8();
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = (unsigned __int8 *)(v5 - v4);
  sub_1001FD718(v0, v5 - v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = v6[88];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2u:
      memcpy(__dst, v6, 0x79uLL);
      sub_100366BB0((uint64_t)__dst);
      uint64_t v7 = __dst[120];
      break;
    case 3u:
      sub_1001FD77C((uint64_t)v6, v0);
      uint64_t v7 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 24));
      sub_10020044C(v0, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel.Description);
      break;
    case 4u:
    case 5u:
      sub_10020044C((uint64_t)v6, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
      uint64_t v7 = 0;
      break;
    default:
      uint64_t v7 = v6[32];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      break;
  }
  return v7;
}

void sub_100365A38()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10012B938();
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  int v9 = (_OWORD *)(v8 - v7);
  sub_1001FD718(v0, v8 - v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *((void *)v9 + 4);
      uint64_t v14 = *((void *)v9 + 5);
      uint64_t v15 = *((void *)v9 + 6);
      uint64_t v16 = *((void *)v9 + 7);
      char v17 = *((unsigned char *)v9 + 64);
      uint64_t v18 = *((void *)v9 + 9);
      uint64_t v19 = *((void *)v9 + 10);
      uint64_t v36 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v3 = v13;
      *(void *)(v3 + 8) = v14;
      *(void *)(v3 + 16) = v15;
      *(void *)(v3 + 24) = v16;
      *(unsigned char *)(v3 + 32) = v17;
      *(void *)(v3 + 40) = v36;
      goto LABEL_6;
    case 2u:
      memcpy(v37, v9, 0x79uLL);
      uint64_t v21 = v37[8];
      uint64_t v20 = v37[9];
      uint64_t v23 = v37[10];
      uint64_t v22 = v37[11];
      char v24 = v37[12];
      uint64_t v26 = v37[13];
      uint64_t v25 = v37[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100366BB0((uint64_t)v37);
      *(void *)uint64_t v3 = v21;
      *(void *)(v3 + 8) = v20;
      *(void *)(v3 + 16) = v23;
      *(void *)(v3 + 24) = v22;
      *(unsigned char *)(v3 + 32) = v24;
      *(void *)(v3 + 40) = v26;
      *(void *)(v3 + 48) = v25;
      goto LABEL_9;
    case 3u:
      sub_1001FD77C((uint64_t)v9, v1);
      uint64_t v27 = v1 + *(int *)(v4 + 20);
      uint64_t v29 = *(void *)v27;
      uint64_t v28 = *(void *)(v27 + 8);
      uint64_t v31 = *(void *)(v27 + 16);
      uint64_t v30 = *(void *)(v27 + 24);
      char v32 = *(unsigned char *)(v27 + 32);
      uint64_t v33 = *(void *)(v27 + 40);
      uint64_t v19 = *(void *)(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10020044C(v1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel.Description);
      *(void *)uint64_t v3 = v29;
      *(void *)(v3 + 8) = v28;
      *(void *)(v3 + 16) = v31;
      *(void *)(v3 + 24) = v30;
      *(unsigned char *)(v3 + 32) = v32;
      *(void *)(v3 + 40) = v33;
LABEL_6:
      *(void *)(v3 + 48) = v19;
      goto LABEL_9;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001FD718(v0, v3);
      goto LABEL_10;
    case 5u:
      memcpy(v37, v9, sizeof(v37));
      uint64_t v35 = v37[0];
      uint64_t v34 = v37[1];
      swift_bridgeObjectRetain();
      sub_100366ABC((uint64_t)v37);
      *(void *)uint64_t v3 = v35;
      *(void *)(v3 + 8) = v34;
      *(void *)(v3 + 16) = 0;
      *(void *)(v3 + 24) = 0xE000000000000000;
      *(unsigned char *)(v3 + 32) = 0;
      *(void *)(v3 + 40) = 0;
      *(void *)(v3 + 48) = 0;
      goto LABEL_9;
    default:
      uint64_t v10 = *((void *)v9 + 2);
      uint64_t v11 = *((void *)v9 + 3);
      char v12 = *((unsigned char *)v9 + 32);
      *(_OWORD *)uint64_t v3 = *v9;
      *(void *)(v3 + 16) = v10;
      *(void *)(v3 + 24) = v11;
      *(unsigned char *)(v3 + 32) = v12;
      *(_OWORD *)(v3 + 40) = *(_OWORD *)((char *)v9 + 40);
LABEL_9:
      swift_storeEnumTagMultiPayload();
LABEL_10:
      sub_100162694();
      return;
  }
}

void sub_100365CFC()
{
  sub_100162EA0();
  uint64_t v46 = v1;
  uint64_t v3 = v2;
  uint64_t v43 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v44 = v6 - v5;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v45 = (uint64_t)&v43 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v43 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v43 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E6F618);
  __chkstk_darwin(v24 - 8);
  sub_100162EB8();
  uint64_t v26 = (const void *)(v0 + *(int *)(v25 + 56));
  sub_1001FD718(v3, v0);
  sub_1001FD718(v46, (uint64_t)v26);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001FD718(v0, (uint64_t)v21);
      memcpy(v47, v21, 0x59uLL);
      if (sub_10017E27C() == 1)
      {
        memcpy(v48, v26, 0x59uLL);
        sub_100365440((uint64_t)v47);
        uint64_t v32 = sub_1001A45E4();
        sub_100366C3C(v32);
        sub_100366C3C((uint64_t)v48);
        goto LABEL_18;
      }
      sub_100366C3C((uint64_t)v47);
      goto LABEL_23;
    case 2u:
      sub_1001FD718(v0, (uint64_t)v18);
      memcpy(v47, v18, 0x79uLL);
      if (sub_10017E27C() == 2)
      {
        memcpy(v48, v26, 0x79uLL);
        sub_1003654E8((uint64_t)v47);
        uint64_t v29 = sub_1001A45E4();
        sub_100366BB0(v29);
        sub_100366BB0((uint64_t)v48);
        goto LABEL_18;
      }
      sub_100366BB0((uint64_t)v47);
      goto LABEL_23;
    case 3u:
      uint64_t v33 = v45;
      sub_1001FD718(v0, v45);
      if (sub_10017E27C() != 3)
      {
        sub_10020044C(v33, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel.Description);
        goto LABEL_23;
      }
      uint64_t v34 = (uint64_t)v26;
      uint64_t v35 = v44;
      sub_1001FD77C(v34, v44);
      if (static WeatherDescription.== infix(_:_:)())
      {
        uint64_t v36 = v33 + *(int *)(v43 + 20);
        long long v37 = *(_OWORD *)(v36 + 32);
        *(void *)&v47[3] = *(void *)(v36 + 48);
        long long v38 = *(_OWORD *)v36;
        v47[1] = *(_OWORD *)(v36 + 16);
        v47[2] = v37;
        v47[0] = v38;
        uint64_t v39 = v35 + *(int *)(v43 + 20);
        *(void *)&v48[3] = *(void *)(v39 + 48);
        long long v40 = *(_OWORD *)(v39 + 32);
        long long v41 = *(_OWORD *)v39;
        v48[1] = *(_OWORD *)(v39 + 16);
        v48[2] = v40;
        v48[0] = v41;
        sub_10036538C((uint64_t)v47);
      }
      sub_10020044C(v35, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel.Description);
      sub_10020044C(v33, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel.Description);
      sub_10020044C(v0, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
      goto LABEL_24;
    case 4u:
      sub_1001FD718(v0, (uint64_t)v13);
      long long v30 = *((_OWORD *)v13 + 1);
      v47[0] = *(_OWORD *)v13;
      v47[1] = v30;
      v47[2] = *((_OWORD *)v13 + 2);
      *(void *)&v47[3] = *((void *)v13 + 6);
      if (sub_10017E27C() != 4) {
        goto LABEL_9;
      }
      sub_10017A030();
      sub_100365674();
      goto LABEL_8;
    case 5u:
      sub_1001FD718(v0, (uint64_t)v10);
      memcpy(v47, v10, sizeof(v47));
      if (sub_10017E27C() == 5)
      {
        memcpy(v48, v26, 0x80uLL);
        sub_100365758(v47, v48);
        uint64_t v42 = sub_1001A45E4();
        sub_100366ABC(v42);
        sub_100366ABC((uint64_t)v48);
        goto LABEL_18;
      }
      sub_100366ABC((uint64_t)v47);
      goto LABEL_23;
    default:
      sub_1001FD718(v0, (uint64_t)v23);
      long long v27 = *((_OWORD *)v23 + 1);
      v47[0] = *(_OWORD *)v23;
      v47[1] = v27;
      v47[2] = *((_OWORD *)v23 + 2);
      *(void *)&v47[3] = *((void *)v23 + 6);
      if (sub_10017E27C())
      {
LABEL_9:
        sub_1001FF27C((uint64_t)v47);
LABEL_23:
        sub_100366B50(v0);
      }
      else
      {
        uint64_t v28 = sub_10017A030();
        sub_10036538C(v28);
LABEL_8:
        uint64_t v31 = sub_1001A45E4();
        sub_1001FF27C(v31);
        sub_1001FF27C((uint64_t)v48);
LABEL_18:
        sub_10020044C(v0, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
      }
LABEL_24:
      sub_100162694();
      return;
  }
}

unint64_t sub_100366254()
{
  unint64_t result = qword_100E6F600;
  if (!qword_100E6F600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F600);
  }
  return result;
}

#error "1003662F0: call analysis failed (funcsize=35)"

BOOL sub_10036632C(long long *a1, long long *a2)
{
  sub_1001262E4(a2, (uint64_t)&v23);
  uint64_t v4 = v23;
  uint64_t v3 = v24;
  uint64_t v6 = v25;
  uint64_t v5 = v26;
  sub_1001262E4(a1, (uint64_t)&v18);
  BOOL result = 0;
  if (v18 == v4)
  {
    uint64_t v13 = v21;
    BOOL v14 = v19 == v3 && v20 == v6;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      sub_100BD8AFC(v13, v5, v7, v8, v9, v10, v11, v12, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
      if (v15)
      {
        sub_1002E59F4();
        if (v16) {
          return 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1003663EC(long long *a1, long long *a2)
{
  sub_100366CA8(a2, &v34);
  long long v3 = v34;
  uint64_t v5 = v35;
  uint64_t v4 = v36;
  uint64_t v6 = v37;
  uint64_t v7 = v38;
  uint64_t v8 = v39;
  sub_100366CA8(a1, &v27);
  if ((void)v27 != (void)v3) {
    return 0;
  }
  uint64_t v15 = v29;
  uint64_t v16 = v31;
  uint64_t v23 = v33;
  uint64_t v25 = v32;
  BOOL v17 = *((void *)&v27 + 1) == *((void *)&v3 + 1) && v28 == v5;
  if (v17 || (char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v18 & 1) != 0))
  {
    sub_100BD8AFC(v15, v4, v9, v10, v11, v12, v13, v14, v23, v25, v27, *((uint64_t *)&v27 + 1), v28, v29, v30, v31, v32, v33, v34,
      *((uint64_t *)&v34 + 1));
    if (v20)
    {
      sub_1002E59F4();
      if ((v21 & 1) != 0 && v16 == v6)
      {
        BOOL v22 = v26 == v7 && v24 == v8;
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_100366504(long long *a1, long long *a2)
{
  sub_1001262E4(a1, (uint64_t)v4);
  sub_1001262E4(a2, (uint64_t)v5);
  return sub_10036632C(v4, v5);
}

uint64_t sub_100366550(long long *a1, long long *a2)
{
  sub_100366CA8(a1, v4);
  sub_100366CA8(a2, v5);
  return sub_1003663EC(v4, v5) & 1;
}

unint64_t sub_10036659C()
{
  sub_100366CA8(v0, v5);
  uint64_t v1 = v6;
  uint64_t v2 = v7;
  _StringGuts.grow(_:)(42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  return 0xD000000000000028;
}

unint64_t sub_100366634()
{
  sub_100366CA8(v0, v2);
  return sub_10036659C();
}

uint64_t sub_10036666C(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_1001A1D64();
  }
}

uint64_t sub_1003666B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 != a4) {
    return 0;
  }
  if (a2 == a5 && a3 == a6) {
    return 1;
  }
  else {
    return sub_1001A1D64();
  }
}

uint64_t sub_1003666EC()
{
  Hasher._combine(_:)(*v0);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100366750()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*v0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1003667C8()
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*v0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100366834(int a1, Swift::UInt a2)
{
  Hasher._combine(_:)(a2);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100366898(Swift::UInt a1)
{
  return Hasher._finalize()();
}

uint64_t SearchLocation.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Int sub_100366940()
{
  return sub_100366898(*v0);
}

uint64_t sub_10036694C(int a1)
{
  return sub_100366834(a1, *v1);
}

Swift::Int sub_100366958()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1003669C8(uint64_t *a1, uint64_t *a2)
{
  return sub_1003666B0(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_1003669E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(void *)(a1 + 16) = v2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1003669FC()
{
  unint64_t result = qword_100E6F608;
  if (!qword_100E6F608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F608);
  }
  return result;
}

unint64_t sub_100366A4C()
{
  unint64_t result = qword_100E6F610;
  if (!qword_100E6F610)
  {
    type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F610);
  }
  return result;
}

uint64_t type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6F6A8);
}

uint64_t sub_100366ABC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100366B50(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6F618);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100366BB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100366C3C(uint64_t a1)
{
  return a1;
}

_OWORD *sub_100366CA8(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_100366CC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100366D0C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100366D7C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100366E2C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100366E9C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100366EDC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LocationComponentHeaderInputModelAction()
{
}

void type metadata accessor for LocationComponentHeaderInputModel()
{
}

uint64_t sub_100366F5C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100366FA0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100366FF8(void *a1, void *a2)
{
  long long v4 = sub_10017CAB0(a1, a2);
  v4[1] = *(void *)(v5 + 8);
  v3[2] = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[3] = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v3[4] = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100367074()
{
  sub_1001097B4();
  _OWORD *v3 = *v2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = *(void *)(v0 + 32);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1003670C8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100367108(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel()
{
}

uint64_t *sub_10036715C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (unsigned __int8 *)a2 + v8;
    uint64_t v11 = type metadata accessor for MainAction();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = type metadata accessor for AppConfiguration();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
        goto LABEL_217;
      case 2u:
        uint64_t v21 = type metadata accessor for EnvironmentAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v32 = type metadata accessor for Locale();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v32 - 8) + 16))(v9, v10, v32);
            goto LABEL_216;
          case 3u:
            uint64_t v40 = type metadata accessor for ActivityAction();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v149 = type metadata accessor for LocationOfInterest();
                  goto LABEL_178;
                case 2u:
                  uint64_t v213 = *((void *)v10 + 1);
                  uint64_t v396 = *(void **)v10;
                  *uint64_t v9 = *(void *)v10;
                  v9[1] = v213;
                  uint64_t v214 = *((void *)v10 + 3);
                  _OWORD v9[2] = *((void *)v10 + 2);
                  v9[3] = v214;
                  uint64_t v215 = *((void *)v10 + 5);
                  v9[4] = *((void *)v10 + 4);
                  v9[5] = v215;
                  v9[6] = *((void *)v10 + 6);
                  uint64_t v216 = type metadata accessor for SearchLocation();
                  uint64_t v217 = *(int *)(v216 + 32);
                  uint64_t v410 = v216;
                  uint64_t v416 = (char *)v9 + v217;
                  uint64_t v422 = &v10[v217];
                  uint64_t v218 = type metadata accessor for Location();
                  id v219 = v396;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v422, 1, v218))
                  {
                    uint64_t v220 = sub_10017DF08(&qword_100E639E8);
                    memcpy(v416, v422, *(void *)(*(void *)(v220 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v218 - 8) + 16))(v416, v422, v218);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v416, 0, 1, v218);
                  }
                  uint64_t v361 = *(int *)(v410 + 36);
                  uint64_t v362 = (char *)v9 + v361;
                  uint64_t v363 = &v10[v361];
                  *(_OWORD *)uint64_t v362 = *(_OWORD *)v363;
                  v362[16] = v363[16];
                  break;
                case 3u:
                  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
                  uint64_t v221 = *((void *)v10 + 3);
                  _OWORD v9[2] = *((void *)v10 + 2);
                  v9[3] = v221;
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v149 = type metadata accessor for Location();
LABEL_178:
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v149 - 8) + 16))(v9, v10, v149);
                  break;
              }
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              if (EnumCaseMultiPayload) {
                goto LABEL_102;
              }
              type metadata accessor for SavedLocation();
              if (swift_getEnumCaseMultiPayload() == 1) {
                uint64_t v99 = type metadata accessor for SavedLocation.Placeholder();
              }
              else {
                uint64_t v99 = type metadata accessor for Location();
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v99 - 8) + 16))(v9, v10);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_216;
          case 4u:
            uint64_t v89 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v89;
            swift_bridgeObjectRetain();
            goto LABEL_216;
          case 9u:
            unint64_t v100 = *((void *)v10 + 1);
            if (v100 >= 2)
            {
              *uint64_t v9 = *(void *)v10;
              v9[1] = v100;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
            }
            goto LABEL_216;
          case 0xBu:
            uint64_t v40 = type metadata accessor for ConfiguredUnitsAction();
            int v101 = swift_getEnumCaseMultiPayload();
            if (v101 == 1)
            {
              uint64_t v150 = type metadata accessor for UnitConfiguration.Temperature();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v150))
              {
                uint64_t v151 = sub_10017DF08(&qword_100E6F620);
                memcpy(v9, v10, *(void *)(*(void *)(v151 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(v9, v10, v150);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v150);
              }
            }
            else
            {
              if (v101) {
                goto LABEL_102;
              }
              uint64_t v102 = type metadata accessor for ConfiguredUnit();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v102 - 8) + 16))(v9, v10, v102);
            }
            break;
          default:
            goto LABEL_61;
        }
        goto LABEL_141;
      case 3u:
        uint64_t v14 = type metadata accessor for LocationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v15 = type metadata accessor for CurrentLocation();
            if (swift_getEnumCaseMultiPayload() > 2)
            {
              memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
            }
            else
            {
              uint64_t v173 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v173 - 8) + 16))(v9, v10, v173);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_143;
          case 1u:
            uint64_t v82 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v82 - 8) + 16))(v9, v10, v82);
            uint64_t v83 = sub_10017DF08(&qword_100E6F628);
            *((unsigned char *)v9 + *(int *)(v83 + 48)) = v10[*(int *)(v83 + 48)];
            goto LABEL_143;
          case 2u:
            uint64_t v84 = *(void *)v10;
            uint64_t v85 = *((void *)v10 + 1);
            *uint64_t v9 = v84;
            v9[1] = v85;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_143;
          case 5u:
            *uint64_t v9 = *(void *)v10;
            swift_bridgeObjectRetain();
            goto LABEL_143;
          case 6u:
            uint64_t v90 = *(void *)v10;
            uint64_t v91 = *((void *)v10 + 1);
            unsigned __int8 v92 = v10[16];
            sub_10015458C(v90, v91, v92);
            *uint64_t v9 = v90;
            v9[1] = v91;
            *((unsigned char *)v9 + 16) = v92;
LABEL_143:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
            break;
        }
        goto LABEL_217;
      case 4u:
        uint64_t v33 = type metadata accessor for NotificationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v34 = type metadata accessor for LocationModel();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v34))
            {
              uint64_t v35 = type metadata accessor for NotificationLocation();
              memcpy(v9, v10, *(void *)(*(void *)(v35 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v34 - 8) + 16))(v9, v10, v34);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v34);
            }
            uint64_t v143 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
            uint64_t v144 = (char *)v9 + v143;
            uint64_t v145 = &v10[v143];
            uint64_t v146 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
            {
              uint64_t v147 = sub_10017DF08(&qword_100E749B0);
              memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v146 - 8) + 16))(v144, v145, v146);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v146);
            }
            goto LABEL_120;
          case 2u:
            uint64_t v103 = type metadata accessor for NotificationSubscription.Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v103 - 8) + 16))(v9, v10, v103);
            uint64_t v104 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
            int v105 = (char *)v9 + v104;
            uint64_t v106 = &v10[v104];
            uint64_t v107 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
            goto LABEL_120;
          case 3u:
          case 4u:
            *uint64_t v9 = *(void *)v10;
            swift_bridgeObjectRetain();
            goto LABEL_120;
          case 5u:
            uint64_t v108 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v108 - 8) + 16))(v9, v10, v108);
            uint64_t v109 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
            uint64_t v110 = (char *)v9 + v109;
            uint64_t v111 = &v10[v109];
            uint64_t v112 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
LABEL_120:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v33 - 8) + 64));
            break;
        }
        goto LABEL_217;
      case 5u:
        uint64_t v21 = type metadata accessor for NotificationsOptInAction();
        int v36 = swift_getEnumCaseMultiPayload();
        switch(v36)
        {
          case 4:
            goto LABEL_15;
          case 3:
            *uint64_t v9 = *(void *)v10;
            *((unsigned char *)v9 + 8) = v10[8];
            swift_bridgeObjectRetain();
            break;
          case 2:
            uint64_t v37 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v37 - 8) + 16))(v9, v10, v37);
            uint64_t v38 = sub_10017DF08(&qword_100E6BBD8);
            *((unsigned char *)v9 + *(int *)(v38 + 48)) = v10[*(int *)(v38 + 48)];
            break;
          default:
            goto LABEL_61;
        }
        goto LABEL_216;
      case 6u:
        uint64_t v16 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = type metadata accessor for ListViewAction();
            int v18 = swift_getEnumCaseMultiPayload();
            if (v18 == 2) {
              goto LABEL_122;
            }
            if (v18) {
              goto LABEL_169;
            }
            uint64_t v19 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v10, v19);
            uint64_t v20 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)v9 + *(int *)(v20 + 48)) = v10[*(int *)(v20 + 48)];
            goto LABEL_210;
          case 1u:
            uint64_t v17 = type metadata accessor for LocationViewerViewAction();
            int v86 = swift_getEnumCaseMultiPayload();
            if (v86 == 2)
            {
LABEL_122:
              uint64_t v148 = type metadata accessor for Location.Identifier();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v148 - 8) + 16))(v9, v10, v148);
            }
            else if (v86 == 1)
            {
              uint64_t v174 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v174 - 8) + 16))(v9, v10, v174);
            }
            else
            {
              if (v86)
              {
LABEL_169:
                memcpy(v9, v10, *(void *)(*(void *)(v17 - 8) + 64));
                goto LABEL_211;
              }
              uint64_t v87 = type metadata accessor for LocationModel();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v87 - 8) + 16))(v9, v10, v87);
            }
LABEL_210:
            swift_storeEnumTagMultiPayload();
LABEL_211:
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v17 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v88 = type metadata accessor for CodableError();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v88 - 8) + 16))(v9, v10, v88);
                goto LABEL_210;
              case 1u:
                *uint64_t v9 = *(void *)v10;
                swift_bridgeObjectRetain();
                goto LABEL_210;
              case 2u:
                uint64_t v201 = *((void *)v10 + 1);
                *uint64_t v9 = *(void *)v10;
                v9[1] = v201;
                swift_bridgeObjectRetain();
                goto LABEL_210;
              case 3u:
              case 6u:
                uint64_t v202 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v202 - 8) + 16))(v9, v10, v202);
                goto LABEL_210;
              case 4u:
                uint64_t v203 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v203 - 8) + 16))(v9, v10, v203);
                goto LABEL_210;
              case 5u:
                uint64_t v204 = *((void *)v10 + 1);
                uint64_t v409 = *(void **)v10;
                *uint64_t v9 = *(void *)v10;
                v9[1] = v204;
                uint64_t v205 = *((void *)v10 + 3);
                _OWORD v9[2] = *((void *)v10 + 2);
                v9[3] = v205;
                uint64_t v206 = *((void *)v10 + 5);
                v9[4] = *((void *)v10 + 4);
                v9[5] = v206;
                v9[6] = *((void *)v10 + 6);
                uint64_t v421 = type metadata accessor for SearchLocation();
                uint64_t v207 = *(int *)(v421 + 32);
                uint64_t v406 = v9;
                uint64_t v208 = (char *)v9 + v207;
                long long v209 = &v10[v207];
                uint64_t v210 = type metadata accessor for Location();
                id v211 = v409;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v209, 1, v210))
                {
                  uint64_t v212 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v208, v209, *(void *)(*(void *)(v212 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v210 - 8) + 16))(v208, v209, v210);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v208, 0, 1, v210);
                }
                uint64_t v358 = *(int *)(v421 + 36);
                uint64_t v359 = (char *)v406 + v358;
                uint64_t v360 = &v10[v358];
                *(_OWORD *)uint64_t v359 = *(_OWORD *)v360;
                v359[16] = v360[16];
                goto LABEL_210;
              default:
                goto LABEL_169;
            }
          case 4u:
            uint64_t v93 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v200 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v200 - 8) + 16))(v9, v10, v200);
                goto LABEL_165;
              case 3u:
                uint64_t v199 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v199 - 8) + 16))(v9, v10, v199);
LABEL_165:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v9, v10, *(void *)(*(void *)(v93 - 8) + 64));
                break;
            }
            goto LABEL_211;
          case 5u:
            *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
            *((unsigned char *)v9 + 16) = v10[16];
            *((unsigned char *)v9 + 17) = v10[17];
            *((unsigned char *)v9 + 18) = v10[18];
            uint64_t v94 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            char v95 = (char *)v9 + v94;
            __n128 v96 = &v10[v94];
            uint64_t v97 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
            goto LABEL_211;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_217;
        }
        goto LABEL_217;
      case 7u:
        uint64_t v21 = type metadata accessor for ModalViewAction();
        int v39 = swift_getEnumCaseMultiPayload();
        if (v39 == 3)
        {
          uint64_t v50 = *(void *)v10;
          if ((~*(void *)v10 & 0xF000000000000006) != 0)
          {
            uint64_t v113 = *((void *)v10 + 2);
            uint64_t v114 = *((void *)v10 + 4);
            uint64_t v395 = *((void *)v10 + 5);
            uint64_t v400 = *((void *)v10 + 1);
            uint64_t v386 = *((void *)v10 + 7);
            uint64_t v391 = *((void *)v10 + 6);
            uint64_t v404 = *((void *)v10 + 8);
            uint64_t v408 = *((void *)v10 + 9);
            uint64_t v414 = *((void *)v10 + 10);
            uint64_t v419 = *((void *)v10 + 11);
            uint64_t v115 = *((void *)v10 + 3);
            sub_100274EDC(v50);
            *uint64_t v9 = v50;
            v9[1] = v400;
            _OWORD v9[2] = v113;
            v9[3] = v115;
            v9[4] = v114;
            v9[5] = v395;
            v9[6] = v391;
            v9[7] = v386;
            v9[8] = v404;
            v9[9] = v408;
            v9[10] = v414;
            v9[11] = v419;
          }
          else
          {
            memcpy(v9, v10, 0x60uLL);
          }
        }
        else
        {
          if (v39) {
            goto LABEL_61;
          }
          uint64_t v40 = type metadata accessor for LocationPreviewViewAction();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v41 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v41 - 8) + 16))(v9, v10, v41);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
LABEL_102:
            memcpy(v9, v10, *(void *)(*(void *)(v40 - 8) + 64));
          }
        }
        goto LABEL_216;
      case 8u:
        uint64_t v21 = type metadata accessor for LocationViewAction();
        int v42 = swift_getEnumCaseMultiPayload();
        if (v42 == 2)
        {
          uint64_t v60 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v60 - 8) + 16))(v9, v10, v60);
          uint64_t v61 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          uint64_t v62 = (char *)v9 + v61;
          uint64_t v63 = &v10[v61];
          uint64_t v64 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
          uint64_t v65 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          int v66 = (char *)v9 + v65;
          uint64_t v67 = &v10[v65];
          long long v68 = *((_OWORD *)v67 + 1);
          *(_OWORD *)int v66 = *(_OWORD *)v67;
          *((_OWORD *)v66 + 1) = v68;
          v66[32] = v67[32];
        }
        else if (v42 == 1)
        {
          uint64_t v69 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v70 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v70 - 8) + 16))(v9, v10, v70);
              uint64_t v71 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)v9 + *(int *)(v71 + 48)) = v10[*(int *)(v71 + 48)];
              goto LABEL_134;
            case 1u:
              uint64_t v152 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v152 - 8) + 16))(v9, v10, v152);
              goto LABEL_134;
            case 2u:
              uint64_t v153 = type metadata accessor for DetailCondition();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(v9, v10, v153);
              uint64_t v154 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)v9 + *(int *)(v154 + 48)) = v10[*(int *)(v154 + 48)];
              goto LABEL_134;
            case 4u:
              *(unsigned char *)uint64_t v9 = *v10;
              uint64_t v155 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v156 = (char *)v9 + v155;
              uint64_t v157 = v9;
              uint64_t v158 = &v10[v155];
              uint64_t v159 = type metadata accessor for Location();
              uint64_t v160 = v158;
              uint64_t v9 = v157;
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v159 - 8) + 16))(v156, v160, v159);
LABEL_134:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v9, v10, *(void *)(*(void *)(v69 - 8) + 64));
              break;
          }
          uint64_t v161 = sub_10017DF08(&qword_100E66458);
          uint64_t v162 = *(int *)(v161 + 48);
          uint64_t v163 = (char *)v9 + v162;
          uint64_t v164 = &v10[v162];
          long long v165 = *((_OWORD *)v164 + 1);
          *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
          *((_OWORD *)v163 + 1) = v165;
          v163[32] = v164[32];
          uint64_t v166 = *(int *)(v161 + 64);
          uint64_t v167 = (char *)v9 + v166;
          uint64_t v168 = &v10[v166];
          uint64_t v169 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v169))
          {
            uint64_t v170 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v169);
          }
        }
        else
        {
          if (v42) {
            goto LABEL_61;
          }
LABEL_38:
          uint64_t v43 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v43 - 8) + 16))(v9, v10, v43);
        }
        goto LABEL_216;
      case 9u:
        type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v120 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v120;
            uint64_t v121 = (uint64_t *)(v10 + 16);
            unint64_t v122 = *((void *)v10 + 3);
            swift_bridgeObjectRetain();
            if (v122 >= 0xE)
            {
              _OWORD v9[2] = *v121;
              v9[3] = v122;
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)v9 + 1) = *(_OWORD *)v121;
            }
            uint64_t v171 = *((void *)v10 + 5);
            v9[4] = *((void *)v10 + 4);
            v9[5] = v171;
            swift_bridgeObjectRetain();
            goto LABEL_216;
          case 3u:
          case 9u:
            uint64_t v72 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v72;
            uint64_t v73 = *((void *)v10 + 2);
            uint64_t v74 = *((void *)v10 + 3);
            _OWORD v9[2] = v73;
            v9[3] = v74;
            swift_bridgeObjectRetain();
            goto LABEL_67;
          case 4u:
            uint64_t v123 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v123;
            swift_bridgeObjectRetain();
            uint64_t v401 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v405 = v9;
            uint64_t v124 = v401[12];
            uint64_t v125 = (uint64_t *)((char *)v9 + v124);
            uint64_t v126 = *(void *)&v10[v124 + 8];
            *uint64_t v125 = *(void *)&v10[v124];
            v125[1] = v126;
            uint64_t v415 = &v10[v124];
            uint64_t v420 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v127 = v420[5];
            uint64_t v128 = (char *)v125 + v127;
            unint64_t v129 = (char *)&v415[v127];
            uint64_t v130 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
            {
              uint64_t v131 = sub_10017DF08(&qword_100E63730);
              memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
            }
            uint64_t v175 = v420[6];
            uint64_t v176 = (char *)v125 + v175;
            uint64_t v177 = (char *)&v415[v175];
            uint64_t v178 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v177, v178);
            uint64_t v179 = v420[7];
            uint64_t v180 = (char *)v125 + v179;
            uint64_t v181 = (char *)&v415[v179];
            uint64_t v182 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v181, 1, v182))
            {
              uint64_t v183 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v180, v181, *(void *)(*(void *)(v183 - 8) + 64));
            }
            else
            {
              uint64_t v184 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(v180, v181, v184);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v180, 0, 1, v182);
            }
            uint64_t v185 = v420[8];
            uint64_t v186 = (void *)((char *)v125 + v185);
            uint64_t v187 = (char *)&v415[v185];
            uint64_t v188 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v189 = swift_getEnumCaseMultiPayload();
            if (v189 == 1)
            {
              uint64_t v191 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v186, v187, v191);
              goto LABEL_156;
            }
            if (!v189)
            {
              uint64_t v190 = *((void *)v187 + 1);
              *uint64_t v186 = *(void *)v187;
              v186[1] = v190;
              swift_bridgeObjectRetain();
LABEL_156:
              swift_storeEnumTagMultiPayload();
              goto LABEL_158;
            }
            memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
LABEL_158:
            uint64_t v192 = v420[9];
            unint64_t v193 = (char *)v125 + v192;
            uint64_t v194 = (char *)&v415[v192];
            uint64_t v195 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v195))
            {
              uint64_t v196 = sub_10017DF08(&qword_100E63740);
              memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
            }
            else
            {
              uint64_t v197 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v197))
              {
                uint64_t v198 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v193, v194, *(void *)(*(void *)(v198 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v193, v194, v197);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v197);
              }
              uint64_t v222 = *(int *)(v195 + 20);
              uint64_t v223 = &v193[v222];
              uint64_t v224 = &v194[v222];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v197))
              {
                uint64_t v225 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v223, v224, *(void *)(*(void *)(v225 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v223, v224, v197);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v197);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v195);
            }
            uint64_t v226 = v401[16];
            uint64_t v227 = (char *)v405 + v226;
            uint64_t v228 = &v10[v226];
            uint64_t v229 = type metadata accessor for UUID();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v229 - 8) + 16))(v227, v228, v229);
            uint64_t v230 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v227[*(int *)(v230 + 20)] = *(void *)&v228[*(int *)(v230 + 20)];
            uint64_t v411 = (int *)v230;
            uint64_t v417 = v228;
            uint64_t v231 = *(int *)(v230 + 24);
            uint64_t v423 = v227;
            id v232 = &v227[v231];
            Swift::String v233 = (char *)&v228[v231];
            uint64_t v234 = *(void *)&v228[v231 + 8];
            *(void *)id v232 = *(void *)&v228[v231];
            *((void *)v232 + 1) = v234;
            uint64_t v235 = *(void *)&v228[v231 + 16];
            uint64_t v236 = *((void *)v233 + 3);
            *((void *)v232 + 2) = v235;
            *((void *)v232 + 3) = v236;
            uint64_t v237 = *((void *)v233 + 5);
            *((void *)v232 + 4) = *((void *)v233 + 4);
            *((void *)v232 + 5) = v237;
            uint64_t v387 = v232;
            uint64_t v392 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v238 = *(int *)(v392 + 28);
            uint64_t v397 = &v232[v238];
            uint64_t v385 = v233;
            uint64_t v239 = &v233[v238];
            uint64_t v240 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            swift_bridgeObjectRetain();
            uint64_t v241 = v239;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v240))
            {
              uint64_t v242 = sub_10017DF08(&qword_100E63750);
              memcpy(v397, v239, *(void *)(*(void *)(v242 - 8) + 64));
            }
            else
            {
              uint64_t v243 = *((void *)v239 + 1);
              *(void *)uint64_t v397 = *v241;
              *((void *)v397 + 1) = v243;
              uint64_t v244 = *(int *)(v240 + 20);
              uint64_t v245 = &v397[v244];
              uint64_t v246 = (char *)v241 + v244;
              uint64_t v247 = type metadata accessor for TemperatureScaleConfiguration();
              uint64_t v383 = *(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16);
              swift_bridgeObjectRetain();
              v383(v245, v246, v247);
              uint64_t v248 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v245[v248[5]] = *(void *)&v246[v248[5]];
              *(void *)&v245[v248[6]] = *(void *)&v246[v248[6]];
              *(void *)&v245[v248[7]] = *(void *)&v246[v248[7]];
              uint64_t v249 = v248[8];
              uint64_t v250 = &v245[v249];
              uint64_t v251 = &v246[v249];
              uint64_t v253 = *(void *)v251;
              uint64_t v252 = *((void *)v251 + 1);
              *(void *)uint64_t v250 = v253;
              *((void *)v250 + 1) = v252;
              v245[v248[9]] = v246[v248[9]];
              swift_bridgeObjectRetain();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v397, 0, 1, v240);
            }
            uint64_t v254 = *(int *)(v392 + 32);
            uint64_t v255 = (void *)((char *)v387 + v254);
            uint64_t v256 = (void *)((char *)v385 + v254);
            uint64_t v257 = v256[1];
            *uint64_t v255 = *v256;
            v255[1] = v257;
            uint64_t v258 = v411[7];
            uint64_t v259 = &v423[v258];
            uint64_t v260 = &v417[v258];
            *(void *)&v423[v258] = *(void *)&v417[v258];
            uint64_t v261 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            uint64_t v262 = &v259[v261];
            uint64_t v263 = &v260[v261];
            uint64_t v264 = type metadata accessor for WeatherDescription();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v380 = v264;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v263, 1, v264))
            {
              uint64_t v265 = sub_10017DF08(&qword_100E63758);
              memcpy(v262, v263, *(void *)(*(void *)(v265 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v264 - 8) + 16))(v262, v263, v264);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v262, 0, 1, v264);
            }
            uint64_t v266 = v411[8];
            uint64_t v267 = &v423[v266];
            uint64_t v268 = &v417[v266];
            uint64_t v398 = *(void *)&v417[v266 + 8];
            *(void *)uint64_t v267 = *(void *)&v417[v266];
            *((void *)v267 + 1) = v398;
            uint64_t v393 = *(void *)&v417[v266 + 24];
            *((void *)v267 + 2) = *(void *)&v417[v266 + 16];
            *((void *)v267 + 3) = v393;
            uint64_t v269 = *(void *)&v417[v266 + 40];
            *((void *)v267 + 4) = *(void *)&v417[v266 + 32];
            *((void *)v267 + 5) = v269;
            uint64_t v388 = *(void *)&v417[v266 + 56];
            *((void *)v267 + 6) = *(void *)&v417[v266 + 48];
            *((void *)v267 + 7) = v388;
            uint64_t v270 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            uint64_t v271 = &v267[v270];
            uint64_t v373 = &v268[v270];
            uint64_t v272 = type metadata accessor for Date();
            uint64_t v273 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v272 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v389 = v273;
            uint64_t v394 = v272;
            v273(v271, v373, v272);
            uint64_t v274 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v275 = *(int *)(v274 + 20);
            uint64_t v377 = v271;
            uint64_t v276 = &v271[v275];
            v277 = &v373[v275];
            uint64_t v278 = type metadata accessor for Elevation();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, v278))
            {
              uint64_t v279 = sub_10017DF08(&qword_100E63760);
              memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v278 - 8) + 16))(v276, v277, v278);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, v278);
            }
            uint64_t v280 = *(int *)(v274 + 24);
            uint64_t v281 = &v377[v280];
            uint64_t v282 = &v373[v280];
            uint64_t v283 = type metadata accessor for BackgroundMoonData();
            uint64_t v399 = v274;
            uint64_t v384 = v278;
            uint64_t v369 = v283;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v282, 1, v283))
            {
              uint64_t v284 = sub_10017DF08(&qword_100E63768);
              memcpy(v281, v282, *(void *)(*(void *)(v284 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v283 - 8) + 16))(v281, v282, v283);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v281, 0, 1, v283);
            }
            uint64_t v285 = v411[9];
            uint64_t v286 = &v423[v285];
            uint64_t v287 = &v417[v285];
            uint64_t v288 = *((void *)v287 + 1);
            *(void *)uint64_t v286 = *(void *)v287;
            *((void *)v286 + 1) = v288;
            uint64_t v289 = *((void *)v287 + 3);
            *((void *)v286 + 2) = *((void *)v287 + 2);
            *((void *)v286 + 3) = v289;
            uint64_t v290 = *((void *)v287 + 5);
            *((void *)v286 + 4) = *((void *)v287 + 4);
            *((void *)v286 + 5) = v290;
            uint64_t v291 = *((void *)v287 + 7);
            *((void *)v286 + 6) = *((void *)v287 + 6);
            *((void *)v286 + 7) = v291;
            uint64_t v292 = *((void *)v287 + 9);
            *((void *)v286 + 8) = *((void *)v287 + 8);
            *((void *)v286 + 9) = v292;
            uint64_t v293 = *((void *)v287 + 11);
            *((void *)v286 + 10) = *((void *)v287 + 10);
            *((void *)v286 + 11) = v293;
            uint64_t v370 = *((void *)v287 + 13);
            *((void *)v286 + 12) = *((void *)v287 + 12);
            *((void *)v286 + 13) = v370;
            uint64_t v294 = v411[10];
            v374 = &v417[v294];
            uint64_t v378 = &v423[v294];
            v371 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v380 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v371(v378, v374, v380);
            uint64_t v295 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
            uint64_t v296 = &v378[v295];
            id v297 = &v374[v295];
            uint64_t v381 = *((void *)v297 + 1);
            *(void *)uint64_t v296 = *(void *)v297;
            *((void *)v296 + 1) = v381;
            uint64_t v298 = v411[11];
            uint64_t v299 = &v423[v298];
            uint64_t v300 = &v417[v298];
            uint64_t v301 = *((void *)v300 + 1);
            *(void *)uint64_t v299 = *(void *)v300;
            *((void *)v299 + 1) = v301;
            uint64_t v302 = *((void *)v300 + 3);
            *((void *)v299 + 2) = *((void *)v300 + 2);
            *((void *)v299 + 3) = v302;
            uint64_t v375 = *((void *)v300 + 5);
            *((void *)v299 + 4) = *((void *)v300 + 4);
            *((void *)v299 + 5) = v375;
            uint64_t v303 = v411[12];
            uint64_t v304 = &v423[v303];
            uint64_t v305 = &v417[v303];
            uint64_t v306 = type metadata accessor for PressureTrend();
            uint64_t v372 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v306 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v372(v304, v305, v306);
            uint64_t v307 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            uint64_t v308 = v307[5];
            uint64_t v309 = &v304[v308];
            uint64_t v310 = &v305[v308];
            uint64_t v311 = *((void *)v310 + 1);
            *(void *)uint64_t v309 = *(void *)v310;
            *((void *)v309 + 1) = v311;
            uint64_t v312 = v307[6];
            Swift::String v313 = &v304[v312];
            Swift::String v314 = &v305[v312];
            uint64_t v382 = *((void *)v314 + 1);
            *(void *)Swift::String v313 = *(void *)v314;
            *((void *)v313 + 1) = v382;
            uint64_t v315 = v307[7];
            v316 = &v304[v315];
            uint64_t v317 = &v305[v315];
            uint64_t v379 = *((void *)v317 + 1);
            *(void *)v316 = *(void *)v317;
            *((void *)v316 + 1) = v379;
            *(void *)&v304[v307[8]] = *(void *)&v305[v307[8]];
            uint64_t v318 = v307[9];
            uint64_t v319 = &v304[v318];
            uint64_t v320 = &v305[v318];
            uint64_t v376 = *((void *)v320 + 1);
            *(void *)uint64_t v319 = *(void *)v320;
            *((void *)v319 + 1) = v376;
            uint64_t v321 = v411[13];
            uint64_t v322 = &v423[v321];
            uint64_t v323 = &v417[v321];
            uint64_t v324 = *((void *)v323 + 1);
            *(void *)uint64_t v322 = *(void *)v323;
            *((void *)v322 + 1) = v324;
            uint64_t v325 = *((void *)v323 + 3);
            *((void *)v322 + 2) = *((void *)v323 + 2);
            *((void *)v322 + 3) = v325;
            uint64_t v326 = *((void *)v323 + 5);
            *((void *)v322 + 4) = *((void *)v323 + 4);
            *((void *)v322 + 5) = v326;
            uint64_t v327 = *((void *)v323 + 7);
            *((void *)v322 + 6) = *((void *)v323 + 6);
            *((void *)v322 + 7) = v327;
            uint64_t v328 = *((void *)v323 + 9);
            *((void *)v322 + 8) = *((void *)v323 + 8);
            *((void *)v322 + 9) = v328;
            uint64_t v329 = *((void *)v323 + 11);
            *((void *)v322 + 10) = *((void *)v323 + 10);
            *((void *)v322 + 11) = v329;
            uint64_t v330 = *((void *)v323 + 13);
            *((void *)v322 + 12) = *((void *)v323 + 12);
            *((void *)v322 + 13) = v330;
            uint64_t v331 = *((void *)v323 + 15);
            *((void *)v322 + 14) = *((void *)v323 + 14);
            *((void *)v322 + 15) = v331;
            uint64_t v332 = *((void *)v323 + 17);
            *((void *)v322 + 16) = *((void *)v323 + 16);
            *((void *)v322 + 17) = v332;
            uint64_t v333 = *((void *)v323 + 19);
            *((void *)v322 + 18) = *((void *)v323 + 18);
            *((void *)v322 + 19) = v333;
            uint64_t v334 = *((void *)v323 + 21);
            *((void *)v322 + 20) = *((void *)v323 + 20);
            *((void *)v322 + 21) = v334;
            uint64_t v335 = *((void *)v323 + 23);
            *((void *)v322 + 22) = *((void *)v323 + 22);
            *((void *)v322 + 23) = v335;
            uint64_t v336 = *((void *)v323 + 25);
            *((void *)v322 + 24) = *((void *)v323 + 24);
            *((void *)v322 + 25) = v336;
            *((_OWORD *)v322 + 13) = *((_OWORD *)v323 + 13);
            *((void *)v322 + 28) = *((void *)v323 + 28);
            uint64_t v337 = v411[14];
            char v338 = &v423[v337];
            uint64_t v339 = &v417[v337];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v389(v338, v339, v394);
            uint64_t v340 = *(int *)(v399 + 20);
            uint64_t v390 = v338;
            unint64_t v341 = &v338[v340];
            uint64_t v342 = &v339[v340];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v339[v340], 1, v384))
            {
              uint64_t v343 = sub_10017DF08(&qword_100E63760);
              memcpy(v341, v342, *(void *)(*(void *)(v343 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v384 - 8) + 16))(v341, v342, v384);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v341, 0, 1, v384);
            }
            uint64_t v344 = *(int *)(v399 + 24);
            uint64_t v345 = &v390[v344];
            v346 = &v339[v344];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v339[v344], 1, v369))
            {
              uint64_t v347 = sub_10017DF08(&qword_100E63768);
              memcpy(v345, v346, *(void *)(*(void *)(v347 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v369 - 8) + 16))(v345, v346, v369);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v345, 0, 1, v369);
            }
            uint64_t v348 = v411[15];
            uint64_t v349 = &v423[v348];
            uint64_t v350 = &v417[v348];
            uint64_t v351 = *((void *)v350 + 1);
            *(void *)uint64_t v349 = *(void *)v350;
            *((void *)v349 + 1) = v351;
            uint64_t v352 = *((void *)v350 + 3);
            *((void *)v349 + 2) = *((void *)v350 + 2);
            *((void *)v349 + 3) = v352;
            uint64_t v353 = *((void *)v350 + 5);
            *((void *)v349 + 4) = *((void *)v350 + 4);
            *((void *)v349 + 5) = v353;
            uint64_t v418 = *((void *)v350 + 7);
            *((void *)v349 + 6) = *((void *)v350 + 6);
            *((void *)v349 + 7) = v418;
            uint64_t v412 = *((void *)v350 + 9);
            *((void *)v349 + 8) = *((void *)v350 + 8);
            *((void *)v349 + 9) = v412;
            uint64_t v354 = *((void *)v350 + 11);
            *((void *)v349 + 10) = *((void *)v350 + 10);
            *((void *)v349 + 11) = v354;
            uint64_t v424 = *((void *)v350 + 13);
            *((void *)v349 + 12) = *((void *)v350 + 12);
            *((void *)v349 + 13) = v424;
            uint64_t v355 = v401[20];
            uint64_t v402 = (uint64_t *)((char *)v405 + v355);
            uint64_t v356 = &v10[v355];
            type metadata accessor for NewsDataModel();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v402 = *(void *)v356;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v357 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v357 - 8) + 16))(v402, v356, v357);
            }
LABEL_141:
            swift_storeEnumTagMultiPayload();
LABEL_216:
            swift_storeEnumTagMultiPayload();
LABEL_217:
            swift_storeEnumTagMultiPayload();
LABEL_218:
            uint64_t v364 = *(int *)(a3 + 28);
            uint64_t v365 = (uint64_t *)((char *)v4 + v364);
            uint64_t v366 = (uint64_t *)((char *)a2 + v364);
            uint64_t v367 = v366[1];
            *uint64_t v365 = *v366;
            v365[1] = v367;
            swift_bridgeObjectRetain();
            break;
          case 5u:
            uint64_t v132 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v132;
            swift_bridgeObjectRetain();
            uint64_t v133 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            uint64_t v134 = (uint64_t *)((char *)v9 + v133);
            uint64_t v135 = &v10[v133];
            type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v134 = *(void *)v135;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v172 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v172 - 8) + 16))(v134, v135, v172);
            }
            goto LABEL_141;
          case 6u:
            uint64_t v136 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v136;
            swift_bridgeObjectRetain();
            uint64_t v137 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            uint64_t v138 = (char *)v9 + v137;
            uint64_t v139 = &v10[v137];
            uint64_t v140 = type metadata accessor for AvailableDataSets();
            goto LABEL_114;
          case 8u:
            uint64_t v141 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v141;
            swift_bridgeObjectRetain();
            uint64_t v142 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            uint64_t v138 = (char *)v9 + v142;
            uint64_t v139 = &v10[v142];
            uint64_t v140 = type metadata accessor for WeatherStatisticsModel();
LABEL_114:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
            goto LABEL_216;
          default:
            uint64_t v44 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v44;
LABEL_67:
            swift_bridgeObjectRetain();
            goto LABEL_216;
        }
        break;
      case 0xAu:
        uint64_t v21 = type metadata accessor for DebugAction();
        int v45 = swift_getEnumCaseMultiPayload();
        if (v45 == 1) {
          goto LABEL_38;
        }
        if (v45) {
          goto LABEL_61;
        }
        uint64_t v46 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v46))
        {
          uint64_t v47 = sub_10017DF08(&qword_100E63A50);
          memcpy(v9, v10, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v46 - 8) + 16))(v9, v10, v46);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v46);
        }
        uint64_t v116 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
        uint64_t v117 = (uint64_t *)((char *)v9 + v116);
        uint64_t v118 = &v10[v116];
        uint64_t v119 = *((void *)v118 + 1);
        void *v117 = *(void *)v118;
        v117[1] = v119;
        swift_bridgeObjectRetain();
        goto LABEL_216;
      case 0xBu:
        uint64_t v21 = type metadata accessor for ConditionDetailViewAction();
        int v22 = swift_getEnumCaseMultiPayload();
        switch(v22)
        {
          case 2:
            uint64_t v413 = *((void *)v10 + 1);
            *uint64_t v9 = *(void *)v10;
            v9[1] = v413;
            uint64_t v51 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v52 = v51[5];
            uint64_t v403 = &v10[v52];
            uint64_t v407 = (char *)v9 + v52;
            uint64_t v53 = type metadata accessor for Date();
            char v54 = v9;
            uint64_t v55 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v53 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v407, v403, v53);
            v55((char *)v54 + v51[6], &v10[v51[6]], v53);
            v55((char *)v54 + v51[7], &v10[v51[7]], v53);
            *(uint64_t *)((char *)v54 + v51[8]) = *(void *)&v10[v51[8]];
            uint64_t v56 = v51[9];
            uint64_t v57 = (char *)v54 + v56;
            uint64_t v58 = &v10[v56];
            v57[8] = v58[8];
            *(void *)uint64_t v57 = *(void *)v58;
            goto LABEL_216;
          case 1:
            uint64_t v59 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v59 - 8) + 16))(v9, v10, v59);
            goto LABEL_216;
          case 0:
LABEL_15:
            uint64_t v23 = type metadata accessor for Date();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v23 - 8) + 16))(v9, v10, v23);
            goto LABEL_216;
        }
LABEL_61:
        memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64));
        goto LABEL_217;
      case 0xDu:
        uint64_t v21 = type metadata accessor for MoonDetailViewAction();
        int v24 = swift_getEnumCaseMultiPayload();
        if (v24 == 1) {
          goto LABEL_15;
        }
        if (v24) {
          goto LABEL_61;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v25 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v25 - 8) + 16))(v9, v10, v25);
        swift_storeEnumTagMultiPayload();
        goto LABEL_216;
      case 0xEu:
        uint64_t v21 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_61;
        }
        *uint64_t v9 = *(void *)v10;
        uint64_t v26 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v27 = v26[5];
        uint64_t v28 = (char *)v9 + v27;
        uint64_t v29 = &v10[v27];
        uint64_t v30 = type metadata accessor for Date();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        *(uint64_t *)((char *)v9 + v26[6]) = *(void *)&v10[v26[6]];
        *(uint64_t *)((char *)v9 + v26[7]) = *(void *)&v10[v26[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_217;
      case 0x10u:
        uint64_t v31 = *((void *)v10 + 1);
        *uint64_t v9 = *(void *)v10;
        v9[1] = v31;
        swift_bridgeObjectRetain();
        goto LABEL_217;
      case 0x11u:
        uint64_t v48 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v49 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v49 - 8) + 16))(v9, v10, v49);
            goto LABEL_72;
          case 2u:
            uint64_t v75 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v75 - 8) + 16))(v9, v10, v75);
            goto LABEL_72;
          case 3u:
            *uint64_t v9 = *(void *)v10;
            uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v77 = *(int *)(v76 + 48);
            uint64_t v78 = (char *)v9 + v77;
            uint64_t v79 = &v10[v77];
            uint64_t v80 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v80 - 8) + 16))(v78, v79, v80);
            *((unsigned char *)v9 + *(int *)(v76 + 64)) = v10[*(int *)(v76 + 64)];
            goto LABEL_72;
          case 4u:
            uint64_t v81 = type metadata accessor for WeatherCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v81 - 8) + 16))(v9, v10, v81);
LABEL_72:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v48 - 8) + 64));
            break;
        }
        goto LABEL_217;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_218;
    }
  }
  return v4;
}

uint64_t sub_10036A7BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = type metadata accessor for AppConfiguration();
      goto LABEL_80;
    case 2u:
      type metadata accessor for EnvironmentAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v5 = type metadata accessor for Locale();
          goto LABEL_80;
        case 3u:
          type metadata accessor for ActivityAction();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            type metadata accessor for PreviewLocation();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                goto LABEL_79;
              case 1u:
                goto LABEL_52;
              case 2u:
                goto LABEL_97;
              case 3u:
                goto LABEL_126;
              default:
                goto LABEL_127;
            }
            goto LABEL_127;
          }
          if (EnumCaseMultiPayload) {
            goto LABEL_127;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v5 = type metadata accessor for SavedLocation.Placeholder();
            goto LABEL_80;
          }
          goto LABEL_79;
        case 4u:
          goto LABEL_126;
        case 9u:
          if (*(void *)(v4 + 8) >= 2uLL) {
            goto LABEL_126;
          }
          goto LABEL_127;
        case 0xBu:
          type metadata accessor for ConfiguredUnitsAction();
          int v23 = swift_getEnumCaseMultiPayload();
          if (v23 == 1)
          {
            uint64_t v8 = type metadata accessor for UnitConfiguration.Temperature();
            goto LABEL_104;
          }
          if (v23) {
            goto LABEL_127;
          }
          uint64_t v5 = type metadata accessor for ConfiguredUnit();
          break;
        default:
          goto LABEL_127;
      }
      goto LABEL_80;
    case 3u:
      type metadata accessor for LocationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for CurrentLocation();
          int v6 = swift_getEnumCaseMultiPayload();
          if (v6 == 2 || v6 == 1) {
            goto LABEL_79;
          }
          goto LABEL_26;
        case 1u:
          goto LABEL_79;
        case 2u:
          goto LABEL_29;
        case 5u:
          goto LABEL_126;
        case 6u:
          sub_10015303C(*(void *)v4, *(void *)(v4 + 8), *(unsigned char *)(v4 + 16));
          break;
        default:
          goto LABEL_127;
      }
      goto LABEL_127;
    case 4u:
      type metadata accessor for NotificationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v7 = type metadata accessor for LocationModel();
          if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v7)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
          }
          v4 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
          uint64_t v8 = type metadata accessor for URL();
          goto LABEL_104;
        case 2u:
          uint64_t v24 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v4, v24);
          uint64_t v25 = &qword_100E6F630;
          goto LABEL_71;
        case 3u:
        case 4u:
          goto LABEL_126;
        case 5u:
          uint64_t v26 = type metadata accessor for Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v4, v26);
          uint64_t v25 = &qword_100E6F638;
LABEL_71:
          v4 += *(int *)(sub_10017DF08(v25) + 48);
          uint64_t v5 = type metadata accessor for NotificationSubscription.Kind();
          goto LABEL_80;
        default:
          goto LABEL_127;
      }
    case 5u:
      type metadata accessor for NotificationsOptInAction();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 4) {
        goto LABEL_46;
      }
      if (v9 == 3) {
        goto LABEL_126;
      }
      if (v9 != 2) {
        goto LABEL_127;
      }
      goto LABEL_79;
    case 6u:
      type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for ListViewAction();
          int v10 = swift_getEnumCaseMultiPayload();
          if (v10 == 2) {
            goto LABEL_82;
          }
          goto LABEL_74;
        case 1u:
          type metadata accessor for LocationViewerViewAction();
          int v10 = swift_getEnumCaseMultiPayload();
          if (v10 == 2)
          {
LABEL_82:
            uint64_t v5 = type metadata accessor for Location.Identifier();
            goto LABEL_80;
          }
          if (v10 == 1) {
            goto LABEL_57;
          }
LABEL_74:
          if (!v10)
          {
            uint64_t v5 = type metadata accessor for LocationModel();
            goto LABEL_80;
          }
          break;
        case 3u:
          type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v5 = type metadata accessor for CodableError();
              goto LABEL_80;
            case 1u:
            case 2u:
              goto LABEL_126;
            case 3u:
            case 6u:
              goto LABEL_79;
            case 4u:
              goto LABEL_52;
            case 5u:
LABEL_97:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v4 += *(int *)(type metadata accessor for SearchLocation() + 32);
              uint64_t v8 = type metadata accessor for Location();
              goto LABEL_104;
            default:
              goto LABEL_127;
          }
          goto LABEL_127;
        case 4u:
          type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              goto LABEL_79;
            case 3u:
              goto LABEL_57;
            default:
              goto LABEL_127;
          }
          goto LABEL_127;
        case 5u:
          v4 += *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v5 = type metadata accessor for DynamicTypeSize();
          goto LABEL_80;
        default:
          goto LABEL_127;
      }
      goto LABEL_127;
    case 7u:
      type metadata accessor for ModalViewAction();
      int v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 3)
      {
        if ((~*(void *)v4 & 0xF000000000000006) != 0) {
          sub_100274E38(*(void *)v4);
        }
      }
      else if (!v11)
      {
        type metadata accessor for LocationPreviewViewAction();
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_79;
        }
      }
      goto LABEL_127;
    case 8u:
      type metadata accessor for LocationViewAction();
      int v6 = swift_getEnumCaseMultiPayload();
      if (v6 == 2)
      {
        uint64_t v16 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v4, v16);
        v4 += *(int *)(sub_10017DF08(&qword_100E66450) + 48);
LABEL_52:
        uint64_t v5 = type metadata accessor for LocationOfInterest();
        goto LABEL_80;
      }
      if (v6 == 1)
      {
        type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = type metadata accessor for URL();
            goto LABEL_101;
          case 1u:
            uint64_t v17 = type metadata accessor for WeatherMapOverlayKind();
            goto LABEL_101;
          case 2u:
            uint64_t v17 = type metadata accessor for DetailCondition();
LABEL_101:
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v4, v17);
            break;
          case 4u:
            uint64_t v40 = v4 + *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v41 = type metadata accessor for Location();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
            break;
          default:
            break;
        }
        v4 += *(int *)(sub_10017DF08(&qword_100E66458) + 64);
        uint64_t v8 = type metadata accessor for Date();
LABEL_104:
        uint64_t v42 = v8;
        if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v8)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v4, v42);
        }
        goto LABEL_127;
      }
LABEL_26:
      if (v6) {
        goto LABEL_127;
      }
LABEL_79:
      uint64_t v5 = type metadata accessor for Location();
      goto LABEL_80;
    case 9u:
      type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 7u:
          goto LABEL_126;
        case 2u:
          swift_bridgeObjectRelease();
          if (*(void *)(v4 + 24) >= 0xEuLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_126;
        case 3u:
        case 9u:
LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_126;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v27 = sub_10017DF08(&qword_100E6BBC0);
          uint64_t v28 = v4 + *(int *)(v27 + 48);
          swift_bridgeObjectRelease();
          uint64_t v29 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v30 = v28 + v29[5];
          uint64_t v31 = type metadata accessor for Locale();
          if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
          }
          uint64_t v32 = v28 + v29[6];
          uint64_t v33 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
          uint64_t v34 = v28 + v29[7];
          uint64_t v35 = sub_10017DF08(&qword_100E63738);
          if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35))
          {
            uint64_t v36 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v34, v36);
          }
          uint64_t v37 = v28 + v29[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v38 = swift_getEnumCaseMultiPayload();
          if (v38 == 1)
          {
            uint64_t v43 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v37, v43);
          }
          else if (!v38)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v44 = v28 + v29[9];
          uint64_t v45 = type metadata accessor for WeatherDataOverrides();
          if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45))
          {
            uint64_t v46 = type metadata accessor for Date();
            if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v46)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v44, v46);
            }
            uint64_t v47 = v44 + *(int *)(v45 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v46)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v47, v46);
            }
          }
          uint64_t v75 = v27;
          uint64_t v48 = v4 + *(int *)(v27 + 64);
          uint64_t v49 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
          uint64_t v50 = (int *)type metadata accessor for PreprocessedWeatherData();
          swift_bridgeObjectRelease();
          uint64_t v51 = v48 + v50[6];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v52 = v51 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
          uint64_t v53 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v52, 1, v53))
          {
            swift_bridgeObjectRelease();
            uint64_t v54 = v52 + *(int *)(v53 + 20);
            uint64_t v55 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
            type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v56 = v48 + v50[7];
          swift_bridgeObjectRelease();
          uint64_t v57 = v56 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v58 = type metadata accessor for WeatherDescription();
          if (!_s7Weather24LocationCompositionStateOwet_0(v57, 1, v58)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
          }
          uint64_t v59 = v48 + v50[8];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v60 = v59 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v61 = type metadata accessor for Date();
          uint64_t v73 = *(void (**)(uint64_t))(*(void *)(v61 - 8) + 8);
          uint64_t v74 = v61;
          v73(v60);
          uint64_t v62 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v63 = v60 + *(int *)(v62 + 20);
          uint64_t v64 = type metadata accessor for Elevation();
          if (!_s7Weather24LocationCompositionStateOwet_0(v63, 1, v64)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
          }
          uint64_t v65 = v60 + *(int *)(v62 + 24);
          uint64_t v66 = type metadata accessor for BackgroundMoonData();
          if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v66)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v48 + v50[10], v58);
          type metadata accessor for UVIndexComponentPreprocessedDataModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v67 = v48 + v50[12];
          uint64_t v68 = type metadata accessor for PressureTrend();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
          type metadata accessor for PressureComponentPreprocessedDataModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v69 = v48 + v50[14];
          ((void (*)(uint64_t, uint64_t))v73)(v69, v74);
          uint64_t v70 = v69 + *(int *)(v62 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v70, 1, v64)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v70, v64);
          }
          uint64_t v71 = v69 + *(int *)(v62 + 24);
          if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v66)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v71, v66);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v39 = *(int *)(v75 + 80);
          goto LABEL_125;
        case 5u:
          swift_bridgeObjectRelease();
          uint64_t v39 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
LABEL_125:
          v4 += v39;
          type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload() == 1) {
            goto LABEL_126;
          }
          uint64_t v5 = type metadata accessor for News();
          break;
        case 6u:
          swift_bridgeObjectRelease();
          v4 += *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v5 = type metadata accessor for AvailableDataSets();
          goto LABEL_80;
        case 8u:
          swift_bridgeObjectRelease();
          v4 += *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v5 = type metadata accessor for WeatherStatisticsModel();
          goto LABEL_80;
        default:
          goto LABEL_127;
      }
      goto LABEL_80;
    case 0xAu:
      type metadata accessor for DebugAction();
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 1) {
        goto LABEL_79;
      }
      if (v12) {
        goto LABEL_127;
      }
      uint64_t v13 = type metadata accessor for WeatherCondition();
      if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v4, v13);
      }
      sub_10017DF08(&qword_100E6F648);
LABEL_126:
      swift_bridgeObjectRelease();
      goto LABEL_127;
    case 0xBu:
      type metadata accessor for ConditionDetailViewAction();
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 2)
      {
        swift_bridgeObjectRelease();
        int v18 = (int *)type metadata accessor for DetailChartSelection();
        uint64_t v19 = v4 + v18[5];
        uint64_t v20 = type metadata accessor for Date();
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
        v21(v19, v20);
        v21(v4 + v18[6], v20);
        v21(v4 + v18[7], v20);
      }
      else
      {
        if (v14 == 1)
        {
LABEL_48:
          uint64_t v5 = type metadata accessor for DetailCondition();
        }
        else
        {
LABEL_42:
          if (v14) {
            goto LABEL_127;
          }
LABEL_46:
          uint64_t v5 = type metadata accessor for Date();
        }
LABEL_80:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      }
LABEL_127:
      return swift_bridgeObjectRelease();
    case 0xDu:
      type metadata accessor for MoonDetailViewAction();
      int v15 = swift_getEnumCaseMultiPayload();
      if (v15 == 1) {
        goto LABEL_46;
      }
      if (v15) {
        goto LABEL_127;
      }
      type metadata accessor for MoonDetailSelectedDate();
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 != 2 && v14 != 1) {
        goto LABEL_42;
      }
      goto LABEL_46;
    case 0xEu:
      type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_127;
      }
      v4 += *(int *)(type metadata accessor for DetailHeroChartLollipopPosition(0) + 20);
      goto LABEL_46;
    case 0x10u:
      goto LABEL_126;
    case 0x11u:
      type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_48;
        case 2u:
          goto LABEL_79;
        case 3u:
          v4 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 48);
LABEL_57:
          uint64_t v5 = type metadata accessor for WeatherMapOverlayKind();
          goto LABEL_80;
        case 4u:
          uint64_t v5 = type metadata accessor for WeatherCondition();
          goto LABEL_80;
        default:
          goto LABEL_127;
      }
      goto LABEL_127;
    default:
      goto LABEL_127;
  }
}

uint64_t sub_10036BBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  int v9 = (unsigned __int8 *)(a2 + v7);
  uint64_t v10 = type metadata accessor for MainAction();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = type metadata accessor for AppConfiguration();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
      goto LABEL_216;
    case 2u:
      uint64_t v19 = type metadata accessor for EnvironmentAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v30 = type metadata accessor for Locale();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(v8, v9, v30);
          goto LABEL_215;
        case 3u:
          uint64_t v38 = type metadata accessor for ActivityAction();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            type metadata accessor for PreviewLocation();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v150 = type metadata accessor for LocationOfInterest();
                goto LABEL_176;
              case 2u:
                uint64_t v215 = *((void *)v9 + 1);
                uint64_t v401 = *(void **)v9;
                *uint64_t v8 = *(void *)v9;
                v8[1] = v215;
                uint64_t v216 = *((void *)v9 + 3);
                v8[2] = *((void *)v9 + 2);
                v8[3] = v216;
                uint64_t v217 = *((void *)v9 + 5);
                v8[4] = *((void *)v9 + 4);
                v8[5] = v217;
                v8[6] = *((void *)v9 + 6);
                uint64_t v218 = type metadata accessor for SearchLocation();
                uint64_t v219 = *(int *)(v218 + 32);
                uint64_t v409 = (char *)v8 + v219;
                uint64_t v416 = v218;
                uint64_t v220 = &v9[v219];
                uint64_t v221 = type metadata accessor for Location();
                id v222 = v401;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v220, 1, v221))
                {
                  uint64_t v223 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v409, v220, *(void *)(*(void *)(v223 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v221 - 8) + 16))(v409, v220, v221);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v409, 0, 1, v221);
                }
                uint64_t v364 = *(int *)(v416 + 36);
                uint64_t v365 = (char *)v8 + v364;
                uint64_t v366 = &v9[v364];
                *(_OWORD *)uint64_t v365 = *(_OWORD *)v366;
                v365[16] = v366[16];
                break;
              case 3u:
                *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
                uint64_t v224 = *((void *)v9 + 3);
                v8[2] = *((void *)v9 + 2);
                v8[3] = v224;
                swift_bridgeObjectRetain();
                break;
              default:
                uint64_t v150 = type metadata accessor for Location();
LABEL_176:
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(v8, v9, v150);
                break;
            }
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_100;
            }
            type metadata accessor for SavedLocation();
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v97 = type metadata accessor for SavedLocation.Placeholder();
            }
            else {
              uint64_t v97 = type metadata accessor for Location();
            }
            (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v97 - 8) + 16))(v8, v9);
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_215;
        case 4u:
          uint64_t v87 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v87;
          swift_bridgeObjectRetain();
          goto LABEL_215;
        case 9u:
          unint64_t v98 = *((void *)v9 + 1);
          if (v98 >= 2)
          {
            *uint64_t v8 = *(void *)v9;
            v8[1] = v98;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
          }
          goto LABEL_215;
        case 0xBu:
          uint64_t v38 = type metadata accessor for ConfiguredUnitsAction();
          int v99 = swift_getEnumCaseMultiPayload();
          if (v99 == 1)
          {
            uint64_t v151 = type metadata accessor for UnitConfiguration.Temperature();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v151))
            {
              uint64_t v152 = sub_10017DF08(&qword_100E6F620);
              memcpy(v8, v9, *(void *)(*(void *)(v152 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v151 - 8) + 16))(v8, v9, v151);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v151);
            }
          }
          else
          {
            if (v99) {
              goto LABEL_100;
            }
            uint64_t v100 = type metadata accessor for ConfiguredUnit();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v100 - 8) + 16))(v8, v9, v100);
          }
          break;
        default:
          goto LABEL_59;
      }
      goto LABEL_174;
    case 3u:
      uint64_t v12 = type metadata accessor for LocationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v13 = type metadata accessor for CurrentLocation();
          if (swift_getEnumCaseMultiPayload() > 2)
          {
            memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            uint64_t v174 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v174 - 8) + 16))(v8, v9, v174);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_140;
        case 1u:
          uint64_t v80 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v80 - 8) + 16))(v8, v9, v80);
          uint64_t v81 = sub_10017DF08(&qword_100E6F628);
          *((unsigned char *)v8 + *(int *)(v81 + 48)) = v9[*(int *)(v81 + 48)];
          goto LABEL_140;
        case 2u:
          uint64_t v82 = *(void *)v9;
          uint64_t v83 = *((void *)v9 + 1);
          *uint64_t v8 = v82;
          v8[1] = v83;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_140;
        case 5u:
          *uint64_t v8 = *(void *)v9;
          swift_bridgeObjectRetain();
          goto LABEL_140;
        case 6u:
          uint64_t v88 = *(void *)v9;
          uint64_t v89 = *((void *)v9 + 1);
          unsigned __int8 v90 = v9[16];
          sub_10015458C(v88, v89, v90);
          *uint64_t v8 = v88;
          v8[1] = v89;
          *((unsigned char *)v8 + 16) = v90;
LABEL_140:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      goto LABEL_216;
    case 4u:
      uint64_t v31 = type metadata accessor for NotificationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v32 = type metadata accessor for LocationModel();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v32))
          {
            uint64_t v33 = type metadata accessor for NotificationLocation();
            memcpy(v8, v9, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v32 - 8) + 16))(v8, v9, v32);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v32);
          }
          uint64_t v144 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
          uint64_t v145 = (char *)v8 + v144;
          uint64_t v146 = &v9[v144];
          uint64_t v147 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v146, 1, v147))
          {
            uint64_t v148 = sub_10017DF08(&qword_100E749B0);
            memcpy(v145, v146, *(void *)(*(void *)(v148 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v145, 0, 1, v147);
          }
          goto LABEL_118;
        case 2u:
          uint64_t v101 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v101 - 8) + 16))(v8, v9, v101);
          uint64_t v102 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
          uint64_t v103 = (char *)v8 + v102;
          uint64_t v104 = &v9[v102];
          uint64_t v105 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
          goto LABEL_118;
        case 3u:
        case 4u:
          *uint64_t v8 = *(void *)v9;
          swift_bridgeObjectRetain();
          goto LABEL_118;
        case 5u:
          uint64_t v106 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v106 - 8) + 16))(v8, v9, v106);
          uint64_t v107 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
          uint64_t v108 = (char *)v8 + v107;
          uint64_t v109 = &v9[v107];
          uint64_t v110 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
LABEL_118:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v31 - 8) + 64));
          break;
      }
      goto LABEL_216;
    case 5u:
      uint64_t v19 = type metadata accessor for NotificationsOptInAction();
      int v34 = swift_getEnumCaseMultiPayload();
      switch(v34)
      {
        case 4:
          goto LABEL_13;
        case 3:
          *uint64_t v8 = *(void *)v9;
          *((unsigned char *)v8 + 8) = v9[8];
          swift_bridgeObjectRetain();
          break;
        case 2:
          uint64_t v35 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v35 - 8) + 16))(v8, v9, v35);
          uint64_t v36 = sub_10017DF08(&qword_100E6BBD8);
          *((unsigned char *)v8 + *(int *)(v36 + 48)) = v9[*(int *)(v36 + 48)];
          break;
        default:
          goto LABEL_59;
      }
      goto LABEL_215;
    case 6u:
      uint64_t v14 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v15 = type metadata accessor for ListViewAction();
          int v16 = swift_getEnumCaseMultiPayload();
          if (v16 == 2) {
            goto LABEL_120;
          }
          if (v16) {
            goto LABEL_166;
          }
          uint64_t v17 = type metadata accessor for LocationModel();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v9, v17);
          uint64_t v18 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)v8 + *(int *)(v18 + 48)) = v9[*(int *)(v18 + 48)];
          goto LABEL_209;
        case 1u:
          uint64_t v15 = type metadata accessor for LocationViewerViewAction();
          int v84 = swift_getEnumCaseMultiPayload();
          if (v84 == 2)
          {
LABEL_120:
            uint64_t v149 = type metadata accessor for Location.Identifier();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v149 - 8) + 16))(v8, v9, v149);
          }
          else if (v84 == 1)
          {
            uint64_t v175 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v175 - 8) + 16))(v8, v9, v175);
          }
          else
          {
            if (v84)
            {
LABEL_166:
              memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
              goto LABEL_210;
            }
            uint64_t v85 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v85 - 8) + 16))(v8, v9, v85);
          }
LABEL_209:
          swift_storeEnumTagMultiPayload();
LABEL_210:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v15 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v86 = type metadata accessor for CodableError();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v86 - 8) + 16))(v8, v9, v86);
              goto LABEL_209;
            case 1u:
              *uint64_t v8 = *(void *)v9;
              swift_bridgeObjectRetain();
              goto LABEL_209;
            case 2u:
              uint64_t v202 = *((void *)v9 + 1);
              *uint64_t v8 = *(void *)v9;
              v8[1] = v202;
              swift_bridgeObjectRetain();
              goto LABEL_209;
            case 3u:
            case 6u:
              uint64_t v203 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v203 - 8) + 16))(v8, v9, v203);
              goto LABEL_209;
            case 4u:
              uint64_t v204 = type metadata accessor for LocationOfInterest();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v204 - 8) + 16))(v8, v9, v204);
              goto LABEL_209;
            case 5u:
              uint64_t v206 = *(void **)v9;
              uint64_t v205 = *((void *)v9 + 1);
              *uint64_t v8 = *(void *)v9;
              v8[1] = v205;
              uint64_t v207 = *((void *)v9 + 3);
              v8[2] = *((void *)v9 + 2);
              v8[3] = v207;
              uint64_t v208 = *((void *)v9 + 5);
              v8[4] = *((void *)v9 + 4);
              v8[5] = v208;
              uint64_t v400 = v206;
              v8[6] = *((void *)v9 + 6);
              uint64_t v209 = type metadata accessor for SearchLocation();
              uint64_t v210 = *(int *)(v209 + 32);
              uint64_t v408 = (char *)v8 + v210;
              uint64_t v415 = v209;
              id v211 = &v9[v210];
              uint64_t v212 = type metadata accessor for Location();
              id v213 = v400;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v211, 1, v212))
              {
                uint64_t v214 = sub_10017DF08(&qword_100E639E8);
                memcpy(v408, v211, *(void *)(*(void *)(v214 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v212 - 8) + 16))(v408, v211, v212);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v408, 0, 1, v212);
              }
              uint64_t v361 = *(int *)(v415 + 36);
              uint64_t v362 = (char *)v8 + v361;
              uint64_t v363 = &v9[v361];
              *(_OWORD *)uint64_t v362 = *(_OWORD *)v363;
              v362[16] = v363[16];
              goto LABEL_209;
            default:
              goto LABEL_166;
          }
        case 4u:
          uint64_t v91 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v201 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v201 - 8) + 16))(v8, v9, v201);
              goto LABEL_162;
            case 3u:
              uint64_t v200 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v200 - 8) + 16))(v8, v9, v200);
LABEL_162:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v8, v9, *(void *)(*(void *)(v91 - 8) + 64));
              break;
          }
          goto LABEL_210;
        case 5u:
          *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
          *((unsigned char *)v8 + 16) = v9[16];
          *((unsigned char *)v8 + 17) = v9[17];
          *((unsigned char *)v8 + 18) = v9[18];
          uint64_t v92 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v93 = (char *)v8 + v92;
          uint64_t v94 = &v9[v92];
          uint64_t v95 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
          goto LABEL_210;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
          goto LABEL_216;
      }
      goto LABEL_216;
    case 7u:
      uint64_t v19 = type metadata accessor for ModalViewAction();
      int v37 = swift_getEnumCaseMultiPayload();
      if (v37 == 3)
      {
        uint64_t v48 = *(void *)v9;
        if ((~*(void *)v9 & 0xF000000000000006) != 0)
        {
          uint64_t v419 = v3;
          uint64_t v111 = *((void *)v9 + 1);
          uint64_t v112 = *((void *)v9 + 2);
          uint64_t v113 = *((void *)v9 + 3);
          uint64_t v114 = *((void *)v9 + 4);
          uint64_t v391 = *((void *)v9 + 7);
          uint64_t v394 = *((void *)v9 + 6);
          uint64_t v398 = *((void *)v9 + 8);
          uint64_t v403 = *((void *)v9 + 9);
          uint64_t v407 = *((void *)v9 + 10);
          uint64_t v413 = *((void *)v9 + 11);
          uint64_t v115 = *((void *)v9 + 5);
          sub_100274EDC(v48);
          *uint64_t v8 = v48;
          v8[1] = v111;
          v8[2] = v112;
          v8[3] = v113;
          uint64_t v3 = v419;
          v8[4] = v114;
          v8[5] = v115;
          v8[6] = v394;
          v8[7] = v391;
          v8[8] = v398;
          v8[9] = v403;
          v8[10] = v407;
          v8[11] = v413;
        }
        else
        {
          memcpy(v8, v9, 0x60uLL);
        }
      }
      else
      {
        if (v37) {
          goto LABEL_59;
        }
        uint64_t v38 = type metadata accessor for LocationPreviewViewAction();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v39 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v39 - 8) + 16))(v8, v9, v39);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_100:
          memcpy(v8, v9, *(void *)(*(void *)(v38 - 8) + 64));
        }
      }
      goto LABEL_215;
    case 8u:
      uint64_t v19 = type metadata accessor for LocationViewAction();
      int v40 = swift_getEnumCaseMultiPayload();
      if (v40 == 2)
      {
        uint64_t v58 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v58 - 8) + 16))(v8, v9, v58);
        uint64_t v59 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v60 = (char *)v8 + v59;
        uint64_t v61 = &v9[v59];
        uint64_t v62 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
        uint64_t v63 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v64 = (char *)v8 + v63;
        uint64_t v65 = &v9[v63];
        long long v66 = *((_OWORD *)v65 + 1);
        *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
        *((_OWORD *)v64 + 1) = v66;
        v64[32] = v65[32];
      }
      else if (v40 == 1)
      {
        uint64_t v67 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v68 = type metadata accessor for URL();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v68 - 8) + 16))(v8, v9, v68);
            uint64_t v69 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)v8 + *(int *)(v69 + 48)) = v9[*(int *)(v69 + 48)];
            goto LABEL_132;
          case 1u:
            uint64_t v153 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(v8, v9, v153);
            goto LABEL_132;
          case 2u:
            uint64_t v154 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v154 - 8) + 16))(v8, v9, v154);
            uint64_t v155 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)v8 + *(int *)(v155 + 48)) = v9[*(int *)(v155 + 48)];
            goto LABEL_132;
          case 4u:
            *(unsigned char *)uint64_t v8 = *v9;
            uint64_t v156 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v157 = (char *)v8 + v156;
            uint64_t v158 = v3;
            uint64_t v159 = &v9[v156];
            uint64_t v160 = type metadata accessor for Location();
            uint64_t v161 = v159;
            uint64_t v3 = v158;
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v160 - 8) + 16))(v157, v161, v160);
LABEL_132:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v67 - 8) + 64));
            break;
        }
        uint64_t v162 = sub_10017DF08(&qword_100E66458);
        uint64_t v163 = *(int *)(v162 + 48);
        uint64_t v164 = (char *)v8 + v163;
        long long v165 = &v9[v163];
        long long v166 = *((_OWORD *)v165 + 1);
        *(_OWORD *)uint64_t v164 = *(_OWORD *)v165;
        *((_OWORD *)v164 + 1) = v166;
        v164[32] = v165[32];
        uint64_t v167 = *(int *)(v162 + 64);
        uint64_t v168 = (char *)v8 + v167;
        uint64_t v169 = &v9[v167];
        uint64_t v170 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v169, 1, v170))
        {
          uint64_t v171 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v170 - 8) + 16))(v168, v169, v170);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v168, 0, 1, v170);
        }
      }
      else
      {
        if (v40) {
          goto LABEL_59;
        }
LABEL_36:
        uint64_t v41 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v41 - 8) + 16))(v8, v9, v41);
      }
      goto LABEL_215;
    case 9u:
      type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v120 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v120;
          uint64_t v121 = (uint64_t *)(v9 + 16);
          unint64_t v122 = *((void *)v9 + 3);
          swift_bridgeObjectRetain();
          if (v122 >= 0xE)
          {
            v8[2] = *v121;
            v8[3] = v122;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)v8 + 1) = *(_OWORD *)v121;
          }
          uint64_t v172 = *((void *)v9 + 5);
          v8[4] = *((void *)v9 + 4);
          v8[5] = v172;
          swift_bridgeObjectRetain();
          goto LABEL_215;
        case 3u:
        case 9u:
          uint64_t v70 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v70;
          uint64_t v71 = *((void *)v9 + 2);
          uint64_t v72 = *((void *)v9 + 3);
          v8[2] = v71;
          v8[3] = v72;
          swift_bridgeObjectRetain();
          goto LABEL_65;
        case 4u:
          uint64_t v420 = v3;
          uint64_t v123 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v123;
          swift_bridgeObjectRetain();
          uint64_t v399 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v124 = v399[12];
          uint64_t v125 = (uint64_t *)((char *)v8 + v124);
          uint64_t v126 = &v9[v124];
          uint64_t v127 = *(void *)&v9[v124 + 8];
          *uint64_t v125 = *(void *)&v9[v124];
          v125[1] = v127;
          uint64_t v414 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v128 = v414[5];
          unint64_t v129 = (char *)v125 + v128;
          uint64_t v130 = (char *)&v126[v128];
          uint64_t v131 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v131))
          {
            uint64_t v132 = sub_10017DF08(&qword_100E63730);
            memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v131);
          }
          uint64_t v176 = v414[6];
          uint64_t v177 = (char *)v125 + v176;
          uint64_t v178 = (char *)&v126[v176];
          uint64_t v179 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
          uint64_t v180 = v414[7];
          uint64_t v181 = (char *)v125 + v180;
          uint64_t v182 = (char *)&v126[v180];
          uint64_t v183 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v182, 1, v183))
          {
            uint64_t v184 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v181, v182, *(void *)(*(void *)(v184 - 8) + 64));
          }
          else
          {
            uint64_t v185 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(v181, v182, v185);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v181, 0, 1, v183);
          }
          uint64_t v186 = v414[8];
          uint64_t v187 = (void *)((char *)v125 + v186);
          uint64_t v188 = (char *)&v126[v186];
          uint64_t v189 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v190 = swift_getEnumCaseMultiPayload();
          if (v190 == 1)
          {
            uint64_t v192 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v187, v188, v192);
            goto LABEL_153;
          }
          if (!v190)
          {
            uint64_t v191 = *((void *)v188 + 1);
            *uint64_t v187 = *(void *)v188;
            v187[1] = v191;
            swift_bridgeObjectRetain();
LABEL_153:
            swift_storeEnumTagMultiPayload();
            goto LABEL_155;
          }
          memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
LABEL_155:
          uint64_t v193 = v414[9];
          uint64_t v194 = (char *)v125 + v193;
          uint64_t v195 = (char *)&v126[v193];
          uint64_t v196 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v196))
          {
            uint64_t v197 = sub_10017DF08(&qword_100E63740);
            memcpy(v194, v195, *(void *)(*(void *)(v197 - 8) + 64));
          }
          else
          {
            uint64_t v198 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v198))
            {
              uint64_t v199 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v194, v195, *(void *)(*(void *)(v199 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v194, v195, v198);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, v198);
            }
            uint64_t v225 = *(int *)(v196 + 20);
            uint64_t v226 = &v194[v225];
            uint64_t v227 = &v195[v225];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v227, 1, v198))
            {
              uint64_t v228 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v226, v227, v198);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v226, 0, 1, v198);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, v196);
          }
          uint64_t v229 = v399[16];
          uint64_t v230 = (char *)v8 + v229;
          uint64_t v231 = &v9[v229];
          uint64_t v232 = type metadata accessor for UUID();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v232 - 8) + 16))(v230, v231, v232);
          uint64_t v233 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v230[*(int *)(v233 + 20)] = *(void *)&v231[*(int *)(v233 + 20)];
          uint64_t v404 = (int *)v233;
          uint64_t v410 = v231;
          uint64_t v234 = *(int *)(v233 + 24);
          uint64_t v417 = v230;
          uint64_t v235 = &v230[v234];
          uint64_t v236 = (char *)&v231[v234];
          uint64_t v237 = *((void *)v236 + 1);
          *(void *)uint64_t v235 = *(void *)v236;
          *((void *)v235 + 1) = v237;
          uint64_t v238 = *((void *)v236 + 3);
          *((void *)v235 + 2) = *((void *)v236 + 2);
          *((void *)v235 + 3) = v238;
          uint64_t v239 = *((void *)v236 + 5);
          *((void *)v235 + 4) = *((void *)v236 + 4);
          *((void *)v235 + 5) = v239;
          uint64_t v392 = v235;
          uint64_t v395 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v240 = *(int *)(v395 + 28);
          __dst = &v235[v240];
          uint64_t v241 = &v236[v240];
          uint64_t v242 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v241, 1, v242))
          {
            uint64_t v243 = sub_10017DF08(&qword_100E63750);
            memcpy(__dst, v241, *(void *)(*(void *)(v243 - 8) + 64));
          }
          else
          {
            uint64_t v244 = *((void *)v241 + 1);
            *(void *)__dst = *(void *)v241;
            *((void *)__dst + 1) = v244;
            uint64_t v385 = v242;
            uint64_t v245 = *(int *)(v242 + 20);
            uint64_t v246 = &__dst[v245];
            uint64_t v247 = &v241[v245];
            uint64_t v248 = type metadata accessor for TemperatureScaleConfiguration();
            uint64_t v388 = *(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 16);
            swift_bridgeObjectRetain();
            v388(v246, v247, v248);
            uint64_t v249 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v246[v249[5]] = *(void *)&v247[v249[5]];
            *(void *)&v246[v249[6]] = *(void *)&v247[v249[6]];
            *(void *)&v246[v249[7]] = *(void *)&v247[v249[7]];
            uint64_t v250 = v249[8];
            uint64_t v251 = &v246[v250];
            uint64_t v252 = &v247[v250];
            uint64_t v254 = *(void *)v252;
            uint64_t v253 = *((void *)v252 + 1);
            *(void *)uint64_t v251 = v254;
            *((void *)v251 + 1) = v253;
            v246[v249[9]] = v247[v249[9]];
            swift_bridgeObjectRetain();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v385);
          }
          uint64_t v255 = *(int *)(v395 + 32);
          uint64_t v256 = (void *)((char *)v392 + v255);
          uint64_t v257 = &v236[v255];
          uint64_t v258 = *((void *)v257 + 1);
          *uint64_t v256 = *(void *)v257;
          v256[1] = v258;
          uint64_t v259 = v404[7];
          uint64_t v260 = &v417[v259];
          uint64_t v261 = &v410[v259];
          *(void *)&v417[v259] = *(void *)&v410[v259];
          uint64_t v262 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v263 = &v260[v262];
          uint64_t v264 = &v261[v262];
          uint64_t v265 = type metadata accessor for WeatherDescription();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v382 = v265;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v265))
          {
            uint64_t v266 = sub_10017DF08(&qword_100E63758);
            memcpy(v263, v264, *(void *)(*(void *)(v266 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v265 - 8) + 16))(v263, v264, v265);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v265);
          }
          uint64_t v267 = v404[8];
          uint64_t v268 = &v417[v267];
          uint64_t v269 = &v410[v267];
          uint64_t v396 = *(void *)&v410[v267 + 8];
          *(void *)uint64_t v268 = *(void *)&v410[v267];
          *((void *)v268 + 1) = v396;
          uint64_t v270 = *(void *)&v410[v267 + 24];
          *((void *)v268 + 2) = *(void *)&v410[v267 + 16];
          *((void *)v268 + 3) = v270;
          uint64_t v389 = *(void *)&v410[v267 + 40];
          *((void *)v268 + 4) = *(void *)&v410[v267 + 32];
          *((void *)v268 + 5) = v389;
          uint64_t v271 = *(void *)&v410[v267 + 56];
          *((void *)v268 + 6) = *(void *)&v410[v267 + 48];
          *((void *)v268 + 7) = v271;
          uint64_t v272 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v273 = &v268[v272];
          uint64_t v375 = &v269[v272];
          uint64_t v274 = type metadata accessor for Date();
          uint64_t v275 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v274 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v390 = v275;
          v275(v273, v375, v274);
          uint64_t v276 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v277 = *(int *)(v276 + 20);
          uint64_t v379 = v273;
          uint64_t v278 = &v273[v277];
          uint64_t v279 = &v375[v277];
          uint64_t v280 = type metadata accessor for Elevation();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v280))
          {
            uint64_t v281 = sub_10017DF08(&qword_100E63760);
            memcpy(v278, v279, *(void *)(*(void *)(v281 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v280 - 8) + 16))(v278, v279, v280);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v280);
          }
          uint64_t v282 = *(int *)(v276 + 24);
          uint64_t v283 = &v379[v282];
          uint64_t v284 = &v375[v282];
          uint64_t v285 = type metadata accessor for BackgroundMoonData();
          uint64_t v393 = v274;
          uint64_t v397 = v276;
          uint64_t v386 = v280;
          uint64_t v372 = v285;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v284, 1, v285))
          {
            uint64_t v286 = sub_10017DF08(&qword_100E63768);
            memcpy(v283, v284, *(void *)(*(void *)(v286 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v285 - 8) + 16))(v283, v284, v285);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v283, 0, 1, v285);
          }
          uint64_t v287 = v404[9];
          uint64_t v288 = &v417[v287];
          uint64_t v289 = &v410[v287];
          uint64_t v290 = *((void *)v289 + 1);
          *(void *)uint64_t v288 = *(void *)v289;
          *((void *)v288 + 1) = v290;
          uint64_t v291 = *((void *)v289 + 3);
          *((void *)v288 + 2) = *((void *)v289 + 2);
          *((void *)v288 + 3) = v291;
          uint64_t v292 = *((void *)v289 + 5);
          *((void *)v288 + 4) = *((void *)v289 + 4);
          *((void *)v288 + 5) = v292;
          uint64_t v293 = *((void *)v289 + 7);
          *((void *)v288 + 6) = *((void *)v289 + 6);
          *((void *)v288 + 7) = v293;
          uint64_t v294 = *((void *)v289 + 9);
          *((void *)v288 + 8) = *((void *)v289 + 8);
          *((void *)v288 + 9) = v294;
          uint64_t v295 = *((void *)v289 + 11);
          *((void *)v288 + 10) = *((void *)v289 + 10);
          *((void *)v288 + 11) = v295;
          uint64_t v373 = *((void *)v289 + 13);
          *((void *)v288 + 12) = *((void *)v289 + 12);
          *((void *)v288 + 13) = v373;
          uint64_t v296 = v404[10];
          uint64_t v376 = &v410[v296];
          uint64_t v380 = &v417[v296];
          v374 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v382 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v374(v380, v376, v382);
          uint64_t v297 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
          uint64_t v298 = &v380[v297];
          uint64_t v299 = &v376[v297];
          uint64_t v383 = *((void *)v299 + 1);
          *(void *)uint64_t v298 = *(void *)v299;
          *((void *)v298 + 1) = v383;
          uint64_t v300 = v404[11];
          uint64_t v301 = &v417[v300];
          uint64_t v302 = &v410[v300];
          uint64_t v303 = *((void *)v302 + 1);
          *(void *)uint64_t v301 = *(void *)v302;
          *((void *)v301 + 1) = v303;
          uint64_t v304 = *((void *)v302 + 3);
          *((void *)v301 + 2) = *((void *)v302 + 2);
          *((void *)v301 + 3) = v304;
          uint64_t v377 = *((void *)v302 + 5);
          *((void *)v301 + 4) = *((void *)v302 + 4);
          *((void *)v301 + 5) = v377;
          uint64_t v305 = v404[12];
          uint64_t v306 = &v417[v305];
          uint64_t v307 = &v410[v305];
          uint64_t v308 = type metadata accessor for PressureTrend();
          uint64_t v309 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v308 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v309(v306, v307, v308);
          uint64_t v310 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          uint64_t v311 = v310[5];
          uint64_t v312 = &v306[v311];
          Swift::String v313 = &v307[v311];
          uint64_t v314 = *((void *)v313 + 1);
          *(void *)uint64_t v312 = *(void *)v313;
          *((void *)v312 + 1) = v314;
          uint64_t v315 = v310[6];
          v316 = &v306[v315];
          uint64_t v317 = &v307[v315];
          uint64_t v384 = *((void *)v317 + 1);
          *(void *)v316 = *(void *)v317;
          *((void *)v316 + 1) = v384;
          uint64_t v318 = v310[7];
          uint64_t v319 = &v306[v318];
          uint64_t v320 = &v307[v318];
          uint64_t v381 = *((void *)v320 + 1);
          *(void *)uint64_t v319 = *(void *)v320;
          *((void *)v319 + 1) = v381;
          *(void *)&v306[v310[8]] = *(void *)&v307[v310[8]];
          uint64_t v321 = v310[9];
          uint64_t v322 = &v306[v321];
          uint64_t v323 = &v307[v321];
          uint64_t v378 = *((void *)v323 + 1);
          *(void *)uint64_t v322 = *(void *)v323;
          *((void *)v322 + 1) = v378;
          uint64_t v324 = v404[13];
          uint64_t v325 = &v417[v324];
          uint64_t v326 = &v410[v324];
          uint64_t v327 = *((void *)v326 + 1);
          *(void *)uint64_t v325 = *(void *)v326;
          *((void *)v325 + 1) = v327;
          uint64_t v328 = *((void *)v326 + 3);
          *((void *)v325 + 2) = *((void *)v326 + 2);
          *((void *)v325 + 3) = v328;
          uint64_t v329 = *((void *)v326 + 5);
          *((void *)v325 + 4) = *((void *)v326 + 4);
          *((void *)v325 + 5) = v329;
          uint64_t v330 = *((void *)v326 + 7);
          *((void *)v325 + 6) = *((void *)v326 + 6);
          *((void *)v325 + 7) = v330;
          uint64_t v331 = *((void *)v326 + 9);
          *((void *)v325 + 8) = *((void *)v326 + 8);
          *((void *)v325 + 9) = v331;
          uint64_t v332 = *((void *)v326 + 11);
          *((void *)v325 + 10) = *((void *)v326 + 10);
          *((void *)v325 + 11) = v332;
          uint64_t v333 = *((void *)v326 + 13);
          *((void *)v325 + 12) = *((void *)v326 + 12);
          *((void *)v325 + 13) = v333;
          uint64_t v334 = *((void *)v326 + 15);
          *((void *)v325 + 14) = *((void *)v326 + 14);
          *((void *)v325 + 15) = v334;
          uint64_t v335 = *((void *)v326 + 17);
          *((void *)v325 + 16) = *((void *)v326 + 16);
          *((void *)v325 + 17) = v335;
          uint64_t v336 = *((void *)v326 + 19);
          *((void *)v325 + 18) = *((void *)v326 + 18);
          *((void *)v325 + 19) = v336;
          uint64_t v337 = *((void *)v326 + 21);
          *((void *)v325 + 20) = *((void *)v326 + 20);
          *((void *)v325 + 21) = v337;
          uint64_t v338 = *((void *)v326 + 23);
          *((void *)v325 + 22) = *((void *)v326 + 22);
          *((void *)v325 + 23) = v338;
          uint64_t v339 = *((void *)v326 + 25);
          *((void *)v325 + 24) = *((void *)v326 + 24);
          *((void *)v325 + 25) = v339;
          *((_OWORD *)v325 + 13) = *((_OWORD *)v326 + 13);
          *((void *)v325 + 28) = *((void *)v326 + 28);
          uint64_t v340 = v404[14];
          unint64_t v341 = &v417[v340];
          uint64_t v342 = &v410[v340];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v390(v341, v342, v393);
          uint64_t v343 = *(int *)(v397 + 20);
          uint64_t v344 = &v341[v343];
          uint64_t v345 = &v342[v343];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v342[v343], 1, v386))
          {
            uint64_t v346 = sub_10017DF08(&qword_100E63760);
            memcpy(v344, v345, *(void *)(*(void *)(v346 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v386 - 8) + 16))(v344, v345, v386);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v344, 0, 1, v386);
          }
          uint64_t v347 = *(int *)(v397 + 24);
          uint64_t v348 = &v341[v347];
          uint64_t v349 = &v342[v347];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v342[v347], 1, v372))
          {
            uint64_t v350 = sub_10017DF08(&qword_100E63768);
            memcpy(v348, v349, *(void *)(*(void *)(v350 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v372 - 8) + 16))(v348, v349, v372);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v348, 0, 1, v372);
          }
          uint64_t v351 = v404[15];
          uint64_t v352 = &v417[v351];
          uint64_t v353 = &v410[v351];
          uint64_t v354 = *((void *)v353 + 1);
          *(void *)uint64_t v352 = *(void *)v353;
          *((void *)v352 + 1) = v354;
          uint64_t v355 = *((void *)v353 + 3);
          *((void *)v352 + 2) = *((void *)v353 + 2);
          *((void *)v352 + 3) = v355;
          uint64_t v356 = *((void *)v353 + 5);
          *((void *)v352 + 4) = *((void *)v353 + 4);
          *((void *)v352 + 5) = v356;
          uint64_t v411 = *((void *)v353 + 7);
          *((void *)v352 + 6) = *((void *)v353 + 6);
          *((void *)v352 + 7) = v411;
          uint64_t v405 = *((void *)v353 + 9);
          *((void *)v352 + 8) = *((void *)v353 + 8);
          *((void *)v352 + 9) = v405;
          uint64_t v357 = *((void *)v353 + 11);
          *((void *)v352 + 10) = *((void *)v353 + 10);
          *((void *)v352 + 11) = v357;
          uint64_t v418 = *((void *)v353 + 13);
          *((void *)v352 + 12) = *((void *)v353 + 12);
          *((void *)v352 + 13) = v418;
          uint64_t v358 = v399[20];
          uint64_t v402 = (uint64_t *)((char *)v8 + v358);
          uint64_t v359 = &v9[v358];
          type metadata accessor for NewsDataModel();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *uint64_t v402 = *(void *)v359;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v360 = type metadata accessor for News();
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v360 - 8) + 16))(v402, v359, v360);
          }
          uint64_t v3 = v420;
LABEL_174:
          swift_storeEnumTagMultiPayload();
LABEL_215:
          swift_storeEnumTagMultiPayload();
LABEL_216:
          swift_storeEnumTagMultiPayload();
LABEL_217:
          uint64_t v367 = *(int *)(v3 + 28);
          uint64_t v368 = (void *)(a1 + v367);
          uint64_t v369 = (void *)(a2 + v367);
          uint64_t v370 = v369[1];
          *uint64_t v368 = *v369;
          v368[1] = v370;
          swift_bridgeObjectRetain();
          return a1;
        case 5u:
          uint64_t v133 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v133;
          swift_bridgeObjectRetain();
          uint64_t v134 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          uint64_t v135 = (uint64_t *)((char *)v8 + v134);
          uint64_t v136 = &v9[v134];
          type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            void *v135 = *(void *)v136;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v173 = type metadata accessor for News();
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v173 - 8) + 16))(v135, v136, v173);
          }
          goto LABEL_174;
        case 6u:
          uint64_t v137 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v137;
          swift_bridgeObjectRetain();
          uint64_t v138 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v139 = (char *)v8 + v138;
          uint64_t v140 = &v9[v138];
          uint64_t v141 = type metadata accessor for AvailableDataSets();
          goto LABEL_112;
        case 8u:
          uint64_t v142 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v142;
          swift_bridgeObjectRetain();
          uint64_t v143 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v139 = (char *)v8 + v143;
          uint64_t v140 = &v9[v143];
          uint64_t v141 = type metadata accessor for WeatherStatisticsModel();
LABEL_112:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
          goto LABEL_215;
        default:
          uint64_t v42 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v42;
LABEL_65:
          swift_bridgeObjectRetain();
          goto LABEL_215;
      }
    case 0xAu:
      uint64_t v19 = type metadata accessor for DebugAction();
      int v43 = swift_getEnumCaseMultiPayload();
      if (v43 == 1) {
        goto LABEL_36;
      }
      if (v43) {
        goto LABEL_59;
      }
      uint64_t v44 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v44))
      {
        uint64_t v45 = sub_10017DF08(&qword_100E63A50);
        memcpy(v8, v9, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v44 - 8) + 16))(v8, v9, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v44);
      }
      uint64_t v116 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
      uint64_t v117 = (uint64_t *)((char *)v8 + v116);
      uint64_t v118 = &v9[v116];
      uint64_t v119 = *((void *)v118 + 1);
      void *v117 = *(void *)v118;
      v117[1] = v119;
      swift_bridgeObjectRetain();
      goto LABEL_215;
    case 0xBu:
      uint64_t v19 = type metadata accessor for ConditionDetailViewAction();
      int v20 = swift_getEnumCaseMultiPayload();
      switch(v20)
      {
        case 2:
          uint64_t v49 = *((void *)v9 + 1);
          *uint64_t v8 = *(void *)v9;
          v8[1] = v49;
          uint64_t v50 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v51 = v50[5];
          uint64_t v406 = &v9[v51];
          uint64_t v412 = (char *)v8 + v51;
          uint64_t v52 = type metadata accessor for Date();
          uint64_t v53 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v52 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v412, v406, v52);
          v53((char *)v8 + v50[6], &v9[v50[6]], v52);
          v53((char *)v8 + v50[7], &v9[v50[7]], v52);
          *(uint64_t *)((char *)v8 + v50[8]) = *(void *)&v9[v50[8]];
          uint64_t v54 = v50[9];
          uint64_t v55 = (char *)v8 + v54;
          uint64_t v56 = &v9[v54];
          v55[8] = v56[8];
          *(void *)uint64_t v55 = *(void *)v56;
          goto LABEL_215;
        case 1:
          uint64_t v57 = type metadata accessor for DetailCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v57 - 8) + 16))(v8, v9, v57);
          goto LABEL_215;
        case 0:
LABEL_13:
          uint64_t v21 = type metadata accessor for Date();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v21 - 8) + 16))(v8, v9, v21);
          goto LABEL_215;
      }
LABEL_59:
      memcpy(v8, v9, *(void *)(*(void *)(v19 - 8) + 64));
      goto LABEL_216;
    case 0xDu:
      uint64_t v19 = type metadata accessor for MoonDetailViewAction();
      int v22 = swift_getEnumCaseMultiPayload();
      if (v22 == 1) {
        goto LABEL_13;
      }
      if (v22) {
        goto LABEL_59;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v23 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v23 - 8) + 16))(v8, v9, v23);
      swift_storeEnumTagMultiPayload();
      goto LABEL_215;
    case 0xEu:
      uint64_t v19 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_59;
      }
      *uint64_t v8 = *(void *)v9;
      uint64_t v24 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v25 = v24[5];
      uint64_t v26 = (char *)v8 + v25;
      uint64_t v27 = &v9[v25];
      uint64_t v28 = type metadata accessor for Date();
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      *(uint64_t *)((char *)v8 + v24[6]) = *(void *)&v9[v24[6]];
      *(uint64_t *)((char *)v8 + v24[7]) = *(void *)&v9[v24[7]];
      swift_storeEnumTagMultiPayload();
      goto LABEL_216;
    case 0x10u:
      uint64_t v29 = *((void *)v9 + 1);
      *uint64_t v8 = *(void *)v9;
      v8[1] = v29;
      swift_bridgeObjectRetain();
      goto LABEL_216;
    case 0x11u:
      uint64_t v46 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v47 = type metadata accessor for DetailCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v47 - 8) + 16))(v8, v9, v47);
          goto LABEL_70;
        case 2u:
          uint64_t v73 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v73 - 8) + 16))(v8, v9, v73);
          goto LABEL_70;
        case 3u:
          *uint64_t v8 = *(void *)v9;
          uint64_t v74 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v75 = *(int *)(v74 + 48);
          uint64_t v76 = (char *)v8 + v75;
          uint64_t v77 = &v9[v75];
          uint64_t v78 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
          *((unsigned char *)v8 + *(int *)(v74 + 64)) = v9[*(int *)(v74 + 64)];
          goto LABEL_70;
        case 4u:
          uint64_t v79 = type metadata accessor for WeatherCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v79 - 8) + 16))(v8, v9, v79);
LABEL_70:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v46 - 8) + 64));
          break;
      }
      goto LABEL_216;
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_217;
  }
}

void *sub_10036F21C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (unsigned __int8 *)a2 + v6;
    sub_10020044C((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for MainAction);
    uint64_t v9 = type metadata accessor for MainAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = type metadata accessor for AppConfiguration();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
        goto LABEL_216;
      case 2u:
        uint64_t v18 = type metadata accessor for EnvironmentAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v28 = type metadata accessor for Locale();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v28 - 8) + 16))(v7, v8, v28);
            goto LABEL_215;
          case 3u:
            uint64_t v36 = type metadata accessor for ActivityAction();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v131 = type metadata accessor for LocationOfInterest();
                  goto LABEL_177;
                case 2u:
                  uint64_t v332 = *(void **)v8;
                  *uint64_t v7 = *(void *)v8;
                  v7[1] = *((void *)v8 + 1);
                  v7[2] = *((void *)v8 + 2);
                  v7[3] = *((void *)v8 + 3);
                  v7[4] = *((void *)v8 + 4);
                  v7[5] = *((void *)v8 + 5);
                  v7[6] = *((void *)v8 + 6);
                  uint64_t v187 = type metadata accessor for SearchLocation();
                  uint64_t v188 = *(int *)(v187 + 32);
                  uint64_t v338 = (char *)v7 + v188;
                  uint64_t v343 = v187;
                  uint64_t v189 = &v8[v188];
                  uint64_t v190 = type metadata accessor for Location();
                  id v191 = v332;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v190))
                  {
                    uint64_t v192 = sub_10017DF08(&qword_100E639E8);
                    memcpy(v338, v189, *(void *)(*(void *)(v192 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v190 - 8) + 16))(v338, v189, v190);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v338, 0, 1, v190);
                  }
                  uint64_t v297 = *(int *)(v343 + 36);
                  uint64_t v298 = (char *)v7 + v297;
                  uint64_t v299 = &v8[v297];
                  long long v300 = *(_OWORD *)v299;
                  v298[16] = v299[16];
                  *(_OWORD *)uint64_t v298 = v300;
                  break;
                case 3u:
                  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
                  v7[2] = *((void *)v8 + 2);
                  v7[3] = *((void *)v8 + 3);
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v131 = type metadata accessor for Location();
LABEL_177:
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v131 - 8) + 16))(v7, v8, v131);
                  break;
              }
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              if (EnumCaseMultiPayload) {
                goto LABEL_100;
              }
              type metadata accessor for SavedLocation();
              if (swift_getEnumCaseMultiPayload() == 1) {
                uint64_t v89 = type metadata accessor for SavedLocation.Placeholder();
              }
              else {
                uint64_t v89 = type metadata accessor for Location();
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v89 - 8) + 16))(v7, v8);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_215;
          case 4u:
            goto LABEL_82;
          case 9u:
            if (*((void *)v8 + 1) >= 2uLL)
            {
LABEL_82:
              *uint64_t v7 = *(void *)v8;
              v7[1] = *((void *)v8 + 1);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
            }
            goto LABEL_215;
          case 0xBu:
            uint64_t v36 = type metadata accessor for ConfiguredUnitsAction();
            int v90 = swift_getEnumCaseMultiPayload();
            if (v90 == 1)
            {
              uint64_t v132 = type metadata accessor for UnitConfiguration.Temperature();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v132))
              {
                uint64_t v133 = sub_10017DF08(&qword_100E6F620);
                memcpy(v7, v8, *(void *)(*(void *)(v133 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v132 - 8) + 16))(v7, v8, v132);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v132);
              }
            }
            else
            {
              if (v90) {
                goto LABEL_100;
              }
              uint64_t v91 = type metadata accessor for ConfiguredUnit();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v91 - 8) + 16))(v7, v8, v91);
            }
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_175;
      case 3u:
        uint64_t v11 = type metadata accessor for LocationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v12 = type metadata accessor for CurrentLocation();
            if (swift_getEnumCaseMultiPayload() > 2)
            {
              memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
            }
            else
            {
              uint64_t v153 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(v7, v8, v153);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_141;
          case 1u:
            uint64_t v75 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v75 - 8) + 16))(v7, v8, v75);
            uint64_t v76 = sub_10017DF08(&qword_100E6F628);
            *((unsigned char *)v7 + *(int *)(v76 + 48)) = v8[*(int *)(v76 + 48)];
            goto LABEL_141;
          case 2u:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_141;
          case 5u:
            *uint64_t v7 = *(void *)v8;
            swift_bridgeObjectRetain();
            goto LABEL_141;
          case 6u:
            uint64_t v80 = *(void *)v8;
            uint64_t v81 = *((void *)v8 + 1);
            unsigned __int8 v82 = v8[16];
            sub_10015458C(v80, v81, v82);
            *uint64_t v7 = v80;
            v7[1] = v81;
            *((unsigned char *)v7 + 16) = v82;
LABEL_141:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
            break;
        }
        goto LABEL_216;
      case 4u:
        uint64_t v29 = type metadata accessor for NotificationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v30 = type metadata accessor for LocationModel();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v30))
            {
              uint64_t v31 = type metadata accessor for NotificationLocation();
              memcpy(v7, v8, *(void *)(*(void *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(v7, v8, v30);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v30);
            }
            uint64_t v125 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
            uint64_t v126 = (char *)v7 + v125;
            uint64_t v127 = &v8[v125];
            uint64_t v128 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
            {
              uint64_t v129 = sub_10017DF08(&qword_100E749B0);
              memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
            }
            goto LABEL_118;
          case 2u:
            uint64_t v92 = type metadata accessor for NotificationSubscription.Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v92 - 8) + 16))(v7, v8, v92);
            uint64_t v93 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
            uint64_t v94 = (char *)v7 + v93;
            uint64_t v95 = &v8[v93];
            uint64_t v96 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
            goto LABEL_118;
          case 3u:
          case 4u:
            *uint64_t v7 = *(void *)v8;
            swift_bridgeObjectRetain();
            goto LABEL_118;
          case 5u:
            uint64_t v97 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v97 - 8) + 16))(v7, v8, v97);
            uint64_t v98 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
            int v99 = (char *)v7 + v98;
            uint64_t v100 = &v8[v98];
            uint64_t v101 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
LABEL_118:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v29 - 8) + 64));
            break;
        }
        goto LABEL_216;
      case 5u:
        uint64_t v18 = type metadata accessor for NotificationsOptInAction();
        int v32 = swift_getEnumCaseMultiPayload();
        switch(v32)
        {
          case 4:
            goto LABEL_14;
          case 3:
            *uint64_t v7 = *(void *)v8;
            *((unsigned char *)v7 + 8) = v8[8];
            swift_bridgeObjectRetain();
            break;
          case 2:
            uint64_t v33 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v33 - 8) + 16))(v7, v8, v33);
            uint64_t v34 = sub_10017DF08(&qword_100E6BBD8);
            *((unsigned char *)v7 + *(int *)(v34 + 48)) = v8[*(int *)(v34 + 48)];
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_215;
      case 6u:
        uint64_t v13 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v14 = type metadata accessor for ListViewAction();
            int v15 = swift_getEnumCaseMultiPayload();
            if (v15 == 2) {
              goto LABEL_120;
            }
            if (v15) {
              goto LABEL_167;
            }
            uint64_t v16 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 16))(v7, v8, v16);
            uint64_t v17 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)v7 + *(int *)(v17 + 48)) = v8[*(int *)(v17 + 48)];
            goto LABEL_209;
          case 1u:
            uint64_t v14 = type metadata accessor for LocationViewerViewAction();
            int v77 = swift_getEnumCaseMultiPayload();
            if (v77 == 2)
            {
LABEL_120:
              uint64_t v130 = type metadata accessor for Location.Identifier();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v130 - 8) + 16))(v7, v8, v130);
            }
            else if (v77 == 1)
            {
              uint64_t v154 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v154 - 8) + 16))(v7, v8, v154);
            }
            else
            {
              if (v77)
              {
LABEL_167:
                memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
                goto LABEL_210;
              }
              uint64_t v78 = type metadata accessor for LocationModel();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v78 - 8) + 16))(v7, v8, v78);
            }
LABEL_209:
            swift_storeEnumTagMultiPayload();
LABEL_210:
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v14 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v79 = type metadata accessor for CodableError();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v79 - 8) + 16))(v7, v8, v79);
                goto LABEL_209;
              case 1u:
                *uint64_t v7 = *(void *)v8;
                swift_bridgeObjectRetain();
                goto LABEL_209;
              case 2u:
                *uint64_t v7 = *(void *)v8;
                v7[1] = *((void *)v8 + 1);
                swift_bridgeObjectRetain();
                goto LABEL_209;
              case 3u:
              case 6u:
                uint64_t v180 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v180 - 8) + 16))(v7, v8, v180);
                goto LABEL_209;
              case 4u:
                uint64_t v181 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v181 - 8) + 16))(v7, v8, v181);
                goto LABEL_209;
              case 5u:
                uint64_t v331 = *(void **)v8;
                *uint64_t v7 = *(void *)v8;
                v7[1] = *((void *)v8 + 1);
                v7[2] = *((void *)v8 + 2);
                v7[3] = *((void *)v8 + 3);
                v7[4] = *((void *)v8 + 4);
                v7[5] = *((void *)v8 + 5);
                v7[6] = *((void *)v8 + 6);
                uint64_t v182 = type metadata accessor for SearchLocation();
                uint64_t v183 = *(int *)(v182 + 32);
                uint64_t v337 = v182;
                uint64_t v342 = (char *)v7 + v183;
                uint64_t v323 = &v8[v183];
                uint64_t v184 = type metadata accessor for Location();
                id v185 = v331;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v323, 1, v184))
                {
                  uint64_t v186 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v342, v323, *(void *)(*(void *)(v186 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v184 - 8) + 16))(v342, v323, v184);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v342, 0, 1, v184);
                }
                uint64_t v293 = *(int *)(v337 + 36);
                uint64_t v294 = (char *)v7 + v293;
                uint64_t v295 = &v8[v293];
                long long v296 = *(_OWORD *)v295;
                v294[16] = v295[16];
                *(_OWORD *)uint64_t v294 = v296;
                goto LABEL_209;
              default:
                goto LABEL_167;
            }
          case 4u:
            uint64_t v83 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v179 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v179 - 8) + 16))(v7, v8, v179);
                goto LABEL_163;
              case 3u:
                uint64_t v178 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v178 - 8) + 16))(v7, v8, v178);
LABEL_163:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v7, v8, *(void *)(*(void *)(v83 - 8) + 64));
                break;
            }
            goto LABEL_210;
          case 5u:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            *((unsigned char *)v7 + 16) = v8[16];
            *((unsigned char *)v7 + 17) = v8[17];
            *((unsigned char *)v7 + 18) = v8[18];
            uint64_t v84 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            uint64_t v85 = (char *)v7 + v84;
            uint64_t v86 = &v8[v84];
            uint64_t v87 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
            goto LABEL_210;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
            goto LABEL_216;
        }
        goto LABEL_216;
      case 7u:
        uint64_t v18 = type metadata accessor for ModalViewAction();
        int v35 = swift_getEnumCaseMultiPayload();
        if (v35 == 3)
        {
          uint64_t v45 = *(void *)v8;
          if ((~*(void *)v8 & 0xF000000000000006) != 0)
          {
            uint64_t v102 = *((void *)v8 + 3);
            uint64_t v103 = *((void *)v8 + 5);
            uint64_t v319 = *((void *)v8 + 6);
            uint64_t v322 = *((void *)v8 + 2);
            uint64_t v315 = *((void *)v8 + 7);
            uint64_t v326 = *((void *)v8 + 8);
            uint64_t v330 = *((void *)v8 + 9);
            uint64_t v335 = *((void *)v8 + 10);
            uint64_t v340 = *((void *)v8 + 11);
            uint64_t v104 = *((void *)v8 + 1);
            uint64_t v105 = *((void *)v8 + 4);
            sub_100274EDC(v45);
            *uint64_t v7 = v45;
            v7[1] = v104;
            v7[2] = v322;
            v7[3] = v102;
            v7[4] = v105;
            v7[5] = v103;
            v7[6] = v319;
            v7[7] = v315;
            v7[8] = v326;
            v7[9] = v330;
            v7[10] = v335;
            v7[11] = v340;
          }
          else
          {
            memcpy(v7, v8, 0x60uLL);
          }
        }
        else
        {
          if (v35) {
            goto LABEL_60;
          }
          uint64_t v36 = type metadata accessor for LocationPreviewViewAction();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v37 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v37 - 8) + 16))(v7, v8, v37);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
LABEL_100:
            memcpy(v7, v8, *(void *)(*(void *)(v36 - 8) + 64));
          }
        }
        goto LABEL_215;
      case 8u:
        uint64_t v18 = type metadata accessor for LocationViewAction();
        int v38 = swift_getEnumCaseMultiPayload();
        if (v38 == 2)
        {
          uint64_t v55 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v55 - 8) + 16))(v7, v8, v55);
          uint64_t v56 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          uint64_t v57 = (char *)v7 + v56;
          uint64_t v58 = &v8[v56];
          uint64_t v59 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
          uint64_t v60 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          uint64_t v61 = (char *)v7 + v60;
          uint64_t v62 = &v8[v60];
          long long v63 = *(_OWORD *)v62;
          long long v64 = *((_OWORD *)v62 + 1);
          v61[32] = v62[32];
          *(_OWORD *)uint64_t v61 = v63;
          *((_OWORD *)v61 + 1) = v64;
        }
        else if (v38 == 1)
        {
          uint64_t v65 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v66 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v66 - 8) + 16))(v7, v8, v66);
              uint64_t v67 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)v7 + *(int *)(v67 + 48)) = v8[*(int *)(v67 + 48)];
              goto LABEL_132;
            case 1u:
              uint64_t v134 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v134 - 8) + 16))(v7, v8, v134);
              goto LABEL_132;
            case 2u:
              uint64_t v135 = type metadata accessor for DetailCondition();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v135 - 8) + 16))(v7, v8, v135);
              uint64_t v136 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)v7 + *(int *)(v136 + 48)) = v8[*(int *)(v136 + 48)];
              goto LABEL_132;
            case 4u:
              *(unsigned char *)uint64_t v7 = *v8;
              uint64_t v137 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v138 = (char *)v7 + v137;
              uint64_t v139 = &v8[v137];
              uint64_t v140 = type metadata accessor for Location();
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
LABEL_132:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v7, v8, *(void *)(*(void *)(v65 - 8) + 64));
              break;
          }
          uint64_t v141 = sub_10017DF08(&qword_100E66458);
          uint64_t v142 = *(int *)(v141 + 48);
          uint64_t v143 = (char *)v7 + v142;
          uint64_t v144 = &v8[v142];
          long long v145 = *(_OWORD *)v144;
          long long v146 = *((_OWORD *)v144 + 1);
          v143[32] = v144[32];
          *(_OWORD *)uint64_t v143 = v145;
          *((_OWORD *)v143 + 1) = v146;
          uint64_t v147 = *(int *)(v141 + 64);
          uint64_t v148 = (char *)v7 + v147;
          uint64_t v149 = &v8[v147];
          uint64_t v150 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
          {
            uint64_t v151 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(v148, v149, v150);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v150);
          }
        }
        else
        {
          if (v38) {
            goto LABEL_60;
          }
LABEL_37:
          uint64_t v39 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v39 - 8) + 16))(v7, v8, v39);
        }
        goto LABEL_215;
      case 9u:
        type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            unint64_t v109 = *((void *)v8 + 3);
            swift_bridgeObjectRetain();
            if (v109 >= 0xE)
            {
              v7[2] = *((void *)v8 + 2);
              v7[3] = *((void *)v8 + 3);
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
            }
            v7[4] = *((void *)v8 + 4);
            v7[5] = *((void *)v8 + 5);
            goto LABEL_138;
          case 3u:
          case 9u:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            v7[2] = *((void *)v8 + 2);
            v7[3] = *((void *)v8 + 3);
            swift_bridgeObjectRetain();
            goto LABEL_138;
          case 4u:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            swift_bridgeObjectRetain();
            uint64_t v327 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v110 = v327[12];
            uint64_t v111 = (uint64_t *)((char *)v7 + v110);
            *uint64_t v111 = *(void *)&v8[v110];
            v111[1] = *(void *)&v8[v110 + 8];
            uint64_t v336 = &v8[v110];
            unint64_t v341 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v112 = v341[5];
            uint64_t v113 = (char *)v111 + v112;
            uint64_t v114 = (char *)&v336[v112];
            uint64_t v115 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
            {
              uint64_t v116 = sub_10017DF08(&qword_100E63730);
              memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
            }
            uint64_t v155 = v341[6];
            uint64_t v156 = (char *)v111 + v155;
            uint64_t v157 = (char *)&v336[v155];
            uint64_t v158 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
            uint64_t v159 = v341[7];
            uint64_t v160 = (char *)v111 + v159;
            uint64_t v161 = (char *)&v336[v159];
            uint64_t v162 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
            {
              uint64_t v163 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
            }
            else
            {
              uint64_t v164 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v160, v161, v164);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
            }
            uint64_t v165 = v341[8];
            long long v166 = (void *)((char *)v111 + v165);
            uint64_t v167 = (char *)&v336[v165];
            uint64_t v168 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v169 = swift_getEnumCaseMultiPayload();
            if (v169 == 1)
            {
              uint64_t v170 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v170 - 8) + 16))(v166, v167, v170);
              goto LABEL_154;
            }
            if (!v169)
            {
              *long long v166 = *(void *)v167;
              v166[1] = *((void *)v167 + 1);
              swift_bridgeObjectRetain();
LABEL_154:
              swift_storeEnumTagMultiPayload();
              goto LABEL_156;
            }
            memcpy(v166, v167, *(void *)(*(void *)(v168 - 8) + 64));
LABEL_156:
            uint64_t v171 = v341[9];
            uint64_t v172 = (char *)v111 + v171;
            uint64_t v173 = (char *)&v336[v171];
            uint64_t v174 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v174))
            {
              uint64_t v175 = sub_10017DF08(&qword_100E63740);
              memcpy(v172, v173, *(void *)(*(void *)(v175 - 8) + 64));
            }
            else
            {
              uint64_t v176 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v176))
              {
                uint64_t v177 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v172, v173, *(void *)(*(void *)(v177 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v172, v173, v176);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v176);
              }
              uint64_t v193 = *(int *)(v174 + 20);
              uint64_t v194 = &v172[v193];
              uint64_t v195 = &v173[v193];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v176))
              {
                uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v194, v195, *(void *)(*(void *)(v196 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v194, v195, v176);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, v176);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v174);
            }
            uint64_t v197 = v327[16];
            uint64_t v198 = (char *)v7 + v197;
            uint64_t v199 = &v8[v197];
            uint64_t v200 = type metadata accessor for UUID();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
            uint64_t v201 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v198[*(int *)(v201 + 20)] = *(void *)&v199[*(int *)(v201 + 20)];
            uint64_t v333 = (int *)v201;
            uint64_t v339 = v199;
            uint64_t v202 = *(int *)(v201 + 24);
            uint64_t v344 = v198;
            uint64_t v203 = &v198[v202];
            uint64_t v204 = (char *)&v199[v202];
            *(void *)uint64_t v203 = *(void *)&v199[v202];
            *((void *)v203 + 1) = *(void *)&v199[v202 + 8];
            *((void *)v203 + 2) = *(void *)&v199[v202 + 16];
            *((void *)v203 + 3) = *(void *)&v199[v202 + 24];
            *((void *)v203 + 4) = *(void *)&v199[v202 + 32];
            *((void *)v203 + 5) = *(void *)&v199[v202 + 40];
            v316 = v203;
            uint64_t v320 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v205 = *(int *)(v320 + 28);
            uint64_t v324 = &v203[v205];
            uint64_t v314 = v204;
            uint64_t v206 = &v204[v205];
            uint64_t v207 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v206, 1, v207))
            {
              uint64_t v208 = sub_10017DF08(&qword_100E63750);
              memcpy(v324, v206, *(void *)(*(void *)(v208 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v324 = *(void *)v206;
              *((void *)v324 + 1) = *((void *)v206 + 1);
              uint64_t v209 = *(int *)(v207 + 20);
              uint64_t v210 = &v324[v209];
              id v211 = &v206[v209];
              uint64_t v212 = type metadata accessor for TemperatureScaleConfiguration();
              uint64_t v312 = *(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16);
              swift_bridgeObjectRetain();
              v312(v210, v211, v212);
              id v213 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v210[v213[5]] = *(void *)&v211[v213[5]];
              *(void *)&v210[v213[6]] = *(void *)&v211[v213[6]];
              *(void *)&v210[v213[7]] = *(void *)&v211[v213[7]];
              uint64_t v214 = v213[8];
              uint64_t v215 = &v210[v214];
              uint64_t v216 = &v211[v214];
              *(void *)uint64_t v215 = *(void *)v216;
              *((void *)v215 + 1) = *((void *)v216 + 1);
              v210[v213[9]] = v211[v213[9]];
              swift_bridgeObjectRetain();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v324, 0, 1, v207);
            }
            uint64_t v217 = *(int *)(v320 + 32);
            uint64_t v218 = (void *)((char *)v316 + v217);
            uint64_t v219 = &v314[v217];
            *uint64_t v218 = *(void *)v219;
            v218[1] = *((void *)v219 + 1);
            uint64_t v220 = v333[7];
            uint64_t v221 = &v344[v220];
            id v222 = &v339[v220];
            *(void *)&v344[v220] = *(void *)&v339[v220];
            uint64_t v223 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            uint64_t v224 = &v221[v223];
            uint64_t v225 = &v222[v223];
            uint64_t v226 = type metadata accessor for WeatherDescription();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v311 = v226;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v225, 1, v226))
            {
              uint64_t v227 = sub_10017DF08(&qword_100E63758);
              memcpy(v224, v225, *(void *)(*(void *)(v227 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v226 - 8) + 16))(v224, v225, v226);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v224, 0, 1, v226);
            }
            uint64_t v228 = v333[8];
            uint64_t v229 = &v344[v228];
            uint64_t v230 = &v339[v228];
            *(void *)uint64_t v229 = *(void *)&v339[v228];
            *((void *)v229 + 1) = *(void *)&v339[v228 + 8];
            *((void *)v229 + 2) = *(void *)&v339[v228 + 16];
            *((void *)v229 + 3) = *(void *)&v339[v228 + 24];
            *((void *)v229 + 4) = *(void *)&v339[v228 + 32];
            *((void *)v229 + 5) = *(void *)&v339[v228 + 40];
            *((void *)v229 + 6) = *(void *)&v339[v228 + 48];
            *((void *)v229 + 7) = *(void *)&v339[v228 + 56];
            uint64_t v231 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            uint64_t v232 = &v229[v231];
            uint64_t v307 = &v230[v231];
            uint64_t v233 = type metadata accessor for Date();
            uint64_t v234 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v233 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v317 = v234;
            uint64_t v321 = v233;
            v234(v232, v307, v233);
            uint64_t v235 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v236 = *(int *)(v235 + 20);
            uint64_t v309 = v232;
            uint64_t v237 = &v232[v236];
            uint64_t v238 = &v307[v236];
            uint64_t v239 = type metadata accessor for Elevation();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v238, 1, v239))
            {
              uint64_t v240 = sub_10017DF08(&qword_100E63760);
              memcpy(v237, v238, *(void *)(*(void *)(v240 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v239 - 8) + 16))(v237, v238, v239);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v237, 0, 1, v239);
            }
            uint64_t v241 = *(int *)(v235 + 24);
            uint64_t v242 = &v309[v241];
            uint64_t v243 = &v307[v241];
            uint64_t v244 = type metadata accessor for BackgroundMoonData();
            uint64_t v325 = v235;
            uint64_t v313 = v239;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244))
            {
              uint64_t v245 = sub_10017DF08(&qword_100E63768);
              memcpy(v242, v243, *(void *)(*(void *)(v245 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v244 - 8) + 16))(v242, v243, v244);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v244);
            }
            uint64_t v246 = v333[9];
            uint64_t v247 = &v344[v246];
            uint64_t v248 = &v339[v246];
            *(void *)uint64_t v247 = *(void *)v248;
            *((void *)v247 + 1) = *((void *)v248 + 1);
            *((void *)v247 + 2) = *((void *)v248 + 2);
            *((void *)v247 + 3) = *((void *)v248 + 3);
            *((void *)v247 + 4) = *((void *)v248 + 4);
            *((void *)v247 + 5) = *((void *)v248 + 5);
            *((void *)v247 + 6) = *((void *)v248 + 6);
            *((void *)v247 + 7) = *((void *)v248 + 7);
            *((void *)v247 + 8) = *((void *)v248 + 8);
            *((void *)v247 + 9) = *((void *)v248 + 9);
            *((void *)v247 + 10) = *((void *)v248 + 10);
            *((void *)v247 + 11) = *((void *)v248 + 11);
            *((void *)v247 + 12) = *((void *)v248 + 12);
            *((void *)v247 + 13) = *((void *)v248 + 13);
            uint64_t v249 = v333[10];
            uint64_t v308 = &v339[v249];
            uint64_t v310 = &v344[v249];
            uint64_t v305 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v311 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v305(v310, v308, v311);
            uint64_t v250 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
            uint64_t v251 = &v310[v250];
            uint64_t v252 = &v308[v250];
            *(void *)uint64_t v251 = *(void *)v252;
            *((void *)v251 + 1) = *((void *)v252 + 1);
            uint64_t v253 = v333[11];
            uint64_t v254 = &v344[v253];
            uint64_t v255 = &v339[v253];
            *(void *)uint64_t v254 = *(void *)v255;
            *((void *)v254 + 1) = *((void *)v255 + 1);
            *((void *)v254 + 2) = *((void *)v255 + 2);
            *((void *)v254 + 3) = *((void *)v255 + 3);
            *((void *)v254 + 4) = *((void *)v255 + 4);
            *((void *)v254 + 5) = *((void *)v255 + 5);
            uint64_t v256 = v333[12];
            uint64_t v257 = &v344[v256];
            uint64_t v258 = &v339[v256];
            uint64_t v259 = type metadata accessor for PressureTrend();
            uint64_t v306 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v259 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v306(v257, v258, v259);
            uint64_t v260 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            uint64_t v261 = v260[5];
            uint64_t v262 = &v257[v261];
            uint64_t v263 = &v258[v261];
            *(void *)uint64_t v262 = *(void *)v263;
            *((void *)v262 + 1) = *((void *)v263 + 1);
            uint64_t v264 = v260[6];
            uint64_t v265 = &v257[v264];
            uint64_t v266 = &v258[v264];
            *(void *)uint64_t v265 = *(void *)v266;
            *((void *)v265 + 1) = *((void *)v266 + 1);
            uint64_t v267 = v260[7];
            uint64_t v268 = &v257[v267];
            uint64_t v269 = &v258[v267];
            *(void *)uint64_t v268 = *(void *)v269;
            *((void *)v268 + 1) = *((void *)v269 + 1);
            *(void *)&v257[v260[8]] = *(void *)&v258[v260[8]];
            uint64_t v270 = v260[9];
            uint64_t v271 = &v257[v270];
            uint64_t v272 = &v258[v270];
            *(void *)uint64_t v271 = *(void *)v272;
            *((void *)v271 + 1) = *((void *)v272 + 1);
            uint64_t v273 = v333[13];
            uint64_t v274 = &v344[v273];
            uint64_t v275 = &v339[v273];
            *(void *)uint64_t v274 = *(void *)v275;
            *((void *)v274 + 1) = *((void *)v275 + 1);
            *((void *)v274 + 2) = *((void *)v275 + 2);
            *((void *)v274 + 3) = *((void *)v275 + 3);
            *((void *)v274 + 4) = *((void *)v275 + 4);
            *((void *)v274 + 5) = *((void *)v275 + 5);
            *((void *)v274 + 6) = *((void *)v275 + 6);
            *((void *)v274 + 7) = *((void *)v275 + 7);
            *((void *)v274 + 8) = *((void *)v275 + 8);
            *((void *)v274 + 9) = *((void *)v275 + 9);
            *((void *)v274 + 10) = *((void *)v275 + 10);
            *((void *)v274 + 11) = *((void *)v275 + 11);
            *((void *)v274 + 12) = *((void *)v275 + 12);
            *((void *)v274 + 13) = *((void *)v275 + 13);
            *((void *)v274 + 14) = *((void *)v275 + 14);
            *((void *)v274 + 15) = *((void *)v275 + 15);
            *((void *)v274 + 16) = *((void *)v275 + 16);
            *((void *)v274 + 17) = *((void *)v275 + 17);
            *((void *)v274 + 18) = *((void *)v275 + 18);
            *((void *)v274 + 19) = *((void *)v275 + 19);
            *((void *)v274 + 20) = *((void *)v275 + 20);
            *((void *)v274 + 21) = *((void *)v275 + 21);
            *((void *)v274 + 22) = *((void *)v275 + 22);
            *((void *)v274 + 23) = *((void *)v275 + 23);
            *((void *)v274 + 24) = *((void *)v275 + 24);
            *((void *)v274 + 25) = *((void *)v275 + 25);
            *((void *)v274 + 26) = *((void *)v275 + 26);
            *((void *)v274 + 27) = *((void *)v275 + 27);
            *((void *)v274 + 28) = *((void *)v275 + 28);
            uint64_t v276 = v333[14];
            uint64_t v277 = &v344[v276];
            uint64_t v278 = &v339[v276];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v317(v277, v278, v321);
            uint64_t v279 = *(int *)(v325 + 20);
            uint64_t v318 = v277;
            uint64_t v280 = &v277[v279];
            uint64_t v281 = &v278[v279];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v278[v279], 1, v313))
            {
              uint64_t v282 = sub_10017DF08(&qword_100E63760);
              memcpy(v280, v281, *(void *)(*(void *)(v282 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v313 - 8) + 16))(v280, v281, v313);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v313);
            }
            uint64_t v283 = *(int *)(v325 + 24);
            uint64_t v284 = &v318[v283];
            uint64_t v285 = &v278[v283];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v278[v283], 1, v244))
            {
              uint64_t v286 = sub_10017DF08(&qword_100E63768);
              memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v244 - 8) + 16))(v284, v285, v244);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v284, 0, 1, v244);
            }
            uint64_t v287 = v333[15];
            uint64_t v288 = &v344[v287];
            uint64_t v289 = &v339[v287];
            *(void *)uint64_t v288 = *(void *)v289;
            *((void *)v288 + 1) = *((void *)v289 + 1);
            *((void *)v288 + 2) = *((void *)v289 + 2);
            *((void *)v288 + 3) = *((void *)v289 + 3);
            *((void *)v288 + 4) = *((void *)v289 + 4);
            *((void *)v288 + 5) = *((void *)v289 + 5);
            *((void *)v288 + 6) = *((void *)v289 + 6);
            *((void *)v288 + 7) = *((void *)v289 + 7);
            *((void *)v288 + 8) = *((void *)v289 + 8);
            *((void *)v288 + 9) = *((void *)v289 + 9);
            *((void *)v288 + 10) = *((void *)v289 + 10);
            *((void *)v288 + 11) = *((void *)v289 + 11);
            *((void *)v288 + 12) = *((void *)v289 + 12);
            *((void *)v288 + 13) = *((void *)v289 + 13);
            uint64_t v290 = v327[20];
            uint64_t v328 = (uint64_t *)((char *)v7 + v290);
            uint64_t v291 = &v8[v290];
            type metadata accessor for NewsDataModel();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v328 = *(void *)v291;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v292 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v292 - 8) + 16))(v328, v291, v292);
            }
LABEL_175:
            swift_storeEnumTagMultiPayload();
LABEL_215:
            swift_storeEnumTagMultiPayload();
LABEL_216:
            swift_storeEnumTagMultiPayload();
            break;
          case 5u:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            swift_bridgeObjectRetain();
            uint64_t v117 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            uint64_t v118 = (uint64_t *)((char *)v7 + v117);
            uint64_t v119 = &v8[v117];
            type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v118 = *(void *)v119;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v152 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v152 - 8) + 16))(v118, v119, v152);
            }
            goto LABEL_175;
          case 6u:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            swift_bridgeObjectRetain();
            uint64_t v120 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            uint64_t v121 = (char *)v7 + v120;
            unint64_t v122 = &v8[v120];
            uint64_t v123 = type metadata accessor for AvailableDataSets();
            goto LABEL_112;
          case 8u:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            swift_bridgeObjectRetain();
            uint64_t v124 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            uint64_t v121 = (char *)v7 + v124;
            unint64_t v122 = &v8[v124];
            uint64_t v123 = type metadata accessor for WeatherStatisticsModel();
LABEL_112:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
            goto LABEL_215;
          default:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
LABEL_138:
            swift_bridgeObjectRetain();
            goto LABEL_215;
        }
        break;
      case 0xAu:
        uint64_t v18 = type metadata accessor for DebugAction();
        int v40 = swift_getEnumCaseMultiPayload();
        if (v40 == 1) {
          goto LABEL_37;
        }
        if (v40) {
          goto LABEL_60;
        }
        uint64_t v41 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v41))
        {
          uint64_t v42 = sub_10017DF08(&qword_100E63A50);
          memcpy(v7, v8, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v41 - 8) + 16))(v7, v8, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v41);
        }
        uint64_t v106 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
        uint64_t v107 = (uint64_t *)((char *)v7 + v106);
        uint64_t v108 = &v8[v106];
        void *v107 = *(void *)v108;
        v107[1] = *((void *)v108 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_215;
      case 0xBu:
        uint64_t v18 = type metadata accessor for ConditionDetailViewAction();
        int v19 = swift_getEnumCaseMultiPayload();
        switch(v19)
        {
          case 2:
            *uint64_t v7 = *(void *)v8;
            v7[1] = *((void *)v8 + 1);
            uint64_t v46 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v47 = v46[5];
            uint64_t v329 = &v8[v47];
            uint64_t v334 = (char *)v7 + v47;
            uint64_t v48 = type metadata accessor for Date();
            uint64_t v49 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v48 - 8) + 16);
            swift_bridgeObjectRetain();
            v49(v334, v329, v48);
            v49((char *)v7 + v46[6], &v8[v46[6]], v48);
            v49((char *)v7 + v46[7], &v8[v46[7]], v48);
            *(uint64_t *)((char *)v7 + v46[8]) = *(void *)&v8[v46[8]];
            uint64_t v50 = v46[9];
            uint64_t v51 = (char *)v7 + v50;
            uint64_t v52 = &v8[v50];
            char v53 = v52[8];
            *(void *)uint64_t v51 = *(void *)v52;
            v51[8] = v53;
            goto LABEL_215;
          case 1:
            uint64_t v54 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v54 - 8) + 16))(v7, v8, v54);
            goto LABEL_215;
          case 0:
LABEL_14:
            uint64_t v20 = type metadata accessor for Date();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v20 - 8) + 16))(v7, v8, v20);
            goto LABEL_215;
        }
LABEL_60:
        memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
        goto LABEL_216;
      case 0xDu:
        uint64_t v18 = type metadata accessor for MoonDetailViewAction();
        int v21 = swift_getEnumCaseMultiPayload();
        if (v21 == 1) {
          goto LABEL_14;
        }
        if (v21) {
          goto LABEL_60;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v22 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v22 - 8) + 16))(v7, v8, v22);
        swift_storeEnumTagMultiPayload();
        goto LABEL_215;
      case 0xEu:
        uint64_t v18 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_60;
        }
        *uint64_t v7 = *(void *)v8;
        uint64_t v23 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v24 = v23[5];
        uint64_t v25 = (char *)v7 + v24;
        uint64_t v26 = &v8[v24];
        uint64_t v27 = type metadata accessor for Date();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        *(uint64_t *)((char *)v7 + v23[6]) = *(void *)&v8[v23[6]];
        *(uint64_t *)((char *)v7 + v23[7]) = *(void *)&v8[v23[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_216;
      case 0x10u:
        *uint64_t v7 = *(void *)v8;
        v7[1] = *((void *)v8 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_216;
      case 0x11u:
        uint64_t v43 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v44 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v44 - 8) + 16))(v7, v8, v44);
            goto LABEL_70;
          case 2u:
            uint64_t v68 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v68 - 8) + 16))(v7, v8, v68);
            goto LABEL_70;
          case 3u:
            *uint64_t v7 = *(void *)v8;
            uint64_t v69 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v70 = *(int *)(v69 + 48);
            uint64_t v71 = (char *)v7 + v70;
            uint64_t v72 = &v8[v70];
            uint64_t v73 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            *((unsigned char *)v7 + *(int *)(v69 + 64)) = v8[*(int *)(v69 + 64)];
            goto LABEL_70;
          case 4u:
            uint64_t v74 = type metadata accessor for WeatherCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v74 - 8) + 16))(v7, v8, v74);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v43 - 8) + 64));
            break;
        }
        goto LABEL_216;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  uint64_t v301 = *(int *)(a3 + 28);
  uint64_t v302 = (void *)((char *)a1 + v301);
  uint64_t v303 = (void *)((char *)a2 + v301);
  *uint64_t v302 = *v303;
  v302[1] = v303[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100372AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = type metadata accessor for AppConfiguration();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      goto LABEL_194;
    case 2u:
      uint64_t v11 = type metadata accessor for EnvironmentAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 11)
      {
        uint64_t v34 = type metadata accessor for ConfiguredUnitsAction();
        int v68 = swift_getEnumCaseMultiPayload();
        if (v68 == 1)
        {
          uint64_t v123 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v123))
          {
            uint64_t v124 = sub_10017DF08(&qword_100E6F620);
            memcpy(v7, v8, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v123 - 8) + 32))(v7, v8, v123);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v123);
          }
        }
        else
        {
          if (v68) {
            goto LABEL_104;
          }
          uint64_t v69 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 32))(v7, v8, v69);
        }
        goto LABEL_192;
      }
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v34 = type metadata accessor for ActivityAction();
        int v70 = swift_getEnumCaseMultiPayload();
        if (v70 != 1)
        {
          if (v70) {
            goto LABEL_104;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v71 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v71 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v71 - 8) + 32))(v7, v8);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          goto LABEL_193;
        }
        uint64_t v125 = type metadata accessor for PreviewLocation();
        int v126 = swift_getEnumCaseMultiPayload();
        if (v126 == 2)
        {
          *uint64_t v7 = *v8;
          *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
          *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
          *(_OWORD *)(v7 + 5) = *(_OWORD *)(v8 + 5);
          uint64_t v279 = type metadata accessor for SearchLocation();
          uint64_t v250 = *(int *)(v279 + 32);
          uint64_t v274 = (char *)v7 + v250;
          uint64_t v251 = (char *)v8 + v250;
          uint64_t v252 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v251, 1, v252))
          {
            uint64_t v253 = sub_10017DF08(&qword_100E639E8);
            memcpy(v274, v251, *(void *)(*(void *)(v253 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 32))(v274, v251, v252);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v274, 0, 1, v252);
          }
          uint64_t v258 = *(int *)(v279 + 36);
          uint64_t v259 = (char *)v7 + v258;
          uint64_t v260 = (char *)v8 + v258;
          *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
          v259[16] = v260[16];
        }
        else if (v126 == 1)
        {
          uint64_t v254 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v254 - 8) + 32))(v7, v8, v254);
        }
        else
        {
          if (v126)
          {
            memcpy(v7, v8, *(void *)(*(void *)(v125 - 8) + 64));
LABEL_192:
            swift_storeEnumTagMultiPayload();
            goto LABEL_193;
          }
          uint64_t v127 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 32))(v7, v8, v127);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_192;
      }
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_35;
      }
      uint64_t v32 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(v7, v8, v32);
LABEL_193:
      swift_storeEnumTagMultiPayload();
LABEL_194:
      swift_storeEnumTagMultiPayload();
LABEL_195:
      *(_OWORD *)(a1 + *(int *)(v3 + 28)) = *(_OWORD *)(a2 + *(int *)(v3 + 28));
      return a1;
    case 3u:
      uint64_t v11 = type metadata accessor for LocationsAction();
      int v33 = swift_getEnumCaseMultiPayload();
      if (v33 == 1)
      {
        uint64_t v52 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 32))(v7, v8, v52);
        uint64_t v53 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)v7 + *(int *)(v53 + 48)) = *((unsigned char *)v8 + *(int *)(v53 + 48));
      }
      else
      {
        if (v33) {
          goto LABEL_35;
        }
        uint64_t v34 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
LABEL_104:
          memcpy(v7, v8, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
LABEL_28:
          uint64_t v122 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 32))(v7, v8, v122);
          swift_storeEnumTagMultiPayload();
        }
      }
      goto LABEL_193;
    case 4u:
      uint64_t v11 = type metadata accessor for NotificationsAction();
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 5)
      {
        uint64_t v72 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 32))(v7, v8, v72);
        uint64_t v73 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v74 = (char *)v7 + v73;
        uint64_t v75 = (char *)v8 + v73;
        uint64_t v76 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
        goto LABEL_193;
      }
      if (v35 == 2)
      {
        uint64_t v63 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 32))(v7, v8, v63);
        uint64_t v64 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v65 = (char *)v7 + v64;
        uint64_t v66 = (char *)v8 + v64;
        uint64_t v67 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
        goto LABEL_193;
      }
      if (v35 != 1) {
        goto LABEL_35;
      }
      uint64_t v36 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v36))
      {
        uint64_t v37 = type metadata accessor for NotificationLocation();
        memcpy(v7, v8, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(v7, v8, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v36);
      }
      uint64_t v117 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v118 = (char *)v7 + v117;
      uint64_t v119 = (char *)v8 + v117;
      uint64_t v120 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120)) {
        goto LABEL_135;
      }
      uint64_t v121 = sub_10017DF08(&qword_100E749B0);
      memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
      goto LABEL_193;
    case 5u:
      uint64_t v11 = type metadata accessor for NotificationsOptInAction();
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 4) {
        goto LABEL_13;
      }
      if (v12 != 2) {
        goto LABEL_35;
      }
      uint64_t v13 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      uint64_t v14 = sub_10017DF08(&qword_100E6BBD8);
      *((unsigned char *)v7 + *(int *)(v14 + 48)) = *((unsigned char *)v8 + *(int *)(v14 + 48));
      goto LABEL_193;
    case 6u:
      uint64_t v15 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v16 = type metadata accessor for ListViewAction();
          int v17 = swift_getEnumCaseMultiPayload();
          if (v17 == 2) {
            goto LABEL_125;
          }
          if (v17) {
            goto LABEL_142;
          }
          uint64_t v18 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v7, v8, v18);
          uint64_t v19 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)v7 + *(int *)(v19 + 48)) = *((unsigned char *)v8 + *(int *)(v19 + 48));
          goto LABEL_126;
        case 1u:
          uint64_t v16 = type metadata accessor for LocationViewerViewAction();
          int v108 = swift_getEnumCaseMultiPayload();
          if (v108 == 2)
          {
LABEL_125:
            uint64_t v150 = type metadata accessor for Location.Identifier();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 32))(v7, v8, v150);
          }
          else if (v108 == 1)
          {
            uint64_t v165 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 32))(v7, v8, v165);
          }
          else
          {
            if (v108)
            {
LABEL_142:
              memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_187:
              swift_storeEnumTagMultiPayload();
              goto LABEL_194;
            }
            uint64_t v109 = type metadata accessor for LocationModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 32))(v7, v8, v109);
          }
LABEL_126:
          swift_storeEnumTagMultiPayload();
          goto LABEL_187;
        case 3u:
          uint64_t v16 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v110 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v110 - 8) + 32))(v7, v8, v110);
              goto LABEL_126;
            case 3u:
            case 6u:
              uint64_t v172 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v172 - 8) + 32))(v7, v8, v172);
              goto LABEL_126;
            case 4u:
              uint64_t v166 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v166 - 8) + 32))(v7, v8, v166);
              goto LABEL_126;
            case 5u:
              *uint64_t v7 = *v8;
              *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
              *(_OWORD *)(v7 + 3) = *(_OWORD *)(v8 + 3);
              *(_OWORD *)(v7 + 5) = *(_OWORD *)(v8 + 5);
              uint64_t v277 = type metadata accessor for SearchLocation();
              uint64_t v167 = *(int *)(v277 + 32);
              uint64_t v168 = (char *)v7 + v167;
              int v169 = (char *)v8 + v167;
              uint64_t v170 = type metadata accessor for Location();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v169, 1, v170))
              {
                uint64_t v171 = sub_10017DF08(&qword_100E639E8);
                memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v168, 0, 1, v170);
              }
              uint64_t v255 = *(int *)(v277 + 36);
              uint64_t v256 = (char *)v7 + v255;
              uint64_t v257 = (char *)v8 + v255;
              *(_OWORD *)uint64_t v256 = *(_OWORD *)v257;
              v256[16] = v257[16];
              swift_storeEnumTagMultiPayload();
              break;
            default:
              goto LABEL_142;
          }
          goto LABEL_187;
        case 4u:
          uint64_t v111 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v174 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 32))(v7, v8, v174);
              goto LABEL_151;
            case 3u:
              uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(v7, v8, v173);
LABEL_151:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v7, v8, *(void *)(*(void *)(v111 - 8) + 64));
              break;
          }
          goto LABEL_187;
        case 5u:
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
          *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
          *((unsigned char *)v7 + 17) = *((unsigned char *)v8 + 17);
          *((unsigned char *)v7 + 18) = *((unsigned char *)v8 + 18);
          uint64_t v112 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v113 = (char *)v7 + v112;
          uint64_t v114 = (char *)v8 + v112;
          uint64_t v115 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
          goto LABEL_187;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
          goto LABEL_194;
      }
    case 7u:
      uint64_t v11 = type metadata accessor for ModalViewAction();
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_35;
      }
      uint64_t v34 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_28;
      }
      goto LABEL_104;
    case 8u:
      uint64_t v11 = type metadata accessor for LocationViewAction();
      int v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 2)
      {
        uint64_t v77 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 32))(v7, v8, v77);
        uint64_t v78 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v79 = (char *)v7 + v78;
        uint64_t v80 = (char *)v8 + v78;
        uint64_t v81 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
        uint64_t v82 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v83 = (char *)v7 + v82;
        uint64_t v84 = (char *)v8 + v82;
        long long v85 = *((_OWORD *)v84 + 1);
        *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
        *((_OWORD *)v83 + 1) = v85;
        v83[32] = v84[32];
      }
      else if (v38 == 1)
      {
        uint64_t v86 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v87 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v87 - 8) + 32))(v7, v8, v87);
            uint64_t v88 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)v7 + *(int *)(v88 + 48)) = *((unsigned char *)v8 + *(int *)(v88 + 48));
            goto LABEL_132;
          case 1u:
            uint64_t v151 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 32))(v7, v8, v151);
            goto LABEL_132;
          case 2u:
            uint64_t v152 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v152 - 8) + 32))(v7, v8, v152);
            uint64_t v153 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)v7 + *(int *)(v153 + 48)) = *((unsigned char *)v8 + *(int *)(v153 + 48));
            goto LABEL_132;
          case 4u:
            *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
            uint64_t v154 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v155 = (char *)v7 + v154;
            uint64_t v156 = (char *)v8 + v154;
            uint64_t v157 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
LABEL_132:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(void *)(*(void *)(v86 - 8) + 64));
            break;
        }
        uint64_t v158 = sub_10017DF08(&qword_100E66458);
        uint64_t v159 = *(int *)(v158 + 48);
        uint64_t v160 = (char *)v7 + v159;
        uint64_t v161 = (char *)v8 + v159;
        long long v162 = *((_OWORD *)v161 + 1);
        *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
        *((_OWORD *)v160 + 1) = v162;
        v160[32] = v161[32];
        uint64_t v163 = *(int *)(v158 + 64);
        uint64_t v118 = (char *)v7 + v163;
        uint64_t v119 = (char *)v8 + v163;
        uint64_t v120 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
        {
          uint64_t v164 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v118, v119, *(void *)(*(void *)(v164 - 8) + 64));
        }
        else
        {
LABEL_135:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
        }
      }
      else
      {
        if (v38) {
          goto LABEL_35;
        }
LABEL_39:
        uint64_t v39 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 32))(v7, v8, v39);
      }
      goto LABEL_193;
    case 9u:
      uint64_t v40 = type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
          uint64_t v270 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v41 = v270[12];
          uint64_t v42 = (char *)v7 + v41;
          uint64_t v43 = (char *)v8 + v41;
          *(_OWORD *)((char *)v7 + v41) = *(_OWORD *)((char *)v8 + v41);
          uint64_t v275 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v44 = v275[5];
          uint64_t v45 = &v42[v44];
          uint64_t v46 = &v43[v44];
          uint64_t v47 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
          {
            uint64_t v48 = sub_10017DF08(&qword_100E63730);
            memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
          }
          uint64_t v128 = v275[6];
          uint64_t v129 = &v42[v128];
          uint64_t v130 = &v43[v128];
          uint64_t v131 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
          uint64_t v132 = v275[7];
          uint64_t v133 = &v42[v132];
          uint64_t v134 = &v43[v132];
          uint64_t v135 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, v135))
          {
            uint64_t v136 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v133, v134, *(void *)(*(void *)(v136 - 8) + 64));
          }
          else
          {
            uint64_t v137 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v133, v134, v137);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v133, 0, 1, v135);
          }
          uint64_t v138 = v275[8];
          uint64_t v139 = &v42[v138];
          uint64_t v140 = &v43[v138];
          uint64_t v141 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v142 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v139, v140, v142);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
          }
          uint64_t v143 = v275[9];
          uint64_t v144 = &v42[v143];
          long long v145 = &v43[v143];
          uint64_t v146 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
          {
            uint64_t v147 = sub_10017DF08(&qword_100E63740);
            memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            uint64_t v148 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v148))
            {
              uint64_t v149 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v144, v145, *(void *)(*(void *)(v149 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v144, v145, v148);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v148);
            }
            uint64_t v175 = *(int *)(v146 + 20);
            uint64_t v176 = &v144[v175];
            uint64_t v177 = &v145[v175];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v148))
            {
              uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v176, v177, v148);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v148);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v146);
          }
          uint64_t v179 = v270[16];
          uint64_t v180 = (char *)v7 + v179;
          uint64_t v181 = (char *)v8 + v179;
          uint64_t v182 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
          uint64_t v183 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v180[*(int *)(v183 + 20)] = *(void *)&v181[*(int *)(v183 + 20)];
          uint64_t v271 = (int *)v183;
          uint64_t v184 = *(int *)(v183 + 24);
          uint64_t v278 = v180;
          id v185 = &v180[v184];
          uint64_t v273 = v181;
          uint64_t v186 = &v181[v184];
          long long v187 = *(_OWORD *)&v181[v184 + 16];
          *(_OWORD *)id v185 = *(_OWORD *)&v181[v184];
          *((_OWORD *)v185 + 1) = v187;
          *((_OWORD *)v185 + 2) = *(_OWORD *)&v181[v184 + 32];
          uint64_t v188 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v189 = *(int *)(v188 + 28);
          __dst = &v185[v189];
          uint64_t v190 = &v186[v189];
          uint64_t v191 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v191))
          {
            uint64_t v192 = sub_10017DF08(&qword_100E63750);
            memcpy(__dst, v190, *(void *)(*(void *)(v192 - 8) + 64));
          }
          else
          {
            *(_OWORD *)__dst = *(_OWORD *)v190;
            uint64_t v193 = *(int *)(v191 + 20);
            uint64_t v266 = (void *)v188;
            uint64_t v194 = &__dst[v193];
            uint64_t v195 = &v190[v193];
            uint64_t v196 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v194, v195, v196);
            uint64_t v197 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v194[v197[5]] = *(void *)&v195[v197[5]];
            *(void *)&v194[v197[6]] = *(void *)&v195[v197[6]];
            *(void *)&v194[v197[7]] = *(void *)&v195[v197[7]];
            *(_OWORD *)&v194[v197[8]] = *(_OWORD *)&v195[v197[8]];
            v194[v197[9]] = v195[v197[9]];
            uint64_t v188 = (uint64_t)v266;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v191);
          }
          *(_OWORD *)&v185[*(int *)(v188 + 32)] = *(_OWORD *)&v186[*(int *)(v188 + 32)];
          uint64_t v198 = v271[7];
          uint64_t v199 = &v278[v198];
          uint64_t v200 = &v273[v198];
          *(void *)&v278[v198] = *(void *)&v273[v198];
          uint64_t v201 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v202 = &v199[v201];
          uint64_t v203 = &v200[v201];
          uint64_t v204 = type metadata accessor for WeatherDescription();
          uint64_t v263 = v204;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v204))
          {
            uint64_t v205 = sub_10017DF08(&qword_100E63758);
            memcpy(v202, v203, *(void *)(*(void *)(v205 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 32))(v202, v203, v204);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v204);
          }
          uint64_t v206 = v271[8];
          uint64_t v207 = &v278[v206];
          uint64_t v208 = &v273[v206];
          long long v209 = *(_OWORD *)&v273[v206 + 16];
          *(_OWORD *)uint64_t v207 = *(_OWORD *)&v273[v206];
          *((_OWORD *)v207 + 1) = v209;
          long long v210 = *(_OWORD *)&v273[v206 + 48];
          *((_OWORD *)v207 + 2) = *(_OWORD *)&v273[v206 + 32];
          *((_OWORD *)v207 + 3) = v210;
          uint64_t v211 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v212 = &v207[v211];
          id v213 = &v208[v211];
          uint64_t v264 = type metadata accessor for Date();
          uint64_t v262 = *(void (**)(char *, char *))(*(void *)(v264 - 8) + 32);
          v262(v212, v213);
          uint64_t v214 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v215 = *(int *)(v214 + 20);
          uint64_t v267 = &v212[v215];
          uint64_t v216 = &v213[v215];
          uint64_t v217 = type metadata accessor for Elevation();
          uint64_t v265 = v217;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v217))
          {
            uint64_t v218 = sub_10017DF08(&qword_100E63760);
            memcpy(v267, v216, *(void *)(*(void *)(v218 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 32))(v267, v216, v217);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v267, 0, 1, v217);
          }
          uint64_t v219 = *(int *)(v214 + 24);
          uint64_t v220 = &v212[v219];
          uint64_t v221 = &v213[v219];
          uint64_t v222 = type metadata accessor for BackgroundMoonData();
          uint64_t v268 = (void *)v222;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v222))
          {
            uint64_t v223 = sub_10017DF08(&qword_100E63768);
            memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 32))(v220, v221, v222);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v222);
          }
          memcpy(&v278[v271[9]], &v273[v271[9]], 0x70uLL);
          uint64_t v224 = v271[10];
          uint64_t v225 = &v278[v224];
          uint64_t v226 = &v273[v224];
          (*(void (**)(char *, char *))(*(void *)(v263 - 8) + 32))(&v278[v224], &v273[v224]);
          uint64_t v227 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
          *(_OWORD *)&v225[*(int *)(v227 + 20)] = *(_OWORD *)&v226[*(int *)(v227 + 20)];
          uint64_t v228 = v271[11];
          uint64_t v229 = &v278[v228];
          uint64_t v230 = &v273[v228];
          long long v231 = *((_OWORD *)v230 + 1);
          *(_OWORD *)uint64_t v229 = *(_OWORD *)v230;
          *((_OWORD *)v229 + 1) = v231;
          *((_OWORD *)v229 + 2) = *((_OWORD *)v230 + 2);
          uint64_t v232 = v271[12];
          uint64_t v233 = &v278[v232];
          uint64_t v234 = &v273[v232];
          uint64_t v235 = type metadata accessor for PressureTrend();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
          uint64_t v236 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          *(_OWORD *)&v233[v236[5]] = *(_OWORD *)&v234[v236[5]];
          *(_OWORD *)&v233[v236[6]] = *(_OWORD *)&v234[v236[6]];
          *(_OWORD *)&v233[v236[7]] = *(_OWORD *)&v234[v236[7]];
          *(void *)&v233[v236[8]] = *(void *)&v234[v236[8]];
          *(_OWORD *)&v233[v236[9]] = *(_OWORD *)&v234[v236[9]];
          memcpy(&v278[v271[13]], &v273[v271[13]], 0xE8uLL);
          uint64_t v237 = v271[14];
          uint64_t v238 = &v278[v237];
          uint64_t v239 = &v273[v237];
          ((void (*)(char *, char *, uint64_t))v262)(&v278[v237], &v273[v237], v264);
          uint64_t v240 = *(int *)(v214 + 20);
          uint64_t v241 = &v238[v240];
          uint64_t v242 = &v239[v240];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v239[v240], 1, v265))
          {
            uint64_t v243 = sub_10017DF08(&qword_100E63760);
            memcpy(v241, v242, *(void *)(*(void *)(v243 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v265 - 8) + 32))(v241, v242, v265);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v241, 0, 1, v265);
          }
          uint64_t v244 = *(int *)(v214 + 24);
          uint64_t v245 = &v238[v244];
          uint64_t v246 = &v239[v244];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v246, 1, (uint64_t)v268))
          {
            uint64_t v247 = sub_10017DF08(&qword_100E63768);
            memcpy(v245, v246, *(void *)(*(void *)(v247 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(*(v268 - 1) + 32))(v245, v246, v268);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v245, 0, 1, (uint64_t)v268);
          }
          memcpy(&v278[v271[15]], &v273[v271[15]], 0x70uLL);
          uint64_t v248 = v270[20];
          uint64_t v97 = (char *)v7 + v248;
          uint64_t v98 = (char *)v8 + v248;
          uint64_t v99 = type metadata accessor for NewsDataModel();
          if (!swift_getEnumCaseMultiPayload()) {
            goto LABEL_178;
          }
          goto LABEL_177;
        case 5u:
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
          uint64_t v96 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          uint64_t v97 = (char *)v7 + v96;
          uint64_t v98 = (char *)v8 + v96;
          uint64_t v99 = type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_177:
            memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
LABEL_178:
            uint64_t v249 = type metadata accessor for News();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 32))(v97, v98, v249);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_179;
        case 6u:
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
          uint64_t v100 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v101 = (char *)v7 + v100;
          uint64_t v102 = (char *)v8 + v100;
          uint64_t v103 = type metadata accessor for AvailableDataSets();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
          goto LABEL_179;
        case 8u:
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
          uint64_t v104 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v105 = (char *)v7 + v104;
          uint64_t v106 = (char *)v8 + v104;
          uint64_t v107 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
LABEL_179:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v40 - 8) + 64));
          break;
      }
      goto LABEL_194;
    case 0xAu:
      uint64_t v11 = type metadata accessor for DebugAction();
      int v49 = swift_getEnumCaseMultiPayload();
      if (v49 == 1) {
        goto LABEL_39;
      }
      if (v49) {
        goto LABEL_35;
      }
      uint64_t v50 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v50))
      {
        uint64_t v51 = sub_10017DF08(&qword_100E63A50);
        memcpy(v7, v8, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(v7, v8, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v50);
      }
      uint64_t v116 = sub_10017DF08(&qword_100E6F648);
      *(_OWORD *)((char *)v7 + *(int *)(v116 + 48)) = *(_OWORD *)((char *)v8 + *(int *)(v116 + 48));
      goto LABEL_193;
    case 0xBu:
      uint64_t v11 = type metadata accessor for ConditionDetailViewAction();
      int v20 = swift_getEnumCaseMultiPayload();
      switch(v20)
      {
        case 2:
          *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
          uint64_t v54 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v55 = v54[5];
          uint64_t v272 = (char *)v7 + v55;
          uint64_t v56 = (char *)v8 + v55;
          uint64_t v57 = type metadata accessor for Date();
          uint64_t v276 = v3;
          uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32);
          v58(v272, v56, v57);
          v58((char *)v7 + v54[6], (char *)v8 + v54[6], v57);
          v58((char *)v7 + v54[7], (char *)v8 + v54[7], v57);
          uint64_t v3 = v276;
          *(void *)((char *)v7 + v54[8]) = *(void *)((char *)v8 + v54[8]);
          uint64_t v59 = v54[9];
          uint64_t v60 = (char *)v7 + v59;
          uint64_t v61 = (char *)v8 + v59;
          v60[8] = v61[8];
          *(void *)uint64_t v60 = *(void *)v61;
          goto LABEL_193;
        case 1:
          uint64_t v62 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(v7, v8, v62);
          goto LABEL_193;
        case 0:
LABEL_13:
          uint64_t v21 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32))(v7, v8, v21);
          goto LABEL_193;
      }
LABEL_35:
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_194;
    case 0xDu:
      uint64_t v11 = type metadata accessor for MoonDetailViewAction();
      int v22 = swift_getEnumCaseMultiPayload();
      if (v22 == 1) {
        goto LABEL_13;
      }
      if (v22) {
        goto LABEL_35;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v23 = type metadata accessor for Date();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 32))(v7, v8, v23);
      swift_storeEnumTagMultiPayload();
      goto LABEL_193;
    case 0xEu:
      uint64_t v11 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_35;
      }
      *uint64_t v7 = *v8;
      uint64_t v24 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v25 = v24[5];
      uint64_t v26 = (char *)v7 + v25;
      uint64_t v27 = (char *)v8 + v25;
      uint64_t v28 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      *(void *)((char *)v7 + v24[6]) = *(void *)((char *)v8 + v24[6]);
      *(void *)((char *)v7 + v24[7]) = *(void *)((char *)v8 + v24[7]);
      swift_storeEnumTagMultiPayload();
      goto LABEL_194;
    case 0x11u:
      uint64_t v29 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v30 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 32))(v7, v8, v30);
          goto LABEL_81;
        case 2u:
          uint64_t v89 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v89 - 8) + 32))(v7, v8, v89);
          goto LABEL_81;
        case 3u:
          *uint64_t v7 = *v8;
          uint64_t v90 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v91 = *(int *)(v90 + 48);
          uint64_t v92 = (char *)v7 + v91;
          uint64_t v93 = (char *)v8 + v91;
          uint64_t v94 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
          *((unsigned char *)v7 + *(int *)(v90 + 64)) = *((unsigned char *)v8 + *(int *)(v90 + 64));
          goto LABEL_81;
        case 4u:
          uint64_t v95 = type metadata accessor for WeatherCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 32))(v7, v8, v95);
LABEL_81:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(void *)(*(void *)(v29 - 8) + 64));
          break;
      }
      goto LABEL_194;
    default:
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      goto LABEL_195;
  }
}

uint64_t sub_1003759DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_10020044C(a1 + v7, (void (*)(void))type metadata accessor for MainAction);
    uint64_t v10 = type metadata accessor for MainAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v11 = type metadata accessor for AppConfiguration();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
        goto LABEL_195;
      case 2u:
        uint64_t v12 = type metadata accessor for EnvironmentAction();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 11)
        {
          uint64_t v35 = type metadata accessor for ConfiguredUnitsAction();
          int v68 = swift_getEnumCaseMultiPayload();
          if (v68 == 1)
          {
            uint64_t v123 = type metadata accessor for UnitConfiguration.Temperature();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v123))
            {
              uint64_t v124 = sub_10017DF08(&qword_100E6F620);
              memcpy(v8, v9, *(void *)(*(void *)(v124 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v123 - 8) + 32))(v8, v9, v123);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v123);
            }
          }
          else
          {
            if (v68) {
              goto LABEL_105;
            }
            uint64_t v69 = type metadata accessor for ConfiguredUnit();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 32))(v8, v9, v69);
          }
          goto LABEL_193;
        }
        if (EnumCaseMultiPayload != 3)
        {
          if (EnumCaseMultiPayload != 2) {
            goto LABEL_36;
          }
          uint64_t v33 = type metadata accessor for Locale();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(v8, v9, v33);
LABEL_194:
          swift_storeEnumTagMultiPayload();
LABEL_195:
          swift_storeEnumTagMultiPayload();
          break;
        }
        uint64_t v35 = type metadata accessor for ActivityAction();
        int v70 = swift_getEnumCaseMultiPayload();
        if (v70 != 1)
        {
          if (v70) {
            goto LABEL_105;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v71 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v71 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v71 - 8) + 32))(v8, v9);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          goto LABEL_194;
        }
        uint64_t v125 = type metadata accessor for PreviewLocation();
        int v126 = swift_getEnumCaseMultiPayload();
        if (v126 == 2)
        {
          *uint64_t v8 = *v9;
          *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
          *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
          *(_OWORD *)(v8 + 5) = *(_OWORD *)(v9 + 5);
          uint64_t v284 = type metadata accessor for SearchLocation();
          uint64_t v250 = *(int *)(v284 + 32);
          uint64_t v279 = (char *)v8 + v250;
          uint64_t v251 = (char *)v9 + v250;
          uint64_t v252 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v251, 1, v252))
          {
            uint64_t v253 = sub_10017DF08(&qword_100E639E8);
            memcpy(v279, v251, *(void *)(*(void *)(v253 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 32))(v279, v251, v252);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v279, 0, 1, v252);
          }
          uint64_t v258 = *(int *)(v284 + 36);
          uint64_t v259 = (char *)v8 + v258;
          uint64_t v260 = (char *)v9 + v258;
          *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
          v259[16] = v260[16];
        }
        else if (v126 == 1)
        {
          uint64_t v254 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v254 - 8) + 32))(v8, v9, v254);
        }
        else
        {
          if (v126)
          {
            memcpy(v8, v9, *(void *)(*(void *)(v125 - 8) + 64));
LABEL_193:
            swift_storeEnumTagMultiPayload();
            goto LABEL_194;
          }
          uint64_t v127 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 32))(v8, v9, v127);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_193;
      case 3u:
        uint64_t v12 = type metadata accessor for LocationsAction();
        int v34 = swift_getEnumCaseMultiPayload();
        if (v34 == 1)
        {
          uint64_t v53 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 32))(v8, v9, v53);
          uint64_t v54 = sub_10017DF08(&qword_100E6F628);
          *((unsigned char *)v8 + *(int *)(v54 + 48)) = *((unsigned char *)v9 + *(int *)(v54 + 48));
        }
        else
        {
          if (v34) {
            goto LABEL_36;
          }
          uint64_t v35 = type metadata accessor for CurrentLocation();
          if (swift_getEnumCaseMultiPayload() > 2)
          {
LABEL_105:
            memcpy(v8, v9, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
LABEL_29:
            uint64_t v122 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 32))(v8, v9, v122);
            swift_storeEnumTagMultiPayload();
          }
        }
        goto LABEL_194;
      case 4u:
        uint64_t v12 = type metadata accessor for NotificationsAction();
        int v36 = swift_getEnumCaseMultiPayload();
        if (v36 == 5)
        {
          uint64_t v72 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 32))(v8, v9, v72);
          uint64_t v73 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
          uint64_t v74 = (char *)v8 + v73;
          uint64_t v75 = (char *)v9 + v73;
          uint64_t v76 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
          goto LABEL_194;
        }
        if (v36 == 2)
        {
          uint64_t v63 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 32))(v8, v9, v63);
          uint64_t v64 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
          uint64_t v65 = (char *)v8 + v64;
          uint64_t v66 = (char *)v9 + v64;
          uint64_t v67 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
          goto LABEL_194;
        }
        if (v36 != 1) {
          goto LABEL_36;
        }
        uint64_t v37 = type metadata accessor for LocationModel();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v37))
        {
          uint64_t v38 = type metadata accessor for NotificationLocation();
          memcpy(v8, v9, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 32))(v8, v9, v37);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v37);
        }
        uint64_t v117 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
        uint64_t v118 = (char *)v8 + v117;
        uint64_t v119 = (char *)v9 + v117;
        uint64_t v120 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120)) {
          goto LABEL_136;
        }
        uint64_t v121 = sub_10017DF08(&qword_100E749B0);
        memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
        goto LABEL_194;
      case 5u:
        uint64_t v12 = type metadata accessor for NotificationsOptInAction();
        int v13 = swift_getEnumCaseMultiPayload();
        if (v13 == 4) {
          goto LABEL_14;
        }
        if (v13 != 2) {
          goto LABEL_36;
        }
        uint64_t v14 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
        uint64_t v15 = sub_10017DF08(&qword_100E6BBD8);
        *((unsigned char *)v8 + *(int *)(v15 + 48)) = *((unsigned char *)v9 + *(int *)(v15 + 48));
        goto LABEL_194;
      case 6u:
        uint64_t v16 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = type metadata accessor for ListViewAction();
            int v18 = swift_getEnumCaseMultiPayload();
            if (v18 == 2) {
              goto LABEL_126;
            }
            if (v18) {
              goto LABEL_143;
            }
            uint64_t v19 = type metadata accessor for LocationModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(v8, v9, v19);
            uint64_t v20 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)v8 + *(int *)(v20 + 48)) = *((unsigned char *)v9 + *(int *)(v20 + 48));
            goto LABEL_127;
          case 1u:
            uint64_t v17 = type metadata accessor for LocationViewerViewAction();
            int v108 = swift_getEnumCaseMultiPayload();
            if (v108 == 2)
            {
LABEL_126:
              uint64_t v150 = type metadata accessor for Location.Identifier();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 32))(v8, v9, v150);
            }
            else if (v108 == 1)
            {
              uint64_t v165 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 32))(v8, v9, v165);
            }
            else
            {
              if (v108)
              {
LABEL_143:
                memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_188:
                swift_storeEnumTagMultiPayload();
                goto LABEL_195;
              }
              uint64_t v109 = type metadata accessor for LocationModel();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 32))(v8, v9, v109);
            }
LABEL_127:
            swift_storeEnumTagMultiPayload();
            goto LABEL_188;
          case 3u:
            uint64_t v17 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v110 = type metadata accessor for CodableError();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v110 - 8) + 32))(v8, v9, v110);
                goto LABEL_127;
              case 3u:
              case 6u:
                uint64_t v172 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v172 - 8) + 32))(v8, v9, v172);
                goto LABEL_127;
              case 4u:
                uint64_t v166 = type metadata accessor for LocationOfInterest();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v166 - 8) + 32))(v8, v9, v166);
                goto LABEL_127;
              case 5u:
                *uint64_t v8 = *v9;
                *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
                *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
                *(_OWORD *)(v8 + 5) = *(_OWORD *)(v9 + 5);
                uint64_t v282 = type metadata accessor for SearchLocation();
                uint64_t v167 = *(int *)(v282 + 32);
                uint64_t v168 = (char *)v8 + v167;
                int v169 = (char *)v9 + v167;
                uint64_t v170 = type metadata accessor for Location();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v169, 1, v170))
                {
                  uint64_t v171 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v168, 0, 1, v170);
                }
                uint64_t v255 = *(int *)(v282 + 36);
                uint64_t v256 = (char *)v8 + v255;
                uint64_t v257 = (char *)v9 + v255;
                *(_OWORD *)uint64_t v256 = *(_OWORD *)v257;
                v256[16] = v257[16];
                swift_storeEnumTagMultiPayload();
                break;
              default:
                goto LABEL_143;
            }
            goto LABEL_188;
          case 4u:
            uint64_t v111 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v174 = type metadata accessor for Location();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 32))(v8, v9, v174);
                goto LABEL_152;
              case 3u:
                uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(v8, v9, v173);
LABEL_152:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v8, v9, *(void *)(*(void *)(v111 - 8) + 64));
                break;
            }
            goto LABEL_188;
          case 5u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            *((unsigned char *)v8 + 16) = *((unsigned char *)v9 + 16);
            *((unsigned char *)v8 + 17) = *((unsigned char *)v9 + 17);
            *((unsigned char *)v8 + 18) = *((unsigned char *)v9 + 18);
            uint64_t v112 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            uint64_t v113 = (char *)v8 + v112;
            uint64_t v114 = (char *)v9 + v112;
            uint64_t v115 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
            goto LABEL_188;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
            goto LABEL_195;
        }
      case 7u:
        uint64_t v12 = type metadata accessor for ModalViewAction();
        if (swift_getEnumCaseMultiPayload()) {
          goto LABEL_36;
        }
        uint64_t v35 = type metadata accessor for LocationPreviewViewAction();
        if (swift_getEnumCaseMultiPayload() == 1) {
          goto LABEL_29;
        }
        goto LABEL_105;
      case 8u:
        uint64_t v12 = type metadata accessor for LocationViewAction();
        int v39 = swift_getEnumCaseMultiPayload();
        if (v39 == 2)
        {
          uint64_t v77 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 32))(v8, v9, v77);
          uint64_t v78 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          uint64_t v79 = (char *)v8 + v78;
          uint64_t v80 = (char *)v9 + v78;
          uint64_t v81 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
          uint64_t v82 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          uint64_t v83 = (char *)v8 + v82;
          uint64_t v84 = (char *)v9 + v82;
          long long v85 = *((_OWORD *)v84 + 1);
          *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
          *((_OWORD *)v83 + 1) = v85;
          v83[32] = v84[32];
        }
        else if (v39 == 1)
        {
          uint64_t v86 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v87 = type metadata accessor for URL();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v87 - 8) + 32))(v8, v9, v87);
              uint64_t v88 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)v8 + *(int *)(v88 + 48)) = *((unsigned char *)v9 + *(int *)(v88 + 48));
              goto LABEL_133;
            case 1u:
              uint64_t v151 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 32))(v8, v9, v151);
              goto LABEL_133;
            case 2u:
              uint64_t v152 = type metadata accessor for DetailCondition();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v152 - 8) + 32))(v8, v9, v152);
              uint64_t v153 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)v8 + *(int *)(v153 + 48)) = *((unsigned char *)v9 + *(int *)(v153 + 48));
              goto LABEL_133;
            case 4u:
              *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
              uint64_t v154 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v155 = (char *)v8 + v154;
              uint64_t v156 = (char *)v9 + v154;
              uint64_t v157 = type metadata accessor for Location();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
LABEL_133:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v8, v9, *(void *)(*(void *)(v86 - 8) + 64));
              break;
          }
          uint64_t v158 = sub_10017DF08(&qword_100E66458);
          uint64_t v159 = *(int *)(v158 + 48);
          uint64_t v160 = (char *)v8 + v159;
          uint64_t v161 = (char *)v9 + v159;
          long long v162 = *((_OWORD *)v161 + 1);
          *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
          *((_OWORD *)v160 + 1) = v162;
          v160[32] = v161[32];
          uint64_t v163 = *(int *)(v158 + 64);
          uint64_t v118 = (char *)v8 + v163;
          uint64_t v119 = (char *)v9 + v163;
          uint64_t v120 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
          {
            uint64_t v164 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v118, v119, *(void *)(*(void *)(v164 - 8) + 64));
          }
          else
          {
LABEL_136:
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v118, v119, v120);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
          }
        }
        else
        {
          if (v39) {
            goto LABEL_36;
          }
LABEL_40:
          uint64_t v40 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 32))(v8, v9, v40);
        }
        goto LABEL_194;
      case 9u:
        uint64_t v41 = type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 4u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v275 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v42 = v275[12];
            uint64_t v43 = (char *)v8 + v42;
            uint64_t v44 = (char *)v9 + v42;
            *(_OWORD *)((char *)v8 + v42) = *(_OWORD *)((char *)v9 + v42);
            uint64_t v280 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v45 = v280[5];
            uint64_t v46 = &v43[v45];
            uint64_t v47 = &v44[v45];
            uint64_t v48 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
            {
              uint64_t v49 = sub_10017DF08(&qword_100E63730);
              memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
            }
            uint64_t v128 = v280[6];
            uint64_t v129 = &v43[v128];
            uint64_t v130 = &v44[v128];
            uint64_t v131 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
            uint64_t v132 = v280[7];
            uint64_t v133 = &v43[v132];
            uint64_t v134 = &v44[v132];
            uint64_t v135 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, v135))
            {
              uint64_t v136 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v133, v134, *(void *)(*(void *)(v136 - 8) + 64));
            }
            else
            {
              uint64_t v137 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v133, v134, v137);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v133, 0, 1, v135);
            }
            uint64_t v138 = v280[8];
            uint64_t v139 = &v43[v138];
            uint64_t v140 = &v44[v138];
            uint64_t v141 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v142 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v139, v140, v142);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
            }
            uint64_t v143 = v280[9];
            uint64_t v144 = &v43[v143];
            long long v145 = &v44[v143];
            uint64_t v146 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
            {
              uint64_t v147 = sub_10017DF08(&qword_100E63740);
              memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
            }
            else
            {
              uint64_t v148 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v148))
              {
                uint64_t v149 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v144, v145, *(void *)(*(void *)(v149 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v144, v145, v148);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v148);
              }
              uint64_t v175 = *(int *)(v146 + 20);
              uint64_t v176 = &v144[v175];
              uint64_t v177 = &v145[v175];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v148))
              {
                uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v176, v177, v148);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v148);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v146);
            }
            uint64_t v179 = v275[16];
            uint64_t v180 = (char *)v8 + v179;
            uint64_t v181 = (char *)v9 + v179;
            uint64_t v182 = type metadata accessor for UUID();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
            uint64_t v183 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v180[*(int *)(v183 + 20)] = *(void *)&v181[*(int *)(v183 + 20)];
            uint64_t v276 = (int *)v183;
            uint64_t v184 = *(int *)(v183 + 24);
            uint64_t v283 = v180;
            id v185 = &v180[v184];
            uint64_t v278 = v181;
            uint64_t v186 = &v181[v184];
            long long v187 = *(_OWORD *)&v181[v184 + 16];
            *(_OWORD *)id v185 = *(_OWORD *)&v181[v184];
            *((_OWORD *)v185 + 1) = v187;
            *((_OWORD *)v185 + 2) = *(_OWORD *)&v181[v184 + 32];
            uint64_t v188 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v189 = *(int *)(v188 + 28);
            __dst = &v185[v189];
            uint64_t v190 = &v186[v189];
            uint64_t v191 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v191))
            {
              uint64_t v192 = sub_10017DF08(&qword_100E63750);
              memcpy(__dst, v190, *(void *)(*(void *)(v192 - 8) + 64));
            }
            else
            {
              *(_OWORD *)__dst = *(_OWORD *)v190;
              uint64_t v193 = *(int *)(v191 + 20);
              uint64_t v271 = (void *)v188;
              uint64_t v194 = &__dst[v193];
              uint64_t v195 = &v190[v193];
              uint64_t v196 = type metadata accessor for TemperatureScaleConfiguration();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v194, v195, v196);
              uint64_t v197 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v194[v197[5]] = *(void *)&v195[v197[5]];
              *(void *)&v194[v197[6]] = *(void *)&v195[v197[6]];
              *(void *)&v194[v197[7]] = *(void *)&v195[v197[7]];
              *(_OWORD *)&v194[v197[8]] = *(_OWORD *)&v195[v197[8]];
              v194[v197[9]] = v195[v197[9]];
              uint64_t v188 = (uint64_t)v271;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v191);
            }
            *(_OWORD *)&v185[*(int *)(v188 + 32)] = *(_OWORD *)&v186[*(int *)(v188 + 32)];
            uint64_t v198 = v276[7];
            uint64_t v199 = &v283[v198];
            uint64_t v200 = &v278[v198];
            *(void *)&v283[v198] = *(void *)&v278[v198];
            uint64_t v201 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            uint64_t v202 = &v199[v201];
            uint64_t v203 = &v200[v201];
            uint64_t v204 = type metadata accessor for WeatherDescription();
            uint64_t v268 = v204;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v204))
            {
              uint64_t v205 = sub_10017DF08(&qword_100E63758);
              memcpy(v202, v203, *(void *)(*(void *)(v205 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 32))(v202, v203, v204);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v204);
            }
            uint64_t v206 = v276[8];
            uint64_t v207 = &v283[v206];
            uint64_t v208 = &v278[v206];
            long long v209 = *(_OWORD *)&v278[v206 + 16];
            *(_OWORD *)uint64_t v207 = *(_OWORD *)&v278[v206];
            *((_OWORD *)v207 + 1) = v209;
            long long v210 = *(_OWORD *)&v278[v206 + 48];
            *((_OWORD *)v207 + 2) = *(_OWORD *)&v278[v206 + 32];
            *((_OWORD *)v207 + 3) = v210;
            uint64_t v211 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            uint64_t v212 = &v207[v211];
            id v213 = &v208[v211];
            uint64_t v269 = type metadata accessor for Date();
            uint64_t v267 = *(void (**)(char *, char *))(*(void *)(v269 - 8) + 32);
            v267(v212, v213);
            uint64_t v214 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v215 = *(int *)(v214 + 20);
            uint64_t v272 = &v212[v215];
            uint64_t v216 = &v213[v215];
            uint64_t v217 = type metadata accessor for Elevation();
            uint64_t v270 = v217;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v217))
            {
              uint64_t v218 = sub_10017DF08(&qword_100E63760);
              memcpy(v272, v216, *(void *)(*(void *)(v218 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 32))(v272, v216, v217);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v272, 0, 1, v217);
            }
            uint64_t v219 = *(int *)(v214 + 24);
            uint64_t v220 = &v212[v219];
            uint64_t v221 = &v213[v219];
            uint64_t v222 = type metadata accessor for BackgroundMoonData();
            uint64_t v273 = (void *)v222;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v222))
            {
              uint64_t v223 = sub_10017DF08(&qword_100E63768);
              memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 32))(v220, v221, v222);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v222);
            }
            memcpy(&v283[v276[9]], &v278[v276[9]], 0x70uLL);
            uint64_t v224 = v276[10];
            uint64_t v225 = &v283[v224];
            uint64_t v226 = &v278[v224];
            (*(void (**)(char *, char *))(*(void *)(v268 - 8) + 32))(&v283[v224], &v278[v224]);
            uint64_t v227 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
            *(_OWORD *)&v225[*(int *)(v227 + 20)] = *(_OWORD *)&v226[*(int *)(v227 + 20)];
            uint64_t v228 = v276[11];
            uint64_t v229 = &v283[v228];
            uint64_t v230 = &v278[v228];
            long long v231 = *((_OWORD *)v230 + 1);
            *(_OWORD *)uint64_t v229 = *(_OWORD *)v230;
            *((_OWORD *)v229 + 1) = v231;
            *((_OWORD *)v229 + 2) = *((_OWORD *)v230 + 2);
            uint64_t v232 = v276[12];
            uint64_t v233 = &v283[v232];
            uint64_t v234 = &v278[v232];
            uint64_t v235 = type metadata accessor for PressureTrend();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v233, v234, v235);
            uint64_t v236 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            *(_OWORD *)&v233[v236[5]] = *(_OWORD *)&v234[v236[5]];
            *(_OWORD *)&v233[v236[6]] = *(_OWORD *)&v234[v236[6]];
            *(_OWORD *)&v233[v236[7]] = *(_OWORD *)&v234[v236[7]];
            *(void *)&v233[v236[8]] = *(void *)&v234[v236[8]];
            *(_OWORD *)&v233[v236[9]] = *(_OWORD *)&v234[v236[9]];
            memcpy(&v283[v276[13]], &v278[v276[13]], 0xE8uLL);
            uint64_t v237 = v276[14];
            uint64_t v238 = &v283[v237];
            uint64_t v239 = &v278[v237];
            ((void (*)(char *, char *, uint64_t))v267)(&v283[v237], &v278[v237], v269);
            uint64_t v240 = *(int *)(v214 + 20);
            uint64_t v241 = &v238[v240];
            uint64_t v242 = &v239[v240];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v239[v240], 1, v270))
            {
              uint64_t v243 = sub_10017DF08(&qword_100E63760);
              memcpy(v241, v242, *(void *)(*(void *)(v243 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v241, v242, v270);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v241, 0, 1, v270);
            }
            uint64_t v244 = *(int *)(v214 + 24);
            uint64_t v245 = &v238[v244];
            uint64_t v246 = &v239[v244];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v246, 1, (uint64_t)v273))
            {
              uint64_t v247 = sub_10017DF08(&qword_100E63768);
              memcpy(v245, v246, *(void *)(*(void *)(v247 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(*(v273 - 1) + 32))(v245, v246, v273);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v245, 0, 1, (uint64_t)v273);
            }
            memcpy(&v283[v276[15]], &v278[v276[15]], 0x70uLL);
            uint64_t v248 = v275[20];
            uint64_t v97 = (char *)v8 + v248;
            uint64_t v98 = (char *)v9 + v248;
            uint64_t v99 = type metadata accessor for NewsDataModel();
            if (!swift_getEnumCaseMultiPayload()) {
              goto LABEL_179;
            }
            goto LABEL_178;
          case 5u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v96 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            uint64_t v97 = (char *)v8 + v96;
            uint64_t v98 = (char *)v9 + v96;
            uint64_t v99 = type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload())
            {
LABEL_178:
              memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
LABEL_179:
              uint64_t v249 = type metadata accessor for News();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 32))(v97, v98, v249);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_180;
          case 6u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v100 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            uint64_t v101 = (char *)v8 + v100;
            uint64_t v102 = (char *)v9 + v100;
            uint64_t v103 = type metadata accessor for AvailableDataSets();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
            goto LABEL_180;
          case 8u:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v104 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            uint64_t v105 = (char *)v8 + v104;
            uint64_t v106 = (char *)v9 + v104;
            uint64_t v107 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v105, v106, v107);
LABEL_180:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v41 - 8) + 64));
            break;
        }
        goto LABEL_195;
      case 0xAu:
        uint64_t v12 = type metadata accessor for DebugAction();
        int v50 = swift_getEnumCaseMultiPayload();
        if (v50 == 1) {
          goto LABEL_40;
        }
        if (v50) {
          goto LABEL_36;
        }
        uint64_t v51 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v51))
        {
          uint64_t v52 = sub_10017DF08(&qword_100E63A50);
          memcpy(v8, v9, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 32))(v8, v9, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v51);
        }
        uint64_t v116 = sub_10017DF08(&qword_100E6F648);
        *(_OWORD *)((char *)v8 + *(int *)(v116 + 48)) = *(_OWORD *)((char *)v9 + *(int *)(v116 + 48));
        goto LABEL_194;
      case 0xBu:
        uint64_t v12 = type metadata accessor for ConditionDetailViewAction();
        int v21 = swift_getEnumCaseMultiPayload();
        switch(v21)
        {
          case 2:
            *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
            uint64_t v55 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v56 = v55[5];
            uint64_t v281 = (char *)v8 + v56;
            uint64_t v277 = (char *)v9 + v56;
            uint64_t v57 = type metadata accessor for Date();
            uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32);
            v58(v281, v277, v57);
            v58((char *)v8 + v55[6], (char *)v9 + v55[6], v57);
            v58((char *)v8 + v55[7], (char *)v9 + v55[7], v57);
            *(void *)((char *)v8 + v55[8]) = *(void *)((char *)v9 + v55[8]);
            uint64_t v59 = v55[9];
            uint64_t v60 = (char *)v8 + v59;
            uint64_t v61 = (char *)v9 + v59;
            v60[8] = v61[8];
            *(void *)uint64_t v60 = *(void *)v61;
            goto LABEL_194;
          case 1:
            uint64_t v62 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(v8, v9, v62);
            goto LABEL_194;
          case 0:
LABEL_14:
            uint64_t v22 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v8, v9, v22);
            goto LABEL_194;
        }
LABEL_36:
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_195;
      case 0xDu:
        uint64_t v12 = type metadata accessor for MoonDetailViewAction();
        int v23 = swift_getEnumCaseMultiPayload();
        if (v23 == 1) {
          goto LABEL_14;
        }
        if (v23) {
          goto LABEL_36;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v24 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 32))(v8, v9, v24);
        swift_storeEnumTagMultiPayload();
        goto LABEL_194;
      case 0xEu:
        uint64_t v12 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_36;
        }
        *uint64_t v8 = *v9;
        uint64_t v25 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v26 = v25[5];
        uint64_t v27 = (char *)v8 + v26;
        uint64_t v28 = (char *)v9 + v26;
        uint64_t v29 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
        *(void *)((char *)v8 + v25[6]) = *(void *)((char *)v9 + v25[6]);
        *(void *)((char *)v8 + v25[7]) = *(void *)((char *)v9 + v25[7]);
        swift_storeEnumTagMultiPayload();
        goto LABEL_195;
      case 0x11u:
        uint64_t v30 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v31 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 32))(v8, v9, v31);
            goto LABEL_82;
          case 2u:
            uint64_t v89 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v89 - 8) + 32))(v8, v9, v89);
            goto LABEL_82;
          case 3u:
            *uint64_t v8 = *v9;
            uint64_t v90 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v91 = *(int *)(v90 + 48);
            uint64_t v92 = (char *)v8 + v91;
            uint64_t v93 = (char *)v9 + v91;
            uint64_t v94 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
            *((unsigned char *)v8 + *(int *)(v90 + 64)) = *((unsigned char *)v9 + *(int *)(v90 + 64));
            goto LABEL_82;
          case 4u:
            uint64_t v95 = type metadata accessor for WeatherCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 32))(v8, v9, v95);
LABEL_82:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v30 - 8) + 64));
            break;
        }
        goto LABEL_195;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  uint64_t v261 = *(int *)(a3 + 28);
  uint64_t v262 = (void *)(a1 + v261);
  uint64_t v263 = (uint64_t *)(a2 + v261);
  uint64_t v265 = *v263;
  uint64_t v264 = v263[1];
  *uint64_t v262 = v265;
  v262[1] = v264;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100378930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100378944);
}

uint64_t sub_100378944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 16));
  }
  uint64_t v7 = type metadata accessor for MainAction();
  uint64_t v8 = a1 + *(int *)(a3 + 24);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_1003789C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003789D4);
}

uint64_t sub_1003789D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MainAction();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100378A54()
{
  uint64_t result = type metadata accessor for MainAction();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for HumidityComponentViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CollisionVFXOptions(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScrubberAndTextView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option.ID()
{
}

uint64_t destroy for LocationComponentInputHeaderView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationComponentInputHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocationComponentInputHeaderView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocationComponentInputHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for LocationComponentHeaderViewModel.Input()
{
}

void type metadata accessor for LocationComponentHeaderViewModel.PinningOnly()
{
}

uint64_t sub_100378EFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100378F60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100379018(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

void *sub_100379138(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x79uLL);
}

uint64_t sub_100379140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t sub_1003791E8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 121))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100379228(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 121) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LocationComponentHeaderViewModel.Prominent()
{
}

uint64_t sub_100379294()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003792E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100379378(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t sub_100379458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t sub_1003794E0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 89))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100379520(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LocationComponentHeaderViewModel.Large()
{
}

uint64_t sub_100379584()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003795C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100379628(void *a1, void *a2)
{
  sub_10017CAB0(a1, a2);
  *(void *)(v3 + 8) = *(void *)(v4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = *(void *)(v2 + 16);
  *(void *)(v3 + 24) = *(void *)(v2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + 32) = *(unsigned char *)(v2 + 32);
  *(void *)(v3 + 40) = *(void *)(v2 + 40);
  *(void *)(v3 + 48) = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1003796B4()
{
  sub_1001097B4();
  uint64_t v3 = v2[1];
  *(void *)uint64_t v1 = *v2;
  *(void *)(v1 + 8) = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v0 + 24);
  *(void *)(v1 + 16) = *(void *)(v0 + 16);
  *(void *)(v1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 32) = *(unsigned char *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 48);
  *(void *)(v1 + 40) = *(void *)(v0 + 40);
  *(void *)(v1 + 48) = v5;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_100379714@<X0>(long long *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  v18._object = (void *)0x8000000100C9CCD0;
  sub_10017F38C();
  v6._uint64_t countAndFlagsBits = 0x612074726F706552;
  v6._object = (void *)0xEF6575737349206ELL;
  v18._uint64_t countAndFlagsBits = 0xD000000000000036;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v5, v6, v18);

  *(Swift::String *)(a2 + 56) = v9;
  id v10 = [v4 mainBundle];
  v19._object = (void *)0x8000000100C9CD30;
  sub_10017F38C();
  v11._uint64_t countAndFlagsBits = 0x7374696E55;
  v11._object = (void *)0xE500000000000000;
  v19._uint64_t countAndFlagsBits = 0xD000000000000036;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v10, v11, v19);

  *(Swift::String *)(a2 + 72) = v14;
  sub_10017DF08(&qword_100E64C08);
  sub_1001246C8(&qword_100E64C10, &qword_100E64C08);
  *(void *)a2 = ObservedObject.init(wrappedValue:)();
  *(void *)(a2 + 8) = v15;

  return sub_1001262E4(a1, a2 + 16);
}

uint64_t destroy for ListMenuView(uint64_t a1)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ListMenuView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  Swift::String_optional v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ListMenuView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ListMenuView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WindCategoryTableViewModel.Row(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WindCategoryTableViewModel.Row(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100379B64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100379B80()
{
  uint64_t result = sub_100379BA4();
  qword_100F513C0 = result;
  unk_100F513C8 = v1;
  return result;
}

uint64_t sub_100379BA4()
{
  uint64_t v0 = self;
  id v1 = [v0 celsius];
  unint64_t v2 = sub_100657008();

  if (!v2) {
    goto LABEL_5;
  }
  id v3 = [v0 fahrenheit];
  uint64_t v4 = sub_100657008();

  if (!v4)
  {

LABEL_5:
    uint64_t v6 = Image.init(systemName:)();
    Image.init(systemName:)();
    return v6;
  }
  long long v5 = v2;
  uint64_t v6 = Image.init(uiImage:)();
  Image.init(uiImage:)();

  return v6;
}

uint64_t sub_100379CA8@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.trailing.getter();
  a1[1] = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E6F6E8);
  return sub_100379CEC(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_100379CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v27[1] = a2;
  uint64_t v28 = sub_10017DF08(&qword_100E6F6F0);
  uint64_t v3 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  long long v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E6F6F8);
  __chkstk_darwin(v6);
  Swift::String_optional v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[0] = sub_10017DF08(&qword_100E6F700);
  uint64_t v9 = *(void *)(v27[0] - 8);
  __chkstk_darwin(v27[0]);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v12 = sub_10024E9C4();
  char v14 = v13;
  swift_release();

  if (v14)
  {
    sub_10037C148(a1, (uint64_t)__src);
    uint64_t v21 = swift_allocObject();
    memcpy((void *)(v21 + 16), __src, 0x58uLL);
    sub_10017DF08(&qword_100E6F740);
    sub_10037C1B4();
    Button.init(action:label:)();
    uint64_t v22 = v27[0];
    (*(void (**)(char *, char *, void))(v9 + 16))(v8, v11, v27[0]);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E6F708, &qword_100E6F700);
    uint64_t v23 = sub_10018C6DC(&qword_100E6F710);
    uint64_t v24 = sub_10018C6DC(&qword_100E6F718);
    unint64_t v25 = sub_10037C0A8();
    uint64_t v26 = sub_1001246C8(&qword_100E6F738, &qword_100E6F718);
    __src[0] = v23;
    __src[1] = v24;
    __src[2] = v25;
    __src[3] = v26;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  }
  else
  {
    sub_10037A150((uint64_t)v5);
    uint64_t v15 = v28;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v28);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E6F708, &qword_100E6F700);
    uint64_t v16 = sub_10018C6DC(&qword_100E6F710);
    uint64_t v17 = sub_10018C6DC(&qword_100E6F718);
    unint64_t v18 = sub_10037C0A8();
    uint64_t v19 = sub_1001246C8(&qword_100E6F738, &qword_100E6F718);
    __src[0] = v16;
    __src[1] = v17;
    __src[2] = v18;
    __src[3] = v19;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  }
}

uint64_t sub_10037A150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v16[1] = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E6F730);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6F710);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[12] = v2;
  v16[8] = v2;
  sub_10017DF08(&qword_100E6F750);
  sub_10017DF08(&qword_100E6F758);
  sub_10037C270();
  sub_1001246C8(&qword_100E6F780, &qword_100E6F758);
  Menu.init(content:label:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_1001246C8(&qword_100E6F728, &qword_100E6F730);
  View.accessibilityLabel(_:)();
  sub_100191924(v10, v12, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v16[4] = v2;
  sub_10017DF08(&qword_100E6F718);
  sub_10037C0A8();
  sub_1001246C8(&qword_100E6F738, &qword_100E6F718);
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  return sub_1000F3400((uint64_t)v9, &qword_100E6F710);
}

uint64_t sub_10037A45C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v57 = sub_10017DF08(&qword_100E6F798);
  uint64_t v61 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v58 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v44 - v5;
  uint64_t v55 = sub_10017DF08(&qword_100E6F7A0);
  uint64_t v52 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = sub_10017DF08(&qword_100E6F7A8);
  uint64_t v50 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v56 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v54 = (char *)&v44 - v13;
  __chkstk_darwin(v14);
  uint64_t v53 = (char *)&v44 - v15;
  __chkstk_darwin(v16);
  uint64_t v51 = (char *)&v44 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v44 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v44 - v22;
  sub_10037C148(a1, (uint64_t)__src);
  uint64_t v24 = swift_allocObject();
  memcpy((void *)(v24 + 16), __src, 0x58uLL);
  sub_10017DF08(&qword_100E6F7B0);
  sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
  uint64_t v48 = v23;
  Button.init(action:label:)();
  sub_10037C148(a1, (uint64_t)__src);
  uint64_t v25 = swift_allocObject();
  memcpy((void *)(v25 + 16), __src, 0x58uLL);
  uint64_t v47 = v20;
  Button.init(action:label:)();
  uint64_t v64 = a1;
  sub_10017DF08(&qword_100E6F7C0);
  sub_1001246C8(&qword_100E6F7C8, &qword_100E6F7C0);
  uint64_t v46 = v9;
  Section<>.init(content:)();
  uint64_t v63 = a1;
  sub_1001246C8(&qword_100E6F7D0, &qword_100E6F7A8);
  Section<>.init(content:)();
  sub_10037C148(a1, (uint64_t)__src);
  uint64_t v26 = swift_allocObject();
  memcpy((void *)(v26 + 16), __src, 0x58uLL);
  uint64_t v62 = a1;
  uint64_t v27 = v51;
  Button.init(action:label:)();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v29 = v53;
  v28(v53, v23, v10);
  uint64_t v30 = v54;
  v28(v54, v20, v10);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  uint64_t v31 = v9;
  uint64_t v32 = v55;
  v45(v60, v31, v55);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  v33(v58, v59, v57);
  v28(v56, v27, v10);
  int v34 = v49;
  v28(v49, v29, v10);
  uint64_t v35 = (int *)sub_10017DF08(&qword_100E6F7D8);
  v28(&v34[v35[12]], v30, v10);
  v45(&v34[v35[16]], v60, v32);
  int v36 = v58;
  uint64_t v37 = v57;
  v33(&v34[v35[20]], v58, v57);
  uint64_t v38 = v56;
  v28(&v34[v35[24]], v56, v10);
  int v39 = *(void (**)(char *, uint64_t))(v50 + 8);
  v39(v51, v10);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
  v61 += 8;
  v40(v59, v37);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v42 = v55;
  v41(v46, v55);
  v39(v47, v10);
  v39(v48, v10);
  v39(v38, v10);
  v40(v36, v37);
  v41(v60, v42);
  v39(v54, v10);
  return ((uint64_t (*)(char *, uint64_t))v39)(v53, v10);
}

uint64_t sub_10037AC84@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6F7E0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v19 - v13;
  sub_10037AE84();
  sub_10037B008();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v15(v8, v14, v2);
  v15(v5, v11, v2);
  v15(a1, v8, v2);
  uint64_t v16 = sub_10017DF08(&qword_100E6F7E8);
  v15(&a1[*(int *)(v16 + 48)], v5, v2);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17(v11, v2);
  v17(v14, v2);
  v17(v5, v2);
  return ((uint64_t (*)(char *, uint64_t))v17)(v8, v2);
}

uint64_t sub_10037AE84()
{
  sub_10037C148(v0, (uint64_t)__src);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = v1;
  v2[3] = &protocol witness table for MainActor;
  memcpy(v2 + 4, __src, 0x58uLL);
  sub_10037C148(v0, (uint64_t)__src);
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_allocObject();
  long long v4[2] = v3;
  v4[3] = &protocol witness table for MainActor;
  memcpy(v4 + 4, __src, 0x58uLL);
  Binding.init(get:set:)();
  sub_10017DF08(&qword_100E6F7B0);
  sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
  return Toggle.init(isOn:label:)();
}

uint64_t sub_10037B008()
{
  sub_10037C148(v0, (uint64_t)__src);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = v1;
  v2[3] = &protocol witness table for MainActor;
  memcpy(v2 + 4, __src, 0x58uLL);
  sub_10037C148(v0, (uint64_t)__src);
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_allocObject();
  long long v4[2] = v3;
  v4[3] = &protocol witness table for MainActor;
  memcpy(v4 + 4, __src, 0x58uLL);
  Binding.init(get:set:)();
  sub_10017DF08(&qword_100E6F7B0);
  sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
  return Toggle.init(isOn:label:)();
}

uint64_t sub_10037B18C(uint64_t a1)
{
  sub_10037C148(a1, (uint64_t)__src);
  uint64_t v1 = swift_allocObject();
  memcpy((void *)(v1 + 16), __src, 0x58uLL);
  sub_10017DF08(&qword_100E6F7B0);
  sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
  return Button.init(action:label:)();
}

uint64_t sub_10037B26C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAADC0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Image.Scale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E6F770);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *uint64_t v5 = KeyPath;
  sub_1000F350C((uint64_t)v5, (uint64_t)v13 + *(int *)(v11 + 44), &qword_100EAADC0);
  *uint64_t v13 = v14;
  swift_retain();
  sub_1000F3400((uint64_t)v5, &qword_100EAADC0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
  sub_1000F350C((uint64_t)v13, a1, &qword_100E6F770);
  *(unsigned char *)(a1 + *(int *)(sub_10017DF08(&qword_100E6F750) + 36)) = 1;
  return sub_1000F3400((uint64_t)v13, &qword_100E6F770);
}

uint64_t sub_10037B4D8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_10017DF08(&qword_100E6F788);
  return sub_10037B528(a1 + *(int *)(v2 + 44));
}

uint64_t sub_10037B528@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v30 = sub_10017DF08(&qword_100EAADC0) - 8;
  __chkstk_darwin(v30);
  uint64_t v2 = (uint64_t *)((char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = type metadata accessor for Image.Scale();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6F770);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10017DF08(&qword_100E6F750);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v29 = (uint64_t)&v29 - v16;
  uint64_t v17 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Image.Scale.large(_:), v3);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v2 + *(int *)(v30 + 36), v6, v3);
  *uint64_t v2 = KeyPath;
  sub_1000F350C((uint64_t)v2, (uint64_t)v10 + *(int *)(v8 + 44), &qword_100EAADC0);
  *uint64_t v10 = v17;
  swift_retain();
  sub_1000F3400((uint64_t)v2, &qword_100EAADC0);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  sub_1000F350C((uint64_t)v10, (uint64_t)v14, &qword_100E6F770);
  v14[*(int *)(v12 + 44)] = 1;
  sub_1000F3400((uint64_t)v10, &qword_100E6F770);
  uint64_t v19 = v29;
  sub_10037C39C((uint64_t)v14, v29);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v20 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  LOBYTE(v12) = v25 & 1;
  sub_1000F350C(v19, (uint64_t)v14, &qword_100E6F750);
  uint64_t v26 = v31;
  sub_1000F350C((uint64_t)v14, v31, &qword_100E6F750);
  uint64_t v27 = v26 + *(int *)(sub_10017DF08(&qword_100E6F790) + 48);
  *(void *)uint64_t v27 = v20;
  *(void *)(v27 + 8) = v22;
  *(unsigned char *)(v27 + 16) = v12;
  *(void *)(v27 + 24) = v24;
  sub_100190CC4(v20, v22, v12);
  swift_bridgeObjectRetain();
  sub_1000F3400(v19, &qword_100E6F750);
  sub_100191924(v20, v22, v12);
  swift_bridgeObjectRelease();
  return sub_1000F3400((uint64_t)v14, &qword_100E6F750);
}

uint64_t sub_10037B8F8@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t sub_10037B974()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10037B9C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10037BCE0(a1);
}

uint64_t sub_10037B9F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10037BA28()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10037BA7C@<X0>(uint64_t a1@<X8>)
{
  return sub_10037BCE0(a1);
}

uint64_t sub_10037BAAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10037BAEC()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10037BB40@<X0>(uint64_t a1@<X8>)
{
  return sub_10037BCE0(a1);
}

uint64_t sub_10037BB64@<X0>(void *a1@<X8>)
{
  return sub_10037BD5C(&qword_100F513C0, a1);
}

void sub_10037BB70(SEL *a1@<X3>, unsigned char *a2@<X8>)
{
  sub_1001433AC();
  swift_retain();
  id v4 = sub_10024E9C4();
  swift_release();
  id v5 = [self *a1];
  char v6 = static NSObject.== infix(_:_:)();

  *a2 = v6 & 1;
}

uint64_t sub_10037BC14()
{
  return swift_release();
}

uint64_t sub_10037BC64()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10037BCB8@<X0>(uint64_t a1@<X8>)
{
  return sub_10037BCE0(a1);
}

uint64_t sub_10037BCE0@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10037BD50@<X0>(void *a1@<X8>)
{
  return sub_10037BD5C(&qword_100F513C8, a1);
}

uint64_t sub_10037BD5C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  if (qword_100E62298 != -1) {
    swift_once();
  }
  *a2 = *a1;

  return swift_retain();
}

uint64_t sub_10037BDC8()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10037BE3C@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10037BEA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10037BEE8()
{
  return swift_release();
}

uint64_t sub_10037BF38(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_10037BF84()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10037BFF8@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10037C064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

unint64_t sub_10037C0A8()
{
  unint64_t result = qword_100E6F720;
  if (!qword_100E6F720)
  {
    sub_10018C6DC(&qword_100E6F710);
    sub_1001246C8(&qword_100E6F728, &qword_100E6F730);
    sub_100227408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F720);
  }
  return result;
}

uint64_t sub_10037C148(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10037C184()
{
  return sub_10037BEE8();
}

unint64_t sub_10037C1B4()
{
  unint64_t result = qword_100E6F748;
  if (!qword_100E6F748)
  {
    sub_10018C6DC(&qword_100E6F740);
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F748);
  }
  return result;
}

uint64_t sub_10037C230()
{
  return sub_10037BF38(*(void *)(v0 + 16), sub_10058C448);
}

uint64_t sub_10037C260@<X0>(char *a1@<X8>)
{
  return sub_10037A45C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10037C268@<X0>(uint64_t a1@<X8>)
{
  return sub_10037B26C(a1);
}

unint64_t sub_10037C270()
{
  unint64_t result = qword_100E6F760;
  if (!qword_100E6F760)
  {
    sub_10018C6DC(&qword_100E6F750);
    sub_10037C2EC();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F760);
  }
  return result;
}

unint64_t sub_10037C2EC()
{
  unint64_t result = qword_100E6F768;
  if (!qword_100E6F768)
  {
    sub_10018C6DC(&qword_100E6F770);
    sub_1001246C8(&qword_100E6F778, &qword_100EAADC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F768);
  }
  return result;
}

uint64_t sub_10037C38C@<X0>(uint64_t a1@<X8>)
{
  return sub_10037B4D8(a1);
}

uint64_t sub_10037C39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6F750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037C408()
{
  return sub_10037BEE8();
}

uint64_t sub_10037C43C()
{
  return sub_10037BEE8();
}

uint64_t sub_10037C46C@<X0>(char *a1@<X8>)
{
  return sub_10037AC84(a1);
}

uint64_t sub_10037C474()
{
  return sub_10037B18C(*(void *)(v0 + 16));
}

uint64_t sub_10037C480()
{
  return sub_10037BEE8();
}

uint64_t sub_10037C4B0()
{
  return sub_10037BDC8();
}

uint64_t sub_10037C4B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10037BE3C(a1);
}

uint64_t sub_10037C4C0()
{
  return sub_10037BF38(*(void *)(v0 + 16), sub_10058C6A8);
}

uint64_t sub_10037C4F4()
{
  return sub_10037BEE8();
}

uint64_t sub_10037C524()
{
  return sub_10037BF84();
}

uint64_t sub_10037C52C@<X0>(uint64_t a1@<X8>)
{
  return sub_10037BFF8(a1);
}

uint64_t sub_10037C534()
{
  return sub_10037BF38(*(void *)(v0 + 16), sub_10058C6A0);
}

void sub_10037C568(unsigned char *a1@<X8>)
{
}

uint64_t sub_10037C594()
{
  return sub_10037BC14();
}

uint64_t sub_10037C5C8()
{
  return sub_10037BF38(*(void *)(v0 + 16), sub_10058C46C);
}

void sub_10037C5FC(unsigned char *a1@<X8>)
{
}

uint64_t sub_10037C628()
{
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10037C680()
{
  return sub_10037BC14();
}

uint64_t sub_10037C6B4()
{
  return sub_10037BF38(*(void *)(v0 + 16), sub_10058C460);
}

uint64_t sub_10037C6E4()
{
  return sub_10037BF38(*(void *)(v0 + 16), sub_10058C458);
}

uint64_t sub_10037C714()
{
  return sub_10037BF38(*(void *)(v0 + 16), sub_10058C450);
}

uint64_t sub_10037C744()
{
  return sub_1001246C8(&qword_100E6F7F0, &qword_100E6F7F8);
}

uint64_t sub_10037C780(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x4472656874616577 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10037C820()
{
  return 0x4472656874616577;
}

uint64_t sub_10037C840(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6F818);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1001B1E64(a1, a1[3]);
  sub_10037CC5C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for WeatherData(0);
  sub_10037CCA8(&qword_100E6F820);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_10037C970@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v20 = v6 - v5;
  uint64_t v7 = sub_10017DF08(&qword_100E6F800);
  sub_100179C0C();
  uint64_t v19 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for MoonComponent();
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_1001B1E64(a1, a1[3]);
  sub_10037CC5C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_10037CCA8(&qword_100E6F810);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v7);
    sub_100178C2C(v20, v16, (void (*)(void))type metadata accessor for WeatherData);
    sub_100178C2C(v16, a2, (void (*)(void))type metadata accessor for MoonComponent);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
}

uint64_t sub_10037CB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10037C780(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10037CBB0(uint64_t a1)
{
  unint64_t v2 = sub_10037CC5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10037CBEC(uint64_t a1)
{
  unint64_t v2 = sub_10037CC5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10037CC28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10037C970(a1, a2);
}

uint64_t sub_10037CC40(void *a1)
{
  return sub_10037C840(a1);
}

unint64_t sub_10037CC5C()
{
  unint64_t result = qword_100E6F808;
  if (!qword_100E6F808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F808);
  }
  return result;
}

uint64_t sub_10037CCA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WeatherData(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MoonComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10037CD88);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonComponent.CodingKeys()
{
  return &type metadata for MoonComponent.CodingKeys;
}

uint64_t *sub_10037CDC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for WeatherData(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = (int *)v4;
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = *(int *)(v4 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E63730);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v14 = v6[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v6[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v20, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v24 = v6[8];
  char v25 = (uint64_t *)((char *)a1 + v24);
  uint64_t v26 = (uint64_t *)((char *)a2 + v24);
  uint64_t v27 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v25, v26, v30);
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v29 = v26[1];
    *char v25 = *v26;
    v25[1] = v29;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_15:
  uint64_t v31 = v6[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E63740);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    uint64_t v38 = *(int *)(v34 + 20);
    int v39 = &v32[v38];
    uint64_t v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  return a1;
}

void *sub_10037D260(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Locale();
  int v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v8);
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v8 - 8);
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v8);
LABEL_6:
    uint64_t v12 = sub_10017DF08(&qword_100E63730);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v6, v7, v8);
LABEL_7:
  uint64_t v13 = v4[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v4[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_10017DF08(&qword_100E63738);
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      uint64_t v23 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v19, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_10037DA34((uint64_t)v18);
LABEL_12:
    uint64_t v24 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v42 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 24))(v18, v19, v42);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v25 = v4[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  sub_1001BBF1C((uint64_t)a1 + v25, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v28 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v26, v27, v30);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v26 = *v27;
    v26[1] = v27[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_20:
  uint64_t v31 = v4[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      uint64_t v37 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v37))
      {
        uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v32, v33, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v37);
      }
      uint64_t v46 = *(int *)(v34 + 20);
      uint64_t v47 = &v32[v46];
      uint64_t v48 = &v33[v46];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v37))
      {
        uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v47, v48, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v37);
      }
      uint64_t v50 = (uint64_t)v32;
      uint64_t v51 = v34;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v36)
  {
    sub_1001BBF1C((uint64_t)v32, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v39 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v40 = v32;
    uint64_t v41 = v33;
    goto LABEL_27;
  }
  uint64_t v43 = type metadata accessor for Date();
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v43);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v43);
  if (!v44)
  {
    uint64_t v53 = *(void *)(v43 - 8);
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v32, v33, v43);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v43);
    goto LABEL_42;
  }
  if (v45)
  {
LABEL_42:
    uint64_t v54 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v32, v33, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v32, v33, v43);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v43);
LABEL_43:
  uint64_t v55 = *(int *)(v34 + 20);
  uint64_t v56 = (uint64_t)&v32[v55];
  uint64_t v57 = (uint64_t)&v33[v55];
  int v58 = _s7Weather24LocationCompositionStateOwet_0(v56, 1, v43);
  int v59 = _s7Weather24LocationCompositionStateOwet_0(v57, 1, v43);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v56, v57, v43);
      uint64_t v50 = v56;
      uint64_t v51 = v43;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, v51);
      return a1;
    }
  }
  else
  {
    uint64_t v60 = *(void *)(v43 - 8);
    if (!v59)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 24))(v56, v57, v43);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v56, v43);
  }
  size_t v39 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v40 = (void *)v56;
  uint64_t v41 = (const void *)v57;
LABEL_27:
  memcpy(v40, v41, v39);
  return a1;
}

uint64_t sub_10037DA34(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63738);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_10037DA94(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_10017DF08(&qword_100E63730);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
  }
  uint64_t v10 = v4[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v4[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v15, v16, v19);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  uint64_t v20 = v4[8];
  int v21 = (char *)a1 + v20;
  int v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  uint64_t v25 = v4[9];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E63740);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v30))
    {
      uint64_t v31 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v30);
    }
    uint64_t v32 = *(int *)(v28 + 20);
    uint64_t v33 = &v26[v32];
    uint64_t v34 = &v27[v32];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v30))
    {
      uint64_t v35 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v33, v34, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v30);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  return a1;
}

void *sub_10037DEB4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E63730);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = v5[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = v5[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_10017DF08(&qword_100E63738);
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v21);
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      uint64_t v24 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v19, v20, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_10037DA34((uint64_t)v19);
LABEL_12:
    uint64_t v25 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v42 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 40))(v19, v20, v42);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v26 = v5[8];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    sub_1001BBF1C((uint64_t)a1 + v26, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
  }
  uint64_t v31 = v5[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      uint64_t v37 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v37))
      {
        uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v32, v33, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v37);
      }
      uint64_t v46 = *(int *)(v34 + 20);
      uint64_t v47 = &v32[v46];
      uint64_t v48 = &v33[v46];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v37))
      {
        uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v47, v48, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v37);
      }
      uint64_t v50 = (uint64_t)v32;
      uint64_t v51 = v34;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v36)
  {
    sub_1001BBF1C((uint64_t)v32, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v39 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v40 = v32;
    uint64_t v41 = v33;
    goto LABEL_24;
  }
  uint64_t v43 = type metadata accessor for Date();
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v43);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v43);
  if (!v44)
  {
    uint64_t v53 = *(void *)(v43 - 8);
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 40))(v32, v33, v43);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v43);
    goto LABEL_39;
  }
  if (v45)
  {
LABEL_39:
    uint64_t v54 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v32, v33, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v32, v33, v43);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v43);
LABEL_40:
  uint64_t v55 = *(int *)(v34 + 20);
  uint64_t v56 = (uint64_t)&v32[v55];
  uint64_t v57 = (uint64_t)&v33[v55];
  int v58 = _s7Weather24LocationCompositionStateOwet_0(v56, 1, v43);
  int v59 = _s7Weather24LocationCompositionStateOwet_0(v57, 1, v43);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v56, v57, v43);
      uint64_t v50 = v56;
      uint64_t v51 = v43;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, v51);
      return a1;
    }
  }
  else
  {
    uint64_t v60 = *(void *)(v43 - 8);
    if (!v59)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 40))(v56, v57, v43);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v56, v43);
  }
  size_t v39 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v40 = (void *)v56;
  uint64_t v41 = (const void *)v57;
LABEL_24:
  memcpy(v40, v41, v39);
  return a1;
}

uint64_t sub_10037E650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10037E664);
}

uint64_t sub_10037E664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherData(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10037E6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10037E6C0);
}

uint64_t sub_10037E6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherData(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

unint64_t sub_10037E710()
{
  unint64_t result = qword_100E6F8B8;
  if (!qword_100E6F8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F8B8);
  }
  return result;
}

unint64_t sub_10037E760()
{
  unint64_t result = qword_100E6F8C0;
  if (!qword_100E6F8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F8C0);
  }
  return result;
}

unint64_t sub_10037E7B0()
{
  unint64_t result = qword_100E6F8C8;
  if (!qword_100E6F8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F8C8);
  }
  return result;
}

void *DiagnosticFileProvider.files()()
{
  uint64_t v0 = sub_10037E83C();
  sub_10037EAF0();
  sub_10037FB08();
  return v0;
}

void *sub_10037E83C()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v6 = &v18[-v5];
  type metadata accessor for AppGroup();
  static AppGroup.weather.getter();
  AppGroup.containerURL.getter();
  swift_release();
  URL.appendingPathComponent(_:)();
  uint64_t v7 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  id v8 = [self defaultManager];
  URL.path.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = 0;
  id v10 = [v8 contentsOfDirectoryAtPath:v9 error:&v19];

  id v11 = v19;
  if (v10)
  {
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v13 = v11;

    __chkstk_darwin(v14);
    *(void *)&v18[-16] = v6;
    uint64_t v15 = sub_100A964E0((uint64_t)sub_10038025C, (uint64_t)&v18[-32], v12);
    v7(v6, v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = v19;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    v7(v6, v0);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v15;
}

void *sub_10037EAF0()
{
  uint64_t v0 = type metadata accessor for Database.Location();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v73 = (char *)&v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v72 - v4;
  __chkstk_darwin(v6);
  id v8 = (char *)&v72 - v7;
  __chkstk_darwin(v9);
  id v11 = (char *)&v72 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v72 - v13;
  sub_10017DF08(&qword_100E63D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C349B0;
  type metadata accessor for NotificationStore();
  static NotificationStore.location.getter();
  uint64_t v16 = Database.Location.path.getter();
  uint64_t v18 = v17;
  id v19 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19(v14, v0);
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 40) = v18;
  type metadata accessor for GeocodeStore();
  static GeocodeStore.location.getter();
  uint64_t v20 = Database.Location.path.getter();
  uint64_t v22 = v21;
  v19(v11, v0);
  *(void *)(inited + 48) = v20;
  *(void *)(inited + 56) = v22;
  type metadata accessor for WeatherDataStore();
  static WeatherDataStore.location.getter();
  uint64_t v23 = Database.Location.path.getter();
  uint64_t v25 = v24;
  v19(v8, v0);
  *(void *)(inited + 64) = v23;
  *(void *)(inited + 72) = v25;
  type metadata accessor for AQIScaleStore();
  *(void *)(inited + 80) = static AQIScaleStore.locationPath.getter();
  *(void *)(inited + 88) = v26;
  type metadata accessor for LocationMetadataStore();
  static LocationMetadataStore.location.getter();
  uint64_t v27 = Database.Location.path.getter();
  uint64_t v29 = v28;
  v19(v5, v0);
  *(void *)(inited + 96) = v27;
  *(void *)(inited + 104) = v29;
  type metadata accessor for WeatherStatisticsDataStore();
  uint64_t v30 = v73;
  static WeatherStatisticsDataStore.location.getter();
  uint64_t v31 = Database.Location.path.getter();
  uint64_t v33 = v32;
  v19(v30, v0);
  *(void *)(inited + 112) = v31;
  *(void *)(inited + 120) = v33;
  uint64_t v34 = *(void *)(inited + 40);
  if (v34)
  {
    uint64_t v35 = *(void *)(inited + 32);
    swift_bridgeObjectRetain();
    sub_10012B78C();
    uint64_t v37 = v36;
    unint64_t v38 = v36[2];
    if (v38 >= v36[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v37 = v61;
    }
    v37[2] = v38 + 1;
    size_t v39 = &v37[2 * v38];
    v39[4] = v35;
    v39[5] = v34;
  }
  else
  {
    uint64_t v37 = _swiftEmptyArrayStorage;
  }
  uint64_t v40 = *(void *)(inited + 56);
  if (v40)
  {
    uint64_t v41 = *(void *)(inited + 48);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10012B78C();
      uint64_t v37 = v62;
    }
    unint64_t v42 = v37[2];
    if (v42 >= v37[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v37 = v63;
    }
    v37[2] = v42 + 1;
    uint64_t v43 = &v37[2 * v42];
    v43[4] = v41;
    v43[5] = v40;
  }
  uint64_t v44 = *(void *)(inited + 72);
  if (v44)
  {
    uint64_t v45 = *(void *)(inited + 64);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10012B78C();
      uint64_t v37 = v64;
    }
    unint64_t v46 = v37[2];
    if (v46 >= v37[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v37 = v65;
    }
    v37[2] = v46 + 1;
    uint64_t v47 = &v37[2 * v46];
    v47[4] = v45;
    v47[5] = v44;
  }
  uint64_t v48 = *(void *)(inited + 88);
  if (v48)
  {
    uint64_t v49 = *(void *)(inited + 80);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10012B78C();
      uint64_t v37 = v66;
    }
    unint64_t v50 = v37[2];
    if (v50 >= v37[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v37 = v67;
    }
    v37[2] = v50 + 1;
    uint64_t v51 = &v37[2 * v50];
    v51[4] = v49;
    v51[5] = v48;
  }
  uint64_t v52 = *(void *)(inited + 104);
  if (v52)
  {
    uint64_t v53 = *(void *)(inited + 96);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10012B78C();
      uint64_t v37 = v68;
    }
    unint64_t v54 = v37[2];
    if (v54 >= v37[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v37 = v69;
    }
    v37[2] = v54 + 1;
    uint64_t v55 = &v37[2 * v54];
    v55[4] = v53;
    v55[5] = v52;
  }
  uint64_t v56 = *(void *)(inited + 120);
  if (v56)
  {
    uint64_t v57 = *(void *)(inited + 112);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10012B78C();
      uint64_t v37 = v70;
    }
    unint64_t v58 = v37[2];
    if (v58 >= v37[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v37 = v71;
    }
    v37[2] = v58 + 1;
    int v59 = &v37[2 * v58];
    unsigned char v59[4] = v57;
    v59[5] = v56;
  }
  swift_setDeallocating();
  sub_1006BB148();
  return v37;
}

uint64_t DiagnosticFileProvider.exportDirectory()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v61 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v60 = (char *)&v54 - v13;
  __chkstk_darwin(v14);
  uint64_t v15 = sub_10037E83C();
  sub_10037EAF0();
  uint64_t v62 = v15;
  sub_10037FB08();
  uint64_t v55 = v62;
  uint64_t v16 = NSTemporaryDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(fileURLWithPath:isDirectory:)();
  swift_bridgeObjectRelease();
  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v17 = v6;
  uint64_t v18 = v54;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v17, v1);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(void))(v9 + 8);
  uint64_t v19 = v9 + 8;
  uint64_t v20 = (uint64_t (*)(void))v21;
  sub_1001649A8();
  v21();
  id v59 = self;
  id v22 = [v59 defaultManager];
  URL._bridgeToObjectiveC()(v23);
  uint64_t v25 = v24;
  uint64_t v62 = 0;
  unsigned int v26 = [v22 createDirectoryAtURL:v24 withIntermediateDirectories:1 attributes:0 error:&v62];

  if (v26)
  {
    unint64_t v58 = (void (*)(void))v20;
    uint64_t v27 = v55[2];
    if (v27)
    {
      uint64_t v28 = v55;
      uint64_t v29 = v62;
      uint64_t v30 = v28 + 5;
      long long v56 = xmmword_100C251B0;
      do
      {
        swift_bridgeObjectRetain();
        URL.init(fileURLWithPath:)();
        swift_bridgeObjectRelease();
        URL.lastPathComponent.getter();
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        id v31 = [v59 defaultManager];
        URL._bridgeToObjectiveC()(v32);
        uint64_t v34 = v33;
        URL._bridgeToObjectiveC()(v35);
        uint64_t v37 = v36;
        uint64_t v62 = 0;
        unsigned int v38 = [v31 copyItemAtURL:v34 toURL:v36 error:&v62];

        if (v38)
        {
          size_t v39 = v62;
        }
        else
        {
          uint64_t v40 = v62;
          uint64_t v41 = (void *)_convertNSErrorToError(_:)();

          swift_willThrow();
          LODWORD(v57) = static os_log_type_t.error.getter();
          sub_10017DF08(&qword_100E64020);
          uint64_t v42 = swift_allocObject();
          *(_OWORD *)(v42 + 16) = v56;
          uint64_t v62 = v41;
          swift_errorRetain();
          sub_10017DF08(&qword_100E77F30);
          uint64_t v43 = String.init<A>(describing:)();
          uint64_t v44 = v19;
          uint64_t v45 = v7;
          uint64_t v46 = v18;
          uint64_t v48 = v47;
          *(void *)(v42 + 56) = &type metadata for String;
          *(void *)(v42 + 64) = sub_10012B7C0();
          *(void *)(v42 + 32) = v43;
          *(void *)(v42 + 40) = v48;
          sub_1000DBCCC();
          uint64_t v49 = (void *)static OS_os_log.default.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();

          uint64_t v18 = v46;
          uint64_t v7 = v45;
          uint64_t v19 = v44;
          swift_errorRelease();
          uint64_t v57 = 0;
        }
        v30 += 2;
        unint64_t v50 = v58;
        sub_1001649A8();
        v50();
        sub_1001649A8();
        v50();
        --v27;
      }
      while (v27);
    }
    else
    {
      uint64_t v53 = v62;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = v62;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_1001649A8();
    return v20();
  }
}

id LocalSearchCompleterManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id DiagnosticFileProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

uint64_t sub_10037F7C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.appendingPathComponent(_:)();
  uint64_t v6 = URL.path.getter();
  uint64_t v8 = v7;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  a1[1] = v8;
  return result;
}

uint64_t sub_10037F8C0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (__OFADD__(v4, v3))
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v5 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v1 = v5;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
    {
      uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
      if (v4 + v3 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_12;
      }
    }
  }
  if (v5 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *id v1 = v8;
    uint64_t v7 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_12:
    uint64_t result = sub_10037FF48(v7 + 8 * *(void *)(v7 + 16) + 32, (*(void *)(v7 + 24) >> 1) - *(void *)(v7 + 16), a1);
    if (v10 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v10 >= 1)
  {
    uint64_t v11 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v12 = __OFADD__(v11, v10);
    uint64_t v13 = v11 + v10;
    if (v12)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v13;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

void sub_10037FA88(uint64_t a1)
{
}

void sub_10037FAC8(uint64_t a1)
{
}

void sub_10037FB08()
{
  sub_10019E918();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001A05DC() || v4 > *(void *)(v2 + 24) >> 1)
  {
    sub_10017A054();
    sub_10012B78C();
    uint64_t v2 = v6;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_10017CAE4();
  if (v7 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_10017FB14();
  sub_1001EA7B4();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *id v1 = v2;
    return;
  }
  sub_1001A1D6C();
  if (!v5)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t type metadata accessor for DiagnosticFileProvider()
{
  return self;
}

void sub_10037FBD8(uint64_t a1)
{
}

void sub_10037FC18(uint64_t a1)
{
}

void sub_10037FC58(uint64_t a1)
{
}

void sub_10037FC98(uint64_t a1)
{
}

void sub_10037FCD8(uint64_t a1)
{
}

void sub_10037FD04(uint64_t a1, uint64_t (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001A05DC() || v7 + v5 > *(void *)(v6 + 24) >> 1)
  {
    sub_10017A054();
    uint64_t v6 = a2();
  }
  if (!*(void *)(v3 + 16))
  {
    if (!v5) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_10017CAE4();
  if (v10 != v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_10017FB14();
  a3(v12);
  if (!v5)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v4 = v6;
    return;
  }
  sub_1001A1D6C();
  if (!v11)
  {
    *(void *)(v6 + 16) = v13;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_10037FDD8(uint64_t a1)
{
}

void sub_10037FE18(uint64_t a1)
{
}

void sub_10037FE58()
{
  sub_10019E918();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001A05DC() || v4 > *(void *)(v2 + 24) >> 1)
  {
    sub_10017A054();
    sub_1007EA230(v6, v7, v8, v9);
    uint64_t v2 = v10;
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  sub_10017CAE4();
  if (v11 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_10017FB14();
  sub_1007EBF84();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *id v1 = v2;
    return;
  }
  sub_1001A1D6C();
  if (!v5)
  {
    *(void *)(v2 + 16) = v12;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_10037FF08(uint64_t a1)
{
}

uint64_t sub_10037FF48(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_100380188();
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_10017DF08(&qword_100E6F900);
            uint64_t v10 = sub_1003800D8(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void *, void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_1007EB6FC((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void (*sub_1003800D8(void *a1, unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1003801DC(v6, a2, a3);
  return sub_100380140;
}

void sub_100380140(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

unint64_t sub_100380188()
{
  unint64_t result = qword_100E6F908;
  if (!qword_100E6F908)
  {
    sub_10018C6DC(&qword_100E6F900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F908);
  }
  return result;
}

void (*sub_1003801DC(void *a1, unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_100076004(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  return destroy for ConfiguredUnitState;
}

uint64_t sub_10038025C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10037F7C4(a1);
}

void *sub_10038027C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    char v11 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, (uint64_t)v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6B670);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v9 = *v10;
      uint64_t v14 = v11[5];
      uint64_t v15 = (char *)v9 + v14;
      uint64_t v16 = (char *)v10 + v14;
      uint64_t v17 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *(void *)((char *)v9 + v11[6]) = *(void *)((char *)v10 + v11[6]);
      *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, (uint64_t)v11);
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    long long v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    v19[32] = v20[32];
  }
  return a1;
}

uint64_t sub_100380448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  return result;
}

uint64_t sub_100380524(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, (uint64_t)v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6B670);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v12 = v10[5];
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
    *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(unsigned char *)(v17 + 32) = *(unsigned char *)(v18 + 32);
  return a1;
}

uint64_t sub_1003806A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, (uint64_t)v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, (uint64_t)v10);
  if (!v11)
  {
    if (!v12)
    {
      *uint64_t v8 = *v9;
      uint64_t v24 = v10[5];
      uint64_t v25 = (char *)v8 + v24;
      unsigned int v26 = (char *)v9 + v24;
      uint64_t v27 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
      *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
      *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
      goto LABEL_7;
    }
    sub_100381EEC((uint64_t)v8, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E6B670);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v8 = *v9;
  uint64_t v13 = v10[5];
  uint64_t v14 = (char *)v8 + v13;
  uint64_t v15 = (char *)v9 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
  *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (long long *)(a2 + v18);
  long long v21 = *v20;
  long long v22 = v20[1];
  *(unsigned char *)(v19 + 32) = *((unsigned char *)v20 + 32);
  *(_OWORD *)uint64_t v19 = v21;
  *(_OWORD *)(v19 + 16) = v22;
  return a1;
}

uint64_t sub_1003808C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, (uint64_t)v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6B670);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v8 = *v9;
    uint64_t v12 = v10[5];
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
    *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(unsigned char *)(v17 + 32) = *(unsigned char *)(v18 + 32);
  return a1;
}

uint64_t sub_100380A40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, (uint64_t)v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, (uint64_t)v10);
  if (!v11)
  {
    if (!v12)
    {
      *uint64_t v8 = *v9;
      uint64_t v23 = v10[5];
      uint64_t v24 = (char *)v8 + v23;
      uint64_t v25 = (char *)v9 + v23;
      uint64_t v26 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
      *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
      goto LABEL_7;
    }
    sub_100381EEC((uint64_t)v8, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E6B670);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v8 = *v9;
  uint64_t v13 = v10[5];
  uint64_t v14 = (char *)v8 + v13;
  uint64_t v15 = (char *)v9 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
  *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, (uint64_t)v10);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(unsigned char *)(v19 + 32) = *(unsigned char *)(v20 + 32);
  return a1;
}

uint64_t sub_100380C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100380C74);
}

uint64_t sub_100380C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
      if (v10 >= 2) {
        return v10 - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = sub_10017DF08(&qword_100E6B670);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100380D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100380D34);
}

void sub_100380D34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
      return;
    }
    uint64_t v10 = sub_10017DF08(&qword_100E6B670);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100380DE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100C9CF50 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100C9CF70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6552656372756F73 && a2 == 0xEA00000000007463)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_100380F94(char a1)
{
  unint64_t result = 0x6E6F697461636F6CLL;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6552656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100381024(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = (double *)(v7 - v6);
  uint64_t v9 = sub_10017DF08(&qword_100E6F9B8);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E6B670);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (double *)((char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v37 - v19;
  __chkstk_darwin(v18);
  long long v22 = (char *)&v37 - v21;
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v23 = type metadata accessor for AveragesDetailViewState();
  if (*(unsigned __int8 *)(a1 + *(int *)(v23 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v23 + 20))) {
    return 0;
  }
  uint64_t v24 = v23;
  sub_1002F8E04(a1 + *(int *)(v23 + 24), (uint64_t)v22);
  sub_1002F8E04(a2 + *(int *)(v24 + 24), (uint64_t)v20);
  uint64_t v25 = v13 + *(int *)(v9 + 48);
  sub_1002F8E04((uint64_t)v22, v13);
  sub_1002F8E04((uint64_t)v20, v25);
  sub_1001630A0(v13);
  if (v30)
  {
    sub_1001781AC((uint64_t)v20, &qword_100E6B670);
    sub_1001781AC((uint64_t)v22, &qword_100E6B670);
    sub_1001630A0(v25);
    if (v30)
    {
      sub_1001781AC(v13, &qword_100E6B670);
      goto LABEL_8;
    }
    goto LABEL_14;
  }
  sub_1002F8E04(v13, (uint64_t)v17);
  sub_1001630A0(v25);
  if (v30)
  {
    sub_1001781AC((uint64_t)v20, &qword_100E6B670);
    sub_1001781AC((uint64_t)v22, &qword_100E6B670);
    sub_100381EEC((uint64_t)v17, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
LABEL_14:
    id v31 = &qword_100E6F9B8;
    uint64_t v32 = v13;
LABEL_21:
    sub_1001781AC(v32, v31);
    return 0;
  }
  sub_100381D24(v25, (uint64_t)v8);
  if (*v17 != *v8
    || (static Date.== infix(_:_:)() & 1) == 0
    || *(double *)((char *)v17 + *(int *)(v4 + 24)) != *(double *)((char *)v8 + *(int *)(v4 + 24)))
  {
    sub_100381EEC((uint64_t)v8, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
    sub_1001781AC((uint64_t)v20, &qword_100E6B670);
    sub_1001781AC((uint64_t)v22, &qword_100E6B670);
    sub_100381EEC((uint64_t)v17, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
    uint64_t v32 = v13;
    id v31 = &qword_100E6B670;
    goto LABEL_21;
  }
  uint64_t v33 = *(int *)(v4 + 28);
  double v34 = *(double *)((char *)v17 + v33);
  double v35 = *(double *)((char *)v8 + v33);
  sub_100381EEC((uint64_t)v8, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
  sub_1001781AC((uint64_t)v20, &qword_100E6B670);
  sub_1001781AC((uint64_t)v22, &qword_100E6B670);
  sub_100381EEC((uint64_t)v17, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
  sub_1001781AC(v13, &qword_100E6B670);
  if (v34 != v35) {
    return 0;
  }
LABEL_8:
  uint64_t v26 = *(int *)(v24 + 28);
  uint64_t v27 = (CGRect *)(a1 + v26);
  char v28 = *(unsigned char *)(a1 + v26 + 32);
  uint64_t v29 = a2 + v26;
  if (v28) {
    return (*(unsigned char *)(v29 + 32) & 1) != 0;
  }
  return (*(unsigned char *)(v29 + 32) & 1) == 0 && CGRectEqualToRect(*v27, *(CGRect *)v29);
}

uint64_t sub_1003813E8(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6F9F0);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_100381D88();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Location();
  sub_100381FE4(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
  sub_10017E294();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for AveragesDetailViewState();
    sub_100381F44();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for DetailHeroChartLollipopPosition(0);
    sub_100381FE4(&qword_100E6FA08, (void (*)(uint64_t))type metadata accessor for DetailHeroChartLollipopPosition);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    type metadata accessor for CGRect(0);
    sub_100381FE4(&qword_100E6FA10, type metadata accessor for CGRect);
    sub_10017E294();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100381670@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6B670);
  __chkstk_darwin(v3 - 8);
  sub_100109314();
  uint64_t v22 = v4;
  uint64_t v5 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v21 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v23 = v8;
  sub_10017DF08(&qword_100E6F9C0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for AveragesDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v16 = v13 - v12 + *(int *)(v15 + 28);
  *(_OWORD *)uint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(unsigned char *)(v16 + 32) = 1;
  sub_1001B1E64(a1, a1[3]);
  sub_100381D88();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v24) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_100381FE4(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v14, v23, v5);
  sub_100381DD4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(unsigned char *)(v14 + *(int *)(v10 + 20)) = 0;
  type metadata accessor for DetailHeroChartLollipopPosition(0);
  LOBYTE(v25) = 2;
  sub_100381FE4(&qword_100E6F9E0, (void (*)(uint64_t))type metadata accessor for DetailHeroChartLollipopPosition);
  sub_1001A05F4();
  sub_100381E20(v22, v14 + *(int *)(v10 + 24));
  type metadata accessor for CGRect(0);
  sub_100381FE4(&qword_100E6F9E8, type metadata accessor for CGRect);
  sub_1001A05F4();
  uint64_t v17 = sub_10017CAF8();
  v18(v17);
  *(_OWORD *)uint64_t v16 = v25;
  *(_OWORD *)(v16 + 16) = v26;
  *(unsigned char *)(v16 + 32) = v27;
  sub_100381E88(v14, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100381EEC(v14, (void (*)(void))type metadata accessor for AveragesDetailViewState);
}

unint64_t sub_100381AAC()
{
  return sub_100380F94(*v0);
}

uint64_t sub_100381AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100380DE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100381ADC(uint64_t a1)
{
  unint64_t v2 = sub_100381D88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100381B18(uint64_t a1)
{
  unint64_t v2 = sub_100381D88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100381B58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100381670(a1, a2);
}

uint64_t sub_100381B70(void *a1)
{
  return sub_1003813E8(a1);
}

void sub_100381B88()
{
}

uint64_t sub_100381BA0()
{
  return sub_1008950FC();
}

uint64_t sub_100381BB8@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E6FA18);
  a1[4] = sub_100381F90();
  sub_100170694(a1);
  type metadata accessor for AveragesDetailViewState();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100381C58@<X0>(uint64_t *a1@<X8>)
{
  return sub_100381BB8(a1);
}

uint64_t sub_100381C70()
{
  sub_100381FE4(&qword_100E6FA28, (void (*)(uint64_t))type metadata accessor for AveragesDetailViewState);

  return ShortDescribable.description.getter();
}

uint64_t sub_100381CDC()
{
  return sub_100381FE4(&qword_100E6F9B0, (void (*)(uint64_t))type metadata accessor for AveragesDetailViewState);
}

uint64_t sub_100381D24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100381D88()
{
  unint64_t result = qword_100E6F9C8;
  if (!qword_100E6F9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F9C8);
  }
  return result;
}

unint64_t sub_100381DD4()
{
  unint64_t result = qword_100E6F9D8;
  if (!qword_100E6F9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F9D8);
  }
  return result;
}

uint64_t sub_100381E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100381E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AveragesDetailViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100381EEC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_100381F44()
{
  unint64_t result = qword_100E6FA00;
  if (!qword_100E6FA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6FA00);
  }
  return result;
}

unint64_t sub_100381F90()
{
  unint64_t result = qword_100E6FA20;
  if (!qword_100E6FA20)
  {
    sub_10018C6DC(&qword_100E6FA18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6FA20);
  }
  return result;
}

uint64_t sub_100381FE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AveragesDetailViewState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003820F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesDetailViewState.CodingKeys()
{
  return &type metadata for AveragesDetailViewState.CodingKeys;
}

unint64_t sub_100382134()
{
  unint64_t result = qword_100E6FA30;
  if (!qword_100E6FA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6FA30);
  }
  return result;
}

unint64_t sub_100382184()
{
  unint64_t result = qword_100E6FA38;
  if (!qword_100E6FA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6FA38);
  }
  return result;
}

unint64_t sub_1003821D4()
{
  unint64_t result = qword_100E6FA40;
  if (!qword_100E6FA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6FA40);
  }
  return result;
}

uint64_t *sub_100382220(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_10038235C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = a1 + *(int *)(type metadata accessor for DetailHeroChartLollipopPosition(0) + 20);
    uint64_t v4 = type metadata accessor for Date();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  return result;
}

void *sub_1003823E8(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    uint64_t v7 = v6[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1003824E0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003825E8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1003825E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AveragesDetailViewAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100382644(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    uint64_t v7 = v6[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10038273C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003825E8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100382844@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AveragesDetailViewAction();
  __chkstk_darwin(v4);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10017DF08(&qword_100E6FAF8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100382B6C(v2, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    char v12 = *v6;
    sub_10017DF08(&qword_100E635E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = 0x7365676172657661;
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 72) = &type metadata for AveragesKind;
    *(unsigned char *)(inited + 48) = v12;
    Dictionary.init(dictionaryLiteral:)();
LABEL_6:
    ShortDescription.init(name:_:)();
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    Dictionary.init(dictionaryLiteral:)();
    goto LABEL_6;
  }
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  sub_1003825E8((uint64_t)v6);
LABEL_7:
  a1[3] = v7;
  a1[4] = sub_100382BD0();
  uint64_t v14 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, unsigned char *, uint64_t))(v8 + 32))(v14, v10, v7);
}

uint64_t sub_100382AE0()
{
  sub_100382C24(qword_100E6FB08);

  return ShortDescribable.description.getter();
}

uint64_t sub_100382B38()
{
  return sub_100382C24(&qword_100E6FAF0);
}

uint64_t sub_100382B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AveragesDetailViewAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100382BD0()
{
  unint64_t result = qword_100E6FB00;
  if (!qword_100E6FB00)
  {
    sub_10018C6DC(&qword_100E6FAF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6FB00);
  }
  return result;
}

uint64_t sub_100382C24(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AveragesDetailViewAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for NhpContentView()
{
  return sub_100109098();
}

uint64_t sub_100382C80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100382CC4@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100EB2CF8;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100EB30C8;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100EB2EE0;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100EB2928;
  }
  else {
    uint64_t v21 = &qword_100EB2B10;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  size_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100383190@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  uint64_t v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  uint64_t v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  uint64_t v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  uint64_t v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_nextHourPrecipitation, (uint64_t)v17);
  v104(v17, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_airQuality, (uint64_t)v17);
  v104(v17, *a3, a3[1], a3[2], a3[3]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 24), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  uint64_t v69 = v90;
  v65((uint64_t)v90, v101, a4);
  uint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  uint64_t v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  int v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_100383BFC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  int v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100384644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100382CC4(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100384670()
{
  return sub_1003846A0((uint64_t (*)(void, void, void, void, void, void, void))sub_100383190);
}

uint64_t sub_100384688()
{
  return sub_1003846A0((uint64_t (*)(void, void, void, void, void, void, void))sub_100383BFC);
}

uint64_t sub_1003846A0(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

ValueMetadata *type metadata accessor for Delay()
{
  return &type metadata for Delay;
}

uint64_t sub_1003846E4()
{
  sub_1000A9DE8();
  v0[11] = v1;
  v0[12] = type metadata accessor for MainActor();
  v0[13] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[14] = v3;
  v0[15] = v2;
  return _swift_task_switch(sub_10038477C, v3, v2);
}

uint64_t sub_10038477C()
{
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[11];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    v0[10] = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Performing Delay instruction: %f", v5, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v6 = static MainActor.shared.getter();
  v0[16] = v6;
  if (v6)
  {
    swift_getObjectType();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  return _swift_task_switch(sub_10038490C, v7, v9);
}

uint64_t sub_10038490C()
{
  sub_1000A9DE8();
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1003849A0;
  uint64_t v1 = swift_continuation_init();
  sub_100384B1C(v1);
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_1003849A0()
{
  sub_1000A9DE8();
  uint64_t v1 = *v0;
  swift_release();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_100384ABC, v3, v2);
}

uint64_t sub_100384ABC()
{
  sub_1000A9DE8();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100384B1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v19 - v13;
  sub_1001AB3E0();
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v11, v8);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  aBlock[4] = sub_100352FC8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E12B10;
  uint64_t v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  v20(v14, v8);
  return swift_release();
}

uint64_t sub_100384E80()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100352D7C;
  return sub_1003846E4();
}

uint64_t sub_100384F14()
{
  return swift_deallocObject();
}

uint64_t sub_100384F24@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ConditionDetailChartDataInputFactory();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = type metadata accessor for ConditionDetailChartDataInputFactoryWithCache();
  uint64_t v5 = (void *)swift_allocObject();
  v5[5] = v2;
  v5[6] = &off_100E3B228;
  long long v5[2] = v3;
  sub_10017DF08(&qword_100E6FC70);
  swift_allocObject();
  swift_retain();
  v5[7] = Cache.init()();
  uint64_t result = swift_release();
  a1[3] = v4;
  a1[4] = &off_100E3B238;
  *a1 = v5;
  return result;
}

uint64_t sub_100384FE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MidpointInterpolator();
  __chkstk_darwin(v4 - 8);
  MidpointInterpolator.init()();
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = type metadata accessor for CurrentMarkerValueCalculator();
    a2[4] = (uint64_t)&protocol witness table for CurrentMarkerValueCalculator;
    sub_100170694(a2);
    return CurrentMarkerValueCalculator.init(midpointInterpolator:detailChartDataPointValueCalculator:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003850D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC40);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v5 = type metadata accessor for DetailChartViewModelFactory();
    swift_allocObject();
    uint64_t result = (uint64_t)sub_100305308(&v10, &v8, &v6);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_100E10C50;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100385208()
{
  sub_10017DF08(&qword_100E6FC50);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_10038526C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for LollipopDataFactory;
    a2[4] = (uint64_t)&off_100E31D40;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_1001262E4(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100385310()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100385348@<X0>(uint64_t *a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)(a1 + 2));
  swift_retain();
  sub_10017DF08(&qword_100E64CA8);
  sub_1003853D4();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for NotificationSettingsModule()
{
  return self;
}

unint64_t sub_1003853D4()
{
  unint64_t result = qword_100E64CB0;
  if (!qword_100E64CB0)
  {
    sub_10018C6DC(&qword_100E64CA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64CB0);
  }
  return result;
}

uint64_t type metadata accessor for DefaultTrendNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_100385440()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100385484@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100EA6E58;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100EA7228;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100EA7040;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100EA6A88;
  }
  else {
    uint64_t v21 = &qword_100EA6C70;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100385950@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  uint64_t v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  uint64_t v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  uint64_t v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  uint64_t v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_airQuality, (uint64_t)v17);
  v104(v17, *a3, a3[1], a3[2], a3[3]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_newsArticle, (uint64_t)v17);
  v104(v17, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 24), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  uint64_t v69 = v90;
  v65((uint64_t)v90, v101, a4);
  uint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  uint64_t v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  int v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_1003863BC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  int v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100386E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100385484(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100386E30()
{
  return sub_100386E60((uint64_t (*)(void, void, void, void, void, void, void))sub_100385950);
}

uint64_t sub_100386E48()
{
  return sub_100386E60((uint64_t (*)(void, void, void, void, void, void, void))sub_1003863BC);
}

uint64_t sub_100386E60(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100386E94(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E64E80);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = a1 + OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v11, v6, &qword_100E64E80);
  if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7) == 1)
  {
    sub_1001781AC(v6, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C34ED0;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v13 = (__n128 *)swift_allocObject();
    sub_100183900(v13, (__n128)xmmword_100C251B0);
    sub_1001EC074();
    *(void *)(v12 + 32) = sub_1001F24CC((uint64_t)v13);
    *(void *)(v12 + 40) = v14;
    *(void *)(v12 + 48) = v15;
    uint64_t v16 = (__n128 *)swift_allocObject();
    sub_100179F48(v16);
    sub_1001EC074();
    *(void *)(v12 + 56) = sub_1001F24CC((uint64_t)v16);
    *(void *)(v12 + 64) = v17;
    *(void *)(v12 + 72) = v18;
    uint64_t v19 = (__n128 *)swift_allocObject();
    sub_100183900(v19, (__n128)xmmword_100C25ED0);
    sub_1001EC074();
    sub_1001EC074();
    *(void *)(v12 + 80) = sub_1001F24CC((uint64_t)v19);
    *(void *)(v12 + 88) = v20;
    *(void *)(v12 + 96) = v21;
    uint64_t v22 = (__n128 *)swift_allocObject();
    sub_100179F48(v22);
    sub_1001A0618();
    sub_1001D1890();
    *(void *)(v12 + 104) = sub_1001F24CC((uint64_t)v22);
    *(void *)(v12 + 112) = v23;
    *(void *)(v12 + 120) = v24;
    uint64_t v25 = (__n128 *)swift_allocObject();
    sub_100179F48(v25);
    sub_1001A0618();
    sub_1001D1890();
    *(void *)(v12 + 128) = sub_1001F24CC((uint64_t)v25);
    *(void *)(v12 + 136) = v26;
    *(void *)(v12 + 144) = v27;
    uint64_t v28 = (__n128 *)swift_allocObject();
    sub_100179F48(v28);
    sub_1001A0618();
    sub_1001D1890();
    *(void *)(v12 + 152) = sub_1001F24CC((uint64_t)v28);
    *(void *)(v12 + 160) = v29;
    *(void *)(v12 + 168) = v30;
    uint64_t v31 = (__n128 *)swift_allocObject();
    sub_100179F48(v31);
    sub_1001EC074();
    sub_1001D1890();
    *(void *)(v12 + 176) = sub_1001F24CC((uint64_t)v31);
    *(void *)(v12 + 184) = v32;
    *(void *)(v12 + 192) = v33;
  }
  else
  {
    sub_100387C88();
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C34240;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v34 = (__n128 *)swift_allocObject();
    sub_100183900(v34, (__n128)xmmword_100C251B0);
    sub_1001EC074();
    *(void *)(v12 + 32) = sub_1001F24CC((uint64_t)v34);
    *(void *)(v12 + 40) = v35;
    *(void *)(v12 + 48) = v36;
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = v59;
    sub_1001EC074();
    *(void *)(v12 + 56) = sub_1001F24CC(v37);
    *(void *)(v12 + 64) = v38;
    *(void *)(v12 + 72) = v39;
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v59;
    sub_1001EC074();
    *(void *)(v12 + 80) = sub_1001F24CC(v40);
    *(void *)(v12 + 88) = v41;
    *(void *)(v12 + 96) = v42;
    uint64_t v43 = (__n128 *)swift_allocObject();
    sub_100183900(v43, (__n128)xmmword_100C25ED0);
    sub_1001EC074();
    sub_1001EC074();
    *(void *)(v12 + 104) = sub_1001F24CC((uint64_t)v43);
    *(void *)(v12 + 112) = v44;
    *(void *)(v12 + 120) = v45;
    uint64_t v46 = (__n128 *)swift_allocObject();
    sub_100179F48(v46);
    sub_10017E2A8();
    sub_1001EC074();
    *(void *)(v12 + 128) = sub_1001F24CC((uint64_t)v46);
    *(void *)(v12 + 136) = v47;
    *(void *)(v12 + 144) = v48;
    uint64_t v49 = (__n128 *)swift_allocObject();
    sub_100179F48(v49);
    sub_10017E2A8();
    sub_1001EC074();
    *(void *)(v12 + 152) = sub_1001F24CC((uint64_t)v49);
    *(void *)(v12 + 160) = v50;
    *(void *)(v12 + 168) = v51;
    uint64_t v52 = (__n128 *)swift_allocObject();
    sub_100179F48(v52);
    sub_10017E2A8();
    sub_1001EC074();
    *(void *)(v12 + 176) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v12 + 184) = v53;
    *(void *)(v12 + 192) = v54;
    uint64_t v55 = (__n128 *)swift_allocObject();
    sub_100179F48(v55);
    sub_1001EC074();
    sub_1001EC074();
    *(void *)(v12 + 200) = sub_1001F24CC((uint64_t)v55);
    *(void *)(v12 + 208) = v56;
    *(void *)(v12 + 216) = v57;
    sub_1001F7574(v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v12;
}

void *sub_1003876AC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v103 = a3;
  uint64_t v4 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162EF8();
  uint64_t v101 = v6;
  sub_1001626D4();
  __chkstk_darwin(v7);
  uint64_t v100 = (char *)&v82 - v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v99 = (char *)&v82 - v10;
  uint64_t v11 = sub_10017DF08(&qword_100E64E80);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v82 - v19;
  uint64_t v21 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v98 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v97 = (uint64_t)&v82 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v95 = (char *)&v82 - v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v96 = (uint64_t)&v82 - v29;
  uint64_t v102 = v4;
  if (a1)
  {
    uint64_t v30 = v15;
    sub_10019E92C();
    uint64_t v40 = v31 + 38;
    uint64_t v41 = v31 + 39;
    uint64_t v42 = v31 + 40;
    uint64_t v43 = v31 + 45;
    uint64_t v44 = v31 + 46;
    uint64_t v45 = v31 + 47;
    uint64_t v46 = v31 + 48;
    uint64_t v47 = (char *)(v31 + 20);
  }
  else
  {
    sub_10019E92C();
    uint64_t v40 = v31 + 38;
    uint64_t v41 = v31 + 39;
    uint64_t v42 = v31 + 40;
    uint64_t v43 = v31 + 45;
    uint64_t v44 = v31 + 46;
    uint64_t v45 = v31 + 47;
    uint64_t v46 = v31 + 48;
    uint64_t v47 = (char *)(v31 + 20);
    uint64_t v30 = v15;
  }
  char v48 = *v47;
  uint64_t v49 = *v31;
  uint64_t v86 = *v32;
  uint64_t v85 = *v33;
  uint64_t v84 = *v34;
  uint64_t v50 = *v35;
  uint64_t v51 = *v36;
  uint64_t v52 = *v37;
  uint64_t v53 = *v38;
  uint64_t v54 = *v39;
  uint64_t v89 = *v40;
  uint64_t v90 = v54;
  uint64_t v55 = *v41;
  uint64_t v87 = *v42;
  uint64_t v88 = v55;
  uint64_t v56 = *v43;
  uint64_t v93 = *v44;
  uint64_t v94 = v56;
  uint64_t v57 = *v45;
  uint64_t v91 = *v46;
  uint64_t v92 = v57;
  uint64_t v58 = v103 + OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v58, v30, &qword_100E64E80);
  uint64_t v59 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v59) == 1)
  {
    sub_1001781AC(v30, &qword_100E64E80);
    uint64_t v60 = 1;
    uint64_t v61 = v102;
    uint64_t v62 = (uint64_t)v95;
  }
  else
  {
    uint64_t v83 = v53;
    sub_1001EC074();
    sub_1001F7574(v30, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_100387C88();
    if (v48)
    {
      sub_1001F7574((uint64_t)v20, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t v60 = 1;
      uint64_t v61 = v102;
      uint64_t v62 = (uint64_t)v95;
    }
    else
    {
      uint64_t v62 = (uint64_t)v95;
      sub_100387C88();
      uint64_t v60 = 0;
      uint64_t v61 = v102;
      uint64_t v63 = (void *)(v62 + *(int *)(v102 + 20));
      *uint64_t v63 = v50;
      v63[1] = v51;
      uint64_t v64 = v83;
      v63[2] = v52;
      v63[3] = v64;
    }
  }
  _s7Weather24LocationCompositionStateOwst_0(v62, v60, 1, v61);
  uint64_t v65 = v96;
  sub_10031F640(v62, v96);
  uint64_t v66 = v97;
  _s7Weather24LocationCompositionStateOwst_0(v97, 1, 1, v61);
  sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  uint64_t v67 = (uint64_t)v99;
  sub_1001EC074();
  uint64_t v68 = (void *)(v67 + *(int *)(v61 + 20));
  uint64_t v69 = v86;
  *uint64_t v68 = v49;
  v68[1] = v69;
  uint64_t v70 = v84;
  v68[2] = v85;
  v68[3] = v70;
  uint64_t v71 = v98;
  sub_10006DF38(v65, v98, &qword_100E6CCD8);
  sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v72 = (uint64_t)v100;
  sub_1001EC074();
  uint64_t v73 = (void *)(v72 + *(int *)(v61 + 20));
  uint64_t v74 = v89;
  *uint64_t v73 = v90;
  v73[1] = v74;
  uint64_t v75 = v87;
  v73[2] = v88;
  v73[3] = v75;
  sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v76 = v101;
  sub_1001EC074();
  uint64_t v77 = (void *)(v76 + *(int *)(v61 + 20));
  uint64_t v78 = v93;
  *uint64_t v77 = v94;
  v77[1] = v78;
  uint64_t v79 = v91;
  v77[2] = v92;
  v77[3] = v79;
  uint64_t v80 = sub_100AD6D18(v66, v67, v71, v72, v76);
  sub_1001781AC(v65, &qword_100E6CCD8);
  return v80;
}

uint64_t sub_100387C88()
{
  uint64_t v2 = sub_100189008();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_100387CDC(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  __chkstk_darwin(v4);
  uint64_t v17 = sub_10017FB48();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v2 + OBJC_IVAR____TtC7Weather21AppContinuationBridge_pendingOpenL2Descriptor;
  swift_beginAccess();
  sub_100389B84(a1, v10);
  swift_endAccess();
  sub_1001AB3E0();
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_100389BEC;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E12C00;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  uint64_t v13 = sub_100185A08();
  v14(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v17);
}

uint64_t sub_100387F28()
{
  return withTransaction<A>(_:_:)();
}

uint64_t sub_100387F7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(a1 + 16);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_retain();
  sub_1001AAF58((uint64_t)v4, (uint64_t)v7, v5);
  sub_100178110((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  sub_100158B1C((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_10038806C(uint64_t a1, uint64_t a2)
{
  uint64_t v154 = a2;
  uint64_t v151 = a1;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v138 = v5;
  uint64_t v139 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v136 = v6;
  sub_100129064();
  uint64_t v137 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v135 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v134 = v9;
  sub_10017DF08(&qword_100E70748);
  sub_100179C0C();
  uint64_t v144 = v11;
  uint64_t v145 = v10;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v143 = v12;
  uint64_t v13 = sub_10017DF08(&qword_100E70750);
  __chkstk_darwin(v13 - 8);
  sub_100109314();
  uint64_t v150 = v14;
  sub_100129064();
  uint64_t v149 = type metadata accessor for LocationViewAction();
  sub_100179C0C();
  uint64_t v130 = v15;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v131 = v18;
  uint64_t v132 = (char *)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v152 = (char *)&v123 - v19;
  sub_100129064();
  uint64_t v153 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v146 = v20;
  __chkstk_darwin(v21);
  sub_100125FF8();
  uint64_t v22 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v22 - 8);
  sub_100162EF8();
  uint64_t v142 = v23;
  sub_1001626D4();
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v123 - v26;
  __chkstk_darwin(v25);
  sub_100109770();
  uint64_t v155 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v123 - v30;
  uint64_t v32 = sub_10017DF08(&qword_100E66680);
  __chkstk_darwin(v32 - 8);
  sub_100162EF8();
  uint64_t v148 = v33;
  sub_1001626D4();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v123 - v35;
  uint64_t v37 = type metadata accessor for OpenL2Descriptor(0);
  sub_100162E4C();
  __chkstk_darwin(v38);
  sub_100162EF8();
  uint64_t v147 = v39;
  sub_1001626D4();
  __chkstk_darwin(v40);
  sub_100109770();
  uint64_t v141 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  sub_100109770();
  uint64_t v140 = v43;
  sub_1001626D4();
  __chkstk_darwin(v44);
  sub_100109770();
  uint64_t v46 = v45;
  sub_1001626D4();
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v123 - v48;
  uint64_t v133 = v2;
  uint64_t v50 = v2 + OBJC_IVAR____TtC7Weather21AppContinuationBridge_pendingOpenL2Descriptor;
  swift_beginAccess();
  sub_10006DF38(v50, (uint64_t)v36, &qword_100E66680);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37) == 1) {
    return sub_100178110((uint64_t)v36, &qword_100E66680);
  }
  uint64_t v127 = v50;
  sub_100389F00();
  sub_10006DF38((uint64_t)&v49[*(int *)(v37 + 24)], (uint64_t)v31, &qword_100E639E8);
  uint64_t v52 = type metadata accessor for Location();
  sub_1001630A0((uint64_t)v31);
  uint64_t v129 = v37;
  if (v76)
  {
    sub_100178110((uint64_t)v31, &qword_100E639E8);
    sub_100389F54();
    uint64_t v53 = v155;
    sub_10006DF38(v154, v155, &qword_100E639E8);
    sub_100178110(v53, &qword_100E639E8);
    sub_100158B1C((uint64_t)v46, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    goto LABEL_6;
  }
  Location.identifier.getter();
  uint64_t v72 = *(void *)(v52 - 8);
  uint64_t v73 = *(void (**)(char *, uint64_t))(v72 + 8);
  int v126 = (uint64_t *)(v72 + 8);
  v73(v31, v52);
  Location.Identifier.id.getter();
  uint64_t v74 = (void (*)(uint64_t, uint64_t))*((void *)v146 + 1);
  v74(v3, v153);
  swift_bridgeObjectRelease();
  uint64_t v128 = v49;
  uint64_t v37 = v129;
  sub_100389F54();
  sub_10006DF38(v154, v155, &qword_100E639E8);
  uint64_t v75 = *(int *)(v37 + 24);
  uint64_t v154 = (uint64_t)v46;
  sub_10006DF38((uint64_t)v46 + v75, (uint64_t)v27, &qword_100E639E8);
  sub_1001630A0((uint64_t)v27);
  uint64_t v125 = (void (*)(uint64_t, uint64_t))v73;
  uint64_t v146 = v74;
  if (v76)
  {
    sub_100178110((uint64_t)v27, &qword_100E639E8);
    uint64_t v124 = 0;
    uint64_t v92 = 0;
    uint64_t v94 = v153;
    uint64_t v95 = v142;
    uint64_t v46 = v126;
  }
  else
  {
    Location.identifier.getter();
    uint64_t v46 = v126;
    v73(v27, v52);
    uint64_t v124 = Location.Identifier.id.getter();
    uint64_t v92 = v91;
    uint64_t v93 = v153;
    v74(v3, v153);
    uint64_t v94 = v93;
    uint64_t v95 = v142;
  }
  uint64_t v96 = v155;
  sub_10006DF38(v155, v95, &qword_100E639E8);
  sub_1001630A0(v95);
  if (v76)
  {
    sub_100178110(v95, &qword_100E639E8);
    uint64_t v49 = v128;
    if (v92)
    {
LABEL_30:
      swift_bridgeObjectRetain();
      sub_100178110(v96, &qword_100E639E8);
      sub_100158B1C(v154, (void (*)(void))type metadata accessor for OpenL2Descriptor);
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    uint64_t v99 = 0;
LABEL_34:
    sub_100178110(v96, &qword_100E639E8);
    sub_100158B1C(v154, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    if (!v99) {
      goto LABEL_6;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  Location.identifier.getter();
  v125(v95, v52);
  uint64_t v97 = Location.Identifier.id.getter();
  uint64_t v99 = v98;
  v146(v3, v94);
  if (!v92)
  {
    uint64_t v49 = v128;
    goto LABEL_34;
  }
  uint64_t v49 = v128;
  if (!v99) {
    goto LABEL_30;
  }
  if (v124 == v97 && v92 == v99)
  {
    swift_bridgeObjectRelease();
    sub_100178110(v96, &qword_100E639E8);
    sub_100158B1C(v154, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    sub_100178110(v96, &qword_100E639E8);
    sub_100158B1C(v154, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    swift_bridgeObjectRelease();
    if ((v101 & 1) == 0)
    {
LABEL_36:
      if (qword_100E62848 != -1) {
        swift_once();
      }
      uint64_t v111 = type metadata accessor for Logger();
      sub_1002102B0(v111, (uint64_t)qword_100F51FE0);
      uint64_t v58 = v147;
      sub_100389F54();
      uint64_t v59 = (void *)Logger.logObject.getter();
      os_log_type_t v112 = static os_log_type_t.error.getter();
      if (sub_100182988(v112))
      {
        sub_1001A31A4();
        uint64_t v155 = sub_100186930();
        v156[0] = v155;
        sub_1001839B8(4.8751e-34);
        sub_10017DF08(&qword_100E635E0);
        uint64_t inited = (__n128 *)swift_initStackObject();
        uint64_t v114 = sub_1001D18A8(inited, (__n128)xmmword_100C33BA0);
        uint64_t v115 = sub_10017CB10((uint64_t)v114, (uint64_t)&type metadata for DetailKind);
        *(unsigned char *)(v115 + 96) = v116;
        uint64_t v117 = (uint64_t *)(v115 + 144);
        *(void *)(v115 + 120) = &type metadata for DisplayLocation;
        *(void *)(v115 + 128) = 1702125924;
        *(void *)(v115 + 136) = v118;
        inited[10].n128_u64[1] = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        uint64_t v119 = sub_100170694(v117);
        sub_1001A2BD0((uint64_t)v119);
        Dictionary.init(dictionaryLiteral:)();
        sub_10017A060();
        sub_1001246C8((unint64_t *)&qword_100E70758, &qword_100E70748);
        sub_10019D52C();
        uint64_t v120 = sub_10017FB24();
        v121(v120);
        uint64_t v122 = sub_1001A15C8();
        sub_1001A1D78(v122);
        swift_bridgeObjectRelease();
        sub_100158B1C(v147, (void (*)(void))type metadata accessor for OpenL2Descriptor);
        uint64_t v71 = "No identifier found for for %{public}s, L2 may not be supported at location.";
        goto LABEL_40;
      }
LABEL_41:

      sub_100158B1C(v58, (void (*)(void))type metadata accessor for OpenL2Descriptor);
      uint64_t v110 = (uint64_t)v49;
      return sub_100158B1C(v110, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    }
  }
LABEL_6:
  uint64_t v54 = v148;
  _s7Weather24LocationCompositionStateOwst_0(v148, 1, 1, v37);
  uint64_t v55 = v127;
  swift_beginAccess();
  sub_100389E98(v54, v55);
  swift_endAccess();
  type metadata accessor for OpenL2ActionHandler();
  sub_100389F54();
  _s7Weather24LocationCompositionStateOwst_0(v54, 0, 1, v37);
  uint64_t v56 = v150;
  sub_100AB2334(v54, v151, v150);
  sub_100178110(v54, &qword_100E66680);
  if (_s7Weather24LocationCompositionStateOwet_0(v56, 1, v149) != 1)
  {
    sub_100389F00();
    if (qword_100E62848 != -1) {
      swift_once();
    }
    uint64_t v77 = type metadata accessor for Logger();
    sub_1002102B0(v77, (uint64_t)qword_100F51FE0);
    uint64_t v78 = v140;
    sub_100389F54();
    uint64_t v79 = (void *)Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.default.getter();
    if (sub_100182988(v80))
    {
      sub_1001A31A4();
      uint64_t v155 = sub_100186930();
      v156[0] = v155;
      sub_1001839B8(4.8751e-34);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v81 = (__n128 *)swift_initStackObject();
      uint64_t v82 = sub_1001D18A8(v81, (__n128)xmmword_100C33BA0);
      uint64_t v83 = sub_10017CB10((uint64_t)v82, (uint64_t)&type metadata for DetailKind);
      sub_10017E2C4(v83, v84);
      v81[10].n128_u64[1] = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      uint64_t v85 = sub_100170694(v46);
      sub_1001A2BD0((uint64_t)v85);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017A060();
      sub_1001246C8((unint64_t *)&qword_100E70758, &qword_100E70748);
      sub_10019D52C();
      uint64_t v86 = sub_10017FB24();
      v87(v86);
      uint64_t v88 = sub_1001A15C8();
      sub_1001A1D78(v88);
      uint64_t v49 = v128;
      swift_bridgeObjectRelease();
      sub_100158B1C(v140, (void (*)(void))type metadata accessor for OpenL2Descriptor);
      sub_10016291C((void *)&_mh_execute_header, v89, v90, "Opening L2: %{public}s...");
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      sub_100158B1C(v78, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    }

    sub_1001AB3E0();
    uint64_t v102 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v104 = *(void *)(v133 + 16);
    uint64_t v103 = *(void *)(v133 + 24);
    uint64_t v105 = (uint64_t)v152;
    sub_100389F54();
    uint64_t v106 = swift_allocObject();
    *(void *)(v106 + 16) = v104;
    *(void *)(v106 + 24) = v103;
    sub_100389F00();
    v156[4] = sub_10038A1E4;
    v156[5] = v106;
    v156[0] = _NSConcreteStackBlock;
    v156[1] = 1107296256;
    v156[2] = sub_10010A4D4;
    v156[3] = &unk_100E12CF0;
    uint64_t v107 = _Block_copy(v156);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    v156[0] = &_swiftEmptyArrayStorage;
    sub_100216874();
    sub_10017DF08(&qword_100E75530);
    sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v107);

    sub_100162F0C();
    v108();
    sub_100162F0C();
    v109();
    sub_100158B1C(v105, (void (*)(void))type metadata accessor for LocationViewAction);
    uint64_t v110 = (uint64_t)v49;
    return sub_100158B1C(v110, (void (*)(void))type metadata accessor for OpenL2Descriptor);
  }
  sub_100178110(v56, &qword_100E70750);
  if (qword_100E62848 != -1) {
    swift_once();
  }
  uint64_t v57 = type metadata accessor for Logger();
  sub_1002102B0(v57, (uint64_t)qword_100F51FE0);
  uint64_t v58 = v141;
  sub_100389F54();
  uint64_t v59 = (void *)Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.error.getter();
  if (!sub_100182988(v60)) {
    goto LABEL_41;
  }
  sub_1001A31A4();
  uint64_t v155 = sub_100186930();
  v156[0] = v155;
  sub_1001839B8(4.8751e-34);
  sub_10017DF08(&qword_100E635E0);
  uint64_t v61 = (__n128 *)swift_initStackObject();
  uint64_t v62 = sub_1001D18A8(v61, (__n128)xmmword_100C33BA0);
  uint64_t v63 = sub_10017CB10((uint64_t)v62, (uint64_t)&type metadata for DetailKind);
  sub_10017E2C4(v63, v64);
  v61[10].n128_u64[1] = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v65 = sub_100170694(v46);
  sub_1001A2BD0((uint64_t)v65);
  Dictionary.init(dictionaryLiteral:)();
  sub_10017A060();
  sub_1001246C8((unint64_t *)&qword_100E70758, &qword_100E70748);
  sub_10019D52C();
  uint64_t v66 = sub_10017FB24();
  v67(v66);
  uint64_t v68 = sub_1001A15C8();
  sub_1001A1D78(v68);
  swift_bridgeObjectRelease();
  sub_100158B1C(v141, (void (*)(void))type metadata accessor for OpenL2Descriptor);
  uint64_t v71 = "Could not create L2 action for %{public}s, L2 may not be supported at location.";
LABEL_40:
  sub_10016291C((void *)&_mh_execute_header, v69, v70, v71);
  swift_arrayDestroy();
  sub_100162EE0();
  sub_100162EE0();

  uint64_t v110 = (uint64_t)v128;
  return sub_100158B1C(v110, (void (*)(void))type metadata accessor for OpenL2Descriptor);
}

uint64_t sub_100389118(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100389F54();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  sub_1001AAF58((uint64_t)v4, (uint64_t)v6, a1);
  sub_100178110((uint64_t)v6, (uint64_t *)&unk_100EA01F0);
  return sub_100158B1C((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
}

uint64_t sub_100389228(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = v3;
  uint64_t v8 = type metadata accessor for ActivityAction();
  uint64_t v33 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v34 = v9;
  uint64_t v35 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v13 = sub_10017FB48();
  sub_100179C0C();
  uint64_t v37 = v14;
  __chkstk_darwin(v15);
  sub_100125FF8();
  withTransaction<A>(_:_:)();
  if (a3)
  {
    sub_1001AB3E0();
    uint64_t v32 = static OS_dispatch_queue.main.getter();
    uint64_t v17 = *(void *)(v6 + 16);
    uint64_t v16 = *(void *)(v6 + 24);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = v16;
    uint64_t v42 = sub_100389E54;
    uint64_t v43 = v18;
    aBlock = _NSConcreteStackBlock;
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_10010A4D4;
    uint64_t v41 = &unk_100E12CA0;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)&_swiftEmptyArrayStorage;
    sub_100216874();
    sub_10017DF08(&qword_100E75530);
    sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
    uint64_t v20 = v36;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v21 = (void *)v32;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v20);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v5, v13);
  }
  sub_1001AB3E0();
  uint64_t v22 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v32 = v13;
  uint64_t v24 = *(void *)(v6 + 16);
  uint64_t v23 = *(void *)(v6 + 24);
  sub_100389F54();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v23;
  sub_100389F00();
  uint64_t v42 = sub_100389DF0;
  uint64_t v43 = v25;
  aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_10010A4D4;
  uint64_t v41 = &unk_100E12C50;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock = (void **)&_swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);

  uint64_t v27 = sub_100185A08();
  v28(v27);
  sub_100162F0C();
  return v29();
}

uint64_t sub_1003896CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(a1 + 16);
  type metadata accessor for ActivityAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_retain();
  sub_1001AAF58((uint64_t)v4, (uint64_t)v7, v5);
  sub_100178110((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  sub_100158B1C((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1003897F8()
{
  return withTransaction<A>(_:_:)();
}

uint64_t sub_100389850(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  sub_1001AAF58((uint64_t)v4, (uint64_t)v6, a1);
  sub_100178110((uint64_t)v6, (uint64_t *)&unk_100EA01F0);
  return sub_100158B1C((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
}

uint64_t sub_10038996C()
{
  return withTransaction<A>(_:_:)();
}

uint64_t sub_1003899BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100389F54();
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  sub_1001AAF58((uint64_t)v4, (uint64_t)v6, a1);
  sub_100178110((uint64_t)v6, (uint64_t *)&unk_100EA01F0);
  return sub_100158B1C((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
}

uint64_t sub_100389AE4()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather21AppContinuationBridge_pendingOpenL2Descriptor, &qword_100E66680);

  return swift_deallocClassInstance();
}

uint64_t sub_100389B58()
{
  return type metadata accessor for AppContinuationBridge();
}

uint64_t type metadata accessor for RootViewControllerResolver()
{
  return self;
}

uint64_t sub_100389B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100389BEC()
{
  return sub_100387F28();
}

uint64_t sub_100389BF4()
{
  return sub_100387F7C(v0);
}

uint64_t sub_100389C10()
{
  return sub_1003896CC(v0);
}

uint64_t sub_100389C2C()
{
  type metadata accessor for ActivityAction();
  sub_1001A0634();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  uint64_t v4 = (id *)(v0 + v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_6;
      case 1u:
        type metadata accessor for LocationOfInterest();
        goto LABEL_8;
      case 2u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = (char *)v4 + *(int *)(type metadata accessor for SearchLocation() + 32);
        uint64_t v9 = type metadata accessor for Location();
        if (!sub_100181EF0(v9)) {
          (*(void (**)(char *))(*(void *)(v1 - 8) + 8))(v8);
        }
        break;
      case 3u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    type metadata accessor for SavedLocation();
    if (swift_getEnumCaseMultiPayload() == 1) {
      type metadata accessor for SavedLocation.Placeholder();
    }
    else {
LABEL_6:
    }
      type metadata accessor for Location();
LABEL_8:
    sub_100162E4C();
    (*(void (**)(unint64_t))(v6 + 8))(v0 + v3);
  }

  return swift_deallocObject();
}

uint64_t sub_100389DF0()
{
  return sub_10038A210((void (*)(void))type metadata accessor for ActivityAction);
}

uint64_t sub_100389E1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100389E54()
{
  return sub_1003897F8();
}

uint64_t sub_100389E5C()
{
  return sub_100389850(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100389E78()
{
  return sub_1003899BC(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100389E98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100389F00()
{
  uint64_t v2 = sub_100164FF8();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_100389F54()
{
  uint64_t v1 = sub_100164FF8();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_100389F9C()
{
  type metadata accessor for LocationViewAction();
  sub_1001A0634();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  uint64_t v4 = v0 + v3;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    type metadata accessor for Location();
    sub_100162E4C();
    sub_100162F0C();
    v6();
    v4 += *(int *)(sub_10017DF08(&qword_100E66450) + 48);
    type metadata accessor for LocationOfInterest();
LABEL_8:
    sub_100162E4C();
    (*(void (**)(uint64_t))(v7 + 8))(v4);
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_15;
    }
    type metadata accessor for Location();
    goto LABEL_8;
  }
  type metadata accessor for LocationComponentAction(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for URL();
      goto LABEL_11;
    case 1u:
      type metadata accessor for WeatherMapOverlayKind();
      goto LABEL_11;
    case 2u:
      type metadata accessor for DetailCondition();
LABEL_11:
      sub_100162E4C();
      (*(void (**)(unint64_t))(v8 + 8))(v0 + v3);
      break;
    case 4u:
      uint64_t v1 = v4 + *(int *)(sub_10017DF08(&qword_100E66480) + 48);
      type metadata accessor for Location();
      sub_100162E4C();
      (*(void (**)(uint64_t))(v9 + 8))(v1);
      break;
    default:
      break;
  }
  uint64_t v10 = v4 + *(int *)(sub_10017DF08(&qword_100E66458) + 64);
  uint64_t v11 = type metadata accessor for Date();
  if (!sub_100181EF0(v11)) {
    (*(void (**)(uint64_t))(*(void *)(v1 - 8) + 8))(v10);
  }
LABEL_15:

  return swift_deallocObject();
}

uint64_t sub_10038A1E4()
{
  return sub_10038A210((void (*)(void))type metadata accessor for LocationViewAction);
}

uint64_t sub_10038A210(void (*a1)(void))
{
  return sub_10038996C();
}

uint64_t sub_10038A280()
{
  return sub_100389118(*(uint64_t (**)(uint64_t))(v0 + 16));
}

void **sub_10038A2B4(void **a1, void **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void **)((char *)a1 + v8);
    uint64_t v10 = (void **)((char *)a2 + v8);
    uint64_t v11 = v5;
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[7];
    *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_10038A404(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ContentSizeCategory();
    uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void **sub_10038A4BC(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void **)((char *)a1 + v7);
  uint64_t v9 = (void **)((char *)a2 + v7);
  id v10 = v6;
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  return a1;
}

void **sub_10038A5C4(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  if (a1 != a2)
  {
    uint64_t v9 = a3[5];
    id v10 = (void **)((char *)a1 + v9);
    uint64_t v11 = (void **)((char *)a2 + v9);
    sub_1000F3400((uint64_t)a1 + v9, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *id v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  v14[8] = v15[8];
  *(void *)uint64_t v14 = v16;
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  return a1;
}

void *sub_10038A6F0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void **sub_10038A804(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    id v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1000F3400((uint64_t)a1 + v7, &qword_100E63BC8);
    uint64_t v10 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[7];
  *(void **)((char *)a1 + a3[6]) = *(void **)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_10038A938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038A94C);
}

uint64_t sub_10038A94C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_10038A9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038A9EC);
}

void *sub_10038A9EC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for HorizontalABWithB1x1RatioLayout()
{
  uint64_t result = qword_100E707B8;
  if (!qword_100E707B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10038AAB8()
{
  sub_100230954();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

double sub_10038AB6C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E646B8);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LayoutSubview();
  sub_100179C0C();
  uint64_t v24 = v9;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  type metadata accessor for LayoutSubviews();
  sub_10038B4E4(&qword_100E70808, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (sub_10017FB70() != 2) {
    goto LABEL_10;
  }
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (sub_10017FB70() != 2)
  {
    _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v8);
    goto LABEL_9;
  }
  LayoutSubviews.subscript.getter();
  _s7Weather24LocationCompositionStateOwst_0(v7, 0, 1, v8);
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
LABEL_9:
    sub_1000F3400(v7, &qword_100E646B8);
LABEL_10:
    if (a2) {
      return 10.0;
    }
    else {
      return *(double *)&a1;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v13, v7, v8);
  static ProposedViewSize.unspecified.getter();
  LayoutSubview.sizeThatFits(_:)();
  double v15 = v14;
  double v17 = v16;
  if (a2)
  {
    uint64_t v21 = type metadata accessor for HorizontalABWithB1x1RatioLayout();
    double v22 = *(double *)(v23 + *(int *)(v21 + 24));
    if (v17 > v22) {
      double v22 = v17;
    }
    double v18 = *(double *)(v23 + *(int *)(v21 + 32)) + v15 + v22;
  }
  else
  {
    double v18 = *(double *)&a1;
    uint64_t v19 = type metadata accessor for HorizontalABWithB1x1RatioLayout();
    if (*(double *)&a1 - *(double *)(v23 + *(int *)(v19 + 24)) - *(double *)(v23 + *(int *)(v19 + 32)) < v15) {
      LayoutSubview.sizeThatFits(_:)();
    }
  }
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v13, v8);
  return v18;
}

uint64_t sub_10038AEBC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v53 = v9;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E646B8);
  __chkstk_darwin(v14 - 8);
  double v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = type metadata accessor for LayoutSubview();
  sub_100179C0C();
  uint64_t v54 = v21;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v47 - v26;
  type metadata accessor for LayoutSubviews();
  sub_10038B4E4(&qword_100E70808, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (sub_10019E950() != 2)
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v20);
    goto LABEL_12;
  }
  uint64_t v50 = v13;
  uint64_t v51 = v16;
  uint64_t v49 = v24;
  uint64_t v28 = v54;
  LayoutSubviews.subscript.getter();
  uint64_t v29 = v20;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v20);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_12:
    uint64_t v46 = (uint64_t)v19;
    return sub_1000F3400(v46, &qword_100E646B8);
  }
  uint64_t v48 = v8;
  uint64_t v30 = v28;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v32 = v27;
  v31(v27, v19, v20);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (sub_10019E950() != 2)
  {
    uint64_t v33 = (uint64_t)v51;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 1, 1, v20);
    goto LABEL_15;
  }
  uint64_t v33 = (uint64_t)v51;
  LayoutSubviews.subscript.getter();
  _s7Weather24LocationCompositionStateOwst_0(v33, 0, 1, v20);
  if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v20) == 1)
  {
LABEL_15:
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v20);
    uint64_t v46 = v33;
    return sub_1000F3400(v46, &qword_100E646B8);
  }
  uint64_t v34 = v49;
  v31(v49, (char *)v33, v20);
  uint64_t v35 = v52;
  id v36 = *v52;
  uint64_t v37 = v50;
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  v57.origin.x = a1;
  v57.origin.y = a2;
  v57.size.width = a3;
  v57.size.height = a4;
  CGRectGetHeight(v57);
  char v56 = 1;
  char v55 = 0;
  LayoutSubview.sizeThatFits(_:)();
  CGFloat v39 = a3 - v38;
  uint64_t v40 = type metadata accessor for HorizontalABWithB1x1RatioLayout();
  double v41 = v39 - *(double *)((char *)v35 + *(int *)(v40 + 32));
  if (v41 > a4) {
    double v41 = a4;
  }
  uint64_t v42 = *(int *)(v40 + 24);
  if (v41 > *(double *)((char *)v35 + v42)) {
    double v43 = v41;
  }
  else {
    double v43 = *(double *)((char *)v35 + v42);
  }
  sub_10038B3A8(v43, a1, a2, a3, a4);
  static UnitPoint.topLeading.getter();
  char v56 = 0;
  char v55 = 0;
  LayoutSubview.place(at:anchor:proposal:)();
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v37, v48);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v30 + 8);
  v44(v34, v29);
  return ((uint64_t (*)(char *, uint64_t))v44)(v32, v29);
}

uint64_t sub_10038B3A8(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  v10.origin.x = a2;
  v10.origin.y = a3;
  v10.size.width = a4;
  v10.size.height = a5;
  CGRectGetMinX(v10);
  v11.origin.x = a2;
  v11.origin.y = a3;
  v11.size.width = a4;
  v11.size.height = a5;
  CGRectGetMinY(v11);
  static UnitPoint.topLeading.getter();
  return LayoutSubview.place(at:anchor:proposal:)();
}

double sub_10038B480(uint64_t a1, char a2)
{
  return sub_10038AB6C(a1, a2 & 1);
}

uint64_t sub_10038B49C()
{
  return sub_10038B4E4(&qword_100E70800, (void (*)(uint64_t))type metadata accessor for HorizontalABWithB1x1RatioLayout);
}

uint64_t sub_10038B4E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10038B52C()
{
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_10017A0A0();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  uint64_t v2 = sub_10017A08C();
  v3(v2);
  uint64_t v4 = sub_10017FB90();
  v5(v4);
  sub_10017DF08(&qword_100E70810);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F513D8 = result;
  return result;
}

uint64_t sub_10038B648()
{
  type metadata accessor for Domain();
  sub_100179C0C();
  __chkstk_darwin(v0);
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  uint64_t v2 = sub_10017A08C();
  v3(v2);
  uint64_t v4 = sub_10017FB90();
  v5(v4);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F513E0 = result;
  return result;
}

uint64_t *sub_10038B780(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = type metadata accessor for CodableError();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10038B89C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = type metadata accessor for CodableError();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_10038B93C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10038F000((uint64_t)a1, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10038BA38(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for CodableError();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10038BAEC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10038F000((uint64_t)a1, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for CodableError();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_10038BBC4(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  CGRect v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v9 = *v10;
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v13 = type metadata accessor for CodableError();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_9:
  uint64_t v15 = a3[7];
  *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  double v16 = (char *)v4 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E639E8);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  return v4;
}

void *sub_10038BDD0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_10038F000((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    uint64_t v9 = type metadata accessor for SearchViewState.ViewState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v7 = *v8;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v11 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      goto LABEL_8;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
LABEL_8:
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Location();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!v16)
  {
    uint64_t v18 = *(void *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_13;
  }
  if (v17)
  {
LABEL_13:
    uint64_t v19 = sub_10017DF08(&qword_100E639E8);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  return a1;
}

_OWORD *sub_10038C03C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for SearchViewState.ViewState(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for CodableError();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E639E8);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

void *sub_10038C1C4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_10038F000((uint64_t)a1 + v7, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    uint64_t v10 = type metadata accessor for SearchViewState.ViewState(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for CodableError();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Location();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!v16)
  {
    uint64_t v18 = *(void *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_10;
  }
  if (v17)
  {
LABEL_10:
    uint64_t v19 = sub_10017DF08(&qword_100E639E8);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t sub_10038C3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for SearchViewState.ViewState(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E639E8);
      uint64_t v11 = *(int *)(a3 + 28);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_10038C4A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for SearchViewState.ViewState(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E639E8);
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_10038C554(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7375636F66 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65766F6D6572 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_10038C684(char a1)
{
  if (!a1) {
    return 1701736302;
  }
  if (a1 == 1) {
    return 0x7375636F66;
  }
  return 0x65766F6D6572;
}

uint64_t sub_10038C6CC()
{
  return sub_10038C684(*v0);
}

uint64_t sub_10038C6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10038C554(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10038C6FC(uint64_t a1)
{
  unint64_t v2 = sub_10038F26C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10038C738(uint64_t a1)
{
  unint64_t v2 = sub_10038F26C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10038C774(uint64_t a1)
{
  unint64_t v2 = sub_10038F304();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10038C7B0(uint64_t a1)
{
  unint64_t v2 = sub_10038F304();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10038C7EC(uint64_t a1)
{
  unint64_t v2 = sub_10038F350();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10038C828(uint64_t a1)
{
  unint64_t v2 = sub_10038F350();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10038C864(uint64_t a1)
{
  unint64_t v2 = sub_10038F2B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10038C8A0(uint64_t a1)
{
  unint64_t v2 = sub_10038F2B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10038C8DC()
{
  sub_100162EA0();
  uint64_t v3 = v0;
  uint64_t v48 = v4;
  int v52 = v5;
  uint64_t v53 = v7;
  uint64_t v54 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = sub_10017DF08(&qword_100E639E8);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10016278C();
  uint64_t v50 = v14 - v15;
  __chkstk_darwin(v16);
  uint64_t v51 = (uint64_t)&v47 - v17;
  uint64_t v18 = sub_10017DF08(&qword_100E70A78);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  uint64_t v20 = sub_100163E88();
  uint64_t v21 = type metadata accessor for SearchViewState.ViewState(v20);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v49 = v23;
  uint64_t v24 = (int *)type metadata accessor for SearchViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_10016278C();
  uint64_t v28 = v26 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v47 - v30;
  __chkstk_darwin(v32);
  sub_100119550();
  __chkstk_darwin(v33);
  uint64_t v35 = (uint64_t *)((char *)&v47 - v34);
  sub_10011D420(v3, (uint64_t)&v47 - v34, (void (*)(void))type metadata accessor for SearchViewState);
  if (v9)
  {
    uint64_t v47 = v9;
  }
  else
  {
    uint64_t v36 = v35[1];
    uint64_t v54 = *v35;
    uint64_t v47 = v36;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_10038F000((uint64_t)v35, (void (*)(void))type metadata accessor for SearchViewState);
  sub_10006DF38(v53, v2, &qword_100E70A78);
  sub_10011D420(v3, v1, (void (*)(void))type metadata accessor for SearchViewState);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v21) == 1)
  {
    uint64_t v37 = v49;
    sub_10011D420(v1 + v24[5], v49, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    uint64_t v38 = v1;
    uint64_t v39 = v37;
    sub_10038F000(v38, (void (*)(void))type metadata accessor for SearchViewState);
    sub_100178110(v2, &qword_100E70A78);
  }
  else
  {
    sub_10038F000(v1, (void (*)(void))type metadata accessor for SearchViewState);
    uint64_t v39 = v49;
    sub_10038EF50(v2, v49);
  }
  char v40 = v52;
  uint64_t v41 = v50;
  uint64_t v42 = v48;
  sub_10011D420(v3, (uint64_t)v31, (void (*)(void))type metadata accessor for SearchViewState);
  if (v40 == 3) {
    char v40 = v31[v24[6]];
  }
  sub_10038F000((uint64_t)v31, (void (*)(void))type metadata accessor for SearchViewState);
  sub_10006DF38(v42, v41, &qword_100E639E8);
  sub_10011D420(v3, v28, (void (*)(void))type metadata accessor for SearchViewState);
  uint64_t v43 = type metadata accessor for Location();
  sub_100162F8C(v41);
  if (v44)
  {
    uint64_t v45 = v51;
    sub_10006DF38(v28 + v24[7], v51, &qword_100E639E8);
    sub_10038F000(v28, (void (*)(void))type metadata accessor for SearchViewState);
    sub_100178110(v41, &qword_100E639E8);
  }
  else
  {
    sub_10038F000(v28, (void (*)(void))type metadata accessor for SearchViewState);
    uint64_t v45 = v51;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v51, v41, v43);
    _s7Weather24LocationCompositionStateOwst_0(v45, 0, 1, v43);
  }
  uint64_t v46 = v47;
  *uint64_t v11 = v54;
  v11[1] = v46;
  sub_10038EF50(v39, (uint64_t)v11 + v24[5]);
  *((unsigned char *)v11 + v24[6]) = v40;
  sub_100360330(v45, (uint64_t)v11 + v24[7]);
  sub_100162694();
}

uint64_t sub_10038CD34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7551686372616573 && a2 == 0xEB00000000797265;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7461745377656976 && a2 == 0xE900000000000065;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7165527375636F66 && a2 == 0xEC00000074736575;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000100C9D190)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_10038CF20(char a1)
{
  unint64_t result = 0x7551686372616573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7461745377656976;
      break;
    case 2:
      unint64_t result = 0x7165527375636F66;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10038CFCC(void *a1)
{
  sub_10017DF08(&qword_100E70990);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10038EF04();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for SearchViewState(0);
    type metadata accessor for SearchViewState.ViewState(0);
    sub_10038EEBC(&qword_100E70998, (void (*)(uint64_t))type metadata accessor for SearchViewState.ViewState);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10038F054();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for Location();
    sub_10038EEBC(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
    sub_100181F10();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  sub_10017CB40();
  return v4();
}

void sub_10038D1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  sub_10016314C();
  uint64_t v17 = v16;
  uint64_t v29 = v18;
  uint64_t v19 = sub_10017DF08(&qword_100E639E8);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_10012B938();
  type metadata accessor for SearchViewState.ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100125FF8();
  sub_10017DF08(&qword_100E70970);
  sub_100179C0C();
  __chkstk_darwin(v22);
  uint64_t v23 = sub_100163E88();
  uint64_t v24 = (int *)type metadata accessor for SearchViewState(v23);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100109370();
  sub_1001B1E64(v17, v17[3]);
  sub_10038EF04();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
  }
  else
  {
    *uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)();
    v15[1] = v26;
    sub_10038EEBC(&qword_100E70980, (void (*)(uint64_t))type metadata accessor for SearchViewState.ViewState);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10038EF50(v14, (uint64_t)v15 + v24[5]);
    sub_10038EFB4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *((unsigned char *)v15 + v24[6]) = a12;
    type metadata accessor for Location();
    sub_10038EEBC(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v27 = sub_10016293C();
    v28(v27);
    sub_100360330(v13, (uint64_t)v15 + v24[7]);
    sub_10011D420((uint64_t)v15, v29, (void (*)(void))type metadata accessor for SearchViewState);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    sub_10038F000((uint64_t)v15, (void (*)(void))type metadata accessor for SearchViewState);
  }
  sub_100163164();
}

unint64_t sub_10038D590()
{
  return sub_10038CF20(*v0);
}

uint64_t sub_10038D598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10038CD34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10038D5C0(uint64_t a1)
{
  unint64_t v2 = sub_10038EF04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10038D5FC(uint64_t a1)
{
  unint64_t v2 = sub_10038EF04();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10038D63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10038D1F8(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

uint64_t sub_10038D654(void *a1)
{
  return sub_10038CFCC(a1);
}

void sub_10038D66C()
{
}

void sub_10038D684()
{
}

void sub_10038D6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  uint64_t v32 = v16;
  uint64_t v18 = v17;
  uint64_t v31 = type metadata accessor for CodableError();
  sub_100179C0C();
  uint64_t v30 = v19;
  __chkstk_darwin(v20);
  sub_100109370();
  sub_10017DF08(&qword_100E709A8);
  sub_100179C0C();
  __chkstk_darwin(v21);
  sub_10019D54C();
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_10008B8C0();
  sub_1001B1E64(v18, v18[3]);
  sub_10038F0A0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v13)
  {
    sub_10038F0EC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    switch(a13)
    {
      case 1:
      case 3:
      case 4:
        uint64_t v28 = sub_10019E970();
        v29(v28);
        goto LABEL_6;
      case 2:
        sub_10017DF08(&qword_100E662D0);
        sub_10038F184(&qword_100E709C0, &qword_100E709C8);
        sub_10016500C();
        uint64_t v26 = sub_10019E970();
        v27(v26);
        *uint64_t v15 = v33;
LABEL_6:
        uint64_t v25 = v32;
        break;
      default:
        sub_10038EEBC(&qword_100E709D0, (void (*)(uint64_t))&type metadata accessor for CodableError);
        sub_10016500C();
        uint64_t v23 = sub_10019E970();
        v24(v23);
        uint64_t v25 = v32;
        (*(void (**)(void *, uint64_t, uint64_t))(v30 + 32))(v15, v14, v31);
        break;
    }
    swift_storeEnumTagMultiPayload();
    sub_10038EF50((uint64_t)v15, v25);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
  sub_100163164();
}

void sub_10038D9F4()
{
  sub_10016314C();
  uint64_t v5 = v0;
  BOOL v7 = v6;
  uint64_t v8 = type metadata accessor for CodableError();
  sub_100179C0C();
  uint64_t v16 = v9;
  __chkstk_darwin(v10);
  sub_10019D54C();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100162F18();
  sub_10017DF08(&qword_100E709D8);
  sub_100179C0C();
  uint64_t v17 = v12;
  __chkstk_darwin(v13);
  sub_10012B938();
  uint64_t v14 = v7[4];
  sub_1001B1E64(v7, v7[3]);
  sub_10038F0A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10011D420(v5, v4, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10038F138();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (!v1)
      {
        sub_10017DF08(&qword_100E662D0);
        sub_10038F184(&qword_100E709E8, &qword_100E709F0);
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      sub_100162F0C();
      v15();
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 3u:
    case 4u:
      sub_10038F138();
      sub_1001829A4();
      goto LABEL_9;
    default:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v3, v4, v8);
      sub_10038F138();
      sub_1001829A4();
      if (!v1)
      {
        sub_10038EEBC(&qword_100E709F8, (void (*)(uint64_t))&type metadata accessor for CodableError);
        sub_100181F10();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v3, v8);
LABEL_9:
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v2, v14);
      break;
  }
  sub_100163164();
}

unint64_t sub_10038DD68(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E06930, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10038DDB8(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726F727265;
      break;
    case 2:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      uint64_t result = 0x7972657571;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10038DE40(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x726F727265;
      break;
    case 2:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      uint64_t result = 0x7972657571;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10038DEC8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E069B0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t sub_10038DF14(char a1)
{
  unint64_t result = 0x726F727265;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E6964616F6CLL;
      break;
    case 2:
      unint64_t result = 0x73746C75736572;
      break;
    case 3:
      unint64_t result = 0x7779654B6F72657ALL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10038DFCC()
{
  return sub_10088AEA8();
}

Swift::Int sub_10038DFD8()
{
  return sub_100652558(*v0);
}

uint64_t sub_10038DFE0()
{
  return sub_1002C2C68();
}

Swift::Int sub_10038DFE8(uint64_t a1)
{
  return sub_1002C4464(a1, *v1);
}

unint64_t sub_10038DFF0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10038DD68(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10038E020@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10038DDB8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10038E04C()
{
  return sub_10038DE40(*v0);
}

uint64_t sub_10038E054@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10038DDB4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10038E07C(uint64_t a1)
{
  unint64_t v2 = sub_10038F0A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10038E0B8(uint64_t a1)
{
  unint64_t v2 = sub_10038F0A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10038E0F4(unsigned __int8 *a1, char *a2)
{
  return sub_10088ACFC(*a1, *a2);
}

Swift::Int sub_10038E100()
{
  return sub_100652570(*v0);
}

uint64_t sub_10038E108()
{
  return sub_1002C2B94();
}

Swift::Int sub_10038E110(uint64_t a1)
{
  return sub_1002C447C(a1, *v1);
}

unint64_t sub_10038E118@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10038DEC8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10038E148@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10038DF14(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10038E174()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10038E1D4()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_10038E224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10038D6B4(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_10038E23C()
{
}

void sub_10038E254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10089554C(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_10038E26C()
{
}

void sub_10038E284()
{
  sub_100162EA0();
  uint64_t v29 = v3;
  uint64_t v4 = type metadata accessor for CodableError();
  sub_100179C0C();
  uint64_t v28 = v5;
  __chkstk_darwin(v6);
  sub_10016278C();
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - v11;
  type metadata accessor for SearchViewState.ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100162F18();
  uint64_t v14 = sub_10017DF08(&qword_100E70A00);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_10011BFD8();
  uint64_t v18 = type metadata accessor for SearchViewState(0);
  sub_10011D420(v0 + *(int *)(v18 + 20), (uint64_t)v2, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v23 = *v2;
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      *(void *)(inited + 32) = 0x6F4C686372616573;
      *(void *)(inited + 40) = 0xEF736E6F69746163;
      *(void *)(inited + 72) = sub_10017DF08(&qword_100E662D0);
      *(void *)(inited + 48) = v23;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017F3A0();
      goto LABEL_8;
    case 2u:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017F3A0();
      goto LABEL_8;
    case 3u:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017F3A0();
      goto LABEL_8;
    case 4u:
      Dictionary.init(dictionaryLiteral:)();
LABEL_8:
      ShortDescription.init(name:_:)();
      break;
    default:
      uint64_t v19 = v28;
      (*(void (**)(char *, uint64_t *, uint64_t))(v28 + 32))(v12, v2, v4);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_100C251B0;
      *(void *)(v20 + 32) = 0x726F727265;
      *(void *)(v20 + 40) = 0xE500000000000000;
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v9, v12, v4);
      uint64_t v21 = String.init<A>(describing:)();
      *(void *)(v20 + 72) = &type metadata for String;
      *(void *)(v20 + 48) = v21;
      *(void *)(v20 + 56) = v22;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017F3A0();
      ShortDescription.init(name:_:)();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v4);
      break;
  }
  uint64_t v25 = v29;
  v29[3] = v14;
  v25[4] = sub_10038F218();
  uint64_t v26 = sub_100170694(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 32))(v26, v1, v14);
  sub_100162694();
}

void sub_10038E6B4()
{
  sub_10016314C();
  char v27 = v2;
  uint64_t v4 = v3;
  sub_10017DF08(&qword_100E70A58);
  sub_100179C0C();
  uint64_t v25 = v6;
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v24 = v7;
  sub_10017DF08(&qword_100E70A60);
  sub_100179C0C();
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = sub_10017DF08(&qword_100E70A68);
  sub_100179C0C();
  uint64_t v21 = v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E70A70);
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_100125FF8();
  sub_1001B1E64(v4, v4[3]);
  sub_10038F26C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v27)
  {
    if (v27 == 1)
    {
      sub_10038F304();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v1, v23);
    }
    else
    {
      sub_10038F2B8();
      uint64_t v19 = v24;
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v19, v26);
    }
  }
  else
  {
    sub_10038F350();
    sub_100178FC0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v10);
  }
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v0, v15);
  sub_100163164();
}

void sub_10038E920()
{
  sub_10016314C();
  unint64_t v3 = v2;
  sub_10017DF08(&qword_100E70A18);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100109314();
  sub_10017DF08(&qword_100E70A20);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10012B938();
  sub_10017DF08(&qword_100E70A28);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100125FF8();
  uint64_t v7 = sub_10017DF08(&qword_100E70A30);
  sub_100179C0C();
  uint64_t v28 = v8;
  __chkstk_darwin(v9);
  sub_100109370();
  sub_1001B1E64(v3, v3[3]);
  sub_10038F26C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0) {
    goto LABEL_9;
  }
  uint64_t v29 = (uint64_t)v3;
  uint64_t v10 = v1;
  uint64_t v11 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_8:
    uint64_t v19 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v21 = v20;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v21 = &type metadata for SearchViewState.FocusRequest;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v10, v7);
    unint64_t v3 = (void *)v29;
LABEL_9:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
    goto LABEL_10;
  }
  uint64_t v13 = v1;
  int v14 = *(unsigned __int8 *)(v11 + 32);
  sub_100723214(1, v12, v11, v11 + 32, 0, (2 * v12) | 1);
  uint64_t v16 = v15;
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    uint64_t v10 = v13;
    goto LABEL_8;
  }
  if (v14)
  {
    sub_10038F304();
    sub_10018519C();
    sub_100162F0C();
    v23(v22);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v13, v7);
  }
  else
  {
    sub_10038F350();
    sub_10018519C();
    sub_100162F0C();
    v25(v24);
    swift_unknownObjectRelease();
    sub_100162F0C();
    v27(v26);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
LABEL_10:
  sub_100163164();
}

uint64_t sub_10038EDC0()
{
  sub_10038EEBC(&qword_100E70A10, (void (*)(uint64_t))type metadata accessor for SearchViewState);

  return ShortDescribable.description.getter();
}

void sub_10038EE2C(unsigned char *a1@<X8>)
{
  sub_10038E920();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_10038EE58()
{
}

uint64_t sub_10038EE74()
{
  return sub_10038EEBC(&qword_100E70960, (void (*)(uint64_t))type metadata accessor for SearchViewState);
}

uint64_t sub_10038EEBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10038EF04()
{
  unint64_t result = qword_100E70978;
  if (!qword_100E70978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70978);
  }
  return result;
}

uint64_t sub_10038EF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchViewState.ViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10038EFB4()
{
  unint64_t result = qword_100E70988;
  if (!qword_100E70988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70988);
  }
  return result;
}

uint64_t sub_10038F000(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_10038F054()
{
  unint64_t result = qword_100E709A0;
  if (!qword_100E709A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E709A0);
  }
  return result;
}

unint64_t sub_10038F0A0()
{
  unint64_t result = qword_100E709B0;
  if (!qword_100E709B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E709B0);
  }
  return result;
}

unint64_t sub_10038F0EC()
{
  unint64_t result = qword_100E709B8;
  if (!qword_100E709B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E709B8);
  }
  return result;
}

unint64_t sub_10038F138()
{
  unint64_t result = qword_100E709E0;
  if (!qword_100E709E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E709E0);
  }
  return result;
}

uint64_t sub_10038F184(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E662D0);
    sub_10038EEBC(a2, (void (*)(uint64_t))type metadata accessor for SearchLocation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10038F218()
{
  unint64_t result = qword_100E70A08;
  if (!qword_100E70A08)
  {
    sub_10018C6DC(&qword_100E70A00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A08);
  }
  return result;
}

unint64_t sub_10038F26C()
{
  unint64_t result = qword_100E70A38;
  if (!qword_100E70A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A38);
  }
  return result;
}

unint64_t sub_10038F2B8()
{
  unint64_t result = qword_100E70A40;
  if (!qword_100E70A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A40);
  }
  return result;
}

unint64_t sub_10038F304()
{
  unint64_t result = qword_100E70A48;
  if (!qword_100E70A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A48);
  }
  return result;
}

unint64_t sub_10038F350()
{
  unint64_t result = qword_100E70A50;
  if (!qword_100E70A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A50);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchViewState.FocusRequest.CodingKeys()
{
  return &type metadata for SearchViewState.FocusRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewState.FocusRequest.NoneCodingKeys()
{
  return &type metadata for SearchViewState.FocusRequest.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewState.FocusRequest.FocusCodingKeys()
{
  return &type metadata for SearchViewState.FocusRequest.FocusCodingKeys;
}

ValueMetadata *type metadata accessor for SearchViewState.FocusRequest.RemoveCodingKeys()
{
  return &type metadata for SearchViewState.FocusRequest.RemoveCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SearchViewState.ViewState.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038F4ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchViewState.ViewState.CodingType()
{
  return &type metadata for SearchViewState.ViewState.CodingType;
}

ValueMetadata *type metadata accessor for SearchViewState.ViewState.CodingKeys()
{
  return &type metadata for SearchViewState.ViewState.CodingKeys;
}

unsigned char *_s7Weather15SearchViewStateV9ViewStateO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038F5C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchViewState.CodingKeys()
{
  return &type metadata for SearchViewState.CodingKeys;
}

unsigned char *_s7Weather15SearchViewStateV12FocusRequestOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038F6CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchViewState.FocusRequest()
{
  return &type metadata for SearchViewState.FocusRequest;
}

unint64_t sub_10038F708()
{
  unint64_t result = qword_100E70A80;
  if (!qword_100E70A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A80);
  }
  return result;
}

unint64_t sub_10038F758()
{
  unint64_t result = qword_100E70A88;
  if (!qword_100E70A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A88);
  }
  return result;
}

unint64_t sub_10038F7A8()
{
  unint64_t result = qword_100E70A90;
  if (!qword_100E70A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A90);
  }
  return result;
}

unint64_t sub_10038F7F8()
{
  unint64_t result = qword_100E70A98;
  if (!qword_100E70A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70A98);
  }
  return result;
}

unint64_t sub_10038F848()
{
  unint64_t result = qword_100E70AA0;
  if (!qword_100E70AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AA0);
  }
  return result;
}

unint64_t sub_10038F898()
{
  unint64_t result = qword_100E70AA8;
  if (!qword_100E70AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AA8);
  }
  return result;
}

unint64_t sub_10038F8E8()
{
  unint64_t result = qword_100E70AB0;
  if (!qword_100E70AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AB0);
  }
  return result;
}

unint64_t sub_10038F938()
{
  unint64_t result = qword_100E70AB8;
  if (!qword_100E70AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AB8);
  }
  return result;
}

unint64_t sub_10038F988()
{
  unint64_t result = qword_100E70AC0;
  if (!qword_100E70AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AC0);
  }
  return result;
}

unint64_t sub_10038F9D8()
{
  unint64_t result = qword_100E70AC8;
  if (!qword_100E70AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AC8);
  }
  return result;
}

unint64_t sub_10038FA28()
{
  unint64_t result = qword_100E70AD0;
  if (!qword_100E70AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AD0);
  }
  return result;
}

unint64_t sub_10038FA78()
{
  unint64_t result = qword_100E70AD8;
  if (!qword_100E70AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AD8);
  }
  return result;
}

unint64_t sub_10038FAC8()
{
  unint64_t result = qword_100E70AE0;
  if (!qword_100E70AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AE0);
  }
  return result;
}

unint64_t sub_10038FB18()
{
  unint64_t result = qword_100E70AE8;
  if (!qword_100E70AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AE8);
  }
  return result;
}

unint64_t sub_10038FB68()
{
  unint64_t result = qword_100E70AF0;
  if (!qword_100E70AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AF0);
  }
  return result;
}

unint64_t sub_10038FBB8()
{
  unint64_t result = qword_100E70AF8;
  if (!qword_100E70AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70AF8);
  }
  return result;
}

unint64_t sub_10038FC08()
{
  unint64_t result = qword_100E70B00;
  if (!qword_100E70B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70B00);
  }
  return result;
}

unint64_t sub_10038FC54()
{
  unint64_t result = qword_100E70B08;
  if (!qword_100E70B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70B08);
  }
  return result;
}

void *sub_10038FCA0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      }
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10038FE5C(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
    if (!result)
    {
      long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_10038FF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_100390098(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1000C1E18(a1, a2);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_100178110((uint64_t)a1 + v6, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1003901E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9))
    {
      uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100390324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_100178110(a1 + v7, (uint64_t *)&unk_100EAA560);
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11))
      {
        uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100390488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10039049C);
}

uint64_t sub_10039049C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100390528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10039053C);
}

uint64_t sub_10039053C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SearchZeroKeywordView()
{
  uint64_t result = qword_100E70B68;
  if (!qword_100E70B68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100390608()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1003906A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003906BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v52 = type metadata accessor for LocalCoordinateSpace();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100109314();
  v49[1] = v3;
  type metadata accessor for DragGesture();
  sub_100179C0C();
  uint64_t v58 = v4;
  uint64_t v59 = v5;
  __chkstk_darwin(v4);
  sub_100109314();
  v49[0] = v6;
  sub_10017DF08(&qword_100E70BA0);
  sub_100179C0C();
  uint64_t v60 = v7;
  uint64_t v61 = v8;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v51 = v9;
  sub_10017DF08(&qword_100E70BA8);
  sub_100179C0C();
  uint64_t v62 = v10;
  uint64_t v63 = v11;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v53 = v12;
  uint64_t v13 = type metadata accessor for SearchZeroKeywordView();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10017DF08(&qword_100E70BB0);
  sub_100179C0C();
  uint64_t v56 = v17;
  __chkstk_darwin(v18);
  uint64_t v57 = sub_10017DF08(&qword_100E70BB8);
  sub_100179C0C();
  uint64_t v55 = v19;
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v50 = v21;
  uint64_t v22 = sub_10017DF08(&qword_100E70BC0);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Color.black.getter();
  uint64_t v26 = Color.opacity(_:)();
  swift_release();
  uint64_t v65 = (void *)v26;
  sub_100391128(v1, (uint64_t)v16);
  unint64_t v27 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = swift_allocObject();
  sub_100391190((uint64_t)v16, v28 + v27);
  View.onTapGesture(count:perform:)();
  swift_release();
  swift_release();
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  sub_100391128(v1, (uint64_t)v16);
  uint64_t v29 = swift_allocObject();
  sub_100391190((uint64_t)v16, v29 + v27);
  sub_100391288(&qword_100E70BC8, (void (*)(uint64_t))&type metadata accessor for DragGesture);
  sub_100391288(&qword_100E70BD0, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
  Gesture<>.onChanged(_:)();
  swift_release();
  sub_100162F0C();
  v32(v30, v31);
  sub_1001246C8(&qword_100E70BD8, &qword_100E70BA0);
  Gesture.onEnded(_:)();
  sub_100162F0C();
  v35(v33, v34);
  static GestureMask.all.getter();
  uint64_t v65 = &type metadata for Color;
  uint64_t v66 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  sub_1001246C8(&qword_100E70BE0, &qword_100E70BA8);
  uint64_t v36 = v50;
  View.gesture<A>(_:including:)();
  sub_100162F0C();
  v39(v37, v38);
  sub_100162F0C();
  v42(v40, v41);
  uint64_t v43 = static SafeAreaRegions.all.getter();
  LOBYTE(v26) = static Edge.Set.all.getter();
  uint64_t v44 = v55;
  uint64_t v45 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v25, v36, v57);
  uint64_t v46 = &v25[*(int *)(v23 + 44)];
  *(void *)uint64_t v46 = v43;
  v46[8] = v26;
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v36, v45);
  uint64_t v47 = v64;
  sub_1001262FC((uint64_t)v25, v64, &qword_100E70BC0);
  *(unsigned char *)(v47 + *(int *)(sub_10017DF08(&qword_100E70BE8) + 36)) = 1;
  return sub_100178110((uint64_t)v25, &qword_100E70BC0);
}

uint64_t sub_100390D24(void *a1)
{
  return sub_1007748C0();
}

uint64_t sub_100390D50(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E662F0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v24 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v24 - v18;
  type metadata accessor for SearchZeroKeywordView();
  uint64_t v25 = a2;
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v16, enum case for UserInterfaceSizeClass.compact(_:), v3);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v3);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1001262FC((uint64_t)v19, (uint64_t)v10, &qword_100E65ED8);
  sub_1001262FC((uint64_t)v16, v20, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v3) == 1)
  {
    sub_100178110((uint64_t)v16, &qword_100E65ED8);
    sub_100178110((uint64_t)v19, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v3) == 1) {
      return sub_100178110((uint64_t)v10, &qword_100E65ED8);
    }
  }
  else
  {
    sub_1001262FC((uint64_t)v10, (uint64_t)v13, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v20, v3);
      sub_100391288(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v6, v3);
      sub_100178110((uint64_t)v16, &qword_100E65ED8);
      sub_100178110((uint64_t)v19, &qword_100E65ED8);
      v23(v13, v3);
      uint64_t result = sub_100178110((uint64_t)v10, &qword_100E65ED8);
      if (v22) {
        return result;
      }
      goto LABEL_8;
    }
    sub_100178110((uint64_t)v16, &qword_100E65ED8);
    sub_100178110((uint64_t)v19, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  }
  sub_100178110((uint64_t)v10, &qword_100E662F0);
LABEL_8:
  sub_1001B1E64(v25, v25[3]);
  return sub_1007748C0();
}

uint64_t sub_100391128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchZeroKeywordView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100391190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchZeroKeywordView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003911F4()
{
  uint64_t v1 = type metadata accessor for SearchZeroKeywordView();
  sub_1001627C0(v1);
  uint64_t v3 = (void *)(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));

  return sub_100390D24(v3);
}

uint64_t sub_100391238(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SearchZeroKeywordView();
  sub_1001627C0(v3);
  uint64_t v5 = (void *)(v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));

  return sub_100390D50(a1, v5);
}

uint64_t sub_100391288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1003912D4()
{
  unint64_t result = qword_100E70BF0;
  if (!qword_100E70BF0)
  {
    sub_10018C6DC(&qword_100E70BE8);
    sub_100391350();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70BF0);
  }
  return result;
}

unint64_t sub_100391350()
{
  unint64_t result = qword_100E70BF8;
  if (!qword_100E70BF8)
  {
    sub_10018C6DC(&qword_100E70BC0);
    sub_10018C6DC(&qword_100E70BB0);
    sub_10018C6DC(&qword_100E70BA8);
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100E70BE0, &qword_100E70BA8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70BF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewPresentationKind()
{
  return &type metadata for LocationViewPresentationKind;
}

unint64_t sub_1003914BC()
{
  unint64_t result = qword_100E70C00;
  if (!qword_100E70C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70C00);
  }
  return result;
}

uint64_t sub_100391508()
{
  return sub_100391560((void (*)(void))type metadata accessor for LocationViewCollisionOptions, sub_10003E10C);
}

uint64_t sub_100391534()
{
  return sub_100391560((void (*)(void))&type metadata accessor for WeatherVFXConditionBackground, (uint64_t (*)(void))&WeatherVFXConditionBackground.init());
}

uint64_t sub_100391560(void (*a1)(void), uint64_t (*a2)(void))
{
  return a2();
}

void sub_1003915A8()
{
  sub_100162EA0();
  sub_10017DF08(&qword_100E70CC8);
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  sub_10017DF08(&qword_100E70CD0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for LocationPreviewViewModel(0);
  __chkstk_darwin(v11 - 8);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  type metadata accessor for LocationPreviewView();
  swift_retain();
  sub_10024EB10();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0(v14, 1, v6) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_10039977C();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_10039A968(v14, v10, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
    sub_1003917F8();
    sub_10006DF38(v5, v0, &qword_100E70CD0);
    swift_storeEnumTagMultiPayload();
    sub_10039977C();
    _ConditionalContent<>.init(storage:)();
    sub_10017DF4C(v5, &qword_100E70CD0);
    sub_10039AC74(v10, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  }
  sub_100162694();
}

void sub_1003917F8()
{
  sub_100162EA0();
  uint64_t v35 = v2;
  uint64_t v36 = v0;
  uint64_t v37 = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v4 - 8);
  sub_10011BFD8();
  uint64_t v5 = sub_10017DF08(&qword_100E70D08);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100E70CF8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E70CE8);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  *(void *)uint64_t v8 = swift_getKeyPath();
  v8[8] = 0;
  sub_100391AFC(v35, v36, (uint64_t)&v8[*(int *)(v6 + 44)]);
  sub_10024D364((uint64_t)v8, (uint64_t)v11, &qword_100E70D08);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006DF38((uint64_t)v11, v16, &qword_100E70D08);
  uint64_t v23 = v16 + *(int *)(v13 + 44);
  *(void *)uint64_t v23 = KeyPath;
  *(unsigned char *)(v23 + 8) = 1;
  sub_10017DF4C((uint64_t)v11, &qword_100E70D08);
  uint64_t v24 = swift_getKeyPath();
  sub_10006DF38(v16, v21, &qword_100E70CF8);
  uint64_t v25 = v21 + *(int *)(v18 + 44);
  *(void *)uint64_t v25 = v24;
  *(unsigned char *)(v25 + 8) = 0x80;
  sub_10017DF4C(v16, &qword_100E70CF8);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = enum case for UserInterfaceSizeClass.compact(_:);
  uint64_t v28 = type metadata accessor for UserInterfaceSizeClass();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 104))(v1, v27, v28);
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v28);
  uint64_t v30 = sub_10017DF08(&qword_100E70CD0);
  uint64_t v31 = v37;
  uint64_t v32 = (uint64_t *)(v37 + *(int *)(v30 + 36));
  uint64_t v33 = sub_10017DF08(&qword_100EAA7A0);
  sub_10006DF38(v1, (uint64_t)v32 + *(int *)(v33 + 28), &qword_100E65ED8);
  *uint64_t v32 = v26;
  sub_10006DF38(v21, v31, &qword_100E70CE8);
  sub_10017DF4C(v1, &qword_100E65ED8);
  sub_10017DF4C(v21, &qword_100E70CE8);
  sub_100162694();
}

uint64_t sub_100391AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v167 = a3;
  uint64_t v158 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v158);
  uint64_t v159 = (uint64_t *)((char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v154 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v152 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for LocationPreviewViewContentModel(0);
  uint64_t v171 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v172 = v7;
  uint64_t v175 = (uint64_t)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for LocationPreviewView();
  int v169 = *(uint64_t (**)(uint64_t))(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v170 = v8;
  uint64_t v176 = (uint64_t)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v173 = (uint64_t (*)(uint64_t))((char *)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10017DF08(&qword_100E70D28);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10017DF08(&qword_100E70D30);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = (void (*)(void))sub_10017DF08(&qword_100E70D38);
  uint64_t v129 = *((void *)v130 - 1);
  __chkstk_darwin(v130);
  uint64_t v18 = (char *)&v126 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_10017DF08(&qword_100E70D40);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v20 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_10017DF08(&qword_100E70D48);
  __chkstk_darwin(v174);
  uint64_t v134 = (uint64_t)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_10017DF08(&qword_100E70D50);
  uint64_t v139 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v136 = (uint64_t)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_10017DF08(&qword_100E70D58);
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v135 = (uint64_t)&v126 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_10017DF08(&qword_100E70D60);
  __chkstk_darwin(v133);
  uint64_t v140 = (char *)&v126 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E70D68);
  __chkstk_darwin(v25 - 8);
  uint64_t v143 = (char *)&v126 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_10017DF08(&qword_100E70D70);
  __chkstk_darwin(v142);
  uint64_t v144 = (uint64_t)&v126 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_10017DF08(&qword_100E70D78);
  __chkstk_darwin(v146);
  uint64_t v145 = (uint64_t)&v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10017DF08(&qword_100E70D80);
  uint64_t v149 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v148 = (char *)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_10017DF08(&qword_100E70D88);
  __chkstk_darwin(v147);
  uint64_t v151 = (char *)&v126 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_10017DF08(&qword_100E70D90);
  __chkstk_darwin(v162);
  uint64_t v155 = (uint64_t)&v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E70D98);
  uint64_t v163 = *(void *)(v32 - 8);
  uint64_t v164 = v32;
  __chkstk_darwin(v32);
  uint64_t v161 = (char *)&v126 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_10017DF08(&qword_100E70DA0);
  uint64_t v157 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v156 = (char *)&v126 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v13 = static Alignment.top.getter();
  v13[1] = v35;
  uint64_t v36 = sub_10017DF08(&qword_100E70DA8);
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  sub_100393088(a1, a2, (uint64_t)v13 + *(int *)(v36 + 44));
  id v39 = [self currentDevice];
  id v40 = [v39 userInterfaceIdiom];

  if (v40) {
    char v41 = Edge.Set.init(rawValue:)();
  }
  else {
    char v41 = static Edge.Set.all.getter();
  }
  char v42 = v41;
  uint64_t v43 = static SafeAreaRegions.all.getter();
  sub_10006DF38((uint64_t)v13, (uint64_t)v16, &qword_100E70D28);
  uint64_t v44 = &v16[*(int *)(v14 + 36)];
  *(void *)uint64_t v44 = v43;
  v44[8] = v42;
  sub_10017DF4C((uint64_t)v13, &qword_100E70D28);
  unint64_t v45 = sub_100399998();
  View.enableForegroundEffects()();
  sub_10017DF4C((uint64_t)v16, &qword_100E70D30);
  uint64_t v46 = *(void *)(v38 + 16);
  char v181 = *(unsigned char *)(v38 + 8);
  uint64_t v182 = v46;
  sub_10017DF08(&qword_100E65950);
  State.projectedValue.getter();
  uint64_t v177 = v14;
  unint64_t v178 = v45;
  swift_getOpaqueTypeConformance2();
  uint64_t v47 = v130;
  View.alert(isPresented:content:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, void (*)(void)))(v129 + 8))(v18, v47);
  sub_100394888();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  LOBYTE(v45) = v52;
  uint64_t v53 = v173;
  uint64_t v168 = v37;
  sub_100394734(v37, (uint64_t)v173);
  uint64_t v54 = v134;
  uint64_t v55 = v134 + *(int *)(v174 + 36);
  uint64_t v56 = type metadata accessor for SafariSheetModifier(0);
  sub_10006DF38((uint64_t)v53, v55 + *(int *)(v56 + 20), &qword_100E749B0);
  *(void *)uint64_t v55 = v49;
  *(void *)(v55 + 8) = v51;
  *(unsigned char *)(v55 + 16) = v45 & 1;
  uint64_t v57 = v131;
  uint64_t v58 = v132;
  (*(void (**)(uint64_t, char *, uint64_t))(v131 + 16))(v54, v20, v132);
  sub_10017DF4C((uint64_t)v53, &qword_100E749B0);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
  uint64_t v128 = v38;
  sub_100394888();
  uint64_t v130 = (void (*)(void))type metadata accessor for LocationPreviewView;
  uint64_t v59 = v176;
  sub_10039B85C(v38, v176, (void (*)(void))type metadata accessor for LocationPreviewView);
  uint64_t v173 = type metadata accessor for LocationPreviewViewContentModel;
  uint64_t v60 = v175;
  sub_10039B85C(v37, v175, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  uint64_t v61 = *((unsigned __int8 *)v169 + 80);
  uint64_t v132 = ((v61 + 16) & ~v61) + v170;
  uint64_t v62 = (v61 + 16) & ~v61;
  uint64_t v129 = v62;
  uint64_t v63 = v61 | 7;
  uint64_t v131 = v61 | 7;
  uint64_t v64 = *(unsigned __int8 *)(v171 + 80);
  uint64_t v65 = (v132 + v64) & ~v64;
  uint64_t v170 = v65;
  uint64_t v171 = v63 | v64;
  v172 += v65;
  uint64_t v66 = swift_allocObject();
  uint64_t v127 = type metadata accessor for LocationPreviewView;
  sub_10039A968(v59, v66 + v62, (void (*)(void))type metadata accessor for LocationPreviewView);
  int v169 = type metadata accessor for LocationPreviewViewContentModel;
  sub_10039A968(v60, v66 + v65, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  uint64_t v67 = sub_10017DF08(&qword_100E70DC0);
  unint64_t v68 = sub_100399ABC();
  unint64_t v69 = sub_100399BD8();
  uint64_t v70 = v136;
  uint64_t v71 = v174;
  View.formSheet<A>(isPresented:content:)();
  swift_release();
  swift_release();
  swift_release();
  sub_10017DF4C(v54, &qword_100E70D48);
  uint64_t v72 = v152;
  static AccessibilityChildBehavior.contain.getter();
  uint64_t v177 = v71;
  unint64_t v178 = v67;
  unint64_t v179 = v68;
  unint64_t v180 = v69;
  swift_getOpaqueTypeConformance2();
  uint64_t v73 = v135;
  uint64_t v74 = v141;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v153 + 8))(v72, v154);
  (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v70, v74);
  uint64_t v75 = v137;
  uint64_t v76 = (uint64_t)v140;
  uint64_t v77 = v138;
  (*(void (**)(char *, uint64_t, uint64_t))(v137 + 16))(v140, v73, v138);
  *(unsigned char *)(v76 + *(int *)(v133 + 36)) = 1;
  (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v77);
  uint64_t v78 = v168;
  uint64_t v79 = sub_10081BCB4();
  uint64_t v80 = (uint64_t)v159;
  uint64_t *v159 = v79;
  *(void *)(v80 + 8) = v81;
  type metadata accessor for AutomationViewInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v82 = (uint64_t)v143;
  sub_10048D0D4(v80, v83, v84, v85, v86, v87, v88, v89, v126, (uint64_t)v127, v128, v129, (uint64_t)v130, v131, v132, v133, v134, v135, v136,
    v137);
  sub_10039AC74(v80, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_10017DF4C(v76, &qword_100E70D60);
  uint64_t v90 = v128;
  uint64_t v91 = v176;
  uint64_t v92 = v130;
  sub_10039B85C(v128, v176, v130);
  uint64_t v93 = v175;
  sub_10039B85C(v78, v175, (void (*)(void))v173);
  uint64_t v94 = swift_allocObject();
  uint64_t v95 = v129;
  uint64_t v96 = v127;
  sub_10039A968(v91, v94 + v129, (void (*)(void))v127);
  sub_10039A968(v93, v94 + v170, (void (*)(void))v169);
  uint64_t v97 = v144;
  sub_10006DF38(v82, v144, &qword_100E70D68);
  uint64_t v98 = (uint64_t (**)())(v97 + *(int *)(v142 + 36));
  char *v98 = sub_10039A22C;
  v98[1] = (uint64_t (*)())v94;
  v98[2] = 0;
  v98[3] = 0;
  sub_10017DF4C(v82, &qword_100E70D68);
  sub_10039B85C(v90, v91, v92);
  sub_10039B85C(v78, v93, (void (*)(void))v173);
  uint64_t v99 = swift_allocObject();
  uint64_t v100 = v95;
  sub_10039A968(v91, v99 + v95, (void (*)(void))v96);
  sub_10039A968(v93, v99 + v170, (void (*)(void))v169);
  uint64_t v101 = v145;
  sub_10006DF38(v97, v145, &qword_100E70D70);
  uint64_t v102 = (void *)(v101 + *(int *)(v146 + 36));
  void *v102 = 0;
  v102[1] = 0;
  v102[2] = sub_10039A248;
  v102[3] = v99;
  sub_10017DF4C(v97, &qword_100E70D70);
  sub_10039B85C(v90, v91, v92);
  uint64_t v103 = swift_allocObject();
  sub_10039A968(v91, v103 + v100, (void (*)(void))v96);
  sub_10039A360((uint64_t)&unk_100E70F00);
  sub_10039A924((uint64_t)&unk_100E70F20);
  uint64_t v104 = v148;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10017DF4C(v101, &qword_100E70D78);
  type metadata accessor for WeatherVFXConditionBackground();
  sub_10039A924((uint64_t)&qword_100E70F28);
  uint64_t v105 = StateObject.wrappedValue.getter();
  uint64_t v106 = static ObservableObject.environmentStore.getter();
  uint64_t v107 = v149;
  uint64_t v108 = (uint64_t)v151;
  uint64_t v109 = v150;
  (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v151, v104, v150);
  uint64_t v110 = (uint64_t *)(v108 + *(int *)(v147 + 36));
  *uint64_t v110 = v106;
  v110[1] = v105;
  (*(void (**)(char *, uint64_t))(v107 + 8))(v104, v109);
  type metadata accessor for LocationViewCollisionOptions();
  sub_10039A924((uint64_t)&qword_100E6D0B8);
  uint64_t v111 = StateObject.wrappedValue.getter();
  uint64_t v112 = static ObservableObject.environmentStore.getter();
  uint64_t v113 = v155;
  sub_10006DF38(v108, v155, &qword_100E70D88);
  uint64_t v114 = v162;
  uint64_t v115 = (uint64_t *)(v113 + *(int *)(v162 + 36));
  uint64_t *v115 = v112;
  v115[1] = v111;
  uint64_t v116 = sub_10017DF4C(v108, &qword_100E70D88);
  __chkstk_darwin(v116);
  uint64_t v117 = sub_10017DF08(&qword_100E70F30);
  unint64_t v118 = sub_10039A5A0();
  uint64_t v119 = sub_10018C6DC(&qword_100E70F58);
  unint64_t v120 = sub_10039A788();
  uint64_t v177 = v119;
  unint64_t v178 = v120;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v122 = v161;
  View.toolbar<A>(content:)();
  sub_10017DF4C(v113, &qword_100E70D90);
  sub_10017DF08(&qword_100EAAC40);
  type metadata accessor for ToolbarPlacement();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static ToolbarPlacement.navigationBar.getter();
  uint64_t v177 = v114;
  unint64_t v178 = v117;
  unint64_t v179 = v118;
  unint64_t v180 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v123 = v156;
  uint64_t v124 = v164;
  View.toolbarBackground(_:for:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v163 + 8))(v122, v124);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v157 + 32))(v167, v123, v160);
}

uint64_t sub_100393088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v5 = sub_10017DF08(&qword_100E71028);
  __chkstk_darwin(v5 - 8);
  uint64_t v70 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v69 = (uint64_t *)((char *)&v55 - v8);
  uint64_t v9 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v66 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v56 = v11;
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v12 = v62;
  __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v55 - v15;
  uint64_t v17 = sub_10017DF08(&qword_100E71030);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v64 = (uint64_t *)((char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = sub_10017DF08(&qword_100E71038) - 8;
  __chkstk_darwin(v68);
  uint64_t v65 = (uint64_t)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v67 = (uint64_t)&v55 - v22;
  uint64_t v59 = static Color.clear.getter();
  uint64_t v23 = a1 + *(int *)(type metadata accessor for LocationPreviewViewContentModel(0) + 32);
  uint64_t v61 = a1;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v57 = v16;
  v24(v16, v23, v11);
  uint64_t v25 = type metadata accessor for LocationPreviewView();
  uint64_t v26 = *(int *)(v25 + 64);
  uint64_t v27 = (uint64_t *)(a2 + *(int *)(v25 + 60));
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  uint64_t v55 = v29;
  uint64_t v58 = v28;
  sub_10020D948(a2 + v26, (uint64_t)v73);
  uint64_t v63 = a2;
  type metadata accessor for WeatherVFXConditionBackground();
  sub_10039A924((uint64_t)&qword_100E70F28);
  uint64_t v30 = StateObject.wrappedValue.getter();
  uint64_t v31 = Namespace.wrappedValue.getter();
  sub_10081B8DC();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v36 = static Color.black.getter();
  uint64_t v37 = (uint64_t)v60;
  uint64_t v38 = v16;
  uint64_t v39 = v56;
  v24(v60, (uint64_t)v38, v56);
  sub_10020D948((uint64_t)v73, (uint64_t)v72);
  uint64_t v40 = v55;
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  LOBYTE(v54) = 0;
  uint64_t v41 = v66;
  sub_1000D9728(v37, v40, v58, (uint64_t)v72, v30, v31, v33, v35, v54, v36, v55, v56, (uint64_t)v57, v58, v59, (uint64_t)v60, v61, v62, v63,
    (uint64_t)v64,
    v65,
    v66);
  char v42 = v64;
  sub_10039B85C(v41, (uint64_t)v64 + *(int *)(v18 + 44), (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  void *v42 = v59;
  swift_retain();
  sub_10039AC74(v41, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v73);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v57, v39);
  swift_release();
  uint64_t v43 = static SafeAreaRegions.all.getter();
  LOBYTE(v35) = static Edge.Set.all.getter();
  uint64_t v44 = v65;
  sub_10006DF38((uint64_t)v42, v65, &qword_100E71030);
  uint64_t v45 = v44 + *(int *)(v68 + 44);
  *(void *)uint64_t v45 = v43;
  *(unsigned char *)(v45 + 8) = v35;
  sub_10017DF4C((uint64_t)v42, &qword_100E71030);
  uint64_t v46 = v67;
  sub_10024D364(v44, v67, &qword_100E71038);
  uint64_t v47 = static HorizontalAlignment.center.getter();
  uint64_t v48 = (uint64_t)v69;
  uint64_t *v69 = v47;
  *(void *)(v48 + 8) = 0;
  *(unsigned char *)(v48 + 16) = 0;
  uint64_t v49 = sub_10017DF08(&qword_100E71040);
  sub_10039366C(v63, v61, v48 + *(int *)(v49 + 44));
  sub_10006DF38(v46, v44, &qword_100E71038);
  uint64_t v50 = v70;
  sub_10006DF38(v48, v70, &qword_100E71028);
  uint64_t v51 = v71;
  sub_10006DF38(v44, v71, &qword_100E71038);
  uint64_t v52 = sub_10017DF08(&qword_100E71048);
  sub_10006DF38(v50, v51 + *(int *)(v52 + 48), &qword_100E71028);
  sub_10017DF4C(v48, &qword_100E71028);
  sub_10017DF4C(v46, &qword_100E71038);
  sub_10017DF4C(v50, &qword_100E71028);
  return sub_10017DF4C(v44, &qword_100E71038);
}

uint64_t sub_10039366C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v29 = a3;
  uint64_t v4 = type metadata accessor for LocationPreviewView();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v28 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = type metadata accessor for LocationPreviewViewContentModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = sub_10017DF08(&qword_100E71050);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - v13;
  id v15 = [self currentDevice];
  id v16 = [v15 userInterfaceIdiom];

  if (v16)
  {
    uint64_t v17 = sub_10017DF08(&qword_100E71058);
    uint64_t v18 = (uint64_t)v14;
    uint64_t v19 = 1;
  }
  else
  {
    *(void *)uint64_t v14 = static VerticalAlignment.center.getter();
    *((void *)v14 + 1) = 0;
    v14[16] = 1;
    uint64_t v20 = sub_10017DF08(&qword_100E71078);
    sub_100393A9C(v30, a2, (uint64_t)&v14[*(int *)(v20 + 44)]);
    uint64_t v17 = sub_10017DF08(&qword_100E71058);
    uint64_t v18 = (uint64_t)v14;
    uint64_t v19 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v18, v19, 1, v17);
  sub_10039B85C(a2, (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = swift_allocObject();
  sub_10039A968((uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  sub_10039B85C(v30, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for LocationPreviewView);
  unint64_t v23 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v24 = swift_allocObject();
  sub_10039A968((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, (void (*)(void))type metadata accessor for LocationPreviewView);
  sub_1006E9370((void (*)(long long *))sub_10039AFD4, (uint64_t)sub_10039B198, v24, (uint64_t)__dst);
  sub_10006DF38((uint64_t)__dst, (uint64_t)__src, &qword_100E71060);
  __src[97] = 1;
  sub_10017DF4C((uint64_t)__dst, &qword_100E71060);
  memcpy(__dst, __src, 0x62uLL);
  sub_10006DF38((uint64_t)v14, (uint64_t)v11, &qword_100E71050);
  sub_10006DF38((uint64_t)__dst, (uint64_t)__src, &qword_100E71068);
  uint64_t v25 = v29;
  sub_10006DF38((uint64_t)v11, v29, &qword_100E71050);
  uint64_t v26 = sub_10017DF08(&qword_100E71070);
  sub_10006DF38((uint64_t)__src, v25 + *(int *)(v26 + 48), &qword_100E71068);
  sub_10017DF4C((uint64_t)__dst, &qword_100E71068);
  sub_10017DF4C((uint64_t)v14, &qword_100E71050);
  sub_10017DF4C((uint64_t)__src, &qword_100E71068);
  return sub_10017DF4C((uint64_t)v11, &qword_100E71050);
}

uint64_t sub_100393A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v89 = a3;
  uint64_t v90 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v3 - 8);
  uint64_t v84 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for Location();
  uint64_t v92 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = v5;
  __chkstk_darwin(v6);
  uint64_t v91 = (char *)&v68 - v7;
  uint64_t v8 = sub_10017DF08(&qword_100E71080);
  __chkstk_darwin(v8 - 8);
  uint64_t v88 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v87 = (uint64_t)&v68 - v11;
  uint64_t v82 = type metadata accessor for LocationPreviewViewContentModel(0);
  uint64_t v86 = *(char **)(v82 - 8);
  uint64_t v12 = *((void *)v86 + 8);
  __chkstk_darwin(v82);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationPreviewView();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E70FB0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10017DF08(&qword_100E70F98);
  __chkstk_darwin(v94);
  unint64_t v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v68 - v25;
  sub_10039B85C(v90, (uint64_t)v17, (void (*)(void))type metadata accessor for LocationPreviewView);
  sub_10039B85C(v93, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  uint64_t v27 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v28 = (v27 + 16) & ~v27;
  uint64_t v29 = v86[80];
  uint64_t v74 = v16;
  uint64_t v75 = v12;
  uint64_t v30 = (v16 + v29 + v28) & ~v29;
  uint64_t v73 = v27;
  uint64_t v70 = v29;
  uint64_t v71 = v29 | v27;
  uint64_t v31 = swift_allocObject();
  uint64_t v76 = v17;
  sub_10039A968((uint64_t)v17, v31 + v28, (void (*)(void))type metadata accessor for LocationPreviewView);
  uint64_t v77 = v13;
  sub_10039A968((uint64_t)v13, v31 + v30, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  uint64_t v32 = sub_10017DF08(&qword_100E66298);
  unint64_t v33 = sub_10029F298();
  Button.init(action:label:)();
  uint64_t v34 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v72(v23, v21, v18);
  uint64_t v36 = (uint64_t *)&v23[*(int *)(v94 + 36)];
  *uint64_t v36 = KeyPath;
  v36[1] = v34;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v78 = v21;
  uint64_t v79 = v19 + 8;
  uint64_t v38 = v21;
  uint64_t v39 = (uint64_t)v23;
  uint64_t v80 = v18;
  uint64_t v40 = v18;
  uint64_t v41 = (uint64_t)v84;
  v37(v38, v40);
  uint64_t v86 = v26;
  uint64_t v42 = v93;
  sub_10024D364((uint64_t)v23, (uint64_t)v26, &qword_100E70F98);
  sub_10081B708(v41);
  uint64_t v43 = v85;
  if (_s7Weather24LocationCompositionStateOwet_0(v41, 1, v85) == 1)
  {
    sub_10017DF4C(v41, &qword_100E639E8);
LABEL_6:
    uint64_t v61 = 1;
    uint64_t v60 = v87;
    uint64_t v58 = v94;
    goto LABEL_7;
  }
  unint64_t v69 = v37;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
  v44(v91, v41, v43);
  if (*(unsigned char *)(v42 + *(int *)(v82 + 20)) != 1)
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v43);
    goto LABEL_6;
  }
  uint64_t v84 = (char *)v32;
  uint64_t v82 = (uint64_t)v44;
  uint64_t v45 = v73;
  uint64_t v68 = ~v73;
  uint64_t v46 = v70;
  uint64_t v47 = (uint64_t)v77;
  sub_10039B85C(v42, (uint64_t)v77, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  uint64_t v93 = v33;
  uint64_t v48 = (uint64_t)v76;
  sub_10039B85C(v90, (uint64_t)v76, (void (*)(void))type metadata accessor for LocationPreviewView);
  uint64_t v49 = v92;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v83, v91, v43);
  uint64_t v50 = (v46 + 16) & ~v46;
  uint64_t v51 = (v75 + v45 + v50) & v68;
  unint64_t v52 = (v51 + v74 + *(unsigned __int8 *)(v49 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v53 = swift_allocObject();
  sub_10039A968(v47, v53 + v50, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  sub_10039A968(v48, v53 + v51, (void (*)(void))type metadata accessor for LocationPreviewView);
  ((void (*)(unint64_t, char *, uint64_t))v82)(v53 + v52, v83, v43);
  uint64_t v54 = v78;
  Button.init(action:label:)();
  uint64_t v55 = static Color.white.getter();
  uint64_t v56 = swift_getKeyPath();
  uint64_t v57 = v80;
  v72((char *)v39, v54, v80);
  uint64_t v58 = v94;
  uint64_t v59 = (uint64_t *)(v39 + *(int *)(v94 + 36));
  *uint64_t v59 = v56;
  v59[1] = v55;
  v69(v54, v57);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v43);
  uint64_t v60 = v87;
  sub_10024D364(v39, v87, &qword_100E70F98);
  uint64_t v61 = 0;
LABEL_7:
  _s7Weather24LocationCompositionStateOwst_0(v60, v61, 1, v58);
  uint64_t v62 = (uint64_t)v86;
  sub_10006DF38((uint64_t)v86, v39, &qword_100E70F98);
  uint64_t v63 = v88;
  sub_10006DF38(v60, v88, &qword_100E71080);
  uint64_t v64 = v89;
  sub_10006DF38(v39, v89, &qword_100E70F98);
  uint64_t v65 = sub_10017DF08(&qword_100E71088);
  uint64_t v66 = v64 + *(int *)(v65 + 48);
  *(void *)uint64_t v66 = 0;
  *(unsigned char *)(v66 + 8) = 1;
  sub_10006DF38(v63, v64 + *(int *)(v65 + 64), &qword_100E71080);
  sub_10017DF4C(v60, &qword_100E71080);
  sub_10017DF4C(v62, &qword_100E70F98);
  sub_10017DF4C(v63, &qword_100E71080);
  return sub_10017DF4C(v39, &qword_100E70F98);
}

uint64_t sub_100394378(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PreviewLocation();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocationModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039B85C(a2, (uint64_t)v5, (void (*)(void))type metadata accessor for PreviewLocation);
  sub_1007D3C48((uint64_t)v5, (uint64_t)v9);
  sub_1000E3AE8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1006E9580(1, 0, 0);
}

double sub_1003944D0@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v3 = Namespace.wrappedValue.getter();
  *(void *)&double result = sub_1000F4094(v3, a2).n128_u64[0];
  return result;
}

uint64_t sub_10039451C@<X0>(uint64_t a1@<X8>)
{
  v14[3] = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E71020);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v4 = Text.init(_:tableName:bundle:comment:)();
  v14[1] = v5;
  void v14[2] = v4;
  v14[0] = v6;
  LocalizedStringKey.init(stringLiteral:)();
  Text.init(_:tableName:bundle:comment:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v7 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Alert.Button.default(_:action:)();
  sub_100191924(v7, v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for Alert.Button();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 0, 1, v12);
  return Alert.init(title:message:dismissButton:)();
}

uint64_t sub_100394734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationPreviewModalViewModel(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_10039B85C(a1 + *(int *)(v7 + 36), (uint64_t)v6, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 8)
  {
    if (!EnumCaseMultiPayload)
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a2, v6, v13);
      uint64_t v10 = a2;
      uint64_t v11 = 0;
      uint64_t v9 = v13;
      return _s7Weather24LocationCompositionStateOwst_0(v10, v11, 1, v9);
    }
    sub_10039AC74((uint64_t)v6, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
  }
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = a2;
  uint64_t v11 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v10, v11, 1, v9);
}

void sub_100394888()
{
  sub_100162EA0();
  v15[1] = v1;
  v15[2] = v2;
  uint64_t v3 = type metadata accessor for LocationPreviewView();
  uint64_t v4 = sub_100164920(v3);
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v4);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039B85C(v0, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationPreviewView);
  type metadata accessor for MainActor();
  uint64_t v10 = static MainActor.shared.getter();
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  sub_10039A968((uint64_t)v9, v12 + v11, (void (*)(void))type metadata accessor for LocationPreviewView);
  sub_10039B85C(v0, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationPreviewView);
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = &protocol witness table for MainActor;
  sub_10039A968((uint64_t)v9, v14 + v11, (void (*)(void))type metadata accessor for LocationPreviewView);
  Binding.init(get:set:)();
  sub_100162694();
}

uint64_t sub_100394A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E70DE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E70DC0);
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100396400(a2, (uint64_t)v8);
  uint64_t v12 = *(void *)(a1 + *(int *)(type metadata accessor for LocationPreviewView() + 40));
  type metadata accessor for ObservableResolver();
  sub_10039A924((uint64_t)&qword_100E70FD0);
  if (v12)
  {
    swift_retain();
    uint64_t v13 = static ObservableObject.environmentStore.getter();
    sub_10006DF38((uint64_t)v8, (uint64_t)v11, &qword_100E70DE0);
    uint64_t v14 = (uint64_t *)&v11[*(int *)(v9 + 36)];
    *uint64_t v14 = v13;
    v14[1] = v12;
    sub_10017DF4C((uint64_t)v8, &qword_100E70DE0);
    return sub_10024D364((uint64_t)v11, a3, &qword_100E70DC0);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100394C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationPreviewView();
  sub_1001B1E64((void *)(a3 + *(int *)(v6 + 56)), *(void *)(a3 + *(int *)(v6 + 56) + 24));
  return sub_100BFD128(a1, a2);
}

uint64_t sub_100394C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v82 = a3;
  uint64_t v83 = a2;
  uint64_t v79 = a1;
  uint64_t v78 = sub_10017DF08(&qword_100E70F78);
  __chkstk_darwin(v78);
  uint64_t v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v75 = (uint64_t)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for Location();
  uint64_t v74 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v73 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E70F80);
  __chkstk_darwin(v8 - 8);
  uint64_t v76 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v77 = (char *)&v66 - v11;
  uint64_t v12 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v12 - 8);
  uint64_t v68 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v15 = sub_10017DF08(&qword_100E70F88);
  uint64_t v84 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v66 - v19;
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)&v66 - v22;
  uint64_t v81 = sub_10017DF08(&qword_100E70F58);
  __chkstk_darwin(v81);
  uint64_t v25 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v66 - v27;
  id v29 = [self currentDevice];
  id v30 = [v29 userInterfaceIdiom];

  if (v30)
  {
    uint64_t v67 = v17;
    uint64_t v70 = v25;
    uint64_t v71 = v28;
    uint64_t v72 = v4;
    uint64_t v31 = static ToolbarItemPlacement.cancellationAction.getter();
    unint64_t v69 = &v66;
    __chkstk_darwin(v31);
    uint64_t v32 = v83;
    *(&v66 - 2) = v79;
    *(&v66 - 1) = v32;
    uint64_t v33 = sub_10017DF08(&qword_100E70F90);
    uint64_t v34 = sub_10018C6DC(&qword_100E70F98);
    uint64_t v35 = type metadata accessor for PlainButtonStyle();
    unint64_t v36 = sub_10039A828();
    unint64_t v37 = sub_10039A924((uint64_t)&qword_100E70FB8);
    uint64_t v85 = v34;
    unint64_t v86 = v35;
    unint64_t v87 = v36;
    unint64_t v88 = v37;
    swift_getOpaqueTypeConformance2();
    uint64_t v66 = v33;
    ToolbarItem<>.init(placement:content:)();
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v23, v20, v15);
    uint64_t v38 = v75;
    sub_10081B708(v75);
    uint64_t v39 = v80;
    uint64_t v40 = v15;
    uint64_t v41 = v23;
    if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v80) == 1)
    {
      sub_10017DF4C(v38, &qword_100E639E8);
      uint64_t v43 = (uint64_t)v77;
      uint64_t v42 = v78;
      uint64_t v44 = v72;
      uint64_t v45 = (uint64_t)v70;
    }
    else
    {
      uint64_t v48 = v73;
      uint64_t v47 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v73, v38, v39);
      uint64_t v49 = type metadata accessor for LocationPreviewViewContentModel(0);
      uint64_t v43 = (uint64_t)v77;
      uint64_t v45 = (uint64_t)v70;
      if (*(unsigned char *)(v83 + *(int *)(v49 + 20)) == 1)
      {
        uint64_t v50 = static ToolbarItemPlacement.primaryAction.getter();
        __chkstk_darwin(v50);
        uint64_t v51 = v79;
        *(&v66 - 4) = v83;
        *(&v66 - 3) = v51;
        *(&v66 - 2) = (uint64_t)v48;
        unint64_t v52 = v67;
        ToolbarItem<>.init(placement:content:)();
        unint64_t v53 = sub_10024D5E4((uint64_t)&unk_100E70FC8);
        uint64_t v54 = v48;
        uint64_t v55 = v76;
        static ToolbarContentBuilder.buildBlock<A>(_:)();
        uint64_t v56 = sub_10017DF08(&qword_100E70FC0);
        _s7Weather24LocationCompositionStateOwst_0(v55, 0, 1, v56);
        uint64_t v85 = v40;
        unint64_t v86 = v53;
        swift_getOpaqueTypeConformance2();
        static ToolbarContentBuilder.buildIf<A>(_:)();
        sub_10017DF4C(v55, &qword_100E70F80);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v40);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v54, v80);
        uint64_t v42 = v78;
        uint64_t v44 = v72;
LABEL_9:
        uint64_t v60 = (uint64_t)&v44[*(int *)(v42 + 48)];
        uint64_t v61 = v84;
        uint64_t v62 = v41;
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v44, v41, v40);
        uint64_t v63 = v43;
        sub_10006DF38(v43, v60, &qword_100E70F80);
        TupleToolbarContent.init(_:)();
        uint64_t v64 = sub_10017DF08(&qword_100E70F70);
        _s7Weather24LocationCompositionStateOwst_0(v45, 0, 1, v64);
        sub_10024D5E4((uint64_t)&unk_100E70F68);
        uint64_t v28 = v71;
        static ToolbarContentBuilder.buildIf<A>(_:)();
        sub_10017DF4C(v45, &qword_100E70F58);
        sub_10017DF4C(v63, &qword_100E70F80);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v40);
        goto LABEL_10;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v39);
      uint64_t v42 = v78;
      uint64_t v44 = v72;
    }
    uint64_t v57 = sub_10017DF08(&qword_100E70FC0);
    uint64_t v58 = v76;
    _s7Weather24LocationCompositionStateOwst_0(v76, 1, 1, v57);
    unint64_t v59 = sub_10024D5E4((uint64_t)&unk_100E70FC8);
    uint64_t v85 = v40;
    unint64_t v86 = v59;
    swift_getOpaqueTypeConformance2();
    static ToolbarContentBuilder.buildIf<A>(_:)();
    sub_10017DF4C(v58, &qword_100E70F80);
    goto LABEL_9;
  }
  uint64_t v46 = sub_10017DF08(&qword_100E70F70);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 1, 1, v46);
  sub_10024D5E4((uint64_t)&unk_100E70F68);
  static ToolbarContentBuilder.buildIf<A>(_:)();
  sub_10017DF4C((uint64_t)v25, &qword_100E70F58);
LABEL_10:
  sub_10039A788();
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return sub_10017DF4C((uint64_t)v28, &qword_100E70F58);
}

uint64_t sub_100395598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v45 = a3;
  uint64_t v4 = type metadata accessor for PlainButtonStyle();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocationPreviewViewContentModel(0);
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v35 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationPreviewView();
  uint64_t v10 = v9 - 8;
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v34 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10017DF08(&qword_100E70FB0);
  uint64_t v13 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E70F98);
  __chkstk_darwin(v40);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10017DF08(&qword_100E70F90);
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  unint64_t v37 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039B85C(a1, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationPreviewView);
  sub_10039B85C(v36, v8, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  unint64_t v19 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v20 = (v11 + *(unsigned __int8 *)(v35 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v21 = swift_allocObject();
  sub_10039A968((uint64_t)v12, v21 + v19, (void (*)(void))type metadata accessor for LocationPreviewView);
  sub_10039A968(v8, v21 + v20, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  sub_10017DF08(&qword_100E66298);
  sub_10029F298();
  Button.init(action:label:)();
  uint64_t v22 = a1 + *(int *)(v10 + 44);
  uint64_t v23 = *(void *)v22;
  LOBYTE(v21) = *(unsigned char *)(v22 + 8);
  sub_100195B7C(*(void *)v22, v21);
  sub_100149AE8();
  LOBYTE(v8) = v24;
  sub_10018F6D8(v23, v21);
  if (v8) {
    uint64_t v25 = static Color.black.getter();
  }
  else {
    uint64_t v25 = static Color.white.getter();
  }
  uint64_t v26 = v25;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = v38;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v38);
  id v29 = (uint64_t *)&v17[*(int *)(v40 + 36)];
  *id v29 = KeyPath;
  v29[1] = v26;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  id v30 = v42;
  PlainButtonStyle.init()();
  sub_10039A828();
  sub_10039A924((uint64_t)&qword_100E70FB8);
  uint64_t v31 = v37;
  uint64_t v32 = v44;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v32);
  sub_10017DF4C((uint64_t)v17, &qword_100E70F98);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v45, v31, v41);
}

uint64_t sub_100395B08(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for LocationPreviewView();
  sub_1001B1E64((void *)(a1 + *(int *)(v6 + 56)), *(void *)(a1 + *(int *)(v6 + 56) + 24));
  return a3(a2);
}

double sub_100395B60@<D0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  char v9 = static Edge.Set.all.getter();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  return sub_10018901C(v9);
}

uint64_t sub_100395C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v44 = a2;
  uint64_t v60 = a4;
  uint64_t v6 = type metadata accessor for PlainButtonStyle();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  __chkstk_darwin(v6);
  uint64_t v57 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for Location();
  uint64_t v8 = *(void *)(v48 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v48);
  uint64_t v10 = type metadata accessor for LocationPreviewView();
  uint64_t v11 = v10 - 8;
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v47 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationPreviewViewContentModel(0);
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v45 + 64);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E70FB0);
  uint64_t v52 = *(void *)(v17 - 8);
  uint64_t v53 = v17;
  __chkstk_darwin(v17);
  uint64_t v46 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10017DF08(&qword_100E70F98);
  __chkstk_darwin(v55);
  uint64_t v49 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10017DF08(&qword_100E70F90);
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v51 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039B85C(a1, (uint64_t)v16, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  sub_10039B85C(a2, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationPreviewView);
  uint64_t v21 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v21, v50, v48);
  unint64_t v23 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  unint64_t v24 = (v15 + *(unsigned __int8 *)(v47 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v25 = (v12 + *(unsigned __int8 *)(v8 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v26 = swift_allocObject();
  sub_10039A968((uint64_t)v16, v26 + v23, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  sub_10039A968((uint64_t)v13, v26 + v24, (void (*)(void))type metadata accessor for LocationPreviewView);
  unint64_t v27 = v26 + v25;
  uint64_t v28 = v46;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v27, v21, v22);
  sub_10017DF08(&qword_100E66298);
  sub_10029F298();
  Button.init(action:label:)();
  uint64_t v29 = v44 + *(int *)(v11 + 44);
  uint64_t v30 = *(void *)v29;
  LOBYTE(v8) = *(unsigned char *)(v29 + 8);
  sub_100195B7C(*(void *)v29, v8);
  sub_100149AE8();
  LOBYTE(v23) = v31;
  sub_10018F6D8(v30, v8);
  if (v23) {
    uint64_t v32 = static Color.black.getter();
  }
  else {
    uint64_t v32 = static Color.white.getter();
  }
  uint64_t v33 = v32;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v52;
  uint64_t v35 = v53;
  uint64_t v37 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v28, v53);
  uint64_t v38 = (uint64_t *)(v37 + *(int *)(v55 + 36));
  *uint64_t v38 = KeyPath;
  v38[1] = v33;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v35);
  uint64_t v39 = v57;
  PlainButtonStyle.init()();
  sub_10039A828();
  sub_10039A924((uint64_t)&qword_100E70FB8);
  uint64_t v40 = v51;
  uint64_t v41 = v59;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v41);
  sub_10017DF4C(v37, &qword_100E70F98);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v54 + 32))(v60, v40, v56);
}

uint64_t sub_100396258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationPreviewViewContentModel(0);
  if (*(unsigned char *)(a1 + *(int *)(v6 + 28)))
  {
    sub_10017DF08(&qword_100E65950);
    return State.wrappedValue.setter();
  }
  else
  {
    uint64_t v8 = v6;
    uint64_t v9 = type metadata accessor for LocationPreviewView();
    sub_1001B1E64((void *)(a2 + *(int *)(v9 + 56)), *(void *)(a2 + *(int *)(v9 + 56) + 24));
    return sub_100BFD430(a3, *(unsigned char *)(a1 + *(int *)(v8 + 24)));
  }
}

double sub_10039630C@<D0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.Weight.bold.getter();
  uint64_t v7 = Text.fontWeight(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_100191924(v2, v4, v6);
  swift_bridgeObjectRelease();
  char v14 = static Edge.Set.all.getter();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return sub_10018901C(v14);
}

uint64_t sub_100396400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v57 = sub_10017DF08(&qword_100E70FD8);
  __chkstk_darwin(v57);
  uint64_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10017DF08(&qword_100E70EC0);
  __chkstk_darwin(v62);
  uint64_t v58 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NewsArticleView();
  uint64_t v56 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10017DF08(&qword_100E70ED0);
  __chkstk_darwin(v59);
  char v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v14 = type metadata accessor for NewsArticle();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v60 = sub_10017DF08(&qword_100E70FE0);
  __chkstk_darwin(v60);
  uint64_t v61 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10017DF08(&qword_100E70E80);
  __chkstk_darwin(v66);
  uint64_t v63 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10017DF08(&qword_100E70FE8);
  __chkstk_darwin(v68);
  uint64_t v70 = (uint64_t)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10017DF08(&qword_100E70FF0);
  __chkstk_darwin(v64);
  uint64_t v65 = (uint64_t)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10017DF08(&qword_100E70E00);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for LocationPreviewModalViewModel(0);
  __chkstk_darwin(v22);
  unint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_10039B85C(a1 + *(int *)(v25 + 36), (uint64_t)v24, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10039A968((uint64_t)v24, (uint64_t)v16, (void (*)(void))type metadata accessor for NewsArticle);
      sub_10017DF08(&qword_100E66F98);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_100C251B0;
      uint64_t v28 = v16[1];
      *(void *)(v27 + 32) = *v16;
      *(void *)(v27 + 40) = v28;
      swift_bridgeObjectRetain();
      NewsArticleView.init(identifiers:)();
      LOBYTE(v27) = static Edge.Set.all.getter();
      uint64_t v29 = v56;
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v10, v8, v6);
      v10[*(int *)(v59 + 36)] = v27;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
      sub_10024D364((uint64_t)v10, (uint64_t)v13, &qword_100E70ED0);
      sub_10006DF38((uint64_t)v13, (uint64_t)v4, &qword_100E70ED0);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70EE8);
      sub_10039A17C();
      sub_10024D5E4((uint64_t)&unk_100E70EE0);
      uint64_t v30 = (uint64_t)v58;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v30, v61, &qword_100E70EC0);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70E90);
      sub_10039A01C();
      sub_10039A0DC();
      uint64_t v31 = (uint64_t)v63;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v30, &qword_100E70EC0);
      sub_10006DF38(v31, v65, &qword_100E70E80);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70E10);
      sub_100399DA0();
      sub_100399FE0();
      uint64_t v32 = (uint64_t)v67;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v31, &qword_100E70E80);
      sub_10006DF38(v32, v70, &qword_100E70E00);
      swift_storeEnumTagMultiPayload();
      sub_100399DDC((uint64_t)&unk_100E70DF8);
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v32, &qword_100E70E00);
      sub_10017DF4C((uint64_t)v13, &qword_100E70ED0);
      return sub_10039AC74((uint64_t)v16, (void (*)(void))type metadata accessor for NewsArticle);
    case 2u:
      goto LABEL_3;
    case 3u:
      uint64_t v33 = sub_10017DF08(&qword_100E71018);
      *(void *)&v76[80] = sub_100874A40;
      *(void *)&v76[88] = 0;
      v76[96] = 0;
      *(void *)uint64_t v76 = v33;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v72, &qword_100E6F2A0);
      if (!*(void *)&v72[24])
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        JUMPOUT(0x100397B70);
      }
      sub_1001262E4((long long *)v72, (uint64_t)&v76[24]);
      *(void *)&v76[8] = sub_100397B98;
      *(void *)&v76[16] = 0;
      uint64_t v34 = Dictionary.init(dictionaryLiteral:)();
      *(void *)&v76[64] = _swiftEmptyArrayStorage;
      *(void *)&v76[72] = v34;
      memcpy(__dst, v76, 0x61uLL);
      uint64_t v35 = &qword_100E70E30;
      sub_10006DF38((uint64_t)__dst, (uint64_t)v76, &qword_100E70E30);
      char v77 = 0;
      sub_10017DF08(&qword_100E70E30);
      sub_10017DF08(&qword_100E70E40);
      sub_10024D5E4((uint64_t)&unk_100E70E28);
      sub_10024D5E4((uint64_t)&unk_100E70E38);
      goto LABEL_13;
    case 4u:
      uint64_t v36 = sub_10017DF08(&qword_100E64768);
      *(void *)&v76[80] = sub_100874A34;
      *(void *)&v76[88] = 0;
      v76[96] = 0;
      *(void *)uint64_t v76 = v36;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v72, &qword_100E6F2A0);
      if (!*(void *)&v72[24]) {
        goto LABEL_40;
      }
      sub_1001262E4((long long *)v72, (uint64_t)&v76[24]);
      *(void *)&v76[8] = sub_100397BB0;
      *(void *)&v76[16] = 0;
      uint64_t v37 = Dictionary.init(dictionaryLiteral:)();
      *(void *)&v76[64] = _swiftEmptyArrayStorage;
      *(void *)&v76[72] = v37;
      memcpy(__dst, v76, 0x61uLL);
      uint64_t v35 = &qword_100E70E40;
      sub_10006DF38((uint64_t)__dst, (uint64_t)v76, &qword_100E70E40);
      char v77 = 1;
      sub_10017DF08(&qword_100E70E30);
      sub_10017DF08(&qword_100E70E40);
      sub_10024D5E4((uint64_t)&unk_100E70E28);
      sub_10024D5E4((uint64_t)&unk_100E70E38);
LABEL_13:
      _ConditionalContent<>.init(storage:)();
      uint64_t v38 = &qword_100E70E20;
      sub_10006DF38((uint64_t)v75, (uint64_t)v72, &qword_100E70E20);
      char v74 = 0;
      sub_10017DF08(&qword_100E70E20);
      goto LABEL_23;
    case 5u:
      uint64_t v39 = sub_10017DF08(&qword_100E71010);
      *(void *)&v76[80] = sub_100874A28;
      *(void *)&v76[88] = 0;
      v76[96] = 0;
      *(void *)uint64_t v76 = v39;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v72, &qword_100E6F2A0);
      if (!*(void *)&v72[24]) {
        goto LABEL_41;
      }
      sub_1001262E4((long long *)v72, (uint64_t)&v76[24]);
      *(void *)&v76[8] = sub_100397BC8;
      *(void *)&v76[16] = 0;
      uint64_t v40 = Dictionary.init(dictionaryLiteral:)();
      *(void *)&v76[64] = _swiftEmptyArrayStorage;
      *(void *)&v76[72] = v40;
      memcpy(__dst, v76, 0x61uLL);
      uint64_t v35 = &qword_100E70E60;
      sub_10006DF38((uint64_t)__dst, (uint64_t)v76, &qword_100E70E60);
      char v77 = 0;
      sub_10017DF08(&qword_100E70E60);
      sub_10017DF08(&qword_100E70E70);
      sub_10024D5E4((uint64_t)&unk_100E70E58);
      sub_10024D5E4((uint64_t)&unk_100E70E68);
      _ConditionalContent<>.init(storage:)();
      uint64_t v38 = &qword_100E70E50;
      sub_10006DF38((uint64_t)v75, (uint64_t)v72, &qword_100E70E50);
      char v74 = 1;
      goto LABEL_22;
    case 6u:
      uint64_t v41 = sub_10017DF08(&qword_100E71008);
      *(void *)&v76[80] = sub_100874A1C;
      *(void *)&v76[88] = 0;
      v76[96] = 0;
      *(void *)uint64_t v76 = v41;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v72, &qword_100E6F2A0);
      if (!*(void *)&v72[24]) {
        goto LABEL_42;
      }
      sub_1001262E4((long long *)v72, (uint64_t)&v76[24]);
      *(void *)&v76[8] = sub_100397C24;
      *(void *)&v76[16] = 0;
      uint64_t v42 = Dictionary.init(dictionaryLiteral:)();
      *(void *)&v76[64] = _swiftEmptyArrayStorage;
      *(void *)&v76[72] = v42;
      memcpy(__dst, v76, 0x61uLL);
      uint64_t v35 = &qword_100E70E70;
      sub_10006DF38((uint64_t)__dst, (uint64_t)v76, &qword_100E70E70);
      char v77 = 1;
      sub_10017DF08(&qword_100E70E60);
      sub_10017DF08(&qword_100E70E70);
      sub_10024D5E4((uint64_t)&unk_100E70E58);
      sub_10024D5E4((uint64_t)&unk_100E70E68);
      _ConditionalContent<>.init(storage:)();
      uint64_t v38 = &qword_100E70E50;
      sub_10006DF38((uint64_t)v75, (uint64_t)v72, &qword_100E70E50);
      char v74 = 1;
LABEL_22:
      sub_10017DF08(&qword_100E70E20);
LABEL_23:
      sub_10017DF08(&qword_100E70E50);
      sub_100399E60();
      sub_100399F20();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C((uint64_t)v75, v38);
      sub_10006DF38((uint64_t)v76, v65, &qword_100E70E10);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70E10);
      sub_100399DA0();
      sub_100399FE0();
      uint64_t v43 = (uint64_t)v67;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C((uint64_t)v76, &qword_100E70E10);
      sub_10006DF38(v43, v70, &qword_100E70E00);
      swift_storeEnumTagMultiPayload();
      sub_100399DDC((uint64_t)&unk_100E70DF8);
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v43, &qword_100E70E00);
      uint64_t v44 = __dst;
      goto LABEL_37;
    case 7u:
      uint64_t v45 = sub_10017DF08(&qword_100E6CEF0);
      *(void *)&v76[80] = sub_100874A10;
      *(void *)&v76[88] = 0;
      v76[96] = 0;
      *(void *)uint64_t v76 = v45;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v72, &qword_100E6F2A0);
      if (!*(void *)&v72[24]) {
        goto LABEL_43;
      }
      sub_1001262E4((long long *)v72, (uint64_t)&v76[24]);
      *(void *)&v76[8] = sub_100397C58;
      *(void *)&v76[16] = 0;
      uint64_t v46 = Dictionary.init(dictionaryLiteral:)();
      *(void *)&v76[64] = _swiftEmptyArrayStorage;
      *(void *)&v76[72] = v46;
      memcpy(v75, v76, 0x61uLL);
      uint64_t v35 = &qword_100E70EA0;
      sub_10006DF38((uint64_t)v75, (uint64_t)v72, &qword_100E70EA0);
      char v73 = 0;
      sub_10017DF08(&qword_100E70EA0);
      sub_10017DF08(&qword_100E70EB0);
      sub_10024D5E4((uint64_t)&unk_100E70E98);
      sub_10024D5E4((uint64_t)&unk_100E70EA8);
      goto LABEL_36;
    case 8u:
      uint64_t v52 = sub_10017DF08(&qword_100E71000);
      *(void *)&v76[80] = sub_100874A04;
      *(void *)&v76[88] = 0;
      v76[96] = 0;
      *(void *)uint64_t v76 = v52;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v72, &qword_100E6F2A0);
      if (!*(void *)&v72[24]) {
        goto LABEL_45;
      }
      sub_1001262E4((long long *)v72, (uint64_t)&v76[24]);
      *(void *)&v76[8] = sub_100397C8C;
      *(void *)&v76[16] = 0;
      uint64_t v53 = Dictionary.init(dictionaryLiteral:)();
      *(void *)&v76[64] = _swiftEmptyArrayStorage;
      *(void *)&v76[72] = v53;
      memcpy(v75, v76, 0x61uLL);
      uint64_t v35 = &qword_100E70EB0;
      sub_10006DF38((uint64_t)v75, (uint64_t)v72, &qword_100E70EB0);
      char v73 = 1;
      sub_10017DF08(&qword_100E70EA0);
      sub_10017DF08(&qword_100E70EB0);
      sub_10024D5E4((uint64_t)&unk_100E70E98);
      sub_10024D5E4((uint64_t)&unk_100E70EA8);
LABEL_36:
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38((uint64_t)v76, v61, &qword_100E70E90);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70E90);
      sub_10039A01C();
      sub_10039A0DC();
      uint64_t v54 = (uint64_t)v63;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C((uint64_t)v76, &qword_100E70E90);
      sub_10006DF38(v54, v65, &qword_100E70E80);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70E10);
      sub_100399DA0();
      sub_100399FE0();
      uint64_t v55 = (uint64_t)v67;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v54, &qword_100E70E80);
      sub_10006DF38(v55, v70, &qword_100E70E00);
      swift_storeEnumTagMultiPayload();
      sub_100399DDC((uint64_t)&unk_100E70DF8);
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v55, &qword_100E70E00);
      uint64_t v44 = v75;
      goto LABEL_37;
    case 9u:
      uint64_t v47 = sub_10017DF08(&qword_100E70FF8);
      *(void *)&v72[80] = sub_1008749F8;
      *(void *)&v72[88] = 0;
      v72[96] = 0;
      *(void *)uint64_t v72 = v47;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v76, &qword_100E6F2A0);
      if (!*(void *)&v76[24]) {
        goto LABEL_44;
      }
      sub_1001262E4((long long *)v76, (uint64_t)&v72[24]);
      *(void *)&v72[8] = sub_100397CA4;
      *(void *)&v72[16] = 0;
      uint64_t v48 = Dictionary.init(dictionaryLiteral:)();
      *(void *)&v72[64] = _swiftEmptyArrayStorage;
      *(void *)&v72[72] = v48;
      memcpy(v76, v72, sizeof(v76));
      uint64_t v35 = &qword_100E70EE8;
      sub_10006DF38((uint64_t)v76, (uint64_t)v4, &qword_100E70EE8);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70EE8);
      sub_10039A17C();
      sub_10024D5E4((uint64_t)&unk_100E70EE0);
      uint64_t v49 = (uint64_t)v58;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v49, v61, &qword_100E70EC0);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70E90);
      sub_10039A01C();
      sub_10039A0DC();
      uint64_t v50 = (uint64_t)v63;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v49, &qword_100E70EC0);
      sub_10006DF38(v50, v65, &qword_100E70E80);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E70E10);
      sub_100399DA0();
      sub_100399FE0();
      uint64_t v51 = (uint64_t)v67;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v50, &qword_100E70E80);
      sub_10006DF38(v51, v70, &qword_100E70E00);
      swift_storeEnumTagMultiPayload();
      sub_100399DDC((uint64_t)&unk_100E70DF8);
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v51, &qword_100E70E00);
      uint64_t v44 = v76;
LABEL_37:
      uint64_t result = sub_10017DF4C((uint64_t)v44, v35);
      break;
    default:
      sub_10039AC74((uint64_t)v24, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
LABEL_3:
      swift_storeEnumTagMultiPayload();
      sub_100399DDC((uint64_t)&unk_100E70DF8);
      uint64_t result = _ConditionalContent<>.init(storage:)();
      break;
  }
  return result;
}

uint64_t sub_100397B98(void *a1)
{
  return sub_100397BE0(a1, (uint64_t (*)(void))sub_1009B53C0);
}

uint64_t sub_100397BB0(void *a1)
{
  return sub_100397CBC(a1, (uint64_t (*)(void))sub_1006C8F68);
}

uint64_t sub_100397BC8(void *a1)
{
  return sub_100397BE0(a1, (uint64_t (*)(void))sub_1008E3F50);
}

uint64_t sub_100397BE0(void *a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100397C24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100656950(a2);
}

uint64_t sub_100397C58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003FDC74(a2);
}

uint64_t sub_100397C8C(void *a1)
{
  return sub_100397CBC(a1, (uint64_t (*)(void))sub_1005FA314);
}

uint64_t sub_100397CA4(void *a1)
{
  return sub_100397CBC(a1, (uint64_t (*)(void))sub_1006A1DDC);
}

uint64_t sub_100397CBC(void *a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100397D00@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationPreviewModalViewModel(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationPreviewViewContentModel(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocationPreviewViewModel(0);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationPreviewView();
  swift_retain();
  sub_10024EB10();
  swift_release();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v5);
  if (result == 1)
  {
    BOOL v12 = 0;
  }
  else
  {
    sub_10039A968((uint64_t)v10, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
    sub_10039B85C((uint64_t)&v7[*(int *)(v5 + 36)], (uint64_t)v4, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    BOOL v12 = 0;
    if ((EnumCaseMultiPayload - 2) >= 8)
    {
      BOOL v12 = EnumCaseMultiPayload == 0;
      sub_10039AC74((uint64_t)v4, (void (*)(void))type metadata accessor for LocationPreviewModalViewModel);
    }
    uint64_t result = sub_10039AC74((uint64_t)v7, (void (*)(void))type metadata accessor for LocationPreviewViewContentModel);
  }
  *a1 = v12;
  return result;
}

unsigned char *sub_100397F10(unsigned char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*result & 1) == 0)
  {
    uint64_t v5 = type metadata accessor for LocationPreviewView();
    sub_1001B1E64((void *)(a4 + *(int *)(v5 + 56)), *(void *)(a4 + *(int *)(v5 + 56) + 24));
    return (unsigned char *)sub_100BFD354();
  }
  return result;
}

uint64_t sub_100397F58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationPreviewViewModel(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationPreviewView();
  swift_retain();
  sub_10024EB10();
  swift_release();
  char v5 = sub_1006C7A0C();
  uint64_t result = sub_10039AC74((uint64_t)v4, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
  *a1 = v5 & 1;
  return result;
}

uint64_t sub_100398028(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for LocationPreviewViewModel(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationPreviewView();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_10039B85C(a4, (uint64_t)v11, (void (*)(void))type metadata accessor for LocationPreviewView);
  if (a1) {
    return sub_10039AC74((uint64_t)v11, (void (*)(void))type metadata accessor for LocationPreviewView);
  }
  swift_retain();
  sub_10024EB10();
  swift_release();
  char v13 = sub_1006C7A0C();
  sub_10039AC74((uint64_t)v8, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
  uint64_t result = sub_10039AC74((uint64_t)v11, (void (*)(void))type metadata accessor for LocationPreviewView);
  if (v13)
  {
    sub_1001B1E64((void *)(a4 + *(int *)(v9 + 56)), *(void *)(a4 + *(int *)(v9 + 56) + 24));
    return sub_100BFD354();
  }
  return result;
}

uint64_t sub_1003981BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, long long *a9, uint64_t a10, uint64_t a11, long long *a12)
{
  *(void *)a8 = 0;
  State.init(wrappedValue:)();
  *(unsigned char *)(a8 + 8) = v31;
  *(void *)(a8 + 16) = v32;
  uint64_t v20 = (int *)type metadata accessor for LocationPreviewView();
  uint64_t v21 = (uint64_t *)(a8 + v20[6]);
  *uint64_t v21 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a8 + v20[7];
  *(void *)uint64_t v22 = swift_getKeyPath();
  *(unsigned char *)(v22 + 8) = 0;
  sub_10024D364(a1, a8 + v20[8], (uint64_t *)&unk_100EAA530);
  uint64_t v23 = a8 + v20[9];
  *(void *)uint64_t v23 = a2;
  *(unsigned char *)(v23 + 8) = a3 & 1;
  unint64_t v24 = (void *)(a8 + v20[10]);
  *unint64_t v24 = a4;
  v24[1] = a5;
  uint64_t v25 = a8 + v20[11];
  *(void *)uint64_t v25 = a6;
  *(void *)(v25 + 8) = a7;
  *(unsigned char *)(v25 + 16) = 0;
  uint64_t v26 = a8 + v20[12];
  *(void *)uint64_t v26 = sub_100391534;
  *(void *)(v26 + 8) = 0;
  *(unsigned char *)(v26 + 16) = 0;
  uint64_t v27 = (uint64_t *)(a8 + v20[13]);
  sub_10017DF08(&qword_100E64960);
  sub_10024D5E4((uint64_t)&unk_100E64968);
  *uint64_t v27 = ObservedObject.init(wrappedValue:)();
  v27[1] = v28;
  sub_1001262E4(a9, a8 + v20[14]);
  uint64_t v29 = (void *)(a8 + v20[15]);
  *uint64_t v29 = a10;
  v29[1] = a11;
  return sub_1001262E4(a12, a8 + v20[16]);
}

void *sub_1003983CC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v7 = a3[6];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    swift_retain();
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
      *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
      *(unsigned char *)(v8 + 18) = *(unsigned char *)(v9 + 18);
      uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v11 = v8 + v10;
      uint64_t v12 = v9 + v10;
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    sub_100195B7C(*(void *)v17, v19);
    *(void *)uint64_t v16 = v18;
    v16[8] = v19;
    uint64_t v20 = a3[8];
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = *(void *)v26;
    char v28 = *(unsigned char *)(v26 + 8);
    sub_100195B7C(*(void *)v26, v28);
    *(void *)uint64_t v25 = v27;
    v25[8] = v28;
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    char v31 = (void *)((char *)v4 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    void *v31 = v33;
    v31[1] = v34;
    uint64_t v35 = (char *)v4 + v30;
    uint64_t v36 = *(uint64_t *)((char *)a2 + v30);
    uint64_t v37 = *(uint64_t *)((char *)a2 + v30 + 8);
    LOBYTE(v25) = *((unsigned char *)a2 + v30 + 16);
    swift_retain();
    sub_100195B88();
    *(void *)uint64_t v35 = v36;
    *((void *)v35 + 1) = v37;
    v35[16] = (char)v25;
    uint64_t v38 = a3[12];
    uint64_t v39 = (char *)v4 + v38;
    uint64_t v40 = (uint64_t *)((char *)a2 + v38);
    uint64_t v41 = *v40;
    uint64_t v42 = v40[1];
    LOBYTE(v25) = *((unsigned char *)v40 + 16);
    sub_100195B88();
    *(void *)uint64_t v39 = v41;
    *((void *)v39 + 1) = v42;
    v39[16] = (char)v25;
    uint64_t v43 = a3[13];
    uint64_t v44 = a3[14];
    uint64_t v45 = (void *)((char *)v4 + v43);
    uint64_t v46 = (uint64_t *)((char *)a2 + v43);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = (char *)v4 + v44;
    uint64_t v49 = (uint64_t)a2 + v44;
    long long v50 = *(_OWORD *)((char *)a2 + v44 + 24);
    *(_OWORD *)((char *)v4 + v44 + 24) = v50;
    uint64_t v51 = v50;
    uint64_t v52 = **(void (***)(char *, uint64_t, uint64_t))(v50 - 8);
    swift_retain();
    v52(v48, v49, v51);
    uint64_t v53 = a3[16];
    *(_OWORD *)((char *)v4 + a3[15]) = *(_OWORD *)((char *)a2 + a3[15]);
    uint64_t v54 = (char *)v4 + v53;
    uint64_t v55 = (uint64_t)a2 + v53;
    long long v56 = *(_OWORD *)(v55 + 24);
    *(_OWORD *)((char *)v4 + v53 + 24) = v56;
    uint64_t v57 = v56;
    uint64_t v58 = **(void (***)(char *, uint64_t, uint64_t))(v56 - 8);
    swift_unknownObjectRetain();
    v58(v54, v55, v57);
  }
  return v4;
}

uint64_t sub_100398770(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[6];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v7 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  swift_release();
  sub_10018F6E4();
  sub_10018F6E4();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[14]);
  swift_unknownObjectRelease();
  uint64_t v9 = a1 + a2[16];

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v9);
}

uint64_t sub_100398928(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  swift_retain();
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
    *(unsigned char *)(v7 + 17) = *(unsigned char *)(v8 + 17);
    *(unsigned char *)(v7 + 18) = *(unsigned char *)(v8 + 18);
    uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v10 = v7 + v9;
    uint64_t v11 = v8 + v9;
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *(void *)uint64_t v7 = *(void *)v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, v17);
  *(void *)uint64_t v14 = v16;
  *(unsigned char *)(v14 + 8) = v17;
  uint64_t v18 = a3[8];
  char v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *char v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  char v26 = *(unsigned char *)(v24 + 8);
  sub_100195B7C(*(void *)v24, v26);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)(a1 + v27);
  uint64_t v30 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  *uint64_t v29 = v31;
  v29[1] = v32;
  uint64_t v33 = a1 + v28;
  uint64_t v34 = *(void *)(a2 + v28);
  uint64_t v35 = *(void *)(a2 + v28 + 8);
  LOBYTE(v23) = *(unsigned char *)(a2 + v28 + 16);
  swift_retain();
  sub_100195B88();
  *(void *)uint64_t v33 = v34;
  *(void *)(v33 + 8) = v35;
  *(unsigned char *)(v33 + 16) = v23;
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v39 = *v38;
  uint64_t v40 = v38[1];
  LOBYTE(v23) = *((unsigned char *)v38 + 16);
  sub_100195B88();
  *(void *)uint64_t v37 = v39;
  *(void *)(v37 + 8) = v40;
  *(unsigned char *)(v37 + 16) = v23;
  uint64_t v41 = a3[13];
  uint64_t v42 = a3[14];
  uint64_t v43 = (void *)(a1 + v41);
  uint64_t v44 = (void *)(a2 + v41);
  uint64_t v45 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = a1 + v42;
  uint64_t v47 = a2 + v42;
  long long v48 = *(_OWORD *)(a2 + v42 + 24);
  *(_OWORD *)(a1 + v42 + 24) = v48;
  uint64_t v49 = v48;
  long long v50 = **(void (***)(uint64_t, uint64_t, uint64_t))(v48 - 8);
  swift_retain();
  v50(v46, v47, v49);
  uint64_t v51 = a3[16];
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  long long v54 = *(_OWORD *)(v53 + 24);
  *(_OWORD *)(a1 + v51 + 24) = v54;
  uint64_t v55 = v54;
  long long v56 = **(void (***)(uint64_t, uint64_t, uint64_t))(v54 - 8);
  swift_unknownObjectRetain();
  v56(v52, v53, v55);
  return a1;
}

uint64_t sub_100398C7C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    sub_10017DF4C(a1 + v6, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *(void *)(v8 + 8);
      *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
      *(unsigned char *)(v7 + 17) = *(unsigned char *)(v8 + 17);
      *(unsigned char *)(v7 + 18) = *(unsigned char *)(v8 + 18);
      uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v10 = v7 + v9;
      uint64_t v11 = v8 + v9;
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, v17);
  uint64_t v18 = *(void *)v14;
  char v19 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v14 = v16;
  *(unsigned char *)(v14 + 8) = v17;
  sub_10018F6D8(v18, v19);
  if (a1 != a2)
  {
    uint64_t v20 = a3[8];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (void *)(a2 + v20);
    sub_10017DF4C(a1 + v20, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_100195B7C(*(void *)v26, v28);
  uint64_t v29 = *(void *)v25;
  char v30 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = v28;
  sub_10018F6D8(v29, v30);
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_retain();
  swift_release();
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  LOBYTE(v33) = *((unsigned char *)v36 + 16);
  sub_100195B88();
  *(void *)uint64_t v35 = v37;
  *(void *)(v35 + 8) = v38;
  *(unsigned char *)(v35 + 16) = v33;
  sub_10018F6E4();
  uint64_t v39 = a3[12];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v42 = *v41;
  uint64_t v43 = v41[1];
  LOBYTE(v33) = *((unsigned char *)v41 + 16);
  sub_100195B88();
  *(void *)uint64_t v40 = v42;
  *(void *)(v40 + 8) = v43;
  *(unsigned char *)(v40 + 16) = v33;
  sub_10018F6E4();
  uint64_t v44 = a3[13];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)(a1 + a3[14]), (uint64_t *)(a2 + a3[14]));
  uint64_t v47 = a3[15];
  long long v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = v49[1];
  void *v48 = *v49;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v48[1] = v50;
  sub_1000C1E18((uint64_t *)(a1 + a3[16]), (uint64_t *)(a2 + a3[16]));
  return a1;
}

uint64_t sub_100398FEC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    v7[16] = v8[16];
    v7[17] = v8[17];
    v7[18] = v8[18];
    uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v11 = &v7[v10];
    uint64_t v12 = &v8[v10];
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = (void *)(a1 + v15);
  char v19 = (const void *)(a2 + v15);
  uint64_t v20 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(unsigned char *)(v28 + 16) = *(unsigned char *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  uint64_t v32 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (long long *)(a2 + v32);
  long long v35 = *v34;
  long long v36 = v34[1];
  *(void *)(v33 + 32) = *((void *)v34 + 4);
  uint64_t v37 = a3[15];
  uint64_t v38 = a3[16];
  long long v39 = *(_OWORD *)(a2 + v37);
  *(_OWORD *)uint64_t v33 = v35;
  *(_OWORD *)(v33 + 16) = v36;
  *(_OWORD *)(a1 + v37) = v39;
  uint64_t v40 = a1 + v38;
  long long v41 = *(_OWORD *)(a2 + v38 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)(a2 + v38);
  *(_OWORD *)(v40 + 16) = v41;
  *(void *)(v40 + 32) = *(void *)(a2 + v38 + 32);
  return a1;
}

uint64_t sub_10039926C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_10017DF4C(a1 + v6, &qword_100E63BD0);
    uint64_t v9 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      v7[16] = v8[16];
      v7[17] = v8[17];
      v7[18] = v8[18];
      uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v11 = &v7[v10];
      uint64_t v12 = &v8[v10];
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  LOBYTE(v16) = *((unsigned char *)v16 + 8);
  uint64_t v18 = *(void *)v15;
  char v19 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = (_BYTE)v16;
  sub_10018F6D8(v18, v19);
  if (a1 != a2)
  {
    uint64_t v20 = a3[8];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    sub_10017DF4C(a1 + v20, &qword_100E63BC8);
    uint64_t v23 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  LOBYTE(v27) = *((unsigned char *)v27 + 8);
  uint64_t v29 = *(void *)v26;
  char v30 = *(unsigned char *)(v26 + 8);
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = (_BYTE)v27;
  sub_10018F6D8(v29, v30);
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_release();
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  char v37 = *(unsigned char *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(unsigned char *)(v35 + 16) = v37;
  sub_10018F6E4();
  uint64_t v38 = a3[12];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  char v41 = *(unsigned char *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(unsigned char *)(v39 + 16) = v41;
  sub_10018F6E4();
  uint64_t v42 = a3[13];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)(a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_release();
  uint64_t v47 = a3[14];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v47);
  long long v50 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 16) = v50;
  *(void *)(v48 + 32) = *(void *)(v49 + 32);
  uint64_t v51 = a3[15];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  uint64_t v54 = v53[1];
  *uint64_t v52 = *v53;
  swift_unknownObjectRelease();
  v52[1] = v54;
  uint64_t v55 = a3[16];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v55);
  long long v58 = *(_OWORD *)(v57 + 16);
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *(_OWORD *)(v56 + 16) = v58;
  *(void *)(v56 + 32) = *(void *)(v57 + 32);
  return a1;
}

uint64_t sub_1003995BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003995D0);
}

uint64_t sub_1003995D0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[6];
LABEL_5:
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v9, a2, v8);
  }
  sub_10017DF08((uint64_t *)&unk_100EAA530);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a3[8];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[13] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_100399690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003996A4);
}

void sub_1003996A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[6];
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + a4[13] + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a4[8];
  }

  _s7Weather24LocationCompositionStateOwst_0(a1 + v11, a2, a2, v10);
}

uint64_t sub_100399760()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10039977C()
{
  unint64_t result = qword_100E70CD8;
  if (!qword_100E70CD8)
  {
    sub_10018C6DC(&qword_100E70CD0);
    sub_10039981C();
    sub_10024D5E4((uint64_t)&unk_100EAA8B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70CD8);
  }
  return result;
}

unint64_t sub_10039981C()
{
  unint64_t result = qword_100E70CE0;
  if (!qword_100E70CE0)
  {
    sub_10018C6DC(&qword_100E70CE8);
    sub_1003998BC();
    sub_10024D5E4((uint64_t)&qword_100E70D18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70CE0);
  }
  return result;
}

unint64_t sub_1003998BC()
{
  unint64_t result = qword_100E70CF0;
  if (!qword_100E70CF0)
  {
    sub_10018C6DC(&qword_100E70CF8);
    sub_10024D5E4((uint64_t)&unk_100E70D00);
    sub_10024D5E4((uint64_t)&qword_100E70D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70CF0);
  }
  return result;
}

unint64_t sub_100399998()
{
  unint64_t result = qword_100E70DB0;
  if (!qword_100E70DB0)
  {
    sub_10018C6DC(&qword_100E70D30);
    sub_10024D5E4((uint64_t)&unk_100E70DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70DB0);
  }
  return result;
}

uint64_t sub_100399A3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationPreviewView();
  sub_100164920(v2);
  uint64_t v3 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_1001627C0(v3);
  uint64_t v4 = sub_10019D574();

  return sub_100394A18(v4, v5, a1);
}

unint64_t sub_100399ABC()
{
  unint64_t result = qword_100E70DC8;
  if (!qword_100E70DC8)
  {
    sub_10018C6DC(&qword_100E70D48);
    sub_10018C6DC(&qword_100E70D38);
    sub_10018C6DC(&qword_100E70D30);
    sub_100399998();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10039A924((uint64_t)&qword_100E66B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70DC8);
  }
  return result;
}

unint64_t sub_100399BD8()
{
  unint64_t result = qword_100E70DD0;
  if (!qword_100E70DD0)
  {
    sub_10018C6DC(&qword_100E70DC0);
    sub_100399C78();
    sub_10024D5E4((uint64_t)&unk_100E70EF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70DD0);
  }
  return result;
}

unint64_t sub_100399C78()
{
  unint64_t result = qword_100E70DD8;
  if (!qword_100E70DD8)
  {
    sub_10018C6DC(&qword_100E70DE0);
    sub_100399CEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70DD8);
  }
  return result;
}

unint64_t sub_100399CEC()
{
  unint64_t result = qword_100E70DE8;
  if (!qword_100E70DE8)
  {
    sub_10018C6DC(&qword_100E70DF0);
    sub_100399DDC((uint64_t)&unk_100E70DF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70DE8);
  }
  return result;
}

unint64_t sub_100399DA0()
{
  return sub_100399DDC((uint64_t)&unk_100E70E08);
}

unint64_t sub_100399DDC(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    sub_10018C6DC(v3);
    v7();
    v6();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100399E60()
{
  unint64_t result = qword_100E70E18;
  if (!qword_100E70E18)
  {
    sub_10018C6DC(&qword_100E70E20);
    sub_10024D5E4((uint64_t)&unk_100E70E28);
    sub_10024D5E4((uint64_t)&unk_100E70E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70E18);
  }
  return result;
}

unint64_t sub_100399F20()
{
  unint64_t result = qword_100E70E48;
  if (!qword_100E70E48)
  {
    sub_10018C6DC(&qword_100E70E50);
    sub_10024D5E4((uint64_t)&unk_100E70E58);
    sub_10024D5E4((uint64_t)&unk_100E70E68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70E48);
  }
  return result;
}

unint64_t sub_100399FE0()
{
  return sub_100399DDC((uint64_t)&unk_100E70E78);
}

unint64_t sub_10039A01C()
{
  unint64_t result = qword_100E70E88;
  if (!qword_100E70E88)
  {
    sub_10018C6DC(&qword_100E70E90);
    sub_10024D5E4((uint64_t)&unk_100E70E98);
    sub_10024D5E4((uint64_t)&unk_100E70EA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70E88);
  }
  return result;
}

unint64_t sub_10039A0DC()
{
  unint64_t result = qword_100E70EB8;
  if (!qword_100E70EB8)
  {
    sub_10018C6DC(&qword_100E70EC0);
    sub_10039A17C();
    sub_10024D5E4((uint64_t)&unk_100E70EE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70EB8);
  }
  return result;
}

unint64_t sub_10039A17C()
{
  unint64_t result = qword_100E70EC8;
  if (!qword_100E70EC8)
  {
    sub_10018C6DC(&qword_100E70ED0);
    sub_10039A924((uint64_t)&unk_100E70ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70EC8);
  }
  return result;
}

uint64_t sub_10039A22C()
{
  return sub_10039A260(sub_100BFCBBC);
}

uint64_t sub_10039A248()
{
  return sub_10039A260((uint64_t (*)(uint64_t))sub_100BFD0C8);
}

uint64_t sub_10039A260(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for LocationPreviewView();
  sub_100164920(v2);
  uint64_t v3 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_1001627C0(v3);
  uint64_t v4 = sub_10019D574();
  return sub_100395B08(v4, v5, a1);
}

uint64_t sub_10039A2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LocationPreviewView();
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100394C14(a1, a2, v7);
}

unint64_t sub_10039A338()
{
  return sub_10039A360((uint64_t)&unk_100E70F08);
}

unint64_t sub_10039A360(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10039A3DC()
{
  unint64_t result = qword_100E70F10;
  if (!qword_100E70F10)
  {
    sub_10018C6DC(&qword_100E70D68);
    sub_10039A488();
    sub_10039A924((uint64_t)&qword_100E66BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70F10);
  }
  return result;
}

unint64_t sub_10039A488()
{
  unint64_t result = qword_100E70F18;
  if (!qword_100E70F18)
  {
    sub_10018C6DC(&qword_100E70D60);
    sub_10018C6DC(&qword_100E70D50);
    sub_10018C6DC(&qword_100E70D48);
    sub_10018C6DC(&qword_100E70DC0);
    sub_100399ABC();
    sub_100399BD8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70F18);
  }
  return result;
}

uint64_t sub_10039A598@<X0>(uint64_t a1@<X8>)
{
  return sub_100394C6C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_10039A5A0()
{
  unint64_t result = qword_100E70F38;
  if (!qword_100E70F38)
  {
    sub_10018C6DC(&qword_100E70D90);
    sub_10039A640();
    sub_10024D5E4((uint64_t)&qword_100E6D0E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70F38);
  }
  return result;
}

unint64_t sub_10039A640()
{
  unint64_t result = qword_100E70F40;
  if (!qword_100E70F40)
  {
    sub_10018C6DC(&qword_100E70D88);
    sub_10018C6DC(&qword_100E70D78);
    type metadata accessor for LocationPreviewViewContentModel(255);
    sub_10039A360((uint64_t)&unk_100E70F00);
    sub_10039A924((uint64_t)&unk_100E70F20);
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100E70F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70F40);
  }
  return result;
}

unint64_t sub_10039A788()
{
  unint64_t result = qword_100E70F60;
  if (!qword_100E70F60)
  {
    sub_10018C6DC(&qword_100E70F58);
    sub_10024D5E4((uint64_t)&unk_100E70F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70F60);
  }
  return result;
}

uint64_t sub_10039A820@<X0>(uint64_t a1@<X8>)
{
  return sub_100395598(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_10039A828()
{
  unint64_t result = qword_100E70FA0;
  if (!qword_100E70FA0)
  {
    sub_10018C6DC(&qword_100E70F98);
    sub_10024D5E4((uint64_t)&unk_100E70FA8);
    sub_10024D5E4((uint64_t)&qword_100E64F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70FA0);
  }
  return result;
}

uint64_t sub_10039A8EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100395C00(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_10039A90C()
{
  return sub_10039A260((uint64_t (*)(uint64_t))sub_100BFD638);
}

unint64_t sub_10039A924(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10039A968(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10039A9C0()
{
  return sub_10039AA10((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100397F58);
}

uint64_t sub_10039A9DC(uint64_t a1)
{
  return sub_10039AC0C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100398028);
}

uint64_t sub_10039A9F8()
{
  return sub_10039AA10((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100397D00);
}

uint64_t sub_10039AA10(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = type metadata accessor for LocationPreviewView();
  sub_1001627C0(v2);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4, v5, v6);
}

uint64_t sub_10039AA7C()
{
  uint64_t v1 = type metadata accessor for LocationPreviewView();
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100179DC0();
    sub_100162F0C();
    v5();
  }
  else
  {
    swift_release();
  }
  sub_100185268();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v6();
  }
  else
  {
    swift_release();
  }
  sub_1001839CC();
  sub_100181140();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v4 + *(int *)(v1 + 56));
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v4 + *(int *)(v1 + 64));

  return swift_deallocObject();
}

uint64_t sub_10039ABF4(uint64_t a1)
{
  return sub_10039AC0C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100397F10);
}

uint64_t sub_10039AC0C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationPreviewView();
  sub_1001627C0(v4);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a2(a1, v6, v7, v8);
}

uint64_t sub_10039AC74(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10039ACC4()
{
  sub_100162EA0();
  uint64_t v2 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_100179EF0();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v0 + v4;
  type metadata accessor for PreviewLocation();
  switch(sub_10017A0C8())
  {
    case 0u:
      type metadata accessor for Location();
      goto LABEL_4;
    case 1u:
      type metadata accessor for LocationOfInterest();
LABEL_4:
      sub_100179DC0();
      (*(void (**)(unint64_t))(v6 + 8))(v0 + v4);
      break;
    case 2u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v5 + *(int *)(type metadata accessor for SearchLocation() + 32);
      uint64_t v8 = type metadata accessor for Location();
      if (!sub_1001632AC(v8))
      {
        sub_100162880();
        (*(void (**)(uint64_t))(v9 + 8))(v7);
      }
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100179DC0();
  sub_100162F0C();
  v10();
  uint64_t v11 = v5 + *(int *)(v2 + 36);
  type metadata accessor for LocationPreviewModalViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for NewsArticle();
    uint64_t v14 = sub_10018694C();
    if (!sub_100163364())
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v14);
    }
    type metadata accessor for Date();
    sub_100179DC0();
    sub_100162F0C();
    v16();
    sub_100162880();
    uint64_t v18 = *(void (**)(void))(v17 + 8);
    v18();
    uint64_t v19 = v11 + *(int *)(v5 + 36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + *(int *)(type metadata accessor for NewsChannel() + 24);
    if (!sub_100163364()) {
      ((void (*)(uint64_t, uint64_t))v18)(v20, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    type metadata accessor for URL();
    sub_100179DC0();
    sub_100162F0C();
    v13();
  }
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_10039AFD4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_1001627C0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100394378(a1, v5);
}

uint64_t sub_10039B028()
{
  uint64_t v1 = type metadata accessor for LocationPreviewView();
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100179DC0();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  sub_100185268();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v5();
  }
  else
  {
    swift_release();
  }
  sub_1001839CC();
  sub_100181140();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v1 + 56));
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v1 + 64));

  return swift_deallocObject();
}

double sub_10039B198@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationPreviewView();
  sub_1001627C0(v4);

  return sub_1003944D0(a1, a2);
}

uint64_t sub_10039B210()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_100179EF0();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = (int *)type metadata accessor for LocationPreviewView();
  sub_100179EF0();
  uint64_t v38 = *(unsigned __int8 *)(v8 + 80);
  unint64_t v9 = v4 + v6 + v38;
  uint64_t v36 = *(void *)(v10 + 64);
  uint64_t v11 = type metadata accessor for Location();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (id *)(v1 + v4);
  type metadata accessor for PreviewLocation();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v1 + v4, v11);
      break;
    case 1u:
      type metadata accessor for LocationOfInterest();
      sub_100179DC0();
      sub_100162F0C();
      v15();
      break;
    case 2u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = (uint64_t)v14 + *(int *)(type metadata accessor for SearchLocation() + 32);
      if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v11);
      }
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v37 = v11;
  unint64_t v17 = v9 & ~v38;
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100179DC0();
  sub_100162F0C();
  v18();
  uint64_t v19 = (char *)v14 + *(int *)(v2 + 36);
  type metadata accessor for LocationPreviewModalViewModel(0);
  int v20 = sub_100163380();
  if (v20 == 1)
  {
    uint64_t v35 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = type metadata accessor for NewsArticle();
    uint64_t v23 = (uint64_t)&v19[*(int *)(v22 + 24)];
    uint64_t v24 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    type metadata accessor for Date();
    sub_100179DC0();
    sub_100162F0C();
    v26();
    sub_100162880();
    uint64_t v28 = *(void (**)(void))(v27 + 8);
    v28();
    uint64_t v29 = &v19[*(int *)(v22 + 36)];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)&v29[*(int *)(type metadata accessor for NewsChannel() + 24)];
    if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v24)) {
      ((void (*)(uint64_t, uint64_t))v28)(v30, v24);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v35;
  }
  else if (!v20)
  {
    type metadata accessor for URL();
    sub_100179DC0();
    sub_100162F0C();
    v21();
  }
  uint64_t v31 = v1 + v17;
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_100163380() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100179DC0();
    sub_100162F0C();
    v32();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v31 + v7[7]), *(unsigned char *)(v31 + v7[7] + 8));
  sub_10017DF08(&qword_100E63BC8);
  if (sub_100163380() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v33();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v31 + v7[9]), *(unsigned char *)(v31 + v7[9] + 8));
  swift_release();
  sub_10018F6E4();
  sub_10018F6E4();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v31 + v7[14]);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v31 + v7[16]);
  (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v1 + ((v17 + v36 + v13) & ~v13), v37);

  return swift_deallocObject();
}

uint64_t sub_10039B7A8()
{
  uint64_t v1 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for LocationPreviewView();
  sub_100164920(v6);
  unint64_t v8 = (v3 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = type metadata accessor for Location();
  sub_1001627C0(v11);
  return sub_100396258(v0 + v3, v0 + v8, v0 + ((v8 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)));
}

uint64_t sub_10039B85C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

unint64_t sub_10039B8B4()
{
  unint64_t result = qword_100E71090;
  if (!qword_100E71090)
  {
    sub_10018C6DC(&qword_100E71098);
    sub_10039977C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E71090);
  }
  return result;
}

uint64_t sub_10039B930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v126 = a3;
  uint64_t v123 = a1;
  uint64_t v124 = a2;
  uint64_t v121 = type metadata accessor for Location();
  uint64_t v5 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  sub_100109314();
  uint64_t v122 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E663F0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E66418);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v128 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E66420);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v127 = v17;
  uint64_t v18 = sub_10017DF08(&qword_100E66428);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v125 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E66430);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v24 = v23;
  uint64_t v25 = sub_10017DF08(&qword_100E66438);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v28 = v27;
  uint64_t v29 = sub_10017DF08(&qword_100E66440);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = sub_10017DF08(&qword_100E63A50);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v120 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v120 - v39;
  uint64_t v41 = type metadata accessor for DebugAction();
  __chkstk_darwin(v41);
  sub_1001626E0();
  uint64_t v44 = v43 - v42;
  sub_10039C0B4(a4, v43 - v42);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v72 = (uint64_t *)(v44 + *(int *)(sub_10017DF08(&qword_100E6F648) + 48));
    uint64_t v73 = *v72;
    uint64_t v121 = v72[1];
    uint64_t v122 = v73;
    sub_10039C118(v44, (uint64_t)v40);
    uint64_t v74 = type metadata accessor for AppConfigurationState();
    uint64_t v75 = sub_10017E2F4(v74);
    uint64_t v120 = v28;
    uint64_t v78 = sub_1001A0654(v75, v76, v77, v75);
    uint64_t v79 = sub_10019E988(v78);
    uint64_t v80 = v125;
    uint64_t v83 = sub_10017A0E0(v125, v81, v82, v79);
    uint64_t v84 = v127;
    uint64_t v87 = sub_100163398(v127, v85, v86, v83);
    uint64_t v88 = v128;
    _s7Weather24LocationCompositionStateOwst_0(v128, 1, 1, v87);
    uint64_t v89 = type metadata accessor for ModalViewState(0);
    sub_1001633C8(v89);
    uint64_t v129 = v124;
    sub_1000ACA10((uint64_t)v40, (uint64_t)v37);
    swift_bridgeObjectRetain();
    sub_10024523C();
    uint64_t v90 = v120;
    uint64_t v71 = sub_1001659F0(0, 3, v33, v120, v24, 0, 0, 0, 0, v80, v84, v88, v11, 0, 0, 0, 0, v123 & 1, v129,
            0,
            v126);
    swift_bridgeObjectRelease();
    sub_1000F3400(v11, &qword_100E663F0);
    sub_1000F3400(v88, &qword_100E66418);
    sub_1000F3400(v84, &qword_100E66420);
    sub_1000F3400(v80, &qword_100E66428);
    sub_1000F3400(v24, &qword_100E66430);
    sub_1000F3400(v90, &qword_100E66438);
    sub_1000F3400(v33, &qword_100E66440);
    uint64_t v91 = &qword_100E63A50;
    uint64_t v92 = (uint64_t)v40;
LABEL_6:
    sub_1000F3400(v92, v91);
    return v71;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v93 = type metadata accessor for AppConfigurationState();
    uint64_t v94 = sub_10017E2F4(v93);
    uint64_t v97 = sub_1001A0654(v94, v95, v96, v94);
    uint64_t v98 = sub_10019E988(v97);
    uint64_t v99 = v125;
    uint64_t v102 = sub_10017A0E0(v125, v100, v101, v98);
    uint64_t v103 = v127;
    uint64_t v106 = sub_100163398(v127, v104, v105, v102);
    sub_100181194(v106);
    uint64_t v107 = type metadata accessor for ModalViewState(0);
    sub_1001633C8(v107);
    uint64_t v108 = v124;
    char v109 = (v123 & 1) == 0;
    uint64_t v110 = swift_bridgeObjectRetain();
    uint64_t v71 = sub_10017CB50(v110, v111, v112, v113, v114, v115, v116, v117, v119, v99, v103, v44, v11, 0, 0, 0, 0, v109, v108,
            0,
            v126);
    swift_bridgeObjectRelease();
    sub_1000F3400(v11, &qword_100E663F0);
    sub_1000F3400(v44, &qword_100E66418);
    sub_1000F3400(v103, &qword_100E66420);
    sub_1000F3400(v99, &qword_100E66428);
    sub_1000F3400(v24, &qword_100E66430);
    sub_1000F3400(v28, &qword_100E66438);
    uint64_t v91 = &qword_100E66440;
    uint64_t v92 = v33;
    goto LABEL_6;
  }
  uint64_t v47 = v121;
  uint64_t v46 = v122;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v122, v44, v121);
  uint64_t v48 = type metadata accessor for AppConfigurationState();
  uint64_t v49 = sub_10017E2F4(v48);
  uint64_t v52 = sub_1001A0654(v49, v50, v51, v49);
  uint64_t v53 = sub_10019E988(v52);
  uint64_t v54 = v125;
  uint64_t v57 = sub_10017A0E0(v125, v55, v56, v53);
  uint64_t v58 = v127;
  uint64_t v61 = sub_100163398(v127, v59, v60, v57);
  sub_100181194(v61);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v11, v46, v47);
  type metadata accessor for PreviewLocation();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for LocationPreviewViewState(0);
  type metadata accessor for LocationPreviewModalViewState(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = type metadata accessor for ModalViewState(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = _s7Weather24LocationCompositionStateOwst_0(v11, 0, 1, v62);
  uint64_t v71 = sub_10017CB50(v63, v64, v65, v66, v67, v68, v69, v70, v119, v54, v58, v44, v11, 0, 0, 0, 0, 0, 0,
          0,
          v126);
  sub_1000F3400(v11, &qword_100E663F0);
  sub_1000F3400(v44, &qword_100E66418);
  sub_1000F3400(v58, &qword_100E66420);
  sub_1000F3400(v54, &qword_100E66428);
  sub_1000F3400(v24, &qword_100E66430);
  sub_1000F3400(v28, &qword_100E66438);
  sub_1000F3400(v33, &qword_100E66440);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v122, v47);
  return v71;
}

uint64_t sub_10039C0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039C118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039C180()
{
  sub_100162814();
  uint64_t v3 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v119 = sub_10017DF08(&qword_100E713D0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E6BF78);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10016278C();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin(v19);
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100109328((uint64_t)&v110 - v21);
  uint64_t v127 = type metadata accessor for WeatherChanges();
  sub_100179C0C();
  uint64_t v120 = v22;
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109338(v24);
  uint64_t v123 = sub_10017DF08(&qword_100E713D8);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109338(v26);
  uint64_t v27 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100128F8C();
  sub_100109328(v31);
  uint64_t v132 = type metadata accessor for DetailChartSelection();
  sub_100162E4C();
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109338(v33);
  uint64_t v128 = sub_10017DF08(&qword_100E713E0);
  sub_100162E4C();
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v133 = v35;
  uint64_t v36 = sub_10017DF08(&qword_100E711F8);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v38);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v39);
  sub_100128F8C();
  uint64_t v131 = v40;
  uint64_t v138 = sub_10017DF08(&qword_100E6E900);
  sub_100179C0C();
  uint64_t v136 = v41;
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v134 = v43;
  uint64_t v44 = sub_10017DF08(&qword_100E713E8);
  sub_100162E4C();
  __chkstk_darwin(v45);
  sub_100109314();
  uint64_t v137 = v46;
  uint64_t v47 = sub_10017DF08(&qword_100E6E8F8);
  uint64_t v48 = sub_100109308(v47);
  __chkstk_darwin(v48);
  sub_100162EF8();
  uint64_t v135 = v49;
  sub_1001626D4();
  __chkstk_darwin(v50);
  sub_100164A00();
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v110 - v52;
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  uint64_t v114 = v18;
  uint64_t v112 = v9;
  uint64_t v113 = v5;
  uint64_t v115 = v13;
  uint64_t v116 = v3;
  uint64_t v54 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  uint64_t v118 = v1;
  uint64_t v117 = v0;
  type metadata accessor for HourWeather();
  sub_1001A3918(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1001A3918(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1001A3918(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  if ((static Forecast.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  uint64_t v55 = v118;
  sub_1001B7204(v118 + v54[6], (uint64_t)v53, &qword_100E6E8F8);
  uint64_t v56 = v117;
  sub_1001B7204(v117 + v54[6], v2, &qword_100E6E8F8);
  uint64_t v57 = v137;
  uint64_t v58 = v137 + *(int *)(v44 + 48);
  sub_1001B7204((uint64_t)v53, v137, &qword_100E6E8F8);
  sub_1001B7204(v2, v58, &qword_100E6E8F8);
  uint64_t v59 = v138;
  sub_10012B520(v57, 1, v138);
  if (v62)
  {
    uint64_t v60 = v55;
    sub_100178110(v2, &qword_100E6E8F8);
    sub_100178110((uint64_t)v53, &qword_100E6E8F8);
    sub_10012B520(v58, 1, v59);
    if (v62)
    {
      sub_100178110(v57, &qword_100E6E8F8);
      goto LABEL_14;
    }
LABEL_11:
    uint64_t v63 = &qword_100E713E8;
    uint64_t v64 = v57;
LABEL_12:
    sub_100178110(v64, v63);
    goto LABEL_65;
  }
  uint64_t v61 = v135;
  sub_1001B7204(v57, v135, &qword_100E6E8F8);
  sub_10012B520(v58, 1, v59);
  if (v62)
  {
    sub_100178110(v2, &qword_100E6E8F8);
    sub_100178110((uint64_t)v53, &qword_100E6E8F8);
    (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v61, v59);
    goto LABEL_11;
  }
  uint64_t v111 = v54;
  uint64_t v65 = v136;
  uint64_t v66 = v134;
  sub_1001627D4();
  v67();
  sub_1003AD924();
  char v68 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v69(v66, v59);
  sub_100178110(v2, &qword_100E6E8F8);
  sub_100178110((uint64_t)v53, &qword_100E6E8F8);
  v69(v61, v59);
  uint64_t v56 = v117;
  uint64_t v60 = v118;
  uint64_t v54 = v111;
  uint64_t v70 = sub_10019DE68();
  sub_100178110(v70, v71);
  if ((v68 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_14:
  sub_100BDC790();
  if ((v72 & 1) == 0) {
    goto LABEL_65;
  }
  sub_100189DEC(v54[8]);
  if ((static DetailCondition.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  uint64_t v73 = sub_100189DEC(v54[9]);
  if ((sub_100889C5C(v73, v74) & 1) == 0) {
    goto LABEL_65;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  if (*(unsigned __int8 *)(v60 + v54[11]) != *(unsigned __int8 *)(v56 + v54[11])) {
    goto LABEL_65;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  sub_100189DEC(v54[13]);
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  sub_100189DEC(v54[14]);
  if ((static Locale.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  sub_100189DEC(v54[15]);
  if ((static DayWeather.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  sub_100189DEC(v54[16]);
  if ((static CurrentWeather.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  type metadata accessor for DayWeather();
  sub_1001A3918(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1001A3918(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1001A3918(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  if ((static Forecast.== infix(_:_:)() & 1) == 0) {
    goto LABEL_65;
  }
  uint64_t v75 = v54;
  if ((sub_100A205E8((void *)(v60 + v54[18]), (void *)(v56 + v54[18])) & 1) == 0
    || (sub_100BBEEE4(v60 + v54[19], v56 + v54[19]) & 1) == 0)
  {
    goto LABEL_65;
  }
  sub_1001B7204(v60 + v54[20], v131, &qword_100E711F8);
  sub_100182FA4(v56 + v54[20], (uint64_t)&v147);
  uint64_t v76 = v133;
  sub_1001A31C0();
  sub_1001823E8();
  sub_10012B520(v76, 1, v132);
  if (v62)
  {
    sub_100189038((uint64_t)&v147);
    sub_100178110(v131, &qword_100E711F8);
    sub_10012B520((uint64_t)v75, 1, v132);
    if (v62)
    {
      sub_100178110(v133, &qword_100E711F8);
      goto LABEL_37;
    }
    goto LABEL_35;
  }
  sub_1001B7204(v133, (uint64_t)v129, &qword_100E711F8);
  sub_10012B520((uint64_t)v75, 1, v132);
  if (v77)
  {
    sub_1001D0E68((uint64_t)&v147);
    sub_100178110(v131, &qword_100E711F8);
    sub_1001BBF74((uint64_t)v129, (void (*)(void))type metadata accessor for DetailChartSelection);
LABEL_35:
    uint64_t v63 = &qword_100E713E0;
    uint64_t v64 = v133;
    goto LABEL_12;
  }
  uint64_t v78 = v122;
  sub_100183700();
  char v79 = sub_1007957B4(v129, v78);
  sub_1001BBF74((uint64_t)v78, (void (*)(void))type metadata accessor for DetailChartSelection);
  sub_100178110(v130, &qword_100E711F8);
  sub_100178110(v131, &qword_100E711F8);
  uint64_t v80 = sub_10019DE68();
  sub_1001BBF74(v80, v81);
  sub_100178110(v133, &qword_100E711F8);
  if ((v79 & 1) == 0) {
    goto LABEL_65;
  }
LABEL_37:
  uint64_t v82 = v75[21];
  uint64_t v83 = *(void *)(v60 + v82);
  uint64_t v84 = *(void *)(v60 + v82 + 8);
  uint64_t v85 = (void *)(v56 + v82);
  BOOL v86 = v83 == *v85 && v84 == v85[1];
  if (v86 || (char v87 = _stringCompareWithSmolCheck(_:_:expecting:)(), v88 = 0, (v87 & 1) != 0))
  {
    sub_1001B7204(v60 + v75[22], v125, &qword_100E6D1C8);
    sub_100182FA4(v56 + v75[22], (uint64_t)&v144);
    uint64_t v89 = v126;
    sub_1001A31C0();
    sub_1001823E8();
    sub_10012B520(v89, 1, v127);
    if (v62)
    {
      sub_100189038((uint64_t)&v144);
      sub_100189038((uint64_t)&v145);
      sub_10012B520((uint64_t)v75, 1, v127);
      if (v62)
      {
        sub_100178110(v126, &qword_100E6D1C8);
LABEL_52:
        sub_1001B7204(v60 + v75[23], v121, &qword_100E6BF78);
        sub_100182FA4(v56 + v75[23], (uint64_t)v142);
        uint64_t v96 = v115;
        sub_1001A31C0();
        sub_1001823E8();
        sub_10012B520(v96, 1, v116);
        if (v62)
        {
          sub_100189038((uint64_t)v142);
          sub_100189038((uint64_t)v143);
          sub_10012B520((uint64_t)v75, 1, v116);
          if (v62)
          {
            sub_100178110(v115, &qword_100E6BF78);
            goto LABEL_63;
          }
        }
        else
        {
          sub_1001B7204(v115, v114, &qword_100E6BF78);
          sub_10012B520((uint64_t)v75, 1, v116);
          if (!v97)
          {
            uint64_t v98 = v113;
            sub_1001627D4();
            v99();
            sub_1001A3918(&qword_100E713F0, (void (*)(uint64_t))&type metadata accessor for MidpointInterpolator.InterpolationMode);
            char v100 = sub_100181F24();
            uint64_t v101 = *(void (**)(void))(v98 + 8);
            sub_1001829C8();
            v101();
            sub_100189038((uint64_t)v142);
            sub_100189038((uint64_t)v143);
            sub_1001829C8();
            v101();
            sub_100189038((uint64_t)&v140 + 8);
            if (v100)
            {
LABEL_63:
              uint64_t v102 = v75[24];
              long long v103 = *(_OWORD *)(v60 + v102 + 16);
              v139[0] = *(_OWORD *)(v60 + v102);
              v139[1] = v103;
              long long v104 = *(_OWORD *)(v60 + v102 + 32);
              uint64_t v105 = (long long *)(v56 + v102);
              long long v106 = *v105;
              long long v107 = v105[1];
              long long v140 = v104;
              v141[0] = v106;
              long long v108 = v105[2];
              v141[1] = v107;
              v141[2] = v108;
              if ((sub_10011C8A8((uint64_t)v139, (id *)v141) & 1) != 0
                && *(unsigned __int8 *)(v60 + v75[25]) == *(unsigned __int8 *)(v56 + v75[25]))
              {
                char v88 = *(unsigned char *)(v60 + v75[26]) ^ *(unsigned char *)(v56 + v75[26]) ^ 1;
                return v88 & 1;
              }
            }
LABEL_65:
            char v88 = 0;
            return v88 & 1;
          }
          sub_1001D0E68((uint64_t)v142);
          sub_1001D0E68((uint64_t)v143);
          (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v114, v116);
        }
        uint64_t v63 = &qword_100E713D0;
        uint64_t v91 = (char *)&v140 + 8;
        goto LABEL_61;
      }
    }
    else
    {
      sub_1001B7204(v126, v124, &qword_100E6D1C8);
      sub_10012B520((uint64_t)v75, 1, v127);
      if (!v90)
      {
        uint64_t v92 = v120;
        sub_1001627D4();
        v93();
        sub_1001A3918(&qword_100E713F8, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
        char v94 = sub_100181F24();
        uint64_t v95 = *(void (**)(void))(v92 + 8);
        sub_1001829C8();
        v95();
        sub_100189038((uint64_t)&v144);
        sub_100189038((uint64_t)&v145);
        sub_1001829C8();
        v95();
        sub_100189038((uint64_t)&v146);
        if ((v94 & 1) == 0) {
          goto LABEL_65;
        }
        goto LABEL_52;
      }
      sub_1001D0E68((uint64_t)&v144);
      sub_1001D0E68((uint64_t)&v145);
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v124, v127);
    }
    uint64_t v63 = &qword_100E713D8;
    uint64_t v91 = (char *)&v146;
LABEL_61:
    uint64_t v64 = *((void *)v91 - 32);
    goto LABEL_12;
  }
  return v88 & 1;
}

__n128 sub_10039D098@<Q0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char a3@<W7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, char a20)
{
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v24 = *(void (**)(void))(v23 + 32);
  sub_100184424();
  v24();
  uint64_t v25 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  sub_10017DF08(&qword_100E66CC8);
  sub_100162E4C();
  sub_1001190D4();
  v26();
  sub_1001278D0(a1, a4 + v25[6], &qword_100E6E8F8);
  *(void *)(a4 + v25[7]) = a2;
  sub_10016502C();
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  sub_1001190D4();
  v27();
  sub_10016502C();
  type metadata accessor for DetailChartCondition();
  sub_100162E4C();
  sub_1001190D4();
  v28();
  sub_100184424();
  v24();
  *(unsigned char *)(a4 + v25[11]) = a3;
  sub_100184424();
  v24();
  sub_10016502C();
  type metadata accessor for Location();
  sub_100162E4C();
  sub_1001190D4();
  v29();
  sub_10016502C();
  type metadata accessor for Locale();
  sub_100162E4C();
  sub_1001190D4();
  v30();
  sub_10016502C();
  type metadata accessor for DayWeather();
  sub_100162E4C();
  sub_1001190D4();
  v31();
  sub_10016502C();
  type metadata accessor for CurrentWeather();
  sub_100162E4C();
  sub_1001190D4();
  v32();
  sub_10017DF08(&qword_100E66CA0);
  sub_100162E4C();
  sub_1001190D4();
  v33();
  sub_100183700();
  sub_100183700();
  sub_1001278D0(a13, a4 + v25[20], &qword_100E711F8);
  uint64_t v34 = (void *)(a4 + v25[21]);
  *uint64_t v34 = a14;
  v34[1] = a15;
  sub_1001278D0(a16, a4 + v25[22], &qword_100E6D1C8);
  sub_1001278D0(a17, a4 + v25[23], &qword_100E6BF78);
  uint64_t v35 = a4 + v25[24];
  long long v36 = *(_OWORD *)(a18 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)a18;
  *(_OWORD *)(v35 + 16) = v36;
  __n128 result = *(__n128 *)(a18 + 32);
  *(__n128 *)(v35 + 32) = result;
  *(unsigned char *)(a4 + v25[25]) = a19;
  *(unsigned char *)(a4 + v25[26]) = a20;
  return result;
}

uint64_t sub_10039D488()
{
  uint64_t v0 = type metadata accessor for ConditionDetailInput.Input(0);
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = type metadata accessor for ConditionDetailInput(0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100E713C8);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v16 = v13 - v12 + *(int *)(v15 + 56);
  sub_10019DD24();
  sub_10019DD24();
  sub_10012B520(v14, 1, v0);
  if (!v18)
  {
    sub_10019DD24();
    sub_10012B520(v16, 1, v0);
    if (!v18)
    {
      sub_100183700();
      char v17 = sub_10039C180();
      sub_1001BBF74(v4, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
      sub_1001BBF74(v9, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
      sub_1001BBF74(v14, (void (*)(void))type metadata accessor for ConditionDetailInput);
      return v17 & 1;
    }
    sub_1001BBF74(v9, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
LABEL_9:
    sub_100178110(v14, &qword_100E713C8);
    char v17 = 0;
    return v17 & 1;
  }
  sub_10012B520(v16, 1, v0);
  if (!v18) {
    goto LABEL_9;
  }
  sub_1001BBF74(v14, (void (*)(void))type metadata accessor for ConditionDetailInput);
  char v17 = 1;
  return v17 & 1;
}

uint64_t sub_10039D6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v335 = a2;
  uint64_t v336 = a1;
  uint64_t v290 = type metadata accessor for ConditionDetailChartInputs(0);
  sub_100179C0C();
  uint64_t v328 = v3;
  __chkstk_darwin(v4);
  sub_100162EF8();
  uint64_t v338 = v5;
  sub_1001626D4();
  __chkstk_darwin(v6);
  sub_100128F8C();
  sub_100109338(v7);
  uint64_t v8 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109338(v10);
  uint64_t v11 = sub_10017DF08(&qword_100E711F8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  sub_100109338(v13);
  uint64_t v14 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  sub_100109328(v16);
  uint64_t v286 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v285 = v17;
  __chkstk_darwin(v18);
  sub_100109314();
  sub_100109328(v19);
  uint64_t v284 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v283 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  sub_100109328(v22);
  uint64_t v276 = type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v274 = v23;
  __chkstk_darwin(v24);
  sub_100109314();
  sub_100109328(v25);
  uint64_t v322 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v282 = v26;
  __chkstk_darwin(v27);
  sub_100109314();
  sub_100109338(v28);
  uint64_t v29 = sub_10017DF08(&qword_100E6E8F8);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_100109314();
  sub_100109338(v31);
  uint64_t v32 = sub_10017DF08(&qword_100E66CC8);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100109314();
  sub_100109328(v34);
  uint64_t v35 = type metadata accessor for TimeState();
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100109314();
  sub_100109338(v37);
  uint64_t v38 = sub_10017DF08(&qword_100E71408);
  uint64_t v275 = *(void *)(v38 - 8);
  __chkstk_darwin(v38 - 8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v39);
  sub_100109770();
  uint64_t v337 = v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  sub_100128F8C();
  sub_100109338(v42);
  uint64_t v43 = sub_10017DF08(&qword_100E71410);
  uint64_t v44 = sub_100109308(v43);
  __chkstk_darwin(v44);
  sub_100109314();
  sub_100109338(v45);
  uint64_t v46 = sub_10017DF08(&qword_100E6BF78);
  uint64_t v47 = sub_100109308(v46);
  __chkstk_darwin(v47);
  sub_100109314();
  sub_100109338(v48);
  uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v50 = sub_100109308(v49);
  __chkstk_darwin(v50);
  sub_100109314();
  sub_100109328(v51);
  uint64_t v313 = type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v311 = v52;
  __chkstk_darwin(v53);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v54);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v55);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v56);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v57);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v58);
  sub_100128F8C();
  sub_100109328(v59);
  uint64_t v298 = (void (*)(uint64_t, uint64_t))type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v297 = v60;
  __chkstk_darwin(v61);
  sub_100109314();
  sub_100109328(v62);
  uint64_t v327 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v321 = v63;
  __chkstk_darwin(v64);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v65);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v66);
  sub_100179C90();
  __chkstk_darwin(v67);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v68);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v69);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v70);
  sub_100128F8C();
  sub_100109328(v71);
  uint64_t v317 = (void (*)(uint64_t, char *, uint64_t))type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v296 = v72;
  __chkstk_darwin(v73);
  sub_100109314();
  sub_100109328(v74);
  uint64_t v308 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v307 = v75;
  __chkstk_darwin(v76);
  sub_100109314();
  sub_100109328(v77);
  uint64_t v78 = type metadata accessor for NewsDataModel();
  uint64_t v79 = sub_100109308(v78);
  __chkstk_darwin(v79);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v80);
  sub_100128F8C();
  uint64_t v82 = sub_100109328(v81);
  uint64_t v292 = type metadata accessor for WeatherData(v82);
  sub_100162E4C();
  __chkstk_darwin(v83);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v84);
  sub_100128F8C();
  sub_100109338(v85);
  uint64_t v86 = sub_10017DF08(&qword_100E63770);
  uint64_t v87 = sub_100109308(v86);
  __chkstk_darwin(v87);
  sub_1001626E0();
  uint64_t v90 = v89 - v88;
  uint64_t v91 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v92);
  sub_100162EF8();
  sub_100179C90();
  uint64_t v94 = __chkstk_darwin(v93);
  uint64_t v96 = (char *)&v270 - v95;
  __chkstk_darwin(v94);
  sub_100109338((uint64_t)&v270 - v97);
  uint64_t v98 = sub_10017DF08(&qword_100E71418);
  uint64_t v99 = sub_100109308(v98);
  __chkstk_darwin(v99);
  sub_1001626E0();
  uint64_t v102 = v101 - v100;
  uint64_t v103 = type metadata accessor for ConditionDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v104);
  sub_100162EF8();
  sub_100179C90();
  uint64_t v106 = __chkstk_darwin(v105);
  long long v108 = (char *)&v270 - v107;
  __chkstk_darwin(v106);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v109);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v110);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v111);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v112);
  uint64_t v114 = (char *)&v270 - v113;
  uint64_t v334 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v333 = v115;
  __chkstk_darwin(v116);
  sub_1001626E0();
  uint64_t v119 = v118 - v117;
  uint64_t v312 = v2;
  id v120 = *(id *)(v2 + 96);
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  id v331 = v120;
  uint64_t v121 = v336;
  uint64_t v332 = v119;
  os_signpost(_:dso:log:name:signpostID:)();
  sub_10039FAD8(v102);
  sub_10012B520(v102, 1, v103);
  if (v136)
  {
    uint64_t v122 = v335;
    sub_100178110(v102, &qword_100E71418);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v123 = type metadata accessor for Logger();
    sub_1002102B0(v123, (uint64_t)qword_100F51ED0);
    uint64_t v124 = Logger.logObject.getter();
    os_log_type_t v125 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v124, v125))
    {
      uint64_t v126 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v126 = 0;
      _os_log_impl((void *)&_mh_execute_header, v124, v125, "Failed to create condition detail input due to missing conditionDetailViewState", v126, 2u);
      sub_100162EE0();
    }

    uint64_t v127 = type metadata accessor for ConditionDetailInput.Input(0);
    sub_1001A2BEC(v122, 1, v128, v127);
    uint64_t v130 = v122;
    goto LABEL_22;
  }
  sub_100183700();
  uint64_t v131 = *(void *)(v121 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v132 = *(int *)(v103 + 20);
  uint64_t v326 = v114;
  uint64_t v133 = &v114[v132];
  swift_bridgeObjectRetain();
  uint64_t v134 = Location.id.getter();
  sub_1001BBE9C(v134, v135, v131);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10012B520(v90, 1, v91);
  uint64_t v270 = v103;
  if (v136)
  {
    sub_100178110(v90, &qword_100E63770);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v137 = type metadata accessor for Logger();
    sub_1002102B0(v137, (uint64_t)qword_100F51ED0);
    uint64_t v138 = (uint64_t)v326;
    sub_10019DD24();
    uint64_t v139 = (uint64_t)v316;
    sub_10019DD24();
    long long v140 = Logger.logObject.getter();
    os_log_type_t v141 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v140, v141))
    {
      uint64_t v142 = swift_slowAlloc();
      *(void *)&v341[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v142 = 136315651;
      sub_1001A3918(&qword_100E71420, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
      uint64_t v143 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v339 = sub_10018C430(v143, v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74((uint64_t)v108, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v142 + 12) = 2160;
      sub_10017B29C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v142 + 22) = 2081;
      sub_1001889C8();
      uint64_t v145 = Location.id.getter();
      unint64_t v339 = sub_10018C430(v145, v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74(v139, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, v140, v141, "Failed to create condition detail input due to missing weather data for location; condition=%s, location=%{private,mask.hash}s",
        (uint8_t *)v142,
        0x20u);
      swift_arrayDestroy();
      sub_100162EE0();
      uint64_t v138 = (uint64_t)v326;
      sub_100162EE0();
    }
    else
    {
      sub_1001BBF74((uint64_t)v108, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_1001BBF74(v139, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    }

    uint64_t v179 = v335;
    sub_1001BBF74(v138, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v180 = type metadata accessor for ConditionDetailInput.Input(0);
    sub_1001A2BEC(v179, 1, v181, v180);
    uint64_t v130 = v179;
LABEL_22:
    uint64_t v182 = 0;
LABEL_35:
    _s7Weather24LocationCompositionStateOwst_0(v130, v182, 1, v129);
    goto LABEL_36;
  }
  uint64_t v147 = v325;
  sub_100183700();
  sub_10019DD24();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    sub_1001BBF74((uint64_t)v96, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v183 = type metadata accessor for Logger();
    sub_1002102B0(v183, (uint64_t)qword_100F51ED0);
    uint64_t v184 = v291;
    sub_10019DD24();
    uint64_t v185 = v293;
    sub_10019DD24();
    uint64_t v186 = (uint64_t)v295;
    sub_10019DD24();
    long long v187 = Logger.logObject.getter();
    os_log_type_t v188 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v187, v188))
    {
      uint64_t v189 = swift_slowAlloc();
      uint64_t v338 = swift_slowAlloc();
      unint64_t v339 = v338;
      *(_DWORD *)uint64_t v189 = 136315907;
      sub_1001A3918(&qword_100E71420, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
      uint64_t v190 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v341[0] = sub_10016414C(v190, v191, (uint64_t *)&v339);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74(v184, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v189 + 12) = 2160;
      *(void *)&v341[0] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v189 + 22) = 2081;
      sub_1001889C8();
      uint64_t v192 = Location.id.getter();
      *(void *)&v341[0] = sub_10016414C(v192, v193, (uint64_t *)&v339);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74(v185, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v189 + 32) = 2080;
      sub_100864B1C((uint64_t *)v341);
      sub_10017DF08(&qword_100E71428);
      uint64_t v194 = String.init<A>(describing:)();
      *(void *)&v341[0] = sub_10016414C(v194, v195, (uint64_t *)&v339);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74(v186, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      _os_log_impl((void *)&_mh_execute_header, v187, v188, "Failed to create condition detail input due to missing weather data; condition=%s, location=%{private,mask.hash}"
        "s, currentLocationWeather=%s",
        (uint8_t *)v189,
        0x2Au);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {

      sub_1001BBF74(v186, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_1001BBF74(v185, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_1001BBF74(v184, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    }
    sub_1001BBF74(v147, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v200 = v335;
    sub_1001BBF74((uint64_t)v326, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v129 = type metadata accessor for ConditionDetailInput(0);
    uint64_t v130 = v200;
    goto LABEL_34;
  }
  uint64_t v149 = (uint64_t)&v96[*(int *)(sub_10017DF08(&qword_100E63748) + 48)];
  uint64_t v150 = (uint64_t)v323;
  sub_100183700();
  sub_100183700();
  sub_1001BBF74(v149, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  uint64_t v151 = v294;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v295 = *(void (**)(uint64_t, void (*)(uint64_t, char *, uint64_t)))(v296 + 8);
  v295(v151, v317);
  uint64_t v152 = v312;
  uint64_t v296 = v150 + *(int *)(v292 + 24);
  WeatherDataModel.currentWeather.getter();
  uint64_t v153 = v329;
  CurrentWeather.date.getter();
  sub_100162F0C();
  v154();
  IsSameDayCache.startOfDay(_:calendar:)();
  uint64_t v155 = (void (*)(uint64_t, uint64_t))v321[1];
  uint64_t v156 = v133;
  uint64_t v157 = v327;
  v316 = v321 + 1;
  uint64_t v298 = v155;
  v155(v153, v327);
  Date.wc_addDays(_:calendar:)();
  sub_1001B1E64((void *)(v152 + 16), *(void *)(v152 + 40));
  uint64_t v297 = v156;
  Location.timeZone.getter();
  uint64_t v158 = sub_1001B2DAC(v150, v151, 1, 11, 0);
  v295(v151, v317);
  unint64_t v159 = v158[2];
  if (v159 < 7)
  {
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v160 = type metadata accessor for Logger();
    uint64_t v161 = (void (*)(uint64_t))sub_1002102B0(v160, (uint64_t)qword_100F51ED0);
    uint64_t v162 = (uint64_t)v326;
    uint64_t v163 = v278;
    sub_10019DD24();
    uint64_t v164 = v289;
    sub_10019DD24();
    swift_bridgeObjectRetain();
    uint64_t v165 = Logger.logObject.getter();
    os_log_type_t v166 = static os_log_type_t.error.getter();
    BOOL v167 = os_log_type_enabled(v165, v166);
    uint64_t v168 = v325;
    if (v167)
    {
      uint64_t v169 = swift_slowAlloc();
      *(void *)&v341[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v169 = 134218755;
      swift_bridgeObjectRelease();
      unint64_t v339 = v159;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v169 + 12) = 2080;
      sub_1001A3918(&qword_100E71420, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
      uint64_t v170 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v339 = sub_10018C430(v170, v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74(v163, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v169 + 22) = 2160;
      sub_10017B29C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v169 + 32) = 2081;
      sub_1001889C8();
      uint64_t v172 = v289;
      uint64_t v174 = (void (*)(uint64_t))(v289 + v173);
      uint64_t v175 = Location.id.getter();
      unint64_t v339 = sub_10018C430(v175, v176);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74(v172, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, v165, v166, "Failed to create condition detail input due to invalid daily data; dayCount=%ld, condition=%s, location=%{private,mask.hash}s",
        (uint8_t *)v169,
        0x2Au);
      swift_arrayDestroy();
      sub_100162EE0();
      uint64_t v162 = (uint64_t)v326;
      sub_100162EE0();

      sub_10018696C();
      v174(v177);
      ((void (*)(uint64_t, uint64_t))v174)(v320, v157);
      sub_1001BBF74(v319, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v178 = v325;
    }
    else
    {

      swift_bridgeObjectRelease();
      sub_1001BBF74(v164, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_1001BBF74(v163, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      swift_bridgeObjectRelease();
      sub_10018696C();
      v161(v201);
      ((void (*)(uint64_t, uint64_t))v161)(v320, v157);
      sub_1001BBF74(v319, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v178 = v168;
    }
    sub_1001BBF74(v178, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v202 = sub_1001A15FC();
    v203(v202);
    sub_1001BBF74((uint64_t)v323, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001BBF74(v162, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v129 = type metadata accessor for ConditionDetailInput(0);
    uint64_t v130 = v335;
LABEL_34:
    uint64_t v182 = 1;
    goto LABEL_35;
  }
  uint64_t v196 = (char *)v158 + ((*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80));
  uint64_t v197 = *(void *)(v311 + 72);
  uint64_t v198 = v313;
  uint64_t v317 = *(void (**)(uint64_t, char *, uint64_t))(v311 + 16);
  v317(v310, &v196[v197], v313);
  uint64_t v199 = v279;
  sub_1001B7204((uint64_t)&v326[*(int *)(v270 + 24)], v279, (uint64_t *)&unk_100E73CA0);
  sub_10012B520(v199, 1, v157);
  if (v136)
  {
    sub_100178110(v199, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    uint64_t v153 = (uint64_t)(v321 + 4);
    uint64_t v295 = (void (*)(uint64_t, void (*)(uint64_t, char *, uint64_t)))v321[4];
    ((void (*)(uint64_t, uint64_t, uint64_t))v295)(v324, v199, v157);
    uint64_t v206 = v158[2];
    if (v206)
    {
      uint64_t v293 = v153;
      unint64_t v294 = v159;
      uint64_t v207 = (void (**)(uint64_t, uint64_t))(v311 + 8);
      swift_bridgeObjectRetain();
      uint64_t v208 = v273;
      while (1)
      {
        sub_100185A20();
        v209();
        DayWeather.date.getter();
        uint64_t v153 = static Date.== infix(_:_:)();
        sub_10018A8B8();
        v210();
        if (v153) {
          break;
        }
        (*v207)(v208, v198);
        v196 += v197;
        if (!--v206)
        {
          swift_bridgeObjectRelease();
          unint64_t v159 = v294;
          goto LABEL_42;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v268 = *(void (**)(void))(v311 + 32);
      uint64_t v153 = v271;
      sub_10019DE68();
      sub_10018710C();
      v268();
      sub_10018710C();
      v268();
      uint64_t v157 = v327;
      sub_1001627D4();
      v269();
      sub_10018710C();
      v268();
      sub_10018B018();
      unint64_t v159 = v294;
      goto LABEL_44;
    }
LABEL_42:
    uint64_t v157 = v327;
    v298(v324, v327);
  }
  sub_100185A20();
  v211();
  DayWeather.date.getter();
  sub_10018B018();
LABEL_44:
  uint64_t v212 = sub_1004D5008();
  uint64_t v213 = v280;
  sub_10043F70C(v212, v280);
  swift_bridgeObjectRelease();
  sub_10012B520(v213, 1, v153);
  if (v136)
  {
    sub_100178110(v213, &qword_100E71410);
    uint64_t v214 = type metadata accessor for MidpointInterpolator.InterpolationMode();
    _s7Weather24LocationCompositionStateOwst_0(v303, 1, 1, v214);
  }
  else
  {
    sub_1003A18F4(v303);
    (*(void (**)(uint64_t, uint64_t))(v274 + 8))(v213, v153);
  }
  uint64_t v215 = v281;
  _s7Weather24LocationCompositionStateOwst_0(v281, 1, 1, v290);
  uint64_t v340 = sub_100A96C2C(v215, v159);
  unint64_t v216 = sub_1001AB3E0();
  __chkstk_darwin(v216);
  static OS_dispatch_queue.concurrentPerform(iterations:execute:)();
  swift_bridgeObjectRelease();
  DayWeather.date.getter();
  LODWORD(v324) = static Date.== infix(_:_:)();
  sub_10018A8B8();
  v217();
  sub_10019DD24();
  sub_1001627D4();
  v218();
  WeatherDataModel.hourlyForecast.getter();
  WeatherDataModel.minuteForecast.getter();
  uint64_t v219 = v340;
  uint64_t v220 = *(void *)(v340 + 16);
  if (v220)
  {
    sub_10017F038();
    uint64_t v222 = v219 + v221;
    uint64_t v224 = *(void *)(v223 + 72);
    swift_bridgeObjectRetain();
    uint64_t v225 = _swiftEmptyArrayStorage;
    uint64_t v226 = v290;
    uint64_t v227 = v330;
    do
    {
      uint64_t v228 = v337;
      sub_1001B7204(v222, v337, &qword_100E71408);
      sub_1001278D0(v228, v227, &qword_100E71408);
      sub_10012B520(v227, 1, v226);
      if (v136)
      {
        sub_100178110(v227, &qword_100E71408);
      }
      else
      {
        sub_100183700();
        sub_100183700();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v225 = (void *)sub_1007E9B30(0, v225[2] + 1, 1, (uint64_t)v225);
        }
        unint64_t v231 = v225[2];
        unint64_t v230 = v225[3];
        if (v231 >= v230 >> 1) {
          uint64_t v225 = (void *)sub_1007E9B30(v230 > 1, v231 + 1, 1, (uint64_t)v225);
        }
        v225[2] = v231 + 1;
        sub_10017F038();
        sub_100183700();
        uint64_t v227 = v330;
      }
      v222 += v224;
      --v220;
    }
    while (v220);
    swift_bridgeObjectRelease();
    uint64_t v157 = v327;
  }
  else
  {
    uint64_t v225 = _swiftEmptyArrayStorage;
  }
  uint64_t v232 = (uint64_t)v326;
  sub_10008B8B4();
  uint64_t v234 = v233();
  sub_1004D5280(v234, v235, v236, v237, v238, v239, v240, v241, v270, v271, v272, v273, v274, v275, v276, v277, v278, v279, v280,
    v281);
  uint64_t v242 = (void (*)(void))v321[2];
  sub_100172338();
  v242();
  sub_100172338();
  v242();
  sub_10008B8B4();
  v243();
  uint64_t v244 = v336 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  uint64_t v338 = type metadata accessor for EnvironmentState();
  sub_10008B8B4();
  v245();
  sub_100185A20();
  v246();
  WeatherDataModel.currentWeather.getter();
  WeatherDataModel.dailyForecast.getter();
  uint64_t v247 = v323;
  sub_10019DD24();
  uint64_t v248 = v319;
  sub_10019DD24();
  uint64_t v249 = v270;
  uint64_t v250 = v287;
  sub_1001B7204(v232 + *(int *)(v270 + 32), v287, &qword_100E711F8);
  uint64_t v251 = *v247;
  uint64_t v252 = v247[1];
  uint64_t v337 = v251;
  swift_bridgeObjectRetain();
  uint64_t v253 = v288;
  WeatherDataModel.weatherChanges.getter();
  uint64_t v254 = (void (*)(uint64_t))v298;
  v298(v314, v157);
  uint64_t v255 = sub_100163EA4((uint64_t)&v345);
  v254(v255);
  uint64_t v256 = sub_100163EA4((uint64_t)v343);
  v254(v256);
  sub_1001BBF74(v248, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_1001BBF74(v325, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v257 = (_OWORD *)(v244 + *(int *)(v338 + 68));
  long long v258 = v257[1];
  v341[0] = *v257;
  v341[1] = v258;
  long long v342 = v257[2];
  long long v344 = v341[0];
  long long v345 = v258;
  long long v346 = v342;
  uint64_t v259 = (uint64_t)v326;
  uint64_t v260 = v335;
  sub_10039D098(v304, (uint64_t)v225, v324 & 1, v335, v301, v305, v306, v302, v318, v309, v299, v300, v250, v337, v252, v253, v303, (uint64_t)v341, v326[*(int *)(v249 + 36)],
    *(unsigned char *)(v244 + *(int *)(v338 + 44)));
  sub_10011CAF0((id *)&v344);
  sub_10011CAF0((id *)&v344 + 1);
  sub_10011CAF0((id *)&v345);
  sub_10011CAF0((id *)&v345 + 1);
  sub_10011CAF0((id *)&v346);
  sub_10011CAF0((id *)&v346 + 1);
  uint64_t v261 = *(void (**)(uint64_t, uint64_t))(v311 + 8);
  uint64_t v262 = v313;
  v261(v315, v313);
  v261(v310, v262);
  uint64_t v263 = sub_1001A15FC();
  v264(v263);
  sub_1001BBF74((uint64_t)v323, (void (*)(void))type metadata accessor for WeatherData);
  sub_1001BBF74(v259, (void (*)(void))type metadata accessor for ConditionDetailViewState);
  uint64_t v265 = type metadata accessor for ConditionDetailInput.Input(0);
  sub_1001A2BEC(v260, 0, v266, v265);
  _s7Weather24LocationCompositionStateOwst_0(v260, 0, 1, v267);
  swift_bridgeObjectRelease();
LABEL_36:
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  sub_100162F0C();
  return v204();
}

uint64_t sub_10039FAD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v48 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100162EF8();
  uint64_t v44 = v3;
  sub_1001626D4();
  __chkstk_darwin(v4);
  sub_100128F8C();
  uint64_t v46 = v5;
  uint64_t v47 = type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v43 = v7;
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100128F8C();
  uint64_t v45 = v9;
  uint64_t v10 = type metadata accessor for ConditionDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100162EF8();
  v42[1] = v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100109770();
  v42[2] = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_10016278C();
  uint64_t v19 = v17 - v18;
  __chkstk_darwin(v20);
  sub_100164A00();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v42 - v22;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_10016278C();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  sub_10019DD24();
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v42[0] = v10;
    sub_100183700();
    sub_100183700();
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_100183700();
      uint64_t v34 = v49;
      sub_100183700();
      uint64_t v35 = 0;
      uint64_t v10 = v42[0];
      return _s7Weather24LocationCompositionStateOwst_0(v34, v35, 1, v10);
    }
    sub_1001BBF74(v27, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t v10 = v42[0];
  }
  else
  {
    sub_1001BBF74((uint64_t)v23, (void (*)(void))type metadata accessor for ModalViewState);
  }
  sub_10019DD24();
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v29 = type metadata accessor for ModalViewState;
    uint64_t v30 = v1;
  }
  else
  {
    uint64_t v31 = v45;
    sub_100183700();
    uint64_t v32 = v46;
    sub_10019DD24();
    sub_1001BBF74(v31, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_10019DE68();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = v10;
      sub_100183700();
      uint64_t v34 = v49;
LABEL_19:
      uint64_t v10 = v33;
      sub_100183700();
      uint64_t v35 = 0;
      return _s7Weather24LocationCompositionStateOwst_0(v34, v35, 1, v10);
    }
    uint64_t v29 = type metadata accessor for LocationPreviewModalViewState;
    uint64_t v30 = v32;
  }
  sub_1001BBF74(v30, (void (*)(void))v29);
  sub_10019DD24();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v36 = type metadata accessor for ModalViewState.MapViewModal(0);
    sub_10012B520(v19, 1, v36);
    if (!v37)
    {
      uint64_t v38 = v43;
      sub_100183700();
      uint64_t v39 = v44;
      sub_10019DD24();
      sub_1001BBF74(v38, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v34 = v49;
      if (EnumCaseMultiPayload != 1)
      {
        sub_1001BBF74(v39, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
        uint64_t v35 = 1;
        return _s7Weather24LocationCompositionStateOwst_0(v34, v35, 1, v10);
      }
      uint64_t v33 = v10;
      sub_100183700();
      goto LABEL_19;
    }
    sub_100178110(v19, &qword_100E663E8);
  }
  else
  {
    sub_1001BBF74(v19, (void (*)(void))type metadata accessor for ModalViewState);
  }
  uint64_t v35 = 1;
  uint64_t v34 = v49;
  return _s7Weather24LocationCompositionStateOwst_0(v34, v35, 1, v10);
}

uint64_t sub_1003A00C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v41 = a4;
  uint64_t v49 = a3;
  uint64_t v47 = a1;
  uint64_t v7 = type metadata accessor for TimeZone();
  __chkstk_darwin(v7 - 8);
  uint64_t v51 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E66CC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v48 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DetailChartCondition();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v46 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = type metadata accessor for ConditionDetailChartHeaderInput.HeaderKind();
  uint64_t v39 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v38 - v24;
  __chkstk_darwin(v23);
  uint64_t v40 = (char *)&v38 - v26;
  DayWeather.date.getter();
  uint64_t v50 = a2;
  char v27 = static Date.== infix(_:_:)();
  uint64_t v42 = v13;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
  v28(v18, v12);
  uint64_t v44 = v12;
  if (v27)
  {
    uint64_t v29 = &v25[*(int *)(sub_10017DF08(&qword_100E71438) + 48)];
    type metadata accessor for WeatherData(0);
    WeatherDataModel.currentWeather.getter();
    uint64_t v30 = type metadata accessor for DayWeather();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v29, v41, v30);
    uint64_t v31 = v39;
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v25, enum case for ConditionDetailChartHeaderInput.HeaderKind.today(_:), v19);
  }
  else
  {
    uint64_t v38 = v22;
    uint64_t v32 = v41;
    DayWeather.date.getter();
    DayWeather.date.getter();
    char v33 = static Date.< infix(_:_:)();
    v28(v16, v12);
    v28(v18, v12);
    uint64_t v34 = type metadata accessor for DayWeather();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v25, v32, v34);
    uint64_t v31 = v39;
    if (v33) {
      uint64_t v35 = (unsigned int *)&enum case for ConditionDetailChartHeaderInput.HeaderKind.pastDay(_:);
    }
    else {
      uint64_t v35 = (unsigned int *)&enum case for ConditionDetailChartHeaderInput.HeaderKind.futureDay(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v25, *v35, v19);
    uint64_t v22 = v38;
  }
  uint64_t v36 = v40;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v40, v25, v19);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v22, v36, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v46, v47, v45);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.hourlyForecast.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v18, v50, v44);
  type metadata accessor for ConditionDetailViewState();
  Location.timeZone.getter();
  ConditionDetailChartHeaderInput.init(kind:condition:hourlyForecast:selectedDate:timeZone:)();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v36, v19);
}

uint64_t sub_1003A062C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v44 = a8;
  uint64_t v43 = a7;
  uint64_t v42 = a5;
  uint64_t v41 = a4;
  uint64_t v40 = a3;
  uint64_t v47 = a9;
  uint64_t v12 = type metadata accessor for ConditionDetailChartInput(0);
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v49 = (char *)&v38 - v15;
  uint64_t v46 = type metadata accessor for Date();
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E6ECE0);
  uint64_t v39 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v38 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v38 - v24;
  char v26 = sub_1003A0B0C();
  uint64_t v27 = a6;
  uint64_t v28 = sub_1004D5008();
  uint64_t v29 = v12;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 1, 1, v12);
  uint64_t v63 = sub_100A96C38((uint64_t)v25, *(void *)(v28 + 16));
  sub_1001AB3E0();
  uint64_t v52 = v28;
  uint64_t v53 = v40;
  uint64_t v54 = a1;
  uint64_t v55 = v41;
  uint64_t v56 = v42;
  uint64_t v57 = v27;
  char v58 = v26;
  uint64_t v59 = a2;
  uint64_t v60 = v43;
  uint64_t v61 = v44;
  uint64_t v62 = &v63;
  static OS_dispatch_queue.concurrentPerform(iterations:execute:)();
  swift_bridgeObjectRelease();
  DayWeather.date.getter();
  uint64_t v30 = *(void *)(v63 + 16);
  if (v30)
  {
    uint64_t v31 = v63 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    uint64_t v32 = *(void *)(v39 + 72);
    uint64_t v44 = v63;
    swift_bridgeObjectRetain();
    char v33 = _swiftEmptyArrayStorage;
    do
    {
      sub_1001B7204(v31, (uint64_t)v23, &qword_100E6ECE0);
      sub_1001278D0((uint64_t)v23, (uint64_t)v20, &qword_100E6ECE0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v29) == 1)
      {
        sub_100178110((uint64_t)v20, &qword_100E6ECE0);
      }
      else
      {
        sub_100183700();
        sub_100183700();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v33 = (void *)sub_1007E9B78(0, v33[2] + 1, 1, (uint64_t)v33);
        }
        unint64_t v35 = v33[2];
        unint64_t v34 = v33[3];
        if (v35 >= v34 >> 1) {
          char v33 = (void *)sub_1007E9B78(v34 > 1, v35 + 1, 1, (uint64_t)v33);
        }
        _OWORD v33[2] = v35 + 1;
        sub_100183700();
      }
      v31 += v32;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v33 = _swiftEmptyArrayStorage;
  }
  uint64_t v36 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v47, v48, v46);
  *(void *)(v36 + *(int *)(type metadata accessor for ConditionDetailChartInputs(0) + 20)) = v33;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A0B0C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  DayWeather.date.getter();
  DayWeather.date.getter();
  char v7 = static Date.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if (v7) {
    return 1;
  }
  DayWeather.date.getter();
  DayWeather.date.getter();
  char v10 = static Date.< infix(_:_:)();
  v8(v4, v0);
  v8(v6, v0);
  if (v10) {
    return 0;
  }
  else {
    return 2;
  }
}

uint64_t sub_1003A0CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void (*a11)(char *, uint64_t))
{
  uint64_t v90 = a8;
  unsigned int v103 = a7;
  uint64_t v114 = a6;
  uint64_t v101 = a1;
  uint64_t v102 = a5;
  uint64_t v106 = a4;
  uint64_t v107 = a9;
  uint64_t v108 = type metadata accessor for ConditionDetailViewState();
  uint64_t v13 = __chkstk_darwin(v108);
  uint64_t v95 = (char *)v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v94 = (char *)v86 - v15;
  uint64_t v93 = type metadata accessor for DayWeather();
  uint64_t v105 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for ConditionDetailChartHeaderInput();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v87 = (uint64_t)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E6BF78);
  __chkstk_darwin(v18 - 8);
  uint64_t v97 = (char *)v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void (*)(char *, uint64_t))type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v112 = *((void *)v20 - 1);
  uint64_t v113 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  v86[0] = (uint64_t)v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v99 = (char *)v86 - v23;
  uint64_t v24 = type metadata accessor for Location();
  uint64_t v110 = *(void *)(v24 - 8);
  uint64_t v111 = v24;
  __chkstk_darwin(v24);
  char v26 = (char *)v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10017DF08(&qword_100E71430);
  __chkstk_darwin(v27 - 8);
  uint64_t v100 = (char *)v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for ConditionDetailChartDataInput(0);
  __chkstk_darwin(v98);
  v86[1] = (uint64_t)v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  unint64_t v34 = (char *)v86 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32);
  char v37 = (char *)v86 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)v86 - v38;
  DayWeather.date.getter();
  uint64_t v109 = v39;
  IsSameDayCache.startOfDay(_:calendar:)();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v92 = v37;
  uint64_t v115 = v30;
  uint64_t v106 = v31 + 8;
  v40(v37, v30);
  sub_10020D948(a2 + 56, (uint64_t)&v117);
  uint64_t v41 = v118;
  uint64_t v42 = v119;
  uint64_t v96 = sub_1001B1E64(&v117, v118);
  uint64_t v43 = v26;
  uint64_t v44 = v26;
  uint64_t v45 = (uint64_t)v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v44, v114 + *(int *)(v108 + 20), v111);
  uint64_t v104 = a3;
  DayWeather.date.getter();
  uint64_t v46 = v101;
  sub_1003A18F4(v45);
  uint64_t v47 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v47) == 1)
  {
    sub_100178110(v45, &qword_100E6BF78);
    uint64_t v48 = v99;
    (*(void (**)(char *, void, void (*)(char *, uint64_t)))(v112 + 104))(v99, enum case for ChartViewModelInterpolationMode.none(_:), v113);
  }
  else
  {
    uint64_t v49 = v86[0];
    sub_1003A1B20(v86[0]);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v45, v47);
    uint64_t v48 = v99;
    (*(void (**)(char *, uint64_t, void (*)(char *, uint64_t)))(v112 + 32))(v99, v49, v113);
  }
  uint64_t v50 = *(void (**)(uint64_t, char *, char *, char *, uint64_t, void, char *, uint64_t, uint64_t))(v42 + 8);
  uint64_t v85 = v42;
  uint64_t v51 = (uint64_t)v100;
  uint64_t v52 = v109;
  v50(v102, v43, v34, v109, v46, v103, v48, v41, v85);
  (*(void (**)(char *, void))(v112 + 8))(v48, v113);
  v40(v34, v115);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v43, v111);
  int v53 = _s7Weather24LocationCompositionStateOwet_0(v51, 1, v98);
  uint64_t v54 = v40;
  uint64_t v55 = v105;
  if (v53 == 1)
  {
    uint64_t v113 = v54;
    sub_100178110(v51, &qword_100E71430);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v117);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    sub_1002102B0(v56, (uint64_t)qword_100F51ED0);
    uint64_t v57 = v91;
    uint64_t v58 = v93;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v91, v104, v93);
    uint64_t v59 = (uint64_t)v94;
    sub_10019DD24();
    uint64_t v60 = (uint64_t)v95;
    sub_10019DD24();
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    int v63 = v62;
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v114 = swift_slowAlloc();
      uint64_t v117 = v114;
      *(_DWORD *)uint64_t v64 = 136315907;
      uint64_t v65 = v92;
      LODWORD(v112) = v63;
      DayWeather.date.getter();
      sub_1001A3918(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v66 = v115;
      uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v69 = v68;
      v113(v65, v66);
      uint64_t v116 = sub_10016414C(v67, v69, &v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v93);
      *(_WORD *)(v64 + 12) = 2080;
      type metadata accessor for DetailCondition();
      sub_1001A3918(&qword_100E71420, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
      uint64_t v70 = (uint64_t)v94;
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v116 = sub_10016414C(v71, v72, &v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74(v70, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v64 + 22) = 2160;
      uint64_t v116 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v64 + 32) = 2081;
      uint64_t v73 = (uint64_t)v95;
      uint64_t v74 = Location.id.getter();
      uint64_t v116 = sub_10016414C(v74, v75, &v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001BBF74(v73, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v112, "Failed to create chart input for date=%s, condition=%s, location=%{private,mask.hash}s", (uint8_t *)v64, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1001BBF74(v60, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_1001BBF74(v59, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v58);
    }
    v113(v109, v115);
    uint64_t v83 = type metadata accessor for ConditionDetailChartInput(0);
    uint64_t v81 = v107;
    uint64_t v82 = 1;
  }
  else
  {
    uint64_t v112 = a10;
    uint64_t v113 = a11;
    sub_100183700();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v117);
    uint64_t v76 = v115;
    uint64_t v77 = (uint64_t)v92;
    DayWeather.date.getter();
    uint64_t v78 = v87;
    sub_1003A00C4(v46, v77, v112, (uint64_t)v113, v114, v87);
    v54((char *)v77, v76);
    v54(v52, v76);
    uint64_t v79 = type metadata accessor for ConditionDetailChartInput(0);
    uint64_t v80 = v107;
    sub_100183700();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v80, v78, v89);
    uint64_t v81 = v80;
    uint64_t v82 = 0;
    uint64_t v83 = v79;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v81, v82, 1, v83);
}

uint64_t sub_1003A18F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DetailChartCondition();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for DetailChartCondition.humidity(_:) || v8 == enum case for DetailChartCondition.pressure(_:)) {
    goto LABEL_6;
  }
  if (v8 == enum case for DetailChartCondition.precipitationTotal(_:))
  {
LABEL_9:
    uint64_t v15 = type metadata accessor for MidpointInterpolator.InterpolationMode();
    uint64_t v13 = a1;
    uint64_t v14 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v13, v14, 1, v15);
  }
  if (v8 == enum case for DetailChartCondition.temperature(_:)
    || v8 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    goto LABEL_6;
  }
  if (v8 == enum case for DetailChartCondition.uvIndex(_:))
  {
LABEL_16:
    char v10 = (unsigned int *)&enum case for MidpointInterpolator.InterpolationMode.monotoneCubic(_:);
    goto LABEL_7;
  }
  if (v8 == enum case for DetailChartCondition.visibility(_:))
  {
LABEL_6:
    char v10 = (unsigned int *)&enum case for MidpointInterpolator.InterpolationMode.cubic(_:);
LABEL_7:
    uint64_t v11 = *v10;
    uint64_t v12 = type metadata accessor for MidpointInterpolator.InterpolationMode();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a1, v11, v12);
    uint64_t v13 = a1;
    uint64_t v14 = 0;
    uint64_t v15 = v12;
    return _s7Weather24LocationCompositionStateOwst_0(v13, v14, 1, v15);
  }
  if (v8 == enum case for DetailChartCondition.wind(_:)) {
    goto LABEL_16;
  }
  if (v8 == enum case for DetailChartCondition.chanceOfRain(_:)) {
    goto LABEL_9;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1003A1B20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for MidpointInterpolator.InterpolationMode.cubic(_:))
  {
    uint64_t v9 = enum case for ChartViewModelInterpolationMode.cubic(_:);
    uint64_t v10 = type metadata accessor for ChartViewModelInterpolationMode();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(a1, v9, v10);
  }
  else
  {
    int v12 = v8;
    int v13 = enum case for MidpointInterpolator.InterpolationMode.monotoneCubic(_:);
    uint64_t v14 = type metadata accessor for ChartViewModelInterpolationMode();
    uint64_t v15 = *(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104);
    if (v12 == v13)
    {
      return v15(a1, enum case for ChartViewModelInterpolationMode.monotoneCubic(_:), v14);
    }
    else
    {
      v15(a1, enum case for ChartViewModelInterpolationMode.cubic(_:), v14);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1003A1CF4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, void (*a11)(char *, uint64_t), uint64_t a12)
{
  uint64_t v20 = sub_10017DF08(&qword_100E6ECE0);
  uint64_t result = __chkstk_darwin(v20 - 8);
  uint64_t v23 = &v27[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > a1)
  {
    uint64_t v29 = a7;
    uint64_t v30 = a12;
    unsigned int v28 = a8;
    uint64_t v24 = *(void *)(type metadata accessor for DetailChartCondition() - 8);
    uint64_t v25 = sub_1003A0CA0(a2+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * a1, a3, a4, a5, a6, v29, v28, a9, (uint64_t)v23, a10, a11);
    uint64_t v31 = *(void *)(a3 + 104);
    __chkstk_darwin(v25);
    *(void *)&v27[-32] = v30;
    *(void *)&v27[-24] = a1;
    char v26 = v23;
    type metadata accessor for UnfairLock();
    swift_retain();
    Lock.sync<A>(_:)();
    swift_release();
    return sub_100178110((uint64_t)v23, &qword_100E6ECE0);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003A1EF8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v6;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_100ABB544();
  uint64_t v6 = result;
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (*(void *)(v6 + 16) <= a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = *(void *)(sub_10017DF08(&qword_100E6ECE0) - 8);
  uint64_t v9 = v6
     + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
     + *(void *)(v8 + 72) * a2;

  return sub_1003ADA70(a3, v9);
}

uint64_t sub_1003A1FDC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v18 = type metadata accessor for ConditionDetailChartInputs(0);
  uint64_t result = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > a1)
  {
    v24[0] = a10;
    uint64_t v22 = *(void *)(type metadata accessor for DayWeather() - 8);
    uint64_t v23 = sub_1003A062C(a2+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * a1, a3, a4, a5, a6, a7, a8, a9, (uint64_t)v21);
    v24[1] = *(void *)(a4 + 104);
    __chkstk_darwin(v23);
    v24[-4] = v24[0];
    v24[-3] = a1;
    v24[-2] = v21;
    type metadata accessor for UnfairLock();
    swift_retain();
    Lock.sync<A>(_:)();
    swift_release();
    return sub_1001BBF74((uint64_t)v21, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003A21D0(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E71408);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019DD24();
  uint64_t v8 = type metadata accessor for ConditionDetailChartInputs(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v8);
  uint64_t v9 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v9;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = sub_100ABB554();
  uint64_t v9 = result;
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v9 + 16) > a2) {
    return sub_1003AD9BC((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * a2);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003A231C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1003A235C()
{
  sub_1003A231C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConditionDetailInputFactory()
{
  return self;
}

uint64_t *sub_1003A23B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  char v7 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v132 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16);
  v132(a1, a2, v9);
  uint64_t v10 = v7[5];
  uint64_t v11 = (char *)a1 + v10;
  int v12 = (char *)a2 + v10;
  uint64_t v13 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = v7[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
  uint64_t v19 = v7[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for DetailCondition();
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  uint64_t v24 = v7[9];
  uint64_t v25 = (char *)a1 + v24;
  char v26 = (char *)a2 + v24;
  uint64_t v27 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  v132((uint64_t *)((char *)a1 + v7[10]), (uint64_t *)((char *)a2 + v7[10]), v9);
  *((unsigned char *)a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
  uint64_t v131 = v9;
  v132((uint64_t *)((char *)a1 + v7[12]), (uint64_t *)((char *)a2 + v7[12]), v9);
  uint64_t v28 = v7[13];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = v7[14];
  uint64_t v33 = (char *)a1 + v32;
  unint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for Locale();
  uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
  v130(v33, v34, v35);
  uint64_t v36 = v7[15];
  char v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for DayWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  uint64_t v40 = v7[16];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = type metadata accessor for CurrentWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  uint64_t v44 = v7[17];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  uint64_t v48 = v7[18];
  uint64_t v49 = (uint64_t *)((char *)a1 + v48);
  uint64_t v50 = (char *)a2 + v48;
  uint64_t v51 = *(uint64_t *)((char *)a2 + v48 + 8);
  *uint64_t v49 = *(uint64_t *)((char *)a2 + v48);
  v49[1] = v51;
  uint64_t v52 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v53 = v52[5];
  uint64_t v54 = (char *)v49 + v53;
  uint64_t v55 = &v50[v53];
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v35))
  {
    uint64_t v56 = sub_10017DF08(&qword_100E63730);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    v130(v54, v55, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v35);
  }
  uint64_t v57 = v52[6];
  uint64_t v58 = (char *)v49 + v57;
  uint64_t v59 = &v50[v57];
  uint64_t v60 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  uint64_t v61 = v52[7];
  os_log_type_t v62 = (char *)v49 + v61;
  int v63 = &v50[v61];
  uint64_t v64 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
  {
    uint64_t v65 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    v132((uint64_t *)v62, (uint64_t *)v63, v131);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
  }
  uint64_t v66 = v52[8];
  uint64_t v67 = (void *)((char *)v49 + v66);
  unint64_t v68 = &v50[v66];
  uint64_t v69 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v72 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v67, v68, v72);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      goto LABEL_20;
    }
    uint64_t v71 = *((void *)v68 + 1);
    *uint64_t v67 = *(void *)v68;
    v67[1] = v71;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_20:
  uint64_t v73 = v52[9];
  uint64_t v74 = (char *)v49 + v73;
  unint64_t v75 = &v50[v73];
  uint64_t v76 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
  {
    uint64_t v77 = sub_10017DF08(&qword_100E63740);
    memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
    uint64_t v78 = v131;
  }
  else
  {
    uint64_t v78 = v131;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v131))
    {
      uint64_t v79 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v74, v75, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      v132((uint64_t *)v74, (uint64_t *)v75, v131);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v131);
    }
    uint64_t v80 = *(int *)(v76 + 20);
    uint64_t v81 = &v74[v80];
    uint64_t v82 = &v75[v80];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v131))
    {
      uint64_t v83 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      v132((uint64_t *)v81, (uint64_t *)v82, v131);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v131);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
  }
  uint64_t v84 = v7[19];
  uint64_t v85 = (uint64_t *)((char *)a1 + v84);
  uint64_t v86 = (uint64_t *)((char *)a2 + v84);
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v85 = *v86;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v87 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v88 = v7[20];
  uint64_t v89 = (uint64_t *)((char *)a1 + v88);
  uint64_t v90 = (uint64_t *)((char *)a2 + v88);
  uint64_t v91 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, (uint64_t)v91))
  {
    uint64_t v92 = sub_10017DF08(&qword_100E711F8);
    memcpy(v89, v90, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    uint64_t v93 = v90[1];
    *uint64_t v89 = *v90;
    v89[1] = v93;
    uint64_t v94 = v91[5];
    uint64_t v95 = (char *)v89 + v94;
    uint64_t v96 = (char *)v90 + v94;
    swift_bridgeObjectRetain();
    v132((uint64_t *)v95, (uint64_t *)v96, v78);
    v132((void *)((char *)v89 + v91[6]), (void *)((char *)v90 + v91[6]), v78);
    v132((void *)((char *)v89 + v91[7]), (void *)((char *)v90 + v91[7]), v78);
    *(void *)((char *)v89 + v91[8]) = *(void *)((char *)v90 + v91[8]);
    uint64_t v97 = v91[9];
    uint64_t v98 = (char *)v89 + v97;
    uint64_t v99 = (char *)v90 + v97;
    v98[8] = v99[8];
    *(void *)uint64_t v98 = *(void *)v99;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, (uint64_t)v91);
  }
  uint64_t v100 = v7[21];
  uint64_t v101 = (uint64_t *)((char *)a1 + v100);
  uint64_t v102 = (uint64_t *)((char *)a2 + v100);
  uint64_t v103 = v102[1];
  *uint64_t v101 = *v102;
  v101[1] = v103;
  uint64_t v104 = v7[22];
  uint64_t v105 = (char *)a1 + v104;
  uint64_t v106 = (char *)a2 + v104;
  uint64_t v107 = type metadata accessor for WeatherChanges();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
  {
    uint64_t v108 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
  }
  uint64_t v109 = v7[23];
  uint64_t v110 = (char *)a1 + v109;
  uint64_t v111 = (char *)a2 + v109;
  uint64_t v112 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112))
  {
    uint64_t v113 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v112);
  }
  uint64_t v114 = v7[24];
  uint64_t v115 = (uint64_t *)((char *)a1 + v114);
  uint64_t v116 = (char *)a2 + v114;
  uint64_t v117 = *(void **)v116;
  uint64_t v118 = (void *)*((void *)v116 + 1);
  void *v115 = *(void *)v116;
  v115[1] = v118;
  uint64_t v119 = (void *)*((void *)v116 + 2);
  id v120 = (void *)*((void *)v116 + 3);
  v115[2] = v119;
  v115[3] = v120;
  uint64_t v121 = (void *)*((void *)v116 + 4);
  uint64_t v122 = (void *)*((void *)v116 + 5);
  v115[4] = v121;
  v115[5] = v122;
  *((unsigned char *)a1 + v7[25]) = *((unsigned char *)a2 + v7[25]);
  *((unsigned char *)a1 + v7[26]) = *((unsigned char *)a2 + v7[26]);
  id v123 = v117;
  id v124 = v118;
  id v125 = v119;
  id v126 = v120;
  id v127 = v121;
  id v128 = v122;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t type metadata accessor for ConditionDetailInput.Input(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E712D8);
}

void sub_1003A2F50(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2))
  {
    uint64_t v3 = type metadata accessor for Date();
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
    uint64_t v5 = a1 + v2[5];
    uint64_t v6 = sub_10017DF08(&qword_100E66CC8);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + v2[6];
    uint64_t v8 = sub_10017DF08(&qword_100E6E900);
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = a1 + v2[8];
    uint64_t v10 = type metadata accessor for DetailCondition();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = a1 + v2[9];
    uint64_t v12 = type metadata accessor for DetailChartCondition();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    v4(a1 + v2[10], v3);
    uint64_t v47 = v4;
    v4(a1 + v2[12], v3);
    uint64_t v13 = a1 + v2[13];
    uint64_t v14 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    uint64_t v15 = a1 + v2[14];
    uint64_t v16 = type metadata accessor for Locale();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    v17(v15, v16);
    uint64_t v18 = a1 + v2[15];
    uint64_t v19 = type metadata accessor for DayWeather();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    uint64_t v20 = a1 + v2[16];
    uint64_t v21 = type metadata accessor for CurrentWeather();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    uint64_t v22 = a1 + v2[17];
    uint64_t v23 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
    uint64_t v24 = a1 + v2[18];
    swift_bridgeObjectRelease();
    uint64_t v25 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v26 = v24 + v25[5];
    if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v16)) {
      v17(v26, v16);
    }
    uint64_t v27 = v24 + v25[6];
    uint64_t v28 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    uint64_t v29 = v24 + v25[7];
    uint64_t v30 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v30)) {
      v47(v29, v3);
    }
    uint64_t v31 = v24 + v25[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v33 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v31, v33);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v34 = v24 + v25[9];
    uint64_t v35 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35))
    {
      if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v3)) {
        v47(v34, v3);
      }
      uint64_t v36 = v34 + *(int *)(v35 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v3)) {
        v47(v36, v3);
      }
    }
    uint64_t v37 = a1 + v2[19];
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = type metadata accessor for News();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
    }
    uint64_t v39 = a1 + v2[20];
    uint64_t v40 = (int *)type metadata accessor for DetailChartSelection();
    if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, (uint64_t)v40))
    {
      swift_bridgeObjectRelease();
      v47(v39 + v40[5], v3);
      v47(v39 + v40[6], v3);
      v47(v39 + v40[7], v3);
    }
    swift_bridgeObjectRelease();
    uint64_t v41 = a1 + v2[22];
    uint64_t v42 = type metadata accessor for WeatherChanges();
    if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
    }
    uint64_t v43 = a1 + v2[23];
    uint64_t v44 = type metadata accessor for MidpointInterpolator.InterpolationMode();
    if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v44)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
    }
    uint64_t v45 = a1 + v2[24];

    uint64_t v46 = *(void **)(v45 + 40);
  }
}

char *sub_1003A3658(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  v130(a1, a2, v7);
  uint64_t v8 = v6[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = v6[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  uint64_t v17 = v6[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = type metadata accessor for DetailCondition();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  uint64_t v22 = v6[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  v130(&a1[v6[10]], &a2[v6[10]], v7);
  a1[v6[11]] = a2[v6[11]];
  uint64_t v129 = v7;
  v130(&a1[v6[12]], &a2[v6[12]], v7);
  uint64_t v26 = v6[13];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = v6[14];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for Locale();
  id v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
  v128(v31, v32, v33);
  uint64_t v34 = v6[15];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = type metadata accessor for DayWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = v6[16];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = type metadata accessor for CurrentWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  uint64_t v42 = v6[17];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  uint64_t v46 = v6[18];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  uint64_t v49 = *(void *)&a2[v46 + 8];
  *(void *)uint64_t v47 = *(void *)&a2[v46];
  *((void *)v47 + 1) = v49;
  uint64_t v50 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v51 = v50[5];
  uint64_t v52 = &v47[v51];
  uint64_t v53 = &v48[v51];
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v33))
  {
    uint64_t v54 = sub_10017DF08(&qword_100E63730);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    v128(v52, v53, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v33);
  }
  uint64_t v55 = v50[6];
  uint64_t v56 = &v47[v55];
  uint64_t v57 = &v48[v55];
  uint64_t v58 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  uint64_t v59 = v50[7];
  uint64_t v60 = &v47[v59];
  uint64_t v61 = &v48[v59];
  uint64_t v62 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v63 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    v130(v60, v61, v129);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  uint64_t v64 = v50[8];
  uint64_t v65 = &v47[v64];
  uint64_t v66 = &v48[v64];
  uint64_t v67 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v70 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v65, v66, v70);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      goto LABEL_18;
    }
    uint64_t v69 = *((void *)v66 + 1);
    *(void *)uint64_t v65 = *(void *)v66;
    *((void *)v65 + 1) = v69;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_18:
  uint64_t v71 = v50[9];
  uint64_t v72 = &v47[v71];
  uint64_t v73 = &v48[v71];
  uint64_t v74 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
  {
    uint64_t v75 = sub_10017DF08(&qword_100E63740);
    memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
    uint64_t v76 = v129;
  }
  else
  {
    uint64_t v76 = v129;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v129))
    {
      uint64_t v77 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      v130(v72, v73, v129);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v129);
    }
    uint64_t v78 = *(int *)(v74 + 20);
    uint64_t v79 = &v72[v78];
    uint64_t v80 = &v73[v78];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v129))
    {
      uint64_t v81 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      v130(v79, v80, v129);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v129);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
  }
  uint64_t v82 = v6[19];
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)uint64_t v83 = *(void *)v84;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v85 = type metadata accessor for News();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v86 = v6[20];
  uint64_t v87 = &a1[v86];
  uint64_t v88 = &a2[v86];
  uint64_t v89 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, (uint64_t)v89))
  {
    uint64_t v90 = sub_10017DF08(&qword_100E711F8);
    memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    uint64_t v91 = *((void *)v88 + 1);
    *(void *)uint64_t v87 = *(void *)v88;
    *((void *)v87 + 1) = v91;
    uint64_t v92 = v89[5];
    uint64_t v93 = &v87[v92];
    uint64_t v94 = &v88[v92];
    swift_bridgeObjectRetain();
    v130(v93, v94, v76);
    v130(&v87[v89[6]], &v88[v89[6]], v76);
    v130(&v87[v89[7]], &v88[v89[7]], v76);
    *(void *)&v87[v89[8]] = *(void *)&v88[v89[8]];
    uint64_t v95 = v89[9];
    uint64_t v96 = &v87[v95];
    uint64_t v97 = &v88[v95];
    v96[8] = v97[8];
    *(void *)uint64_t v96 = *(void *)v97;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, (uint64_t)v89);
  }
  uint64_t v98 = v6[21];
  uint64_t v99 = &a1[v98];
  uint64_t v100 = &a2[v98];
  uint64_t v101 = *((void *)v100 + 1);
  *(void *)uint64_t v99 = *(void *)v100;
  *((void *)v99 + 1) = v101;
  uint64_t v102 = v6[22];
  uint64_t v103 = &a1[v102];
  uint64_t v104 = &a2[v102];
  uint64_t v105 = type metadata accessor for WeatherChanges();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v105))
  {
    uint64_t v106 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v105);
  }
  uint64_t v107 = v6[23];
  uint64_t v108 = &a1[v107];
  uint64_t v109 = &a2[v107];
  uint64_t v110 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
  {
    uint64_t v111 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
  }
  uint64_t v112 = v6[24];
  uint64_t v113 = &a1[v112];
  uint64_t v114 = &a2[v112];
  uint64_t v115 = *(void **)v114;
  uint64_t v116 = (void *)*((void *)v114 + 1);
  *(void *)uint64_t v113 = *(void *)v114;
  *((void *)v113 + 1) = v116;
  uint64_t v117 = (void *)*((void *)v114 + 2);
  uint64_t v118 = (void *)*((void *)v114 + 3);
  *((void *)v113 + 2) = v117;
  *((void *)v113 + 3) = v118;
  uint64_t v119 = (void *)*((void *)v114 + 4);
  id v120 = (void *)*((void *)v114 + 5);
  *((void *)v113 + 4) = v119;
  *((void *)v113 + 5) = v120;
  a1[v6[25]] = a2[v6[25]];
  a1[v6[26]] = a2[v6[26]];
  id v121 = v115;
  id v122 = v116;
  id v123 = v117;
  id v124 = v118;
  id v125 = v119;
  id v126 = v120;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

char *sub_1003A4198(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1001BBF74((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
      goto LABEL_7;
    }
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v285 = *(void *)(v19 - 8);
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v285 + 24);
    v20(a1, a2, v19);
    uint64_t v21 = v6[5];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_10017DF08(&qword_100E66CC8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
    uint64_t v25 = v6[6];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = sub_10017DF08(&qword_100E6E900);
    int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
    int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
    if (v29)
    {
      if (!v30)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v89 = *(void *)(v28 - 8);
      if (!v30)
      {
        (*(void (**)(char *, char *, uint64_t))(v89 + 24))(v26, v27, v28);
LABEL_31:
        *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v91 = v6[8];
        uint64_t v92 = &a1[v91];
        uint64_t v93 = &a2[v91];
        uint64_t v94 = type metadata accessor for DetailCondition();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 24))(v92, v93, v94);
        uint64_t v95 = v6[9];
        uint64_t v96 = &a1[v95];
        uint64_t v97 = &a2[v95];
        uint64_t v98 = type metadata accessor for DetailChartCondition();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 24))(v96, v97, v98);
        v20(&a1[v6[10]], &a2[v6[10]], v19);
        a1[v6[11]] = a2[v6[11]];
        uint64_t v287 = v19;
        uint64_t v281 = v20;
        v20(&a1[v6[12]], &a2[v6[12]], v19);
        uint64_t v99 = v6[13];
        uint64_t v100 = &a1[v99];
        uint64_t v101 = &a2[v99];
        uint64_t v102 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 24))(v100, v101, v102);
        uint64_t v103 = v6[14];
        uint64_t v104 = &a1[v103];
        uint64_t v105 = &a2[v103];
        uint64_t v106 = type metadata accessor for Locale();
        uint64_t v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 24);
        uint64_t v284 = *(void *)(v106 - 8);
        v282(v104, v105, v106);
        uint64_t v107 = v6[15];
        uint64_t v108 = &a1[v107];
        uint64_t v109 = &a2[v107];
        uint64_t v110 = type metadata accessor for DayWeather();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 24))(v108, v109, v110);
        uint64_t v111 = v6[16];
        uint64_t v112 = &a1[v111];
        uint64_t v113 = &a2[v111];
        uint64_t v114 = type metadata accessor for CurrentWeather();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 24))(v112, v113, v114);
        uint64_t v115 = v6[17];
        uint64_t v116 = &a1[v115];
        uint64_t v117 = &a2[v115];
        uint64_t v118 = sub_10017DF08(&qword_100E66CA0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 24))(v116, v117, v118);
        uint64_t v119 = v6[18];
        id v120 = &a1[v119];
        id v121 = &a2[v119];
        *(void *)id v120 = *(void *)&a2[v119];
        *((void *)v120 + 1) = *(void *)&a2[v119 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v122 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v123 = v122[5];
        id v124 = &v120[v123];
        uint64_t v289 = v121;
        id v125 = &v121[v123];
        int v126 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v120[v123], 1, v106);
        int v127 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v106);
        if (v126)
        {
          if (!v127)
          {
            (*(void (**)(char *, char *, uint64_t))(v284 + 16))(v124, v125, v106);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v106);
            goto LABEL_37;
          }
        }
        else
        {
          if (!v127)
          {
            v282(v124, v125, v106);
LABEL_37:
            uint64_t v129 = v122[6];
            uint64_t v130 = &v120[v129];
            uint64_t v131 = &v289[v129];
            uint64_t v132 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 24))(v130, v131, v132);
            uint64_t v133 = v122[7];
            uint64_t v134 = &v120[v133];
            uint64_t v135 = &v289[v133];
            uint64_t v136 = sub_10017DF08(&qword_100E63738);
            int v137 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, v136);
            int v138 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v136);
            if (v137)
            {
              if (!v138)
              {
                (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v134, v135, v287);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v134, 0, 1, v136);
                goto LABEL_43;
              }
            }
            else
            {
              if (!v138)
              {
                v281(v134, v135, v287);
LABEL_43:
                if (a1 == a2) {
                  goto LABEL_68;
                }
                uint64_t v140 = v122[8];
                os_log_type_t v141 = &v120[v140];
                uint64_t v142 = &v289[v140];
                sub_1001BBF74((uint64_t)&v120[v140], (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
                uint64_t v143 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 1)
                {
                  uint64_t v193 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v141, v142, v193);
                }
                else
                {
                  if (EnumCaseMultiPayload)
                  {
                    memcpy(v141, v142, *(void *)(*(void *)(v143 - 8) + 64));
LABEL_68:
                    uint64_t v194 = v122[9];
                    unint64_t v195 = &v120[v194];
                    uint64_t v196 = &v289[v194];
                    uint64_t v197 = type metadata accessor for WeatherDataOverrides();
                    int v198 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v197);
                    int v199 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v197);
                    if (v198)
                    {
                      if (!v199)
                      {
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v287))
                        {
                          uint64_t v200 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                          memcpy(v195, v196, *(void *)(*(void *)(v200 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v195, v196, v287);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, v287);
                        }
                        uint64_t v206 = *(int *)(v197 + 20);
                        uint64_t v207 = &v195[v206];
                        uint64_t v208 = &v196[v206];
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v287))
                        {
                          uint64_t v209 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                          memcpy(v207, v208, *(void *)(*(void *)(v209 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v207, v208, v287);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 0, 1, v287);
                        }
                        uint64_t v210 = (uint64_t)v195;
                        uint64_t v211 = v197;
                        goto LABEL_87;
                      }
                      goto LABEL_74;
                    }
                    if (v199)
                    {
                      sub_1001BBF74((uint64_t)v195, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_74:
                      size_t v201 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
                      uint64_t v202 = v195;
                      uint64_t v203 = v196;
                      goto LABEL_75;
                    }
                    int v204 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v287);
                    int v205 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v287);
                    if (v204)
                    {
                      if (!v205)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v195, v196, v287);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, v287);
LABEL_119:
                        uint64_t v276 = *(int *)(v197 + 20);
                        uint64_t v277 = (uint64_t)&v195[v276];
                        uint64_t v278 = (uint64_t)&v196[v276];
                        int v279 = _s7Weather24LocationCompositionStateOwet_0(v277, 1, v287);
                        int v280 = _s7Weather24LocationCompositionStateOwet_0(v278, 1, v287);
                        if (v279)
                        {
                          if (!v280)
                          {
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(v285 + 16))(v277, v278, v287);
                            uint64_t v210 = v277;
                            uint64_t v211 = v287;
LABEL_87:
                            _s7Weather24LocationCompositionStateOwst_0(v210, 0, 1, v211);
                            goto LABEL_88;
                          }
                        }
                        else
                        {
                          if (!v280)
                          {
                            v281((char *)v277, (char *)v278, v287);
LABEL_88:
                            if (a1 != a2)
                            {
                              uint64_t v212 = v6[19];
                              uint64_t v213 = &a1[v212];
                              uint64_t v214 = &a2[v212];
                              sub_1001BBF74((uint64_t)&a1[v212], (void (*)(void))type metadata accessor for NewsDataModel);
                              type metadata accessor for NewsDataModel();
                              if (swift_getEnumCaseMultiPayload() == 1)
                              {
                                *(void *)uint64_t v213 = *(void *)v214;
                                swift_bridgeObjectRetain();
                              }
                              else
                              {
                                uint64_t v215 = type metadata accessor for News();
                                (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v213, v214, v215);
                              }
                              swift_storeEnumTagMultiPayload();
                            }
                            uint64_t v216 = v6[20];
                            uint64_t v217 = &a1[v216];
                            uint64_t v218 = &a2[v216];
                            uint64_t v219 = (int *)type metadata accessor for DetailChartSelection();
                            int v220 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v217, 1, (uint64_t)v219);
                            int v221 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, (uint64_t)v219);
                            if (v220)
                            {
                              if (!v221)
                              {
                                *(void *)uint64_t v217 = *(void *)v218;
                                *((void *)v217 + 1) = *((void *)v218 + 1);
                                uint64_t v222 = v219[5];
                                uint64_t v290 = &v217[v222];
                                uint64_t v223 = &v218[v222];
                                uint64_t v224 = *(void (**)(char *, char *, uint64_t))(v285 + 16);
                                swift_bridgeObjectRetain();
                                v224(v290, v223, v287);
                                v224(&v217[v219[6]], &v218[v219[6]], v287);
                                v224(&v217[v219[7]], &v218[v219[7]], v287);
                                *(void *)&v217[v219[8]] = *(void *)&v218[v219[8]];
                                uint64_t v225 = v219[9];
                                uint64_t v226 = &v217[v225];
                                uint64_t v227 = &v218[v225];
                                char v228 = v227[8];
                                *(void *)uint64_t v226 = *(void *)v227;
                                v226[8] = v228;
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, (uint64_t)v219);
                                goto LABEL_99;
                              }
                            }
                            else
                            {
                              if (!v221)
                              {
                                *(void *)uint64_t v217 = *(void *)v218;
                                *((void *)v217 + 1) = *((void *)v218 + 1);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                v281(&v217[v219[5]], &v218[v219[5]], v287);
                                v281(&v217[v219[6]], &v218[v219[6]], v287);
                                v281(&v217[v219[7]], &v218[v219[7]], v287);
                                *(void *)&v217[v219[8]] = *(void *)&v218[v219[8]];
                                uint64_t v271 = v219[9];
                                uint64_t v272 = &v217[v271];
                                uint64_t v273 = &v218[v271];
                                char v274 = v273[8];
                                *(void *)uint64_t v272 = *(void *)v273;
                                v272[8] = v274;
LABEL_99:
                                uint64_t v230 = v6[21];
                                unint64_t v231 = &a1[v230];
                                uint64_t v232 = &a2[v230];
                                *(void *)unint64_t v231 = *(void *)v232;
                                *((void *)v231 + 1) = *((void *)v232 + 1);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                uint64_t v233 = v6[22];
                                uint64_t v234 = &a1[v233];
                                uint64_t v235 = &a2[v233];
                                uint64_t v236 = type metadata accessor for WeatherChanges();
                                int v237 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v234, 1, v236);
                                int v238 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v235, 1, v236);
                                if (v237)
                                {
                                  if (!v238)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16))(v234, v235, v236);
                                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v234, 0, 1, v236);
                                    goto LABEL_105;
                                  }
                                }
                                else
                                {
                                  uint64_t v239 = *(void *)(v236 - 8);
                                  if (!v238)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(v239 + 24))(v234, v235, v236);
LABEL_105:
                                    uint64_t v241 = v6[23];
                                    uint64_t v242 = &a1[v241];
                                    uint64_t v243 = &a2[v241];
                                    uint64_t v244 = type metadata accessor for MidpointInterpolator.InterpolationMode();
                                    int v245 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v242, 1, v244);
                                    int v246 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244);
                                    if (v245)
                                    {
                                      if (!v246)
                                      {
                                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 16))(v242, v243, v244);
                                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v244);
LABEL_111:
                                        uint64_t v249 = v6[24];
                                        uint64_t v250 = &a1[v249];
                                        uint64_t v251 = &a2[v249];
                                        uint64_t v252 = *(void **)&a1[v249];
                                        uint64_t v253 = *(void **)&a2[v249];
                                        *(void *)uint64_t v250 = v253;
                                        id v254 = v253;

                                        uint64_t v255 = (void *)*((void *)v250 + 1);
                                        uint64_t v256 = (void *)*((void *)v251 + 1);
                                        *((void *)v250 + 1) = v256;
                                        id v257 = v256;

                                        long long v258 = (void *)*((void *)v250 + 2);
                                        uint64_t v259 = (void *)*((void *)v251 + 2);
                                        *((void *)v250 + 2) = v259;
                                        id v260 = v259;

                                        uint64_t v261 = (void *)*((void *)v250 + 3);
                                        uint64_t v262 = (void *)*((void *)v251 + 3);
                                        *((void *)v250 + 3) = v262;
                                        id v263 = v262;

                                        uint64_t v264 = (void *)*((void *)v250 + 4);
                                        uint64_t v265 = (void *)*((void *)v251 + 4);
                                        *((void *)v250 + 4) = v265;
                                        id v266 = v265;

                                        uint64_t v267 = (void *)*((void *)v250 + 5);
                                        uint64_t v268 = (void *)*((void *)v251 + 5);
                                        *((void *)v250 + 5) = v268;
                                        id v269 = v268;

                                        a1[v6[25]] = a2[v6[25]];
                                        a1[v6[26]] = a2[v6[26]];
                                        return a1;
                                      }
                                    }
                                    else
                                    {
                                      uint64_t v247 = *(void *)(v244 - 8);
                                      if (!v246)
                                      {
                                        (*(void (**)(char *, char *, uint64_t))(v247 + 24))(v242, v243, v244);
                                        goto LABEL_111;
                                      }
                                      (*(void (**)(char *, uint64_t))(v247 + 8))(v242, v244);
                                    }
                                    uint64_t v248 = sub_10017DF08(&qword_100E6BF78);
                                    memcpy(v242, v243, *(void *)(*(void *)(v248 - 8) + 64));
                                    goto LABEL_111;
                                  }
                                  (*(void (**)(char *, uint64_t))(v239 + 8))(v234, v236);
                                }
                                uint64_t v240 = sub_10017DF08(&qword_100E6D1C8);
                                memcpy(v234, v235, *(void *)(*(void *)(v240 - 8) + 64));
                                goto LABEL_105;
                              }
                              sub_1001BBF74((uint64_t)v217, (void (*)(void))type metadata accessor for DetailChartSelection);
                            }
                            uint64_t v229 = sub_10017DF08(&qword_100E711F8);
                            memcpy(v217, v218, *(void *)(*(void *)(v229 - 8) + 64));
                            goto LABEL_99;
                          }
                          (*(void (**)(uint64_t, uint64_t))(v285 + 8))(v277, v287);
                        }
                        size_t v201 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
                        uint64_t v202 = (void *)v277;
                        uint64_t v203 = (const void *)v278;
LABEL_75:
                        memcpy(v202, v203, v201);
                        goto LABEL_88;
                      }
                    }
                    else
                    {
                      if (!v205)
                      {
                        v281(v195, v196, v287);
                        goto LABEL_119;
                      }
                      (*(void (**)(char *, uint64_t))(v285 + 8))(v195, v287);
                    }
                    uint64_t v275 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v195, v196, *(void *)(*(void *)(v275 - 8) + 64));
                    goto LABEL_119;
                  }
                  *(void *)os_log_type_t v141 = *(void *)v142;
                  *((void *)v141 + 1) = *((void *)v142 + 1);
                  swift_bridgeObjectRetain();
                }
                swift_storeEnumTagMultiPayload();
                goto LABEL_68;
              }
              sub_100178110((uint64_t)v134, &qword_100E63738);
            }
            uint64_t v139 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v134, v135, *(void *)(*(void *)(v139 - 8) + 64));
            goto LABEL_43;
          }
          (*(void (**)(char *, uint64_t))(v284 + 8))(v124, v106);
        }
        uint64_t v128 = sub_10017DF08(&qword_100E63730);
        memcpy(v124, v125, *(void *)(*(void *)(v128 - 8) + 64));
        goto LABEL_37;
      }
      (*(void (**)(char *, uint64_t))(v89 + 8))(v26, v28);
    }
    uint64_t v90 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v26, v27, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_31;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v288 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v288(a1, a2, v9);
  uint64_t v10 = v6[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = v6[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  uint64_t v31 = v6[8];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = type metadata accessor for DetailCondition();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
  swift_bridgeObjectRetain();
  v35(v32, v33, v34);
  uint64_t v36 = v6[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  v288(&a1[v6[10]], &a2[v6[10]], v9);
  a1[v6[11]] = a2[v6[11]];
  uint64_t v286 = v9;
  v288(&a1[v6[12]], &a2[v6[12]], v9);
  uint64_t v40 = v6[13];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  uint64_t v44 = v6[14];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = type metadata accessor for Locale();
  uint64_t v283 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
  v283(v45, v46, v47);
  uint64_t v48 = v6[15];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v51 = type metadata accessor for DayWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  uint64_t v52 = v6[16];
  uint64_t v53 = &a1[v52];
  uint64_t v54 = &a2[v52];
  uint64_t v55 = type metadata accessor for CurrentWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
  uint64_t v56 = v6[17];
  uint64_t v57 = &a1[v56];
  uint64_t v58 = &a2[v56];
  uint64_t v59 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
  uint64_t v60 = v6[18];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  *(void *)uint64_t v61 = *(void *)&a2[v60];
  *((void *)v61 + 1) = *(void *)&a2[v60 + 8];
  uint64_t v63 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v64 = v63[5];
  uint64_t v65 = &v61[v64];
  uint64_t v66 = &v62[v64];
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v47))
  {
    uint64_t v67 = sub_10017DF08(&qword_100E63730);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    v283(v65, v66, v47);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v47);
  }
  uint64_t v68 = v63[6];
  uint64_t v69 = &v61[v68];
  uint64_t v70 = &v62[v68];
  uint64_t v71 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
  uint64_t v72 = v63[7];
  uint64_t v73 = &v61[v72];
  uint64_t v74 = &v62[v72];
  uint64_t v75 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
  {
    uint64_t v76 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    v288(v73, v74, v286);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
  }
  uint64_t v77 = v63[8];
  uint64_t v78 = &v61[v77];
  uint64_t v79 = &v62[v77];
  uint64_t v80 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v81 = swift_getEnumCaseMultiPayload();
  if (v81 == 1)
  {
    uint64_t v82 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v78, v79, v82);
  }
  else
  {
    if (v81)
    {
      memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      goto LABEL_24;
    }
    *(void *)uint64_t v78 = *(void *)v79;
    *((void *)v78 + 1) = *((void *)v79 + 1);
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_24:
  uint64_t v83 = v63[9];
  uint64_t v84 = &v61[v83];
  uint64_t v85 = &v62[v83];
  uint64_t v86 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
  {
    uint64_t v87 = sub_10017DF08(&qword_100E63740);
    memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v286))
    {
      uint64_t v88 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      v288(v84, v85, v286);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v286);
    }
    uint64_t v145 = *(int *)(v86 + 20);
    unint64_t v146 = &v84[v145];
    uint64_t v147 = &v85[v145];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v286))
    {
      uint64_t v148 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
    }
    else
    {
      v288(v146, v147, v286);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v146, 0, 1, v286);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
  }
  uint64_t v149 = v6[19];
  uint64_t v150 = &a1[v149];
  uint64_t v151 = &a2[v149];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)uint64_t v150 = *(void *)v151;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v152 = type metadata accessor for News();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16))(v150, v151, v152);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v153 = v6[20];
  uint64_t v154 = &a1[v153];
  uint64_t v155 = &a2[v153];
  uint64_t v156 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, (uint64_t)v156))
  {
    uint64_t v157 = sub_10017DF08(&qword_100E711F8);
    memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v154 = *(void *)v155;
    *((void *)v154 + 1) = *((void *)v155 + 1);
    uint64_t v158 = v156[5];
    unint64_t v159 = &v154[v158];
    uint64_t v160 = &v155[v158];
    swift_bridgeObjectRetain();
    v288(v159, v160, v286);
    v288(&v154[v156[6]], &v155[v156[6]], v286);
    v288(&v154[v156[7]], &v155[v156[7]], v286);
    *(void *)&v154[v156[8]] = *(void *)&v155[v156[8]];
    uint64_t v161 = v156[9];
    uint64_t v162 = &v154[v161];
    uint64_t v163 = &v155[v161];
    char v164 = v163[8];
    *(void *)uint64_t v162 = *(void *)v163;
    v162[8] = v164;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, (uint64_t)v156);
  }
  uint64_t v165 = v6[21];
  os_log_type_t v166 = &a1[v165];
  BOOL v167 = &a2[v165];
  *(void *)os_log_type_t v166 = *(void *)v167;
  *((void *)v166 + 1) = *((void *)v167 + 1);
  uint64_t v168 = v6[22];
  uint64_t v169 = &a1[v168];
  uint64_t v170 = &a2[v168];
  uint64_t v171 = type metadata accessor for WeatherChanges();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
  {
    uint64_t v172 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
  }
  uint64_t v173 = v6[23];
  uint64_t v174 = &a1[v173];
  uint64_t v175 = &a2[v173];
  uint64_t v176 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v176))
  {
    uint64_t v177 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v176);
  }
  uint64_t v178 = v6[24];
  uint64_t v179 = &a1[v178];
  uint64_t v180 = &a2[v178];
  uint64_t v181 = *(void **)v180;
  *(void *)uint64_t v179 = *(void *)v180;
  uint64_t v182 = (void *)*((void *)v180 + 1);
  *((void *)v179 + 1) = v182;
  uint64_t v183 = (void *)*((void *)v180 + 2);
  *((void *)v179 + 2) = v183;
  uint64_t v184 = (void *)*((void *)v180 + 3);
  *((void *)v179 + 3) = v184;
  uint64_t v185 = (void *)*((void *)v180 + 4);
  *((void *)v179 + 4) = v185;
  uint64_t v186 = (void *)*((void *)v180 + 5);
  *((void *)v179 + 5) = v186;
  a1[v6[25]] = a2[v6[25]];
  a1[v6[26]] = a2[v6[26]];
  id v187 = v181;
  id v188 = v182;
  id v189 = v183;
  id v190 = v184;
  id v191 = v185;
  id v192 = v186;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

char *sub_1003A5DE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    int v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    uint64_t v9 = v6[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_10017DF08(&qword_100E66CC8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    uint64_t v13 = v6[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_10017DF08(&qword_100E6E900);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E6E8F8);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    uint64_t v18 = v6[8];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = type metadata accessor for DetailCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    uint64_t v22 = v6[9];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = type metadata accessor for DetailChartCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    v8(&a1[v6[10]], &a2[v6[10]], v7);
    a1[v6[11]] = a2[v6[11]];
    uint64_t v109 = v7;
    uint64_t v110 = v8;
    v8(&a1[v6[12]], &a2[v6[12]], v7);
    uint64_t v26 = v6[13];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    uint64_t v30 = v6[14];
    uint64_t v31 = &a1[v30];
    uint64_t v32 = &a2[v30];
    uint64_t v33 = type metadata accessor for Locale();
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32);
    uint64_t v108 = *v34;
    (*v34)(v31, v32, v33);
    uint64_t v35 = v6[15];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    uint64_t v38 = type metadata accessor for DayWeather();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    uint64_t v39 = v6[16];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    uint64_t v42 = type metadata accessor for CurrentWeather();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
    uint64_t v43 = v6[17];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    uint64_t v46 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
    uint64_t v47 = v6[18];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    *(_OWORD *)&a1[v47] = *(_OWORD *)&a2[v47];
    uint64_t v50 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v51 = v50[5];
    uint64_t v52 = &v48[v51];
    uint64_t v53 = &v49[v51];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v49[v51], 1, v33))
    {
      uint64_t v54 = sub_10017DF08(&qword_100E63730);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      v108(v52, v53, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v33);
    }
    uint64_t v55 = v50[6];
    uint64_t v56 = &v48[v55];
    uint64_t v57 = &v49[v55];
    uint64_t v58 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
    uint64_t v59 = v50[7];
    uint64_t v60 = &v48[v59];
    uint64_t v61 = &v49[v59];
    uint64_t v62 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      uint64_t v63 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      v110(v60, v61, v109);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    uint64_t v64 = v50[8];
    uint64_t v65 = &v48[v64];
    uint64_t v66 = &v49[v64];
    uint64_t v67 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v68 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v66, v68);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    uint64_t v69 = v50[9];
    uint64_t v70 = &v48[v69];
    uint64_t v71 = &v49[v69];
    uint64_t v72 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
    {
      uint64_t v73 = sub_10017DF08(&qword_100E63740);
      memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
      uint64_t v74 = v110;
    }
    else
    {
      uint64_t v74 = v110;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v109))
      {
        uint64_t v75 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        v110(v70, v71, v109);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v109);
      }
      uint64_t v76 = *(int *)(v72 + 20);
      uint64_t v77 = &v70[v76];
      uint64_t v78 = &v71[v76];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v109))
      {
        uint64_t v79 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        v110(v77, v78, v109);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v109);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
    }
    uint64_t v80 = v6[19];
    int v81 = &a1[v80];
    uint64_t v82 = &a2[v80];
    uint64_t v83 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      uint64_t v84 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v81, v82, v84);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v85 = v6[20];
    uint64_t v86 = &a1[v85];
    uint64_t v87 = &a2[v85];
    uint64_t v88 = (int *)type metadata accessor for DetailChartSelection();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, (uint64_t)v88))
    {
      uint64_t v89 = sub_10017DF08(&qword_100E711F8);
      memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
      v74(&v86[v88[5]], &v87[v88[5]], v109);
      v74(&v86[v88[6]], &v87[v88[6]], v109);
      v74(&v86[v88[7]], &v87[v88[7]], v109);
      *(void *)&v86[v88[8]] = *(void *)&v87[v88[8]];
      uint64_t v90 = v88[9];
      uint64_t v91 = &v86[v90];
      uint64_t v92 = &v87[v90];
      v91[8] = v92[8];
      *(void *)uint64_t v91 = *(void *)v92;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, (uint64_t)v88);
    }
    *(_OWORD *)&a1[v6[21]] = *(_OWORD *)&a2[v6[21]];
    uint64_t v93 = v6[22];
    uint64_t v94 = &a1[v93];
    uint64_t v95 = &a2[v93];
    uint64_t v96 = type metadata accessor for WeatherChanges();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
    {
      uint64_t v97 = sub_10017DF08(&qword_100E6D1C8);
      memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
    }
    uint64_t v98 = v6[23];
    uint64_t v99 = &a1[v98];
    uint64_t v100 = &a2[v98];
    uint64_t v101 = type metadata accessor for MidpointInterpolator.InterpolationMode();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
    {
      uint64_t v102 = sub_10017DF08(&qword_100E6BF78);
      memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
    }
    uint64_t v103 = v6[24];
    uint64_t v104 = &a1[v103];
    uint64_t v105 = &a2[v103];
    long long v106 = *((_OWORD *)v105 + 1);
    *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
    *((_OWORD *)v104 + 1) = v106;
    *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
    a1[v6[25]] = a2[v6[25]];
    a1[v6[26]] = a2[v6[26]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

char *sub_1003A68B8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailInput.Input(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1001BBF74((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
      goto LABEL_7;
    }
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v256 = *(void *)(v20 - 8);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v256 + 40);
    v21(a1, a2, v20);
    uint64_t v22 = v6[5];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = sub_10017DF08(&qword_100E66CC8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
    uint64_t v26 = v6[6];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = sub_10017DF08(&qword_100E6E900);
    int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
    int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v90 = *(void *)(v29 - 8);
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 40))(v27, v28, v29);
LABEL_28:
        *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
        swift_bridgeObjectRelease();
        uint64_t v92 = v6[8];
        uint64_t v93 = &a1[v92];
        uint64_t v94 = &a2[v92];
        uint64_t v95 = type metadata accessor for DetailCondition();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 40))(v93, v94, v95);
        uint64_t v96 = v6[9];
        uint64_t v97 = &a1[v96];
        uint64_t v98 = &a2[v96];
        uint64_t v99 = type metadata accessor for DetailChartCondition();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 40))(v97, v98, v99);
        v21(&a1[v6[10]], &a2[v6[10]], v20);
        a1[v6[11]] = a2[v6[11]];
        uint64_t v259 = v20;
        uint64_t v253 = v21;
        v21(&a1[v6[12]], &a2[v6[12]], v20);
        uint64_t v100 = v6[13];
        uint64_t v101 = &a1[v100];
        uint64_t v102 = &a2[v100];
        uint64_t v103 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 40))(v101, v102, v103);
        uint64_t v104 = v6[14];
        uint64_t v105 = &a1[v104];
        long long v106 = &a2[v104];
        uint64_t v107 = type metadata accessor for Locale();
        id v254 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 40);
        uint64_t v255 = *(void *)(v107 - 8);
        v254(v105, v106, v107);
        uint64_t v108 = v6[15];
        uint64_t v109 = &a1[v108];
        uint64_t v110 = &a2[v108];
        uint64_t v111 = type metadata accessor for DayWeather();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 40))(v109, v110, v111);
        uint64_t v112 = v6[16];
        uint64_t v113 = &a1[v112];
        uint64_t v114 = &a2[v112];
        uint64_t v115 = type metadata accessor for CurrentWeather();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 40))(v113, v114, v115);
        uint64_t v116 = v6[17];
        uint64_t v117 = &a1[v116];
        uint64_t v118 = &a2[v116];
        uint64_t v119 = sub_10017DF08(&qword_100E66CA0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 40))(v117, v118, v119);
        uint64_t v120 = v6[18];
        id v121 = &a1[v120];
        id v122 = &a2[v120];
        uint64_t v123 = *(void *)&a2[v120 + 8];
        *(void *)id v121 = *(void *)&a2[v120];
        *((void *)v121 + 1) = v123;
        swift_bridgeObjectRelease();
        uint64_t v261 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v124 = v261[5];
        id v125 = &v121[v124];
        int v126 = &v122[v124];
        int v127 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v121[v124], 1, v107);
        int v128 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v107);
        if (v127)
        {
          if (!v128)
          {
            (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v125, v126, v107);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v107);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v128)
          {
            v254(v125, v126, v107);
LABEL_34:
            uint64_t v130 = v261[6];
            uint64_t v131 = &v121[v130];
            uint64_t v132 = &v122[v130];
            uint64_t v133 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 40))(v131, v132, v133);
            uint64_t v134 = v261[7];
            uint64_t v135 = &v121[v134];
            uint64_t v136 = &v122[v134];
            uint64_t v137 = sub_10017DF08(&qword_100E63738);
            int v138 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v137);
            int v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137);
            if (v138)
            {
              if (!v139)
              {
                uint64_t v140 = v259;
                (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v135, v136, v259);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v137);
                goto LABEL_40;
              }
            }
            else
            {
              if (!v139)
              {
                uint64_t v140 = v259;
                v253(v135, v136, v259);
LABEL_40:
                if (a1 != a2)
                {
                  uint64_t v142 = v261[8];
                  uint64_t v143 = &v121[v142];
                  unint64_t v144 = &v122[v142];
                  sub_1001BBF74((uint64_t)&v121[v142], (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
                  uint64_t v145 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    uint64_t v146 = type metadata accessor for WeatherStatisticsModel();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v143, v144, v146);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
                  }
                }
                uint64_t v147 = v261[9];
                uint64_t v148 = &v121[v147];
                uint64_t v149 = &v122[v147];
                uint64_t v150 = type metadata accessor for WeatherDataOverrides();
                int v151 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v150);
                int v152 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150);
                if (v151)
                {
                  if (!v152)
                  {
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v140))
                    {
                      uint64_t v153 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v148, v149, *(void *)(*(void *)(v153 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v148, v149, v140);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v140);
                    }
                    uint64_t v190 = *(int *)(v150 + 20);
                    id v191 = &v148[v190];
                    id v192 = &v149[v190];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v140))
                    {
                      uint64_t v193 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v191, v192, v140);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v140);
                    }
                    uint64_t v194 = (uint64_t)v148;
                    uint64_t v195 = v150;
                    goto LABEL_81;
                  }
                  goto LABEL_50;
                }
                if (v152)
                {
                  sub_1001BBF74((uint64_t)v148, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_50:
                  size_t v154 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
                  uint64_t v155 = v148;
                  uint64_t v156 = v149;
                  goto LABEL_51;
                }
                int v188 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v140);
                int v189 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v140);
                if (v188)
                {
                  if (!v189)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v256 + 32))(v148, v149, v140);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v140);
LABEL_112:
                    uint64_t v248 = *(int *)(v150 + 20);
                    uint64_t v249 = &v148[v248];
                    uint64_t v250 = (uint64_t)&v149[v248];
                    int v251 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v148[v248], 1, v140);
                    int v252 = _s7Weather24LocationCompositionStateOwet_0(v250, 1, v140);
                    if (v251)
                    {
                      if (!v252)
                      {
                        (*(void (**)(char *, uint64_t, uint64_t))(v256 + 32))(v249, v250, v140);
                        uint64_t v194 = (uint64_t)v249;
                        uint64_t v195 = v140;
LABEL_81:
                        _s7Weather24LocationCompositionStateOwst_0(v194, 0, 1, v195);
                        goto LABEL_82;
                      }
                    }
                    else
                    {
                      if (!v252)
                      {
                        v253(v249, (char *)v250, v140);
LABEL_82:
                        if (a1 != a2)
                        {
                          uint64_t v196 = v6[19];
                          uint64_t v197 = &a1[v196];
                          int v198 = &a2[v196];
                          sub_1001BBF74((uint64_t)&a1[v196], (void (*)(void))type metadata accessor for NewsDataModel);
                          uint64_t v199 = type metadata accessor for NewsDataModel();
                          if (swift_getEnumCaseMultiPayload())
                          {
                            memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
                          }
                          else
                          {
                            uint64_t v200 = type metadata accessor for News();
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 32))(v197, v198, v200);
                            swift_storeEnumTagMultiPayload();
                          }
                        }
                        uint64_t v201 = v6[20];
                        uint64_t v202 = &a1[v201];
                        uint64_t v203 = &a2[v201];
                        int v204 = (int *)type metadata accessor for DetailChartSelection();
                        int v205 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v202, 1, (uint64_t)v204);
                        int v206 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, (uint64_t)v204);
                        if (v205)
                        {
                          if (!v206)
                          {
                            *(_OWORD *)uint64_t v202 = *(_OWORD *)v203;
                            uint64_t v207 = *(void (**)(char *, char *, uint64_t))(v256 + 32);
                            v207(&v202[v204[5]], &v203[v204[5]], v140);
                            v207(&v202[v204[6]], &v203[v204[6]], v140);
                            v207(&v202[v204[7]], &v203[v204[7]], v140);
                            *(void *)&v202[v204[8]] = *(void *)&v203[v204[8]];
                            uint64_t v208 = v204[9];
                            uint64_t v209 = &v202[v208];
                            uint64_t v210 = &v203[v208];
                            v209[8] = v210[8];
                            *(void *)uint64_t v209 = *(void *)v210;
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, (uint64_t)v204);
                            goto LABEL_92;
                          }
                        }
                        else
                        {
                          if (!v206)
                          {
                            uint64_t v243 = *((void *)v203 + 1);
                            *(void *)uint64_t v202 = *(void *)v203;
                            *((void *)v202 + 1) = v243;
                            swift_bridgeObjectRelease();
                            v253(&v202[v204[5]], &v203[v204[5]], v140);
                            v253(&v202[v204[6]], &v203[v204[6]], v140);
                            v253(&v202[v204[7]], &v203[v204[7]], v140);
                            *(void *)&v202[v204[8]] = *(void *)&v203[v204[8]];
                            uint64_t v244 = v204[9];
                            int v245 = &v202[v244];
                            int v246 = &v203[v244];
                            v245[8] = v246[8];
                            *(void *)int v245 = *(void *)v246;
LABEL_92:
                            uint64_t v212 = v6[21];
                            uint64_t v213 = &a1[v212];
                            uint64_t v214 = (uint64_t *)&a2[v212];
                            uint64_t v216 = *v214;
                            uint64_t v215 = v214[1];
                            *(void *)uint64_t v213 = v216;
                            *((void *)v213 + 1) = v215;
                            swift_bridgeObjectRelease();
                            uint64_t v217 = v6[22];
                            uint64_t v218 = &a1[v217];
                            uint64_t v219 = &a2[v217];
                            uint64_t v220 = type metadata accessor for WeatherChanges();
                            int v221 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v220);
                            int v222 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v219, 1, v220);
                            if (v221)
                            {
                              if (!v222)
                              {
                                (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v218, v219, v220);
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v218, 0, 1, v220);
                                goto LABEL_98;
                              }
                            }
                            else
                            {
                              uint64_t v223 = *(void *)(v220 - 8);
                              if (!v222)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v223 + 40))(v218, v219, v220);
LABEL_98:
                                uint64_t v225 = v6[23];
                                uint64_t v226 = &a1[v225];
                                uint64_t v227 = &a2[v225];
                                uint64_t v228 = type metadata accessor for MidpointInterpolator.InterpolationMode();
                                int v229 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, v228);
                                int v230 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v227, 1, v228);
                                if (v229)
                                {
                                  if (!v230)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 32))(v226, v227, v228);
                                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v226, 0, 1, v228);
LABEL_104:
                                    uint64_t v233 = v6[24];
                                    uint64_t v234 = &a1[v233];
                                    uint64_t v235 = &a2[v233];
                                    uint64_t v236 = *(void **)&a1[v233];
                                    *(void *)uint64_t v234 = *(void *)v235;

                                    int v237 = (void *)*((void *)v234 + 1);
                                    *((void *)v234 + 1) = *((void *)v235 + 1);

                                    int v238 = (void *)*((void *)v234 + 2);
                                    *((void *)v234 + 2) = *((void *)v235 + 2);

                                    uint64_t v239 = (void *)*((void *)v234 + 3);
                                    *((void *)v234 + 3) = *((void *)v235 + 3);

                                    uint64_t v240 = (void *)*((void *)v234 + 4);
                                    *((void *)v234 + 4) = *((void *)v235 + 4);

                                    uint64_t v241 = (void *)*((void *)v234 + 5);
                                    *((void *)v234 + 5) = *((void *)v235 + 5);

                                    a1[v6[25]] = a2[v6[25]];
                                    a1[v6[26]] = a2[v6[26]];
                                    return a1;
                                  }
                                }
                                else
                                {
                                  uint64_t v231 = *(void *)(v228 - 8);
                                  if (!v230)
                                  {
                                    (*(void (**)(char *, char *, uint64_t))(v231 + 40))(v226, v227, v228);
                                    goto LABEL_104;
                                  }
                                  (*(void (**)(char *, uint64_t))(v231 + 8))(v226, v228);
                                }
                                uint64_t v232 = sub_10017DF08(&qword_100E6BF78);
                                memcpy(v226, v227, *(void *)(*(void *)(v232 - 8) + 64));
                                goto LABEL_104;
                              }
                              (*(void (**)(char *, uint64_t))(v223 + 8))(v218, v220);
                            }
                            uint64_t v224 = sub_10017DF08(&qword_100E6D1C8);
                            memcpy(v218, v219, *(void *)(*(void *)(v224 - 8) + 64));
                            goto LABEL_98;
                          }
                          sub_1001BBF74((uint64_t)v202, (void (*)(void))type metadata accessor for DetailChartSelection);
                        }
                        uint64_t v211 = sub_10017DF08(&qword_100E711F8);
                        memcpy(v202, v203, *(void *)(*(void *)(v211 - 8) + 64));
                        goto LABEL_92;
                      }
                      (*(void (**)(char *, uint64_t))(v256 + 8))(v249, v140);
                    }
                    size_t v154 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
                    uint64_t v155 = v249;
                    uint64_t v156 = (const void *)v250;
LABEL_51:
                    memcpy(v155, v156, v154);
                    goto LABEL_82;
                  }
                }
                else
                {
                  if (!v189)
                  {
                    v253(v148, v149, v140);
                    goto LABEL_112;
                  }
                  (*(void (**)(char *, uint64_t))(v256 + 8))(v148, v140);
                }
                uint64_t v247 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v148, v149, *(void *)(*(void *)(v247 - 8) + 64));
                goto LABEL_112;
              }
              sub_100178110((uint64_t)v135, &qword_100E63738);
            }
            uint64_t v141 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v135, v136, *(void *)(*(void *)(v141 - 8) + 64));
            uint64_t v140 = v259;
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v255 + 8))(v125, v107);
        }
        uint64_t v129 = sub_10017DF08(&qword_100E63730);
        memcpy(v125, v126, *(void *)(*(void *)(v129 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(v27, v29);
    }
    uint64_t v91 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v27, v28, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_28;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(a1, a2, v9);
  uint64_t v11 = v6[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v6[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  uint64_t v32 = v6[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = type metadata accessor for DetailCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
  uint64_t v36 = v6[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  v10(&a1[v6[10]], &a2[v6[10]], v9);
  a1[v6[11]] = a2[v6[11]];
  uint64_t v258 = v9;
  id v260 = v10;
  v10(&a1[v6[12]], &a2[v6[12]], v9);
  uint64_t v40 = v6[13];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
  uint64_t v44 = v6[14];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = type metadata accessor for Locale();
  uint64_t v48 = (void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32);
  id v257 = *v48;
  (*v48)(v45, v46, v47);
  uint64_t v49 = v6[15];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  uint64_t v52 = type metadata accessor for DayWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  uint64_t v53 = v6[16];
  uint64_t v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  uint64_t v56 = type metadata accessor for CurrentWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
  uint64_t v57 = v6[17];
  uint64_t v58 = &a1[v57];
  uint64_t v59 = &a2[v57];
  uint64_t v60 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
  uint64_t v61 = v6[18];
  uint64_t v62 = &a1[v61];
  uint64_t v63 = &a2[v61];
  *(_OWORD *)&a1[v61] = *(_OWORD *)&a2[v61];
  uint64_t v64 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v65 = v64[5];
  uint64_t v66 = &v62[v65];
  uint64_t v67 = &v63[v65];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v63[v65], 1, v47))
  {
    uint64_t v68 = sub_10017DF08(&qword_100E63730);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    v257(v66, v67, v47);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v47);
  }
  uint64_t v69 = v64[6];
  uint64_t v70 = &v62[v69];
  uint64_t v71 = &v63[v69];
  uint64_t v72 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
  uint64_t v73 = v64[7];
  uint64_t v74 = &v62[v73];
  uint64_t v75 = &v63[v73];
  uint64_t v76 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
  {
    uint64_t v77 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    v260(v74, v75, v258);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
  }
  uint64_t v78 = v64[8];
  uint64_t v79 = &v62[v78];
  uint64_t v80 = &v63[v78];
  uint64_t v81 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v82 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v79, v80, v82);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
  }
  uint64_t v83 = v64[9];
  uint64_t v84 = &v62[v83];
  uint64_t v85 = &v63[v83];
  uint64_t v86 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
  {
    uint64_t v87 = sub_10017DF08(&qword_100E63740);
    memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
    uint64_t v88 = v260;
  }
  else
  {
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v258))
    {
      uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
      uint64_t v88 = v260;
    }
    else
    {
      uint64_t v88 = v260;
      v260(v84, v85, v258);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v258);
    }
    uint64_t v157 = *(int *)(v86 + 20);
    uint64_t v158 = &v84[v157];
    unint64_t v159 = &v85[v157];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v159, 1, v258))
    {
      uint64_t v160 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v158, v159, *(void *)(*(void *)(v160 - 8) + 64));
    }
    else
    {
      v88(v158, v159, v258);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v158, 0, 1, v258);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
  }
  uint64_t v161 = v6[19];
  uint64_t v162 = &a1[v161];
  uint64_t v163 = &a2[v161];
  uint64_t v164 = type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
  }
  else
  {
    uint64_t v165 = type metadata accessor for News();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v162, v163, v165);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v166 = v6[20];
  BOOL v167 = &a1[v166];
  uint64_t v168 = &a2[v166];
  uint64_t v169 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, (uint64_t)v169))
  {
    uint64_t v170 = sub_10017DF08(&qword_100E711F8);
    memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
  }
  else
  {
    *(_OWORD *)BOOL v167 = *(_OWORD *)v168;
    v88(&v167[v169[5]], &v168[v169[5]], v258);
    v88(&v167[v169[6]], &v168[v169[6]], v258);
    v88(&v167[v169[7]], &v168[v169[7]], v258);
    *(void *)&v167[v169[8]] = *(void *)&v168[v169[8]];
    uint64_t v171 = v169[9];
    uint64_t v172 = &v167[v171];
    uint64_t v173 = &v168[v171];
    v172[8] = v173[8];
    *(void *)uint64_t v172 = *(void *)v173;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, (uint64_t)v169);
  }
  *(_OWORD *)&a1[v6[21]] = *(_OWORD *)&a2[v6[21]];
  uint64_t v174 = v6[22];
  uint64_t v175 = &a1[v174];
  uint64_t v176 = &a2[v174];
  uint64_t v177 = type metadata accessor for WeatherChanges();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
  {
    uint64_t v178 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
  }
  uint64_t v179 = v6[23];
  uint64_t v180 = &a1[v179];
  uint64_t v181 = &a2[v179];
  uint64_t v182 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v181, 1, v182))
  {
    uint64_t v183 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v180, v181, *(void *)(*(void *)(v183 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v180, 0, 1, v182);
  }
  uint64_t v184 = v6[24];
  uint64_t v185 = &a1[v184];
  uint64_t v186 = &a2[v184];
  long long v187 = *((_OWORD *)v186 + 1);
  *(_OWORD *)uint64_t v185 = *(_OWORD *)v186;
  *((_OWORD *)v185 + 1) = v187;
  *((_OWORD *)v185 + 2) = *((_OWORD *)v186 + 2);
  a1[v6[25]] = a2[v6[25]];
  a1[v6[26]] = a2[v6[26]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_1003A83DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A83F0);
}

uint64_t sub_1003A83F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailInput.Input(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1003A8438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A844C);
}

uint64_t sub_1003A844C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for ConditionDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1003A84A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConditionDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1003A84EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for ConditionDetailInput(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E71270);
}

uint64_t sub_1003A8558()
{
  uint64_t result = type metadata accessor for ConditionDetailInput.Input(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_1003A85D0(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v133 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  v133(a1, a2, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v18 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = type metadata accessor for DetailCondition();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  v22(v19, v20, v21);
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  v133(&a1[a3[10]], &a2[a3[10]], v7);
  uint64_t v27 = a3[12];
  a1[a3[11]] = a2[a3[11]];
  uint64_t v132 = v7;
  v133(&a1[v27], &a2[v27], v7);
  uint64_t v28 = a3[13];
  uint64_t v29 = &a1[v28];
  int v30 = &a2[v28];
  uint64_t v31 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = a3[14];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = type metadata accessor for Locale();
  uint64_t v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
  v131(v33, v34, v35);
  uint64_t v36 = a3[15];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for DayWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  uint64_t v40 = a3[16];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = type metadata accessor for CurrentWeather();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  uint64_t v44 = a3[17];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  uint64_t v48 = a3[18];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v51 = *(void *)&a2[v48 + 8];
  *(void *)uint64_t v49 = *(void *)&a2[v48];
  *((void *)v49 + 1) = v51;
  uint64_t v52 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v53 = v52[5];
  uint64_t v54 = &v49[v53];
  uint64_t v55 = &v50[v53];
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v35))
  {
    uint64_t v56 = sub_10017DF08(&qword_100E63730);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    v131(v54, v55, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v35);
  }
  uint64_t v57 = v52[6];
  uint64_t v58 = &v49[v57];
  uint64_t v59 = &v50[v57];
  uint64_t v60 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  uint64_t v61 = v52[7];
  uint64_t v62 = &v49[v61];
  uint64_t v63 = &v50[v61];
  uint64_t v64 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
  {
    uint64_t v65 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    v133(v62, v63, v132);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
  }
  uint64_t v66 = v52[8];
  uint64_t v67 = &v49[v66];
  uint64_t v68 = &v50[v66];
  uint64_t v69 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v72 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v67, v68, v72);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      goto LABEL_18;
    }
    uint64_t v71 = *((void *)v68 + 1);
    *(void *)uint64_t v67 = *(void *)v68;
    *((void *)v67 + 1) = v71;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_18:
  uint64_t v73 = v52[9];
  uint64_t v74 = &v49[v73];
  uint64_t v75 = &v50[v73];
  uint64_t v76 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
  {
    uint64_t v77 = sub_10017DF08(&qword_100E63740);
    memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
    uint64_t v78 = v132;
  }
  else
  {
    uint64_t v78 = v132;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v132))
    {
      uint64_t v79 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v74, v75, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      v133(v74, v75, v132);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v132);
    }
    uint64_t v80 = *(int *)(v76 + 20);
    uint64_t v81 = &v74[v80];
    uint64_t v82 = &v75[v80];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v132))
    {
      uint64_t v83 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
    }
    else
    {
      v133(v81, v82, v132);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v132);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
  }
  uint64_t v84 = a3[19];
  uint64_t v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)uint64_t v85 = *(void *)v86;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v87 = type metadata accessor for News();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v88 = a3[20];
  uint64_t v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  uint64_t v91 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, (uint64_t)v91))
  {
    uint64_t v92 = sub_10017DF08(&qword_100E711F8);
    memcpy(v89, v90, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    uint64_t v93 = *((void *)v90 + 1);
    *(void *)uint64_t v89 = *(void *)v90;
    *((void *)v89 + 1) = v93;
    uint64_t v94 = v91[5];
    uint64_t v95 = &v89[v94];
    uint64_t v96 = &v90[v94];
    swift_bridgeObjectRetain();
    v133(v95, v96, v78);
    v133(&v89[v91[6]], &v90[v91[6]], v78);
    v133(&v89[v91[7]], &v90[v91[7]], v78);
    *(void *)&v89[v91[8]] = *(void *)&v90[v91[8]];
    uint64_t v97 = v91[9];
    uint64_t v98 = &v89[v97];
    uint64_t v99 = &v90[v97];
    v98[8] = v99[8];
    *(void *)uint64_t v98 = *(void *)v99;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, (uint64_t)v91);
  }
  uint64_t v100 = a3[21];
  uint64_t v101 = a3[22];
  uint64_t v102 = &a1[v100];
  uint64_t v103 = &a2[v100];
  uint64_t v104 = *((void *)v103 + 1);
  *(void *)uint64_t v102 = *(void *)v103;
  *((void *)v102 + 1) = v104;
  uint64_t v105 = &a1[v101];
  long long v106 = &a2[v101];
  uint64_t v107 = type metadata accessor for WeatherChanges();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
  {
    uint64_t v108 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
  }
  uint64_t v109 = a3[23];
  uint64_t v110 = &a1[v109];
  uint64_t v111 = &a2[v109];
  uint64_t v112 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112))
  {
    uint64_t v113 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v112);
  }
  uint64_t v114 = a3[24];
  uint64_t v115 = a3[25];
  uint64_t v116 = &a1[v114];
  uint64_t v117 = &a2[v114];
  uint64_t v118 = *(void **)v117;
  uint64_t v119 = (void *)*((void *)v117 + 1);
  *(void *)uint64_t v116 = *(void *)v117;
  *((void *)v116 + 1) = v119;
  uint64_t v120 = (void *)*((void *)v117 + 2);
  id v121 = (void *)*((void *)v117 + 3);
  *((void *)v116 + 2) = v120;
  *((void *)v116 + 3) = v121;
  id v122 = (void *)*((void *)v117 + 4);
  uint64_t v123 = (void *)*((void *)v117 + 5);
  *((void *)v116 + 4) = v122;
  *((void *)v116 + 5) = v123;
  a1[v115] = a2[v115];
  a1[a3[26]] = a2[a3[26]];
  id v124 = v118;
  id v125 = v119;
  id v126 = v120;
  id v127 = v121;
  id v128 = v122;
  id v129 = v123;
  return a1;
}

void sub_1003A90F8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_10017DF08(&qword_100E6E900);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  v5(a1 + a2[10], v4);
  uint64_t v48 = v5;
  v5(a1 + a2[12], v4);
  uint64_t v14 = a1 + a2[13];
  uint64_t v15 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = a1 + a2[14];
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  v18(v16, v17);
  uint64_t v19 = a1 + a2[15];
  uint64_t v20 = type metadata accessor for DayWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[16];
  uint64_t v22 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[17];
  uint64_t v24 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[18];
  swift_bridgeObjectRelease();
  uint64_t v26 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v27 = v25 + v26[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v17)) {
    v18(v27, v17);
  }
  uint64_t v28 = v25 + v26[6];
  uint64_t v29 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = v25 + v26[7];
  uint64_t v31 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31)) {
    v48(v30, v4);
  }
  uint64_t v32 = v25 + v26[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v34 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v32, v34);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = v25 + v26[9];
  uint64_t v36 = type metadata accessor for WeatherDataOverrides();
  if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
  {
    if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v4)) {
      v48(v35, v4);
    }
    uint64_t v37 = v35 + *(int *)(v36 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v4)) {
      v48(v37, v4);
    }
  }
  uint64_t v38 = a1 + a2[19];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = type metadata accessor for News();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
  }
  uint64_t v40 = a1 + a2[20];
  uint64_t v41 = (int *)type metadata accessor for DetailChartSelection();
  if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, (uint64_t)v41))
  {
    swift_bridgeObjectRelease();
    v48(v40 + v41[5], v4);
    v48(v40 + v41[6], v4);
    v48(v40 + v41[7], v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v42 = a1 + a2[22];
  uint64_t v43 = type metadata accessor for WeatherChanges();
  if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v43)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
  }
  uint64_t v44 = a1 + a2[23];
  uint64_t v45 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
  }
  uint64_t v46 = a1 + a2[24];

  uint64_t v47 = *(void **)(v46 + 40);
}

uint64_t sub_1003A97C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v131(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for DetailCondition();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  v131(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v25 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v130 = v6;
  v131(a1 + v25, a2 + v25, v6);
  uint64_t v26 = a3[13];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = a3[14];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for Locale();
  id v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  v129(v31, v32, v33);
  uint64_t v34 = a3[15];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = type metadata accessor for DayWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = a3[16];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  uint64_t v42 = a3[17];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  uint64_t v46 = a3[18];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = a2 + v46;
  uint64_t v49 = *(void *)(a2 + v46 + 8);
  *uint64_t v47 = *(void *)(a2 + v46);
  v47[1] = v49;
  uint64_t v50 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v51 = v50[5];
  uint64_t v52 = (char *)v47 + v51;
  uint64_t v53 = (const void *)(v48 + v51);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v33))
  {
    uint64_t v54 = sub_10017DF08(&qword_100E63730);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    v129((uint64_t)v52, (uint64_t)v53, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v33);
  }
  uint64_t v55 = v50[6];
  uint64_t v56 = (char *)v47 + v55;
  uint64_t v57 = v48 + v55;
  uint64_t v58 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  uint64_t v59 = v50[7];
  uint64_t v60 = (char *)v47 + v59;
  uint64_t v61 = (const void *)(v48 + v59);
  uint64_t v62 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v63 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    v131((uint64_t)v60, (uint64_t)v61, v130);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  uint64_t v64 = v50[8];
  uint64_t v65 = (void *)((char *)v47 + v64);
  uint64_t v66 = (void *)(v48 + v64);
  uint64_t v67 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v70 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v65, v66, v70);
    goto LABEL_14;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v69 = v66[1];
    *uint64_t v65 = *v66;
    v65[1] = v69;
    swift_bridgeObjectRetain();
LABEL_14:
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
LABEL_16:
  uint64_t v71 = v50[9];
  uint64_t v72 = (char *)v47 + v71;
  uint64_t v73 = (char *)(v48 + v71);
  uint64_t v74 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
  {
    uint64_t v75 = sub_10017DF08(&qword_100E63740);
    memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
    uint64_t v76 = v130;
  }
  else
  {
    uint64_t v76 = v130;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v130))
    {
      uint64_t v77 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v72, v73, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      v131((uint64_t)v72, (uint64_t)v73, v130);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v130);
    }
    uint64_t v78 = *(int *)(v74 + 20);
    uint64_t v79 = &v72[v78];
    uint64_t v80 = &v73[v78];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v130))
    {
      uint64_t v81 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      v131((uint64_t)v79, (uint64_t)v80, v130);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v130);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
  }
  uint64_t v82 = a3[19];
  uint64_t v83 = (void *)(a1 + v82);
  uint64_t v84 = (void *)(a2 + v82);
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v83 = *v84;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v85 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v86 = a3[20];
  uint64_t v87 = (void *)(a1 + v86);
  uint64_t v88 = (void *)(a2 + v86);
  uint64_t v89 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, (uint64_t)v89))
  {
    uint64_t v90 = sub_10017DF08(&qword_100E711F8);
    memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    uint64_t v91 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v91;
    uint64_t v92 = v89[5];
    uint64_t v93 = (char *)v87 + v92;
    uint64_t v94 = (char *)v88 + v92;
    swift_bridgeObjectRetain();
    v131((uint64_t)v93, (uint64_t)v94, v76);
    v131((uint64_t)v87 + v89[6], (uint64_t)v88 + v89[6], v76);
    v131((uint64_t)v87 + v89[7], (uint64_t)v88 + v89[7], v76);
    *(void *)((char *)v87 + v89[8]) = *(void *)((char *)v88 + v89[8]);
    uint64_t v95 = v89[9];
    uint64_t v96 = (char *)v87 + v95;
    uint64_t v97 = (char *)v88 + v95;
    v96[8] = v97[8];
    *(void *)uint64_t v96 = *(void *)v97;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, (uint64_t)v89);
  }
  uint64_t v98 = a3[21];
  uint64_t v99 = a3[22];
  uint64_t v100 = (void *)(a1 + v98);
  uint64_t v101 = (void *)(a2 + v98);
  uint64_t v102 = v101[1];
  *uint64_t v100 = *v101;
  v100[1] = v102;
  uint64_t v103 = (void *)(a1 + v99);
  uint64_t v104 = (const void *)(a2 + v99);
  uint64_t v105 = type metadata accessor for WeatherChanges();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v105))
  {
    uint64_t v106 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v105);
  }
  uint64_t v107 = a3[23];
  uint64_t v108 = (void *)(a1 + v107);
  uint64_t v109 = (const void *)(a2 + v107);
  uint64_t v110 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
  {
    uint64_t v111 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
  }
  uint64_t v112 = a3[24];
  uint64_t v113 = a3[25];
  uint64_t v114 = (void *)(a1 + v112);
  uint64_t v115 = a2 + v112;
  uint64_t v116 = *(void **)v115;
  uint64_t v117 = *(void **)(v115 + 8);
  *uint64_t v114 = *(void *)v115;
  v114[1] = v117;
  uint64_t v118 = *(void **)(v115 + 16);
  uint64_t v119 = *(void **)(v115 + 24);
  v114[2] = v118;
  v114[3] = v119;
  uint64_t v120 = *(void **)(v115 + 32);
  id v121 = *(void **)(v115 + 40);
  v114[4] = v120;
  v114[5] = v121;
  *(unsigned char *)(a1 + v113) = *(unsigned char *)(a2 + v113);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  id v122 = v116;
  id v123 = v117;
  id v124 = v118;
  id v125 = v119;
  id v126 = v120;
  id v127 = v121;
  return a1;
}

uint64_t sub_1003AA29C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v169 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_10017DF08(&qword_100E6E900);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_7:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  v7(a1 + a3[10], a2 + a3[10], v6);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v171 = v6;
  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = type metadata accessor for Locale();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = a1;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 24);
  v38(v33, v34, v35);
  uint64_t v39 = a3[15];
  uint64_t v40 = v37 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = type metadata accessor for DayWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[16];
  uint64_t v44 = v37 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[17];
  uint64_t v48 = v37 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v172 = a3;
  uint64_t v173 = a2;
  uint64_t v51 = a3[18];
  uint64_t v170 = v37;
  uint64_t v52 = (void *)(v37 + v51);
  uint64_t v53 = a2 + v51;
  *uint64_t v52 = *(void *)(a2 + v51);
  v52[1] = *(void *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v54 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v55 = v54[5];
  uint64_t v56 = (char *)v52 + v55;
  uint64_t v57 = (const void *)(v53 + v55);
  int v58 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52 + v55, 1, v35);
  int v59 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v35);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, const void *, uint64_t))(v36 + 16))(v56, v57, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v35);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v56, v35);
LABEL_12:
    uint64_t v60 = sub_10017DF08(&qword_100E63730);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_13;
  }
  v38((uint64_t)v56, (uint64_t)v57, v35);
LABEL_13:
  uint64_t v61 = v54[6];
  uint64_t v62 = (char *)v52 + v61;
  uint64_t v63 = v53 + v61;
  uint64_t v64 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 24))(v62, v63, v64);
  uint64_t v65 = v54[7];
  uint64_t v66 = (char *)v52 + v65;
  uint64_t v67 = (const void *)(v53 + v65);
  uint64_t v68 = sub_10017DF08(&qword_100E63738);
  int v69 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v68);
  int v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, const void *, uint64_t))(v169 + 16))(v66, v67, v171);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v70)
  {
    sub_100178110((uint64_t)v66, &qword_100E63738);
LABEL_18:
    uint64_t v71 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_19;
  }
  v7((uint64_t)v66, (uint64_t)v67, v171);
LABEL_19:
  uint64_t v72 = v173;
  if (v170 == v173) {
    goto LABEL_26;
  }
  uint64_t v73 = v54[8];
  uint64_t v74 = (void *)((char *)v52 + v73);
  uint64_t v75 = (void *)(v53 + v73);
  sub_1001BBF74((uint64_t)v52 + v73, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v76 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v78 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(v74, v75, v78);
    goto LABEL_24;
  }
  if (!EnumCaseMultiPayload)
  {
    void *v74 = *v75;
    v74[1] = v75[1];
    swift_bridgeObjectRetain();
LABEL_24:
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
LABEL_26:
  uint64_t v79 = v54[9];
  uint64_t v80 = (char *)v52 + v79;
  uint64_t v81 = (char *)(v53 + v79);
  uint64_t v82 = type metadata accessor for WeatherDataOverrides();
  int v83 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v82);
  int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82);
  if (v83)
  {
    if (!v84)
    {
      uint64_t v85 = v172;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v171))
      {
        uint64_t v86 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v80, v81, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v80, v81, v171);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v171);
      }
      uint64_t v91 = *(int *)(v82 + 20);
      uint64_t v92 = &v80[v91];
      uint64_t v93 = &v81[v91];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v171))
      {
        uint64_t v94 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v92, v93, v171);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v171);
      }
      uint64_t v95 = (uint64_t)v80;
      uint64_t v96 = v82;
      goto LABEL_44;
    }
LABEL_32:
    uint64_t v87 = sub_10017DF08(&qword_100E63740);
    memcpy(v80, v81, *(void *)(*(void *)(v87 - 8) + 64));
    uint64_t v85 = v172;
    goto LABEL_55;
  }
  if (v84)
  {
    sub_1001BBF74((uint64_t)v80, (void (*)(void))type metadata accessor for WeatherDataOverrides);
    goto LABEL_32;
  }
  int v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v171);
  int v89 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v171);
  if (v88)
  {
    if (v89)
    {
      uint64_t v90 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v80, v81, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v80, v81, v171);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v171);
    }
    uint64_t v85 = v172;
  }
  else
  {
    uint64_t v85 = v172;
    if (v89)
    {
      (*(void (**)(char *, uint64_t))(v169 + 8))(v80, v171);
      uint64_t v97 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v80, v81, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v80, (uint64_t)v81, v171);
    }
  }
  uint64_t v98 = *(int *)(v82 + 20);
  uint64_t v99 = &v80[v98];
  uint64_t v100 = &v81[v98];
  int v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v171);
  int v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v171);
  if (v101)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v169 + 16))(v99, v100, v171);
      uint64_t v95 = (uint64_t)v99;
      uint64_t v96 = v171;
LABEL_44:
      _s7Weather24LocationCompositionStateOwst_0(v95, 0, 1, v96);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v102)
  {
    (*(void (**)(char *, uint64_t))(v169 + 8))(v99, v171);
LABEL_54:
    uint64_t v103 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_55;
  }
  v7((uint64_t)v99, (uint64_t)v100, v171);
LABEL_55:
  if (v170 != v173)
  {
    uint64_t v104 = v85[19];
    uint64_t v105 = (void *)(v170 + v104);
    uint64_t v106 = (void *)(v173 + v104);
    sub_1001BBF74(v170 + v104, (void (*)(void))type metadata accessor for NewsDataModel);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v105 = *v106;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v107 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v108 = v85[20];
  uint64_t v109 = (char *)(v170 + v108);
  uint64_t v110 = (char *)(v173 + v108);
  uint64_t v111 = (int *)type metadata accessor for DetailChartSelection();
  int v112 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, (uint64_t)v111);
  int v113 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, (uint64_t)v111);
  if (v112)
  {
    if (!v113)
    {
      *(void *)uint64_t v109 = *(void *)v110;
      *((void *)v109 + 1) = *((void *)v110 + 1);
      uint64_t v114 = v111[5];
      uint64_t v115 = &v109[v114];
      uint64_t v116 = &v110[v114];
      uint64_t v117 = *(void (**)(char *, char *, uint64_t))(v169 + 16);
      swift_bridgeObjectRetain();
      uint64_t v118 = v116;
      uint64_t v72 = v173;
      v117(v115, v118, v171);
      v117(&v109[v111[6]], &v110[v111[6]], v171);
      v117(&v109[v111[7]], &v110[v111[7]], v171);
      *(void *)&v109[v111[8]] = *(void *)&v110[v111[8]];
      uint64_t v119 = v111[9];
      uint64_t v120 = &v109[v119];
      id v121 = &v110[v119];
      char v122 = v121[8];
      *(void *)uint64_t v120 = *(void *)v121;
      v120[8] = v122;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, (uint64_t)v111);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (v113)
  {
    sub_1001BBF74((uint64_t)v109, (void (*)(void))type metadata accessor for DetailChartSelection);
LABEL_65:
    uint64_t v123 = sub_10017DF08(&qword_100E711F8);
    memcpy(v109, v110, *(void *)(*(void *)(v123 - 8) + 64));
    goto LABEL_66;
  }
  *(void *)uint64_t v109 = *(void *)v110;
  *((void *)v109 + 1) = *((void *)v110 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7((uint64_t)&v109[v111[5]], (uint64_t)&v110[v111[5]], v171);
  v7((uint64_t)&v109[v111[6]], (uint64_t)&v110[v111[6]], v171);
  v7((uint64_t)&v109[v111[7]], (uint64_t)&v110[v111[7]], v171);
  *(void *)&v109[v111[8]] = *(void *)&v110[v111[8]];
  uint64_t v165 = v111[9];
  uint64_t v166 = &v109[v165];
  BOOL v167 = &v110[v165];
  char v168 = v167[8];
  *(void *)uint64_t v166 = *(void *)v167;
  v166[8] = v168;
LABEL_66:
  uint64_t v124 = v85[21];
  id v125 = (void *)(v170 + v124);
  id v126 = (void *)(v72 + v124);
  *id v125 = *v126;
  v125[1] = v126[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v127 = v85[22];
  id v128 = (void *)(v170 + v127);
  id v129 = (const void *)(v72 + v127);
  uint64_t v130 = type metadata accessor for WeatherChanges();
  int v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v130);
  int v132 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130);
  if (v131)
  {
    if (!v132)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  uint64_t v133 = *(void *)(v130 - 8);
  if (v132)
  {
    (*(void (**)(void *, uint64_t))(v133 + 8))(v128, v130);
LABEL_71:
    uint64_t v134 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v128, v129, *(void *)(*(void *)(v134 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(void *, const void *, uint64_t))(v133 + 24))(v128, v129, v130);
LABEL_72:
  uint64_t v135 = v85[23];
  uint64_t v136 = (void *)(v170 + v135);
  uint64_t v137 = (const void *)(v72 + v135);
  uint64_t v138 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  int v139 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v138);
  int v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138);
  if (!v139)
  {
    uint64_t v141 = *(void *)(v138 - 8);
    if (!v140)
    {
      (*(void (**)(void *, const void *, uint64_t))(v141 + 24))(v136, v137, v138);
      goto LABEL_78;
    }
    (*(void (**)(void *, uint64_t))(v141 + 8))(v136, v138);
    goto LABEL_77;
  }
  if (v140)
  {
LABEL_77:
    uint64_t v142 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v136, v137, *(void *)(*(void *)(v142 - 8) + 64));
    goto LABEL_78;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v138);
LABEL_78:
  uint64_t v143 = v85[24];
  unint64_t v144 = (void *)(v170 + v143);
  uint64_t v145 = (void *)(v72 + v143);
  uint64_t v146 = *(void **)(v170 + v143);
  uint64_t v147 = *(void **)(v72 + v143);
  void *v144 = v147;
  id v148 = v147;

  uint64_t v149 = (void *)v144[1];
  uint64_t v150 = (void *)v145[1];
  v144[1] = v150;
  id v151 = v150;

  int v152 = (void *)v144[2];
  uint64_t v153 = (void *)v145[2];
  v144[2] = v153;
  id v154 = v153;

  uint64_t v155 = (void *)v144[3];
  uint64_t v156 = (void *)v145[3];
  v144[3] = v156;
  id v157 = v156;

  uint64_t v158 = (void *)v144[4];
  unint64_t v159 = (void *)v145[4];
  v144[4] = v159;
  id v160 = v159;

  uint64_t v161 = (void *)v144[5];
  uint64_t v162 = (void *)v145[5];
  v144[5] = v162;
  id v163 = v162;

  *(unsigned char *)(v170 + v85[25]) = *(unsigned char *)(v72 + v85[25]);
  *(unsigned char *)(v170 + v85[26]) = *(unsigned char *)(v72 + v85[26]);
  return v170;
}

uint64_t sub_1003AB3C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v25 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v110 = v6;
  uint64_t v111 = (void (*)(void *, const void *, uint64_t))v7;
  v7(a1 + v25, a2 + v25, v6);
  uint64_t v26 = a3[13];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  uint64_t v30 = a3[14];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for Locale();
  uint64_t v34 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32);
  uint64_t v109 = *v34;
  (*v34)(v31, v32, v33);
  uint64_t v35 = a3[15];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = type metadata accessor for DayWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[16];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[17];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[18];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  uint64_t v50 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v51 = v50[5];
  uint64_t v52 = (void *)(v48 + v51);
  uint64_t v53 = (const void *)(v49 + v51);
  if (_s7Weather24LocationCompositionStateOwet_0(v49 + v51, 1, v33))
  {
    uint64_t v54 = sub_10017DF08(&qword_100E63730);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    v109((uint64_t)v52, (uint64_t)v53, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v33);
  }
  uint64_t v55 = v50[6];
  uint64_t v56 = v48 + v55;
  uint64_t v57 = v49 + v55;
  uint64_t v58 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = v50[7];
  uint64_t v60 = (void *)(v48 + v59);
  uint64_t v61 = (const void *)(v49 + v59);
  uint64_t v62 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v63 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    v111(v60, v61, v110);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  uint64_t v64 = v50[8];
  uint64_t v65 = (void *)(v48 + v64);
  uint64_t v66 = (const void *)(v49 + v64);
  uint64_t v67 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v68 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v66, v68);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  uint64_t v69 = v50[9];
  int v70 = (char *)(v48 + v69);
  uint64_t v71 = (char *)(v49 + v69);
  uint64_t v72 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
  {
    uint64_t v73 = sub_10017DF08(&qword_100E63740);
    memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
    uint64_t v74 = (void (*)(char *, char *, uint64_t))v111;
  }
  else
  {
    uint64_t v74 = (void (*)(char *, char *, uint64_t))v111;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v110))
    {
      uint64_t v75 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      v111(v70, v71, v110);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v110);
    }
    uint64_t v76 = *(int *)(v72 + 20);
    uint64_t v77 = &v70[v76];
    uint64_t v78 = &v71[v76];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v110))
    {
      uint64_t v79 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      v111(v77, v78, v110);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v110);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
  }
  uint64_t v80 = a3[19];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (const void *)(a2 + v80);
  uint64_t v83 = type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
  }
  else
  {
    uint64_t v84 = type metadata accessor for News();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v84 - 8) + 32))(v81, v82, v84);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v85 = a3[20];
  uint64_t v86 = (_OWORD *)(a1 + v85);
  uint64_t v87 = (_OWORD *)(a2 + v85);
  int v88 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, (uint64_t)v88))
  {
    uint64_t v89 = sub_10017DF08(&qword_100E711F8);
    memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    *uint64_t v86 = *v87;
    v74((char *)v86 + v88[5], (char *)v87 + v88[5], v110);
    v74((char *)v86 + v88[6], (char *)v87 + v88[6], v110);
    v74((char *)v86 + v88[7], (char *)v87 + v88[7], v110);
    *(void *)((char *)v86 + v88[8]) = *(void *)((char *)v87 + v88[8]);
    uint64_t v90 = v88[9];
    uint64_t v91 = (char *)v86 + v90;
    uint64_t v92 = (char *)v87 + v90;
    v91[8] = v92[8];
    *(void *)uint64_t v91 = *(void *)v92;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, (uint64_t)v88);
  }
  uint64_t v93 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  uint64_t v94 = (void *)(a1 + v93);
  uint64_t v95 = (const void *)(a2 + v93);
  uint64_t v96 = type metadata accessor for WeatherChanges();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
  {
    uint64_t v97 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
  }
  uint64_t v98 = a3[23];
  uint64_t v99 = (void *)(a1 + v98);
  uint64_t v100 = (const void *)(a2 + v98);
  uint64_t v101 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
  {
    uint64_t v102 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
  }
  uint64_t v103 = a3[24];
  uint64_t v104 = a3[25];
  uint64_t v105 = (_OWORD *)(a1 + v103);
  uint64_t v106 = (_OWORD *)(a2 + v103);
  long long v107 = v106[1];
  *uint64_t v105 = *v106;
  v105[1] = v107;
  v105[2] = v106[2];
  *(unsigned char *)(a1 + v104) = *(unsigned char *)(a2 + v104);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  return a1;
}

uint64_t sub_1003ABE2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v156 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v156 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_10017DF08(&qword_100E6E900);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v28 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v158 = v6;
  v7(a1 + v28, a2 + v28, v6);
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = a3[14];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = type metadata accessor for Locale();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = a1;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 40);
  v39(v34, v35, v36);
  uint64_t v40 = a3[15];
  uint64_t v41 = v38 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = type metadata accessor for DayWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
  uint64_t v44 = a3[16];
  uint64_t v45 = v38 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 40))(v45, v46, v47);
  uint64_t v48 = a3[17];
  uint64_t v49 = v38 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 40))(v49, v50, v51);
  unint64_t v159 = a3;
  uint64_t v160 = a2;
  uint64_t v52 = a3[18];
  uint64_t v157 = v38;
  uint64_t v53 = (void *)(v38 + v52);
  uint64_t v54 = a2 + v52;
  uint64_t v55 = *(void *)(a2 + v52 + 8);
  *uint64_t v53 = *(void *)(a2 + v52);
  v53[1] = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v57 = v56[5];
  uint64_t v58 = (char *)v53 + v57;
  uint64_t v59 = (const void *)(v54 + v57);
  int v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53 + v57, 1, v36);
  int v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v36);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, const void *, uint64_t))(v37 + 32))(v58, v59, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v58, v36);
LABEL_12:
    uint64_t v62 = sub_10017DF08(&qword_100E63730);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_13;
  }
  v39((uint64_t)v58, (uint64_t)v59, v36);
LABEL_13:
  uint64_t v63 = v56[6];
  uint64_t v64 = (char *)v53 + v63;
  uint64_t v65 = v54 + v63;
  uint64_t v66 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  uint64_t v67 = v56[7];
  uint64_t v68 = (char *)v53 + v67;
  uint64_t v69 = (const void *)(v54 + v67);
  uint64_t v70 = sub_10017DF08(&qword_100E63738);
  int v71 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v70);
  int v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70);
  if (v71)
  {
    if (!v72)
    {
      (*(void (**)(char *, const void *, uint64_t))(v156 + 32))(v68, v69, v158);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v72)
  {
    sub_100178110((uint64_t)v68, &qword_100E63738);
LABEL_18:
    uint64_t v73 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v68, v69, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_19;
  }
  v7((uint64_t)v68, (uint64_t)v69, v158);
LABEL_19:
  if (v157 != v160)
  {
    uint64_t v74 = v56[8];
    uint64_t v75 = (char *)v53 + v74;
    uint64_t v76 = (const void *)(v54 + v74);
    sub_1001BBF74((uint64_t)v53 + v74, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v77 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v78 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v78 - 8) + 32))(v75, v76, v78);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
  }
  uint64_t v79 = v56[9];
  uint64_t v80 = (char *)v53 + v79;
  uint64_t v81 = (char *)(v54 + v79);
  uint64_t v82 = type metadata accessor for WeatherDataOverrides();
  int v83 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v82);
  int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82);
  if (v83)
  {
    if (!v84)
    {
      uint64_t v85 = v159;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v158))
      {
        uint64_t v86 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v80, v81, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v80, v81, v158);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v158);
      }
      uint64_t v91 = *(int *)(v82 + 20);
      uint64_t v92 = &v80[v91];
      uint64_t v93 = &v81[v91];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v158))
      {
        uint64_t v94 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v92, v93, v158);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v158);
      }
      uint64_t v95 = (uint64_t)v80;
      uint64_t v96 = v82;
      goto LABEL_41;
    }
LABEL_29:
    uint64_t v87 = sub_10017DF08(&qword_100E63740);
    memcpy(v80, v81, *(void *)(*(void *)(v87 - 8) + 64));
    uint64_t v85 = v159;
    goto LABEL_52;
  }
  if (v84)
  {
    sub_1001BBF74((uint64_t)v80, (void (*)(void))type metadata accessor for WeatherDataOverrides);
    goto LABEL_29;
  }
  int v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v158);
  int v89 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v158);
  if (v88)
  {
    if (v89)
    {
      uint64_t v90 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v80, v81, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v80, v81, v158);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v158);
    }
    uint64_t v85 = v159;
  }
  else
  {
    uint64_t v85 = v159;
    if (v89)
    {
      (*(void (**)(char *, uint64_t))(v156 + 8))(v80, v158);
      uint64_t v97 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v80, v81, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v80, (uint64_t)v81, v158);
    }
  }
  uint64_t v98 = *(int *)(v82 + 20);
  uint64_t v99 = &v80[v98];
  uint64_t v100 = &v81[v98];
  int v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v158);
  int v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v158);
  if (v101)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v99, v100, v158);
      uint64_t v95 = (uint64_t)v99;
      uint64_t v96 = v158;
LABEL_41:
      _s7Weather24LocationCompositionStateOwst_0(v95, 0, 1, v96);
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  if (v102)
  {
    (*(void (**)(char *, uint64_t))(v156 + 8))(v99, v158);
LABEL_51:
    uint64_t v103 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_52;
  }
  v7((uint64_t)v99, (uint64_t)v100, v158);
LABEL_52:
  if (v157 != v160)
  {
    uint64_t v104 = v85[19];
    uint64_t v105 = (void *)(v157 + v104);
    uint64_t v106 = (const void *)(v160 + v104);
    sub_1001BBF74(v157 + v104, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v107 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v105, v106, *(void *)(*(void *)(v107 - 8) + 64));
    }
    else
    {
      uint64_t v108 = type metadata accessor for News();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v108 - 8) + 32))(v105, v106, v108);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v109 = v85[20];
  uint64_t v110 = (char *)(v157 + v109);
  uint64_t v111 = (char *)(v160 + v109);
  int v112 = (int *)type metadata accessor for DetailChartSelection();
  int v113 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, (uint64_t)v112);
  int v114 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, (uint64_t)v112);
  if (v113)
  {
    if (!v114)
    {
      *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v156 + 32);
      v115(&v110[v112[5]], &v111[v112[5]], v158);
      v115(&v110[v112[6]], &v111[v112[6]], v158);
      v115(&v110[v112[7]], &v111[v112[7]], v158);
      *(void *)&v110[v112[8]] = *(void *)&v111[v112[8]];
      uint64_t v116 = v112[9];
      uint64_t v117 = &v110[v116];
      uint64_t v118 = &v111[v116];
      v117[8] = v118[8];
      *(void *)uint64_t v117 = *(void *)v118;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, (uint64_t)v112);
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  if (v114)
  {
    sub_1001BBF74((uint64_t)v110, (void (*)(void))type metadata accessor for DetailChartSelection);
LABEL_61:
    uint64_t v119 = sub_10017DF08(&qword_100E711F8);
    memcpy(v110, v111, *(void *)(*(void *)(v119 - 8) + 64));
    goto LABEL_62;
  }
  uint64_t v152 = *((void *)v111 + 1);
  *(void *)uint64_t v110 = *(void *)v111;
  *((void *)v110 + 1) = v152;
  swift_bridgeObjectRelease();
  v7((uint64_t)&v110[v112[5]], (uint64_t)&v111[v112[5]], v158);
  v7((uint64_t)&v110[v112[6]], (uint64_t)&v111[v112[6]], v158);
  v7((uint64_t)&v110[v112[7]], (uint64_t)&v111[v112[7]], v158);
  *(void *)&v110[v112[8]] = *(void *)&v111[v112[8]];
  uint64_t v153 = v112[9];
  id v154 = &v110[v153];
  uint64_t v155 = &v111[v153];
  v154[8] = v155[8];
  *(void *)id v154 = *(void *)v155;
LABEL_62:
  uint64_t v120 = v85[21];
  id v121 = (void *)(v157 + v120);
  char v122 = (uint64_t *)(v160 + v120);
  uint64_t v124 = *v122;
  uint64_t v123 = v122[1];
  void *v121 = v124;
  v121[1] = v123;
  swift_bridgeObjectRelease();
  uint64_t v125 = v85[22];
  id v126 = (void *)(v157 + v125);
  uint64_t v127 = (const void *)(v160 + v125);
  uint64_t v128 = type metadata accessor for WeatherChanges();
  int v129 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v128);
  int v130 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128);
  if (v129)
  {
    if (!v130)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v128 - 8) + 32))(v126, v127, v128);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
      goto LABEL_68;
    }
    goto LABEL_67;
  }
  uint64_t v131 = *(void *)(v128 - 8);
  if (v130)
  {
    (*(void (**)(void *, uint64_t))(v131 + 8))(v126, v128);
LABEL_67:
    uint64_t v132 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v126, v127, *(void *)(*(void *)(v132 - 8) + 64));
    goto LABEL_68;
  }
  (*(void (**)(void *, const void *, uint64_t))(v131 + 40))(v126, v127, v128);
LABEL_68:
  uint64_t v133 = v85[23];
  uint64_t v134 = (void *)(v157 + v133);
  uint64_t v135 = (const void *)(v160 + v133);
  uint64_t v136 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  int v137 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, v136);
  int v138 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v136);
  if (!v137)
  {
    uint64_t v139 = *(void *)(v136 - 8);
    if (!v138)
    {
      (*(void (**)(void *, const void *, uint64_t))(v139 + 40))(v134, v135, v136);
      goto LABEL_74;
    }
    (*(void (**)(void *, uint64_t))(v139 + 8))(v134, v136);
    goto LABEL_73;
  }
  if (v138)
  {
LABEL_73:
    uint64_t v140 = sub_10017DF08(&qword_100E6BF78);
    memcpy(v134, v135, *(void *)(*(void *)(v140 - 8) + 64));
    goto LABEL_74;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v136 - 8) + 32))(v134, v135, v136);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v134, 0, 1, v136);
LABEL_74:
  uint64_t v141 = v85[24];
  uint64_t v142 = (void *)(v157 + v141);
  uint64_t v143 = (void *)(v160 + v141);
  unint64_t v144 = *(void **)(v157 + v141);
  void *v142 = *v143;

  uint64_t v145 = (void *)v142[1];
  v142[1] = v143[1];

  uint64_t v146 = (void *)v142[2];
  v142[2] = v143[2];

  uint64_t v147 = (void *)v142[3];
  v142[3] = v143[3];

  id v148 = (void *)v142[4];
  v142[4] = v143[4];

  uint64_t v149 = (void *)v142[5];
  v142[5] = v143[5];

  uint64_t v150 = v85[26];
  *(unsigned char *)(v157 + v85[25]) = *(unsigned char *)(v160 + v85[25]);
  *(unsigned char *)(v157 + v150) = *(unsigned char *)(v160 + v150);
  return v157;
}

uint64_t sub_1003ACEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003ACED0);
}

uint64_t sub_1003ACED0(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_35:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E66CC8);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_34:
    uint64_t v9 = a1 + v12;
    goto LABEL_35;
  }
  sub_10017DF08(&qword_100E6E8F8);
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[6];
    goto LABEL_34;
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for DetailCondition();
    sub_100162F30();
    if (*(_DWORD *)(v18 + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = a3[8];
    }
    else
    {
      type metadata accessor for DetailChartCondition();
      sub_100162F30();
      if (*(_DWORD *)(v20 + 84) == a2)
      {
        uint64_t v8 = v19;
        uint64_t v12 = a3[9];
      }
      else
      {
        type metadata accessor for Location();
        sub_100162F30();
        if (*(_DWORD *)(v22 + 84) == a2)
        {
          uint64_t v8 = v21;
          uint64_t v12 = a3[13];
        }
        else
        {
          type metadata accessor for Locale();
          sub_100162F30();
          if (*(_DWORD *)(v24 + 84) == a2)
          {
            uint64_t v8 = v23;
            uint64_t v12 = a3[14];
          }
          else
          {
            type metadata accessor for DayWeather();
            sub_100162F30();
            if (*(_DWORD *)(v26 + 84) == a2)
            {
              uint64_t v8 = v25;
              uint64_t v12 = a3[15];
            }
            else
            {
              type metadata accessor for CurrentWeather();
              sub_100162F30();
              if (*(_DWORD *)(v28 + 84) == a2)
              {
                uint64_t v8 = v27;
                uint64_t v12 = a3[16];
              }
              else
              {
                sub_10017DF08(&qword_100E66CA0);
                sub_100162F30();
                if (*(_DWORD *)(v30 + 84) == a2)
                {
                  uint64_t v8 = v29;
                  uint64_t v12 = a3[17];
                }
                else
                {
                  type metadata accessor for WeatherData(0);
                  sub_100162F30();
                  if (*(_DWORD *)(v32 + 84) == a2)
                  {
                    uint64_t v8 = v31;
                    uint64_t v12 = a3[18];
                  }
                  else
                  {
                    type metadata accessor for NewsDataModel();
                    sub_100162F30();
                    if (*(_DWORD *)(v34 + 84) == a2)
                    {
                      uint64_t v8 = v33;
                      uint64_t v12 = a3[19];
                    }
                    else
                    {
                      sub_10017DF08(&qword_100E711F8);
                      sub_100162F30();
                      if (*(_DWORD *)(v36 + 84) == a2)
                      {
                        uint64_t v8 = v35;
                        uint64_t v12 = a3[20];
                      }
                      else
                      {
                        sub_10017DF08(&qword_100E6D1C8);
                        sub_100162F30();
                        if (*(_DWORD *)(v38 + 84) == a2)
                        {
                          uint64_t v8 = v37;
                          uint64_t v12 = a3[22];
                        }
                        else
                        {
                          uint64_t v8 = sub_10017DF08(&qword_100E6BF78);
                          uint64_t v12 = a3[23];
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(a1 + a3[7]);
  if (v15 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  return (v15 + 1);
}

uint64_t sub_1003AD16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003AD180);
}

void sub_1003AD180(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E66CC8);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E6E8F8);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(void *)(a1 + a4[7]) = (a2 - 1);
          return;
        }
        type metadata accessor for DetailCondition();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[8];
        }
        else
        {
          type metadata accessor for DetailChartCondition();
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[9];
          }
          else
          {
            type metadata accessor for Location();
            sub_100162F30();
            if (*(_DWORD *)(v22 + 84) == a3)
            {
              uint64_t v10 = v21;
              uint64_t v14 = a4[13];
            }
            else
            {
              type metadata accessor for Locale();
              sub_100162F30();
              if (*(_DWORD *)(v24 + 84) == a3)
              {
                uint64_t v10 = v23;
                uint64_t v14 = a4[14];
              }
              else
              {
                type metadata accessor for DayWeather();
                sub_100162F30();
                if (*(_DWORD *)(v26 + 84) == a3)
                {
                  uint64_t v10 = v25;
                  uint64_t v14 = a4[15];
                }
                else
                {
                  type metadata accessor for CurrentWeather();
                  sub_100162F30();
                  if (*(_DWORD *)(v28 + 84) == a3)
                  {
                    uint64_t v10 = v27;
                    uint64_t v14 = a4[16];
                  }
                  else
                  {
                    sub_10017DF08(&qword_100E66CA0);
                    sub_100162F30();
                    if (*(_DWORD *)(v30 + 84) == a3)
                    {
                      uint64_t v10 = v29;
                      uint64_t v14 = a4[17];
                    }
                    else
                    {
                      type metadata accessor for WeatherData(0);
                      sub_100162F30();
                      if (*(_DWORD *)(v32 + 84) == a3)
                      {
                        uint64_t v10 = v31;
                        uint64_t v14 = a4[18];
                      }
                      else
                      {
                        type metadata accessor for NewsDataModel();
                        sub_100162F30();
                        if (*(_DWORD *)(v34 + 84) == a3)
                        {
                          uint64_t v10 = v33;
                          uint64_t v14 = a4[19];
                        }
                        else
                        {
                          sub_10017DF08(&qword_100E711F8);
                          sub_100162F30();
                          if (*(_DWORD *)(v36 + 84) == a3)
                          {
                            uint64_t v10 = v35;
                            uint64_t v14 = a4[20];
                          }
                          else
                          {
                            sub_10017DF08(&qword_100E6D1C8);
                            sub_100162F30();
                            if (*(_DWORD *)(v38 + 84) == a3)
                            {
                              uint64_t v10 = v37;
                              uint64_t v14 = a4[22];
                            }
                            else
                            {
                              uint64_t v10 = sub_10017DF08(&qword_100E6BF78);
                              uint64_t v14 = a4[23];
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_1003AD418()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100020CBC();
    if (v1 <= 0x3F)
    {
      sub_1003AD874();
      if (v2 <= 0x3F)
      {
        type metadata accessor for DetailCondition();
        if (v3 <= 0x3F)
        {
          type metadata accessor for DetailChartCondition();
          if (v4 <= 0x3F)
          {
            type metadata accessor for Location();
            if (v5 <= 0x3F)
            {
              type metadata accessor for Locale();
              if (v6 <= 0x3F)
              {
                type metadata accessor for DayWeather();
                if (v7 <= 0x3F)
                {
                  type metadata accessor for CurrentWeather();
                  if (v8 <= 0x3F)
                  {
                    sub_10001CB2C();
                    if (v9 <= 0x3F)
                    {
                      type metadata accessor for WeatherData(319);
                      if (v10 <= 0x3F)
                      {
                        type metadata accessor for NewsDataModel();
                        if (v11 <= 0x3F)
                        {
                          sub_1003AD8D0(319, (unint64_t *)&qword_100E71330, (void (*)(uint64_t))type metadata accessor for DetailChartSelection);
                          if (v12 <= 0x3F)
                          {
                            sub_1003AD8D0(319, (unint64_t *)&qword_100E71338, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
                            if (v13 <= 0x3F)
                            {
                              sub_1003AD8D0(319, (unint64_t *)&unk_100E71340, (void (*)(uint64_t))&type metadata accessor for MidpointInterpolator.InterpolationMode);
                              if (v14 <= 0x3F) {
                                swift_initStructMetadata();
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1003AD874()
{
  if (!qword_100E71308)
  {
    sub_10018C6DC(&qword_100E6E900);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E71308);
    }
  }
}

void sub_1003AD8D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1003AD924()
{
  unint64_t result = qword_100E71400;
  if (!qword_100E71400)
  {
    sub_10018C6DC(&qword_100E6E900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E71400);
  }
  return result;
}

uint64_t sub_1003AD978(unint64_t a1)
{
  return sub_1003A1FDC(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10]);
}

uint64_t sub_1003AD9B0()
{
  return sub_1003A21D0(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003AD9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E71408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003ADA24(unint64_t a1)
{
  return sub_1003A1CF4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void (**)(char *, uint64_t))(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_1003ADA64()
{
  return sub_1003A1EF8(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003ADA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6ECE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003ADAD8()
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_1003ADB1C();
  *(unsigned char *)(v0 + 16) = result;
  return result;
}

uint64_t sub_1003ADB1C()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x21) {
    return 33;
  }
  else {
    return v0;
  }
}

uint64_t type metadata accessor for LegacyPerformanceTestManager()
{
  return self;
}

uint64_t getEnumTagSinglePayload for LegacyPerformanceTest(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE0)
  {
    if (a2 + 32 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 32) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 33;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x21;
  int v5 = v6 - 33;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LegacyPerformanceTest(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 32 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 32) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDF)
  {
    unsigned int v6 = ((a2 - 224) >> 8) + 1;
    *uint64_t result = a2 + 32;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003ADCE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 32;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyPerformanceTest()
{
  return &type metadata for LegacyPerformanceTest;
}

unint64_t sub_1003ADD20(char a1)
{
  unint64_t result = 0x776569567473694CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000027;
      break;
    case 4:
      unint64_t result = 0xD000000000000027;
      break;
    case 5:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000027;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
    case 22:
    case 23:
    case 24:
    case 25:
      unint64_t result = 0xD000000000000021;
      break;
    case 9:
      unint64_t result = 0xD000000000000029;
      break;
    case 10:
      unint64_t result = 0xD000000000000029;
      break;
    case 11:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 12:
      unint64_t result = 0xD000000000000029;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 16:
      unint64_t result = 0xD000000000000018;
      break;
    case 17:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 18:
      unint64_t result = 0xD000000000000018;
      break;
    case 19:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 20:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 21:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 26:
      unint64_t result = 0xD000000000000022;
      break;
    case 27:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 28:
      unint64_t result = 0xD000000000000023;
      break;
    case 29:
      unint64_t result = 0xD000000000000025;
      break;
    case 30:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 31:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 32:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003AE0CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10088A5F8(*a1, *a2);
}

Swift::Int sub_1003AE0D8()
{
  return sub_100652588(*v0);
}

uint64_t sub_1003AE0E0(uint64_t a1)
{
  return sub_1002C26CC(a1, *v1);
}

Swift::Int sub_1003AE0E8(uint64_t a1)
{
  return sub_1002C4740(a1, *v1);
}

uint64_t sub_1003AE0F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1003ADB1C();
  *a1 = result;
  return result;
}

unint64_t sub_1003AE120@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1003ADD20(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1003AE150()
{
  unint64_t result = qword_100E714E0;
  if (!qword_100E714E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E714E0);
  }
  return result;
}

BOOL sub_1003AE19C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ContentStatusBanner();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  BOOL v7 = (unsigned __int8 *)(v6 - v5);
  uint64_t v8 = sub_10017DF08(&qword_100E64F30);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E63A10);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (unsigned __int8 *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v55 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v55 - v20;
  if ((static WeatherMapOverlayKind.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v22 = (int *)type metadata accessor for InteractiveMapInput();
  sub_100126FA8();
  if ((v23 & 1) == 0) {
    return 0;
  }
  sub_100126FF0();
  if ((v24 & 1) == 0) {
    return 0;
  }
  uint64_t v25 = v22[7];
  uint64_t v26 = *(void *)(a1 + v25);
  uint64_t v27 = *(void *)(a1 + v25 + 8);
  uint64_t v28 = (void *)(a2 + v25);
  BOOL v29 = v26 == *v28 && v27 == v28[1];
  if (v29 || (v30 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v30 & 1) != 0))
  {
    uint64_t v32 = v22[8];
    uint64_t v33 = *(void *)(a1 + v32);
    uint64_t v34 = *(void *)(a1 + v32 + 8);
    uint64_t v35 = *(void *)(a1 + v32 + 16);
    uint64_t v36 = *(void *)(a1 + v32 + 24);
    uint64_t v37 = (uint64_t *)(a2 + v32);
    uint64_t v38 = *v37;
    uint64_t v39 = v37[1];
    uint64_t v40 = v37[2];
    v55[2] = v37[3];
    v55[3] = v36;
    BOOL v41 = v33 == v38 && v34 == v39;
    if (v41
      || (v55[0] = v40, v55[1] = v35, v42 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v42 & 1) != 0))
    {
      sub_10011AD08();
      if ((v43 & 1) == 0) {
        return 0;
      }
      sub_10011A5D0();
      if ((v44 & 1) == 0) {
        return 0;
      }
      sub_100180F34();
      if (!v29) {
        return 0;
      }
      sub_100180F34();
      if (!v29 || (sub_10011D6F4() & 1) == 0 || *(double *)(a1 + v22[12]) != *(double *)(a2 + v22[12])) {
        return 0;
      }
      uint64_t v45 = v22[13];
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = *(void *)(a1 + v45 + 8);
      uint64_t v48 = (void *)(a2 + v45);
      uint64_t v49 = v48[1];
      if (v47)
      {
        if (!v49) {
          return 0;
        }
        if (*v46 != *v48 || v47 != v49)
        {
          char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
          BOOL result = 0;
          if ((v51 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v49)
      {
        return 0;
      }
      sub_100180F34();
      if (!v29) {
        return 0;
      }
      sub_10006DF38(a1 + v22[15], (uint64_t)v21, &qword_100E63A10);
      sub_10006DF38(a2 + v22[15], (uint64_t)v19, &qword_100E63A10);
      uint64_t v52 = v12 + *(int *)(v8 + 48);
      sub_10006DF38((uint64_t)v21, v12, &qword_100E63A10);
      sub_10006DF38((uint64_t)v19, v52, &qword_100E63A10);
      sub_100162F8C(v12);
      if (v29)
      {
        sub_100178110((uint64_t)v19, &qword_100E63A10);
        sub_100178110((uint64_t)v21, &qword_100E63A10);
        sub_100162F8C(v52);
        if (v29)
        {
          sub_100178110(v12, &qword_100E63A10);
          return 1;
        }
      }
      else
      {
        sub_10006DF38(v12, (uint64_t)v16, &qword_100E63A10);
        sub_100162F8C(v52);
        if (!v53)
        {
          sub_10016EB04(v52, (uint64_t)v7, (void (*)(void))type metadata accessor for ContentStatusBanner);
          BOOL v54 = sub_1001C6EF8(v16, v7);
          sub_1003B19F0((uint64_t)v7, (void (*)(void))type metadata accessor for ContentStatusBanner);
          sub_100178110((uint64_t)v19, &qword_100E63A10);
          sub_100178110((uint64_t)v21, &qword_100E63A10);
          sub_1003B19F0((uint64_t)v16, (void (*)(void))type metadata accessor for ContentStatusBanner);
          sub_100178110(v12, &qword_100E63A10);
          return v54;
        }
        sub_100178110((uint64_t)v19, &qword_100E63A10);
        sub_100178110((uint64_t)v21, &qword_100E63A10);
        sub_1003B19F0((uint64_t)v16, (void (*)(void))type metadata accessor for ContentStatusBanner);
      }
      sub_100178110(v12, &qword_100E64F30);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003AE60C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18)
{
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v25 + 32))(a9, a1);
  uint64_t v26 = (int *)type metadata accessor for InteractiveMapInput();
  *(void *)(a9 + v26[5]) = a2;
  *(void *)(a9 + v26[6]) = a3;
  uint64_t v27 = (void *)(a9 + v26[7]);
  *uint64_t v27 = a4;
  v27[1] = a5;
  uint64_t v28 = (void *)(a9 + v26[8]);
  *uint64_t v28 = a6;
  v28[1] = a7;
  v28[2] = a8;
  v28[3] = a11;
  *(unsigned char *)(a9 + v26[9]) = a12;
  *(unsigned char *)(a9 + v26[10]) = a13;
  sub_10016EB04(a14, a9 + v26[11], (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  *(double *)(a9 + v26[12]) = a10;
  BOOL v29 = (void *)(a9 + v26[13]);
  *BOOL v29 = a15;
  v29[1] = a16;
  *(unsigned char *)(a9 + v26[14]) = a17;
  uint64_t v30 = a9 + v26[15];

  return sub_1003B1A44(a18, v30);
}

uint64_t sub_1003AE7A0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v125 = a1;
  uint64_t v120 = a2;
  type metadata accessor for Logger();
  sub_100179C0C();
  uint64_t v117 = v3;
  uint64_t v118 = v2;
  __chkstk_darwin(v2);
  sub_100162EF8();
  uint64_t v119 = v4;
  __chkstk_darwin(v5);
  uint64_t v113 = (uint64_t)v103 - v6;
  uint64_t v7 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v7 - 8);
  sub_100109314();
  uint64_t v106 = v8;
  uint64_t v112 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v111 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v116 = v11;
  uint64_t v110 = type metadata accessor for WeatherMapPresentationState(0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v115 = v13;
  __chkstk_darwin(v14);
  uint64_t v114 = (uint64_t)v103 - v15;
  uint64_t v109 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v108 = v16;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v107 = v18;
  uint64_t v105 = sub_10017DF08(&qword_100E71640);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100162EF8();
  uint64_t v104 = v20;
  __chkstk_darwin(v21);
  char v23 = (char *)v103 - v22;
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = (uint64_t *)(v26 - v25);
  uint64_t v28 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)v103 - v33;
  uint64_t v35 = self;
  id v36 = [v35 currentDevice];
  id v37 = [v36 userInterfaceIdiom];

  if (v37 == (id)1) {
    double v38 = 0.85;
  }
  else {
    double v38 = 0.5;
  }
  unint64_t v39 = 0xD000000000000014;
  if (!v37) {
    unint64_t v39 = 0;
  }
  unint64_t v40 = 0x8000000100C9D4C0;
  if (!v37) {
    unint64_t v40 = 0;
  }
  unint64_t v121 = v39;
  unint64_t v122 = v40;
  sub_10017DF08(&qword_100E64988);
  uint64_t v124 = swift_allocBox();
  uint64_t v42 = v41;
  uint64_t v43 = type metadata accessor for InteractiveMapInput();
  uint64_t v44 = v42;
  uint64_t v45 = v125;
  uint64_t v123 = v43;
  _s7Weather24LocationCompositionStateOwst_0(v44, 1, 1, v43);
  uint64_t v46 = v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_100113798(v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v34, (void (*)(void))type metadata accessor for ViewState);
  sub_100113798((uint64_t)&v34[v28[5]], (uint64_t)v27, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1003B19F0((uint64_t)v27, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_19:
    uint64_t v84 = v126;
    sub_1003B19F0((uint64_t)v34, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v85 = v119;
    static Logger.map.getter();
    swift_retain_n();
    swift_retain_n();
    uint64_t v52 = v85;
    uint64_t v86 = Logger.logObject.getter();
    os_log_type_t v87 = static os_log_type_t.error.getter();
    uint64_t v88 = v87;
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v52 = swift_slowAlloc();
      v127[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136446466;
      if (*(unsigned char *)(v84 + 16)) {
        uint64_t v89 = 0xD000000000000012;
      }
      else {
        uint64_t v89 = 0x776569566E69616DLL;
      }
      if (*(unsigned char *)(v84 + 16)) {
        unint64_t v90 = 0x8000000100C9D4E0;
      }
      else {
        unint64_t v90 = 0xE800000000000000;
      }
      uint64_t v128 = sub_10016414C(v89, v90, v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 1026;
      sub_100113798(v46, (uint64_t)v32, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v91 = *(void *)&v32[v28[9] + 8];
      sub_1003B19F0((uint64_t)v32, (void (*)(void))type metadata accessor for ViewState);
      swift_release();
      LODWORD(v128) = v91 == 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v88, "Unable to obtain locationViewerState for InteractiveMapInput.\npresentationContext=%{public}s\nisCompact=%{BOOL,public}d,", (uint8_t *)v52, 0x12u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_100162F0C();
    v92();
    sub_1001A1DA0();
    sub_1003AF3B8(v45, v93, v88, v94, v38);
    goto LABEL_31;
  }
  uint64_t v47 = *v27;
  if (*(void *)&v34[v28[9] + 8] == 1)
  {
    id v48 = [v35 currentDevice];
    [v48 userInterfaceIdiom];

    if ((v34[v28[7]] & 1) == 0)
    {
      swift_release();
      goto LABEL_19;
    }
  }
  sub_1003B19F0((uint64_t)v34, (void (*)(void))type metadata accessor for ViewState);
  sub_100B3044C((uint64_t)v23);
  uint64_t v49 = type metadata accessor for PresentedLocation();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v49);
  v103[1] = v47;
  if (v50 == 1)
  {
    sub_100178110((uint64_t)v23, &qword_100E71640);
    uint64_t v51 = v113;
    static Logger.map.getter();
    swift_retain_n();
    uint64_t v52 = v51;
    char v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    uint64_t v55 = v54;
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v52 = swift_slowAlloc();
      v127[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 141558275;
      uint64_t v128 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v52 + 12) = 2081;
      sub_100B3044C(v104);
      uint64_t v56 = String.init<A>(describing:)();
      uint64_t v32 = (char *)v57;
      uint64_t v128 = sub_10016414C(v56, v57, v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v55, "Failed to get selected location id from presentedLocation=%{private,mask.hash}s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {

      swift_release_n();
    }
    sub_100162F0C();
    v95();
    sub_1001A1DA0();
    sub_1003AF3B8(v45, v96, v55, v97, v38);
    swift_release();
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  sub_10056CA10(v107);
  sub_1003B19F0((uint64_t)v23, (void (*)(void))type metadata accessor for PresentedLocation);
  uint64_t v58 = Location.Identifier.id.getter();
  uint64_t v119 = v59;
  sub_100162F0C();
  v60();
  uint64_t v118 = sub_1003AF9B8(v45);
  uint64_t v61 = v114;
  sub_100113798(v46 + v28[10], v114, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 16))(v116, v61 + *(int *)(v110 + 24), v112);
  uint64_t v62 = v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v63 = *(void *)(v62 + *(int *)(type metadata accessor for LocationsState() + 28));
  uint64_t v64 = *(void *)(v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v117 = *(void *)(v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v65 = *(void *)(v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v66 = *(void *)(v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  uint64_t v67 = v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  int v68 = *(unsigned __int8 *)(v67 + 2);
  int v69 = *(unsigned __int8 *)(v67 + 1);
  sub_100113798(v61, v115, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  char v70 = *(unsigned char *)(v126 + 16);
  uint64_t v71 = *(void *)(v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
  uint64_t v72 = *(void *)(v71 + 16);
  uint64_t v113 = v58;
  if (v72)
  {
    LODWORD(v126) = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v73 = sub_1001EB73C(0, 1);
    if (v74)
    {
      unint64_t v75 = v73;
      uint64_t v76 = *(void *)(v71 + 56);
      uint64_t v77 = type metadata accessor for ContentStatusBanner();
      sub_100162E4C();
      uint64_t v79 = v76 + *(void *)(v78 + 72) * v75;
      uint64_t v45 = v106;
      sub_100113798(v79, v106, (void (*)(void))type metadata accessor for ContentStatusBanner);
      uint64_t v80 = v45;
      uint64_t v81 = 0;
      uint64_t v82 = 1;
      uint64_t v83 = v77;
    }
    else
    {
      type metadata accessor for ContentStatusBanner();
      uint64_t v80 = sub_1001A0688();
    }
    _s7Weather24LocationCompositionStateOwst_0(v80, v81, v82, v83);
    uint64_t v32 = v120;
    int v69 = v126;
  }
  else
  {
    type metadata accessor for ContentStatusBanner();
    uint64_t v99 = sub_1001A0688();
    _s7Weather24LocationCompositionStateOwst_0(v99, v100, v101, v102);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = v120;
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_1003B19F0(v114, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_1003AE60C(v116, (uint64_t)v118, v63, v113, v119, v117, v64, v65, (uint64_t)v32, v38, v66, v68 == 4, (v69 - 1) < 2, v115, v121, v122, v70 ^ 1, v45);
  uint64_t v52 = v123;
LABEL_32:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v52);
  return swift_release();
}

uint64_t sub_1003AF3B8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10 = sub_10017DF08(&qword_100E64988);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v19 - v14;
  uint64_t v16 = swift_projectBox();
  sub_10006DF38(v16, (uint64_t)v15, &qword_100E64988);
  uint64_t v17 = type metadata accessor for InteractiveMapInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17) != 1) {
    return sub_10016EB04((uint64_t)v15, a4, (void (*)(void))type metadata accessor for InteractiveMapInput);
  }
  sub_100178110((uint64_t)v15, &qword_100E64988);
  sub_1003AF56C(a1, a2, a3, a4, a5);
  sub_100113798(a4, (uint64_t)v13, (void (*)(void))type metadata accessor for InteractiveMapInput);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v17);
  swift_beginAccess();
  return sub_1003B1AAC((uint64_t)v13, v16);
}

uint64_t sub_1003AF56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  uint64_t v50 = a4;
  uint64_t v45 = a1;
  uint64_t v6 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v6 - 8);
  uint64_t v46 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (_WORD *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v39 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v35 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v17;
  uint64_t v18 = enum case for WeatherMapPrecipitationOverlayKind.auto(_:);
  unsigned int v37 = enum case for WeatherMapPrecipitationOverlayKind.auto(_:);
  uint64_t v19 = type metadata accessor for WeatherMapPrecipitationOverlayKind();
  uint64_t v20 = *(void *)(v19 - 8);
  id v36 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  uint64_t v38 = v20 + 104;
  v36(v17, v18, v19);
  uint64_t v21 = enum case for WeatherMapOverlayKind.precipitation(_:);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v34(v17, enum case for WeatherMapOverlayKind.precipitation(_:), v14);
  type metadata accessor for LocationWeatherDataState(0);
  uint64_t v43 = Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for LocationAvailableDataSetState(0);
  uint64_t v22 = Dictionary.init(dictionaryLiteral:)();
  UUID.init()();
  uint64_t v23 = UUID.uuidString.getter();
  uint64_t v40 = v24;
  uint64_t v41 = v23;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v42);
  uint64_t v25 = v45 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  LOBYTE(v17) = *(unsigned char *)(v25 + 2) == 4;
  LOBYTE(v18) = *(unsigned __int8 *)(v25 + 1) - 1 < 2;
  uint64_t v26 = (char *)v11 + v9[8];
  v36(v26, v37, v19);
  v34(v26, v21, v35);
  uint64_t v27 = (uint64_t)v11 + v9[10];
  uint64_t v28 = sub_10017DF08(&qword_100E66460);
  _s7Weather24LocationCompositionStateOwst_0(v27, 3, 3, v28);
  *uint64_t v11 = 16643;
  uint64_t v29 = (void *)((char *)v11 + v9[9]);
  *uint64_t v29 = 0;
  v29[1] = 0;
  *((unsigned char *)v11 + v9[11]) = 1;
  LOBYTE(v26) = *(unsigned char *)(v47 + 16);
  uint64_t v30 = type metadata accessor for ContentStatusBanner();
  uint64_t v31 = v46;
  _s7Weather24LocationCompositionStateOwst_0(v46, 1, 1, v30);
  sub_1003AE60C((uint64_t)v44, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, 0, 0xE000000000000000, v41, v40, v43, v50, a5, v22, (char)v17, v18, (uint64_t)v11, v49, v48, (v26 & 1) == 0, v31);
  return swift_bridgeObjectRetain();
}

void *sub_1003AF9B8(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for Location();
  uint64_t v5 = *(void *)(v33 - 8);
  uint64_t v6 = __chkstk_darwin(v33);
  id v36 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)v29 - v8;
  uint64_t v9 = type metadata accessor for LocationModel();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v14 = *(void *)(v13 + *(int *)(type metadata accessor for LocationsState() + 24));
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v16 = v10 + 16;
  uint64_t v18 = v14 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
  uint64_t v34 = *(void *)(v16 + 56);
  uint64_t v35 = v17;
  uint64_t v19 = (void (**)(char *, uint64_t))(v16 - 8);
  uint64_t v31 = v5;
  uint64_t v20 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  v29[1] = v14;
  swift_bridgeObjectRetain();
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v22 = v33;
  v29[2] = v16;
  uint64_t v30 = v9;
  do
  {
    v35(v12, v18, v9);
    LocationModel.coalesceLocation.getter();
    (*v19)(v12, v9);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v22) == 1)
    {
      sub_100178110((uint64_t)v4, &qword_100E639E8);
    }
    else
    {
      uint64_t v23 = *v20;
      uint64_t v24 = v32;
      (*v20)(v32, v4, v22);
      v23(v36, v24, v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v21 = (void *)sub_1001D262C(0, v21[2] + 1, 1, (uint64_t)v21);
      }
      unint64_t v26 = v21[2];
      unint64_t v25 = v21[3];
      if (v26 >= v25 >> 1) {
        uint64_t v21 = (void *)sub_1001D262C(v25 > 1, v26 + 1, 1, (uint64_t)v21);
      }
      v21[2] = v26 + 1;
      unint64_t v27 = (unint64_t)v21
          + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
          + *(void *)(v31 + 72) * v26;
      uint64_t v22 = v33;
      v23((char *)v27, v36, v33);
      uint64_t v9 = v30;
    }
    v18 += v34;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t type metadata accessor for InteractiveMapInputFactory()
{
  return self;
}

void *sub_1003AFD50(void *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v52 = type metadata accessor for WeatherMapOverlayKind();
    char v53 = *(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
    v53(a1, a2, v52);
    uint64_t v7 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)&a2[a3[5]];
    *(void *)((char *)a1 + v7) = *(void *)&a2[v7];
    uint64_t v8 = a3[7];
    uint64_t v9 = a3[8];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = &a2[v8];
    uint64_t v12 = *((void *)v11 + 1);
    *uint64_t v10 = *(void *)v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = &a2[v9];
    uint64_t v15 = *((void *)v14 + 1);
    *uint64_t v13 = *(void *)v14;
    v13[1] = v15;
    uint64_t v51 = *((void *)v14 + 3);
    v13[2] = *((void *)v14 + 2);
    v13[3] = v51;
    uint64_t v16 = a3[10];
    *((unsigned char *)a1 + a3[9]) = a2[a3[9]];
    *((unsigned char *)a1 + v16) = a2[v16];
    uint64_t v17 = a3[11];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = &a2[v17];
    *uint64_t v18 = a2[v17];
    v18[1] = a2[v17 + 1];
    uint64_t v20 = (int *)type metadata accessor for WeatherMapPresentationState(0);
    uint64_t v21 = v20[6];
    uint64_t v49 = &v19[v21];
    uint64_t v50 = &v18[v21];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53(v50, v49, v52);
    uint64_t v22 = v20[7];
    uint64_t v23 = &v18[v22];
    uint64_t v24 = &v19[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *uint64_t v23 = *(void *)v24;
    v23[1] = v25;
    os_log_type_t v54 = v20;
    uint64_t v26 = v20[8];
    unint64_t v27 = &v18[v26];
    uint64_t v28 = &v19[v26];
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10017DF08(&qword_100E66460);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 3, v29))
    {
      uint64_t v30 = type metadata accessor for WeatherMapTrackingState(0);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      *unint64_t v27 = *v28;
      v53(&v27[*(int *)(v29 + 48)], &v28[*(int *)(v29 + 48)], v52);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 3, v29);
    }
    v18[v54[9]] = v19[v54[9]];
    uint64_t v32 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)&a2[a3[12]];
    uint64_t v33 = (void *)((char *)a1 + v32);
    uint64_t v34 = &a2[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *uint64_t v33 = *(void *)v34;
    v33[1] = v35;
    uint64_t v36 = a3[15];
    *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
    unsigned int v37 = (void *)((char *)a1 + v36);
    uint64_t v38 = &a2[v36];
    uint64_t v39 = type metadata accessor for ContentStatusBanner();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = sub_10017DF08(&qword_100E63A10);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      *(unsigned char *)unsigned int v37 = *v38;
      uint64_t v41 = v38 + 8;
      unint64_t v42 = *((void *)v38 + 2);
      if (v42 >= 2)
      {
        v37[1] = *v41;
        v37[2] = v42;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v37 + 1) = *(_OWORD *)v41;
      }
      uint64_t v43 = *(int *)(v39 + 24);
      uint64_t v44 = (char *)v37 + v43;
      uint64_t v45 = &v38[v43];
      uint64_t v46 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
  }
  return a1;
}

uint64_t sub_1003B0158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  uint64_t v7 = type metadata accessor for WeatherMapPresentationState(0);
  v5(v6 + *(int *)(v7 + 24), v4);
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + *(int *)(v7 + 32);
  uint64_t v9 = sub_10017DF08(&qword_100E66460);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 3, v9)) {
    v5(v8 + *(int *)(v9 + 48), v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + *(int *)(a2 + 60);
  uint64_t v11 = type metadata accessor for ContentStatusBanner();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v10, 1, v11);
  if (!result)
  {
    if (*(void *)(v10 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = v10 + *(int *)(v11 + 24);
    uint64_t v14 = type metadata accessor for Date();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v13, 1, v14);
    if (!result)
    {
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
      return v15(v13, v14);
    }
  }
  return result;
}

uint64_t sub_1003B035C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v51 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16);
  v50(a1, a2, v51);
  uint64_t v6 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v6) = *(void *)(a2 + v6);
  uint64_t v7 = a3[7];
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  uint64_t v16 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[11];
  uint64_t v53 = a1;
  uint64_t v18 = (unsigned char *)(a1 + v17);
  uint64_t v19 = a2 + v17;
  *uint64_t v18 = *(unsigned char *)(a2 + v17);
  v18[1] = *(unsigned char *)(a2 + v17 + 1);
  uint64_t v20 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v21 = v20[6];
  uint64_t v48 = v19 + v21;
  uint64_t v49 = &v18[v21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v50((uint64_t)v49, v48, v51);
  uint64_t v22 = v20[7];
  uint64_t v23 = &v18[v22];
  uint64_t v24 = (void *)(v19 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v52 = v20;
  uint64_t v26 = v20[8];
  unint64_t v27 = &v18[v26];
  uint64_t v28 = (unsigned char *)(v19 + v26);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 3, v29))
  {
    uint64_t v30 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    *unint64_t v27 = *v28;
    v50((uint64_t)&v27[*(int *)(v29 + 48)], (uint64_t)&v28[*(int *)(v29 + 48)], v51);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 3, v29);
  }
  v18[v52[9]] = *(unsigned char *)(v19 + v52[9]);
  uint64_t v31 = a3[13];
  *(void *)(v53 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v32 = (void *)(v53 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[15];
  *(unsigned char *)(v53 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v36 = (void *)(v53 + v35);
  unsigned int v37 = (void *)(a2 + v35);
  uint64_t v38 = type metadata accessor for ContentStatusBanner();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
  {
    uint64_t v39 = sub_10017DF08(&qword_100E63A10);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
    uint64_t v40 = v37 + 1;
    unint64_t v41 = v37[2];
    if (v41 >= 2)
    {
      v36[1] = *v40;
      v36[2] = v41;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v36 + 1) = *(_OWORD *)v40;
    }
    uint64_t v42 = *(int *)(v38 + 24);
    uint64_t v43 = (char *)v36 + v42;
    uint64_t v44 = (char *)v37 + v42;
    uint64_t v45 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
  }
  return v53;
}

unsigned char *sub_1003B0710(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 24);
  v7(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *uint64_t v12 = *(void *)&a2[v11];
  v12[1] = *(void *)&a2[v11 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[2] = *((void *)v13 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[3] = *((void *)v13 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v14 = a3[11];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *uint64_t v15 = a2[v14];
  v15[1] = a2[v14 + 1];
  uint64_t v17 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v57 = v6;
  uint64_t v58 = v7;
  v7(&v15[v17[6]], &v16[v17[6]], v6);
  uint64_t v18 = v17[7];
  uint64_t v19 = &v15[v18];
  uint64_t v20 = &v16[v18];
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v17[8];
  uint64_t v22 = &v15[v21];
  uint64_t v23 = &v16[v21];
  uint64_t v24 = sub_10017DF08(&qword_100E66460);
  int v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 3, v24);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 3, v24);
  if (v25)
  {
    if (!v26)
    {
      *uint64_t v22 = *v23;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 16))(&v22[*(int *)(v24 + 48)], &v23[*(int *)(v24 + 48)], v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 3, v24);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v26)
  {
    sub_100178110((uint64_t)v22, &qword_100E66460);
LABEL_6:
    uint64_t v27 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v22 = *v23;
  v58(&v22[*(int *)(v24 + 48)], &v23[*(int *)(v24 + 48)], v57);
LABEL_7:
  v15[v17[9]] = v16[v17[9]];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v28 = a3[13];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[14]] = a2[a3[14]];
  uint64_t v31 = a3[15];
  uint64_t v32 = (uint64_t)&a1[v31];
  uint64_t v33 = (uint64_t)&a2[v31];
  uint64_t v34 = type metadata accessor for ContentStatusBanner();
  int v35 = _s7Weather24LocationCompositionStateOwet_0(v32, 1, v34);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      *(unsigned char *)uint64_t v32 = *(unsigned char *)v33;
      if (*(void *)(v33 + 16) >= 2uLL)
      {
        *(void *)(v32 + 8) = *(void *)(v33 + 8);
        *(void *)(v32 + 16) = *(void *)(v33 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
      }
      uint64_t v41 = *(int *)(v34 + 24);
      uint64_t v42 = (void *)(v32 + v41);
      uint64_t v43 = (const void *)(v33 + v41);
      uint64_t v44 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
      {
        uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      }
      uint64_t v46 = v32;
      uint64_t v47 = v34;
      goto LABEL_24;
    }
    goto LABEL_13;
  }
  if (v36)
  {
    sub_1003B19F0(v32, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_13:
    size_t v37 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v38 = (void *)v32;
    uint64_t v39 = (const void *)v33;
    goto LABEL_14;
  }
  *(unsigned char *)uint64_t v32 = *(unsigned char *)v33;
  unint64_t v40 = *(void *)(v33 + 16);
  if (*(void *)(v32 + 16) >= 2uLL)
  {
    if (v40 >= 2)
    {
      *(void *)(v32 + 8) = *(void *)(v33 + 8);
      *(void *)(v32 + 16) = *(void *)(v33 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    sub_10027B4D4(v32 + 8);
    goto LABEL_28;
  }
  if (v40 < 2)
  {
LABEL_28:
    *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
    goto LABEL_30;
  }
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  *(void *)(v32 + 16) = *(void *)(v33 + 16);
  swift_bridgeObjectRetain();
LABEL_30:
  uint64_t v49 = *(int *)(v34 + 24);
  uint64_t v50 = v32 + v49;
  uint64_t v51 = v33 + v49;
  uint64_t v52 = type metadata accessor for Date();
  int v53 = _s7Weather24LocationCompositionStateOwet_0(v50, 1, v52);
  int v54 = _s7Weather24LocationCompositionStateOwet_0(v51, 1, v52);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      uint64_t v46 = v50;
      uint64_t v47 = v52;
LABEL_24:
      _s7Weather24LocationCompositionStateOwst_0(v46, 0, 1, v47);
      return a1;
    }
  }
  else
  {
    uint64_t v55 = *(void *)(v52 - 8);
    if (!v54)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 24))(v50, v51, v52);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v50, v52);
  }
  size_t v37 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v38 = (void *)v50;
  uint64_t v39 = (const void *)v51;
LABEL_14:
  memcpy(v38, v39, v37);
  return a1;
}

unsigned char *sub_1003B0D80(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v7 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  long long v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v13] = a2[v13];
  uint64_t v14 = a3[11];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *uint64_t v15 = a2[v14];
  v15[1] = a2[v14 + 1];
  uint64_t v17 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  int v35 = v7;
  v7(&v15[v17[6]], &v16[v17[6]], v6);
  *(_OWORD *)&v15[v17[7]] = *(_OWORD *)&v16[v17[7]];
  uint64_t v18 = v17[8];
  uint64_t v19 = &v15[v18];
  uint64_t v20 = &v16[v18];
  uint64_t v21 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 3, v21))
  {
    uint64_t v22 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    v35(&v19[*(int *)(v21 + 48)], &v20[*(int *)(v21 + 48)], v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 3, v21);
  }
  v15[v17[9]] = v16[v17[9]];
  uint64_t v23 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(_OWORD *)&a1[v23] = *(_OWORD *)&a2[v23];
  uint64_t v24 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  int v25 = &a1[v24];
  int v26 = &a2[v24];
  uint64_t v27 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    uint64_t v28 = sub_10017DF08(&qword_100E63A10);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    *int v25 = *v26;
    *(_OWORD *)(v25 + 8) = *(_OWORD *)(v26 + 8);
    uint64_t v29 = *(int *)(v27 + 24);
    uint64_t v30 = &v25[v29];
    uint64_t v31 = &v26[v29];
    uint64_t v32 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  return a1;
}

unsigned char *sub_1003B1090(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 40);
  v7(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = (uint64_t *)&a2[v8];
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void *)&a2[v13 + 8];
  *uint64_t v14 = *(void *)&a2[v13];
  v14[1] = v16;
  swift_bridgeObjectRelease();
  void v14[2] = *((void *)v15 + 2);
  swift_bridgeObjectRelease();
  v14[3] = *((void *)v15 + 3);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(_WORD *)&a1[v18] = *(_WORD *)&a2[v18];
  uint64_t v21 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v66 = v6;
  uint64_t v67 = v7;
  v7(&v19[v21[6]], &v20[v21[6]], v6);
  uint64_t v22 = v21[7];
  uint64_t v23 = &v19[v22];
  uint64_t v24 = (uint64_t *)&v20[v22];
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v21[8];
  uint64_t v28 = &v19[v27];
  uint64_t v29 = &v20[v27];
  uint64_t v30 = sub_10017DF08(&qword_100E66460);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 3, v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 3, v30);
  if (v31)
  {
    if (!v32)
    {
      *uint64_t v28 = *v29;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v65 + 32))(&v28[*(int *)(v30 + 48)], &v29[*(int *)(v30 + 48)], v66);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 3, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v32)
  {
    sub_100178110((uint64_t)v28, &qword_100E66460);
LABEL_6:
    uint64_t v33 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v28 = *v29;
  v67(&v28[*(int *)(v30 + 48)], &v29[*(int *)(v30 + 48)], v66);
LABEL_7:
  v19[v21[9]] = v20[v21[9]];
  uint64_t v34 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  int v35 = &a1[v34];
  int v36 = (uint64_t *)&a2[v34];
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *int v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  uint64_t v40 = (uint64_t)&a1[v39];
  uint64_t v41 = (uint64_t)&a2[v39];
  uint64_t v42 = type metadata accessor for ContentStatusBanner();
  int v43 = _s7Weather24LocationCompositionStateOwet_0(v40, 1, v42);
  int v44 = _s7Weather24LocationCompositionStateOwet_0(v41, 1, v42);
  if (v43)
  {
    if (!v44)
    {
      *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
      *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
      uint64_t v45 = *(int *)(v42 + 24);
      uint64_t v46 = (void *)(v40 + v45);
      uint64_t v47 = (const void *)(v41 + v45);
      uint64_t v48 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
      {
        uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
      }
      uint64_t v55 = v40;
      uint64_t v56 = v42;
      goto LABEL_22;
    }
    goto LABEL_13;
  }
  if (v44)
  {
    sub_1003B19F0(v40, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_13:
    size_t v50 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v51 = (void *)v40;
    uint64_t v52 = (const void *)v41;
    goto LABEL_14;
  }
  *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
  int v53 = (void *)(v41 + 8);
  if (*(void *)(v40 + 16) >= 2uLL)
  {
    unint64_t v54 = *(void *)(v41 + 16);
    if (v54 >= 2)
    {
      *(void *)(v40 + 8) = *v53;
      *(void *)(v40 + 16) = v54;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_10027B4D4(v40 + 8);
  }
  *(_OWORD *)(v40 + 8) = *(_OWORD *)v53;
LABEL_25:
  uint64_t v58 = *(int *)(v42 + 24);
  uint64_t v59 = v40 + v58;
  uint64_t v60 = v41 + v58;
  uint64_t v61 = type metadata accessor for Date();
  int v62 = _s7Weather24LocationCompositionStateOwet_0(v59, 1, v61);
  int v63 = _s7Weather24LocationCompositionStateOwet_0(v60, 1, v61);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
      uint64_t v55 = v59;
      uint64_t v56 = v61;
LABEL_22:
      _s7Weather24LocationCompositionStateOwst_0(v55, 0, 1, v56);
      return a1;
    }
  }
  else
  {
    uint64_t v64 = *(void *)(v61 - 8);
    if (!v63)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 40))(v59, v60, v61);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v59, v61);
  }
  size_t v50 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v51 = (void *)v59;
  uint64_t v52 = (const void *)v60;
LABEL_14:
  memcpy(v51, v52, v50);
  return a1;
}

uint64_t sub_1003B1630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B1644);
}

uint64_t sub_1003B1644(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_11:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for WeatherMapPresentationState(0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[11];
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E63A10);
      uint64_t v14 = a3[15];
    }
    uint64_t v9 = a1 + v14;
    goto LABEL_11;
  }
  unint64_t v10 = *(void *)(a1 + a3[5]);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_1003B171C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B1730);
}

void sub_1003B1730(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5]) = (a2 - 1);
      return;
    }
    type metadata accessor for WeatherMapPresentationState(0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[11];
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E63A10);
      uint64_t v14 = a4[15];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for InteractiveMapInput()
{
  uint64_t result = qword_100E715E0;
  if (!qword_100E715E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003B184C()
{
  type metadata accessor for WeatherMapOverlayKind();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WeatherMapPresentationState(319);
    if (v1 <= 0x3F)
    {
      sub_1003B1998();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1003B1998()
{
  if (!qword_100E64EF8)
  {
    type metadata accessor for ContentStatusBanner();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E64EF8);
    }
  }
}

uint64_t sub_1003B19F0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1003B1A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B1AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64988);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B1B14@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  v10._uint64_t countAndFlagsBits = 0xD000000000000030;
  v10._object = (void *)0x8000000100C9D570;
  v3._object = (void *)0x8000000100C9D550;
  v3._uint64_t countAndFlagsBits = 0xD000000000000014;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v10);

  *(Swift::String *)a1 = v5;
  strcpy((char *)(a1 + 16), "location.fill");
  *(_WORD *)(a1 + 30) = -4864;
  *(unsigned char *)(a1 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = type metadata accessor for LocationComponentContainerViewModel();
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a1 + *(int *)(v6 + 28);
  uint64_t v8 = type metadata accessor for LocationComponentAction(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v8);
  *(_WORD *)(a1 + *(int *)(v6 + 24)) = 258;
  return result;
}

_OWORD *initializeBufferWithCopyOfBuffer for NotificationsResubscriptionComponentView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for NotificationsResubscriptionComponentView()
{
  return swift_unknownObjectRelease();
}

void *assignWithCopy for NotificationsResubscriptionComponentView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *assignWithTake for NotificationsResubscriptionComponentView(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t sub_1003B1D24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003B1D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v18 = sub_100BD7708();
  uint64_t v7 = v6;
  uint64_t v8 = sub_100BD7744();
  uint64_t v10 = v9;
  uint64_t v11 = sub_100BD7778();
  uint64_t v13 = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = (uint64_t *)(a3 + *(int *)(type metadata accessor for TipView(0) + 32));
  *uint64_t v16 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  *(void *)(a3 + 32) = 0xD00000000000001ELL;
  *(void *)(a3 + 40) = 0x8000000100C97450;
  *(unsigned char *)(a3 + 48) = 1;
  *(void *)(a3 + 56) = v18;
  *(void *)(a3 + 64) = v7;
  *(void *)(a3 + 72) = v8;
  *(void *)(a3 + 80) = v10;
  *(void *)(a3 + 88) = v11;
  *(void *)(a3 + 96) = v13;
  *(unsigned char *)a3 = 1;
  *(void *)(a3 + 8) = 0x4044000000000000;
  *(void *)(a3 + 16) = 0;
  *(_WORD *)(a3 + 24) = 0;
  *(void *)(a3 + 104) = sub_1003B1EE0;
  *(void *)(a3 + 112) = v14;
  *(void *)(a3 + 120) = sub_1003B1F04;
  *(void *)(a3 + 128) = v15;
  return swift_unknownObjectRetain_n();
}

uint64_t sub_1003B1EA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1003B1D40(*v1, v1[1], a1);
}

uint64_t sub_1003B1EA8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003B1EE0()
{
  return sub_1008CF56C();
}

uint64_t sub_1003B1F04()
{
  return sub_1008CE77C();
}

unint64_t sub_1003B1F34()
{
  unint64_t result = qword_100E716E0;
  if (!qword_100E716E0)
  {
    type metadata accessor for TipView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E716E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SwipeDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003B2058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SwipeDirection()
{
  return &type metadata for SwipeDirection;
}

unint64_t sub_1003B2094()
{
  unint64_t result = qword_100E716E8;
  if (!qword_100E716E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E716E8);
  }
  return result;
}

uint64_t *sub_1003B20E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TimeZone();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[8];
    *(uint64_t *)((char *)v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v18 = (uint64_t *)((char *)v7 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, (uint64_t)v20))
    {
      uint64_t v21 = sub_10017DF08(&qword_100E6B670);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *uint64_t v18 = *v19;
      uint64_t v22 = v20[5];
      uint64_t v23 = (char *)v18 + v22;
      uint64_t v24 = (char *)v19 + v22;
      uint64_t v25 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      *(void *)((char *)v18 + v20[6]) = *(void *)((char *)v19 + v20[6]);
      *(void *)((char *)v18 + v20[7]) = *(void *)((char *)v19 + v20[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, (uint64_t)v20);
    }
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)v7 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = type metadata accessor for Date();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    v30(v27, v28, v29);
    v30((char *)v7 + a3[10], (char *)a2 + a3[10], v29);
    uint64_t v31 = a3[11];
    int v32 = (char *)v7 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = sub_10017DF08(&qword_100E6B7C8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v7;
}

uint64_t sub_1003B23B8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
  {
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(a1 + a2[10], v13);
  uint64_t v15 = a1 + a2[11];
  uint64_t v16 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

char *sub_1003B2594(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TimeZone();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, (uint64_t)v18))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E6B670);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v16 = *(void *)v17;
    uint64_t v20 = v18[5];
    uint64_t v21 = &v16[v20];
    uint64_t v22 = &v17[v20];
    uint64_t v23 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    *(void *)&v16[v18[6]] = *(void *)&v17[v18[6]];
    *(void *)&v16[v18[7]] = *(void *)&v17[v18[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
  }
  uint64_t v24 = a3[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  v28(v25, v26, v27);
  v28(&a1[a3[10]], &a2[a3[10]], v27);
  uint64_t v29 = a3[11];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = sub_10017DF08(&qword_100E6B7C8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

char *sub_1003B2820(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17);
  if (!v18)
  {
    if (!v19)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      uint64_t v35 = v17[5];
      int v36 = &v15[v35];
      uint64_t v37 = &v16[v35];
      uint64_t v38 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
      *(void *)&v15[v17[6]] = *(void *)&v16[v17[6]];
      *(void *)&v15[v17[7]] = *(void *)&v16[v17[7]];
      goto LABEL_7;
    }
    sub_1003B2B44((uint64_t)v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v24 = sub_10017DF08(&qword_100E6B670);
    memcpy(v15, v16, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v20 = v17[5];
  uint64_t v21 = &v15[v20];
  uint64_t v22 = &v16[v20];
  uint64_t v23 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  *(void *)&v15[v17[6]] = *(void *)&v16[v17[6]];
  *(void *)&v15[v17[7]] = *(void *)&v16[v17[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
LABEL_7:
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24);
  v29(v26, v27, v28);
  v29(&a1[a3[10]], &a2[a3[10]], v28);
  uint64_t v30 = a3[11];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_10017DF08(&qword_100E6B7C8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

uint64_t sub_1003B2B44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1003B2BA0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E6B670);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v15 = *(void *)v16;
    uint64_t v19 = v17[5];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = &v16[v19];
    uint64_t v22 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *(void *)&v15[v17[6]] = *(void *)&v16[v17[6]];
    *(void *)&v15[v17[7]] = *(void *)&v16[v17[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  v27(&a1[a3[10]], &a2[a3[10]], v26);
  uint64_t v28 = a3[11];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = sub_10017DF08(&qword_100E6B7C8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

char *sub_1003B2E10(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17);
  if (!v18)
  {
    if (!v19)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      uint64_t v35 = v17[5];
      int v36 = &v15[v35];
      uint64_t v37 = &v16[v35];
      uint64_t v38 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
      *(void *)&v15[v17[6]] = *(void *)&v16[v17[6]];
      *(void *)&v15[v17[7]] = *(void *)&v16[v17[7]];
      goto LABEL_7;
    }
    sub_1003B2B44((uint64_t)v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v24 = sub_10017DF08(&qword_100E6B670);
    memcpy(v15, v16, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v20 = v17[5];
  uint64_t v21 = &v15[v20];
  uint64_t v22 = &v16[v20];
  uint64_t v23 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  *(void *)&v15[v17[6]] = *(void *)&v16[v17[6]];
  *(void *)&v15[v17[7]] = *(void *)&v16[v17[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
LABEL_7:
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v29(&a1[a3[10]], &a2[a3[10]], v28);
  uint64_t v30 = a3[11];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_10017DF08(&qword_100E6B7C8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t sub_1003B3124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B3138);
}

uint64_t sub_1003B3138(uint64_t *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for TimeZone();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      type metadata accessor for Locale();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[6];
      }
      else
      {
        sub_10017DF08(&qword_100E6B670);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[8];
        }
        else
        {
          type metadata accessor for Date();
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a2)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a3[9];
          }
          else
          {
            uint64_t v10 = sub_10017DF08(&qword_100E6B7C8);
            uint64_t v11 = a3[11];
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v11, a2, v10);
  }
}

uint64_t sub_1003B3258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B326C);
}

void *sub_1003B326C(void *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    type metadata accessor for TimeZone();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      type metadata accessor for Locale();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }
      else
      {
        sub_10017DF08(&qword_100E6B670);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[8];
        }
        else
        {
          type metadata accessor for Date();
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a3)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a4[9];
          }
          else
          {
            uint64_t v10 = sub_10017DF08(&qword_100E6B7C8);
            uint64_t v11 = a4[11];
          }
        }
      }
    }
    return (void *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for TemperatureAveragesHeroChartInput()
{
  uint64_t result = qword_100E71748;
  if (!qword_100E71748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003B33D0()
{
  type metadata accessor for TimeZone();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Locale();
    if (v1 <= 0x3F)
    {
      sub_1003B35C0(319, (unint64_t *)&qword_100E6F978, type metadata accessor for DetailHeroChartLollipopPosition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Date();
        if (v3 <= 0x3F)
        {
          sub_1003B35C0(319, (unint64_t *)&unk_100E71758, (uint64_t (*)(uint64_t))sub_1001433AC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Trend);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1003B35C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1003B3624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = (double *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10017DF08(&qword_100E6F9B8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E6B670);
  uint64_t v14 = sub_100109308(v13);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (double *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v35 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v35 - v21;
  sub_100BD9E48();
  if ((v23 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v24 = type metadata accessor for TemperatureAveragesHeroChartInput();
  if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
    goto LABEL_24;
  }
  if ((static Locale.== infix(_:_:)() & 1) == 0) {
    goto LABEL_24;
  }
  sub_100BDD1FC();
  if ((v25 & 1) == 0) {
    goto LABEL_24;
  }
  sub_1002F8E04(a1 + *(int *)(v24 + 32), (uint64_t)v22);
  sub_1002F8E04(a2 + *(int *)(v24 + 32), (uint64_t)v20);
  uint64_t v26 = v12 + *(int *)(v8 + 48);
  sub_1002F8E04((uint64_t)v22, v12);
  sub_1002F8E04((uint64_t)v20, v26);
  sub_1001630A0(v12);
  if (v28)
  {
    sub_1001781AC((uint64_t)v20, &qword_100E6B670);
    sub_1001781AC((uint64_t)v22, &qword_100E6B670);
    sub_1001630A0(v26);
    if (v28)
    {
      sub_1001781AC(v12, &qword_100E6B670);
      goto LABEL_10;
    }
    goto LABEL_16;
  }
  sub_1002F8E04(v12, (uint64_t)v17);
  sub_1001630A0(v26);
  if (v28)
  {
    sub_1001781AC((uint64_t)v20, &qword_100E6B670);
    sub_1001781AC((uint64_t)v22, &qword_100E6B670);
    sub_1003B2B44((uint64_t)v17);
LABEL_16:
    uint64_t v29 = &qword_100E6F9B8;
    uint64_t v30 = v12;
LABEL_23:
    sub_1001781AC(v30, v29);
LABEL_24:
    char v27 = 0;
    return v27 & 1;
  }
  sub_100381D24(v26, (uint64_t)v7);
  if (*v17 != *v7
    || (static Date.== infix(_:_:)() & 1) == 0
    || *(double *)((char *)v17 + *(int *)(v4 + 24)) != *(double *)((char *)v7 + *(int *)(v4 + 24)))
  {
    sub_1003B2B44((uint64_t)v7);
    sub_1001781AC((uint64_t)v20, &qword_100E6B670);
    sub_1001781AC((uint64_t)v22, &qword_100E6B670);
    sub_1003B2B44((uint64_t)v17);
    uint64_t v30 = v12;
    uint64_t v29 = &qword_100E6B670;
    goto LABEL_23;
  }
  uint64_t v31 = *(int *)(v4 + 28);
  double v32 = *(double *)((char *)v17 + v31);
  double v33 = *(double *)((char *)v7 + v31);
  sub_1003B2B44((uint64_t)v7);
  sub_1001781AC((uint64_t)v20, &qword_100E6B670);
  sub_1001781AC((uint64_t)v22, &qword_100E6B670);
  sub_1003B2B44((uint64_t)v17);
  sub_1001781AC(v12, &qword_100E6B670);
  if (v32 != v33) {
    goto LABEL_24;
  }
LABEL_10:
  if ((static Date.== infix(_:_:)() & 1) == 0 || (static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_24;
  }
  sub_1001433AC();
  char v27 = static Trend.== infix(_:_:)();
  return v27 & 1;
}

uint64_t sub_1003B39DC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v139 = a6;
  uint64_t v143 = a5;
  uint64_t v147 = a3;
  uint64_t v166 = a2;
  uint64_t v167 = a1;
  uint64_t v162 = a7;
  uint64_t v156 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v155 = v9;
  __chkstk_darwin(v10);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v11);
  uint64_t v142 = (char *)&v131 - v12;
  uint64_t v141 = type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v140 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100109338((uint64_t)&v131 - v16);
  uint64_t v17 = sub_10017DF08(&qword_100E6B670);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v153 = v19;
  uint64_t v152 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v151 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  sub_100109338(v22);
  uint64_t v146 = sub_10017DF08(&qword_100E717A0);
  sub_100179C0C();
  uint64_t v145 = v23;
  __chkstk_darwin(v24);
  sub_100109314();
  sub_100109338(v25);
  uint64_t v26 = sub_10017DF08(&qword_100E717A8);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  sub_100109338(v28);
  sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v164 = v30;
  uint64_t v165 = v29;
  __chkstk_darwin(v29);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100179C90();
  uint64_t v33 = __chkstk_darwin(v32);
  id v163 = (char *)&v131 - v34;
  __chkstk_darwin(v33);
  int v36 = (char *)&v131 - v35;
  uint64_t v37 = type metadata accessor for TimeState();
  uint64_t v38 = sub_100109308(v37);
  __chkstk_darwin(v38);
  sub_100166B4C();
  uint64_t v39 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v168 = v40;
  __chkstk_darwin(v41);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v42);
  sub_100179C90();
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v131 - v45;
  __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v131 - v47;
  uint64_t v49 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v51 = v50;
  __chkstk_darwin(v52);
  sub_1001626E0();
  uint64_t v55 = v54 - v53;
  uint64_t v160 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v159 = v56;
  __chkstk_darwin(v57);
  sub_1001626E0();
  uint64_t v60 = v59 - v58;
  uint64_t v157 = a4;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v134 = v51;
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  uint64_t v148 = v55;
  uint64_t v135 = v49;
  v61(v55, v49);
  sub_1002168DC(v167 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v7);
  int v62 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 32);
  uint64_t v161 = v39;
  uint64_t v133 = v168 + 32;
  uint64_t v132 = v62;
  v62(v48, v7, v39);
  Date.wc_addDays(_:calendar:)();
  type metadata accessor for WeatherData(0);
  WeatherDataModel.hourlyForecast.getter();
  uint64_t v172 = v60;
  uint64_t v173 = v48;
  uint64_t v166 = v48;
  sub_100A96A24((uint64_t)sub_1003B5068, (uint64_t)v171, v63, v64, v65, v66, v67, v68, v131, (uint64_t)v132);
  uint64_t v154 = v69;
  LOBYTE(v55) = v70;
  uint64_t v72 = v164 + 8;
  uint64_t v71 = (void (*)(char *, uint64_t))*((void *)v164 + 1);
  v71(v36, v165);
  unint64_t v73 = v72;
  WeatherDataModel.hourlyForecast.getter();
  uint64_t v158 = v60;
  v170[0] = v60;
  v170[1] = v46;
  uint64_t v164 = v46;
  sub_100A96A24((uint64_t)sub_1003B501C, (uint64_t)v169, v74, v75, v76, v77, v78, v79, v131, (uint64_t)v132);
  uint64_t v81 = v80;
  LOBYTE(v72) = v55 | v82;
  uint64_t v83 = sub_100127C2C();
  ((void (*)(uint64_t))v71)(v83);
  if (v72) {
    goto LABEL_11;
  }
  uint64_t v84 = v154 - 1;
  if (__OFSUB__(v154, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v84 < 0)
  {
LABEL_11:
    if (qword_100E62808 != -1) {
      swift_once();
    }
    uint64_t v114 = type metadata accessor for Logger();
    sub_1002102B0(v114, (uint64_t)qword_100F51F20);
    sub_1001633E8();
    uint64_t v116 = &v176;
    goto LABEL_14;
  }
  uint64_t v85 = v81 + 1;
  if (__OFADD__(v81, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  WeatherDataModel.hourlyForecast.getter();
  sub_1001AEBF8();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v86 = dispatch thunk of Collection.distance(from:to:)();
  sub_10017CA60();
  ((void (*)(void))v71)();
  if (v85 >= v86) {
    goto LABEL_11;
  }
  if (__OFSUB__(v81, v154))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v81 - v154 < 13) {
    goto LABEL_11;
  }
  WeatherDataModel.hourlyForecast.getter();
  if (v85 >= v84)
  {
    uint64_t v87 = v144;
    sub_100127C2C();
    sub_1003B4820();
    sub_10017CA60();
    ((void (*)(void))v71)();
    uint64_t v88 = (char *)sub_100903A3C(v87);
    sub_1001781AC(v87, &qword_100E717A8);
    WeatherStatisticsModel.hourlyTemperatureStatistics.getter();
    uint64_t v89 = HourlyWeatherStatistics.hours.getter();
    uint64_t v90 = sub_100127C2C();
    v91(v90);
    uint64_t v92 = sub_1003B48A8(v89, (uint64_t)v88);
    swift_bridgeObjectRelease();
    id v163 = v88;
    if (*((void *)v88 + 2) == *(void *)(v92 + 16))
    {
      Location.timeZone.getter();
      uint64_t v93 = v167 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess();
      uint64_t v94 = type metadata accessor for EnvironmentState();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 16))(v150, v93 + *(int *)(v94 + 28), v152);
      sub_1002F8E04(v139, v153);
      WeatherDataModel.hourlyForecast.getter();
      uint64_t v95 = v137;
      Forecast.subscript.getter();
      sub_10017CA60();
      ((void (*)(void))v71)();
      HourWeather.date.getter();
      uint64_t v167 = v92;
      uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
      uint64_t v97 = v95;
      uint64_t v98 = v141;
      v96(v97, v141);
      WeatherDataModel.hourlyForecast.getter();
      uint64_t v99 = v138;
      Forecast.subscript.getter();
      uint64_t v100 = sub_100127C2C();
      ((void (*)(uint64_t))v71)(v100);
      uint64_t v101 = v136;
      HourWeather.date.getter();
      v96(v99, v98);
      uint64_t v102 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
      uint64_t v103 = v162;
      uint64_t v104 = &v162[v102[11]];
      sub_10017DF08(&qword_100E6B7C8);
      sub_100162E4C();
      (*(void (**)(char *, uint64_t))(v105 + 16))(v104, v143);
      *(void *)uint64_t v103 = v163;
      (*(void (**)(char *, uint64_t, uint64_t))(v134 + 32))(&v103[v102[5]], v148, v135);
      (*(void (**)(char *, uint64_t, uint64_t))(v151 + 32))(&v103[v102[6]], v150, v152);
      *(void *)&v103[v102[7]] = v167;
      sub_100381E20(v153, (uint64_t)&v103[v102[8]]);
      uint64_t v106 = v161;
      uint64_t v107 = v132;
      v132(&v103[v102[9]], v149, v161);
      v107(&v103[v102[10]], v101, v106);
      uint64_t v108 = *(void (**)(char *, uint64_t))(v168 + 8);
      v108(v164, v106);
      v108(v166, v106);
      uint64_t v109 = sub_1001A06A4();
      v110(v109);
      uint64_t v111 = (uint64_t)v103;
      uint64_t v112 = 0;
      uint64_t v113 = (uint64_t)v102;
      return _s7Weather24LocationCompositionStateOwst_0(v111, v112, 1, v113);
    }
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_100E62808 == -1) {
      goto LABEL_20;
    }
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  swift_once();
LABEL_20:
  uint64_t v130 = type metadata accessor for Logger();
  sub_1002102B0(v130, (uint64_t)qword_100F51F20);
  sub_1001633E8();
  uint64_t v116 = v170;
LABEL_14:
  uint64_t v117 = *(v116 - 32);
  uint64_t v118 = v156;
  v115(v117, v157, v156);
  uint64_t v119 = Logger.logObject.getter();
  os_log_type_t v120 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v119, v120))
  {
    uint64_t v121 = swift_slowAlloc();
    uint64_t v174 = swift_slowAlloc();
    *(_DWORD *)uint64_t v121 = 141558275;
    uint64_t v175 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v121 + 12) = 2081;
    sub_1002FF134();
    uint64_t v122 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v175 = sub_10016414C(v122, v123, &v174);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10017CA60();
    v124();
    _os_log_impl((void *)&_mh_execute_header, v119, v120, "Not enough hourly data to create create detail chart; location=%{private,mask.hash}s",
      (uint8_t *)v121,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*((void (**)(uint64_t, uint64_t))v73 + 1))(v117, v118);
  }

  uint64_t v125 = *(void (**)(char *, uint64_t))(v168 + 8);
  uint64_t v126 = v161;
  v125(v164, v161);
  v125(v166, v126);
  uint64_t v127 = sub_1001A06A4();
  v128(v127);
  uint64_t v113 = type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v111 = (uint64_t)v162;
  uint64_t v112 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v111, v112, 1, v113);
}

uint64_t sub_1003B46CC()
{
  uint64_t v1 = type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100166B4C();
  uint64_t v5 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  HourWeather.date.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, enum case for Calendar.Component.day(_:), v1);
  char v12 = Calendar.isDate(_:equalTo:toGranularity:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  return v12 & 1;
}

uint64_t sub_1003B4820()
{
  return dispatch thunk of Collection.subscript.getter();
}

uint64_t sub_1003B48A8(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = type metadata accessor for HourTemperatureStatistics();
  uint64_t v4 = *(void *)(v65 - 8);
  uint64_t v5 = __chkstk_darwin(v65);
  uint64_t v66 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v64 = (char *)&v51 - v7;
  uint64_t v8 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TimeZone();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Calendar();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v59 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v51 = v10;
    uint64_t v52 = v12;
    uint64_t v54 = v11;
    uint64_t v55 = v15;
    uint64_t v56 = v14;
    uint64_t v57 = a2;
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    uint64_t v18 = v4 + 16;
    uint64_t v20 = (char *)(a1 + ((*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64)));
    uint64_t v21 = *(void *)(v18 + 56);
    uint64_t v60 = (void (**)(unint64_t, char *, uint64_t))(v18 + 24);
    uint64_t v61 = (void (**)(unint64_t, char *, uint64_t))(v18 + 16);
    int v62 = (void (**)(char *, uint64_t))(v18 - 8);
    uint64_t v63 = v19;
    uint64_t v53 = a1;
    swift_bridgeObjectRetain();
    uint64_t v22 = &_swiftEmptyDictionarySingleton;
    uint64_t v23 = v18;
    uint64_t v24 = v64;
    uint64_t v25 = v65;
    while (1)
    {
      uint64_t v26 = v63;
      v63(v24, v20, v25);
      uint64_t v27 = HourTemperatureStatistics.hour.getter();
      uint64_t v28 = v23;
      v26(v66, v24, v25);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v67 = v22;
      unint64_t v30 = sub_1002109DC(v27);
      uint64_t v32 = v22[2];
      BOOL v33 = (v31 & 1) == 0;
      Swift::Int v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        break;
      }
      unint64_t v35 = v30;
      char v36 = v31;
      sub_10017DF08(&qword_100E717B0);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v34))
      {
        unint64_t v37 = sub_1002109DC(v27);
        if ((v36 & 1) != (v38 & 1)) {
          goto LABEL_19;
        }
        unint64_t v35 = v37;
      }
      uint64_t v39 = v67;
      if (v36)
      {
        unint64_t v40 = v67[7] + v35 * v21;
        uint64_t v25 = v65;
        (*v60)(v40, v66, v65);
      }
      else
      {
        v67[(v35 >> 6) + 8] |= 1 << v35;
        *(void *)(v39[6] + 8 * v35) = v27;
        unint64_t v41 = v39[7] + v35 * v21;
        uint64_t v25 = v65;
        (*v61)(v41, v66, v65);
        uint64_t v42 = v39[2];
        BOOL v43 = __OFADD__(v42, 1);
        uint64_t v44 = v42 + 1;
        if (v43) {
          goto LABEL_17;
        }
        v39[2] = v44;
      }
      uint64_t v22 = v67;
      swift_bridgeObjectRelease();
      uint64_t v24 = v64;
      (*v62)(v64, v25);
      v20 += v21;
      --v17;
      uint64_t v23 = v28;
      if (!v17)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = v56;
        uint64_t v11 = v54;
        uint64_t v15 = v55;
        uint64_t v10 = v51;
        uint64_t v12 = v52;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    uint64_t v22 = &_swiftEmptyDictionarySingleton;
LABEL_14:
    TimeZone.init(secondsFromGMT:)();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) != 1)
    {
      uint64_t v45 = v58;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v58, v10, v11);
      uint64_t v46 = v59;
      static Calendar.gregorianCalendar(with:)();
      uint64_t v47 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v45, v11);
      __chkstk_darwin(v47);
      *(&v51 - 2) = v46;
      *(&v51 - 1) = (char *)v22;
      sub_1008873D8();
      uint64_t v49 = v48;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v46, v14);
      swift_bridgeObjectRelease();
      return v49;
    }
  }
  __break(1u);
LABEL_19:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003B4DD0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v20 = a1;
  uint64_t v21 = a3;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Calendar.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  v13((char *)&v18 - v11, enum case for Calendar.Component.hour(_:), v6);
  v13(v10, enum case for Calendar.Component.year(_:), v6);
  HourWeather.date.getter();
  Calendar.ordinality(of:in:for:)();
  LOBYTE(v13) = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v12, v6);
  if ((v13 & 1) == 0) {
    return sub_100A0389C();
  }
  uint64_t v17 = type metadata accessor for HourTemperatureStatistics();
  return _s7Weather24LocationCompositionStateOwst_0(v21, 1, 1, v17);
}

uint64_t sub_1003B501C()
{
  return sub_1003B46CC() & 1;
}

uint64_t sub_1003B503C@<X0>(uint64_t a1@<X8>)
{
  return sub_1003B4DD0(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for TemperatureAveragesHeroChartInputFactory()
{
  return &type metadata for TemperatureAveragesHeroChartInputFactory;
}

uint64_t sub_1003B5068()
{
  return sub_1003B501C() & 1;
}

ValueMetadata *type metadata accessor for NotificationsResubscriptionListTip()
{
  return &type metadata for NotificationsResubscriptionListTip;
}

uint64_t sub_1003B5094()
{
  return Text.init<A>(_:)();
}

uint64_t sub_1003B50D4()
{
  return Text.init<A>(_:)();
}

uint64_t sub_1003B5114()
{
  return Image.init(_:bundle:)();
}

void *sub_1003B5134()
{
  uint64_t v1 = type metadata accessor for Tips.Action();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_10011BFD8();
  Tips.Action.init(id:perform:_:)();
  sub_10017DF08(&qword_100E65410);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v4 + v3, v0, v1);
  uint64_t v5 = sub_1003B5BD4(v4);
  swift_setDeallocating();
  sub_1006BB0D4();
  return v5;
}

uint64_t sub_1003B52A8()
{
  uint64_t v0 = type metadata accessor for Font.TextStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[2] = sub_100BD7778();
  v12[3] = v4;
  sub_10014A85C();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.body(_:), v0);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v10 = Text.font(_:)();
  swift_release();
  sub_100191924(v5, v7, v9);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1003B543C()
{
  sub_10017DF08(&qword_100E653D0);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100109314();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v2 = type metadata accessor for Tips.IgnoresDisplayFrequency();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100E653E0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for Tips.MaxDisplayCount();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  Tips.IgnoresDisplayFrequency.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)();
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  sub_100162F0C();
  v19();
  sub_100162F0C();
  v20();
  sub_100162F0C();
  v21();
  sub_100162F0C();
  v22();
  return v18;
}

uint64_t sub_1003B5814()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v0, qword_100F513E8);
  sub_1002102B0(v0, (uint64_t)qword_100F513E8);
  sub_10017DF08(&qword_100E65408);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1003B5954()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10011BFD8();
  uint64_t v5 = type metadata accessor for Tips.Rule();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  if (qword_100E622B8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1002102B0(v1, (uint64_t)qword_100F513E8);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v12, v1);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  uint64_t v13 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1003B5B08()
{
  return sub_1003B5094();
}

uint64_t sub_1003B5B40@<X0>(uint64_t *a1@<X8>)
{
  sub_10023ABB4();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1003B5B84()
{
  unint64_t result = qword_100E717B8;
  if (!qword_100E717B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E717B8);
  }
  return result;
}

void *sub_1003B5BD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Tips.Action();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = (char *)(v7 - v6);
  uint64_t v44 = sub_10017DF08(&qword_100E717C0);
  __chkstk_darwin(v44);
  BOOL v43 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v42 = (uint64_t *)((char *)&v34 - v11);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v45 = _swiftEmptyArrayStorage;
  sub_1003B5EA4(0, 0, 0);
  uint64_t v15 = v45;
  uint64_t v16 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  uint64_t v34 = a1;
  if (v16)
  {
    uint64_t v17 = 0;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v18 = v4 + 16;
    uint64_t v20 = *(void *)(v18 + 56);
    unint64_t v37 = (*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64);
    char v38 = v19;
    uint64_t v21 = a1 + v37;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v39 = v18;
    uint64_t v40 = v2;
    unint64_t v35 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    uint64_t v36 = v20;
    do
    {
      uint64_t v23 = v44;
      uint64_t v24 = &v43[*(int *)(v44 + 48)];
      v38(v24, v21, v2);
      uint64_t v25 = v22;
      uint64_t v26 = (uint64_t)v42;
      uint64_t v27 = (char *)v42 + *(int *)(v23 + 48);
      void *v42 = v17;
      uint64_t v28 = *v25;
      (*v25)(v27, v24, v2);
      sub_1003B5EC4(v26, (uint64_t)v14);
      Tips.Action.with(index:)();
      sub_1003B5F2C((uint64_t)v14);
      uint64_t v15 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1003B5EA4(0, v15[2] + 1, 1);
        uint64_t v15 = v45;
      }
      unint64_t v30 = v15[2];
      unint64_t v29 = v15[3];
      if (v30 >= v29 >> 1)
      {
        sub_1003B5EA4(v29 > 1, v30 + 1, 1);
        uint64_t v15 = v45;
      }
      ++v17;
      v15[2] = v30 + 1;
      uint64_t v31 = v36;
      unint64_t v32 = (unint64_t)v15 + v37 + v30 * v36;
      uint64_t v2 = v40;
      uint64_t v22 = v35;
      v28((char *)v32, v8, v40);
      uint64_t v45 = v15;
      v21 += v31;
    }
    while (v41 != v17);
  }
  swift_bridgeObjectRelease();
  return v15;
}

size_t sub_1003B5EA4(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1003B5F8C(a1, a2, a3, *v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1003B5EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E717C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B5F2C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E717C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

size_t sub_1003B5F8C(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10017DF08(&qword_100E65410);
  uint64_t v10 = *(void *)(type metadata accessor for Tips.Action() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_24;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Tips.Action() - 8);
  if (v5)
  {
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    sub_1003B613C(a4 + v16, v8, (unint64_t)v13 + v16);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_1003B613C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 < a1
    || (uint64_t result = type metadata accessor for Tips.Action(), a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    type metadata accessor for Tips.Action();
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

void sub_1003B6210(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for WeatherDataAction();
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = type metadata accessor for MainAction();
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v49 = v5;
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v19 = *(void *)(v13 + 72);
    swift_bridgeObjectRetain();
    uint64_t v48 = (char *)&type metadata for () + 8;
    do
    {
      sub_1001664A0(v18, (uint64_t)v15, (void (*)(void))type metadata accessor for MainAction);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 0xAu:
        case 0xBu:
        case 0xDu:
        case 0xEu:
        case 0x11u:
          uint64_t v20 = (void (*)(void))type metadata accessor for MainAction;
          uint64_t v21 = (uint64_t)v15;
LABEL_5:
          sub_100176928(v21, v20);
          break;
        case 9u:
          sub_1003B6A68((uint64_t)v15, (uint64_t)v11);
          sub_1001664A0((uint64_t)v11, (uint64_t)v8, (void (*)(void))type metadata accessor for WeatherDataAction);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
              uint64_t v42 = v16;
              long long v46 = *(_OWORD *)v8;
              uint64_t v22 = v1;
              uint64_t v23 = *((void *)v8 + 2);
              uint64_t ObjectType = *((void *)v8 + 3);
              uint64_t v45 = v23;
              swift_bridgeObjectRelease();
              uint64_t v24 = type metadata accessor for TaskPriority();
              uint64_t v25 = (uint64_t)v49;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 1, 1, v24);
              uint64_t v26 = swift_allocObject();
              *(void *)(v26 + 16) = 0;
              BOOL v43 = (uint64_t *)(v26 + 16);
              *(void *)(v26 + 24) = 0;
              *(void *)(v26 + 32) = v22;
              *(_OWORD *)(v26 + 40) = v46;
              uint64_t v47 = (char *)v26;
              uint64_t v27 = ObjectType;
              *(void *)(v26 + 56) = v45;
              *(void *)(v26 + 64) = v27;
              uint64_t v45 = v24;
              LODWORD(v24) = _s7Weather24LocationCompositionStateOwet_0(v25, 1, v24);
              *(void *)&long long v46 = v22;
              swift_retain();
              if (v24 == 1)
              {
                sub_1003B6C00((uint64_t)v49);
                uint64_t v28 = 0;
              }
              else
              {
                uint64_t v35 = (uint64_t)v49;
                unsigned __int8 v36 = TaskPriority.rawValue.getter();
                (*(void (**)(uint64_t))(*(void *)(v45 - 8) + 8))(v35);
                uint64_t v28 = v36;
              }
              uint64_t v16 = v42;
              uint64_t v37 = *v43;
              uint64_t v45 = v28;
              if (v37)
              {
                uint64_t ObjectType = swift_getObjectType();
                swift_unknownObjectRetain();
                uint64_t v38 = dispatch thunk of Actor.unownedExecutor.getter();
                uint64_t ObjectType = v39;
                swift_unknownObjectRelease();
              }
              else
              {
                uint64_t v38 = 0;
                uint64_t ObjectType = 0;
              }
              uint64_t v1 = v46;
              uint64_t v40 = swift_allocObject();
              uint64_t v41 = v47;
              *(void *)(v40 + 16) = &unk_100E71870;
              *(void *)(v40 + 24) = v41;
              if (ObjectType | v38)
              {
                uint64_t v51 = 0;
                uint64_t v52 = 0;
                uint64_t v53 = v38;
                uint64_t v54 = ObjectType;
              }
              swift_task_create();
              swift_release();
              uint64_t v20 = (void (*)(void))type metadata accessor for WeatherDataAction;
              uint64_t v21 = (uint64_t)v11;
              goto LABEL_5;
            case 3u:
            case 9u:
              sub_100176928((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              goto LABEL_10;
            case 4u:
              sub_100176928((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              unint64_t v29 = (int *)sub_10017DF08(&qword_100E6BBC0);
              uint64_t v47 = &v8[v29[12]];
              uint64_t v30 = v1;
              uint64_t v31 = &v8[v29[16]];
              sub_100176928((uint64_t)&v8[v29[20]], (void (*)(void))type metadata accessor for NewsDataModel);
              uint64_t v32 = (uint64_t)v31;
              uint64_t v1 = v30;
              sub_100176928(v32, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
              uint64_t v20 = (void (*)(void))type metadata accessor for WeatherData;
              uint64_t v21 = (uint64_t)v47;
              goto LABEL_5;
            case 5u:
              sub_100176928((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              uint64_t v21 = (uint64_t)&v8[*(int *)(sub_10017DF08(&qword_100E6BBB0) + 48)];
              uint64_t v20 = (void (*)(void))type metadata accessor for NewsDataModel;
              goto LABEL_5;
            case 6u:
              sub_100176928((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              BOOL v33 = &v8[*(int *)(sub_10017DF08(&qword_100E6BBB8) + 48)];
              type metadata accessor for AvailableDataSets();
              break;
            case 8u:
              sub_100176928((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              BOOL v33 = &v8[*(int *)(sub_10017DF08(&qword_100E6BBA8) + 48)];
              type metadata accessor for WeatherStatisticsModel();
              break;
            default:
              sub_100176928((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherDataAction);
              goto LABEL_10;
          }
          sub_100162E4C();
          (*(void (**)(char *))(v34 + 8))(v33);
          break;
        case 0x10u:
LABEL_10:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      v18 += v19;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003B6904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return _swift_task_switch(sub_1003B692C, 0, 0);
}

uint64_t sub_1003B692C()
{
  v0[7] = *(void *)(v0[2] + 16);
  type metadata accessor for MainActor();
  swift_retain();
  v0[8] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003B69D4, v2, v1);
}

uint64_t sub_1003B69D4()
{
  uint64_t v2 = v0[5];
  unint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  swift_release();
  sub_10090C380(v4, v3, v2, v1);
  swift_release();
  char v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1003B6A68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherDataAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003B6ACC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64) >= 0xEuLL) {
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_1003B6B24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10004A90C;
  return sub_1003B6904(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1003B6C00(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E634B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003B6C60()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B6C98()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_sunriseSunsetEventCalculator;
  uint64_t v2 = type metadata accessor for SunriseSunsetEventCalculator();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_viewModelFactory);

  return swift_deallocClassInstance();
}

uint64_t sub_1003B6D48()
{
  return type metadata accessor for SunriseSunsetComponentViewModelFactory();
}

uint64_t sub_1003B6D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (a5 != a6) {
    return 0;
  }
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

void *assignWithCopy for HumidityComponentViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for HumidityComponentViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HumidityComponentViewModel()
{
  return &type metadata for HumidityComponentViewModel;
}

uint64_t sub_1003B6E14(uint64_t a1, uint64_t a2)
{
  return sub_1003B6D50(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a2 + 8), *(void *)(a2 + 16), *(double *)a1, *(double *)a2);
}

uint64_t destroy for ReportWeatherTracker(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 88);
}

uint64_t initializeWithCopy for ReportWeatherTracker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = a2 + 48;
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v8(a1 + 48, v5, v7);
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 88, a2 + 88);
  return a1;
}

void *assignWithCopy for ReportWeatherTracker(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 6, a2 + 6);
  sub_1000C1E18(a1 + 11, a2 + 11);
  return a1;
}

uint64_t assignWithTake for ReportWeatherTracker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportWeatherTracker(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportWeatherTracker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherTracker()
{
  return &type metadata for ReportWeatherTracker;
}

void sub_1003B71B0(uint64_t a1)
{
  uint64_t v212 = a1;
  uint64_t v220 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v219 = v2;
  __chkstk_darwin(v3);
  sub_100109314();
  sub_100109328(v4);
  uint64_t v217 = type metadata accessor for Session.Kind();
  sub_100179C0C();
  uint64_t v216 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  sub_100109338(v7);
  uint64_t v8 = sub_10017DF08(&qword_100E71940);
  uint64_t v9 = sub_100164920(v8);
  uint64_t v225 = v10;
  __chkstk_darwin(v9);
  sub_1001811B8();
  sub_100109338(v11);
  sub_100163400((uint64_t)v255);
  __chkstk_darwin(v12);
  sub_100128F8C();
  sub_100109328(v13);
  uint64_t v251 = type metadata accessor for DescriptionFeedbackData();
  sub_100179C0C();
  uint64_t v250 = v14;
  __chkstk_darwin(v15);
  sub_1001811B8();
  sub_100109338(v16);
  sub_100163400((uint64_t)&v253);
  __chkstk_darwin(v17);
  sub_100128F8C();
  sub_100109328(v18);
  uint64_t v249 = type metadata accessor for OtherConditionsFeedbackData();
  sub_100179C0C();
  uint64_t v248 = v19;
  __chkstk_darwin(v20);
  sub_1001811B8();
  sub_100109338(v21);
  sub_100163400((uint64_t)&v252);
  __chkstk_darwin(v22);
  sub_100128F8C();
  sub_100109338(v23);
  uint64_t v24 = sub_10017DF08(&qword_100E71948);
  uint64_t v25 = sub_100164920(v24);
  uint64_t v221 = v26;
  __chkstk_darwin(v25);
  sub_1001811B8();
  sub_100109338(v27);
  sub_100163400((uint64_t)&v251);
  __chkstk_darwin(v28);
  sub_100128F8C();
  sub_100109328(v29);
  uint64_t v264 = type metadata accessor for WindFeedbackData();
  sub_100179C0C();
  uint64_t v262 = v30;
  __chkstk_darwin(v31);
  sub_1001811B8();
  sub_100109338(v32);
  sub_100163400((uint64_t)v246);
  __chkstk_darwin(v33);
  sub_100128F8C();
  sub_100109328(v34);
  uint64_t v245 = type metadata accessor for TemperatureFeedbackData();
  sub_100179C0C();
  uint64_t v244 = v35;
  __chkstk_darwin(v36);
  sub_1001811B8();
  sub_100109338(v37);
  sub_100163400((uint64_t)&v243);
  __chkstk_darwin(v38);
  sub_100128F8C();
  sub_100109328(v39);
  uint64_t v260 = type metadata accessor for ConditionsFeedbackData();
  sub_100179C0C();
  uint64_t v258 = v40;
  __chkstk_darwin(v41);
  sub_1001811B8();
  sub_100109338(v42);
  sub_100163400((uint64_t)v242);
  __chkstk_darwin(v43);
  sub_100128F8C();
  sub_100109328(v44);
  uint64_t v257 = type metadata accessor for ForecastAgeData();
  sub_100179C0C();
  uint64_t v256 = v45;
  __chkstk_darwin(v46);
  sub_1001811B8();
  sub_100109338(v47);
  sub_100163400((uint64_t)&v241);
  __chkstk_darwin(v48);
  sub_100128F8C();
  sub_100109328(v49);
  uint64_t v234 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v233 = v50;
  __chkstk_darwin(v51);
  sub_100109314();
  sub_100109328(v52);
  uint64_t v268 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v270 = v53;
  __chkstk_darwin(v54);
  sub_10016278C();
  unint64_t v231 = v55 - v56;
  __chkstk_darwin(v57);
  sub_100128F8C();
  sub_100109338(v58);
  uint64_t v59 = sub_10017DF08(&qword_100E71950);
  uint64_t v60 = sub_100109308(v59);
  __chkstk_darwin(v60);
  sub_100109314();
  sub_100109338(v61);
  uint64_t v62 = sub_10017DF08(&qword_100E71958);
  uint64_t v63 = sub_100164920(v62);
  uint64_t v209 = v64;
  __chkstk_darwin(v63);
  sub_1001811B8();
  sub_100109338(v65);
  sub_100163400((uint64_t)v240);
  __chkstk_darwin(v66);
  sub_100128F8C();
  sub_100109328(v67);
  uint64_t v254 = type metadata accessor for LocationData();
  sub_100179C0C();
  uint64_t v241 = v68;
  __chkstk_darwin(v69);
  sub_1001811B8();
  sub_100109338(v70);
  sub_100163400((uint64_t)v238);
  __chkstk_darwin(v71);
  sub_100128F8C();
  sub_100109328(v72);
  unint64_t v229 = type metadata accessor for UserIdentity();
  sub_100179C0C();
  unint64_t v228 = v73;
  __chkstk_darwin(v74);
  sub_100109314();
  sub_100109328(v75);
  uint64_t v253 = type metadata accessor for PrivateUserData();
  sub_100179C0C();
  uint64_t v239 = v76;
  __chkstk_darwin(v77);
  sub_1001811B8();
  sub_100109338(v78);
  sub_100163400((uint64_t)&v237);
  __chkstk_darwin(v79);
  sub_100128F8C();
  uint64_t v81 = sub_100109328(v80);
  uint64_t v226 = type metadata accessor for WeatherData(v81);
  sub_100162E4C();
  __chkstk_darwin(v82);
  sub_100109314();
  sub_100109338(v83);
  uint64_t v84 = sub_10017DF08(&qword_100E63770);
  uint64_t v85 = sub_100109308(v84);
  __chkstk_darwin(v85);
  sub_1001626E0();
  uint64_t v88 = v87 - v86;
  uint64_t v89 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v90);
  sub_10016278C();
  uint64_t v93 = v91 - v92;
  __chkstk_darwin(v94);
  sub_100128F8C();
  sub_100109328(v95);
  uint64_t v273 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v272 = v96;
  __chkstk_darwin(v97);
  sub_100109314();
  sub_100109338(v98);
  uint64_t v99 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v100 = sub_100109308(v99);
  __chkstk_darwin(v100);
  sub_1001626E0();
  uint64_t v103 = v102 - v101;
  uint64_t v104 = type metadata accessor for LocationsState();
  uint64_t v105 = sub_100109308(v104);
  __chkstk_darwin(v105);
  sub_1001626E0();
  uint64_t v108 = v107 - v106;
  uint64_t v109 = type metadata accessor for CurrentLocation();
  sub_100162E4C();
  __chkstk_darwin(v110);
  sub_10016278C();
  uint64_t v113 = v111 - v112;
  __n128 v115 = __chkstk_darwin(v114);
  uint64_t v117 = (char *)v208 - v116;
  uint64_t v274 = v1;
  (*(void (**)(void *__return_ptr, __n128))(v1 + 16))(__dst, v115);
  sub_1001CEBC0(__dst[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v108, (void (*)(void))type metadata accessor for LocationsState);
  swift_release();
  sub_10006DF38(v108, v103, (uint64_t *)&unk_100EADD50);
  sub_1001CED90(v108, (void (*)(void))type metadata accessor for LocationsState);
  if (_s7Weather24LocationCompositionStateOwet_0(v103, 1, v109) != 1)
  {
    sub_1001D1028(v103, (uint64_t)v117, (void (*)(void))&type metadata accessor for CurrentLocation);
    sub_1001CEBC0((uint64_t)v117, v113, (void (*)(void))&type metadata accessor for CurrentLocation);
    uint64_t v118 = v117;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1001CED90((uint64_t)v117, (void (*)(void))&type metadata accessor for CurrentLocation);
      sub_1001CED90(v113, (void (*)(void))&type metadata accessor for CurrentLocation);
      goto LABEL_5;
    }
    uint64_t v124 = v272;
    uint64_t v125 = v271;
    unint64_t v126 = v273;
    sub_1001627D4();
    uint64_t v128 = v127();
    (*(void (**)(void *__return_ptr, uint64_t))(v274 + 16))(__dst, v128);
    uint64_t v129 = *(void *)(__dst[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v130 = Location.id.getter();
    sub_1001BBE9C(v130, v131, v129);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s7Weather24LocationCompositionStateOwet_0(v88, 1, v89) == 1)
    {
      sub_100178110(v88, &qword_100E63770);
      if (qword_100E627E0 != -1) {
        swift_once();
      }
      uint64_t v132 = type metadata accessor for Logger();
      sub_1002102B0(v132, (uint64_t)qword_100F51EB8);
      uint64_t v133 = (void *)Logger.logObject.getter();
      os_log_type_t v134 = static os_log_type_t.error.getter();
      if (sub_10017F230(v134))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        sub_100179C44((void *)&_mh_execute_header, v135, v136, "Failed to submit report weather data, no weather for the current location");
        sub_100185A34();
      }

LABEL_25:
      (*(void (**)(uint64_t, unint64_t))(v124 + 8))(v125, v126);
      uint64_t v202 = (uint64_t)v118;
      goto LABEL_26;
    }
    uint64_t v137 = v88;
    uint64_t v138 = v269;
    sub_1001D1028(v137, (uint64_t)v269, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_1001CEBC0((uint64_t)v138, v93, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v139 = sub_10017DF08(&qword_100E63748);
      uint64_t v140 = v93 + *(int *)(v139 + 48);
      uint64_t v141 = v93 + *(int *)(v139 + 64);
      uint64_t v142 = v252;
      sub_1001D1028(v93, v252, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001CED90(v141, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1001CED90(v140, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v143 = (void *)v274;
      type metadata accessor for ReportWeatherDNUEvent();
      sub_1003BA178(&qword_100E71960, (void (*)(uint64_t))&type metadata accessor for ReportWeatherDNUEvent);
      Tracker.submitDiagnosticEvent<A>(_:onlyIfTimed:completion:)();
      sub_1001B1E64(v143 + 11, v143[14]);
      dispatch thunk of IdentityServiceType.identity.getter();
      UserIdentity.reportWeatherIdentifier.getter();
      sub_10012BF98();
      sub_100162F0C();
      v144();
      PrivateUserData.init(privateUserID:)();
      uint64_t v145 = v143 + 6;
      sub_1001B1E64(v143 + 6, v143[9]);
      sub_10068BF1C();
      uint64_t v146 = v142 + *(int *)(v226 + 24);
      uint64_t v147 = type metadata accessor for WeatherDataModel();
      sub_100162E4C();
      uint64_t v149 = v230;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v148 + 16))(v230, v146, v147);
      _s7Weather24LocationCompositionStateOwst_0(v149, 0, 1, v147);
      sub_100A5BC74(v149, v267);
      unint64_t v150 = v266;
      Date.init()();
      WeatherDataModel.currentWeather.getter();
      unint64_t v126 = v231;
      CurrentWeather.date.getter();
      sub_10012BF98();
      sub_100162F0C();
      v151();
      Date.timeIntervalSince(_:)();
      double v153 = v152;
      uint64_t v154 = v270 + 8;
      uint64_t v138 = *(void (**)(unint64_t, uint64_t))(v270 + 8);
      uint64_t v155 = v268;
      v138(v126, v268);
      v138(v150, v155);
      if ((~*(void *)&v153 & 0x7FF0000000000000) != 0)
      {
        if (v153 > -2147483650.0)
        {
          uint64_t v270 = v154;
          uint64_t v234 = (uint64_t)v138;
          uint64_t v233 = (uint64_t)v118;
          if (v153 >= 2147483650.0)
          {
            __break(1u);
            return;
          }
          ForecastAgeData.init(fetchDate:)();
          uint64_t v156 = v274;
          sub_1001B1E64(v145, *(void *)(v274 + 72));
          uint64_t v157 = v212;
          memcpy(__dst, (const void *)(v212 + 16), 0xC2uLL);
          sub_1002E728C((uint64_t)__dst);
          sub_10068BF88((char *)__dst);
          sub_1002E7344((uint64_t)__dst);
          sub_10019FC44();
          sub_10068C310(*(unsigned char *)(v157 + 232), v146, v259);
          sub_10019FC44();
          sub_10068C55C(*(unsigned __int8 *)(v157 + 256), v146, v261);
          sub_10019FC44();
          sub_10068CA0C(*(unsigned __int8 *)(v157 + 296), v146, v263);
          sub_1001B1E64(v145, *(void *)(v156 + 72));
          uint64_t v158 = swift_bridgeObjectRetain();
          sub_10068CD10(v158);
          swift_bridgeObjectRelease();
          sub_1001B1E64(v145, *(void *)(v156 + 72));
          uint64_t v159 = swift_bridgeObjectRetain();
          sub_10068D4B4(v159);
          swift_bridgeObjectRelease();
          sub_10019FC44();
          sub_10068DEC4(v265);
          uint64_t v160 = *(void *)(*(void *)(v156 + 8) + 32);
          swift_retain();
          uint64_t v232 = v160;
          uint64_t v274 = SessionManager.tracker.getter();
          uint64_t v161 = v216;
          uint64_t v162 = v215;
          uint64_t v163 = v217;
          (*(void (**)(uint64_t, void, uint64_t))(v216 + 104))(v215, enum case for Session.Kind.userEvents(_:), v217);
          UUID.init()();
          UUID.uuidString.getter();
          unint64_t v231 = *(void *)(v219 + 8);
          sub_1001649A8();
          v164();
          Date.init()();
          SessionManager.start(for:identifier:startDate:timestampJitter:)();
          swift_bridgeObjectRelease();
          sub_100162F0C();
          v165();
          (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v162, v163);
          UUID.init()();
          UUID.uuidString.getter();
          sub_1001649A8();
          v166();
          Tracker.enterGroup(groupName:contentType:)();
          swift_bridgeObjectRelease();
          uint64_t v167 = v239;
          sub_1001811CC();
          v168();
          uint64_t v169 = v241;
          sub_1001811CC();
          v170();
          sub_10006DF38(v267, v237, &qword_100E71958);
          uint64_t v171 = v256;
          sub_1001811CC();
          v172();
          uint64_t v173 = v258;
          sub_1001811CC();
          v174();
          uint64_t v175 = v262;
          sub_1001811CC();
          v176();
          uint64_t v177 = v244;
          sub_1001811CC();
          v178();
          sub_10006DF38(v263, v243, &qword_100E71948);
          uint64_t v179 = v248;
          sub_1001811CC();
          v180();
          sub_1001811CC();
          v181();
          sub_10006DF38(v265, v247, &qword_100E71940);
          unint64_t v182 = (*(unsigned __int8 *)(v167 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
          unint64_t v183 = (v208[1] + *(unsigned __int8 *)(v169 + 80) + v182) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80);
          unint64_t v184 = (v208[2] + *(unsigned __int8 *)(v209 + 80) + v183) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80);
          unint64_t v227 = (v210 + *(unsigned __int8 *)(v171 + 80) + v184) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80);
          unint64_t v228 = (v218
                + *(unsigned __int8 *)(v177 + 80)
                + ((v213
                  + *(unsigned __int8 *)(v175 + 80)
                  + ((v211 + *(unsigned __int8 *)(v173 + 80) + v227) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
          unint64_t v229 = (v214 + *(unsigned __int8 *)(v221 + 80) + v228) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80);
          unint64_t v230 = (v223
                + *(unsigned __int8 *)(v250 + 80)
                + ((v222 + *(unsigned __int8 *)(v179 + 80) + v229) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80);
          unint64_t v231 = (v224 + *(unsigned __int8 *)(v225 + 80) + v230) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80);
          uint64_t v185 = swift_allocObject();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v167 + 32))(v185 + v182, v235, v253);
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v169 + 32))(v185 + v183, v236, v254);
          sub_10024D364(v237, v185 + v184, &qword_100E71958);
          sub_1001627D4();
          v186();
          sub_1001627D4();
          v187();
          sub_1001627D4();
          v188();
          sub_1001627D4();
          v189();
          sub_10024D364(v243, v185 + v229, &qword_100E71948);
          sub_1001627D4();
          v190();
          sub_1001627D4();
          v191();
          sub_10024D364(v247, v185 + v231, &qword_100E71940);
          Tracker.transaction(block:)();
          swift_release();
          Date.init()();
          SessionManager.end(endDate:completion:)();
          swift_release();
          swift_release();
          sub_100162F0C();
          v192();
          sub_100178110(v265, &qword_100E71940);
          sub_100162F0C();
          v193();
          sub_1001649A8();
          v194();
          sub_100178110(v263, &qword_100E71948);
          sub_10012BF98();
          sub_100162F0C();
          v195();
          sub_100162F0C();
          v196();
          sub_10012BF98();
          sub_100162F0C();
          v197();
          sub_10012BF98();
          sub_100162F0C();
          v198();
          sub_100178110(v267, &qword_100E71958);
          sub_10012BF98();
          sub_100162F0C();
          v199();
          sub_10012BF98();
          sub_100162F0C();
          v200();
          sub_1001CED90(v252, (void (*)(void))type metadata accessor for WeatherData);
          sub_1001CED90((uint64_t)v269, (void (*)(void))type metadata accessor for LocationWeatherDataState);
          sub_10012BF98();
          sub_100162F0C();
          v201();
          uint64_t v202 = v233;
LABEL_26:
          sub_1001CED90(v202, (void (*)(void))&type metadata accessor for CurrentLocation);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      sub_1001CED90(v93, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      if (qword_100E627E0 == -1)
      {
LABEL_22:
        uint64_t v203 = type metadata accessor for Logger();
        sub_1002102B0(v203, (uint64_t)qword_100F51EB8);
        int v204 = (void *)Logger.logObject.getter();
        os_log_type_t v205 = static os_log_type_t.error.getter();
        if (sub_10017F230(v205))
        {
          *(_WORD *)swift_slowAlloc() = 0;
          sub_100179C44((void *)&_mh_execute_header, v206, v207, "Failed to submit report weather data, no data for the current location's weather");
          sub_100185A34();
        }

        sub_1001CED90((uint64_t)v138, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        goto LABEL_25;
      }
    }
    swift_once();
    goto LABEL_22;
  }
  sub_100178110(v103, (uint64_t *)&unk_100EADD50);
LABEL_5:
  if (qword_100E627E0 != -1) {
    swift_once();
  }
  uint64_t v119 = type metadata accessor for Logger();
  sub_1002102B0(v119, (uint64_t)qword_100F51EB8);
  os_log_type_t v120 = (void *)Logger.logObject.getter();
  os_log_type_t v121 = static os_log_type_t.error.getter();
  if (sub_10017F230(v121))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_100179C44((void *)&_mh_execute_header, v122, v123, "Failed to submit report weather data, no current location");
    sub_100185A34();
  }
}

uint64_t sub_1003B8BC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t v84 = a8;
  uint64_t v82 = a7;
  uint64_t v81 = a6;
  uint64_t v80 = a5;
  uint64_t v79 = a4;
  unint64_t v78 = a3;
  uint64_t v98 = a2;
  uint64_t v88 = a11;
  uint64_t v89 = a12;
  uint64_t v87 = a10;
  uint64_t v85 = a9;
  uint64_t v12 = sub_10017DF08(&qword_100E71940);
  __chkstk_darwin(v12 - 8);
  uint64_t v90 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for WeatherJSONData();
  uint64_t v75 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v74 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E71948);
  __chkstk_darwin(v15 - 8);
  uint64_t v83 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for AQIFeedbackData();
  uint64_t v73 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v72 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E71958);
  __chkstk_darwin(v18 - 8);
  uint64_t v76 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for LocationConditionData();
  uint64_t v71 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v70 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10017DF08(&qword_100E6E1F0);
  uint64_t v21 = type metadata accessor for DataEventTrait();
  uint64_t v100 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = (v23 + 32) & ~v23;
  uint64_t v25 = v24 + *(void *)(v22 + 72);
  uint64_t v26 = v23 | 7;
  uint64_t v27 = swift_allocObject();
  long long v101 = xmmword_100C251B0;
  *(_OWORD *)(v27 + 16) = xmmword_100C251B0;
  uint64_t v28 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104);
  v29(v27 + v24, enum case for DataEventTrait.onlyOnce(_:), v21);
  type metadata accessor for PrivateUserData();
  sub_1003BA178(&qword_100E71968, (void (*)(uint64_t))&type metadata accessor for PrivateUserData);
  unint64_t v92 = (unint64_t)"viewModelFactory";
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v95 = v25;
  uint64_t v30 = (uint64_t)v76;
  uint64_t v99 = v26;
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = v101;
  uint64_t v97 = v24;
  uint64_t v98 = v22 + 104;
  unsigned int v93 = v28;
  uint64_t v94 = v29;
  v29(v31 + v24, v28, v100);
  uint64_t v32 = v77;
  type metadata accessor for LocationData();
  sub_1003BA178(&qword_100E71970, (void (*)(uint64_t))&type metadata accessor for LocationData);
  unint64_t v78 = 0x8000000100C9D6A0;
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  sub_10006DF38(v79, v30, &qword_100E71958);
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v32) == 1)
  {
    sub_100178110(v30, &qword_100E71958);
  }
  else
  {
    uint64_t v33 = v71;
    uint64_t v34 = v70;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v70, v30, v32);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v101;
    v94(v35 + v97, v93, v100);
    sub_1003BA178(&qword_100E719C0, (void (*)(uint64_t))&type metadata accessor for LocationConditionData);
    AccessTracker.push<A>(data:traits:file:line:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  }
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v101;
  uint64_t v37 = v97;
  uint64_t v38 = v93;
  uint64_t v39 = v100;
  v94(v36 + v97, v93, v100);
  type metadata accessor for ForecastAgeData();
  sub_1003BA178(&qword_100E71978, (void (*)(uint64_t))&type metadata accessor for ForecastAgeData);
  unint64_t v40 = v92 | 0x8000000000000000;
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v101;
  uint64_t v42 = v39;
  uint64_t v43 = v94;
  v94(v41 + v37, v38, v42);
  type metadata accessor for ConditionsFeedbackData();
  sub_1003BA178(&qword_100E71980, (void (*)(uint64_t))&type metadata accessor for ConditionsFeedbackData);
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v101;
  uint64_t v45 = v44 + v37;
  uint64_t v46 = v93;
  uint64_t v47 = v100;
  v43(v45, v93, v100);
  type metadata accessor for WindFeedbackData();
  sub_1003BA178(&qword_100E71988, (void (*)(uint64_t))&type metadata accessor for WindFeedbackData);
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v101;
  v43(v48 + v97, v46, v47);
  type metadata accessor for TemperatureFeedbackData();
  sub_1003BA178(&qword_100E71990, (void (*)(uint64_t))&type metadata accessor for TemperatureFeedbackData);
  unint64_t v84 = v40;
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v49 = v83;
  sub_10006DF38(v85, v83, &qword_100E71948);
  uint64_t v50 = v86;
  if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, v86) == 1)
  {
    sub_100178110(v49, &qword_100E71948);
    uint64_t v51 = v93;
    uint64_t v52 = v94;
  }
  else
  {
    uint64_t v53 = v73;
    uint64_t v54 = v94;
    uint64_t v55 = v93;
    uint64_t v56 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v72, v49, v50);
    uint64_t v57 = swift_allocObject();
    *(_OWORD *)(v57 + 16) = v101;
    v54(v57 + v97, v55, v100);
    sub_1003BA178(&qword_100E719B8, (void (*)(uint64_t))&type metadata accessor for AQIFeedbackData);
    AccessTracker.push<A>(data:traits:file:line:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v50);
    uint64_t v51 = v55;
    uint64_t v52 = v54;
  }
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v101;
  uint64_t v59 = v97;
  uint64_t v60 = v100;
  v52(v58 + v97, v51, v100);
  type metadata accessor for OtherConditionsFeedbackData();
  sub_1003BA178(&qword_100E71998, (void (*)(uint64_t))&type metadata accessor for OtherConditionsFeedbackData);
  unint64_t v61 = v92 | 0x8000000000000000;
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = v101;
  v52(v62 + v59, v51, v60);
  type metadata accessor for DescriptionFeedbackData();
  sub_1003BA178(&qword_100E719A0, (void (*)(uint64_t))&type metadata accessor for DescriptionFeedbackData);
  unint64_t v92 = v61;
  AccessTracker.push<A>(data:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v63 = v90;
  sub_10006DF38(v89, v90, &qword_100E71940);
  uint64_t v64 = v91;
  if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v91) == 1)
  {
    sub_100178110(v63, &qword_100E71940);
  }
  else
  {
    uint64_t v65 = v75;
    uint64_t v66 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v74, v63, v64);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = v101;
    v94(v67 + v97, v93, v100);
    sub_1003BA178(&qword_100E719B0, (void (*)(uint64_t))&type metadata accessor for WeatherJSONData);
    AccessTracker.push<A>(data:traits:file:line:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v64);
  }
  type metadata accessor for ReportWeatherEvent();
  memset(v102, 0, sizeof(v102));
  sub_1003BA178(&qword_100E719A8, (void (*)(uint64_t))&type metadata accessor for ReportWeatherEvent);
  swift_retain();
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  swift_release();
  return sub_100178110((uint64_t)v102, &qword_100EAC3D0);
}

uint64_t sub_1003B9974()
{
  type metadata accessor for PrivateUserData();
  sub_100179C0C();
  unint64_t v65 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v69 = type metadata accessor for LocationData();
  sub_100179C0C();
  uint64_t v5 = v4;
  unint64_t v61 = (v65 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_10017DF08(&qword_100E71958);
  sub_100164920(v8);
  unint64_t v58 = (v61 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  type metadata accessor for ForecastAgeData();
  sub_100179C0C();
  unint64_t v13 = (v58 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v68 = type metadata accessor for ConditionsFeedbackData();
  sub_100179C0C();
  uint64_t v17 = v16;
  unint64_t v18 = (v13 + v15 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v67 = type metadata accessor for WindFeedbackData();
  sub_100179C0C();
  uint64_t v22 = v21;
  unint64_t v66 = v18;
  unint64_t v23 = (v18 + v20 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v25 = *(void *)(v24 + 64);
  unint64_t v62 = v23;
  uint64_t v63 = type metadata accessor for TemperatureFeedbackData();
  sub_100179C0C();
  uint64_t v27 = v26;
  unint64_t v28 = (v23 + v25 + *(unsigned __int8 *)(v26 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v31 = sub_10017DF08(&qword_100E71948);
  sub_100164920(v31);
  unint64_t v59 = v28;
  unint64_t v33 = (v28 + v30 + *(unsigned __int8 *)(v32 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = *(void *)(v34 + 64);
  uint64_t v64 = type metadata accessor for OtherConditionsFeedbackData();
  sub_100179C0C();
  uint64_t v37 = v36;
  unint64_t v57 = v33;
  unint64_t v38 = (v33 + v35 + *(unsigned __int8 *)(v36 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = *(void *)(v39 + 64);
  type metadata accessor for DescriptionFeedbackData();
  sub_100179C0C();
  unint64_t v60 = v38;
  unint64_t v42 = (v38 + v40 + *(unsigned __int8 *)(v41 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v44 = *(void *)(v43 + 64);
  uint64_t v45 = sub_10017DF08(&qword_100E71940);
  sub_100164920(v45);
  uint64_t v47 = *(unsigned __int8 *)(v46 + 80);
  unint64_t v48 = v42 + v44 + v47;
  sub_100162F0C();
  v49();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v61, v69);
  uint64_t v50 = v0 + v58;
  uint64_t v51 = type metadata accessor for LocationConditionData();
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v58, 1, v51)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
  }
  sub_100162F0C();
  v52();
  (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v0 + v66, v68);
  (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v0 + v62, v67);
  (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v0 + v59, v63);
  uint64_t v53 = type metadata accessor for AQIFeedbackData();
  if (!sub_100181EF0(v53)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v0 + v57, v50);
  }
  (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v0 + v60, v64);
  sub_1001649A8();
  v54();
  uint64_t v55 = type metadata accessor for WeatherJSONData();
  if (!sub_100181EF0(v55)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v0 + (v48 & ~v47), v50);
  }

  return swift_deallocObject();
}

uint64_t sub_1003B9E98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrivateUserData();
  sub_100164920(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v54 = v4;
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = type metadata accessor for LocationData();
  sub_100164920(v7);
  unint64_t v53 = (v4 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = sub_10017DF08(&qword_100E71958);
  sub_100164920(v11);
  unint64_t v13 = (v53 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = type metadata accessor for ForecastAgeData();
  sub_100164920(v16);
  unint64_t v18 = (v13 + v15 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = type metadata accessor for ConditionsFeedbackData();
  sub_100164920(v21);
  unint64_t v23 = (v18 + v20 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = type metadata accessor for WindFeedbackData();
  sub_100164920(v26);
  unint64_t v28 = (v23 + v25 + *(unsigned __int8 *)(v27 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v31 = type metadata accessor for TemperatureFeedbackData();
  sub_100164920(v31);
  unint64_t v33 = (v28 + v30 + *(unsigned __int8 *)(v32 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = *(void *)(v34 + 64);
  uint64_t v36 = sub_10017DF08(&qword_100E71948);
  sub_100164920(v36);
  unint64_t v38 = (v33 + v35 + *(unsigned __int8 *)(v37 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v40 = *(void *)(v39 + 64);
  uint64_t v41 = type metadata accessor for OtherConditionsFeedbackData();
  sub_100164920(v41);
  unint64_t v43 = (v38 + v40 + *(unsigned __int8 *)(v42 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v45 = *(void *)(v44 + 64);
  uint64_t v46 = type metadata accessor for DescriptionFeedbackData();
  sub_100164920(v46);
  unint64_t v48 = (v43 + v45 + *(unsigned __int8 *)(v47 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v50 = *(void *)(v49 + 64);
  uint64_t v51 = *(void *)(sub_10017DF08(&qword_100E71940) - 8);
  return sub_1003B8BC0(a1, v1 + v54, v1 + v53, v1 + v13, v1 + v18, v1 + v23, v1 + v28, v1 + v33, v1 + v38, v1 + v43, v1 + v48, v1 + ((v48 + v50 + *(unsigned __int8 *)(v51 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80)));
}

uint64_t sub_1003BA178(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ConditionDetailLegendViewModelFactory()
{
  return self;
}

uint64_t sub_1003BA1E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64830);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v43)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v35 = v5;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v41)
  {
    uint64_t v6 = sub_1000DF0C4((uint64_t)v42, v43);
    v34[1] = v34;
    __n128 v7 = __chkstk_darwin(v6);
    uint64_t v9 = (void *)((char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v10 + 16))(v9, v7);
    uint64_t v11 = sub_1000DF0C4((uint64_t)v40, v41);
    v34[0] = v34;
    __n128 v12 = __chkstk_darwin(v11);
    uint64_t v14 = (void *)((char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
    uint64_t v16 = *v9;
    uint64_t v17 = *v14;
    uint64_t v18 = type metadata accessor for ReportWeatherInteractor();
    v39[3] = v18;
    v39[4] = &off_100E2B730;
    v39[0] = v16;
    uint64_t v19 = type metadata accessor for ReportWeatherViewModelFactory();
    uint64_t v37 = v19;
    unint64_t v38 = &off_100E2BC00;
    v36[0] = v17;
    uint64_t v20 = type metadata accessor for ReportWeatherModule();
    uint64_t v21 = (void *)swift_allocObject();
    uint64_t v22 = sub_1000DF0C4((uint64_t)v39, v18);
    __n128 v23 = __chkstk_darwin(v22);
    uint64_t v25 = (void *)((char *)v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
    uint64_t v27 = sub_1000DF0C4((uint64_t)v36, v37);
    __n128 v28 = __chkstk_darwin(v27);
    uint64_t v30 = (void *)((char *)v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v31 + 16))(v30, v28);
    uint64_t v32 = *v25;
    uint64_t v33 = *v30;
    v21[6] = v18;
    v21[7] = &off_100E2B730;
    v21[11] = v19;
    v21[12] = &off_100E2BC00;
    v21[8] = v33;
    v21[2] = v35;
    v21[3] = v32;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v36);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v39);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v40);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v42);
    a2[3] = v20;
    a2[4] = &off_100E2BC20;
    *a2 = v21;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003BA648()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  type metadata accessor for Tracker();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.containerSingleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for SessionManager();
  RegistrationContainer.register<A>(_:name:factory:)();
  Definition.thenConfigure(_:)();
  swift_release();
  swift_release();
  type metadata accessor for SessionEventsAndDataCoordinator();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E71B10);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E71B18);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E71B20);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64830);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E71B28);
  RegistrationContainer.register<A>(_:name:factory:)();
  return swift_release();
}

uint64_t sub_1003BA970(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v2 = Tracker.chain(name:identifier:)();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003BAA04(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E71B78);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SessionManager.Options();
  __chkstk_darwin(v5);
  uint64_t v14 = type metadata accessor for SessionManagerConfiguration();
  uint64_t v6 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E71B80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100C25ED0;
  static SessionManager.Options.gracefulNoSessionEventSubmission.getter();
  static SessionManager.Options.gracefulEventCreation.getter();
  uint64_t v15 = v9;
  sub_1003BBDCC();
  sub_10017DF08(&qword_100E71B90);
  sub_100216200();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for FlushProcessor();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t v11 = type metadata accessor for TimestampJitter();
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v11);
  if (result == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71BA0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  SessionManagerConfiguration.init(options:flushProcessor:timestampJitter:privacyValidationProvider:)();
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for AppSessionManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v12 = AppSessionManager.createSessionManager(with:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
    return v12;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1003BAD64(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for LoggingEventProcessorFormat();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10017DF08(&qword_100E71B68);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a2, a2[3]);
  uint64_t v10 = type metadata accessor for Configuration();
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (result == 1)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  char v12 = Configuration.isEnabled.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  if ((v12 & 1) == 0) {
    return result;
  }
  SessionManager.processorManager.getter();
  type metadata accessor for LoggingEventProcessor();
  *uint64_t v6 = 11;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for LoggingEventProcessorFormat.json(_:), v3);
  LoggingEventProcessor.__allocating_init(logFormat:)();
  ProcessorManager.add(eventProcessor:)();
  swift_release();
  swift_release();
  SessionManager.processorManager.getter();
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for Client();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result) {
    goto LABEL_9;
  }
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E71B70);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for UploadBatchEventConfig();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  type metadata accessor for UploadBatchEventProcessor();
  UploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)();
  ProcessorManager.add(eventProcessor:)();
  swift_release();
  return swift_release();
}

void sub_1003BB06C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for SessionManager();
  uint64_t v2 = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = v2;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Client();
  uint64_t v4 = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = v4;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B40);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B38);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v21)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B48);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B50);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B58);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    type metadata accessor for SessionEventsAndDataCoordinator();
    swift_allocObject();
    LOBYTE(v6) = 0;
    sub_1000EC7B8(0, v3, v5, (uint64_t)v22, (uint64_t)v20, (uint64_t)v18, (uint64_t)v16, (uint64_t)&v13, (uint64_t)v10, (uint64_t)v7, v6, v7[0], v7[1], v7[2], v8, v9, v10[0], v10[1], v10[2],
      v11,
      v12,
      v13,
      v14);
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_1003BB33C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for SessionEventsAndDataCoordinator();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  uint64_t v12 = v5;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v7 = v17;
  if (!v17)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v9 = v19;
  uint64_t v8 = v20;
  uint64_t v10 = v18;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B28);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B40);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14)
  {
    a2[3] = &type metadata for ReportWeatherTracker;
    a2[4] = &off_100E13788;
    uint64_t v11 = (void *)swift_allocObject();
    *a2 = v11;
    v11[2] = v12;
    _OWORD v11[3] = v6;
    v11[4] = v7;
    v11[5] = v10;
    v11[6] = v9;
    v11[7] = v8;
    sub_1001262E4(&v15, (uint64_t)(v11 + 8));
    return sub_1001262E4(&v13, (uint64_t)(v11 + 13));
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1003BB54C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B38);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v10)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E6FC60);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      uint64_t v5 = type metadata accessor for ReportWeatherSubmissionTracker();
      uint64_t v6 = swift_allocObject();
      sub_1001262E4(&v9, v6 + 56);
      uint64_t result = sub_1001262E4(&v7, v6 + 16);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_100E1AE20;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003BB648@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v26;
  if (!v26)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B10);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v25)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v20 = v27;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v23)
  {
    uint64_t v6 = sub_1000DF0C4((uint64_t)v24, v25);
    __n128 v7 = __chkstk_darwin(v6);
    long long v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v10 + 16))(v9, v7);
    v21[3] = &type metadata for ReportWeatherTracker;
    void v21[4] = &off_100E13788;
    v21[0] = swift_allocObject();
    memcpy((void *)(v21[0] + 16), v9, 0x80uLL);
    uint64_t v11 = type metadata accessor for ReportWeatherInteractor();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = sub_1000DF0C4((uint64_t)v21, (uint64_t)&type metadata for ReportWeatherTracker);
    __n128 v14 = __chkstk_darwin(v13);
    uint64_t v16 = (char *)&v21[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
    v12[7] = &type metadata for ReportWeatherTracker;
    v12[8] = &off_100E13788;
    uint64_t v18 = swift_allocObject();
    void v12[4] = v18;
    memcpy((void *)(v18 + 16), v16, 0x80uLL);
    uint64_t v19 = v20;
    v12[2] = v5;
    v12[3] = v19;
    sub_1001262E4(&v22, (uint64_t)(v12 + 9));
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
    a2[3] = v11;
    a2[4] = &off_100E2B730;
    *a2 = v12;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003BB954(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v15;
  if (v15)
  {
    uint64_t v5 = v17;
    uint64_t v4 = v18;
    uint64_t v6 = v16;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E71B08);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v14)
    {
      uint64_t v7 = *sub_1001B1E64(v13, v14);
      v12[3] = type metadata accessor for ReportWeatherViewModelFactory();
      void v12[4] = &off_100E2BC00;
      v12[0] = v7;
      sub_10020D948((uint64_t)v12, (uint64_t)v11);
      uint64_t v8 = swift_allocObject();
      sub_1001262E4(v11, v8 + 16);
      swift_retain();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_1003BBCB4;
      *(void *)(v9 + 24) = v8;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_1003BBCF4;
      *(void *)(v10 + 24) = v9;
      sub_10017DF08(&qword_100E64830);
      swift_allocObject();
      return sub_100259AC0(v3, v6, v5, v4, sub_10025969C, 0, sub_1002749F4, 0, sub_1003BBCFC, v10);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003BBB58@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1001B1E64(a2, a2[3]);
  sub_100881F20(a1, 1, v6);
  return sub_1002A8CC8((uint64_t)v6, a3);
}

double sub_1003BBBBC@<D0>(void (*a1)(_OWORD *__return_ptr)@<X1>, _OWORD *a2@<X8>)
{
  a1(v9);
  double result = *(double *)v9;
  long long v4 = v9[1];
  long long v5 = v9[2];
  long long v6 = v9[3];
  long long v7 = v9[4];
  long long v8 = v9[5];
  *a2 = v9[0];
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  a2[5] = v8;
  return result;
}

uint64_t sub_1003BBC0C@<X0>(void *a1@<X0>, void (*a2)(void *__return_ptr, void)@<X1>, uint64_t a3@<X8>)
{
  a2(v5, *a1);
  return sub_1003BBD04((uint64_t)v5, a3);
}

uint64_t sub_1003BBC54@<X0>(uint64_t *a1@<X8>)
{
  return sub_10000AD14((uint64_t (*)(void))type metadata accessor for ReportWeatherDataFactory, (uint64_t)&off_100E1F230, a1);
}

uint64_t sub_1003BBC74()
{
  return sub_1003BA648();
}

uint64_t sub_1003BBC7C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1003BBCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003BBB58(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1003BBCBC()
{
  swift_release();

  return swift_deallocObject();
}

double sub_1003BBCF4@<D0>(_OWORD *a1@<X8>)
{
  return sub_1003BBBBC(*(void (**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1003BBCFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003BBC0C(a1, *(void (**)(void *__return_ptr, void))(v2 + 16), a2);
}

uint64_t sub_1003BBD04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E71B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BBD6C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 104);

  return swift_deallocObject();
}

unint64_t sub_1003BBDCC()
{
  unint64_t result = qword_100E71B88;
  if (!qword_100E71B88)
  {
    type metadata accessor for SessionManager.Options();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E71B88);
  }
  return result;
}

uint64_t *sub_1003BBE20(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    long long v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[8];
    long long v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[9];
    uint64_t v26 = (uint64_t *)((char *)a1 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    __n128 v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E6B670);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *uint64_t v26 = *v27;
      v8((void *)((char *)v26 + v28[5]), (void *)((char *)v27 + v28[5]), v7);
      *(void *)((char *)v26 + v28[6]) = *(void *)((char *)v27 + v28[6]);
      *(void *)((char *)v26 + v28[7]) = *(void *)((char *)v27 + v28[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
    }
  }
  return a1;
}

uint64_t sub_1003BC0C4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v17(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v13, 1, v14);
  if (!result)
  {
    uint64_t v16 = v13 + *(int *)(v14 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v17)(v16, v4);
  }
  return result;
}

char *sub_1003BC2A0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  long long v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v27))
  {
    uint64_t v28 = sub_10017DF08(&qword_100E6B670);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v25 = *(void *)v26;
    v7(&v25[v27[5]], &v26[v27[5]], v6);
    *(void *)&v25[v27[6]] = *(void *)&v26[v27[6]];
    *(void *)&v25[v27[7]] = *(void *)&v26[v27[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
  }
  return a1;
}

uint64_t sub_1003BC4F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  LODWORD(v23) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (!v23)
  {
    if (!v29)
    {
      *uint64_t v26 = *v27;
      v8((uint64_t)v26 + v28[5], (uint64_t)v27 + v28[5], v6);
      *(void *)((char *)v26 + v28[6]) = *(void *)((char *)v27 + v28[6]);
      *(void *)((char *)v26 + v28[7]) = *(void *)((char *)v27 + v28[7]);
      return a1;
    }
    sub_1003B2B44((uint64_t)v26);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v30 = sub_10017DF08(&qword_100E6B670);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *uint64_t v26 = *v27;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v26 + v28[5], (char *)v27 + v28[5], v6);
  *(void *)((char *)v26 + v28[6]) = *(void *)((char *)v27 + v28[6]);
  *(void *)((char *)v26 + v28[7]) = *(void *)((char *)v27 + v28[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  return a1;
}

char *sub_1003BC7E4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v27))
  {
    uint64_t v28 = sub_10017DF08(&qword_100E6B670);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v25 = *(void *)v26;
    v7(&v25[v27[5]], &v26[v27[5]], v6);
    *(void *)&v25[v27[6]] = *(void *)&v26[v27[6]];
    *(void *)&v25[v27[7]] = *(void *)&v26[v27[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
  }
  return a1;
}

uint64_t sub_1003BCA38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherStatisticsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  LODWORD(v23) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v28);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28);
  if (!v23)
  {
    if (!v29)
    {
      *uint64_t v26 = *v27;
      v8((uint64_t)v26 + v28[5], (uint64_t)v27 + v28[5], v6);
      *(void *)((char *)v26 + v28[6]) = *(void *)((char *)v27 + v28[6]);
      *(void *)((char *)v26 + v28[7]) = *(void *)((char *)v27 + v28[7]);
      return a1;
    }
    sub_1003B2B44((uint64_t)v26);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v30 = sub_10017DF08(&qword_100E6B670);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  *uint64_t v26 = *v27;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v26 + v28[5], (char *)v27 + v28[5], v6);
  *(void *)((char *)v26 + v28[6]) = *(void *)((char *)v27 + v28[6]);
  *(void *)((char *)v26 + v28[7]) = *(void *)((char *)v27 + v28[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
  return a1;
}

uint64_t sub_1003BCD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003BCD3C);
}

uint64_t sub_1003BCD3C(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66CA0);
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        type metadata accessor for TimeZone();
        sub_100162F30();
        if (*(_DWORD *)(v16 + 84) == a2)
        {
          uint64_t v8 = v15;
          uint64_t v12 = a3[7];
        }
        else
        {
          type metadata accessor for Locale();
          sub_100162F30();
          if (*(_DWORD *)(v18 + 84) == a2)
          {
            uint64_t v8 = v17;
            uint64_t v12 = a3[8];
          }
          else
          {
            uint64_t v8 = sub_10017DF08(&qword_100E6B670);
            uint64_t v12 = a3[9];
          }
        }
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1003BCE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003BCE64);
}

uint64_t sub_1003BCE64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66CA0);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        type metadata accessor for TimeZone();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[7];
        }
        else
        {
          type metadata accessor for Locale();
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[8];
          }
          else
          {
            uint64_t v10 = sub_10017DF08(&qword_100E6B670);
            uint64_t v14 = a4[9];
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for PrecipitationAveragesHeroChartInput()
{
  uint64_t result = qword_100E71C00;
  if (!qword_100E71C00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003BCFC8()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WeatherStatisticsModel();
    if (v1 <= 0x3F)
    {
      sub_10001CB2C();
      if (v2 <= 0x3F)
      {
        type metadata accessor for TimeZone();
        if (v3 <= 0x3F)
        {
          type metadata accessor for Locale();
          if (v4 <= 0x3F)
          {
            sub_100219840();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1003BD180(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DayWeather();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1003BD1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = (double *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10017DF08(&qword_100E6F9B8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E6B670);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (double *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v35 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v35 - v19;
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v21 = type metadata accessor for PrecipitationAveragesHeroChartInput();
  if ((static WeatherStatisticsModel.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v37 = v15;
  unint64_t v38 = v20;
  uint64_t v36 = v7;
  uint64_t v39 = v4;
  uint64_t v40 = v11;
  type metadata accessor for DayWeather();
  sub_1003BD180(&qword_100E71318);
  sub_1003BD180(&qword_100E71320);
  sub_1003BD180(&qword_100E71328);
  if ((static Forecast.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  char v22 = static TimeZone.== infix(_:_:)();
  uint64_t v23 = v39;
  uint64_t v24 = (uint64_t)v40;
  uint64_t v25 = (uint64_t)v38;
  if ((v22 & 1) == 0 || (static Locale.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  sub_1002F8E04(a1 + *(int *)(v21 + 36), v25);
  sub_1002F8E04(a2 + *(int *)(v21 + 36), (uint64_t)v18);
  uint64_t v26 = v24 + *(int *)(v8 + 48);
  sub_1002F8E04(v25, v24);
  sub_1002F8E04((uint64_t)v18, v26);
  sub_100162F8C(v24);
  if (v29)
  {
    sub_1001781AC((uint64_t)v18, &qword_100E6B670);
    sub_1001781AC(v25, &qword_100E6B670);
    sub_100162F8C(v26);
    if (v29)
    {
      sub_1001781AC(v24, &qword_100E6B670);
      return 1;
    }
    uint64_t v30 = &qword_100E6F9B8;
  }
  else
  {
    uint64_t v28 = v37;
    sub_1002F8E04(v24, (uint64_t)v37);
    sub_100162F8C(v26);
    if (v29)
    {
      uint64_t v30 = &qword_100E6F9B8;
    }
    else
    {
      uint64_t v31 = v36;
      sub_100381D24(v26, (uint64_t)v36);
      if (*v28 == *v31
        && (static Date.== infix(_:_:)() & 1) != 0
        && *(double *)((char *)v28 + *(int *)(v23 + 24)) == *(double *)((char *)v31 + *(int *)(v23 + 24)))
      {
        uint64_t v32 = *(int *)(v23 + 28);
        double v33 = *(double *)((char *)v28 + v32);
        double v34 = *(double *)((char *)v31 + v32);
        sub_1003B2B44((uint64_t)v31);
        sub_1001781AC((uint64_t)v18, &qword_100E6B670);
        sub_1001781AC(v25, &qword_100E6B670);
        sub_1003B2B44((uint64_t)v28);
        sub_1001781AC(v24, &qword_100E6B670);
        return v33 == v34;
      }
      sub_1003B2B44((uint64_t)v31);
      uint64_t v30 = &qword_100E6B670;
    }
    sub_1001781AC((uint64_t)v18, &qword_100E6B670);
    sub_1001781AC(v25, &qword_100E6B670);
    sub_1003B2B44((uint64_t)v28);
  }
  sub_1001781AC(v24, v30);
  return 0;
}

ValueMetadata *type metadata accessor for PrecipitationAveragesHeroChartInputFactory()
{
  return &type metadata for PrecipitationAveragesHeroChartInputFactory;
}

uint64_t sub_1003BD5F4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  v22[4] = a3;
  v22[2] = a4;
  v22[3] = a1;
  v22[0] = a2;
  v22[1] = a5;
  uint64_t v5 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v13 = v12;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v22 - v18;
  CurrentWeather.date.getter();
  Location.timeZone.getter();
  Date.startOfDay(timeZone:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v17, v11);
  type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  dispatch thunk of SunriseSunsetDetailChartViewModelFactoryType.makeViewModel(location:startDate:numberOfMinutesShownOnChart:currentWeather:sunEvents:cachedElevations:cachedDateHoursString:)();
  return ((uint64_t (*)(char *, uint64_t))v20)(v19, v11);
}

void sub_1003BD7C0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_newsArticle, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_nextHourPrecipitation, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002DC7C4();
}

uint64_t sub_1003BD9EC(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10017F948();
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v1, &qword_100E64E80);
  uint64_t v104 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v5) == 1)
  {
    sub_1001781AC(v1, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_10017FBA8(v18);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_newsArticle, v19, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 64) = v20;
    *(void *)(v11 + 72) = v21;
    char v22 = (__n128 *)sub_100163204();
    sub_10017FBA8(v22);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = sub_100163204();
    *(_OWORD *)(v26 + 16) = v105;
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v26 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v26);
    *(void *)(v11 + 112) = v27;
    *(void *)(v11 + 120) = v28;
    uint64_t v29 = v13;
    uint64_t v30 = (__n128 *)swift_allocObject();
    uint64_t v31 = (char *)sub_100183900(v30, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 136) = v32;
    *(void *)(v11 + 144) = v33;
    double v34 = (__n128 *)swift_allocObject();
    sub_10016324C(v34);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 160) = v35;
    *(void *)(v11 + 168) = v36;
    uint64_t v37 = (__n128 *)swift_allocObject();
    sub_10016324C(v37);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 184) = v38;
    *(void *)(v11 + 192) = v39;
    uint64_t v40 = sub_100163204();
    *(_OWORD *)(v40 + 16) = v105;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v40 + v12 + v29, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v40);
    *(void *)(v11 + 208) = v41;
    *(void *)(v11 + 216) = v42;
    uint64_t v43 = (__n128 *)swift_allocObject();
    sub_100179F48(v43);
    uint64_t v45 = v44 + v12;
    uint64_t v46 = *(void *)(a1 + 16);
    sub_10031F6A8(v46 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v44 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v46 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v45 + v29, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v43);
    *(void *)(v11 + 232) = v47;
    *(void *)(v11 + 240) = v48;
  }
  else
  {
    sub_10031F6FC(v1, v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v103 = *(void *)(v6 + 72);
    uint64_t v102 = v9;
    unint64_t v49 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v50 = (__n128 *)swift_allocObject();
    uint64_t v51 = sub_100183900(v50, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v51 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v50);
    *(void *)(v11 + 40) = v52;
    *(void *)(v11 + 48) = v53;
    uint64_t v54 = sub_10017C984();
    *(_OWORD *)(v54 + 16) = v105;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_newsArticle, v54 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v54);
    *(void *)(v11 + 64) = v55;
    *(void *)(v11 + 72) = v56;
    unint64_t v57 = (__n128 *)sub_10017C984();
    sub_10017E198(v57);
    sub_10031F6A8(v58 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v59, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v54);
    *(void *)(v11 + 88) = v60;
    *(void *)(v11 + 96) = v61;
    unint64_t v62 = (__n128 *)sub_10017C984();
    sub_10017E198(v62);
    sub_10031F6A8(v63 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v64, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v54);
    *(void *)(v11 + 112) = v65;
    *(void *)(v11 + 120) = v66;
    uint64_t v67 = sub_10017C984();
    *(_OWORD *)(v67 + 16) = v105;
    sub_10031F6A8(v9, v67 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v67);
    *(void *)(v11 + 136) = v68;
    *(void *)(v11 + 144) = v69;
    uint64_t v70 = (__n128 *)swift_allocObject();
    uint64_t v71 = (char *)sub_100183900(v70, (__n128)xmmword_100C25ED0) + v49;
    uint64_t v72 = a1;
    uint64_t v73 = *(void *)(a1 + 16);
    uint64_t v74 = v72;
    sub_10031F6A8(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v71[v103], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v70);
    *(void *)(v11 + 160) = v75;
    *(void *)(v11 + 168) = v76;
    uint64_t v77 = (__n128 *)swift_allocObject();
    sub_100179F48(v77);
    uint64_t v79 = v78 + v49;
    uint64_t v80 = *(void *)(v74 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v80 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v79 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v77);
    *(void *)(v11 + 184) = v81;
    *(void *)(v11 + 192) = v82;
    uint64_t v83 = (__n128 *)swift_allocObject();
    sub_100179F48(v83);
    uint64_t v85 = v84 + v49;
    uint64_t v86 = *(void *)(v104 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v86 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v85 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v83);
    *(void *)(v11 + 208) = v87;
    *(void *)(v11 + 216) = v88;
    uint64_t v89 = (__n128 *)swift_allocObject();
    sub_100179F48(v89);
    uint64_t v91 = v90 + v49;
    uint64_t v92 = *(void *)(v104 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v91 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v89);
    *(void *)(v11 + 232) = v93;
    *(void *)(v11 + 240) = v94;
    uint64_t v95 = (__n128 *)swift_allocObject();
    sub_100179F48(v95);
    uint64_t v97 = v96 + v49;
    uint64_t v98 = *(void *)(v104 + 16);
    sub_10031F6A8(v98 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v96 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v98 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v97 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v95);
    *(void *)(v11 + 256) = v99;
    *(void *)(v11 + 264) = v100;
    sub_10031F75C(v102, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void *sub_1003BE25C(char a1, char a2, uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v87 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v86 = (uint64_t)&v71 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v71 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017F948();
  uint64_t v15 = type metadata accessor for LocationComponentViewModel();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v18 = v17;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v71 = (uint64_t)&v71 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v84 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v83 = (uint64_t)&v71 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)&v71 - v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v82 = (uint64_t)&v71 - v29;
  uint64_t v88 = v6;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v30 = &qword_100E72038;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v30 = &qword_100E72408;
      goto LABEL_11;
    }
    uint64_t v30 = &qword_100E72220;
  }
  else if (a2)
  {
    uint64_t v30 = &qword_100E71C68;
  }
  else
  {
    uint64_t v30 = &qword_100E71E50;
  }
LABEL_11:
  char v31 = *((unsigned char *)v30 + 160);
  uint64_t v32 = *v30;
  uint64_t v73 = v30[1];
  uint64_t v72 = v30[2];
  uint64_t v33 = v30[3];
  uint64_t v34 = v30[16];
  uint64_t v35 = v30[17];
  uint64_t v36 = v30[18];
  uint64_t v37 = v30[19];
  uint64_t v38 = v30[45];
  uint64_t v76 = v30[46];
  uint64_t v77 = v38;
  uint64_t v39 = v30[47];
  uint64_t v74 = v30[48];
  uint64_t v75 = v39;
  uint64_t v40 = v30[53];
  uint64_t v80 = v30[54];
  uint64_t v81 = v40;
  uint64_t v41 = v30[55];
  uint64_t v78 = v30[56];
  uint64_t v79 = v41;
  uint64_t v42 = v90 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v42, v3, &qword_100E64E80);
  uint64_t v43 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v43) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v48 = 1;
    uint64_t v49 = v88;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v43 + 20), v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v44 = v18;
  uint64_t v45 = v71;
  sub_10031F6FC(v44, v71, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v31)
  {
    sub_10031F75C(v45, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  uint64_t v46 = v45;
  uint64_t v47 = v89;
  sub_10031F6FC(v46, v89, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v48 = 0;
  uint64_t v49 = v88;
  uint64_t v50 = (uint64_t *)(v47 + *(int *)(v88 + 20));
  *uint64_t v50 = v34;
  v50[1] = v35;
  v50[2] = v36;
  uint64_t v50[3] = v37;
LABEL_17:
  uint64_t v51 = v89;
  _s7Weather24LocationCompositionStateOwst_0(v89, v48, 1, v49);
  uint64_t v52 = v82;
  sub_10031F640(v51, v82);
  uint64_t v53 = v83;
  _s7Weather24LocationCompositionStateOwst_0(v83, 1, 1, v49);
  uint64_t v54 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  uint64_t v55 = v85;
  sub_10031F6A8(v54, v85, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(v49 + 20));
  uint64_t v57 = v73;
  *uint64_t v56 = v32;
  v56[1] = v57;
  v56[2] = v72;
  v56[3] = v33;
  uint64_t v58 = v84;
  sub_10006DF38(v52, v84, &qword_100E6CCD8);
  uint64_t v59 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v86;
  sub_10031F6A8(v59, v86, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v49 + 20));
  uint64_t v62 = v76;
  *uint64_t v61 = v77;
  v61[1] = v62;
  uint64_t v63 = v74;
  v61[2] = v75;
  v61[3] = v63;
  uint64_t v64 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v87;
  sub_10031F6A8(v64, v87, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v49 + 20));
  uint64_t v67 = v80;
  *uint64_t v66 = v81;
  v66[1] = v67;
  uint64_t v68 = v78;
  v66[2] = v79;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18(v53, v55, v58, v60, v65);
  sub_1001781AC(v52, &qword_100E6CCD8);
  return v69;
}

void sub_1003BE7E8()
{
  if ((static Location.== infix(_:_:)() & 1) != 0
    && (type metadata accessor for NextHourPrecipitationDetailInput.Input(0),
        type metadata accessor for MinuteWeather(),
        sub_10001A2C8(&qword_100E72758, (void (*)(uint64_t))&type metadata accessor for MinuteWeather),
        sub_10001A2C8(&qword_100E72760, (void (*)(uint64_t))&type metadata accessor for MinuteWeather),
        sub_10001A2C8((unint64_t *)&unk_100E72768, (void (*)(uint64_t))&type metadata accessor for MinuteWeather), (static Forecast.== infix(_:_:)() & 1) != 0))
  {
    sub_100162694();
    sub_100A205E8(v0, v1);
  }
  else
  {
    sub_100162694();
  }
}

void sub_1003BE92C(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  uint64_t v11 = sub_100109308(HourPrecipitationDetailInput);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E727A0);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162E88();
  uint64_t v18 = v2 + *(int *)(v17 + 56);
  sub_1003C5080(a1, v2, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
  sub_1003C5080(a2, v18, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
  sub_10012B520(v2, 1, HourPrecipitationDetail);
  if (!v19)
  {
    sub_1003C5080(v2, v14, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
    sub_10012B520(v18, 1, HourPrecipitationDetail);
    if (!v19)
    {
      sub_1003C5020(v18, v9, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
      char v20 = static Location.== infix(_:_:)();
      if ((v20 & 1) == 0
        || (type metadata accessor for MinuteWeather(),
            sub_10001A2C8(&qword_100E72758, (void (*)(uint64_t))&type metadata accessor for MinuteWeather),
            sub_10001A2C8(&qword_100E72760, (void (*)(uint64_t))&type metadata accessor for MinuteWeather),
            sub_10001A2C8((unint64_t *)&unk_100E72768, (void (*)(uint64_t))&type metadata accessor for MinuteWeather), (static Forecast.== infix(_:_:)() & 1) == 0)|| (sub_100A205E8((void *)(v14 + *(int *)(HourPrecipitationDetail + 24)), (void *)(v9 + *(int *)(HourPrecipitationDetail + 24))) & 1) == 0)
      {
        sub_1001BBFC8(v9, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
        sub_1001BBFC8(v14, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
        sub_1001BBFC8(v2, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
        goto LABEL_15;
      }
      sub_1001BBFC8(v9, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
      sub_1001BBFC8(v14, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
      goto LABEL_5;
    }
    sub_1001BBFC8(v14, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
LABEL_9:
    sub_1001781AC(v2, &qword_100E727A0);
    goto LABEL_15;
  }
  sub_10012B520(v18, 1, HourPrecipitationDetail);
  if (!v19) {
    goto LABEL_9;
  }
LABEL_5:
  sub_1001BBFC8(v2, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
LABEL_15:
  sub_100162694();
}

void sub_1003BEC88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E6E8F8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10017DF08(&qword_100E6E900);
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v68 = v11 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100E63770);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162E88();
  uint64_t v14 = sub_10017DF08(&qword_100E63850);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_10017DF08(&qword_100E727A8);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v68 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v68 - v34;
  sub_1003BF440(a1, v28);
  sub_10012B520(v28, 1, HourPrecipitationDetailViewState);
  if (v50)
  {
    sub_1001781AC(v28, &qword_100E727A8);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_1002102B0(v36, (uint64_t)qword_100F51ED0);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v40 = v71;
    if (v39)
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Unable to make NextHourPrecipitationDetailInput due to missing nextHourPrecipitationDetail.", v41, 2u);
      swift_slowDealloc();
    }

    uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
    uint64_t v43 = v40;
    uint64_t v44 = 1;
    goto LABEL_8;
  }
  sub_1003C5020(v28, (uint64_t)v35, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
  uint64_t v46 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v47 = Location.id.getter();
  sub_1001BBE9C(v47, v48, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = type metadata accessor for LocationWeatherDataState(0);
  sub_10012B520(v2, 1, v49);
  if (v50)
  {
    sub_1001781AC(v2, &qword_100E63770);
    _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v19);
LABEL_14:
    uint64_t v52 = &qword_100E63850;
    uint64_t v53 = v18;
    goto LABEL_15;
  }
  sub_1001177B0(v18);
  sub_1001BBFC8(v2, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_10012B520(v18, 1, v19);
  if (v51) {
    goto LABEL_14;
  }
  sub_1003C5020(v18, v23, (void (*)(void))type metadata accessor for WeatherData);
  WeatherDataModel.minuteForecast.getter();
  uint64_t v62 = v70;
  sub_10012B520(v8, 1, v70);
  if (!v63)
  {
    uint64_t v64 = v68;
    uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
    v65(v68, v8, v62);
    type metadata accessor for Location();
    sub_100162E4C();
    uint64_t v40 = v71;
    (*(void (**)(uint64_t, char *))(v66 + 32))(v71, v35);
    uint64_t v67 = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
    v65(v40 + *(int *)(v67 + 20), v64, v62);
    sub_1003C5020(v23, v40 + *(int *)(v67 + 24), (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v43 = v40;
    uint64_t v44 = 0;
    uint64_t HourPrecipitationDetail = v67;
LABEL_8:
    _s7Weather24LocationCompositionStateOwst_0(v43, v44, 1, HourPrecipitationDetail);
    uint64_t v45 = 0;
    goto LABEL_21;
  }
  sub_1001BBFC8(v23, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v52 = &qword_100E6E8F8;
  uint64_t v53 = v8;
LABEL_15:
  sub_1001781AC(v53, v52);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v54 = type metadata accessor for Logger();
  sub_1002102B0(v54, (uint64_t)qword_100F51ED0);
  sub_1003C5080((uint64_t)v35, (uint64_t)v33, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
  uint64_t v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 141558275;
    uint64_t v72 = 1752392040;
    uint64_t v73 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v57 + 12) = 2081;
    type metadata accessor for Location();
    sub_10001A2C8((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v72 = sub_10016414C(v59, v60, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001BBFC8((uint64_t)v33, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "Failed to create next hour precipitation detail input due to missing weather data; location=%{private,mask.hash}s",
      (uint8_t *)v57,
      0x16u);
    uint64_t v45 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1001BBFC8((uint64_t)v35, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
  }
  else
  {

    sub_1001BBFC8((uint64_t)v33, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
    sub_1001BBFC8((uint64_t)v35, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
    uint64_t v45 = 1;
  }
  uint64_t v40 = v71;
LABEL_21:
  uint64_t HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  _s7Weather24LocationCompositionStateOwst_0(v40, v45, 1, HourPrecipitationDetailInput);
  sub_100162694();
}

uint64_t sub_1003BF440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v59 = type metadata accessor for LocationPreviewModalViewState(0);
  uint64_t v3 = __chkstk_darwin(v59);
  uint64_t v55 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v57 = (uint64_t)&v51 - v5;
  uint64_t v58 = type metadata accessor for LocationPreviewViewState(0);
  uint64_t v6 = __chkstk_darwin(v58);
  uint64_t v54 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v56 = (uint64_t)&v51 - v8;
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  uint64_t v10 = __chkstk_darwin(HourPrecipitationDetailViewState);
  uint64_t v52 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v53 = (uint64_t)&v51 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v51 - v14;
  uint64_t v16 = type metadata accessor for ModalViewState(0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v51 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v51 - v23;
  uint64_t v25 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v51 - v29;
  uint64_t v31 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_1003C5080(v31, (uint64_t)v24, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1001BBFC8((uint64_t)v24, (void (*)(void))type metadata accessor for ModalViewState);
    goto LABEL_6;
  }
  uint64_t v51 = HourPrecipitationDetailViewState;
  sub_1003C5020((uint64_t)v24, (uint64_t)v30, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  sub_1003C5020((uint64_t)v30, (uint64_t)v28, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1001BBFC8((uint64_t)v28, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t HourPrecipitationDetailViewState = v51;
LABEL_6:
    sub_1003C5080(v31, (uint64_t)v22, (void (*)(void))type metadata accessor for ModalViewState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v36 = v58;
    if (EnumCaseMultiPayload)
    {
      uint64_t v37 = type metadata accessor for ModalViewState;
      uint64_t v38 = (uint64_t)v22;
    }
    else
    {
      uint64_t v39 = v56;
      sub_1003C5020((uint64_t)v22, v56, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      uint64_t v40 = v57;
      sub_1003C5080(v39 + *(int *)(v36 + 20), v57, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      sub_1001BBFC8(v39, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v41 = HourPrecipitationDetailViewState;
        uint64_t v42 = v53;
        sub_1003C5020(v40, v53, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
        uint64_t v43 = v42;
        uint64_t v33 = v60;
        goto LABEL_18;
      }
      uint64_t v37 = type metadata accessor for LocationPreviewModalViewState;
      uint64_t v38 = v40;
    }
    sub_1001BBFC8(v38, (void (*)(void))v37);
    sub_1003C5080(v31, (uint64_t)v19, (void (*)(void))type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      sub_1001BBFC8((uint64_t)v19, (void (*)(void))type metadata accessor for ModalViewState);
      goto LABEL_15;
    }
    uint64_t v44 = type metadata accessor for ModalViewState.MapViewModal(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v44) == 1)
    {
      sub_1001781AC((uint64_t)v19, &qword_100E663E8);
LABEL_15:
      uint64_t v34 = 1;
      uint64_t v33 = v60;
      return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, HourPrecipitationDetailViewState);
    }
    uint64_t v45 = v54;
    sub_1003C5020((uint64_t)v19, v54, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v46 = v55;
    sub_1003C5080(v45 + *(int *)(v36 + 20), v55, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    sub_1001BBFC8(v45, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    int v47 = swift_getEnumCaseMultiPayload();
    uint64_t v33 = v60;
    if (v47 != 3)
    {
      sub_1001BBFC8(v46, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      uint64_t v34 = 1;
      return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, HourPrecipitationDetailViewState);
    }
    uint64_t v41 = HourPrecipitationDetailViewState;
    uint64_t v48 = v46;
    uint64_t v49 = v52;
    sub_1003C5020(v48, v52, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
    uint64_t v43 = v49;
LABEL_18:
    uint64_t HourPrecipitationDetailViewState = v41;
    sub_1003C5020(v43, v33, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
    uint64_t v34 = 0;
    return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, HourPrecipitationDetailViewState);
  }
  sub_1003C5020((uint64_t)v28, (uint64_t)v15, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
  uint64_t v32 = (uint64_t)v15;
  uint64_t v33 = v60;
  sub_1003C5020(v32, v60, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
  uint64_t v34 = 0;
  uint64_t HourPrecipitationDetailViewState = v51;
  return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, HourPrecipitationDetailViewState);
}

uint64_t type metadata accessor for NextHourPrecipitationDetailInputFactory()
{
  return self;
}

uint64_t *sub_1003BFAE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, HourPrecipitationDetail))
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  uint64_t v10 = *(int *)(HourPrecipitationDetail + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = *(int *)(HourPrecipitationDetail + 24);
  uint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 8);
  *uint64_t v15 = *(uint64_t *)((char *)a2 + v14);
  v15[1] = v17;
  uint64_t v18 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v19 = v18[5];
  uint64_t v20 = (char *)v15 + v19;
  uint64_t v21 = &v16[v19];
  uint64_t v22 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E63730);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v24 = v18[6];
  uint64_t v25 = (char *)v15 + v24;
  uint64_t v26 = &v16[v24];
  uint64_t v27 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = v18[7];
  uint64_t v29 = (char *)v15 + v28;
  uint64_t v30 = &v16[v28];
  uint64_t v31 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  uint64_t v34 = v18[8];
  uint64_t v35 = (void *)((char *)v15 + v34);
  uint64_t v36 = &v16[v34];
  uint64_t v37 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v40 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v35, v36, v40);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      goto LABEL_17;
    }
    uint64_t v39 = *((void *)v36 + 1);
    *uint64_t v35 = *(void *)v36;
    v35[1] = v39;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_17:
  uint64_t v41 = v18[9];
  uint64_t v42 = (char *)v15 + v41;
  uint64_t v43 = &v16[v41];
  uint64_t v44 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    uint64_t v45 = sub_10017DF08(&qword_100E63740);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v46))
    {
      uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v42, v43, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v46);
    }
    uint64_t v48 = *(int *)(v44 + 20);
    uint64_t v49 = &v42[v48];
    char v50 = &v43[v48];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v46))
    {
      uint64_t v51 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v49, v50, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v46);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, HourPrecipitationDetail);
  return a1;
}

uint64_t type metadata accessor for NextHourPrecipitationDetailInput.Input(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E72740);
}

uint64_t sub_1003C0084(uint64_t a1)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetail);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(HourPrecipitationDetail + 20);
    uint64_t v6 = sub_10017DF08(&qword_100E6E900);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(HourPrecipitationDetail + 24);
    swift_bridgeObjectRelease();
    uint64_t v8 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v9 = v7 + v8[5];
    uint64_t v10 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    uint64_t v11 = v7 + v8[6];
    uint64_t v12 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    uint64_t v13 = v7 + v8[7];
    uint64_t v14 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
    {
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
    }
    uint64_t v16 = v7 + v8[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = v7 + v8[9];
    uint64_t v20 = type metadata accessor for WeatherDataOverrides();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v19, 1, v20);
    if (!result)
    {
      uint64_t v21 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v21)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
      }
      uint64_t v22 = v19 + *(int *)(v20 + 20);
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v22, 1, v21);
      if (!result)
      {
        uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
        return v23(v22, v21);
      }
    }
  }
  return result;
}

char *sub_1003C03A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, HourPrecipitationDetail))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = *(int *)(HourPrecipitationDetail + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = *(int *)(HourPrecipitationDetail + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)&a2[v12 + 8];
  *(void *)uint64_t v13 = *(void *)&a2[v12];
  *((void *)v13 + 1) = v15;
  uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v13[v17];
  uint64_t v19 = &v14[v17];
  uint64_t v20 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_10017DF08(&qword_100E63730);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v22 = v16[6];
  uint64_t v23 = &v13[v22];
  uint64_t v24 = &v14[v22];
  uint64_t v25 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  uint64_t v26 = v16[7];
  uint64_t v27 = &v13[v26];
  uint64_t v28 = &v14[v26];
  uint64_t v29 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v27, v28, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  uint64_t v32 = v16[8];
  uint64_t v33 = &v13[v32];
  uint64_t v34 = &v14[v32];
  uint64_t v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v38 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v33, v34, v38);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v37 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v37;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v39 = v16[9];
  uint64_t v40 = &v13[v39];
  uint64_t v41 = &v14[v39];
  uint64_t v42 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
  {
    uint64_t v43 = sub_10017DF08(&qword_100E63740);
    memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v44 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v44))
    {
      uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v40, v41, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v44);
    }
    uint64_t v46 = *(int *)(v42 + 20);
    uint64_t v47 = &v40[v46];
    uint64_t v48 = &v41[v46];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v44))
    {
      uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v47, v48, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v44);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, HourPrecipitationDetail);
  return a1;
}

uint64_t sub_1003C08F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetail);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, HourPrecipitationDetail);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = *(int *)(HourPrecipitationDetail + 20);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_10017DF08(&qword_100E6E900);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      uint64_t v14 = *(int *)(HourPrecipitationDetail + 24);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = a2 + v14;
      *uint64_t v15 = *(void *)(a2 + v14);
      v15[1] = *(void *)(a2 + v14 + 8);
      uint64_t v17 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v18 = v17[5];
      uint64_t v19 = (char *)v15 + v18;
      uint64_t v20 = (const void *)(v16 + v18);
      uint64_t v21 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E63730);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
      uint64_t v41 = v17[6];
      uint64_t v42 = (char *)v15 + v41;
      uint64_t v43 = v16 + v41;
      uint64_t v44 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      uint64_t v45 = v17[7];
      uint64_t v46 = (char *)v15 + v45;
      uint64_t v47 = (const void *)(v16 + v45);
      uint64_t v48 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
      {
        uint64_t v49 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        uint64_t v50 = type metadata accessor for Date();
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v50 - 8) + 16))(v46, v47, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
      }
      uint64_t v51 = v17[8];
      uint64_t v52 = (void *)((char *)v15 + v51);
      uint64_t v53 = (void *)(v16 + v51);
      uint64_t v54 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v56 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v52, v53, v56);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
          goto LABEL_23;
        }
        *uint64_t v52 = *v53;
        v52[1] = v53[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_23:
      uint64_t v57 = v17[9];
      uint64_t v58 = (char *)v15 + v57;
      uint64_t v59 = (char *)(v16 + v57);
      uint64_t v60 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        uint64_t v61 = sub_10017DF08(&qword_100E63740);
        memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        uint64_t v62 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v62))
        {
          uint64_t v63 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v58, v59, v62);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v62);
        }
        uint64_t v83 = *(int *)(v60 + 20);
        uint64_t v84 = &v58[v83];
        uint64_t v85 = &v59[v83];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v62))
        {
          uint64_t v86 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v84, v85, v62);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v62);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      }
      uint64_t v87 = a1;
      uint64_t v88 = HourPrecipitationDetail;
      goto LABEL_46;
    }
    goto LABEL_7;
  }
  if (!v8)
  {
    uint64_t v26 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(a1, a2, v26);
    uint64_t v27 = *(int *)(HourPrecipitationDetail + 20);
    uint64_t v28 = a1 + v27;
    uint64_t v29 = a2 + v27;
    uint64_t v30 = sub_10017DF08(&qword_100E6E900);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
    uint64_t v31 = *(int *)(HourPrecipitationDetail + 24);
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = a2 + v31;
    *uint64_t v32 = *(void *)(a2 + v31);
    v32[1] = *(void *)(a2 + v31 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v34 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v35 = v34[5];
    uint64_t v36 = (char *)v32 + v35;
    uint64_t v37 = (const void *)(v33 + v35);
    uint64_t v38 = type metadata accessor for Locale();
    int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v38);
    int v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v64 = *(void *)(v38 - 8);
      if (!v40)
      {
        (*(void (**)(char *, const void *, uint64_t))(v64 + 24))(v36, v37, v38);
LABEL_30:
        uint64_t v66 = v34[6];
        uint64_t v67 = (char *)v32 + v66;
        uint64_t v68 = v33 + v66;
        uint64_t v69 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 24))(v67, v68, v69);
        uint64_t v70 = v34[7];
        uint64_t v71 = (char *)v32 + v70;
        uint64_t v72 = (const void *)(v33 + v70);
        uint64_t v73 = sub_10017DF08(&qword_100E63738);
        int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v73);
        int v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73);
        if (v74)
        {
          if (!v75)
          {
            uint64_t v76 = type metadata accessor for Date();
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v76 - 8) + 16))(v71, v72, v76);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
            goto LABEL_36;
          }
        }
        else
        {
          if (!v75)
          {
            uint64_t v99 = type metadata accessor for Date();
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v99 - 8) + 24))(v71, v72, v99);
LABEL_36:
            if (a1 == a2) {
              goto LABEL_51;
            }
            uint64_t v78 = v34[8];
            uint64_t v79 = (void *)((char *)v32 + v78);
            uint64_t v80 = (void *)(v33 + v78);
            sub_1001BBFC8((uint64_t)v32 + v78, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
            uint64_t v81 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v82 = swift_getEnumCaseMultiPayload();
            if (v82 == 1)
            {
              uint64_t v90 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v90 - 8) + 16))(v79, v80, v90);
            }
            else
            {
              if (v82)
              {
                memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
LABEL_51:
                uint64_t v91 = v34[9];
                uint64_t v92 = (char *)v32 + v91;
                uint64_t v93 = (char *)(v33 + v91);
                uint64_t v94 = type metadata accessor for WeatherDataOverrides();
                int v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v94);
                int v96 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94);
                if (v95)
                {
                  if (!v96)
                  {
                    uint64_t v97 = type metadata accessor for Date();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v97))
                    {
                      uint64_t v98 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v92, v93, *(void *)(*(void *)(v98 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v92, v93, v97);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v97);
                    }
                    uint64_t v103 = *(int *)(v94 + 20);
                    uint64_t v104 = &v92[v103];
                    long long v105 = &v93[v103];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v97))
                    {
                      uint64_t v106 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v104, v105, v97);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v97);
                    }
                    uint64_t v87 = (uint64_t)v92;
                    uint64_t v88 = v94;
                    goto LABEL_46;
                  }
LABEL_57:
                  size_t v23 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
                  uint64_t v24 = v92;
                  uint64_t v25 = v93;
                  goto LABEL_9;
                }
                if (v96)
                {
                  sub_1001BBFC8((uint64_t)v92, (void (*)(void))type metadata accessor for WeatherDataOverrides);
                  goto LABEL_57;
                }
                uint64_t v100 = type metadata accessor for Date();
                int v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v100);
                int v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v100);
                if (v101)
                {
                  if (!v102)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v92, v93, v100);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v100);
                    goto LABEL_71;
                  }
                }
                else
                {
                  uint64_t v107 = *(void *)(v100 - 8);
                  if (!v102)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v107 + 24))(v92, v93, v100);
LABEL_71:
                    uint64_t v109 = *(int *)(v94 + 20);
                    uint64_t v110 = (uint64_t)&v92[v109];
                    a2 = (uint64_t)&v93[v109];
                    int v111 = _s7Weather24LocationCompositionStateOwet_0(v110, 1, v100);
                    int v112 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v100);
                    if (v111)
                    {
                      if (!v112)
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16))(v110, a2, v100);
                        uint64_t v87 = v110;
                        uint64_t v88 = v100;
LABEL_46:
                        _s7Weather24LocationCompositionStateOwst_0(v87, 0, 1, v88);
                        return a1;
                      }
                    }
                    else
                    {
                      uint64_t v113 = *(void *)(v100 - 8);
                      if (!v112)
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 24))(v110, a2, v100);
                        return a1;
                      }
                      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v110, v100);
                    }
                    size_t v23 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
                    uint64_t v24 = (void *)v110;
                    goto LABEL_8;
                  }
                  (*(void (**)(char *, uint64_t))(v107 + 8))(v92, v100);
                }
                uint64_t v108 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v92, v93, *(void *)(*(void *)(v108 - 8) + 64));
                goto LABEL_71;
              }
              void *v79 = *v80;
              v79[1] = v80[1];
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_51;
          }
          sub_1001781AC((uint64_t)v71, &qword_100E63738);
        }
        uint64_t v77 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v71, v72, *(void *)(*(void *)(v77 - 8) + 64));
        goto LABEL_36;
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v38);
    }
    uint64_t v65 = sub_10017DF08(&qword_100E63730);
    memcpy(v36, v37, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_30;
  }
  sub_1001BBFC8(a1, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
LABEL_7:
  size_t v23 = *(void *)(*(void *)(a3 - 8) + 64);
  uint64_t v24 = (void *)a1;
LABEL_8:
  uint64_t v25 = (const void *)a2;
LABEL_9:
  memcpy(v24, v25, v23);
  return a1;
}

char *sub_1003C16A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, HourPrecipitationDetail))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = *(int *)(HourPrecipitationDetail + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_10017DF08(&qword_100E6E900);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    uint64_t v12 = *(int *)(HourPrecipitationDetail + 24);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
    uint64_t v15 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v16 = v15[5];
    uint64_t v17 = &v13[v16];
    uint64_t v18 = &v14[v16];
    uint64_t v19 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_10017DF08(&qword_100E63730);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
    uint64_t v21 = v15[6];
    uint64_t v22 = &v13[v21];
    size_t v23 = &v14[v21];
    uint64_t v24 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    uint64_t v25 = v15[7];
    uint64_t v26 = &v13[v25];
    uint64_t v27 = &v14[v25];
    uint64_t v28 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v30 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    uint64_t v31 = v15[8];
    uint64_t v32 = &v13[v31];
    uint64_t v33 = &v14[v31];
    uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    uint64_t v36 = v15[9];
    uint64_t v37 = &v13[v36];
    uint64_t v38 = &v14[v36];
    uint64_t v39 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = sub_10017DF08(&qword_100E63740);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v41 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v41))
      {
        uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v37, v38, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
      }
      uint64_t v43 = *(int *)(v39 + 20);
      uint64_t v44 = &v37[v43];
      uint64_t v45 = &v38[v43];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v41))
      {
        uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v44, v45, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v41);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, HourPrecipitationDetail);
  }
  return a1;
}

uint64_t sub_1003C1BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetail);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, HourPrecipitationDetail);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = *(int *)(HourPrecipitationDetail + 20);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_10017DF08(&qword_100E6E900);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      uint64_t v14 = *(int *)(HourPrecipitationDetail + 24);
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
      uint64_t v17 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v18 = v17[5];
      uint64_t v19 = (void *)(v15 + v18);
      uint64_t v20 = (const void *)(v16 + v18);
      uint64_t v21 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E63730);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
      uint64_t v42 = v17[6];
      uint64_t v43 = v15 + v42;
      uint64_t v44 = v16 + v42;
      uint64_t v45 = type metadata accessor for WeatherDataModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      uint64_t v46 = v17[7];
      uint64_t v47 = (void *)(v15 + v46);
      uint64_t v48 = (const void *)(v16 + v46);
      uint64_t v49 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
      {
        uint64_t v50 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        uint64_t v51 = type metadata accessor for Date();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 32))(v47, v48, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      }
      uint64_t v52 = v17[8];
      uint64_t v53 = (void *)(v15 + v52);
      uint64_t v54 = (const void *)(v16 + v52);
      uint64_t v55 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v56 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v56 - 8) + 32))(v53, v54, v56);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      uint64_t v57 = v17[9];
      uint64_t v58 = (char *)(v15 + v57);
      uint64_t v59 = (char *)(v16 + v57);
      uint64_t v60 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        uint64_t v61 = sub_10017DF08(&qword_100E63740);
        memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        uint64_t v62 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v62))
        {
          uint64_t v63 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v58, v59, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v58, v59, v62);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v62);
        }
        uint64_t v91 = *(int *)(v60 + 20);
        uint64_t v92 = &v58[v91];
        uint64_t v93 = &v59[v91];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v62))
        {
          uint64_t v94 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v92, v93, v62);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v62);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      }
      uint64_t v95 = a1;
      uint64_t v96 = HourPrecipitationDetail;
      goto LABEL_50;
    }
    goto LABEL_7;
  }
  if (!v8)
  {
    uint64_t v26 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(a1, a2, v26);
    uint64_t v27 = *(int *)(HourPrecipitationDetail + 20);
    uint64_t v28 = a1 + v27;
    uint64_t v29 = a2 + v27;
    uint64_t v30 = sub_10017DF08(&qword_100E6E900);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
    uint64_t v31 = *(int *)(HourPrecipitationDetail + 24);
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = a2 + v31;
    uint64_t v34 = *(void *)(a2 + v31 + 8);
    *uint64_t v32 = *(void *)(a2 + v31);
    v32[1] = v34;
    swift_bridgeObjectRelease();
    uint64_t v35 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v36 = v35[5];
    uint64_t v37 = (char *)v32 + v36;
    uint64_t v38 = (const void *)(v33 + v36);
    uint64_t v39 = type metadata accessor for Locale();
    int v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v39);
    int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v64 = *(void *)(v39 - 8);
      if (!v41)
      {
        (*(void (**)(char *, const void *, uint64_t))(v64 + 40))(v37, v38, v39);
LABEL_27:
        uint64_t v66 = v35[6];
        uint64_t v67 = (char *)v32 + v66;
        uint64_t v68 = v33 + v66;
        uint64_t v69 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
        uint64_t v70 = v35[7];
        uint64_t v71 = (char *)v32 + v70;
        uint64_t v72 = (const void *)(v33 + v70);
        uint64_t v73 = sub_10017DF08(&qword_100E63738);
        int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v73);
        int v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73);
        if (v74)
        {
          if (!v75)
          {
            uint64_t v76 = type metadata accessor for Date();
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v76 - 8) + 32))(v71, v72, v76);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
            goto LABEL_33;
          }
        }
        else
        {
          if (!v75)
          {
            uint64_t v98 = type metadata accessor for Date();
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v98 - 8) + 40))(v71, v72, v98);
LABEL_33:
            if (a1 != a2)
            {
              uint64_t v78 = v35[8];
              uint64_t v79 = (char *)v32 + v78;
              uint64_t v80 = (const void *)(v33 + v78);
              sub_1001BBFC8((uint64_t)v32 + v78, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
              uint64_t v81 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v82 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, const void *, uint64_t))(*(void *)(v82 - 8) + 32))(v79, v80, v82);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
              }
            }
            uint64_t v83 = v35[9];
            uint64_t v84 = (char *)v32 + v83;
            uint64_t v85 = (char *)(v33 + v83);
            uint64_t v86 = type metadata accessor for WeatherDataOverrides();
            int v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v86);
            int v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86);
            if (v87)
            {
              if (!v88)
              {
                uint64_t v89 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v89))
                {
                  uint64_t v90 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v84, v85, *(void *)(*(void *)(v90 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v84, v85, v89);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v89);
                }
                uint64_t v102 = *(int *)(v86 + 20);
                uint64_t v103 = &v84[v102];
                uint64_t v104 = &v85[v102];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v89))
                {
                  uint64_t v105 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v103, v104, v89);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v89);
                }
                uint64_t v95 = (uint64_t)v84;
                uint64_t v96 = v86;
                goto LABEL_50;
              }
              goto LABEL_43;
            }
            if (v88)
            {
              sub_1001BBFC8((uint64_t)v84, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_43:
              size_t v23 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
              uint64_t v24 = v84;
              uint64_t v25 = v85;
              goto LABEL_9;
            }
            uint64_t v99 = type metadata accessor for Date();
            int v100 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v99);
            int v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v99);
            if (v100)
            {
              if (!v101)
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v84, v85, v99);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v99);
LABEL_65:
                uint64_t v108 = *(int *)(v86 + 20);
                uint64_t v109 = (uint64_t)&v84[v108];
                a2 = (uint64_t)&v85[v108];
                int v110 = _s7Weather24LocationCompositionStateOwet_0(v109, 1, v99);
                int v111 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v99);
                if (v110)
                {
                  if (!v111)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 32))(v109, a2, v99);
                    uint64_t v95 = v109;
                    uint64_t v96 = v99;
LABEL_50:
                    _s7Weather24LocationCompositionStateOwst_0(v95, 0, 1, v96);
                    return a1;
                  }
                }
                else
                {
                  uint64_t v112 = *(void *)(v99 - 8);
                  if (!v111)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 40))(v109, a2, v99);
                    return a1;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v109, v99);
                }
                size_t v23 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
                uint64_t v24 = (void *)v109;
                goto LABEL_8;
              }
            }
            else
            {
              uint64_t v106 = *(void *)(v99 - 8);
              if (!v101)
              {
                (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v84, v85, v99);
                goto LABEL_65;
              }
              (*(void (**)(char *, uint64_t))(v106 + 8))(v84, v99);
            }
            uint64_t v107 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v84, v85, *(void *)(*(void *)(v107 - 8) + 64));
            goto LABEL_65;
          }
          sub_1001781AC((uint64_t)v71, &qword_100E63738);
        }
        uint64_t v77 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v71, v72, *(void *)(*(void *)(v77 - 8) + 64));
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v39);
    }
    uint64_t v65 = sub_10017DF08(&qword_100E63730);
    memcpy(v37, v38, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_27;
  }
  sub_1001BBFC8(a1, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput.Input);
LABEL_7:
  size_t v23 = *(void *)(*(void *)(a3 - 8) + 64);
  uint64_t v24 = (void *)a1;
LABEL_8:
  uint64_t v25 = (const void *)a2;
LABEL_9:
  memcpy(v24, v25, v23);
  return a1;
}

uint64_t sub_1003C2908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C291C);
}

uint64_t sub_1003C291C(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, HourPrecipitationDetail);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1003C2964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C2978);
}

uint64_t sub_1003C2978(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, HourPrecipitationDetail);
}

uint64_t sub_1003C29D4(uint64_t a1)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, HourPrecipitationDetail);
}

uint64_t sub_1003C2A18(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetail = type metadata accessor for NextHourPrecipitationDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, HourPrecipitationDetail);
}

uint64_t type metadata accessor for NextHourPrecipitationDetailInput(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E726D8);
}

uint64_t sub_1003C2A84()
{
  uint64_t result = type metadata accessor for NextHourPrecipitationDetailInput.Input(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1003C2AFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (uint64_t *)((char *)a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *(uint64_t *)((char *)a2 + v12 + 8);
  *uint64_t v13 = *(uint64_t *)((char *)a2 + v12);
  v13[1] = v15;
  uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = &v14[v17];
  uint64_t v20 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_10017DF08(&qword_100E63730);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v23 = v16[6];
  uint64_t v24 = (char *)v13 + v23;
  uint64_t v25 = &v14[v23];
  uint64_t v26 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = v16[7];
  uint64_t v28 = (char *)v13 + v27;
  uint64_t v29 = &v14[v27];
  uint64_t v30 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    uint64_t v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  uint64_t v33 = v16[8];
  uint64_t v34 = (void *)((char *)v13 + v33);
  uint64_t v35 = &v14[v33];
  uint64_t v36 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v39 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v38 = *((void *)v35 + 1);
    *uint64_t v34 = *(void *)v35;
    v34[1] = v38;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_15:
  uint64_t v40 = v16[9];
  int v41 = (char *)v13 + v40;
  uint64_t v42 = &v14[v40];
  uint64_t v43 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E63740);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v45))
    {
      uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v41, v42, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v45);
    }
    uint64_t v47 = *(int *)(v43 + 20);
    uint64_t v48 = &v41[v47];
    uint64_t v49 = &v42[v47];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v45))
    {
      uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v48, v49, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v45);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  return a1;
}

uint64_t sub_1003C3034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v9 = v7 + v8[5];
  uint64_t v10 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = v7 + v8[6];
  uint64_t v12 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = v7 + v8[7];
  uint64_t v14 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
  {
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  }
  uint64_t v16 = v7 + v8[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = v7 + v8[9];
  uint64_t v20 = type metadata accessor for WeatherDataOverrides();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v19, 1, v20);
  if (!result)
  {
    uint64_t v22 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v19, v22);
    }
    uint64_t v23 = v19 + *(int *)(v20 + 20);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v23, 1, v22);
    if (!result)
    {
      uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
      return v24(v23, v22);
    }
  }
  return result;
}

uint64_t sub_1003C333C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = v14;
  uint64_t v15 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = (char *)v12 + v16;
  uint64_t v18 = (const void *)(v13 + v16);
  uint64_t v19 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_10017DF08(&qword_100E63730);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v21 = v15[6];
  uint64_t v22 = (char *)v12 + v21;
  uint64_t v23 = v13 + v21;
  uint64_t v24 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = v15[7];
  uint64_t v26 = (char *)v12 + v25;
  uint64_t v27 = (const void *)(v13 + v25);
  uint64_t v28 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = type metadata accessor for Date();
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(v26, v27, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v31 = v15[8];
  uint64_t v32 = (void *)((char *)v12 + v31);
  uint64_t v33 = (void *)(v13 + v31);
  uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v37 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v32, v33, v37);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v36 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v36;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_13:
  uint64_t v38 = v15[9];
  uint64_t v39 = (char *)v12 + v38;
  uint64_t v40 = (char *)(v13 + v38);
  uint64_t v41 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
  {
    uint64_t v42 = sub_10017DF08(&qword_100E63740);
    memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    uint64_t v43 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v43))
    {
      uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v39, v40, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v43);
    }
    uint64_t v45 = *(int *)(v41 + 20);
    uint64_t v46 = &v39[v45];
    uint64_t v47 = &v40[v45];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v43))
    {
      uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v46, v47, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v43);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
  }
  return a1;
}

uint64_t sub_1003C3824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v15 = v14[5];
  uint64_t v16 = (char *)v12 + v15;
  uint64_t v17 = (const void *)(v13 + v15);
  uint64_t v18 = type metadata accessor for Locale();
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v21 = *(void *)(v18 - 8);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v18);
LABEL_6:
    uint64_t v22 = sub_10017DF08(&qword_100E63730);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v21 + 24))(v16, v17, v18);
LABEL_7:
  uint64_t v23 = v14[6];
  uint64_t v24 = (char *)v12 + v23;
  uint64_t v25 = v13 + v23;
  uint64_t v26 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = v14[7];
  uint64_t v28 = (char *)v12 + v27;
  uint64_t v29 = (const void *)(v13 + v27);
  uint64_t v30 = sub_10017DF08(&qword_100E63738);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      uint64_t v33 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    sub_1001781AC((uint64_t)v28, &qword_100E63738);
LABEL_12:
    uint64_t v34 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v52 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v52 - 8) + 24))(v28, v29, v52);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v35 = v14[8];
  uint64_t v36 = (void *)((char *)v12 + v35);
  uint64_t v37 = (void *)(v13 + v35);
  sub_1001BBFC8((uint64_t)v12 + v35, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v38 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v40 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v36, v37, v40);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v36 = *v37;
    v36[1] = v37[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_20:
  uint64_t v41 = v14[9];
  uint64_t v42 = (char *)v12 + v41;
  uint64_t v43 = (char *)(v13 + v41);
  uint64_t v44 = type metadata accessor for WeatherDataOverrides();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      uint64_t v47 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v47))
      {
        uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v42, v43, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v42, v43, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v47);
      }
      uint64_t v56 = *(int *)(v44 + 20);
      uint64_t v57 = &v42[v56];
      uint64_t v58 = &v43[v56];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v47))
      {
        uint64_t v59 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v57, v58, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v47);
      }
      uint64_t v60 = (uint64_t)v42;
      uint64_t v61 = v44;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v46)
  {
    sub_1001BBFC8((uint64_t)v42, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v49 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v50 = v42;
    uint64_t v51 = v43;
    goto LABEL_27;
  }
  uint64_t v53 = type metadata accessor for Date();
  int v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v53);
  int v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v53);
  if (!v54)
  {
    uint64_t v63 = *(void *)(v53 - 8);
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v42, v43, v53);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v53);
    goto LABEL_42;
  }
  if (v55)
  {
LABEL_42:
    uint64_t v64 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v42, v43, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v42, v43, v53);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v53);
LABEL_43:
  uint64_t v65 = *(int *)(v44 + 20);
  uint64_t v66 = (uint64_t)&v42[v65];
  uint64_t v67 = (uint64_t)&v43[v65];
  int v68 = _s7Weather24LocationCompositionStateOwet_0(v66, 1, v53);
  int v69 = _s7Weather24LocationCompositionStateOwet_0(v67, 1, v53);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v66, v67, v53);
      uint64_t v60 = v66;
      uint64_t v61 = v53;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v60, 0, 1, v61);
      return a1;
    }
  }
  else
  {
    uint64_t v70 = *(void *)(v53 - 8);
    if (!v69)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 24))(v66, v67, v53);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v66, v53);
  }
  size_t v49 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v50 = (void *)v66;
  uint64_t v51 = (const void *)v67;
LABEL_27:
  memcpy(v50, v51, v49);
  return a1;
}

uint64_t sub_1003C40A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v15 = v14[5];
  uint64_t v16 = (void *)(v12 + v15);
  uint64_t v17 = (const void *)(v13 + v15);
  uint64_t v18 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E63730);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v20 = v14[6];
  uint64_t v21 = v12 + v20;
  uint64_t v22 = v13 + v20;
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = v14[7];
  uint64_t v25 = (void *)(v12 + v24);
  uint64_t v26 = (const void *)(v13 + v24);
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    uint64_t v28 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v25, v26, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  uint64_t v30 = v14[8];
  int v31 = (void *)(v12 + v30);
  int v32 = (const void *)(v13 + v30);
  uint64_t v33 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  uint64_t v35 = v14[9];
  uint64_t v36 = (char *)(v12 + v35);
  uint64_t v37 = (char *)(v13 + v35);
  uint64_t v38 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
  {
    uint64_t v39 = sub_10017DF08(&qword_100E63740);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v40 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v40))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v36, v37, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v40);
    }
    uint64_t v42 = *(int *)(v38 + 20);
    uint64_t v43 = &v36[v42];
    uint64_t v44 = &v37[v42];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v40))
    {
      uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v43, v44, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v40);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
  }
  return a1;
}

uint64_t sub_1003C4560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = (char *)v12 + v16;
  uint64_t v18 = (const void *)(v13 + v16);
  uint64_t v19 = type metadata accessor for Locale();
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19);
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v22 = *(void *)(v19 - 8);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v19);
LABEL_6:
    uint64_t v23 = sub_10017DF08(&qword_100E63730);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v22 + 40))(v17, v18, v19);
LABEL_7:
  uint64_t v24 = v15[6];
  uint64_t v25 = (char *)v12 + v24;
  uint64_t v26 = v13 + v24;
  uint64_t v27 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = v15[7];
  uint64_t v29 = (char *)v12 + v28;
  uint64_t v30 = (const void *)(v13 + v28);
  uint64_t v31 = sub_10017DF08(&qword_100E63738);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      uint64_t v34 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v29, v30, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    sub_1001781AC((uint64_t)v29, &qword_100E63738);
LABEL_12:
    uint64_t v35 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v52 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v52 - 8) + 40))(v29, v30, v52);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v36 = v15[8];
    uint64_t v37 = (char *)v12 + v36;
    uint64_t v38 = (const void *)(v13 + v36);
    sub_1001BBFC8((uint64_t)v12 + v36, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v39 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
  }
  uint64_t v41 = v15[9];
  uint64_t v42 = (char *)v12 + v41;
  uint64_t v43 = (char *)(v13 + v41);
  uint64_t v44 = type metadata accessor for WeatherDataOverrides();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      uint64_t v47 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v47))
      {
        uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v42, v43, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v42, v43, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v47);
      }
      uint64_t v56 = *(int *)(v44 + 20);
      uint64_t v57 = &v42[v56];
      uint64_t v58 = &v43[v56];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v47))
      {
        uint64_t v59 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v57, v58, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v47);
      }
      uint64_t v60 = (uint64_t)v42;
      uint64_t v61 = v44;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v46)
  {
    sub_1001BBFC8((uint64_t)v42, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v49 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v50 = v42;
    uint64_t v51 = v43;
    goto LABEL_24;
  }
  uint64_t v53 = type metadata accessor for Date();
  int v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v53);
  int v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v53);
  if (!v54)
  {
    uint64_t v63 = *(void *)(v53 - 8);
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 40))(v42, v43, v53);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v53);
    goto LABEL_39;
  }
  if (v55)
  {
LABEL_39:
    uint64_t v64 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v42, v43, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v42, v43, v53);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v53);
LABEL_40:
  uint64_t v65 = *(int *)(v44 + 20);
  uint64_t v66 = (uint64_t)&v42[v65];
  uint64_t v67 = (uint64_t)&v43[v65];
  int v68 = _s7Weather24LocationCompositionStateOwet_0(v66, 1, v53);
  int v69 = _s7Weather24LocationCompositionStateOwet_0(v67, 1, v53);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v66, v67, v53);
      uint64_t v60 = v66;
      uint64_t v61 = v53;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v60, 0, 1, v61);
      return a1;
    }
  }
  else
  {
    uint64_t v70 = *(void *)(v53 - 8);
    if (!v69)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 40))(v66, v67, v53);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v66, v53);
  }
  size_t v49 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v50 = (void *)v66;
  uint64_t v51 = (const void *)v67;
LABEL_24:
  memcpy(v50, v51, v49);
  return a1;
}

uint64_t sub_1003C4DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C4DB8);
}

uint64_t sub_1003C4DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6E900);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = type metadata accessor for WeatherData(0);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1003C4E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C4E70);
}

uint64_t sub_1003C4E70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6E900);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for WeatherData(0);
      uint64_t v14 = *(int *)(a4 + 24);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_1003C4F1C()
{
  type metadata accessor for Location();
  if (v0 <= 0x3F)
  {
    sub_10001A1C4();
    if (v1 <= 0x3F)
    {
      type metadata accessor for WeatherData(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1003C5020(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1003C5080(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

id sub_1003C50E0()
{
  sub_10020D948(v0, (uint64_t)v9);
  uint64_t v1 = sub_1000DF0C4((uint64_t)v9, v10);
  __n128 v2 = __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t **)&v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t **, __n128))(v5 + 16))(v4, v2);
  id v6 = sub_1003C5ABC(*v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v9);
  return v6;
}

id sub_1003C51C0()
{
  id v0 = [self systemFontOfSize:60.0];
  id v1 = [self configurationWithFont:v0 scale:-1];

  sub_10013CAA4();
  id v52 = v1;
  id v2 = sub_1003C55B4(0x6E6F697461636F6CLL, 0xED00006C6C69662ELL, v1);
  uint64_t v3 = self;
  id v4 = [v3 mainBundle];
  sub_10017C720();
  uint64_t v11 = sub_10017CB84(0xD000000000000015, 0x8000000100C9D880, v5, v6, v7, v8, v9, v10);
  uint64_t v13 = v12;

  id v14 = [v3 mainBundle];
  sub_10017C720();
  uint64_t v21 = sub_10017CB84(0x1000000000000071, 0x8000000100C9D8E0, v15, v16, v17, v18, v19, v20);
  uint64_t v23 = v22;

  id v24 = objc_allocWithZone((Class)OBWelcomeController);
  id v51 = v2;
  id v25 = sub_1003C59A8(v11, v13, v21, v23, v2);
  id v26 = [self boldButton];
  id v27 = [v3 mainBundle];
  sub_10017C720();
  uint64_t v34 = sub_100163324(0x65756E69746E6F43, 0xE800000000000000, v28, v29, v30, v31, v32, v33);
  uint64_t v36 = v35;

  sub_1003C5A48(v34, v36, 0, v26);
  sub_10017DF08(&qword_100E727F8);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v26 addTarget:v53 action:"continueButtonTapped" forControlEvents:64];

  id v37 = [v25 buttonTray];
  [v37 addButton:v26];

  id v38 = [self linkButton];
  id v39 = [v3 mainBundle];
  sub_10017C720();
  uint64_t v46 = sub_100163324(0x776F4E20746F4ELL, 0xE700000000000000, v40, v41, v42, v43, v44, v45);
  uint64_t v48 = v47;

  sub_1003C5A48(v46, v48, 0, v38);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v38 addTarget:v53 action:"notNowButtonTapped" forControlEvents:64];

  id v49 = [v25 buttonTray];
  [v49 addButton:v38];

  [v25 setModalPresentationStyle:2];
  return v25;
}

id sub_1003C55B4(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [(id)swift_getObjCClassFromMetadata() systemImageNamed:v4 withConfiguration:a3];

  return v5;
}

id sub_1003C5624()
{
  return sub_1003C51C0();
}

id sub_1003C5644@<X0>(void *a1@<X8>)
{
  id result = sub_1003C50E0();
  *a1 = result;
  return result;
}

uint64_t sub_1003C5670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1003C595C();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1003C56D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1003C595C();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1003C5738()
{
}

uint64_t sub_1003C5760()
{
  sub_1001B1E64((void *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor), *(void *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor + 24));
  return sub_1003F617C();
}

uint64_t sub_1003C57E0()
{
  id v1 = (void *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor + 32);
  sub_1001B1E64(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 16))(v2);
}

void sub_1003C587C()
{
}

uint64_t type metadata accessor for NotificationsOptInLocationPermissionView.Coordinator()
{
  return self;
}

ValueMetadata *type metadata accessor for NotificationsOptInLocationPermissionView()
{
  return &type metadata for NotificationsOptInLocationPermissionView;
}

unint64_t sub_1003C5904()
{
  unint64_t result = qword_100E727E0;
  if (!qword_100E727E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E727E0);
  }
  return result;
}

void *sub_1003C5950()
{
  return &protocol witness table for Never;
}

unint64_t sub_1003C595C()
{
  unint64_t result = qword_100E727E8;
  if (!qword_100E727E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E727E8);
  }
  return result;
}

id sub_1003C59A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a4)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  id v10 = [v5 initWithTitle:v8 detailText:v9 icon:a5];

  return v10;
}

void sub_1003C5A48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a4 setTitle:v6 forState:a3];
}

id sub_1003C5ABC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  v14[3] = v1;
  v14[4] = &off_100E15018;
  v14[0] = a1;
  uint64_t v2 = (objc_class *)type metadata accessor for NotificationsOptInLocationPermissionView.Coordinator();
  id v3 = objc_allocWithZone(v2);
  uint64_t v4 = sub_1000DF0C4((uint64_t)v14, v1);
  __n128 v5 = __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v12 - v6);
  (*(void (**)(char *, __n128))(v8 + 16))((char *)&v12 - v6, v5);
  uint64_t v9 = *v7;
  void v13[3] = v1;
  void v13[4] = &off_100E15018;
  v13[0] = v9;
  sub_10020D948((uint64_t)v13, (uint64_t)v3 + OBJC_IVAR____TtCV7Weather40NotificationsOptInLocationPermissionView11Coordinator_interactor);
  v12.receiver = v3;
  v12.super_class = v2;
  id v10 = [super init];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
  return v10;
}

uint64_t sub_1003C5C14@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728B0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64868);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for ConditionDetailDynamicContentViewBuilder();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_1000DF0C4((uint64_t)v21, v22);
    __chkstk_darwin(v7);
    uint64_t v9 = (void *)((char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    uint64_t v11 = *v9;
    uint64_t v12 = type metadata accessor for ConditionDetailInteractor();
    v20[3] = v12;
    v20[4] = &off_100E11188;
    v20[0] = v11;
    uint64_t v13 = type metadata accessor for ConditionDetailModule();
    id v14 = (void *)swift_allocObject();
    uint64_t v15 = sub_1000DF0C4((uint64_t)v20, v12);
    __chkstk_darwin(v15);
    uint64_t v17 = (void *)((char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    uint64_t v19 = *v17;
    void v14[5] = v12;
    void v14[6] = &off_100E11188;
    void v14[2] = v19;
    v14[7] = v5;
    v14[8] = v6;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    a2[3] = v13;
    a2[4] = &off_100E31908;
    *a2 = v14;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003C5EB8()
{
  type metadata accessor for ConditionDetailDynamicContentViewBuilder();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728A8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728B0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728B8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728C0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728C8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728D0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728D8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728E0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728E8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64868);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728F0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E728F8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E6FC50);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E72900);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_1003C632C()
{
  type metadata accessor for ConditionDetailDynamicContentViewBuilder();

  return swift_allocObject();
}

uint64_t sub_1003C6360@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (result)
  {
    uint64_t v5 = Tracker.chain(name:identifier:)();
    swift_release();
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647E0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      a2[3] = (uint64_t)&type metadata for ConditionDetailTracker;
      a2[4] = (uint64_t)&off_100E325C0;
      uint64_t v6 = swift_allocObject();
      *a2 = v6;
      *(void *)(v6 + 16) = v5;
      return sub_1001262E4(&v7, v6 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003C64A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v25;
  if (v25)
  {
    uint64_t v21 = v26;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E728A8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v24)
    {
      uint64_t v6 = sub_1000DF0C4((uint64_t)v23, v24);
      __chkstk_darwin(v6);
      uint64_t v8 = (_OWORD *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v9 + 16))(v8);
      v22[3] = &type metadata for ConditionDetailTracker;
      v22[4] = &off_100E325C0;
      uint64_t v10 = (_OWORD *)swift_allocObject();
      v22[0] = v10;
      long long v11 = v8[1];
      v10[1] = *v8;
      v10[2] = v11;
      uint64_t v10[3] = v8[2];
      uint64_t v12 = type metadata accessor for ConditionDetailInteractor();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v22, (uint64_t)&type metadata for ConditionDetailTracker);
      __chkstk_darwin(v14);
      uint64_t v16 = (_OWORD *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v17 + 16))(v16);
      v13[7] = &type metadata for ConditionDetailTracker;
      v13[8] = &off_100E325C0;
      uint64_t v18 = (_OWORD *)swift_allocObject();
      long long v19 = v16[1];
      v18[1] = *v16;
      v18[2] = v19;
      _OWORD v18[3] = v16[2];
      v13[2] = v5;
      void v13[3] = v21;
      void v13[4] = v18;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
      a2[3] = v12;
      a2[4] = &off_100E11188;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003C6758@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728A0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v13)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E6FC38);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v11)
    {
      uint64_t v5 = sub_1000DF0C4((uint64_t)v12, v13);
      __chkstk_darwin(v5);
      uint64_t v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v8 + 16))(v7);
      uint64_t v9 = sub_1003C8634(*v7, &v10);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
      uint64_t result = type metadata accessor for ConditionDetailInputFactory();
      a2[3] = result;
      a2[4] = &off_100E13388;
      *a2 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003C68E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC48);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v70)
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v68)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72950);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v66)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v64)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  type metadata accessor for ConditionDetailLegendViewModelFactory();
  uint64_t v6 = swift_allocObject();
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v62[3])
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72958);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v61[3])
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v60)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728F8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v58)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC50);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v56)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72900);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v54)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v48 = v6;
  uint64_t v49 = v5;
  uint64_t v50 = a2;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v52)
  {
    uint64_t v7 = sub_1000DF0C4((uint64_t)v69, v70);
    _OWORD v47[8] = v47;
    __chkstk_darwin(v7);
    uint64_t v9 = (void *)((char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    uint64_t v11 = sub_1000DF0C4((uint64_t)v67, v68);
    v47[7] = v47;
    __chkstk_darwin(v11);
    uint64_t v13 = (void *)((char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v14 + 16))(v13);
    uint64_t v15 = sub_1000DF0C4((uint64_t)v65, v66);
    v47[6] = v47;
    __chkstk_darwin(v15);
    uint64_t v17 = (void *)((char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    uint64_t v19 = sub_1000DF0C4((uint64_t)v59, v60);
    v47[5] = v47;
    __chkstk_darwin(v19);
    uint64_t v21 = (uint64_t **)((char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **))(v22 + 16))(v21);
    uint64_t v23 = sub_1000DF0C4((uint64_t)v57, v58);
    v47[4] = v47;
    __chkstk_darwin(v23);
    uint64_t v25 = (char *)v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v26 + 16))(v25);
    uint64_t v27 = sub_1000DF0C4((uint64_t)v55, v56);
    v47[3] = v47;
    __chkstk_darwin(v27);
    uint64_t v29 = (char *)v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v30 + 16))(v29);
    uint64_t v31 = sub_1000DF0C4((uint64_t)v53, v54);
    v47[2] = v47;
    __chkstk_darwin(v31);
    uint64_t v33 = (char *)v47 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v34 + 16))(v33);
    uint64_t v35 = sub_1000DF0C4((uint64_t)v51, v52);
    v47[1] = v47;
    __chkstk_darwin(v35);
    id v37 = (void ***)((char *)v47 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(void ***))(v38 + 16))(v37);
    uint64_t v39 = *v9;
    uint64_t v40 = *v13;
    uint64_t v41 = *v17;
    uint64_t v42 = *v21;
    uint64_t v43 = *v37;
    uint64_t v44 = v48;
    swift_retain();
    uint64_t v45 = sub_1003C8C38(v39, v40, v49, v41, (uint64_t)v63, v44, (uint64_t)v62, (uint64_t)v61, v42, (uint64_t)v25, (uint64_t)v29, (uint64_t)v33, v43);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v51);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v53);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v55);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v57);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v59);
    swift_release();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v65);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v67);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v69);
    uint64_t result = type metadata accessor for ConditionDetailViewModelFactory(0);
    uint64_t v46 = v50;
    uint64_t v50[3] = result;
    v46[4] = &off_100E366F0;
    void *v46 = v45;
    return result;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1003C7248@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ChanceOfRainChartHeaderStringBuilder();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - v9;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728F0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v32)
  {
    uint64_t v27 = v8;
    uint64_t v28 = v4;
    uint64_t v29 = a2;
    uint64_t v12 = type metadata accessor for HumidityChartHeaderStringBuilder();
    swift_allocObject();
    uint64_t v13 = HumidityChartHeaderStringBuilder.init(humidityTitleStringBuilder:)();
    uint64_t v32 = v12;
    uint64_t v33 = &protocol witness table for HumidityChartHeaderStringBuilder;
    *(void *)&long long v31 = v13;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E72948);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v30)
    {
      type metadata accessor for PrecipitationTotalChartHeaderStringBuilder();
      swift_allocObject();
      uint64_t v26 = PrecipitationTotalChartHeaderStringBuilder.init(precipitationTotalHeroStringBuilder:)();
      type metadata accessor for PressureChartHeaderStringBuilder();
      swift_allocObject();
      uint64_t v25 = PressureChartHeaderStringBuilder.init()();
      type metadata accessor for TemperatureChartHeaderStringBuilder();
      swift_allocObject();
      uint64_t v24 = TemperatureChartHeaderStringBuilder.init()();
      type metadata accessor for TemperatureFeelsLikeChartHeaderStringBuilder();
      swift_allocObject();
      uint64_t v14 = TemperatureFeelsLikeChartHeaderStringBuilder.init()();
      type metadata accessor for UVIndexChartHeaderStringBuilder();
      swift_allocObject();
      uint64_t v15 = UVIndexChartHeaderStringBuilder.init()();
      type metadata accessor for VisibilityChartHeaderStringBuilder();
      swift_allocObject();
      uint64_t v16 = VisibilityChartHeaderStringBuilder.init()();
      type metadata accessor for WindChartHeaderStringBuilder();
      swift_allocObject();
      uint64_t v17 = WindChartHeaderStringBuilder.init()();
      ChanceOfRainChartHeaderStringBuilder.init()();
      uint64_t v18 = type metadata accessor for ConditionDetailChartHeaderViewModelFactory();
      uint64_t v19 = (void *)swift_allocObject();
      uint64_t v21 = (uint64_t)v27;
      uint64_t v20 = v28;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v27, v10, v28);
      uint64_t v22 = sub_1003C9410(&v31, v26, v25, v24, v14, v15, v16, v17, v21, v19);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v20);
      uint64_t v23 = v29;
      void v29[3] = v18;
      v23[4] = &off_100E31A48;
      *uint64_t v23 = v22;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003C756C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72918);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v45)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728E8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v43)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72920);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v41)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72928);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v39)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72930);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v37)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72938);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v35)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72940);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v33)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v31)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v29[3])
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v27)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v28[3] = &type metadata for TemperatureComparisonTextBuilder;
  v28[4] = &off_100E2CD60;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v25)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v26[3] = &type metadata for HumidityComparisonTextBuilder;
  v26[4] = &off_100E16248;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v23)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  void v24[4] = &off_100E2F910;
  v24[3] = &type metadata for VisibilityComparisonTextBuilder;
  v24[0] = v23;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v21 = &type metadata for WindComparisonTextBuilder;
  uint64_t v22 = &off_100E17618;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v15)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v17 = &type metadata for UVIndexComparisonTextBuilder;
  uint64_t v18 = &off_100E3ACA8;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  char v5 = v14;
  if (v14 != 2)
  {
    uint64_t v6 = sub_1000DF0C4((uint64_t)v42, v43);
    __chkstk_darwin(v6);
    uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v8);
    *(void *)&long long v12 = v26;
    *((void *)&v12 + 1) = v24;
    *(void *)&long long v11 = v29;
    *((void *)&v11 + 1) = v28;
    uint64_t v10 = sub_1003C957C(&v44, (uint64_t)v8, &v40, &v38, &v36, &v34, &v32, &v30, v11, v12, &v20, &v16, v5 & 1);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v42);
    uint64_t result = type metadata accessor for ConditionDetailPlatterViewModelFactory();
    a2[3] = result;
    a2[4] = (uint64_t)&off_100E120D8;
    *a2 = v10;
    return result;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1003C7AF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72910);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for PrecipitationTotalConditionDetailPlatterViewModelFactory();
    uint64_t v5 = swift_allocObject();
    *(unsigned char *)(v5 + 56) = 0;
    uint64_t result = sub_1001262E4(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E24B98;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C7B9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ConstantConditionsStringBuilder();
  uint64_t result = ConstantConditionsStringBuilder.__allocating_init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for ConstantConditionsStringBuilder;
  *a1 = result;
  return result;
}

uint64_t sub_1003C7BDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72908);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for UVIDescriptorViewModelFactory;
    a2[4] = (uint64_t)&off_100E0C580;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_1001262E4(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C7C80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for VisibilityFormatter();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C7CDC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728B8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for ConditionDetailInputFactory();
  char v15 = &off_100E13388;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1003C8260;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728C0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for ConditionDetailViewModelFactory(0);
    char v15 = &off_100E366F0;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64868);
    swift_allocObject();
    return sub_100259C6C(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_1003C82A0, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003C7F60@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10039D6EC(a1, a3);
}

uint64_t sub_1003C7FAC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100A9839C(a1, a3);
}

uint64_t sub_1003C7FF8@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for HumidityTitleStringBuilder();
  a1[4] = (uint64_t)&protocol witness table for HumidityTitleStringBuilder;
  sub_100170694(a1);
  return HumidityTitleStringBuilder.init()();
}

uint64_t sub_1003C803C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728F0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for LollipopDetailViewModelFactory;
    a2[4] = (uint64_t)&off_100E17858;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_1001262E4(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003C80E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for LollipopDataFactory;
    a2[4] = (uint64_t)&off_100E31D40;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_1001262E4(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}