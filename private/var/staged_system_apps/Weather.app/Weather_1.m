uint64_t sub_1000B9594(void *a1)
{
  uint64_t v1;

  return sub_1000B95B0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000B95B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_1001B1E64(a1, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a2, a3, v5, v6);
}

void sub_1000B962C()
{
}

void sub_1000B9650()
{
  sub_100162EA0();
  uint64_t v32 = v2;
  uint64_t v33 = v3;
  uint64_t v34 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E855D0);
  uint64_t v6 = sub_100109308(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for WeatherNetworkActivity.Label();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_10016279C();
  uint64_t v16 = type metadata accessor for WeatherNetworkActivity.Domain();
  sub_100179C0C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity)
    && (uint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId + 8)) != 0
    && (*(void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId) == v32
      ? (BOOL v23 = v22 == v33)
      : (BOOL v23 = 0),
        v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v21, enum case for WeatherNetworkActivity.Domain.weather(_:), v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v1, v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_weatherLabel, v12);
    type metadata accessor for UUID();
    sub_100185F14((uint64_t)v11, 1);
    swift_retain();
    NWActivity.token.getter();
    sub_100185F14((uint64_t)v9, 0);
    uint64_t v24 = v34;
    WeatherNetworkActivity.init(domain:label:token:parentToken:)();
    swift_release();
    uint64_t v25 = type metadata accessor for WeatherNetworkActivity();
    _s7Weather24LocationCompositionStateOwst_0(v24, 0, 1, v25);
    sub_100162694();
  }
  else
  {
    type metadata accessor for WeatherNetworkActivity();
    sub_100162694();
    _s7Weather24LocationCompositionStateOwst_0(v26, v27, v28, v29);
  }
}

uint64_t initializeBufferWithCopyOfBuffer for LocationHeaderViewGradientBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1000B9914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v428 = a1;
  uint64_t v378 = sub_10017DF08(&qword_100E831E8);
  __chkstk_darwin(v378);
  v325 = (char *)&v253 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for WindComponentViewModel();
  uint64_t v318 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  v320 = (char *)&v253 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = v4;
  __chkstk_darwin(v3);
  v324 = (char *)&v253 - v5;
  uint64_t v375 = sub_10017DF08(&qword_100E831F0);
  __chkstk_darwin(v375);
  uint64_t v376 = (uint64_t)&v253 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v408 = sub_10017DF08(&qword_100E831F8);
  __chkstk_darwin(v408);
  v377 = (char *)&v253 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v374 = sub_10017DF08(&qword_100E83200);
  __chkstk_darwin(v374);
  v323 = (char *)&v253 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v373 = sub_10017DF08(&qword_100E83208);
  __chkstk_darwin(v373);
  v322 = (char *)&v253 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UVIndexComponentViewModel();
  uint64_t v310 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  v312 = (char *)&v253 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v311 = v12;
  __chkstk_darwin(v11);
  v321 = (char *)&v253 - v13;
  uint64_t v404 = sub_10017DF08(&qword_100E83210);
  __chkstk_darwin(v404);
  uint64_t v406 = (uint64_t)&v253 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = sub_10017DF08(&qword_100E83218);
  __chkstk_darwin(v370);
  uint64_t v371 = (uint64_t)&v253 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v405 = sub_10017DF08(&qword_100E83220);
  __chkstk_darwin(v405);
  v372 = (char *)&v253 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v427 = sub_10017DF08(&qword_100E83228);
  __chkstk_darwin(v427);
  v407 = (char *)&v253 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v368 = sub_10017DF08(&qword_100E83230);
  __chkstk_darwin(v368);
  v313 = (char *)&v253 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v367 = sub_10017DF08(&qword_100E83238);
  __chkstk_darwin(v367);
  v317 = (char *)&v253 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v316 = type metadata accessor for SunriseSunsetViewModel();
  uint64_t v315 = *(void *)(v316 - 8);
  uint64_t v20 = __chkstk_darwin(v316);
  v305 = (char *)&v253 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = v21;
  __chkstk_darwin(v20);
  v314 = (char *)&v253 - v22;
  uint64_t v364 = sub_10017DF08(&qword_100E83240);
  __chkstk_darwin(v364);
  uint64_t v365 = (uint64_t)&v253 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v403 = sub_10017DF08(&qword_100E83248);
  __chkstk_darwin(v403);
  v366 = (char *)&v253 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v363 = sub_10017DF08(&qword_100E83250);
  __chkstk_darwin(v363);
  v309 = (char *)&v253 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for SevereAlertComponentViewModel();
  uint64_t v296 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  v298 = (char *)&v253 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = v28;
  __chkstk_darwin(v27);
  v307 = (char *)&v253 - v29;
  uint64_t v362 = sub_10017DF08(&qword_100E83258);
  __chkstk_darwin(v362);
  v302 = (char *)&v253 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v369 = sub_10017DF08(&qword_100E83260);
  uint64_t v308 = *(void *)(v369 - 8);
  uint64_t v31 = __chkstk_darwin(v369);
  v300 = (char *)&v253 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v306 = (char *)&v253 - v33;
  uint64_t v399 = sub_10017DF08(&qword_100E83268);
  __chkstk_darwin(v399);
  uint64_t v401 = (uint64_t)&v253 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v358 = sub_10017DF08(&qword_100E83270);
  __chkstk_darwin(v358);
  uint64_t v360 = (uint64_t)&v253 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v400 = sub_10017DF08(&qword_100E83278);
  __chkstk_darwin(v400);
  v361 = (char *)&v253 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v418 = sub_10017DF08(&qword_100E83280);
  __chkstk_darwin(v418);
  v402 = (char *)&v253 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v357 = sub_10017DF08(&qword_100E83288);
  __chkstk_darwin(v357);
  v303 = (char *)&v253 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v356 = sub_10017DF08(&qword_100E83290);
  __chkstk_darwin(v356);
  v301 = (char *)&v253 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for PressureComponentViewModel();
  uint64_t v289 = *(void *)(v40 - 8);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  v291 = (char *)&v253 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = v42;
  __chkstk_darwin(v41);
  v299 = (char *)&v253 - v43;
  uint64_t v352 = sub_10017DF08(&qword_100E83298);
  __chkstk_darwin(v352);
  uint64_t v353 = (uint64_t)&v253 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v398 = sub_10017DF08(&qword_100E832A0);
  __chkstk_darwin(v398);
  v355 = (char *)&v253 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v351 = sub_10017DF08(&qword_100E832A8);
  __chkstk_darwin(v351);
  v288 = (char *)&v253 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v359 = sub_10017DF08(&qword_100E832B0);
  uint64_t v295 = *(void *)(v359 - 8);
  uint64_t v47 = __chkstk_darwin(v359);
  v287 = (char *)&v253 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v294 = (char *)&v253 - v49;
  uint64_t v381 = type metadata accessor for ColorRenderingMode();
  uint64_t v380 = *(void *)(v381 - 8);
  __chkstk_darwin(v381);
  v379 = (char *)&v253 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = sub_10017DF08(&qword_100E832B8);
  __chkstk_darwin(v349);
  v286 = (char *)&v253 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v354 = sub_10017DF08(&qword_100E832C0);
  uint64_t v293 = *(void *)(v354 - 8);
  uint64_t v52 = __chkstk_darwin(v354);
  v285 = (char *)&v253 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v292 = (char *)&v253 - v54;
  uint64_t v55 = type metadata accessor for NotificationsOptInComponentViewModel();
  uint64_t v280 = *(void *)(v55 - 8);
  uint64_t v56 = __chkstk_darwin(v55 - 8);
  v282 = (char *)&v253 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v281 = v57;
  __chkstk_darwin(v56);
  v350 = (char *)&v253 - v58;
  uint64_t v414 = sub_10017DF08(&qword_100E832C8);
  __chkstk_darwin(v414);
  uint64_t v416 = (uint64_t)&v253 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v394 = sub_10017DF08(&qword_100E832D0);
  __chkstk_darwin(v394);
  uint64_t v396 = (uint64_t)&v253 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = sub_10017DF08(&qword_100E832D8);
  __chkstk_darwin(v346);
  uint64_t v347 = (uint64_t)&v253 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v395 = sub_10017DF08(&qword_100E832E0);
  __chkstk_darwin(v395);
  v348 = (char *)&v253 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v415 = sub_10017DF08(&qword_100E832E8);
  __chkstk_darwin(v415);
  v397 = (char *)&v253 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v423 = sub_10017DF08(&qword_100E832F0);
  __chkstk_darwin(v423);
  v417 = (char *)&v253 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v345 = sub_10017DF08(&qword_100E832F8);
  __chkstk_darwin(v345);
  v284 = (char *)&v253 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t HourPrecipitationComponentViewModel = type metadata accessor for NextHourPrecipitationComponentViewModel();
  uint64_t v271 = *(void *)(HourPrecipitationComponentViewModel - 8);
  uint64_t v67 = __chkstk_darwin(HourPrecipitationComponentViewModel - 8);
  v273 = (char *)&v253 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = v68;
  __chkstk_darwin(v67);
  v283 = (char *)&v253 - v69;
  uint64_t v344 = sub_10017DF08(&qword_100E83300);
  __chkstk_darwin(v344);
  v279 = (char *)&v253 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for NewsArticleComponentViewModel(0);
  uint64_t v268 = *(void *)(v71 - 8);
  uint64_t v72 = __chkstk_darwin(v71 - 8);
  v270 = (char *)&v253 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = v73;
  __chkstk_darwin(v72);
  v278 = (char *)&v253 - v74;
  uint64_t v341 = sub_10017DF08(&qword_100E83308);
  __chkstk_darwin(v341);
  uint64_t v342 = (uint64_t)&v253 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v393 = sub_10017DF08(&qword_100E83310);
  __chkstk_darwin(v393);
  v343 = (char *)&v253 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v340 = sub_10017DF08(&qword_100E83318);
  __chkstk_darwin(v340);
  v277 = (char *)&v253 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for MoonComponentViewModel();
  uint64_t v264 = *(void *)(v78 - 8);
  uint64_t v79 = __chkstk_darwin(v78 - 8);
  v266 = (char *)&v253 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = v80;
  __chkstk_darwin(v79);
  v276 = (char *)&v253 - v81;
  uint64_t v339 = sub_10017DF08(&qword_100E83320);
  __chkstk_darwin(v339);
  v275 = (char *)&v253 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for MapComponentViewModel();
  uint64_t v260 = *(void *)(v83 - 8);
  uint64_t v84 = *(void *)(v260 + 64);
  uint64_t v85 = __chkstk_darwin(v83 - 8);
  v261 = (char *)&v253 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v85);
  v274 = (char *)&v253 - v86;
  uint64_t v389 = sub_10017DF08(&qword_100E83328);
  __chkstk_darwin(v389);
  uint64_t v391 = (uint64_t)&v253 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v336 = sub_10017DF08(&qword_100E83330);
  __chkstk_darwin(v336);
  uint64_t v337 = (uint64_t)&v253 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v390 = sub_10017DF08(&qword_100E83338);
  __chkstk_darwin(v390);
  v338 = (char *)&v253 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v413 = sub_10017DF08(&qword_100E83340);
  __chkstk_darwin(v413);
  v392 = (char *)&v253 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = sub_10017DF08(&qword_100E83348);
  __chkstk_darwin(v335);
  v267 = (char *)&v253 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v333 = sub_10017DF08(&qword_100E83350);
  __chkstk_darwin(v333);
  v263 = (char *)&v253 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = sub_10017DF08(&qword_100E83358);
  __chkstk_darwin(v331);
  uint64_t v332 = (uint64_t)&v253 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v388 = sub_10017DF08(&qword_100E83360);
  __chkstk_darwin(v388);
  v334 = (char *)&v253 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v330 = sub_10017DF08(&qword_100E83368);
  __chkstk_darwin(v330);
  v262 = (char *)&v253 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for FeelsLikeComponentViewModel(0);
  uint64_t v256 = *(void *)(v96 - 8);
  uint64_t v97 = *(void *)(v256 + 64);
  uint64_t v98 = __chkstk_darwin(v96 - 8);
  v257 = (char *)&v253 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v98);
  v259 = (char *)&v253 - v99;
  uint64_t v100 = type metadata accessor for LocationComponentContainerContentView(0);
  uint64_t v382 = *(void *)(v100 - 8);
  uint64_t v101 = *(void *)(v382 + 64);
  __chkstk_darwin(v100);
  v383 = (char *)&v253 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v328 = sub_10017DF08(&qword_100E83370);
  __chkstk_darwin(v328);
  v258 = (char *)&v253 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v254 = *(void *)(v103 - 8);
  uint64_t v104 = *(void *)(v254 + 64);
  uint64_t v105 = __chkstk_darwin(v103 - 8);
  v255 = (char *)&v253 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v105);
  v329 = (char *)&v253 - v106;
  uint64_t v424 = sub_10017DF08(&qword_100E83378);
  __chkstk_darwin(v424);
  uint64_t v426 = (uint64_t)&v253 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v419 = sub_10017DF08(&qword_100E83380);
  __chkstk_darwin(v419);
  uint64_t v421 = (uint64_t)&v253 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v409 = sub_10017DF08(&qword_100E83388);
  __chkstk_darwin(v409);
  uint64_t v411 = (uint64_t)&v253 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v384 = sub_10017DF08(&qword_100E83390);
  __chkstk_darwin(v384);
  uint64_t v386 = (uint64_t)&v253 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v326 = sub_10017DF08(&qword_100E83398);
  __chkstk_darwin(v326);
  v112 = (char *)&v253 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v385 = sub_10017DF08(&qword_100E833A0);
  __chkstk_darwin(v385);
  v327 = (char *)&v253 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v410 = sub_10017DF08(&qword_100E833A8);
  __chkstk_darwin(v410);
  v387 = (char *)&v253 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v420 = sub_10017DF08(&qword_100E833B0);
  __chkstk_darwin(v420);
  v412 = (char *)&v253 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v425 = sub_10017DF08(&qword_100E833B8);
  __chkstk_darwin(v425);
  v422 = (char *)&v253 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_10017DF08(&qword_100E833C0);
  __chkstk_darwin(v117);
  v119 = (char *)&v253 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v120);
  v122 = (_OWORD *)((char *)&v253 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for LocationComponentContainerViewModel();
  sub_1001EC0BC();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      sub_1005D8BD8();
      uint64_t v130 = (uint64_t)v258;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v130, (uint64_t)v112, &qword_100E83370);
      swift_storeEnumTagMultiPayload();
      sub_10022B9D4();
      sub_10022B114();
      uint64_t v131 = (uint64_t)v327;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v131, v386, &qword_100E833A0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF9D4();
      sub_1000BF958();
      uint64_t v132 = (uint64_t)v387;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v131, &qword_100E833A0);
      sub_1005EFB58(v132, v411, &qword_100E833A8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF8DC();
      sub_1000BF7E4();
      uint64_t v133 = (uint64_t)v412;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v132, &qword_100E833A8);
      sub_1005EFB58(v133, v421, &qword_100E833B0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v134 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v133, &qword_100E833B0);
      sub_1005EFB58(v134, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v134, &qword_100E833B8);
      sub_10017DF4C(v130, &qword_100E83370);
      return sub_1001F75CC();
    case 2u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v135 = (uint64_t)v262;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v135, v332, &qword_100E83368);
      swift_storeEnumTagMultiPayload();
      sub_10022B4D4();
      sub_10022AFD4();
      uint64_t v136 = (uint64_t)v334;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v136, v386, &qword_100E83360);
      swift_storeEnumTagMultiPayload();
      sub_1000BF9D4();
      sub_1000BF958();
      uint64_t v137 = (uint64_t)v387;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v136, &qword_100E83360);
      sub_1005EFB58(v137, v411, &qword_100E833A8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF8DC();
      sub_1000BF7E4();
      uint64_t v138 = (uint64_t)v412;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v137, &qword_100E833A8);
      sub_1005EFB58(v138, v421, &qword_100E833B0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v139 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v138, &qword_100E833B0);
      sub_1005EFB58(v139, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v139, &qword_100E833B8);
      sub_10017DF4C(v135, &qword_100E83368);
      return sub_1001F75CC();
    case 3u:
      uint64_t v140 = *(void *)v122;
      *(void *)(swift_allocObject() + 16) = v140;
      v124 = &qword_100E83350;
      uint64_t v141 = (uint64_t)v263;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v141, v332, &qword_100E83350);
      swift_storeEnumTagMultiPayload();
      sub_10022B4D4();
      sub_10022AFD4();
      uint64_t v142 = (uint64_t)v334;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v142, v386, &qword_100E83360);
      swift_storeEnumTagMultiPayload();
      sub_1000BF9D4();
      sub_1000BF958();
      uint64_t v143 = (uint64_t)v387;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v142, &qword_100E83360);
      v144 = &qword_100E833A8;
      sub_1005EFB58(v143, v411, &qword_100E833A8);
      goto LABEL_7;
    case 4u:
      uint64_t v145 = *(void *)v122;
      uint64_t v146 = *((void *)v122 + 1);
      uint64_t v147 = *((void *)v122 + 2);
      v148 = (void *)swift_allocObject();
      v148[2] = v145;
      v148[3] = v146;
      v148[4] = v147;
      v124 = &qword_100E83348;
      uint64_t v141 = (uint64_t)v267;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v141, v337, &qword_100E83348);
      swift_storeEnumTagMultiPayload();
      sub_10022B614();
      sub_10022B934();
      uint64_t v149 = (uint64_t)v338;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v149, v391, &qword_100E83338);
      swift_storeEnumTagMultiPayload();
      sub_100228220();
      sub_100228318();
      uint64_t v143 = (uint64_t)v392;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v149, &qword_100E83338);
      v144 = &qword_100E83340;
      sub_1005EFB58(v143, v411, &qword_100E83340);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      sub_1000BF8DC();
      sub_1000BF7E4();
      uint64_t v150 = (uint64_t)v412;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v143, v144);
      v151 = &qword_100E833B0;
      sub_1005EFB58(v150, v421, &qword_100E833B0);
      goto LABEL_15;
    case 5u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v152 = (uint64_t)v275;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v152, v337, &qword_100E83320);
      swift_storeEnumTagMultiPayload();
      sub_10022B614();
      sub_10022B934();
      uint64_t v153 = (uint64_t)v338;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v153, v391, &qword_100E83338);
      swift_storeEnumTagMultiPayload();
      sub_100228220();
      sub_100228318();
      uint64_t v154 = (uint64_t)v392;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v153, &qword_100E83338);
      sub_1005EFB58(v154, v411, &qword_100E83340);
      swift_storeEnumTagMultiPayload();
      sub_1000BF8DC();
      sub_1000BF7E4();
      uint64_t v155 = (uint64_t)v412;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v154, &qword_100E83340);
      sub_1005EFB58(v155, v421, &qword_100E833B0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v156 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v155, &qword_100E833B0);
      sub_1005EFB58(v156, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v156, &qword_100E833B8);
      sub_10017DF4C(v152, &qword_100E83320);
      return sub_1001F75CC();
    case 6u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v157 = (uint64_t)v277;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v157, v342, &qword_100E83318);
      swift_storeEnumTagMultiPayload();
      sub_10022B894();
      sub_10022B074();
      uint64_t v158 = (uint64_t)v343;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v158, v391, &qword_100E83310);
      swift_storeEnumTagMultiPayload();
      sub_100228220();
      sub_100228318();
      uint64_t v159 = (uint64_t)v392;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v158, &qword_100E83310);
      sub_1005EFB58(v159, v411, &qword_100E83340);
      swift_storeEnumTagMultiPayload();
      sub_1000BF8DC();
      sub_1000BF7E4();
      uint64_t v160 = (uint64_t)v412;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v159, &qword_100E83340);
      sub_1005EFB58(v160, v421, &qword_100E833B0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v161 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v160, &qword_100E833B0);
      sub_1005EFB58(v161, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v161, &qword_100E833B8);
      sub_10017DF4C(v157, &qword_100E83318);
      return sub_1001F75CC();
    case 7u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v162 = (uint64_t)v279;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v162, v342, &qword_100E83300);
      swift_storeEnumTagMultiPayload();
      sub_10022B894();
      sub_10022B074();
      uint64_t v163 = (uint64_t)v343;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v163, v391, &qword_100E83310);
      swift_storeEnumTagMultiPayload();
      sub_100228220();
      sub_100228318();
      uint64_t v164 = (uint64_t)v392;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v163, &qword_100E83310);
      sub_1005EFB58(v164, v411, &qword_100E83340);
      swift_storeEnumTagMultiPayload();
      sub_1000BF8DC();
      sub_1000BF7E4();
      uint64_t v165 = (uint64_t)v412;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v164, &qword_100E83340);
      sub_1005EFB58(v165, v421, &qword_100E833B0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v166 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v165, &qword_100E833B0);
      sub_1005EFB58(v166, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v166, &qword_100E833B8);
      sub_10017DF4C(v162, &qword_100E83300);
      return sub_1001F75CC();
    case 8u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v167 = (uint64_t)v284;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v167, v347, &qword_100E832F8);
      swift_storeEnumTagMultiPayload();
      sub_10022B1B4();
      unint64_t v168 = sub_10022AF34();
      uint64_t v429 = v349;
      unint64_t v430 = v168;
      swift_getOpaqueTypeConformance2();
      uint64_t v169 = (uint64_t)v348;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v169, v396, &qword_100E832E0);
      swift_storeEnumTagMultiPayload();
      sub_10001E214();
      sub_10001E948();
      uint64_t v170 = (uint64_t)v397;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v169, &qword_100E832E0);
      sub_1005EFB58(v170, v416, &qword_100E832E8);
      swift_storeEnumTagMultiPayload();
      sub_100227B60();
      sub_100227BDC();
      uint64_t v171 = (uint64_t)v417;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v170, &qword_100E832E8);
      sub_1005EFB58(v171, v421, &qword_100E832F0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v172 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v171, &qword_100E832F0);
      sub_1005EFB58(v172, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v172, &qword_100E833B8);
      sub_10017DF4C(v167, &qword_100E832F8);
      return sub_1001F75CC();
    case 9u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      sub_1005D8BD8();
      uint64_t v173 = (uint64_t)v286;
      sub_1000BF290();
      swift_release();
      uint64_t v174 = v380;
      v175 = v379;
      uint64_t v176 = v381;
      (*(void (**)(char *, void, uint64_t))(v380 + 104))(v379, enum case for ColorRenderingMode.nonLinear(_:), v381);
      unint64_t v177 = sub_10022AF34();
      v178 = v285;
      uint64_t v179 = v349;
      View.drawingGroup(opaque:colorMode:)();
      (*(void (**)(char *, uint64_t))(v174 + 8))(v175, v176);
      sub_10017DF4C(v173, &qword_100E832B8);
      uint64_t v180 = v293;
      v181 = v292;
      uint64_t v182 = v354;
      (*(void (**)(char *, char *, uint64_t))(v293 + 32))(v292, v178, v354);
      (*(void (**)(uint64_t, char *, uint64_t))(v180 + 16))(v347, v181, v182);
      swift_storeEnumTagMultiPayload();
      sub_10022B1B4();
      uint64_t v429 = v179;
      unint64_t v430 = v177;
      swift_getOpaqueTypeConformance2();
      uint64_t v183 = (uint64_t)v348;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v183, v396, &qword_100E832E0);
      swift_storeEnumTagMultiPayload();
      sub_10001E214();
      sub_10001E948();
      uint64_t v184 = (uint64_t)v397;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v183, &qword_100E832E0);
      sub_1005EFB58(v184, v416, &qword_100E832E8);
      swift_storeEnumTagMultiPayload();
      sub_100227B60();
      sub_100227BDC();
      uint64_t v185 = (uint64_t)v417;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v184, &qword_100E832E8);
      sub_1005EFB58(v185, v421, &qword_100E832F0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v186 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v185, &qword_100E832F0);
      sub_1005EFB58(v186, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v186, &qword_100E833B8);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v181, v182);
      return sub_1001F75CC();
    case 0xAu:
      uint64_t v187 = swift_allocObject();
      memcpy((void *)(v187 + 16), v122, 0x60uLL);
      v124 = &qword_100E83288;
      uint64_t v141 = (uint64_t)v303;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v141, v360, &qword_100E83288);
      swift_storeEnumTagMultiPayload();
      sub_10022B254();
      unint64_t v188 = sub_10022ADF4();
      uint64_t v429 = v362;
      unint64_t v430 = v188;
      swift_getOpaqueTypeConformance2();
      uint64_t v189 = (uint64_t)v361;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v189, v401, &qword_100E83278);
      swift_storeEnumTagMultiPayload();
      sub_1000191CC();
      sub_100228128();
      uint64_t v190 = (uint64_t)v402;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v189, &qword_100E83278);
      sub_1005EFB58(v190, v416, &qword_100E83280);
      swift_storeEnumTagMultiPayload();
      sub_100227B60();
      sub_100227BDC();
      uint64_t v150 = (uint64_t)v417;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v190, &qword_100E83280);
      v151 = &qword_100E832F0;
      sub_1005EFB58(v150, v421, &qword_100E832F0);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v191 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v150, v151);
      v192 = &qword_100E833B8;
      sub_1005EFB58(v191, v426, &qword_100E833B8);
      goto LABEL_24;
    case 0xBu:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v193 = (uint64_t)v301;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v193, v353, &qword_100E83290);
      swift_storeEnumTagMultiPayload();
      unint64_t v194 = sub_10022AE94();
      uint64_t v429 = v351;
      unint64_t v430 = v194;
      swift_getOpaqueTypeConformance2();
      sub_10022B574();
      uint64_t v195 = (uint64_t)v355;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v195, v396, &qword_100E832A0);
      swift_storeEnumTagMultiPayload();
      sub_10001E214();
      sub_10001E948();
      uint64_t v196 = (uint64_t)v397;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v195, &qword_100E832A0);
      sub_1005EFB58(v196, v416, &qword_100E832E8);
      swift_storeEnumTagMultiPayload();
      sub_100227B60();
      sub_100227BDC();
      uint64_t v197 = (uint64_t)v417;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v196, &qword_100E832E8);
      sub_1005EFB58(v197, v421, &qword_100E832F0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v198 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v197, &qword_100E832F0);
      sub_1005EFB58(v198, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v198, &qword_100E833B8);
      sub_10017DF4C(v193, &qword_100E83290);
      return sub_1001F75CC();
    case 0xCu:
      char v199 = *(unsigned char *)v122;
      sub_1001EC0BC();
      *(unsigned char *)(swift_allocObject() + 16) = v199;
      sub_1005D8BD8();
      uint64_t v200 = (uint64_t)v302;
      sub_1000BF290();
      swift_release();
      uint64_t v201 = v380;
      v202 = v379;
      uint64_t v203 = v381;
      (*(void (**)(char *, void, uint64_t))(v380 + 104))(v379, enum case for ColorRenderingMode.nonLinear(_:), v381);
      unint64_t v204 = sub_10022ADF4();
      v205 = v300;
      uint64_t v206 = v362;
      View.drawingGroup(opaque:colorMode:)();
      (*(void (**)(char *, uint64_t))(v201 + 8))(v202, v203);
      sub_10017DF4C(v200, &qword_100E83258);
      uint64_t v207 = v308;
      v208 = v306;
      v209 = v205;
      uint64_t v210 = v369;
      (*(void (**)(char *, char *, uint64_t))(v308 + 32))(v306, v209, v369);
      (*(void (**)(uint64_t, char *, uint64_t))(v207 + 16))(v360, v208, v210);
      swift_storeEnumTagMultiPayload();
      sub_10022B254();
      uint64_t v429 = v206;
      unint64_t v430 = v204;
      swift_getOpaqueTypeConformance2();
      uint64_t v211 = (uint64_t)v361;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v211, v401, &qword_100E83278);
      swift_storeEnumTagMultiPayload();
      sub_1000191CC();
      sub_100228128();
      uint64_t v212 = (uint64_t)v402;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v211, &qword_100E83278);
      v213 = &qword_100E83280;
      sub_1005EFB58(v212, v416, &qword_100E83280);
      goto LABEL_30;
    case 0xDu:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v214 = (uint64_t)v309;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v214, v365, &qword_100E83250);
      swift_storeEnumTagMultiPayload();
      sub_10022B394();
      sub_10022B2F4();
      uint64_t v215 = (uint64_t)v366;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v215, v401, &qword_100E83248);
      swift_storeEnumTagMultiPayload();
      sub_1000191CC();
      sub_100228128();
      uint64_t v216 = (uint64_t)v402;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v215, &qword_100E83248);
      sub_1005EFB58(v216, v416, &qword_100E83280);
      swift_storeEnumTagMultiPayload();
      sub_100227B60();
      sub_100227BDC();
      uint64_t v217 = (uint64_t)v417;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v216, &qword_100E83280);
      sub_1005EFB58(v217, v421, &qword_100E832F0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v218 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v217, &qword_100E832F0);
      sub_1005EFB58(v218, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v218, &qword_100E833B8);
      sub_10017DF4C(v214, &qword_100E83250);
      return sub_1001F75CC();
    case 0xEu:
      uint64_t v219 = v315;
      v220 = *(void (**)(char *, char *, uint64_t))(v315 + 32);
      v221 = v314;
      uint64_t v222 = v316;
      v220(v314, (char *)v122, v316);
      v223 = v305;
      (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v305, v221, v222);
      unint64_t v224 = (*(unsigned __int8 *)(v219 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v219 + 80);
      uint64_t v225 = swift_allocObject();
      v220((char *)(v225 + v224), v223, v222);
      uint64_t v226 = (uint64_t)v317;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v226, v365, &qword_100E83238);
      swift_storeEnumTagMultiPayload();
      sub_10022B394();
      sub_10022B2F4();
      uint64_t v227 = (uint64_t)v366;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v227, v401, &qword_100E83248);
      swift_storeEnumTagMultiPayload();
      sub_1000191CC();
      sub_100228128();
      uint64_t v228 = (uint64_t)v402;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v227, &qword_100E83248);
      sub_1005EFB58(v228, v416, &qword_100E83280);
      swift_storeEnumTagMultiPayload();
      sub_100227B60();
      sub_100227BDC();
      uint64_t v229 = (uint64_t)v417;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v228, &qword_100E83280);
      sub_1005EFB58(v229, v421, &qword_100E832F0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v230 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v229, &qword_100E832F0);
      sub_1005EFB58(v230, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v230, &qword_100E833B8);
      sub_10017DF4C(v226, &qword_100E83238);
      return (*(uint64_t (**)(char *, uint64_t))(v219 + 8))(v221, v222);
    case 0xFu:
      uint64_t v232 = swift_allocObject();
      memcpy((void *)(v232 + 16), v122, 0xD0uLL);
      v124 = &qword_100E83230;
      uint64_t v141 = (uint64_t)v313;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v141, v371, &qword_100E83230);
      swift_storeEnumTagMultiPayload();
      sub_10022B6B4();
      sub_10022B754();
      uint64_t v233 = (uint64_t)v372;
      _ConditionalContent<>.init(storage:)();
      v234 = &qword_100E83220;
      sub_1005EFB58(v233, v406, &qword_100E83220);
      goto LABEL_23;
    case 0x10u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v235 = (uint64_t)v322;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v235, v371, &qword_100E83208);
      swift_storeEnumTagMultiPayload();
      sub_10022B6B4();
      sub_10022B754();
      uint64_t v236 = (uint64_t)v372;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v236, v406, &qword_100E83220);
      swift_storeEnumTagMultiPayload();
      sub_10022829C();
      sub_1002281A4();
      uint64_t v237 = (uint64_t)v407;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v236, &qword_100E83220);
      sub_1005EFB58(v237, v426, &qword_100E83228);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v237, &qword_100E83228);
      sub_10017DF4C(v235, &qword_100E83208);
      return sub_1001F75CC();
    case 0x11u:
      v238 = (_OWORD *)swift_allocObject();
      long long v239 = v122[1];
      v238[1] = *v122;
      v238[2] = v239;
      v238[3] = v122[2];
      v124 = &qword_100E83200;
      uint64_t v141 = (uint64_t)v323;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v141, v376, &qword_100E83200);
      swift_storeEnumTagMultiPayload();
      sub_10022B434();
      sub_10022B7F4();
      uint64_t v233 = (uint64_t)v377;
      _ConditionalContent<>.init(storage:)();
      v234 = &qword_100E831F8;
      sub_1005EFB58(v233, v406, &qword_100E831F8);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      sub_10022829C();
      sub_1002281A4();
      uint64_t v191 = (uint64_t)v407;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v233, v234);
      v192 = &qword_100E83228;
      sub_1005EFB58(v191, v426, &qword_100E83228);
LABEL_24:
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v191, v192);
      uint64_t v129 = v141;
      return sub_10017DF4C(v129, v124);
    case 0x12u:
      sub_1005D8BD8();
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v240 = (uint64_t)v325;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58(v240, v376, &qword_100E831E8);
      swift_storeEnumTagMultiPayload();
      sub_10022B434();
      sub_10022B7F4();
      uint64_t v241 = (uint64_t)v377;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v241, v406, &qword_100E831F8);
      swift_storeEnumTagMultiPayload();
      sub_10022829C();
      sub_1002281A4();
      uint64_t v242 = (uint64_t)v407;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v241, &qword_100E831F8);
      sub_1005EFB58(v242, v426, &qword_100E83228);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v242, &qword_100E83228);
      sub_10017DF4C(v240, &qword_100E831E8);
      return sub_1001F75CC();
    case 0x13u:
      sub_1001EC0BC();
      swift_allocObject();
      sub_1005D8BD8();
      uint64_t v243 = (uint64_t)v288;
      sub_1000BF290();
      swift_release();
      uint64_t v244 = v380;
      v245 = v379;
      uint64_t v246 = v381;
      (*(void (**)(char *, void, uint64_t))(v380 + 104))(v379, enum case for ColorRenderingMode.nonLinear(_:), v381);
      unint64_t v247 = sub_10022AE94();
      v248 = v287;
      uint64_t v249 = v351;
      View.drawingGroup(opaque:colorMode:)();
      (*(void (**)(char *, uint64_t))(v244 + 8))(v245, v246);
      sub_10017DF4C(v243, &qword_100E832A8);
      uint64_t v207 = v295;
      v208 = v294;
      uint64_t v210 = v359;
      (*(void (**)(char *, char *, uint64_t))(v295 + 32))(v294, v248, v359);
      (*(void (**)(uint64_t, char *, uint64_t))(v207 + 16))(v353, v208, v210);
      swift_storeEnumTagMultiPayload();
      uint64_t v429 = v249;
      unint64_t v430 = v247;
      swift_getOpaqueTypeConformance2();
      sub_10022B574();
      uint64_t v250 = (uint64_t)v355;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v250, v396, &qword_100E832A0);
      swift_storeEnumTagMultiPayload();
      sub_10001E214();
      sub_10001E948();
      uint64_t v212 = (uint64_t)v397;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v250, &qword_100E832A0);
      v213 = &qword_100E832E8;
      sub_1005EFB58(v212, v416, &qword_100E832E8);
LABEL_30:
      swift_storeEnumTagMultiPayload();
      sub_100227B60();
      sub_100227BDC();
      uint64_t v251 = (uint64_t)v417;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v212, v213);
      sub_1005EFB58(v251, v421, &qword_100E832F0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v252 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v251, &qword_100E832F0);
      sub_1005EFB58(v252, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v252, &qword_100E833B8);
      return (*(uint64_t (**)(char *, uint64_t))(v207 + 8))(v208, v210);
    default:
      uint64_t v123 = swift_allocObject();
      memcpy((void *)(v123 + 16), v122, 0x70uLL);
      v124 = &qword_100E833C0;
      sub_1000BF290();
      swift_release();
      sub_1005EFB58((uint64_t)v119, (uint64_t)v112, &qword_100E833C0);
      swift_storeEnumTagMultiPayload();
      sub_10022B9D4();
      sub_10022B114();
      uint64_t v125 = (uint64_t)v327;
      _ConditionalContent<>.init(storage:)();
      sub_1005EFB58(v125, v386, &qword_100E833A0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF9D4();
      sub_1000BF958();
      uint64_t v126 = (uint64_t)v387;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v125, &qword_100E833A0);
      sub_1005EFB58(v126, v411, &qword_100E833A8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF8DC();
      sub_1000BF7E4();
      uint64_t v127 = (uint64_t)v412;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v126, &qword_100E833A8);
      sub_1005EFB58(v127, v421, &qword_100E833B0);
      swift_storeEnumTagMultiPayload();
      sub_1000BF768();
      sub_1000BF6EC();
      uint64_t v128 = (uint64_t)v422;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v127, &qword_100E833B0);
      sub_1005EFB58(v128, v426, &qword_100E833B8);
      swift_storeEnumTagMultiPayload();
      sub_1000BF670();
      sub_1000BF860();
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v128, &qword_100E833B8);
      uint64_t v129 = (uint64_t)v119;
      return sub_10017DF4C(v129, v124);
  }
}

uint64_t type metadata accessor for NextHourPrecipitationComponentViewModel()
{
  uint64_t result = qword_100EA8ED8;
  if (!qword_100EA8ED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000BF290()
{
  sub_100127C98();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = v0;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v47 = v15;
  uint64_t v17 = v16 & 1;
  uint64_t v18 = sub_10017DF08(v8);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_10016279C();
  uint64_t v45 = sub_10017DF08(v7);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100125FF8();
  uint64_t v46 = sub_10017DF08(v5);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100162F18();
  v3(v10, v17, v14, v12);
  uint64_t v22 = v10 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  uint64_t v23 = (unsigned char *)(v22 + *(int *)(type metadata accessor for LocationComponentContainerViewModel() + 24));
  if (v23[1] != 1)
  {
    unsigned __int8 v24 = static Edge.Set.top.getter();
    unsigned __int8 v25 = static Edge.Set.bottom.getter();
    Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v24) {
      Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v25) {
      Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    goto LABEL_10;
  }
  if ((*v23 - 1) < 2u
    || (unsigned __int8 v26 = static Edge.Set.bottom.getter(),
        char v27 = Edge.Set.init(rawValue:)(),
        Edge.Set.init(rawValue:)(),
        Edge.Set.init(rawValue:)() != v26))
  {
LABEL_10:
    char v27 = Edge.Set.init(rawValue:)();
  }
  uint64_t v28 = *(void *)(v10 + 16);
  char v29 = *(unsigned char *)(v10 + 24);
  sub_100195B7C(v28, v29);
  sub_100149AE8();
  char v31 = v30;
  sub_10018F6D8(v28, v29);
  if (v31)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  if (qword_100E62248 != -1) {
LABEL_16:
  }
    swift_once();
LABEL_15:
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v40 = sub_1001D0E9C();
  sub_1005EFB58(v40, v41, v9);
  uint64_t v42 = v1 + *(int *)(v45 + 36);
  *(unsigned char *)uint64_t v42 = v27;
  *(void *)(v42 + 8) = v33;
  *(void *)(v42 + 16) = v35;
  *(void *)(v42 + 24) = v37;
  *(void *)(v42 + 32) = v39;
  *(unsigned char *)(v42 + 40) = 0;
  uint64_t v43 = sub_100127C2C();
  sub_10017DF4C(v43, v44);
  sub_1005EFB58(v1, (uint64_t)v5, v7);
  *(uint64_t *)((char *)v5 + *(int *)(v46 + 36)) = 0x3FF0000000000000;
  sub_10017DF4C(v1, v7);
  sub_10024D364((uint64_t)v5, v47, v5);
  sub_1005EFC60();
}

uint64_t type metadata accessor for NotificationsOptInComponentViewModel()
{
  uint64_t result = qword_100E6B608;
  if (!qword_100E6B608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SevereAlertComponentViewModel()
{
  uint64_t result = qword_100E846E8;
  if (!qword_100E846E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NewsArticleComponentViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6EFE0);
}

unint64_t sub_1000BF670()
{
  unint64_t result = qword_100E83538;
  if (!qword_100E83538)
  {
    sub_10018C6DC(&qword_100E833B8);
    sub_1000BF768();
    sub_1000BF6EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83538);
  }
  return result;
}

unint64_t sub_1000BF6EC()
{
  unint64_t result = qword_100E83838;
  if (!qword_100E83838)
  {
    sub_10018C6DC(&qword_100E832F0);
    sub_100227B60();
    sub_100227BDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83838);
  }
  return result;
}

unint64_t sub_1000BF768()
{
  unint64_t result = qword_100E83540;
  if (!qword_100E83540)
  {
    sub_10018C6DC(&qword_100E833B0);
    sub_1000BF8DC();
    sub_1000BF7E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83540);
  }
  return result;
}

unint64_t sub_1000BF7E4()
{
  unint64_t result = qword_100E836C0;
  if (!qword_100E836C0)
  {
    sub_10018C6DC(&qword_100E83340);
    sub_100228220();
    sub_100228318();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E836C0);
  }
  return result;
}

unint64_t sub_1000BF860()
{
  unint64_t result = qword_100E83B30;
  if (!qword_100E83B30)
  {
    sub_10018C6DC(&qword_100E83228);
    sub_10022829C();
    sub_1002281A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83B30);
  }
  return result;
}

unint64_t sub_1000BF8DC()
{
  unint64_t result = qword_100E83548;
  if (!qword_100E83548)
  {
    sub_10018C6DC(&qword_100E833A8);
    sub_1000BF9D4();
    sub_1000BF958();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83548);
  }
  return result;
}

unint64_t sub_1000BF958()
{
  unint64_t result = qword_100E83608;
  if (!qword_100E83608)
  {
    sub_10018C6DC(&qword_100E83360);
    sub_10022B4D4();
    sub_10022AFD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83608);
  }
  return result;
}

unint64_t sub_1000BF9D4()
{
  unint64_t result = qword_100E83550;
  if (!qword_100E83550)
  {
    sub_10018C6DC(&qword_100E833A0);
    sub_10022B9D4();
    sub_10022B114();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83550);
  }
  return result;
}

uint64_t sub_1000BFA50(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  swift_release();
  uint64_t v5 = a1 + a2[12];
  sub_10017DF08(&qword_100E78CE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ForegroundEffect();
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[13];
  sub_10017DF08(&qword_100E82BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = v7 + *(int *)(type metadata accessor for LocationComponentCornerRadiusConfiguration(0) + 20);
    uint64_t v9 = type metadata accessor for RoundedCornerStyle();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1000BFC1C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for WeatherCondition();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_10017DF08(&qword_100E63A50);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1000BFD04@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000C00F4(a1, a3);
}

uint64_t sub_1000BFD50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E92848);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for PreprocessedWeatherData();
  __chkstk_darwin(v38);
  uint64_t v35 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationWeatherDataState(0);
  __chkstk_darwin(v14);
  char v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LocationViewerInput();
  uint64_t v18 = a1;
  sub_10006DF38(a1 + *(int *)(v17 + 72), (uint64_t)v13, &qword_100E63770);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) == 1)
  {
    uint64_t v19 = &qword_100E63770;
    uint64_t v20 = (uint64_t)v13;
  }
  else
  {
    sub_1000C09BC((uint64_t)v13, (uint64_t)v16, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_10006D6DC((uint64_t)v9);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v38) != 1)
    {
      uint64_t v28 = v35;
      sub_1000C09BC((uint64_t)v9, v35, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v29 = v18 + *(int *)(v17 + 20);
      uint64_t v31 = v36;
      uint64_t v30 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v6, v29, v37);
      uint64_t v22 = sub_100029E9C();
      unint64_t v26 = v32;
      uint64_t v23 = sub_100033160();
      uint64_t v24 = v33;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v30);
      sub_1000C0964((uint64_t)v16, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v34 = (uint64_t *)(v28 + *(int *)(v38 + 60));
      uint64_t v25 = *v34;
      unint64_t v27 = v34[1];
      swift_bridgeObjectRetain();
      uint64_t result = sub_1000C0964(v28, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      goto LABEL_7;
    }
    sub_1000C0964((uint64_t)v16, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v19 = &qword_100E92848;
    uint64_t v20 = (uint64_t)v9;
  }
  uint64_t result = sub_1001781AC(v20, v19);
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  unint64_t v27 = 0xE000000000000000;
LABEL_7:
  *a2 = v22;
  a2[1] = v26;
  a2[2] = v23;
  a2[3] = v24;
  a2[4] = v25;
  a2[5] = v27;
  return result;
}

uint64_t sub_1000C00F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v4 = (int *)type metadata accessor for LocationViewerInput();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v57 = v6;
  uint64_t v62 = sub_10017DF08(&qword_100E92840) - 8;
  __chkstk_darwin(v62);
  sub_100109314();
  uint64_t v61 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E64AA0);
  __chkstk_darwin(v8 - 8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v9);
  sub_100179C90();
  __chkstk_darwin(v10);
  uint64_t v60 = (char *)v53 - v11;
  uint64_t v12 = (int *)type metadata accessor for LocationViewerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v14);
  char v16 = (char *)v53 - v15;
  uint64_t v17 = type metadata accessor for ConditionPickerMenuViewModel(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (uint64_t)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Location.Identifier();
  uint64_t v65 = *(void *)(v20 - 8);
  uint64_t v66 = v20;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C0E04(a1, (uint64_t)v22);
  uint64_t v63 = v22;
  sub_1000C0F18(a1, (void *)v19);
  uint64_t v59 = sub_1000C0A1C(a1);
  uint64_t v23 = a1 + v4[5];
  type metadata accessor for LocationModel();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v24 + 16))(v16, v23);
  uint64_t v25 = (uint64_t)&v16[v12[6]];
  uint64_t v64 = v19;
  sub_1000C08FC(v19, v25, (void (*)(void))type metadata accessor for ConditionPickerMenuViewModel);
  char v26 = *(unsigned char *)(a1 + v4[10]);
  char v27 = *(unsigned char *)(a1 + v4[6]);
  char v28 = *(unsigned char *)(a1 + v4[14]);
  LOBYTE(v19) = *(unsigned char *)(a1 + v4[9]);
  int v58 = *(unsigned __int8 *)(a1 + v4[15]);
  v53[1] = (uint64_t)v4;
  uint64_t v29 = *(void *)(a1 + v4[16]);
  LOBYTE(v4) = *(unsigned char *)(a1 + v4[17]);
  swift_bridgeObjectRetain();
  uint64_t v56 = a1;
  uint64_t v30 = a1;
  uint64_t v31 = (uint64_t)v60;
  sub_1000BFD50(v30, (uint64_t *)v70);
  *(void *)&v16[v12[5]] = v59;
  v16[v12[7]] = v26;
  uint64_t v32 = v61;
  v16[v12[8]] = v27;
  v16[v12[9]] = v28;
  v16[v12[10]] = (v19 & 1) == 0;
  v16[v12[11]] = v58;
  *(void *)&v16[v12[12]] = v29;
  v16[v12[13]] = (char)v4;
  uint64_t v33 = &v16[v12[14]];
  long long v34 = v70[1];
  *(_OWORD *)uint64_t v33 = v70[0];
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v70[2];
  uint64_t v35 = v2 + OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory_lastViewModel;
  swift_beginAccess();
  sub_1000C08FC((uint64_t)v16, v31, (void (*)(void))type metadata accessor for LocationViewerViewModel);
  sub_10017D410(v31);
  uint64_t v36 = v32 + *(int *)(v62 + 56);
  sub_10006DF38(v35, v32, &qword_100E64AA0);
  sub_10006DF38(v31, v36, &qword_100E64AA0);
  sub_100179F0C(v32);
  if (v38)
  {
    sub_1001781AC(v31, &qword_100E64AA0);
    sub_100179F0C(v36);
    if (v38)
    {
      sub_1001781AC(v32, &qword_100E64AA0);
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v37 = v54;
    sub_10006DF38(v32, v54, &qword_100E64AA0);
    sub_100179F0C(v36);
    if (!v38)
    {
      uint64_t v48 = v36;
      uint64_t v49 = v53[0];
      sub_1000C09BC(v48, v53[0], (void (*)(void))type metadata accessor for LocationViewerViewModel);
      char v50 = sub_1000ABE8C(v37, v49);
      sub_1000C0964(v49, (void (*)(void))type metadata accessor for LocationViewerViewModel);
      sub_1001781AC(v31, &qword_100E64AA0);
      sub_1000C0964(v37, (void (*)(void))type metadata accessor for LocationViewerViewModel);
      sub_1001781AC(v32, &qword_100E64AA0);
      uint64_t v39 = v57;
      if (v50) {
        goto LABEL_16;
      }
      goto LABEL_10;
    }
    sub_1001781AC(v31, &qword_100E64AA0);
    sub_1000C0964(v37, (void (*)(void))type metadata accessor for LocationViewerViewModel);
  }
  sub_1001781AC(v32, &qword_100E92840);
  uint64_t v39 = v57;
LABEL_10:
  uint64_t v40 = v55;
  sub_1000C08FC((uint64_t)v16, v55, (void (*)(void))type metadata accessor for LocationViewerViewModel);
  sub_10017D410(v40);
  swift_beginAccess();
  sub_1000C1278(v40, v35);
  swift_endAccess();
  if (qword_100E62798 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  sub_1002102B0(v41, (uint64_t)qword_100F51DE0);
  sub_1000C08FC(v56, v39, (void (*)(void))type metadata accessor for LocationViewerInput);
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 141558275;
    uint64_t v68 = 1752392040;
    v69[0] = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v44 + 12) = 2081;
    uint64_t v46 = LocationModel.id.getter();
    uint64_t v68 = sub_10016414C(v46, v47, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000C0964(v39, (void (*)(void))type metadata accessor for LocationViewerInput);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Created new view model with activeLocation=%{private,mask.hash}s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_1000C0964(v39, (void (*)(void))type metadata accessor for LocationViewerInput);
  }
LABEL_16:
  sub_1000C0964(v64, (void (*)(void))type metadata accessor for ConditionPickerMenuViewModel);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v66);
  uint64_t v51 = v67;
  sub_1000C09BC((uint64_t)v16, v67, (void (*)(void))type metadata accessor for LocationViewerViewModel);
  return sub_10017D410(v51);
}

uint64_t sub_1000C08FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1000C0950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10099A780);
}

uint64_t sub_1000C0964(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1000C09BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1000C0A1C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C08FC(a1, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v8 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_10017DF08(&qword_100E92850);
    uint64_t v9 = type metadata accessor for LocationModel();
    uint64_t v10 = *(void *)(v9 - 8);
    unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C251B0;
    unint64_t v13 = v12 + v11;
    uint64_t v14 = v13 + *(int *)(sub_10017DF08(&qword_100E63878) + 48);
    type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for LocationOfInterest();
    _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v15);
    (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v13, enum case for LocationModel.current(_:), v9);
    type metadata accessor for LocationViewerInput();
    sub_100901AD4();
    uint64_t v32 = v12;
    sub_10037FE18(v16);
    return v32;
  }
  else
  {
    uint64_t v18 = type metadata accessor for LocationViewerInput();
    uint64_t v19 = a1 + *(int *)(v18 + 28);
    sub_10006DF38(v19, (uint64_t)v4, (uint64_t *)&unk_100EADD50);
    uint64_t v20 = type metadata accessor for CurrentLocation();
    int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v20);
    sub_1001781AC((uint64_t)v4, (uint64_t *)&unk_100EADD50);
    if (v21 == 1 && *(unsigned __int8 *)(a1 + *(int *)(v18 + 32)) - 1 <= 1)
    {
      sub_10017DF08(&qword_100E92850);
      uint64_t v22 = type metadata accessor for LocationModel();
      uint64_t v23 = *(void *)(v22 - 8);
      unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_100C251B0;
      unint64_t v26 = v25 + v24;
      uint64_t v27 = v26 + *(int *)(sub_10017DF08(&qword_100E63878) + 48);
      swift_storeEnumTagMultiPayload();
      uint64_t v28 = type metadata accessor for LocationOfInterest();
      _s7Weather24LocationCompositionStateOwst_0(v27, 1, 1, v28);
      (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v26, enum case for LocationModel.current(_:), v22);
      sub_100901AD4();
      uint64_t v32 = v25;
      sub_10037FE18(v29);
      uint64_t v17 = v32;
    }
    else
    {
      uint64_t v17 = *(void *)(v19 + *(int *)(type metadata accessor for LocationsState() + 24));
      swift_bridgeObjectRetain();
    }
    sub_1000C0964((uint64_t)v7, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  }
  return v17;
}

uint64_t sub_1000C0E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C08FC(a1, (uint64_t)v6, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v7 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a2, v6, v7);
  }
  sub_1000C0964((uint64_t)v6, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  return static CurrentLocation.placeholderIdentifier.getter();
}

uint64_t sub_1000C0F18@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63A50);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = Location.Identifier.id.getter();
  uint64_t v9 = v8;
  if (sub_1000C102C())
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(type metadata accessor for LocationViewerInput() + 40) + 8);
    uint64_t v11 = Location.Identifier.id.getter();
    sub_100141760(v11, v12, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = type metadata accessor for WeatherCondition();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v13);
  }
  return sub_1001D50D4(v7, v9, (uint64_t)v6, a2);
}

uint64_t sub_1000C102C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory____lazy_storage___conditionBackgroundOverridden;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory____lazy_storage___conditionBackgroundOverridden);
  if (v2 != 2) {
    return v2 & 1;
  }
  static Settings.VFX.overrideConditionBackground.getter();
  sub_100219E08();
  Configurable.setting<A>(_:)();
  swift_release();
  uint64_t result = v4;
  *(unsigned char *)(v0 + v1) = v4;
  return result;
}

uint64_t sub_1000C10CC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for WeatherCondition();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *sub_1000C1170(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherCondition();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E63A50);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000C1278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C12E0()
{
  return sub_1001A6D7C((void (*)(void))type metadata accessor for LocationViewComponent);
}

uint64_t sub_1000C12F8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1000C134C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1000C13A0(uint64_t a1)
{
  sub_10017DF08(&qword_100E6E840);
  uint64_t v2 = *(void *)(type metadata accessor for LocationViewComponent() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  sub_1001DBA6C(a1, v4 + v3);
  sub_1001DA998();
  swift_setDeallocating();
  return sub_1000C12E0();
}

void sub_1000C1470(uint64_t *a1@<X8>)
{
  uint64_t v25 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100162F18();
  uint64_t v13 = Array<A>.alerts(prominence:)();
  if (*(void *)(v13 + 16))
  {
    uint64_t v14 = *(void *)(Array<A>.originalAlerts(prominence:)() + 16);
    swift_bridgeObjectRelease();
    type metadata accessor for WeatherData(0);
    WeatherDataModel.currentWeather.getter();
    CurrentWeather.date.getter();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v9);
    *a1 = v13;
    a1[1] = v14;
    uint64_t v15 = type metadata accessor for SevereAlertComponent();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))((char *)a1 + *(int *)(v15 + 24), v8, v25);
    type metadata accessor for LocationViewComponent();
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = sub_100180994();
    _s7Weather24LocationCompositionStateOwst_0(v16, v17, v18, v19);
    sub_100162694();
  }
  else
  {
    type metadata accessor for LocationViewComponent();
    uint64_t v20 = sub_100162E38();
    _s7Weather24LocationCompositionStateOwst_0(v20, v21, v22, v23);
    sub_100162694();
    swift_bridgeObjectRelease();
  }
}

void *assignWithCopy for LocationViewerViewWeatherConditionBackground(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = v4;
  sub_1000C1E18(a1 + 3, a2 + 3);
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  return a1;
}

uint64_t sub_1000C16D0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[6];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    sub_10017DF4C(a1 + v7, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
      *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
      *(unsigned char *)(v8 + 18) = *(unsigned char *)(v9 + 18);
      uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v11 = v8 + v10;
      uint64_t v12 = v9 + v10;
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 9);
  unsigned __int8 v19 = *(unsigned char *)(v16 + 8);
  sub_100193DD4(*(void *)v16, v19, v18);
  uint64_t v20 = *(void *)v15;
  char v21 = *(unsigned char *)(v15 + 9);
  *(void *)uint64_t v15 = v17;
  uint64_t v22 = *(unsigned __int8 *)(v15 + 8);
  *(unsigned char *)(v15 + 8) = v19;
  *(unsigned char *)(v15 + 9) = v18;
  sub_10014D82C(v20, v22, v21);
  if (a1 != a2)
  {
    uint64_t v23 = a3[8];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(a2 + v23);
    sub_10017DF4C(a1 + v23, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[9];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (void *)(a2 + v27);
    sub_10017DF4C(a1 + v27, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      }
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)v34;
  char v36 = *(unsigned char *)(v34 + 8);
  sub_100195B7C(*(void *)v34, v36);
  uint64_t v37 = *(void *)v33;
  char v38 = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v36;
  sub_10018F6D8(v37, v38);
  uint64_t v39 = a3[11];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)v41;
  char v43 = *(unsigned char *)(v41 + 8);
  sub_100195B7C(*(void *)v41, v43);
  uint64_t v44 = *(void *)v40;
  char v45 = *(unsigned char *)(v40 + 8);
  *(void *)uint64_t v40 = v42;
  *(unsigned char *)(v40 + 8) = v43;
  sub_10018F6D8(v44, v45);
  uint64_t v46 = a3[12];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = *(void *)v48;
  char v50 = *(unsigned char *)(v48 + 8);
  sub_100195B7C(*(void *)v48, v50);
  uint64_t v51 = *(void *)v47;
  char v52 = *(unsigned char *)(v47 + 8);
  *(void *)uint64_t v47 = v49;
  *(unsigned char *)(v47 + 8) = v50;
  sub_10018F6D8(v51, v52);
  uint64_t v53 = a3[13];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = *(void *)v55;
  uint64_t v57 = *(void *)(v55 + 8);
  uint64_t v58 = *(void *)(v55 + 16);
  uint64_t v59 = *(void *)(v55 + 24);
  char v60 = *(unsigned char *)(v55 + 32);
  sub_100190CD4(*(void *)v55, v57, v58, v59, v60);
  uint64_t v61 = *(void *)v54;
  uint64_t v62 = *(void *)(v54 + 8);
  uint64_t v63 = *(void *)(v54 + 16);
  uint64_t v64 = *(void *)(v54 + 24);
  char v65 = *(unsigned char *)(v54 + 32);
  *(void *)uint64_t v54 = v56;
  *(void *)(v54 + 8) = v57;
  *(void *)(v54 + 16) = v58;
  *(void *)(v54 + 24) = v59;
  *(unsigned char *)(v54 + 32) = v60;
  sub_100191934(v61, v62, v63, v64, v65);
  uint64_t v66 = a3[14];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  uint64_t v69 = *(void *)v68;
  LOBYTE(v57) = *(unsigned char *)(v68 + 8);
  sub_100195B7C(*(void *)v68, v57);
  uint64_t v70 = *(void *)v67;
  char v71 = *(unsigned char *)(v67 + 8);
  *(void *)uint64_t v67 = v69;
  *(unsigned char *)(v67 + 8) = v57;
  sub_10018F6D8(v70, v71);
  uint64_t v72 = a3[15];
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (void *)(a2 + v72);
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)(a1 + a3[17]), (uint64_t *)(a2 + a3[17]));
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v75 = a3[19];
  uint64_t v76 = (void *)(a1 + v75);
  uint64_t v77 = (void *)(a2 + v75);
  uint64_t v78 = v77[1];
  *uint64_t v76 = *v77;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v76[1] = v78;
  sub_1000C1E18((uint64_t *)(a1 + a3[20]), (uint64_t *)(a2 + a3[20]));
  sub_1000C1E18((uint64_t *)(a1 + a3[21]), (uint64_t *)(a2 + a3[21]));
  uint64_t v79 = a3[22];
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  uint64_t v82 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
  uint64_t v83 = a3[23];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = (uint64_t *)(a2 + v83);
  uint64_t v86 = *v85;
  LOBYTE(v85) = *((unsigned char *)v85 + 8);
  *(void *)uint64_t v84 = v86;
  *(unsigned char *)(v84 + 8) = (_BYTE)v85;
  swift_retain();
  swift_release();
  uint64_t v87 = a3[24];
  uint64_t v117 = a3;
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  uint64_t v90 = *(void *)v89;
  uint64_t v91 = *(void *)(v89 + 8);
  uint64_t v92 = *(void *)(v89 + 16);
  uint64_t v93 = *(void *)(v89 + 24);
  uint64_t v94 = *(void *)(v89 + 32);
  uint64_t v95 = *(void *)(v89 + 40);
  char v96 = *(unsigned char *)(v89 + 48);
  sub_100193D54(*(void *)v89, v91, v92, v93, v94, v95, v96);
  uint64_t v97 = *(void *)v88;
  uint64_t v98 = *(void *)(v88 + 8);
  uint64_t v99 = *(void *)(v88 + 16);
  uint64_t v100 = *(void *)(v88 + 24);
  uint64_t v101 = *(void *)(v88 + 32);
  uint64_t v102 = *(void *)(v88 + 40);
  char v103 = *(unsigned char *)(v88 + 48);
  *(void *)uint64_t v88 = v90;
  *(void *)(v88 + 8) = v91;
  *(void *)(v88 + 16) = v92;
  *(void *)(v88 + 24) = v93;
  *(void *)(v88 + 32) = v94;
  *(void *)(v88 + 40) = v95;
  *(unsigned char *)(v88 + 48) = v96;
  sub_10014DC00(v97, v98, v99, v100, v101, v102, v103);
  uint64_t v104 = v117[25];
  uint64_t v105 = a1 + v104;
  uint64_t v106 = a2 + v104;
  *(unsigned char *)uint64_t v105 = *(unsigned char *)v106;
  *(void *)(v105 + 8) = *(void *)(v106 + 8);
  swift_retain();
  swift_release();
  uint64_t v107 = v117[26];
  uint64_t v108 = a1 + v107;
  uint64_t v109 = (uint64_t *)(a2 + v107);
  uint64_t v110 = *v109;
  uint64_t v111 = v109[1];
  LOBYTE(v92) = *((unsigned char *)v109 + 16);
  sub_100195B88();
  *(void *)uint64_t v108 = v110;
  *(void *)(v108 + 8) = v111;
  *(unsigned char *)(v108 + 16) = v92;
  sub_10018F6E4();
  uint64_t v112 = v117[27];
  uint64_t v113 = *(void **)(a2 + v112);
  uint64_t v114 = *(void **)(a1 + v112);
  *(void *)(a1 + v112) = v113;
  id v115 = v113;

  *(void *)(a1 + v117[28]) = *(void *)(a2 + v117[28]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000C1D60(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  uint64_t v4 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)(a1 + 24), v2 + 3);
  *(void *)(a1 + 64) = v2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = v2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = v2[10];
  uint64_t v6 = v2[11];
  LOBYTE(v2) = *((unsigned char *)v2 + 96);
  sub_100195B88();
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 88) = v6;
  *(unsigned char *)(a1 + 96) = (_BYTE)v2;
  sub_10018F6E4();
  return a1;
}

uint64_t *sub_1000C1E18(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1000C2048(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for WeatherCondition();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t destroy for CollisionModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));

  return swift_release();
}

uint64_t sub_1000C212C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 24);
  uint64_t v20 = *(void *)(v17 + 32);
  uint64_t v21 = *(void *)(v17 + 40);
  char v22 = *(unsigned char *)(v17 + 48);
  sub_100193004(v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(v16 + 16);
  uint64_t v24 = *(void *)(v16 + 24);
  uint64_t v25 = *(void *)(v16 + 32);
  uint64_t v26 = *(void *)(v16 + 40);
  *(void *)(v16 + 16) = v18;
  *(void *)(v16 + 24) = v19;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = v21;
  char v27 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v22;
  sub_100191D78(v23, v24, v25, v26, v27);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_retain();
  swift_release();
  uint64_t v28 = v8[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v18) = _s7Weather24LocationCompositionStateOwet_0(v29, 1, (uint64_t)v31);
  int v32 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, (uint64_t)v31);
  if (v18)
  {
    if (!v32)
    {
      *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
      *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
      *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
      *(void *)(v29 + 8) = *(void *)(v30 + 8);
      *(void *)(v29 + 16) = *(void *)(v30 + 16);
      uint64_t v33 = v31[8];
      uint64_t v34 = (void *)(v29 + v33);
      uint64_t v35 = (const void *)(v30 + v33);
      uint64_t v36 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E749B0);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v137 = v29;
      uint64_t v139 = v31;
      uint64_t v47 = v31[9];
      uint64_t v48 = v29 + v47;
      uint64_t v49 = v30 + v47;
      *(unsigned char *)uint64_t v48 = *(unsigned char *)(v30 + v47);
      *(void *)(v48 + 8) = *(void *)(v30 + v47 + 8);
      char v50 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v51 = v50[6];
      __dst = (void *)(v48 + v51);
      char v52 = (const void *)(v49 + v51);
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v36))
      {
        uint64_t v53 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(__dst, v52, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v36);
      }
      uint64_t v54 = v50[7];
      uint64_t v55 = (void *)(v48 + v54);
      uint64_t v56 = (void *)(v49 + v54);
      *uint64_t v55 = *v56;
      v55[1] = v56[1];
      *(void *)(v48 + v50[8]) = *(void *)(v49 + v50[8]);
      *(unsigned char *)(v137 + v31[10]) = *(unsigned char *)(v30 + v31[10]);
      uint64_t v57 = v31[11];
      uint64_t v58 = (void *)(v137 + v57);
      uint64_t v59 = (const void *)(v30 + v57);
      uint64_t v60 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        uint64_t v61 = sub_10017DF08(&qword_100E63508);
        memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      }
      *(unsigned char *)(v137 + v31[12]) = *(unsigned char *)(v30 + v31[12]);
      *(unsigned char *)(v137 + v31[13]) = *(unsigned char *)(v30 + v31[13]);
      uint64_t v62 = v31[14];
      uint64_t v63 = (unsigned char *)(v137 + v62);
      uint64_t v64 = (unsigned char *)(v30 + v62);
      char v65 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, (uint64_t)v65))
      {
        uint64_t v66 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        *uint64_t v63 = *v64;
        uint64_t v67 = v65[5];
        uint64_t v68 = &v63[v67];
        uint64_t v69 = &v64[v67];
        uint64_t v70 = type metadata accessor for Location();
        char v71 = v68;
        uint64_t v31 = v139;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v70 - 8) + 16))(v71, v69, v70);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v60 - 8) + 16))(&v63[v65[6]], &v64[v65[6]], v60);
        v63[v65[7]] = v64[v65[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, (uint64_t)v65);
      }
      uint64_t v72 = v137;
      uint64_t v73 = (uint64_t)v31;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v32)
  {
    sub_1000B0888(v29, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v39 = (void *)v29;
    uint64_t v40 = (const void *)v30;
LABEL_14:
    memcpy(v39, v40, v38);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
  *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v31[8];
  uint64_t v42 = (void *)(v29 + v41);
  char v43 = (const void *)(v30 + v41);
  uint64_t v44 = type metadata accessor for URL();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v98 = *(void *)(v44 - 8);
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v98 + 8))(v42, v44);
LABEL_41:
    uint64_t v99 = sub_10017DF08(&qword_100E749B0);
    memcpy(v42, v43, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v98 + 24))(v42, v43, v44);
LABEL_42:
  uint64_t v140 = v31;
  uint64_t v100 = v31[9];
  uint64_t v101 = v29 + v100;
  uint64_t v102 = v30 + v100;
  *(unsigned char *)uint64_t v101 = *(unsigned char *)(v30 + v100);
  *(void *)(v101 + 8) = *(void *)(v30 + v100 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v138 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v103 = v138[6];
  uint64_t v104 = (const void *)(v102 + v103);
  uint64_t v135 = v101 + v103;
  int v105 = _s7Weather24LocationCompositionStateOwet_0(v101 + v103, 1, v44);
  int v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v44);
  if (v105)
  {
    if (v106)
    {
      size_t v107 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v108 = (void *)v135;
LABEL_47:
      memcpy(v108, v104, v107);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v135, v104, v44);
    _s7Weather24LocationCompositionStateOwst_0(v135, 0, 1, v44);
  }
  else
  {
    uint64_t v109 = *(void *)(v44 - 8);
    if (v106)
    {
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v135, v44);
      size_t v107 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v108 = (void *)v135;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v109 + 24))(v135, v104, v44);
  }
LABEL_51:
  uint64_t v110 = v138[7];
  uint64_t v111 = (void *)(v101 + v110);
  uint64_t v112 = (void *)(v102 + v110);
  *uint64_t v111 = *v112;
  v111[1] = v112[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v101 + v138[8]) = *(void *)(v102 + v138[8]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v29 + v140[10]) = *(unsigned char *)(v30 + v140[10]);
  uint64_t v113 = v140[11];
  uint64_t v114 = (void *)(v29 + v113);
  id v115 = (const void *)(v30 + v113);
  uint64_t v116 = type metadata accessor for LocationOfInterest();
  int v117 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v116);
  int v118 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116);
  if (v117)
  {
    if (!v118)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v119 = *(void *)(v116 - 8);
  if (v118)
  {
    (*(void (**)(void *, uint64_t))(v119 + 8))(v114, v116);
LABEL_56:
    uint64_t v120 = sub_10017DF08(&qword_100E63508);
    memcpy(v114, v115, *(void *)(*(void *)(v120 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v119 + 24))(v114, v115, v116);
LABEL_57:
  *(unsigned char *)(v29 + v140[12]) = *(unsigned char *)(v30 + v140[12]);
  *(unsigned char *)(v29 + v140[13]) = *(unsigned char *)(v30 + v140[13]);
  uint64_t v121 = v140[14];
  v122 = (unsigned char *)(v29 + v121);
  uint64_t v123 = (unsigned char *)(v30 + v121);
  v124 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v125 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, (uint64_t)v124);
  int v126 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, (uint64_t)v124);
  if (v125)
  {
    if (!v126)
    {
      unsigned char *v122 = *v123;
      uint64_t v127 = v124[5];
      uint64_t v128 = &v122[v127];
      uint64_t v129 = &v123[v127];
      uint64_t v130 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 16))(&v122[v124[6]], &v123[v124[6]], v116);
      v122[v124[7]] = v123[v124[7]];
      uint64_t v72 = (uint64_t)v122;
      uint64_t v73 = (uint64_t)v124;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v126)
  {
    sub_1000B0888((uint64_t)v122, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v39 = v122;
    uint64_t v40 = v123;
    goto LABEL_14;
  }
  unsigned char *v122 = *v123;
  uint64_t v131 = v124[5];
  uint64_t v132 = &v122[v131];
  uint64_t v133 = &v123[v131];
  uint64_t v134 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v134 - 8) + 24))(v132, v133, v134);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 24))(&v122[v124[6]], &v123[v124[6]], v116);
  v122[v124[7]] = v123[v124[7]];
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  uint64_t v75 = *(void **)(a2 + v74);
  uint64_t v76 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = v75;
  id v77 = v75;

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v78 = v8[19];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  uint64_t v81 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  uint64_t v82 = v8[20];
  uint64_t v83 = (void *)(a1 + v82);
  uint64_t v84 = (const void *)(a2 + v82);
  uint64_t v85 = type metadata accessor for ForegroundEffect();
  int v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v85);
  int v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85);
  if (!v86)
  {
    uint64_t v88 = *(void *)(v85 - 8);
    if (!v87)
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 24))(v83, v84, v85);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v88 + 8))(v83, v85);
    goto LABEL_36;
  }
  if (v87)
  {
LABEL_36:
    uint64_t v89 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v90 = v8[24];
  uint64_t v91 = a1 + v90;
  uint64_t v92 = a2 + v90;
  uint64_t v93 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 24))(v91, v92, v93);
  uint64_t v94 = *(int *)(a3 + 20);
  uint64_t v95 = (void *)(a1 + v94);
  char v96 = (void *)(a2 + v94);
  *uint64_t v95 = *v96;
  v95[1] = v96[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000C3198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v20 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 64);
  uint64_t v19 = *(void *)(a2 + 80);
  char v12 = *(unsigned char *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001910C8(v6, v7, v8, v9, v10, v18, v20, v19, v11, v12);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = v20;
  *(void *)(a1 + 80) = v19;
  *(void *)(a1 + 88) = v11;
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *(unsigned char *)(a1 + 96) = v12;
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000C3318@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA67E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationViewGeometry(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = static Color.clear.getter();
  GeometryProxy.size.getter();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  GeometryProxy.safeAreaInsets.getter();
  sub_1000C34A0(v10, v12, 0, (uint64_t)v7, v13, v14, v15, v16);
  sub_1000E5BDC((uint64_t)v7, (uint64_t)v4, (void (*)(void))type metadata accessor for LocationViewGeometry);
  uint64_t v17 = sub_10017DF08(&qword_100EA67F0);
  sub_10006DF38((uint64_t)v4, (uint64_t)a1 + *(int *)(v17 + 36), &qword_100EA67E8);
  *a1 = v8;
  swift_retain();
  sub_100178110((uint64_t)v4, &qword_100EA67E8);
  sub_1000E5B88((uint64_t)v7, (void (*)(void))type metadata accessor for LocationViewGeometry);
  return swift_release();
}

uint64_t sub_1000C34A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v76 = a2;
  uint64_t v75 = (char *)a1;
  uint64_t v14 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v14 - 8);
  id v77 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v20);
  char v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v74 = (uint64_t)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v70 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v70 - v29;
  uint64_t v31 = type metadata accessor for ContentSizeCategory();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v70 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0)
  {
    char v71 = (unsigned char *)a4;
    uint64_t v70 = v19;
    uint64_t v72 = v33;
    uint64_t v73 = v32;
    double v36 = *(double *)&v75;
    uint64_t v37 = v17;
    uint64_t v38 = type metadata accessor for GridGeometryComputerModifier(0);
    uint64_t v75 = v35;
    sub_10014E6E8();
    uint64_t v76 = v38;
    uint64_t v39 = v37;
    sub_10019B2FC();
    (*(void (**)(char *, void, uint64_t))(v37 + 104))(v28, enum case for UserInterfaceSizeClass.compact(_:), v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v16);
    uint64_t v40 = (uint64_t)&v22[*(int *)(v20 + 48)];
    sub_10006DF38((uint64_t)v30, (uint64_t)v22, &qword_100E65ED8);
    sub_10006DF38((uint64_t)v28, v40, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v16) == 1)
    {
      sub_100178110((uint64_t)v28, &qword_100E65ED8);
      sub_100178110((uint64_t)v30, &qword_100E65ED8);
      int v41 = _s7Weather24LocationCompositionStateOwet_0(v40, 1, v16);
      uint64_t v42 = v71;
      if (v41 == 1)
      {
        sub_100178110((uint64_t)v22, &qword_100E65ED8);
        uint64_t v43 = 1;
        uint64_t v44 = v78;
LABEL_16:
        uint64_t v57 = (uint64_t)v77;
        sub_1001EFFBC();
        uint64_t v58 = v44 + *(int *)(v76 + 28);
        uint64_t v59 = *(void *)v58;
        char v60 = *(unsigned char *)(v58 + 8);
        sub_100195B7C(*(void *)v58, v60);
        sub_1000C3D18();
        char v62 = v61;
        sub_10018F6D8(v59, v60);
        uint64_t v63 = (uint64_t)v75;
        unsigned __int8 v64 = sub_1000C4554((uint64_t)v75, v43, v57, v36);
        sub_1000C4838(v64, v43, v57, v62, v79, v36);
        sub_1000E5B88(v57, (void (*)(void))type metadata accessor for DisplayMetrics);
        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v63, v73);
        type metadata accessor for GridGeometryValidator();
        sub_1000C3E38(&qword_100EA67F8, (void (*)(uint64_t))type metadata accessor for GridGeometryValidator);
        StateObject.wrappedValue.getter();
        sub_1000C440C((uint64_t)v79, (uint64_t)__src);
        swift_release();
        uint64_t v65 = *(void *)v58;
        char v66 = *(unsigned char *)(v58 + 8);
        sub_100195B7C(*(void *)v58, v66);
        sub_1000C3D18();
        char v68 = v67;
        sub_10018F6D8(v65, v66);
        uint64_t v69 = type metadata accessor for LocationViewGeometry(0);
        sub_1000C3EA4((uint64_t)&v42[*(int *)(v69 + 24)]);
        uint64_t result = (uint64_t)memcpy(v42, __src, 0x48uLL);
        v42[72] = v68;
        char v52 = (double *)&v42[*(int *)(v69 + 28)];
        *char v52 = a5;
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v53 = v74;
      sub_10006DF38((uint64_t)v22, v74, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, v16) != 1)
      {
        uint64_t v54 = v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v70, v40, v16);
        sub_1000C3E38(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        char v55 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v56 = *(void (**)(char *, uint64_t))(v39 + 8);
        v56(v54, v16);
        sub_100178110((uint64_t)v28, &qword_100E65ED8);
        sub_100178110((uint64_t)v30, &qword_100E65ED8);
        v56((char *)v53, v16);
        sub_100178110((uint64_t)v22, &qword_100E65ED8);
        uint64_t v44 = v78;
        uint64_t v42 = v71;
        if (v55)
        {
          uint64_t v43 = 1;
          goto LABEL_16;
        }
LABEL_15:
        uint64_t v43 = 2;
        goto LABEL_16;
      }
      sub_100178110((uint64_t)v28, &qword_100E65ED8);
      sub_100178110((uint64_t)v30, &qword_100E65ED8);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v53, v16);
      uint64_t v42 = v71;
    }
    sub_100178110((uint64_t)v22, &qword_100E662F0);
    uint64_t v44 = v78;
    goto LABEL_15;
  }
  if (qword_100E629A8 != -1) {
    swift_once();
  }
  uint64_t v45 = qword_100F52238;
  uint64_t v46 = type metadata accessor for LocationViewGeometry(0);
  uint64_t v47 = a4 + *(int *)(v46 + 24);
  uint64_t v48 = enum case for TargetWindowSizeClass.compact(_:);
  uint64_t v49 = type metadata accessor for TargetWindowSizeClass();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v47, v48, v49);
  if (qword_100E62748 != -1) {
    uint64_t result = swift_once();
  }
  a6 = *((double *)&xmmword_100F51D48 + 1);
  uint64_t v51 = xmmword_100F51D48;
  a7 = *(double *)&qword_100F51D58;
  a8 = *(double *)&qword_100F51D60;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0x4062000000000000;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = 0x4030000000000000;
  *(_WORD *)(a4 + 48) = 768;
  *(void *)(a4 + 56) = 0x4034000000000000;
  *(void *)(a4 + 64) = v45;
  *(unsigned char *)(a4 + 72) = 0x80;
  char v52 = (double *)(a4 + *(int *)(v46 + 28));
  *(void *)char v52 = v51;
LABEL_17:
  v52[1] = a6;
  v52[2] = a7;
  v52[3] = a8;
  return result;
}

void sub_1000C3D18()
{
  sub_100162EA0();
  sub_100214D8C();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  if ((v0 & 1) == 0)
  {
    swift_retain();
    uint64_t v2 = (_DWORD *)static os_log_type_t.fault.getter();
    uint64_t v3 = static Log.runtimeIssuesLog.getter();
    if (sub_1001260AC(v3))
    {
      sub_10017E670();
      uint64_t v4 = sub_100184468();
      sub_1005EFDB8(v4);
      *uint64_t v2 = 136315138;
      sub_1005EFED4();
      uint64_t v7 = sub_10016414C(0xD00000000000001BLL, v5, v6);
      sub_1001853DC(v7);
      sub_10019DEAC((void *)&_mh_execute_header, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      sub_1001EA978();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    sub_10012B990();
    uint64_t v10 = sub_100185B08();
    v11(v10);
  }
  sub_100162694();
}

uint64_t sub_1000C3E38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for GridGeometryValidator()
{
  return self;
}

uint64_t sub_1000C3EA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v38 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v36 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v36 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = v1 + *(int *)(type metadata accessor for GridGeometryComputerModifier(0) + 24);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, v17);
  sub_100149AE8();
  char v19 = v18;
  sub_10018F6D8(v16, v17);
  if ((v19 & 1) == 0)
  {
    sub_10019B2FC();
    uint64_t v25 = v38;
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v12, enum case for UserInterfaceSizeClass.compact(_:), v2);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v2);
    uint64_t v26 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_10006DF38((uint64_t)v14, (uint64_t)v6, &qword_100E65ED8);
    sub_10006DF38((uint64_t)v12, v26, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v2) == 1)
    {
      sub_100178110((uint64_t)v12, &qword_100E65ED8);
      sub_100178110((uint64_t)v14, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v2) == 1)
      {
        sub_100178110((uint64_t)v6, &qword_100E65ED8);
LABEL_15:
        uint64_t v34 = enum case for TargetWindowSizeClass.compact(_:);
        uint64_t v35 = type metadata accessor for TargetWindowSizeClass();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v39, v34, v35);
      }
    }
    else
    {
      uint64_t v27 = v37;
      sub_10006DF38((uint64_t)v6, v37, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v2) != 1)
      {
        uint64_t v31 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v36, v26, v2);
        sub_1000C3E38(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v25 + 8);
        v33(v31, v2);
        sub_100178110((uint64_t)v12, &qword_100E65ED8);
        sub_100178110((uint64_t)v14, &qword_100E65ED8);
        v33((char *)v27, v2);
        sub_100178110((uint64_t)v6, &qword_100E65ED8);
        if (v32) {
          goto LABEL_15;
        }
        return sub_1006F1998(v39);
      }
      sub_100178110((uint64_t)v12, &qword_100E65ED8);
      sub_100178110((uint64_t)v14, &qword_100E65ED8);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v2);
    }
    sub_100178110((uint64_t)v6, &qword_100E662F0);
    return sub_1006F1998(v39);
  }
  id v20 = [self currentDevice];
  id v21 = [v20 userInterfaceIdiom];

  uint64_t v22 = type metadata accessor for TargetWindowSizeClass();
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);
  if (v21) {
    uint64_t v24 = (unsigned int *)&enum case for TargetWindowSizeClass.portraitRegular(_:);
  }
  else {
    uint64_t v24 = (unsigned int *)&enum case for TargetWindowSizeClass.compact(_:);
  }
  uint64_t v28 = *v24;
  uint64_t v29 = v39;

  return v23(v29, v28, v22);
}

BOOL sub_1000C440C@<W0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t v9 = *(unsigned __int8 *)(a1 + 48);
  unint64_t v10 = *(unsigned __int8 *)(a1 + 49);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v13 = *(unsigned char *)(a1 + 32) & 1;
  BOOL v14 = v13 != 0;
  BOOL result = sub_1000C44FC(a1);
  if (result)
  {
    v2[2] = v4;
    v2[3] = v6;
    v2[4] = v5;
    v2[5] = v7;
    v2[6] = v13;
    v2[7] = v8;
    v2[8] = v9 | (v10 << 8);
    v2[9] = v12;
    v2[10] = v11;
  }
  else
  {
    uint64_t v16 = *((unsigned __int8 *)v2 + 48);
    if (v16 != 255)
    {
      uint64_t v12 = v2[9];
      uint64_t v11 = v2[10];
      unint64_t v9 = v2[8];
      uint64_t v8 = v2[7];
      uint64_t v5 = v2[4];
      uint64_t v7 = v2[5];
      uint64_t v6 = v2[3];
      uint64_t v4 = v2[2];
      unint64_t v10 = v9 >> 8;
      BOOL v14 = v16 & 1;
    }
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + 32) = v14;
  *(void *)(a2 + 40) = v8;
  *(unsigned char *)(a2 + 48) = v9;
  *(unsigned char *)(a2 + 49) = v10;
  *(void *)(a2 + 56) = v12;
  *(void *)(a2 + 64) = v11;
  return result;
}

BOOL sub_1000C44FC(uint64_t a1)
{
  BOOL result = 1;
  if (*(unsigned __int8 *)(a1 + 48) >= 2u)
  {
    sub_1000E0DAC(a1 + 49, (uint64_t)&v2);
    sub_1000E0DAC((uint64_t)&v2, (uint64_t)&v3);
    if (v3 != 3) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000C4554(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v9 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v9 - 8);
  sub_10011BFD8();
  uint64_t v10 = type metadata accessor for ContentSizeCategory();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 != enum case for ContentSizeCategory.extraSmall(_:)
    && v14 != enum case for ContentSizeCategory.small(_:)
    && v14 != enum case for ContentSizeCategory.medium(_:)
    && v14 != enum case for ContentSizeCategory.large(_:)
    && v14 != enum case for ContentSizeCategory.extraLarge(_:)
    && v14 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v14 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    if (v14 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v14 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v14 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v14 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v14 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_1001CB2DC(a3, v4);
  if (a2 != 1)
  {
    id v25 = [self mainScreen];
    [v25 bounds];
    CGFloat v27 = v26;
    CGFloat v29 = v28;
    CGFloat v31 = v30;
    CGFloat v33 = v32;

    sub_1009F36BC(v27, v29, v31, v33);
  }
  if (a4 < 620.0)
  {
    sub_1001CB340(v4);
    return 0;
  }
  sub_1009F3618(a2);
  double v36 = v35;
  sub_1001CB340(v4);
  if (v36 > a4) {
    return 1;
  }
  else {
    return 2;
  }
}

void *sub_1000C4838@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>, double a6@<D0>)
{
  sub_1000C4A78(a3, a4);
  double v13 = v12;
  double v15 = v14;
  char v16 = sub_10011EA94(a3, a4);
  BOOL v17 = sub_10011E970(a3, a4);
  __int16 v18 = sub_1000C498C(a1, v16 & 1, v17);
  uint64_t v19 = sub_1000C49C4(a2, a6);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  char v25 = v24;
  type metadata accessor for DisplayMetrics();
  char v26 = DynamicTypeSize.isAccessibilitySize.getter();
  double v27 = a6;
  if ((v26 & 1) == 0)
  {
    if (qword_100E629A8 != -1) {
      swift_once();
    }
    double v27 = *(double *)&qword_100F52238;
  }
  sub_1000C4CE4(*(double *)&v19, v21, v23, v25 & 1, v18, HIBYTE(v18), (uint64_t)__src, a6, v15, v13, v27);
  return memcpy(a5, __src, 0x48uLL);
}

uint64_t sub_1000C498C(unsigned __int8 a1, char a2, char a3)
{
  if (a3) {
    unsigned int v3 = 4;
  }
  else {
    unsigned int v3 = 3;
  }
  if (a2)
  {
    unsigned int v3 = 0x10003u >> (8 * a1);
    int v4 = 0;
  }
  else
  {
    int v4 = a1;
  }
  return v4 | (v3 << 8);
}

uint64_t sub_1000C49C4(uint64_t a1, double a2)
{
  if (a1 != 1)
  {
    id v3 = [self mainScreen];
    [v3 bounds];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    sub_1009F36BC(v5, v7, v9, v11);
  }
  return *(void *)&a2;
}

void sub_1000C4A78(uint64_t a1, char a2)
{
  id v4 = [self currentDevice];
  id v5 = [v4 userInterfaceIdiom];

  if (v5)
  {
    double v6 = self;
    id v7 = [v6 mainScreen];
    [v7 bounds];
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;

    v27.origin.x = v9;
    v27.origin.y = v11;
    v27.size.width = v13;
    v27.size.height = v15;
    double Width = CGRectGetWidth(v27);
    id v17 = [v6 mainScreen];
    [v17 bounds];
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;
    CGFloat v25 = v24;

    v28.origin.x = v19;
    v28.origin.y = v21;
    v28.size.width = v23;
    v28.size.height = v25;
    double Height = CGRectGetHeight(v28);
    if (Width > Height) {
      double Height = Width;
    }
    if (Height >= 1366.0) {
      sub_10011EA94(a1, a2);
    }
  }
}

void sub_1000C4CE4(double a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, unsigned __int8 a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  int v21 = a6;
  if ((a4 & 1) != 0 && sub_1000C4DE8() < a1 && (v21 - 3) <= 1) {
    a9 = round((a1 - sub_1000C4DE8()) * 0.5) + a9;
  }
  *(double *)a7 = a8;
  *(double *)(a7 + 8) = a1;
  *(void *)(a7 + 16) = a2;
  *(void *)(a7 + 24) = a3;
  *(unsigned char *)(a7 + 32) = a4 & 1;
  *(double *)(a7 + 40) = a10;
  *(unsigned char *)(a7 + 48) = a5;
  *(unsigned char *)(a7 + 49) = v21;
  *(double *)(a7 + 56) = a9;
  *(double *)(a7 + 64) = a11;
}

double sub_1000C4DE8()
{
  sub_1000C4E58();
  double v2 = v1;
  double v3 = sub_1000E0E84();
  sub_1000E0DAC(v0 + 49, (uint64_t)&v7);
  sub_1000E0DAC((uint64_t)&v7, (uint64_t)&v8);
  double v4 = sub_1001809F4();
  if (!v5) {
    double v4 = 0.0;
  }
  return v2 + v3 + *(double *)(v0 + 56) + *(double *)(v0 + 56) + v4;
}

void sub_1000C4E58()
{
  sub_1000E0DAC(v0 + 49, (uint64_t)&v4);
  sub_1000E0DAC((uint64_t)&v4, (uint64_t)&v6);
  sub_10017AD60();
  switch(v1)
  {
    case 6:
      sub_1000E0E14(v0 + 8, (uint64_t)v3);
      sub_1000E0E14((uint64_t)v3, (uint64_t)v7);
      if (v8) {
        goto LABEL_9;
      }
      break;
    case 4:
      sub_1000E0E14(v0 + 8, (uint64_t)v3);
      sub_1000E0E14((uint64_t)v3, (uint64_t)v7);
      if (v8) {
        goto LABEL_9;
      }
      break;
    case 2:
      sub_1000E0E14(v0 + 8, (uint64_t)v3);
      sub_1000E0E14((uint64_t)v3, (uint64_t)v7);
      if (v8)
      {
LABEL_9:
        sub_1000E0E84();
        sub_1000E0DAC((uint64_t)&v4, (uint64_t)&v5);
        sub_1001809F4();
        unsigned __int8 v2 = sub_1001D2114();
        sub_10017D9F8(v2);
      }
      break;
    default:
      sub_1001A11DC();
      __break(1u);
      break;
  }
}

uint64_t sub_1000C4FDC()
{
  type metadata accessor for ReportWeatherContentView();
  sub_10017CD20();
  swift_release();
  swift_release();
  swift_release();
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000C50D4()
{
  sub_1001837E8();
  uint64_t v1 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = type metadata accessor for TimeState();
  sub_100164920(v5);
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  sub_100179DC0();
  sub_100162F0C();
  v6();
  sub_1001649A8();
  v7();
  swift_release();
  sub_100166A98();
  return swift_deallocObject();
}

uint64_t sub_1000C526C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v9;
        uint64_t v10 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v10;
        uint64_t v11 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v11;
        uint64_t v12 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v12;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v13 = *(void *)(a2 + 80);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = v13;
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v14 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v14;
        uint64_t v15 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v15;
        uint64_t v16 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v16;
        uint64_t v17 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v17;
        uint64_t v18 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v18;
        uint64_t v19 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v19;
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        uint64_t v20 = *(void *)(a2 + 112);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = v20;
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v21 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v24 = a1 + v23;
        uint64_t v25 = a2 + v23;
        uint64_t v27 = *(void *)(a2 + v23);
        uint64_t v26 = *(void *)(a2 + v23 + 8);
        *(void *)uint64_t v24 = v27;
        *(void *)(v24 + 8) = v26;
        uint64_t v28 = *(void *)(v25 + 24);
        *(void *)(v24 + 16) = *(void *)(v25 + 16);
        *(void *)(v24 + 24) = v28;
        *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
        uint64_t v29 = *(void *)(v25 + 48);
        *(void *)(v24 + 40) = *(void *)(v25 + 40);
        *(void *)(v24 + 48) = v29;
        *(unsigned char *)(a1 + *(int *)(v22 + 24)) = *(unsigned char *)(a2 + *(int *)(v22 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v30 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v30;
        uint64_t v31 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v31;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        uint64_t v32 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v32;
        uint64_t v33 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v33;
        uint64_t v34 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v34;
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        uint64_t v35 = *(void *)(a2 + 120);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v7;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v8 = *(void *)(a2 + 48);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    double v36 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    *(void *)(a1 + v36[5]) = *(void *)(a2 + v36[5]);
    *(void *)(a1 + v36[6]) = *(void *)(a2 + v36[6]);
    uint64_t v37 = v36[7];
    uint64_t v38 = a1 + v37;
    uint64_t v39 = a2 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
    *(unsigned char *)(a1 + v36[8]) = *(unsigned char *)(a2 + v36[8]);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = *(int *)(a3 + 20);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void *)v42;
  char v44 = *(unsigned char *)(v42 + 8);
  sub_100195B7C(*(void *)v42, v44);
  *(void *)uint64_t v41 = v43;
  *(unsigned char *)(v41 + 8) = v44;
  uint64_t v45 = *(int *)(a3 + 24);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  *(void *)(v46 + 24) = *(void *)(v47 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_1000C56A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v33 = a3;
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v28 = *(void *)(v5 + 64);
  __chkstk_darwin(a1);
  uint64_t v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getWitnessTable();
  uint64_t v7 = type metadata accessor for _ViewModifier_Content();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v34 = v7;
  uint64_t v35 = &type metadata for Bool;
  uint64_t v36 = WitnessTable;
  uint64_t v37 = &protocol witness table for Bool;
  uint64_t v31 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v30 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v9 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = *(void *)(v3 + 16);
  char v15 = *(unsigned char *)(v3 + 24);
  sub_100195B7C(v14, v15);
  sub_100149AE8();
  char v17 = v16;
  sub_10018F6D8(v14, v15);
  LOBYTE(v34) = v17 & 1;
  uint64_t v18 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v27, v3, a2);
  unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v20 = swift_allocObject();
  long long v21 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v20 + 32) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v19, v18, a2);
  uint64_t v22 = swift_checkMetadataState();
  uint64_t v23 = WitnessTable;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  uint64_t v34 = v22;
  uint64_t v35 = &type metadata for Bool;
  uint64_t v36 = v23;
  uint64_t v37 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  sub_100121584((uint64_t)v11, OpaqueTypeMetadata2, (uint64_t)v13);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v30 + 8);
  v24(v11, OpaqueTypeMetadata2);
  sub_100121584((uint64_t)v13, OpaqueTypeMetadata2, v33);
  return ((uint64_t (*)(char *, uint64_t))v24)(v13, OpaqueTypeMetadata2);
}

uint64_t sub_1000C5A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  char v8 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  swift_retain();
  sub_100195B7C(v7, v8);
  *(void *)(v5 + 16) = v7;
  *(unsigned char *)(v5 + 24) = v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v10 = v9 + 16;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = v11;
  unint64_t v51 = ~(unint64_t)v11;
  uint64_t v52 = *(void *)(a3 + 24);
  char v50 = *(void (**)(unint64_t, unint64_t))(v9 + 16);
  v50((v12 + 25 + v5) & ~v12, (v12 + 25 + v6) & ~v12);
  uint64_t v13 = *(void *)(v10 + 48);
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80) | v11;
  uint64_t v17 = (v16 | 7) + v13;
  uint64_t v18 = (v17 + ((v12 + 25 + v5) & ~v12)) & ~(v16 | 7);
  uint64_t v19 = (v17 + ((v12 + 25 + v6) & ~v12)) & ~(v16 | 7);
  uint64_t v20 = *(unsigned int *)(v15 + 84);
  uint64_t v21 = *(unsigned int *)(v10 + 68);
  uint64_t v22 = *(void *)(v15 + 64) + v11;
  uint64_t v23 = (v22 & v51) + v13;
  unint64_t v24 = (v23 + 7 + ((v23 + v16) & ~v16)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v24 + 8;
  int v26 = v21 | v20;
  uint64_t v48 = v23 + v16;
  uint64_t v49 = v23 + 7;
  if (!(v21 | v20))
  {
    if (!*(unsigned char *)(v19 + v25)) {
      goto LABEL_9;
    }
    int v31 = *(unsigned __int8 *)(v19 + v25) - 1;
    int v32 = v25 & 0xFFFFFFF8;
    if ((v25 & 0xFFFFFFF8) != 0)
    {
      int v31 = 0;
      int v32 = *(_DWORD *)v19;
    }
    if ((v32 | v31) == 0xFFFFFFFF) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v20 >= v21)
  {
    uint64_t v39 = v14;
    int v40 = _s7Weather24LocationCompositionStateOwet_0(v19, v20, v14);
    uint64_t v14 = v39;
    if (!v40) {
      goto LABEL_9;
    }
LABEL_12:
    if (v26) {
      size_t v41 = v24 + 8;
    }
    else {
      size_t v41 = v24 + 9;
    }
    memcpy((void *)v18, (const void *)v19, v41);
    uint64_t v38 = a1;
    goto LABEL_16;
  }
  uint64_t v27 = (v22 + v19) & v51;
  uint64_t v28 = v19;
  uint64_t v29 = v14;
  int v30 = _s7Weather24LocationCompositionStateOwet_0(v27, v21, v52);
  uint64_t v14 = v29;
  uint64_t v19 = v28;
  if (v30) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v46 = ~v16;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  uint64_t v34 = v14;
  v33(v18, v19, v14);
  ((void (*)(unint64_t, unint64_t, uint64_t))v50)((v22 + v18) & v51, (v22 + v19) & v51, v52);
  int v47 = v26;
  uint64_t v35 = (v48 + v18) & v46;
  uint64_t v36 = (v48 + v19) & v46;
  v33(v35, v36, v34);
  ((void (*)(unint64_t, unint64_t, uint64_t))v50)((v22 + v35) & v51, (v22 + v36) & v51, v52);
  uint64_t v37 = v49 + v35;
  int v26 = v47;
  *(void *)(v37 & 0xFFFFFFFFFFFFFFF8) = *(void *)((v49 + v36) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = a1;
  if (!v47) {
    *(unsigned char *)(v18 + v25) = 0;
  }
LABEL_16:
  unint64_t v42 = v24 + 9;
  if (v26) {
    unint64_t v42 = v24 + 8;
  }
  unint64_t v43 = ((v18 | 7) + v42) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = ((v19 | 7) + v42) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v43 = *(void *)v44;
  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  *(unsigned char *)(v43 + 16) = *(unsigned char *)(v44 + 16);
  swift_retain();
  swift_retain();
  return v38;
}

uint64_t sub_1000C5D58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(unsigned char *)(v14 + 32) = *(unsigned char *)(v15 + 32);
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  swift_retain();
  sub_100195B7C(v20, v21);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  char v26 = *(unsigned char *)(v24 + 8);
  sub_100195B7C(*(void *)v24, v26);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  uint64_t v27 = a3[11];
  uint64_t v28 = a3[12];
  uint64_t v29 = (void *)(a1 + v27);
  int v30 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  *uint64_t v29 = v31;
  v29[1] = v32;
  uint64_t v33 = (void *)(a1 + v28);
  uint64_t v34 = (void *)(a2 + v28);
  swift_retain();
  sub_10017DF08(&qword_100E78CE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = type metadata accessor for ForegroundEffect();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
    {
      uint64_t v36 = sub_10017DF08(&qword_100E65FA8);
      memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
    }
  }
  else
  {
    *uint64_t v33 = *v34;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a3[13];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  sub_10017DF08(&qword_100E82BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v38 = *v39;
    uint64_t v40 = *(int *)(type metadata accessor for LocationComponentCornerRadiusConfiguration(0) + 20);
    size_t v41 = (char *)v38 + v40;
    unint64_t v42 = (char *)v39 + v40;
    uint64_t v43 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  else
  {
    *uint64_t v38 = *v39;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000C6020(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100EAA740);
    sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  sub_100195B88();
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  sub_10018F6E4();
  uint64_t v155 = a1;
  uint64_t v156 = a3;
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v154 = a2;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Location.Identifier();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v17 + 24);
  v18(v14, v15, v16);
  uint64_t v19 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v20 = v19[5];
  char v21 = &v14[v20];
  uint64_t v22 = &v15[v20];
  LODWORD(v10) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v14[v20], 1, v16);
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v16);
  if (v10)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v22, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v16);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
LABEL_11:
    uint64_t v24 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_12;
  }
  v18(v21, v22, v16);
LABEL_12:
  uint64_t v25 = v19[6];
  char v26 = &v14[v25];
  uint64_t v27 = &v15[v25];
  *(void *)char v26 = *(void *)&v15[v25];
  *((void *)v26 + 1) = *(void *)&v15[v25 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v27 + 2);
  uint64_t v29 = *((void *)v27 + 3);
  uint64_t v30 = *((void *)v27 + 4);
  uint64_t v31 = *((void *)v27 + 5);
  char v32 = v27[48];
  sub_100193004(v28, v29, v30, v31, v32);
  uint64_t v33 = *((void *)v26 + 2);
  uint64_t v34 = *((void *)v26 + 3);
  uint64_t v35 = *((void *)v26 + 4);
  uint64_t v36 = *((void *)v26 + 5);
  *((void *)v26 + 2) = v28;
  *((void *)v26 + 3) = v29;
  *((void *)v26 + 4) = v30;
  *((void *)v26 + 5) = v31;
  char v37 = v26[48];
  v26[48] = v32;
  sub_100191D78(v33, v34, v35, v36, v37);
  *((void *)v26 + 7) = *((void *)v27 + 7);
  *((void *)v26 + 8) = *((void *)v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v26 + 9) = *((void *)v27 + 9);
  *((void *)v26 + 10) = *((void *)v27 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v26 + 11) = *((void *)v27 + 11);
  *((void *)v26 + 12) = *((void *)v27 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v26 + 13) = *((void *)v27 + 13);
  *((void *)v26 + 14) = *((void *)v27 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v26 + 15) = *((void *)v27 + 15);
  *((void *)v26 + 16) = *((void *)v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26[136] = v27[136];
  v26[137] = v27[137];
  v26[138] = v27[138];
  *((void *)v26 + 18) = *((void *)v27 + 18);
  *((void *)v26 + 19) = *((void *)v27 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26[160] = v27[160];
  v26[161] = v27[161];
  *(void *)&v14[v19[7]] = *(void *)&v15[v19[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v14[v19[8]] = *(void *)&v15[v19[8]];
  swift_retain();
  swift_release();
  uint64_t v38 = v19[9];
  uint64_t v39 = (uint64_t)&v14[v38];
  uint64_t v40 = (uint64_t)&v15[v38];
  size_t v41 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v28) = _s7Weather24LocationCompositionStateOwet_0(v39, 1, (uint64_t)v41);
  int v42 = _s7Weather24LocationCompositionStateOwet_0(v40, 1, (uint64_t)v41);
  if (v28)
  {
    if (!v42)
    {
      *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
      *(unsigned char *)(v39 + 1) = *(unsigned char *)(v40 + 1);
      *(unsigned char *)(v39 + 2) = *(unsigned char *)(v40 + 2);
      *(void *)(v39 + 8) = *(void *)(v40 + 8);
      *(void *)(v39 + 16) = *(void *)(v40 + 16);
      uint64_t v43 = v41[8];
      unint64_t v44 = (void *)(v39 + v43);
      uint64_t v45 = (const void *)(v40 + v43);
      uint64_t v46 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        uint64_t v47 = sub_10017DF08(&qword_100E749B0);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      }
      uint64_t v149 = v39;
      uint64_t v152 = v41;
      uint64_t v55 = v41[9];
      uint64_t v56 = v39 + v55;
      uint64_t v57 = v40 + v55;
      *(unsigned char *)uint64_t v56 = *(unsigned char *)(v40 + v55);
      *(void *)(v56 + 8) = *(void *)(v40 + v55 + 8);
      uint64_t v58 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v59 = v58[6];
      __dst = (void *)(v56 + v59);
      char v60 = (const void *)(v57 + v59);
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v46))
      {
        uint64_t v61 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 16))(__dst, v60, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v46);
      }
      uint64_t v62 = v58[7];
      uint64_t v63 = (void *)(v56 + v62);
      unsigned __int8 v64 = (void *)(v57 + v62);
      *uint64_t v63 = *v64;
      v63[1] = v64[1];
      *(void *)(v56 + v58[8]) = *(void *)(v57 + v58[8]);
      *(unsigned char *)(v149 + v41[10]) = *(unsigned char *)(v40 + v41[10]);
      uint64_t v65 = v41[11];
      char v66 = (void *)(v149 + v65);
      char v67 = (const void *)(v40 + v65);
      uint64_t v68 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
      {
        uint64_t v69 = sub_10017DF08(&qword_100E63508);
        memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
      }
      uint64_t v70 = (uint64_t)v41;
      *(unsigned char *)(v149 + v41[12]) = *(unsigned char *)(v40 + v41[12]);
      *(unsigned char *)(v149 + v41[13]) = *(unsigned char *)(v40 + v41[13]);
      uint64_t v71 = v41[14];
      uint64_t v72 = (unsigned char *)(v149 + v71);
      uint64_t v73 = (unsigned char *)(v40 + v71);
      uint64_t v74 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, (uint64_t)v74))
      {
        uint64_t v75 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        *uint64_t v72 = *v73;
        uint64_t v76 = v74[5];
        id v77 = &v72[v76];
        uint64_t v78 = &v73[v76];
        uint64_t v79 = type metadata accessor for Location();
        uint64_t v80 = v77;
        uint64_t v70 = (uint64_t)v152;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v79 - 8) + 16))(v80, v78, v79);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v68 - 8) + 16))(&v72[v74[6]], &v73[v74[6]], v68);
        v72[v74[7]] = v73[v74[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, (uint64_t)v74);
      }
      _s7Weather24LocationCompositionStateOwst_0(v149, 0, 1, v70);
      goto LABEL_34;
    }
LABEL_18:
    uint64_t v48 = sub_10017DF08(&qword_100E6DC18);
    memcpy((void *)v39, (const void *)v40, *(void *)(*(void *)(v48 - 8) + 64));
LABEL_34:
    uint64_t v81 = v156;
    goto LABEL_35;
  }
  if (v42)
  {
    sub_100133888(v39, (void (*)(void))type metadata accessor for LocationFooterViewModel);
    goto LABEL_18;
  }
  *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
  *(unsigned char *)(v39 + 1) = *(unsigned char *)(v40 + 1);
  *(unsigned char *)(v39 + 2) = *(unsigned char *)(v40 + 2);
  *(void *)(v39 + 8) = *(void *)(v40 + 8);
  *(void *)(v39 + 16) = *(void *)(v40 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = v41[8];
  char v50 = (void *)(v39 + v49);
  unint64_t v51 = (const void *)(v40 + v49);
  uint64_t v52 = type metadata accessor for URL();
  int v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v52);
  int v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      goto LABEL_46;
    }
    goto LABEL_45;
  }
  uint64_t v109 = *(void *)(v52 - 8);
  if (v54)
  {
    (*(void (**)(void *, uint64_t))(v109 + 8))(v50, v52);
LABEL_45:
    uint64_t v110 = sub_10017DF08(&qword_100E749B0);
    memcpy(v50, v51, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_46;
  }
  (*(void (**)(void *, const void *, uint64_t))(v109 + 24))(v50, v51, v52);
LABEL_46:
  uint64_t v153 = v41;
  uint64_t v111 = v41[9];
  uint64_t v112 = v39 + v111;
  uint64_t v113 = v40 + v111;
  *(unsigned char *)uint64_t v112 = *(unsigned char *)(v40 + v111);
  *(void *)(v112 + 8) = *(void *)(v40 + v111 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v150 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v114 = v150[6];
  id v115 = (const void *)(v113 + v114);
  uint64_t v147 = v112 + v114;
  int v116 = _s7Weather24LocationCompositionStateOwet_0(v112 + v114, 1, v52);
  int v117 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v52);
  if (v116)
  {
    if (v117)
    {
      size_t v118 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v119 = (void *)v147;
LABEL_51:
      memcpy(v119, v115, v118);
      goto LABEL_55;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v52 - 8) + 16))(v147, v115, v52);
    _s7Weather24LocationCompositionStateOwst_0(v147, 0, 1, v52);
  }
  else
  {
    uint64_t v120 = *(void *)(v52 - 8);
    if (v117)
    {
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v147, v52);
      size_t v118 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v119 = (void *)v147;
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v120 + 24))(v147, v115, v52);
  }
LABEL_55:
  uint64_t v121 = v150[7];
  v122 = (void *)(v112 + v121);
  uint64_t v123 = (void *)(v113 + v121);
  void *v122 = *v123;
  v122[1] = v123[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v112 + v150[8]) = *(void *)(v113 + v150[8]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v39 + v153[10]) = *(unsigned char *)(v40 + v153[10]);
  uint64_t v124 = v153[11];
  int v125 = (void *)(v39 + v124);
  int v126 = (const void *)(v40 + v124);
  uint64_t v127 = type metadata accessor for LocationOfInterest();
  int v128 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v127);
  int v129 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v127);
  uint64_t v151 = v127;
  if (v128)
  {
    if (!v129)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v127);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  uint64_t v130 = *(void *)(v127 - 8);
  if (v129)
  {
    (*(void (**)(void *, uint64_t))(v130 + 8))(v125, v127);
LABEL_60:
    uint64_t v131 = sub_10017DF08(&qword_100E63508);
    memcpy(v125, v126, *(void *)(*(void *)(v131 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(void *, const void *, uint64_t))(v130 + 24))(v125, v126, v127);
LABEL_61:
  *(unsigned char *)(v39 + v153[12]) = *(unsigned char *)(v40 + v153[12]);
  *(unsigned char *)(v39 + v153[13]) = *(unsigned char *)(v40 + v153[13]);
  uint64_t v132 = v153[14];
  uint64_t v133 = (unsigned char *)(v39 + v132);
  uint64_t v134 = (unsigned char *)(v40 + v132);
  uint64_t v135 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v136 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, (uint64_t)v135);
  int v137 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, (uint64_t)v135);
  if (v136)
  {
    uint64_t v81 = v156;
    if (!v137)
    {
      *uint64_t v133 = *v134;
      uint64_t v138 = v135[5];
      uint64_t v139 = &v133[v138];
      uint64_t v140 = &v134[v138];
      uint64_t v141 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
      (*(void (**)(unsigned char *, unsigned char *))(*(void *)(v151 - 8) + 16))(&v133[v135[6]], &v134[v135[6]]);
      v133[v135[7]] = v134[v135[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v133, 0, 1, (uint64_t)v135);
      goto LABEL_35;
    }
    goto LABEL_66;
  }
  uint64_t v81 = v156;
  if (v137)
  {
    sub_100133888((uint64_t)v133, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_66:
    uint64_t v142 = sub_10017DF08(&qword_100E6DC10);
    memcpy(v133, v134, *(void *)(*(void *)(v142 - 8) + 64));
    goto LABEL_35;
  }
  *uint64_t v133 = *v134;
  uint64_t v143 = v135[5];
  v144 = &v133[v143];
  uint64_t v145 = &v134[v143];
  uint64_t v146 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v146 - 8) + 24))(v144, v145, v146);
  (*(void (**)(unsigned char *, unsigned char *))(*(void *)(v151 - 8) + 24))(&v133[v135[6]], &v134[v135[6]]);
  v133[v135[7]] = v134[v135[7]];
LABEL_35:
  v14[v19[10]] = v15[v19[10]];
  v14[v19[11]] = v15[v19[11]];
  v14[v19[12]] = v15[v19[12]];
  v14[v19[13]] = v15[v19[13]];
  v14[v19[14]] = v15[v19[14]];
  uint64_t v82 = v19[15];
  uint64_t v83 = *(void **)&v15[v82];
  uint64_t v84 = *(void **)&v14[v82];
  *(void *)&v14[v82] = v83;
  id v85 = v83;

  v14[v19[16]] = v15[v19[16]];
  v14[v19[17]] = v15[v19[17]];
  v14[v19[18]] = v15[v19[18]];
  uint64_t v86 = v19[19];
  int v87 = &v14[v86];
  uint64_t v88 = &v15[v86];
  uint64_t v89 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 24))(v87, v88, v89);
  uint64_t v90 = v19[20];
  uint64_t v91 = &v14[v90];
  uint64_t v92 = &v15[v90];
  uint64_t v93 = type metadata accessor for ForegroundEffect();
  LODWORD(v87) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v93);
  int v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93);
  if (!v87)
  {
    uint64_t v95 = *(void *)(v93 - 8);
    if (!v94)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 24))(v91, v92, v93);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(v91, v93);
    goto LABEL_40;
  }
  if (v94)
  {
LABEL_40:
    uint64_t v96 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v91, v92, *(void *)(*(void *)(v96 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v93);
LABEL_41:
  v14[v19[21]] = v15[v19[21]];
  *(void *)&v14[v19[22]] = *(void *)&v15[v19[22]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[v19[23]] = v15[v19[23]];
  uint64_t v97 = v19[24];
  uint64_t v98 = &v14[v97];
  uint64_t v99 = &v15[v97];
  uint64_t v100 = type metadata accessor for LocationEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 24))(v98, v99, v100);
  uint64_t v101 = v81[7];
  uint64_t v102 = (void *)((char *)v155 + v101);
  uint64_t v103 = (void *)((char *)v154 + v101);
  uint64_t v104 = v103[1];
  *uint64_t v102 = *v103;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v102[1] = v104;
  uint64_t v105 = v81[8];
  int v106 = (void *)((char *)v155 + v105);
  size_t v107 = (void *)((char *)v154 + v105);
  *int v106 = *v107;
  v106[1] = v107[1];
  swift_retain();
  swift_release();
  *(void *)((char *)v155 + v81[9]) = *(void *)((char *)v154 + v81[9]);
  swift_retain();
  swift_release();
  return v155;
}

uint64_t sub_1000C71C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v18 = *(void *)(a2 + 64);
  char v19 = *(unsigned char *)(a2 + 72);
  sub_1001910C8(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v18, v19);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v18;
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *(unsigned char *)(a1 + 72) = v19;
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000C7318(void *__src, const void *a2)
{
  memcpy(v4, __src, 0xA2uLL);
  memcpy(__dst, a2, 0xA2uLL);
  return sub_1000C7F08((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_1000C7370()
{
  sub_100162814();
  uint64_t v0 = type metadata accessor for LocationViewModel();
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10016278C();
  uint64_t v4 = v2 - v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - v6;
  swift_retain();
  sub_100133E68();
  swift_release();
  swift_retain();
  sub_100133E68();
  swift_release();
  char v8 = sub_1000C7464((uint64_t)v7, v4);
  sub_1001338DC(v4, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v9 = sub_100183094();
  sub_1001338DC(v9, v10);
  return v8 & 1;
}

uint64_t sub_1000C7464(uint64_t a1, uint64_t a2)
{
  uint64_t v95 = type metadata accessor for ForegroundEffect();
  sub_100179C0C();
  uint64_t v89 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v88 = v8;
  uint64_t v90 = sub_10017DF08(&qword_100EA0AF0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v94 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E65FA8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v91 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  uint64_t v92 = (uint64_t)&v83 - v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  uint64_t v93 = (uint64_t)&v83 - v17;
  uint64_t v101 = type metadata accessor for LocationFooterViewModel();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v96 = (unsigned __int8 *)v19;
  uint64_t v98 = sub_10017DF08(&qword_100EA0AF8);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_10011C760();
  uint64_t v21 = sub_10017DF08(&qword_100E6DC18);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v97 = (unsigned __int8 *)v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v99 = (uint64_t)&v83 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v100 = (uint64_t)&v83 - v27;
  uint64_t v28 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v103 = v29;
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v102 = v31;
  uint64_t v32 = sub_10017DF08(&qword_100E6DD18);
  sub_100162E4C();
  __chkstk_darwin(v33);
  sub_10012B938();
  uint64_t v34 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v35 = sub_100109308(v34);
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v83 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v36);
  size_t v41 = (char *)&v83 - v40;
  __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v83 - v42;
  if ((static Location.Identifier.== infix(_:_:)() & 1) == 0) {
    goto LABEL_57;
  }
  uint64_t v84 = v3;
  uint64_t v44 = type metadata accessor for LocationViewModel();
  uint64_t v45 = *(int *)(v44 + 20);
  uint64_t v87 = a1;
  sub_10006DF38(a1 + v45, (uint64_t)v43, &qword_100E6DC08);
  id v85 = (int *)v44;
  uint64_t v86 = a2;
  sub_10006DF38(a2 + *(int *)(v44 + 20), (uint64_t)v41, &qword_100E6DC08);
  uint64_t v46 = v2 + *(int *)(v32 + 48);
  sub_10006DF38((uint64_t)v43, v2, &qword_100E6DC08);
  sub_10006DF38((uint64_t)v41, v46, &qword_100E6DC08);
  sub_10012B520(v2, 1, v28);
  if (v47)
  {
    sub_100178110((uint64_t)v41, &qword_100E6DC08);
    sub_100178110((uint64_t)v43, &qword_100E6DC08);
    sub_10012B520(v46, 1, v28);
    if (v47)
    {
      sub_100178110(v2, &qword_100E6DC08);
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v48 = &qword_100E6DD18;
    uint64_t v49 = v2;
LABEL_11:
    sub_100178110(v49, v48);
    goto LABEL_57;
  }
  sub_10006DF38(v2, (uint64_t)v38, &qword_100E6DC08);
  sub_10012B520(v46, 1, v28);
  if (v47)
  {
    sub_100178110((uint64_t)v41, &qword_100E6DC08);
    sub_100178110((uint64_t)v43, &qword_100E6DC08);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v38, v28);
    goto LABEL_10;
  }
  uint64_t v51 = v102;
  uint64_t v50 = v103;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))(v102, v46, v28);
  sub_1000C81F4((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  char v52 = dispatch thunk of static Equatable.== infix(_:_:)();
  int v53 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v53(v51, v28);
  sub_100178110((uint64_t)v41, &qword_100E6DC08);
  sub_100178110((uint64_t)v43, &qword_100E6DC08);
  v53((uint64_t)v38, v28);
  sub_100178110(v2, &qword_100E6DC08);
  if ((v52 & 1) == 0) {
    goto LABEL_57;
  }
LABEL_13:
  int v54 = v85;
  uint64_t v55 = v87;
  memcpy(v104, (const void *)(v87 + v85[6]), 0xA2uLL);
  uint64_t v56 = v86;
  memcpy(__dst, (const void *)(v86 + v85[6]), 0xA2uLL);
  if ((sub_1000C7F08((uint64_t)v104, (uint64_t)__dst) & 1) == 0) {
    goto LABEL_57;
  }
  sub_1000C83E0();
  if ((v57 & 1) == 0 || (sub_1000C8698(*(void *)(v55 + v54[8]), *(void *)(v56 + v54[8])) & 1) == 0) {
    goto LABEL_57;
  }
  uint64_t v58 = v100;
  sub_10006DF38(v55 + v54[9], v100, &qword_100E6DC18);
  uint64_t v59 = v99;
  sub_10006DF38(v56 + v54[9], v99, &qword_100E6DC18);
  uint64_t v60 = v84;
  uint64_t v61 = v84 + *(int *)(v98 + 48);
  sub_10006DF38(v58, v84, &qword_100E6DC18);
  sub_10006DF38(v59, v61, &qword_100E6DC18);
  uint64_t v62 = v101;
  sub_10012B520(v60, 1, v101);
  if (v47)
  {
    sub_100178110(v59, &qword_100E6DC18);
    sub_100178110(v58, &qword_100E6DC18);
    sub_10012B520(v61, 1, v62);
    if (v47)
    {
      sub_100178110(v60, &qword_100E6DC18);
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  uint64_t v63 = v97;
  sub_10006DF38(v60, (uint64_t)v97, &qword_100E6DC18);
  sub_10012B520(v61, 1, v62);
  if (v64)
  {
    sub_100178110(v59, &qword_100E6DC18);
    sub_100178110(v58, &qword_100E6DC18);
    sub_1000B0834((uint64_t)v63, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_24:
    uint64_t v48 = &qword_100EA0AF8;
    uint64_t v49 = v60;
    goto LABEL_11;
  }
  uint64_t v65 = v96;
  sub_10021DDB4(v61, (uint64_t)v96);
  BOOL v66 = sub_10008186C(v63, v65);
  sub_1000B0834((uint64_t)v65, (void (*)(void))type metadata accessor for LocationFooterViewModel);
  sub_100178110(v59, &qword_100E6DC18);
  sub_100178110(v58, &qword_100E6DC18);
  sub_1000B0834((uint64_t)v63, (void (*)(void))type metadata accessor for LocationFooterViewModel);
  sub_100178110(v60, &qword_100E6DC18);
  if (!v66) {
    goto LABEL_57;
  }
LABEL_26:
  uint64_t v67 = v87;
  sub_10017AB68();
  if (!v47) {
    goto LABEL_57;
  }
  sub_10017AB68();
  if (!v47) {
    goto LABEL_57;
  }
  sub_10017AB68();
  if (!v47) {
    goto LABEL_57;
  }
  sub_10017AB68();
  if (!v47) {
    goto LABEL_57;
  }
  if ((sub_1000C823C(*(unsigned char *)(v67 + v54[14]), *(unsigned char *)(v56 + v54[14])) & 1) == 0) {
    goto LABEL_57;
  }
  sub_1000C83A0();
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_57;
  }
  sub_10017AB68();
  if (!v47) {
    goto LABEL_57;
  }
  sub_10017AB68();
  if (!v47) {
    goto LABEL_57;
  }
  sub_10017EB4C();
  if (!v47) {
    goto LABEL_57;
  }
  sub_1001A1968(v85[19]);
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_57;
  }
  uint64_t v68 = v85;
  uint64_t v69 = v93;
  sub_10006DF38(v87 + v85[20], v93, &qword_100E65FA8);
  uint64_t v70 = v92;
  sub_10006DF38(v86 + v68[20], v92, &qword_100E65FA8);
  uint64_t v71 = v94;
  uint64_t v72 = v94 + *(int *)(v90 + 48);
  sub_10006DF38(v69, v94, &qword_100E65FA8);
  sub_10006DF38(v70, v72, &qword_100E65FA8);
  sub_10012B520(v71, 1, v95);
  if (!v47)
  {
    sub_10006DF38(v94, v91, &qword_100E65FA8);
    sub_10012B520(v72, 1, v95);
    if (!v73)
    {
      uint64_t v74 = v88;
      uint64_t v75 = v89;
      uint64_t v76 = v95;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v88, v72, v95);
      sub_1000C81F4(&qword_100E66010, (void (*)(uint64_t))&type metadata accessor for ForegroundEffect);
      uint64_t v77 = v91;
      char v78 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v79(v74, v76);
      sub_100178110(v92, &qword_100E65FA8);
      sub_100178110(v93, &qword_100E65FA8);
      v79(v77, v76);
      sub_100178110(v94, &qword_100E65FA8);
      if ((v78 & 1) == 0) {
        goto LABEL_57;
      }
      goto LABEL_53;
    }
    sub_100178110(v92, &qword_100E65FA8);
    sub_100178110(v93, &qword_100E65FA8);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v91, v95);
    goto LABEL_51;
  }
  sub_100178110(v92, &qword_100E65FA8);
  sub_100178110(v93, &qword_100E65FA8);
  sub_10012B520(v72, 1, v95);
  if (!v47)
  {
LABEL_51:
    uint64_t v48 = &qword_100EA0AF0;
    uint64_t v49 = v94;
    goto LABEL_11;
  }
  sub_100178110(v94, &qword_100E65FA8);
LABEL_53:
  sub_10017EB4C();
  if (v47)
  {
    sub_1000C8514();
    if (v80)
    {
      sub_10017EB4C();
      if (v47)
      {
        sub_1001A1968(v85[24]);
        char v81 = static LocationEntity.== infix(_:_:)();
        return v81 & 1;
      }
    }
  }
LABEL_57:
  char v81 = 0;
  return v81 & 1;
}

uint64_t sub_1000C7F08(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v6 = 0;
    if ((v5 & 1) == 0) {
      return v6 & 1;
    }
  }
  sub_1000C81DC((long long *)(a1 + 16), (uint64_t)v36);
  sub_1000C81DC((long long *)(a2 + 16), (uint64_t)v35);
  sub_1000C81DC(v36, (uint64_t)&v37);
  if (v41)
  {
    if (v41 == 1)
    {
      uint64_t v7 = v37;
      uint64_t v8 = v38;
      uint64_t v9 = v39;
      uint64_t v10 = v40;
      sub_1000C81DC(v35, (uint64_t)&v42);
      if (v44 != 1) {
        goto LABEL_20;
      }
      int8x16_t v11 = v43;
      if (v7 != v42.i64[0] || v8 != v42.i64[1])
      {
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v6 = 0;
        if ((v13 & 1) == 0) {
          return v6 & 1;
        }
      }
      if (v9 == v11.i64[0] && v10 == v11.i64[1]) {
        goto LABEL_30;
      }
      goto LABEL_29;
    }
    sub_1000C81DC(v35, (uint64_t)&v42);
    char v6 = 0;
    if (v44 != 2) {
      return v6 & 1;
    }
    int8x16_t v18 = vorrq_s8(v42, v43);
    if (vorr_s8(*(int8x8_t *)v18.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL))) {
      return v6 & 1;
    }
  }
  else
  {
    uint64_t v15 = v37;
    uint64_t v16 = v38;
    sub_1000C81DC(v35, (uint64_t)&v42);
    if (v44) {
      goto LABEL_20;
    }
    if (v15 != v42.i64[0] || v16 != v42.i64[1])
    {
LABEL_29:
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      char v6 = 0;
      if ((v20 & 1) == 0) {
        return v6 & 1;
      }
    }
  }
LABEL_30:
  if (*(void *)(a1 + 56) != *(void *)(a2 + 56) || *(void *)(a1 + 64) != *(void *)(a2 + 64))
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v6 = 0;
    if ((v22 & 1) == 0) {
      return v6 & 1;
    }
  }
  if (*(void *)(a1 + 72) != *(void *)(a2 + 72) || *(void *)(a1 + 80) != *(void *)(a2 + 80))
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v6 = 0;
    if ((v24 & 1) == 0) {
      return v6 & 1;
    }
  }
  uint64_t v25 = *(void *)(a1 + 96);
  uint64_t v26 = *(void *)(a2 + 96);
  if (v25)
  {
    if (!v26) {
      goto LABEL_20;
    }
    if (*(void *)(a1 + 88) != *(void *)(a2 + 88) || v25 != v26)
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      char v6 = 0;
      if ((v28 & 1) == 0) {
        return v6 & 1;
      }
    }
  }
  else if (v26)
  {
    goto LABEL_20;
  }
  if (*(void *)(a1 + 104) != *(void *)(a2 + 104) || *(void *)(a1 + 112) != *(void *)(a2 + 112))
  {
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v6 = 0;
    if ((v30 & 1) == 0) {
      return v6 & 1;
    }
  }
  if (*(void *)(a1 + 120) != *(void *)(a2 + 120) || *(void *)(a1 + 128) != *(void *)(a2 + 128))
  {
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    char v6 = 0;
    if ((v32 & 1) == 0) {
      return v6 & 1;
    }
  }
  if (((*(unsigned __int8 *)(a1 + 136) ^ *(unsigned __int8 *)(a2 + 136)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 137) ^ *(unsigned __int8 *)(a2 + 137)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 138) ^ *(unsigned __int8 *)(a2 + 138)) & 1) != 0)
  {
LABEL_20:
    char v6 = 0;
    return v6 & 1;
  }
  BOOL v33 = *(void *)(a1 + 144) == *(void *)(a2 + 144) && *(void *)(a1 + 152) == *(void *)(a2 + 152);
  if (v33 || (v34 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v34 & 1) != 0))
  {
    if (((*(unsigned __int8 *)(a1 + 160) ^ *(unsigned __int8 *)(a2 + 160)) & 1) == 0)
    {
      char v6 = *(unsigned char *)(a1 + 161) ^ *(unsigned char *)(a2 + 161) ^ 1;
      return v6 & 1;
    }
    goto LABEL_20;
  }
  return v6 & 1;
}

uint64_t sub_1000C81DC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1000C81F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C823C(unsigned __int8 a1, char a2)
{
  uint64_t v3 = 0x7974706D65;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = a1;
  uint64_t v6 = 0x7974706D65;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x7469577974706D65;
      unint64_t v4 = 0xED0000656D614E68;
      break;
    case 2:
      unint64_t v4 = 0xE700000000000000;
      uint64_t v6 = 0x656E696C66666FLL;
      break;
    case 3:
      uint64_t v6 = 0x6574616C75706F70;
      unint64_t v4 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0x7469577974706D65;
      unint64_t v7 = 0xED0000656D614E68;
      break;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      uint64_t v3 = 0x656E696C66666FLL;
      break;
    case 3:
      uint64_t v3 = 0x6574616C75706F70;
      unint64_t v7 = 0xE900000000000064;
      break;
    default:
      break;
  }
  if (v6 == v3 && v4 == v7) {
    sub_10017D70C();
  }
  else {
    char v2 = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

unint64_t sub_1000C83A0()
{
  unint64_t result = qword_100E65130;
  if (!qword_100E65130)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E65130);
  }
  return result;
}

void sub_1000C83E0()
{
  sub_100162EA0();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16) && v2 && v0 != v1)
  {
    uint64_t v3 = (uint64_t *)(v1 + 48);
    unint64_t v4 = (uint64_t *)(v0 + 48);
    while (1)
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100BDD690();
      if ((v9 & 1) == 0) {
        break;
      }
      if (v5 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100127C2C();
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v11 & 1) == 0) {
          goto LABEL_16;
        }
      }
      v3 += 3;
      v4 += 3;
      if (!--v2) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  sub_100162694();
}

void sub_1000C8514()
{
  sub_1001843DC();
  if (v2 == v3 || (sub_100214F24(), !v4))
  {
LABEL_23:
    sub_100152398();
    return;
  }
  int64_t v5 = 0;
  uint64_t v6 = v0 + 64;
  sub_1000A9DF4();
  uint64_t v9 = v8 & v7;
  int64_t v11 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      sub_1002EF1C4();
      int64_t v13 = v12 | (v5 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v11) {
      goto LABEL_23;
    }
    ++v5;
    if (!*(void *)(v6 + 8 * v14))
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_23;
      }
      if (!*(void *)(v6 + 8 * v5))
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_23;
        }
        if (!*(void *)(v6 + 8 * v5)) {
          break;
        }
      }
    }
LABEL_20:
    sub_1002EE8D4();
    uint64_t v9 = v17 & v16;
    int64_t v13 = v18 + (v5 << 6);
LABEL_21:
    uint64_t v19 = (int64x2_t *)(*(void *)(v0 + 56) + 32 * v13);
    int64x2_t v23 = v19[1];
    int64x2_t v24 = *v19;
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1001D23B8();
    char v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0
      || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)(*(void *)(v1 + 56) + 32 * v20), v24), (int32x4_t)vceqq_s64(*(int64x2_t *)(*(void *)(v1 + 56) + 32 * v20 + 16), v23))), 0xFuLL))) & 1) == 0)
    {
      goto LABEL_23;
    }
  }
  int64_t v15 = v14 + 3;
  if (v15 >= v11) {
    goto LABEL_23;
  }
  if (*(void *)(v6 + 8 * v15))
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v11) {
      goto LABEL_23;
    }
    ++v15;
    if (*(void *)(v6 + 8 * v5)) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1000C8698(unint64_t a1, uint64_t a2)
{
  switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    case 1uLL:
      sub_10019ECE4();
      if (v7 != 1) {
        goto LABEL_57;
      }
      uint64_t v8 = sub_10017CFF4();
      type metadata accessor for NoAqiNewsContent._Storage(v8);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DC44C();
      goto LABEL_52;
    case 2uLL:
      sub_10019ECE4();
      if (v10 != 2) {
        goto LABEL_57;
      }
      uint64_t v11 = sub_10017CFF4();
      type metadata accessor for SevereContent._Storage(v11);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002E2234();
      goto LABEL_52;
    case 3uLL:
      sub_10019ECE4();
      if (v12 != 3) {
        goto LABEL_57;
      }
      uint64_t v13 = sub_10017CFF4();
      type metadata accessor for NhpContent._Storage(v13);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DB1DC();
      goto LABEL_52;
    case 4uLL:
      sub_10019ECE4();
      if (v14 != 4) {
        goto LABEL_57;
      }
      uint64_t v15 = sub_10017CFF4();
      type metadata accessor for ElevatedAqiSevereContent._Storage(v15);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002C5CA0();
      goto LABEL_52;
    case 5uLL:
      sub_10019ECE4();
      if (v16 != 5) {
        goto LABEL_57;
      }
      uint64_t v17 = sub_10017CFF4();
      type metadata accessor for DefaultNewsContent._Storage(v17);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002C4E9C();
      goto LABEL_52;
    case 6uLL:
      sub_10019ECE4();
      if (v18 != 6) {
        goto LABEL_57;
      }
      uint64_t v19 = sub_10017CFF4();
      type metadata accessor for DefaultTrendNewsContent._Storage(v19);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002C50F8();
      goto LABEL_52;
    case 7uLL:
      sub_10019ECE4();
      if (v20 != 7) {
        goto LABEL_57;
      }
      uint64_t v21 = sub_10017CFF4();
      type metadata accessor for ElevatedAqiNewsContent._Storage(v21);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002C5B14();
      goto LABEL_52;
    case 8uLL:
      sub_10019ECE4();
      if (v22 != 8) {
        goto LABEL_57;
      }
      uint64_t v23 = sub_10017CFF4();
      type metadata accessor for NoAqiSevereNewsContent._Storage(v23);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DC984();
      goto LABEL_52;
    case 9uLL:
      sub_10019ECE4();
      if (v24 != 9) {
        goto LABEL_57;
      }
      uint64_t v25 = sub_10017CFF4();
      type metadata accessor for NoAqiSevereNhpContent._Storage(v25);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DCB10();
      goto LABEL_52;
    case 0xAuLL:
      sub_10019ECE4();
      if (v26 != 10) {
        goto LABEL_57;
      }
      uint64_t v27 = sub_10017CFF4();
      type metadata accessor for NoAqiNhpNewsContent._Storage(v27);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DC6B8();
      goto LABEL_52;
    case 0xBuLL:
      sub_10019ECE4();
      if (v28 != 11) {
        goto LABEL_57;
      }
      uint64_t v29 = sub_10017CFF4();
      type metadata accessor for SevereNhpContent._Storage(v29);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002E2EC4();
      goto LABEL_52;
    case 0xCuLL:
      sub_10019ECE4();
      if (v30 != 12) {
        goto LABEL_57;
      }
      uint64_t v31 = sub_10017CFF4();
      type metadata accessor for SevereNhpAqiContent._Storage(v31);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002E2BEC();
      goto LABEL_52;
    case 0xDuLL:
      sub_10019ECE4();
      if (v32 != 13) {
        goto LABEL_57;
      }
      uint64_t v33 = sub_10017CFF4();
      type metadata accessor for SevereNewsContent._Storage(v33);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002E2914();
      goto LABEL_52;
    case 0xEuLL:
      sub_10019ECE4();
      if (v34 != 14) {
        goto LABEL_57;
      }
      uint64_t v35 = sub_10017CFF4();
      type metadata accessor for NhpNewsContent._Storage(v35);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DBC28();
      goto LABEL_52;
    case 0xFuLL:
      sub_10019ECE4();
      if (v36 != 15) {
        goto LABEL_57;
      }
      uint64_t v37 = sub_10017CFF4();
      type metadata accessor for ElevatedAqiSevereNewsContent._Storage(v37);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002C5E2C();
      goto LABEL_52;
    case 0x10uLL:
      sub_10019ECE4();
      if (v38 != 16) {
        goto LABEL_57;
      }
      uint64_t v39 = sub_10017CFF4();
      type metadata accessor for NoAqiSevereNhpNewsContent._Storage(v39);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DCC9C();
      goto LABEL_52;
    case 0x11uLL:
      sub_10019ECE4();
      if (v40 != 17) {
        goto LABEL_57;
      }
      uint64_t v41 = sub_10017CFF4();
      type metadata accessor for ElevatedAqiContent._Storage(v41);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002C5404();
      goto LABEL_52;
    case 0x12uLL:
      sub_10019ECE4();
      if (v42 != 18) {
        goto LABEL_57;
      }
      uint64_t v43 = sub_10017CFF4();
      type metadata accessor for NoAqiSevereContent._Storage(v43);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DC858();
      goto LABEL_52;
    case 0x13uLL:
      sub_10019ECE4();
      if (v44 != 19) {
        goto LABEL_57;
      }
      uint64_t v45 = sub_10017CFF4();
      type metadata accessor for NoAqiNhpContent._Storage(v45);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DC58C();
      goto LABEL_52;
    case 0x14uLL:
      sub_10019ECE4();
      if (v46 != 20) {
        goto LABEL_57;
      }
      uint64_t v47 = sub_10017CFF4();
      type metadata accessor for NoAqiContent._Storage(v47);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DBF80();
      goto LABEL_52;
    case 0x15uLL:
      sub_10019ECE4();
      if (v48 != 21) {
        goto LABEL_57;
      }
      uint64_t v49 = sub_10017CFF4();
      type metadata accessor for SevereNhpNewsContent._Storage(v49);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002E32A4();
      goto LABEL_52;
    case 0x16uLL:
      sub_10019ECE4();
      if (v50 != 22) {
        goto LABEL_57;
      }
      uint64_t v51 = sub_10017CFF4();
      type metadata accessor for MinorAlertContent._Storage(v51);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DB050();
      goto LABEL_52;
    case 0x17uLL:
      sub_10019ECE4();
      if (v52 != 23) {
        goto LABEL_57;
      }
      uint64_t v53 = sub_10017CFF4();
      type metadata accessor for NhpMinorAlertContent._Storage(v53);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002DB450();
      goto LABEL_52;
    case 0x18uLL:
      sub_10019ECE4();
      if (v54 != 24) {
        goto LABEL_57;
      }
      uint64_t v55 = sub_10017CFF4();
      type metadata accessor for ElevatedAqiMinorAlertContent._Storage(v55);
      sub_1001A0A28();
      swift_retain();
      sub_100179C64();
      sub_1002C5988();
LABEL_52:
      char v56 = v9;
      swift_release();
      swift_release();
      uint64_t result = v56 & 1;
      break;
    case 0x19uLL:
      sub_10019ECE4();
      if (v57 != 25 || a2 != 0xC000000000000004) {
        goto LABEL_57;
      }
      uint64_t result = 1;
      break;
    default:
      sub_10019ECE4();
      if (v3)
      {
LABEL_57:
        uint64_t result = 0;
      }
      else
      {
        type metadata accessor for DefaultContent._Storage(0);
        swift_retain();
        swift_retain();
        sub_1002C4D3C();
        char v5 = v4;
        swift_release();
        swift_release();
        uint64_t result = v5 & 1;
      }
      break;
  }
  return result;
}

uint64_t sub_1000C8BB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v31 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10017DF08(&qword_100E662F0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  int v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = &v29[-v14];
  __chkstk_darwin(v13);
  uint64_t v17 = &v29[-v16];
  uint64_t v33 = type metadata accessor for LocationViewerPageControl(0);
  __chkstk_darwin(v33);
  uint64_t v19 = &v29[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v34 = sub_10017DF08(&qword_100E8ED38);
  __chkstk_darwin(v34);
  uint64_t v21 = &v29[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = *(void *)(v1 + *(int *)(type metadata accessor for PageControl(0) + 20));
  uint64_t v35 = v1;
  uint64_t v32 = v22;
  swift_bridgeObjectRetain();
  sub_10019B2FC();
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v15, enum case for UserInterfaceSizeClass.compact(_:), v2);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v2);
  uint64_t v23 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_10006DF38((uint64_t)v17, (uint64_t)v8, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v15, v23, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v2) == 1)
  {
    sub_10017DF4C((uint64_t)v15, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v17, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v2) == 1)
    {
      sub_10017DF4C((uint64_t)v8, &qword_100E65ED8);
      char v24 = 0;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_10006DF38((uint64_t)v8, (uint64_t)v12, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v2) == 1)
  {
    sub_10017DF4C((uint64_t)v15, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v17, &qword_100E65ED8);
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v12, v2);
LABEL_6:
    sub_10017DF4C((uint64_t)v8, &qword_100E662F0);
    char v24 = 1;
    goto LABEL_8;
  }
  uint64_t v25 = v31;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 32))(v31, v23, v2);
  sub_10015180C((uint64_t)&qword_100E65F28);
  int v30 = dispatch thunk of static Equatable.== infix(_:_:)();
  int v26 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v26(v25, v2);
  sub_10017DF4C((uint64_t)v15, &qword_100E65ED8);
  sub_10017DF4C((uint64_t)v17, &qword_100E65ED8);
  v26(v12, v2);
  sub_10017DF4C((uint64_t)v8, &qword_100E65ED8);
  char v24 = v30 ^ 1;
LABEL_8:
  sub_10017DF08(&qword_100E8D8D0);
  Binding.projectedValue.getter();
  *(void *)uint64_t v19 = v32;
  v19[8] = v24 & 1;
  if (sub_1000C90E0()) {
    double v27 = 1.0;
  }
  else {
    double v27 = 0.0;
  }
  sub_10015176C();
  *(double *)&v21[*(int *)(v34 + 36)] = v27;
  sub_100151660();
  return sub_10024D364((uint64_t)v21, v36, &qword_100E8ED38);
}

uint64_t sub_1000C90E0()
{
  uint64_t v1 = type metadata accessor for PageControl(0);
  __chkstk_darwin(v1);
  double v27 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  v25[0] = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E662F0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v25 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v25 - v17;
  v25[1] = v1;
  uint64_t v26 = v0;
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v16, enum case for UserInterfaceSizeClass.compact(_:), v3);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10006DF38((uint64_t)v18, (uint64_t)v9, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v16, v19, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v3) != 1)
  {
    sub_10006DF38((uint64_t)v9, (uint64_t)v13, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v3) != 1)
    {
      uint64_t v20 = v25[0];
      (*(void (**)(void, uint64_t, uint64_t))(v4 + 32))(v25[0], v19, v3);
      sub_10015180C((uint64_t)&qword_100E65F28);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v22(v20, v3);
      sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
      sub_10017DF4C((uint64_t)v18, &qword_100E65ED8);
      v22((uint64_t)v13, v3);
      sub_10017DF4C((uint64_t)v9, &qword_100E65ED8);
      sub_10015176C();
      if (v21) {
        goto LABEL_8;
      }
LABEL_9:
      swift_retain();
      sub_100230A60();
      swift_release();
      char v23 = sub_1006EEB70();
      swift_release();
      goto LABEL_10;
    }
    sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v18, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
LABEL_6:
    sub_10017DF4C((uint64_t)v9, &qword_100E662F0);
    sub_10015176C();
    goto LABEL_9;
  }
  sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
  sub_10017DF4C((uint64_t)v18, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v3) != 1) {
    goto LABEL_6;
  }
  sub_10017DF4C((uint64_t)v9, &qword_100E65ED8);
  sub_10015176C();
LABEL_8:
  char v23 = 1;
LABEL_10:
  sub_100151660();
  return v23 & 1;
}

uint64_t sub_1000C95B8()
{
  return sub_1000C95DC() & 1;
}

uint64_t sub_1000C95DC()
{
  uint64_t v0 = sub_1000C965C();
  float v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_1000C965C();
  if (v2 == v5) {
    char v6 = sub_1000C96D4(v3, v4);
  }
  else {
    char v6 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1000C965C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000C96D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  uint64_t v3 = (float *)(a1 + 36);
  uint64_t v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    uint64_t result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1000C973C@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v47 = a4;
  uint64_t v35 = a3;
  unsigned int v45 = a2;
  uint64_t v49 = a7;
  char v10 = a2 & 1;
  uint64_t v37 = a5;
  type metadata accessor for Optional();
  uint64_t v70 = a6;
  uint64_t v12 = a6;
  uint64_t v36 = a6;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for ZStack();
  sub_100179C0C();
  uint64_t v48 = v14;
  __chkstk_darwin(v15);
  int v40 = (char *)&v34 - v16;
  type metadata accessor for PlaceholderContentView();
  uint64_t v17 = type metadata accessor for ModifiedContent();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v42 = v18;
  uint64_t v68 = swift_getWitnessTable();
  uint64_t v69 = &protocol witness table for _OpacityEffect;
  uint64_t v38 = v17;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v64 = v13;
  uint64_t v65 = v17;
  uint64_t v66 = v18;
  uint64_t v67 = v41;
  int v44 = &opaque type descriptor for <<opaque return type of View.animation<A>(_:body:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  sub_100179C0C();
  uint64_t v46 = v20;
  uint64_t v22 = __chkstk_darwin(v21);
  char v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v39 = (uint64_t)&v34 - v25;
  uint64_t v57 = a5;
  uint64_t v58 = v12;
  uint64_t v59 = a1;
  char v60 = v10;
  LODWORD(v12) = (v45 >> 8) & 1;
  char v61 = BYTE1(v45) & 1;
  uint64_t v62 = a3;
  uint64_t v26 = v47;
  uint64_t v63 = v47;
  j___s7SwiftUI9AlignmentV6centerACvgZ();
  double v27 = v40;
  ZStack.init(alignment:content:)();
  swift_retain();
  sub_1000CA30C();
  swift_release();
  swift_retain();
  swift_release();
  uint64_t v50 = v37;
  uint64_t v51 = v36;
  uint64_t v52 = a1;
  char v53 = v10;
  char v54 = v12;
  uint64_t v55 = v35;
  uint64_t v56 = v26;
  uint64_t v28 = swift_checkMetadataState();
  uint64_t v29 = v42;
  uint64_t v30 = v41;
  View.animation<A>(_:body:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v13);
  uint64_t v64 = v13;
  uint64_t v65 = v28;
  uint64_t v66 = v29;
  uint64_t v67 = v30;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = v39;
  sub_100121584((uint64_t)v24, OpaqueTypeMetadata2, v39);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v46 + 8);
  v32(v24, OpaqueTypeMetadata2);
  sub_100121584(v31, OpaqueTypeMetadata2, v49);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v31, OpaqueTypeMetadata2);
}

uint64_t sub_1000C9B90@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  type metadata accessor for Optional();
  v14[3] = a1;
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  type metadata accessor for PlaceholderContentView();
  uint64_t v4 = type metadata accessor for ModifiedContent();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  float v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)v14 - v9;
  swift_retain();
  sub_1000CA30C();
  swift_release();
  sub_100135710();
  swift_release();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.opacity(_:)();
  v14[1] = WitnessTable;
  v14[2] = &protocol witness table for _OpacityEffect;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v8, v4, (uint64_t)v10);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  sub_100121584((uint64_t)v10, v4, a2);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_1000C9DE8@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v30 = a6;
  v28[1] = a4;
  uint64_t v31 = a7;
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v15 = type metadata accessor for Optional();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v28 - v21;
  if ((a2 & 0x100) != 0
    && (swift_retain(), sub_1000CA30C(), swift_release(), v23 = sub_100135710(), uint64_t v20 = swift_release(), (v23 & 1) == 0))
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, a5);
    uint64_t v24 = v30;
  }
  else
  {
    v29(v20);
    uint64_t v24 = v30;
    sub_100121584((uint64_t)v12, a5, (uint64_t)v14);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v9 + 8);
    v25(v12, a5);
    sub_100121584((uint64_t)v14, a5, (uint64_t)v19);
    v25(v14, a5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, a5);
  }
  sub_1000CA354();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v19, v15);
  uint64_t v32 = v24;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v22, v15, v31);
  return ((uint64_t (*)(char *, uint64_t))v26)(v22, v15);
}

uint64_t sub_1000CA0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_100195B7C(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000CA1FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorSchemeContrast();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void sub_1000CA30C()
{
}

uint64_t sub_1000CA328()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000CA354()
{
  type metadata accessor for Optional();
  sub_100162E4C();
  uint64_t v0 = sub_100127A9C();

  return v1(v0);
}

uint64_t sub_1000CA3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v28)(uint64_t *__return_ptr, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  uint64_t v36 = a3;
  uint64_t v38 = a2;
  uint64_t v35 = a1;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NewsDataModel();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  int v40 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v41 = type metadata accessor for Location();
  uint64_t v11 = *(void *)(v41 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v41);
  uint64_t v39 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *uint64_t v19 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  char v20 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v32 = updated;
    uint64_t v23 = v41;
    v22(v15, v38, v41);
    sub_1001B9A30(v35, (uint64_t)v10, (void (*)(void))type metadata accessor for NewsDataModel);
    v22(v39, (uint64_t)v15, v23);
    sub_1001B9A30((uint64_t)v10, v40, (void (*)(void))type metadata accessor for NewsDataModel);
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v25 = (v12 + *(unsigned __int8 *)(v33 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v37;
    *(void *)(v26 + 16) = v37;
    uint64_t v35 = v11;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v26 + v24, v15, v23);
    sub_1001B9AF4((uint64_t)v10, v26 + v25, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v28 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v27 + 16);
    uint64_t v29 = swift_retain();
    v28(&v42, v29);
    LOBYTE(v22) = sub_1000CB4F8(v38, v42);
    swift_release();
    *uint64_t v5 = v22 & 1;
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v5);
    sub_1001BC5DC();
    if (v22)
    {
      sub_1001BC5DC();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v41);
      uint64_t v42 = 0;
      static Animation.easeIn(duration:)();
      uint64_t v30 = Transaction.animation.setter();
      __chkstk_darwin(v30);
      *(&v32 - 2) = (uint64_t)sub_1002263E8;
      *(&v32 - 1) = v26;
      swift_retain();
      withTransaction<A>(_:_:)();
      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v31 = (uint64_t)v39;
      sub_10005D4D8(v27, (uint64_t)v39, v40);
      swift_release();
      sub_1001BC5DC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v31, v41);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000CA914()
{
  uint64_t v2 = v0;
  swift_retain();
  Atomic.wrappedValue.getter();
  swift_release();
  if (v15 == 1)
  {
    sub_10018C4D0();
    uint64_t v3 = (void *)Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (sub_100187200(v4))
    {
      uint64_t v5 = (_DWORD *)swift_slowAlloc();
      sub_10016EEA8();
      sub_10019AAB4();
      *uint64_t v5 = 136446210;
      uint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      sub_10016414C(v7, v6, &v15);
      sub_10019B148();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100182050();
      swift_bridgeObjectRelease();
      sub_100184728((void *)&_mh_execute_header, v8, v9, "Unexpected success call for WeatherData Update Request, already finished before. uuid=%{public}s");
      sub_10018874C();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      sub_100182050();
    }
  }
  LOBYTE(v15) = 1;
  swift_retain();
  Atomic.wrappedValue.setter();
  swift_release();
  sub_10018C4D0();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (sub_100187200(v11))
  {
    uint64_t v12 = swift_slowAlloc();
    sub_10016EEA8();
    sub_10019AAB4();
    *(_DWORD *)uint64_t v12 = 67240706;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 14) = 2082;
    uint64_t v13 = *(void *)(v2 + 16);
    unint64_t v14 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    sub_10016414C(v13, v14, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100182050();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v1, "WeatherData Update Request succeeded. didRefresh=%{BOOL,public}d, usingCachedReponse=%{BOOL}d, uuid=%{public}s", (uint8_t *)v12, 0x18u);
    sub_10018874C();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    sub_100182050();
  }
}

uint64_t sub_1000CABB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v74 = a4;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v61 = a1;
  uint64_t v6 = type metadata accessor for NewsDataModel();
  uint64_t v65 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v66 = v7;
  uint64_t v73 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v60 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v62 = v9;
  uint64_t v72 = (uint64_t)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WeatherData(0);
  uint64_t v58 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v59 = v11;
  uint64_t v71 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Location();
  uint64_t v67 = *(void *)(v12 - 8);
  uint64_t v68 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v70 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v14;
  __chkstk_darwin(v13);
  char v54 = (char *)&v53 - v15;
  uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LocationsState();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for CurrentLocation();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v55 = (uint64_t)&v53 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v56 = (uint64_t)&v53 - v25;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for DispatchPredicate();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (uint64_t *)((char *)&v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *uint64_t v32 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v30 + 104))(v32, enum case for DispatchPredicate.onQueue(_:), v29);
  char v33 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v30 + 8))(v32, v29);
  if (v33)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = a5;
    sub_10015B128((uint64_t)v28);
    sub_1001BC5DC();
    uint64_t v36 = v74;
    uint64_t v37 = Location.kind.getter();
    if ((v37 & 1) == 0)
    {
LABEL_10:
      uint64_t v44 = v69;
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(v69 + 16))(v75, v37);
      char v45 = sub_1000CB4F8(v36, v75[0]);
      swift_release();
      uint64_t v47 = v67;
      uint64_t v46 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v70, v36, v68);
      sub_1001B9A30(v61, v71, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001B9A30(v63, v72, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_1001B9A30(v64, v73, (void (*)(void))type metadata accessor for NewsDataModel);
      unint64_t v48 = (*(unsigned __int8 *)(v47 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      unint64_t v49 = (v57 + *(unsigned __int8 *)(v58 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      unint64_t v50 = (v59 + *(unsigned __int8 *)(v60 + 80) + v49) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      unint64_t v51 = (v62 + *(unsigned __int8 *)(v65 + 80) + v50) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v35;
      v45 &= 1u;
      *(unsigned char *)(v52 + 24) = v45;
      *(void *)(v52 + 32) = v44;
      (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v52 + v48, v70, v46);
      sub_1001B9AF4(v71, v52 + v49, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001B9AF4(v72, v52 + v50, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_1001B9AF4(v73, v52 + v51, (void (*)(void))type metadata accessor for NewsDataModel);
      swift_retain();
      swift_retain();
      sub_1000CBF78(v74, v45, sub_100050170);
      return swift_release();
    }
    (*(void (**)(uint64_t *__return_ptr))(v69 + 16))(v75);
    sub_1001B9A30(v75[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v21, (void (*)(void))type metadata accessor for LocationsState);
    swift_release();
    sub_1001B7204((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_100EADD50);
    sub_1001BC5DC();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v22) == 1)
    {
      uint64_t v37 = sub_10017DF4C((uint64_t)v18, (uint64_t *)&unk_100EADD50);
      goto LABEL_10;
    }
    uint64_t v38 = (uint64_t)v18;
    uint64_t v39 = v56;
    sub_1001B9AF4(v38, v56, (void (*)(void))&type metadata accessor for CurrentLocation);
    uint64_t v40 = v55;
    sub_1001B9A30(v39, v55, (void (*)(void))&type metadata accessor for CurrentLocation);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1001BC5DC();
LABEL_9:
      uint64_t v37 = sub_1001BC5DC();
      goto LABEL_10;
    }
    uint64_t v42 = v67;
    uint64_t v41 = v68;
    uint64_t v43 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v54, v40, v68);
    Location.coordinate.getter();
    Location.coordinate.getter();
    if (static CLLocationCoordinate2D.== infix(_:_:)())
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v28, v43, v41);
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v28);
    sub_1001BC5DC();
    sub_1000CA914();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
    return sub_1001BC5DC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000CB4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v8 = Location.id.getter();
  sub_1001BBE9C(v8, v9, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v10) == 1)
  {
    sub_10017DF4C((uint64_t)v6, &qword_100E63770);
LABEL_6:
    char v11 = sub_1000CB6AC(a1, a2);
    return v11 & 1;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1001BC5DC();
    goto LABEL_6;
  }
  sub_10017DF08(&qword_100E63748);
  sub_1001BC5DC();
  sub_1001BC5DC();
  sub_1001BC5DC();
  char v11 = 0;
  return v11 & 1;
}

uint64_t sub_1000CB6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - v7;
  sub_1000CB86C(a2, (uint64_t)&v18 - v7);
  sub_1001B7204((uint64_t)v8, (uint64_t)v6, &qword_100E6DC08);
  uint64_t v9 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v9) == 1)
  {
    sub_10017DF4C((uint64_t)v6, &qword_100E6DC08);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v10 = Location.Identifier.id.getter();
    uint64_t v11 = v12;
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
  }
  uint64_t v13 = Location.id.getter();
  if (v11)
  {
    if (v10 == v13 && v11 == v14) {
      char v16 = 1;
    }
    else {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    sub_10017DF4C((uint64_t)v8, &qword_100E6DC08);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10017DF4C((uint64_t)v8, &qword_100E6DC08);
    swift_bridgeObjectRelease();
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_1000CB86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v36 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Location.Identifier();
  uint64_t v35 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v34 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v38);
  uint64_t v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v39);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Location();
  uint64_t v37 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LocationPreviewViewState(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1;
  sub_1001B9A30(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v18, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1001BC5DC();
  }
  else
  {
    uint64_t v23 = v37;
    sub_1001B9AF4((uint64_t)v18, (uint64_t)v21, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_10081B708((uint64_t)v12);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v15, v12, v13);
      uint64_t v29 = v41;
      Location.identifier.getter();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v13);
      sub_1001BC5DC();
      uint64_t v30 = 0;
      uint64_t v24 = v40;
      return _s7Weather24LocationCompositionStateOwst_0(v29, v30, 1, v24);
    }
    sub_1001BC5DC();
    sub_10017DF4C((uint64_t)v12, &qword_100E639E8);
  }
  uint64_t v25 = (int *)v39;
  uint64_t v24 = v40;
  sub_1001B9A30(v22 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v9, (void (*)(void))type metadata accessor for ViewState);
  sub_1001B9A30((uint64_t)&v9[v25[5]], (uint64_t)v7, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1001BC5DC();
LABEL_14:
    sub_1001BC5DC();
    uint64_t v30 = 1;
    uint64_t v29 = v41;
    return _s7Weather24LocationCompositionStateOwst_0(v29, v30, 1, v24);
  }
  uint64_t v26 = *v7;
  if (*(void *)&v9[v25[9] + 8] == 1)
  {
    id v27 = [self currentDevice];
    [v27 userInterfaceIdiom];

    if ((v9[v25[7]] & 1) == 0)
    {
      swift_release();
      goto LABEL_14;
    }
  }
  sub_1001BC5DC();
  uint64_t v28 = v36;
  sub_1001B9A30(v26 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v36, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0(v28, 1, v24) == 1) {
    goto LABEL_14;
  }
  uint64_t v31 = v34;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
  v32(v34, v28, v24);
  uint64_t v29 = v41;
  v32((char *)v41, (uint64_t)v31, v24);
  uint64_t v30 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v29, v30, 1, v24);
}

uint64_t sub_1000CBE94(uint64_t a1)
{
  type metadata accessor for UnfairLock();
  swift_retain();
  sub_10017DF08(&qword_100E639C8);
  Lock.sync<A>(_:)();
  swift_release();
  uint64_t v2 = *(void *)(v6 + 16);
  if (v2)
  {
    uint64_t v3 = v6 + 40;
    do
    {
      uint64_t v4 = *(void (**)(uint64_t))(v3 - 8);
      swift_retain();
      v4(a1);
      swift_release();
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000CBF78(uint64_t a1, char a2, uint64_t (*a3)(void))
{
  if ((a2 & 1) == 0) {
    return a3();
  }
  static Animation.easeIn(duration:)();
  uint64_t v3 = Transaction.animation.setter();
  __chkstk_darwin(v3);
  swift_retain();
  withTransaction<A>(_:_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1000CC054()
{
  sub_10010977C();
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_100179EF0();
  swift_unknownObjectRelease();
  swift_release();
  sub_100188768();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100179DC0();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_10019D788();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }
  sub_100109404();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v2))
    {
      sub_100162880();
      sub_100162F0C();
      v3();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001801E4();
  sub_1001A6918();
  sub_100186B00();
  sub_100183E00();
  sub_100179DC0();
  sub_100162F0C();
  v4();
  sub_1001D2520();
  sub_100163804();
  sub_1001A17C4();
  sub_100184748();
  sub_1001093E8();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_1000CC228()
{
  sub_10010977C();
  v0(0);
  sub_100179CD4();
  swift_release();
  sub_10017DF08(&qword_100E63D98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationHeaderViewMeasurements(0);
    type metadata accessor for DisplayMetrics();
    sub_100162738();
    sub_100162E4C();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_1000CC33C()
{
  type metadata accessor for LocationViewObserverView();
  sub_100179CD4();
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ScenePhase();
    sub_100162E4C();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }
  sub_10018F6E4();
  sub_1001859C0();
  uint64_t v2 = type metadata accessor for Location.Identifier();
  sub_100162E4C();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = v3 + 8;
  v4(v0, v2);
  uint64_t v6 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v7 = v0 + v6[5];
  if (!sub_10019D4C8()) {
    v4(v7, v2);
  }
  uint64_t v8 = v0 + v6[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(unsigned char *)(v8 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = v0 + v6[9];
  uint64_t v10 = type metadata accessor for LocationFooterViewModel();
  if (!sub_100183918(v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = type metadata accessor for URL();
    if (!sub_1001A3148(v11))
    {
      sub_100162880();
      sub_10017F350();
      v12();
    }
    uint64_t v13 = v9 + *(int *)(v7 + 36);
    swift_bridgeObjectRelease();
    uint64_t v14 = type metadata accessor for LearnMoreAttributorViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v13 + *(int *)(v14 + 24), 1, v5))
    {
      sub_100162880();
      sub_10017F350();
      v15();
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v16 = type metadata accessor for LocationOfInterest();
    if (!sub_1001A3148(v16))
    {
      sub_100162880();
      sub_10017F350();
      v17();
    }
    uint64_t v18 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!sub_100183918(v18))
    {
      type metadata accessor for Location();
      sub_100162E4C();
      sub_100162F0C();
      v19();
      sub_100162880();
      sub_10017F350();
      v20();
    }
  }

  type metadata accessor for Date();
  sub_100162E4C();
  sub_100162F0C();
  v21();
  uint64_t v22 = v0 + v6[20];
  uint64_t v23 = type metadata accessor for ForegroundEffect();
  if (!sub_100183918(v23))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v7);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for LocationEntity();
  sub_100162E4C();
  sub_100162F0C();
  v25();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000CC7B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_10018F6D8(v6, v7);
  uint64_t v8 = type metadata accessor for AutomationInfoProperty();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = (uint64_t *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_10014CDC4(a1 + v9, type metadata accessor for AutomationInfo);
    type metadata accessor for AutomationInfo(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = *(void *)v11;
      uint64_t v15 = *((void *)v11 + 1);
      unsigned __int8 v16 = *((unsigned char *)v11 + 16);
      sub_10018F6EC(v14, v15, v16);
      *uint64_t v10 = v14;
      v10[1] = v15;
      *((unsigned char *)v10 + 16) = v16;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v13 = type metadata accessor for AutomationCellInfo(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 0xAu:
            goto LABEL_8;
          case 2u:
            *uint64_t v10 = *(void *)v11;
            v10[1] = *((void *)v11 + 1);
            swift_bridgeObjectRetain();
            goto LABEL_15;
          case 6u:
            uint64_t v18 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v10, v11, v18);
            goto LABEL_15;
          case 8u:
            *uint64_t v10 = *(void *)v11;
            v10[1] = *((void *)v11 + 1);
            v10[2] = *((void *)v11 + 2);
            v10[3] = *((void *)v11 + 3);
            v10[4] = *((void *)v11 + 4);
            v10[5] = *((void *)v11 + 5);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_15;
          case 9u:
          case 0xBu:
            *uint64_t v10 = *(void *)v11;
            v10[1] = *((void *)v11 + 1);
            v10[2] = *((void *)v11 + 2);
            v10[3] = *((void *)v11 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_15;
          default:
            goto LABEL_9;
        }
      }
      uint64_t v13 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
LABEL_8:
          *uint64_t v10 = *(void *)v11;
          v10[1] = *((void *)v11 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_15;
        case 2u:
          uint64_t v17 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
LABEL_9:
          memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000CCBFC()
{
  type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(0);
  sub_100179CD4();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + 32);
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v3 + *(int *)(v0 + 36)), *(unsigned char *)(v3 + *(int *)(v0 + 36) + 8));
  sub_10014D82C(*(void *)(v3 + *(int *)(v0 + 40)), *(unsigned __int8 *)(v3 + *(int *)(v0 + 40) + 8), *(unsigned char *)(v3 + *(int *)(v0 + 40) + 9));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000CCD80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v51 = a1;
  uint64_t v3 = type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  char v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E745D0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  uint64_t v48 = v9;
  __chkstk_darwin(v8);
  uint64_t v52 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E745D8);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = (void *)static Color.clear.getter();
  uint64_t v13 = v2 + *(int *)(v4 + 44);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_100195B7C(*(void *)v13, v15);
  sub_1000C3D18();
  char v17 = v16;
  sub_10018F6D8(v14, v15);
  char v54 = v17;
  uint64_t v46 = type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer;
  sub_1000CD40C(v2, (uint64_t)v7, (void (*)(void))type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  uint64_t v42 = v18 | 7;
  uint64_t v44 = v19 + v6;
  uint64_t v20 = swift_allocObject();
  uint64_t v43 = type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer;
  sub_1000CD2E8((uint64_t)v7, v20 + v19, (void (*)(void))type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  unint64_t v21 = sub_1000CD3C0();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_release();
  uint64_t v22 = *(int *)(v4 + 64);
  uint64_t v45 = v2;
  uint64_t v23 = (char *)(v2 + v22);
  uint64_t v24 = *(void **)(v2 + v22 + 8);
  LOBYTE(v56) = *(unsigned char *)(v2 + v22);
  uint64_t v57 = v24;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  uint64_t v25 = v2;
  uint64_t v26 = v46;
  sub_1000CD40C(v25, (uint64_t)v7, (void (*)(void))v46);
  uint64_t v27 = swift_allocObject();
  sub_1000CD2E8((uint64_t)v7, v27 + v19, (void (*)(void))type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer);
  uint64_t v56 = &type metadata for Color;
  uint64_t v57 = &unk_100E14670;
  uint64_t v58 = &protocol witness table for Color;
  unint64_t v59 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v52;
  uint64_t v29 = v47;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v29);
  uint64_t v30 = *((void *)v23 + 1);
  char v54 = *v23;
  uint64_t v55 = v30;
  State.projectedValue.getter();
  uint64_t v31 = v56;
  uint64_t v32 = v57;
  LODWORD(v52) = v58;
  sub_1000CD40C(v45, (uint64_t)v7, (void (*)(void))v26);
  uint64_t v33 = swift_allocObject();
  sub_1000CD2E8((uint64_t)v7, v33 + v19, (void (*)(void))v43);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1004057B0;
  *(void *)(v34 + 24) = v33;
  char v54 = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  State.init(wrappedValue:)();
  LOBYTE(v19) = (_BYTE)v56;
  uint64_t v35 = v57;
  uint64_t v37 = v49;
  uint64_t v36 = v50;
  uint64_t v38 = v51;
  uint64_t v39 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v51, v53, v50);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v40 = v38 + *(int *)(sub_10017DF08(&qword_100E745E0) + 36);
  *(void *)uint64_t v40 = v31;
  *(void *)(v40 + 8) = v32;
  *(unsigned char *)(v40 + 16) = (_BYTE)v52;
  *(unsigned char *)(v40 + 17) = 0;
  *(void *)(v40 + 24) = sub_10010A27C;
  *(void *)(v40 + 32) = v34;
  *(unsigned char *)(v40 + 40) = v19;
  *(void *)(v40 + 48) = v35;
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v39, v36);
}

uint64_t sub_1000CD2E8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E74518);
}

uint64_t sub_1000CD35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1000CD3C0();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_1000CD3C0()
{
  unint64_t result = qword_100E65FF8;
  if (!qword_100E65FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FF8);
  }
  return result;
}

uint64_t sub_1000CD40C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t sub_1000CD468(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = a2 + 32;
  long long v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v10(a1 + 32, v7, v9);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  swift_retain();
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
    *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
    *(unsigned char *)(v12 + 18) = *(unsigned char *)(v13 + 18);
    uint64_t v14 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v15 = v12 + v14;
    uint64_t v16 = v13 + v14;
    uint64_t v17 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_100195B7C(*(void *)v20, v22);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)v25;
  char v27 = *(unsigned char *)(v25 + 9);
  LOBYTE(v19) = *(unsigned char *)(v25 + 8);
  sub_100193DD4(*(void *)v25, v19, v27);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = v19;
  *(unsigned char *)(v24 + 9) = v27;
  uint64_t v28 = a3[11];
  uint64_t v29 = a3[12];
  uint64_t v30 = (void *)(a1 + v28);
  uint64_t v31 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v31;
  uint64_t v33 = v31[1];
  *uint64_t v30 = v32;
  v30[1] = v33;
  uint64_t v34 = a1 + v29;
  uint64_t v35 = a2 + v29;
  *(unsigned char *)uint64_t v34 = *(unsigned char *)v35;
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  uint64_t v36 = a3[13];
  uint64_t v37 = a3[14];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  uint64_t v40 = a1 + v37;
  uint64_t v41 = a2 + v37;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
  *(void *)(v40 + 8) = *(void *)(v41 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000CD6C8()
{
  sub_100162EA0();
  type metadata accessor for OSSignpostID();
  sub_100179C0C();
  type metadata accessor for Location();
  sub_100179C0C();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  sub_100164938();
  v2();
  sub_1001D167C();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_1000CD7B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v165 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v2 - 8);
  uint64_t v155 = (uint64_t)&v139 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocationHeaderView(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v157 = (uint64_t)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_10017DF08(&qword_100EA1E68);
  uint64_t v6 = __chkstk_darwin(v160);
  uint64_t v156 = (char *)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v158 = (uint64_t)&v139 - v8;
  uint64_t v163 = sub_10017DF08(&qword_100EA1E70);
  __chkstk_darwin(v163);
  uint64_t v159 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for LocationHeaderViewLargeText();
  __chkstk_darwin(v148);
  uint64_t v150 = (uint64_t *)((char *)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v149 = sub_10017DF08(&qword_100EA1E78);
  __chkstk_darwin(v149);
  uint64_t v146 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_10017DF08(&qword_100EA1E80);
  __chkstk_darwin(v145);
  uint64_t v147 = (uint64_t)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10017DF08(&qword_100EA1E88);
  __chkstk_darwin(v151);
  uint64_t v153 = (uint64_t)&v139 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_10017DF08(&qword_100EA1E90);
  uint64_t v14 = __chkstk_darwin(v162);
  uint64_t v152 = (uint64_t)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v154 = (uint64_t)&v139 - v16;
  uint64_t v17 = type metadata accessor for ContentSizeCategory();
  unint64_t v164 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v139 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v22 = (char *)&v139 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100EA1E98);
  __chkstk_darwin(v23);
  uint64_t v161 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (int *)type metadata accessor for LocationContentScrollingHeaderView(0);
  uint64_t v26 = v1;
  uint64_t v27 = v1 + v25[14];
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_100195B7C(*(void *)v27, v29);
  sub_100149AE8();
  char v31 = v30;
  sub_10018F6D8(v28, v29);
  if ((v31 & 1) == 0)
  {
    uint64_t v144 = v23;
    sub_10014E6E8();
    uint64_t v34 = v164;
    (*(void (**)(char *, char *, uint64_t))(v164 + 16))(v20, v22, v17);
    int v35 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v20, v17);
    BOOL v41 = v35 == enum case for ContentSizeCategory.extraSmall(_:)
       || v35 == enum case for ContentSizeCategory.small(_:)
       || v35 == enum case for ContentSizeCategory.medium(_:)
       || v35 == enum case for ContentSizeCategory.large(_:)
       || v35 == enum case for ContentSizeCategory.extraLarge(_:)
       || v35 == enum case for ContentSizeCategory.extraExtraLarge(_:)
       || v35 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
    uint64_t v42 = v25;
    uint64_t v143 = v26;
    if (v41)
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v17);
    }
    else
    {
      uint64_t v43 = *(void (**)(char *, uint64_t))(v34 + 8);
      if (v35 == enum case for ContentSizeCategory.accessibilityMedium(_:)
        || v35 == enum case for ContentSizeCategory.accessibilityLarge(_:)
        || v35 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
        || v35 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
        || v35 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        v43(v22, v17);
        uint64_t v48 = type metadata accessor for LocationViewModel();
        memcpy(v173, (const void *)(v26 + *(int *)(v48 + 24)), 0xA2uLL);
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v50 = (uint64_t)v150;
        *uint64_t v150 = KeyPath;
        *(unsigned char *)(v50 + 8) = 0;
        uint64_t v51 = v148;
        uint64_t v52 = (uint64_t *)(v50 + *(int *)(v148 + 20));
        *uint64_t v52 = swift_getKeyPath();
        sub_10017DF08(&qword_100E63BD8);
        swift_storeEnumTagMultiPayload();
        memcpy((void *)(v50 + *(int *)(v51 + 24)), v173, 0xA2uLL);
        uint64_t v53 = (const void *)(v26 + v25[10]);
        memcpy(v172, v53, 0x49uLL);
        sub_1000CE848((uint64_t)v173);
        sub_1001BEAB0((uint64_t)v172);
        sub_1001BEAF4();
        sub_1001BEAB0((uint64_t)v172);
        sub_1000E0B50();
        id v54 = [self currentDevice];
        id v55 = [v54 userInterfaceIdiom];

        if (v55)
        {
          sub_1001BEAB0((uint64_t)v172);
          sub_1001BEAF4();
          sub_1001BEAB0((uint64_t)v172);
        }
        uint64_t v104 = (uint64_t)v159;
        uint64_t v106 = (uint64_t)v146;
        uint64_t v105 = v147;
        uint64_t v107 = v145;
        static Alignment.leading.getter();
        _FrameLayout.init(width:height:alignment:)();
        sub_1001300BC();
        uint64_t v108 = (_OWORD *)(v106 + *(int *)(v149 + 36));
        long long v109 = v167;
        *uint64_t v108 = *(_OWORD *)&v166[104];
        v108[1] = v109;
        v108[2] = v168;
        sub_1001338DC(v50, (void (*)(void))type metadata accessor for LocationHeaderViewLargeText);
        sub_10006DF38(v106, v105, &qword_100EA1E78);
        *(_WORD *)(v105 + *(int *)(v107 + 36)) = 256;
        sub_100178110(v106, &qword_100EA1E78);
        LOBYTE(v107) = static Edge.Set.leading.getter();
        unsigned __int8 v110 = static Edge.Set.trailing.getter();
        char v111 = Edge.Set.init(rawValue:)();
        Edge.Set.init(rawValue:)();
        if (Edge.Set.init(rawValue:)() != v107) {
          char v111 = Edge.Set.init(rawValue:)();
        }
        Edge.Set.init(rawValue:)();
        if (Edge.Set.init(rawValue:)() != v110) {
          char v111 = Edge.Set.init(rawValue:)();
        }
        memcpy(v171, v53, 0x49uLL);
        sub_1001BEAB0((uint64_t)v171);
        sub_1001BEAF4();
        sub_1001BEAB0((uint64_t)v171);
        EdgeInsets.init(_all:)();
        uint64_t v113 = v112;
        uint64_t v115 = v114;
        uint64_t v117 = v116;
        uint64_t v119 = v118;
        uint64_t v120 = v153;
        sub_10006DF38(v105, v153, &qword_100EA1E80);
        uint64_t v121 = v120 + *(int *)(v151 + 36);
        *(unsigned char *)uint64_t v121 = v111;
        *(void *)(v121 + 8) = v113;
        *(void *)(v121 + 16) = v115;
        *(void *)(v121 + 24) = v117;
        *(void *)(v121 + 32) = v119;
        *(unsigned char *)(v121 + 40) = 0;
        sub_100178110(v105, &qword_100EA1E80);
        char v122 = static Edge.Set.top.getter();
        uint64_t v123 = v143 + v42[12];
        long long v124 = *(_OWORD *)(v123 + 16);
        v169[0] = *(_OWORD *)v123;
        v169[1] = v124;
        char v170 = *(unsigned char *)(v123 + 32);
        sub_10024D364((uint64_t)v169, (uint64_t)v166, &qword_100E63F98);
        sub_1000FA648((uint64_t)v166, (void (*)(void, void, void, void, void))sub_100190CD4);
        sub_1000FA688();
        sub_1000FA648((uint64_t)v169, (void (*)(void, void, void, void, void))sub_100191934);
        EdgeInsets.init(_all:)();
        uint64_t v126 = v125;
        uint64_t v128 = v127;
        uint64_t v130 = v129;
        uint64_t v132 = v131;
        uint64_t v133 = v152;
        sub_10006DF38(v120, v152, &qword_100EA1E88);
        uint64_t v134 = v133 + *(int *)(v162 + 36);
        *(unsigned char *)uint64_t v134 = v122;
        *(void *)(v134 + 8) = v126;
        *(void *)(v134 + 16) = v128;
        *(void *)(v134 + 24) = v130;
        *(void *)(v134 + 32) = v132;
        *(unsigned char *)(v134 + 40) = 0;
        sub_100178110(v120, &qword_100EA1E88);
        uint64_t v135 = v133;
        uint64_t v136 = v154;
        sub_10024D364(v135, v154, &qword_100EA1E90);
        sub_10006DF38(v136, v104, &qword_100EA1E90);
        swift_storeEnumTagMultiPayload();
        sub_1000CE7D0((uint64_t)&unk_100EA1EA0);
        sub_1000CFD98();
        uint64_t v90 = (uint64_t)v161;
        _ConditionalContent<>.init(storage:)();
        sub_100178110(v136, &qword_100EA1E90);
        uint64_t v91 = v165;
        goto LABEL_52;
      }
      v43(v20, v17);
      v43(v22, v17);
    }
    uint64_t v56 = type metadata accessor for LocationViewModel();
    memcpy(v173, (const void *)(v26 + *(int *)(v56 + 24)), 0xA2uLL);
    uint64_t v57 = v25[6];
    uint64_t v58 = v26 + v25[5];
    uint64_t v59 = v26;
    uint64_t v61 = *(void *)v58;
    uint64_t v142 = *(void *)(v58 + 8);
    uint64_t v60 = v142;
    int v62 = *(unsigned __int8 *)(v58 + 16);
    uint64_t v140 = *(void *)(v58 + 24);
    uint64_t v63 = *(void *)(v59 + v57);
    uint64_t v151 = *(void *)(v59 + v57 + 8);
    uint64_t v64 = v151;
    uint64_t v152 = v63;
    unsigned __int8 v65 = *(unsigned char *)(v59 + v57 + 16);
    LODWORD(v150) = v65;
    uint64_t v154 = *(void *)(v59 + v57 + 24);
    uint64_t v66 = v25[8];
    uint64_t v67 = (uint64_t *)(v59 + v25[7]);
    unint64_t v164 = *v67;
    unint64_t v68 = v67[2];
    uint64_t v153 = v67[1];
    uint64_t v148 = (uint64_t)v42;
    unint64_t v149 = v68;
    uint64_t v141 = v67[3];
    uint64_t v145 = v59 + v66;
    uint64_t v69 = v59 + v42[11];
    uint64_t v70 = *(void *)v69;
    char v71 = *(unsigned char *)(v69 + 8);
    sub_1000CE848((uint64_t)v173);
    uint64_t v147 = v61;
    LODWORD(v146) = v62;
    sub_100190CC4(v61, v60, v62);
    uint64_t v72 = v140;
    swift_bridgeObjectRetain();
    sub_100190CC4(v63, v64, v65);
    swift_bridgeObjectRetain();
    unint64_t v73 = v141;
    sub_100147E1C(v164, v153, v68, v141);
    sub_100195B7C(v70, v71);
    sub_100149AE8();
    LOBYTE(v63) = v74;
    sub_10018F6D8(v70, v71);
    sub_1000CF838(v63 & 1);
    uint64_t v75 = v142;
    uint64_t v76 = Text.font(_:)();
    uint64_t v78 = v77;
    LOBYTE(v60) = v79;
    swift_release();
    uint64_t v80 = type metadata accessor for Text.WritingMode();
    uint64_t v81 = v155;
    _s7Weather24LocationCompositionStateOwst_0(v155, 1, 1, v80);
    Text.Measurements.size(of:in:writingMode:)();
    double v83 = v82;
    sub_100191924(v76, v78, v60 & 1);
    swift_bridgeObjectRelease();
    sub_100178110(v81, &qword_100E63DB8);
    memcpy(v172, (const void *)(v143 + *(int *)(v148 + 40)), 0x49uLL);
    sub_1001BEAB0((uint64_t)v172);
    sub_1001BEAF4();
    sub_1001BEAB0((uint64_t)v172);
    v138.n128_u64[1] = v153;
    v138.n128_u64[0] = v164;
    uint64_t v84 = v157;
    sub_1000CFA3C(v173, v147, v75, (char)v146, v72, v152, v151, (char)v150, v157, v83, v171[7], v154, v138, v149, v73);
    LOBYTE(v75) = static Edge.Set.leading.getter();
    char v85 = static Edge.Set.trailing.getter();
    char v86 = Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v75) {
      char v86 = Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    char v87 = Edge.Set.init(rawValue:)();
    uint64_t v89 = (uint64_t)v159;
    uint64_t v88 = v160;
    uint64_t v90 = (uint64_t)v161;
    if (v87 != v85) {
      char v86 = Edge.Set.init(rawValue:)();
    }
    uint64_t v91 = v165;
    sub_1001BEAB0((uint64_t)v172);
    sub_1001BEAF4();
    sub_1001BEAB0((uint64_t)v172);
    EdgeInsets.init(_all:)();
    uint64_t v93 = v92;
    uint64_t v95 = v94;
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    uint64_t v100 = v156;
    sub_1001300BC();
    uint64_t v101 = &v100[*(int *)(v88 + 36)];
    *uint64_t v101 = v86;
    *((void *)v101 + 1) = v93;
    *((void *)v101 + 2) = v95;
    *((void *)v101 + 3) = v97;
    *((void *)v101 + 4) = v99;
    v101[40] = 0;
    sub_1001338DC(v84, (void (*)(void))type metadata accessor for LocationHeaderView);
    uint64_t v102 = (uint64_t)v100;
    uint64_t v103 = v158;
    sub_10024D364(v102, v158, &qword_100EA1E68);
    sub_10006DF38(v103, v89, &qword_100EA1E68);
    swift_storeEnumTagMultiPayload();
    sub_1000CE7D0((uint64_t)&unk_100EA1EA0);
    sub_1000CFD98();
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v103, &qword_100EA1E68);
LABEL_52:
    uint64_t v137 = v144;
    sub_10024D364(v90, v91, &qword_100EA1E98);
    return _s7Weather24LocationCompositionStateOwst_0(v91, 0, 1, v137);
  }
  uint64_t v32 = v165;

  return _s7Weather24LocationCompositionStateOwst_0(v32, 1, 1, v23);
}

uint64_t type metadata accessor for LocationHeaderViewLargeText()
{
  uint64_t result = qword_100E9BF10;
  if (!qword_100E9BF10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1000CE7D0(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1000CE848(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000CE90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v93 = a8;
  LODWORD(v101) = a7;
  uint64_t v118 = a5;
  int v99 = a3;
  uint64_t v119 = a2;
  uint64_t v117 = a1;
  uint64_t v116 = a9;
  uint64_t v94 = a10;
  uint64_t v95 = a11;
  uint64_t v96 = a12;
  uint64_t v97 = a13;
  uint64_t v115 = sub_10017DF08(&qword_100EA1610);
  __chkstk_darwin(v115);
  uint64_t v91 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v88 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v100 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10017DF08(&qword_100EA15E8);
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v120 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for LocationContentView(0);
  uint64_t v98 = *(void *)(v109 - 8);
  uint64_t v20 = *(void *)(v98 + 64);
  __chkstk_darwin(v109);
  uint64_t v113 = sub_10017DF08(&qword_100EA1618);
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v21 = __chkstk_darwin(v113);
  uint64_t v102 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v103 = (char *)&v83 - v24;
  __chkstk_darwin(v23);
  char v111 = (char *)&v83 - v25;
  uint64_t v106 = sub_10017DF08(&qword_100EA15E0);
  __chkstk_darwin(v106);
  uint64_t v104 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10017DF08(&qword_100EA15D0);
  __chkstk_darwin(v108);
  uint64_t v110 = (uint64_t)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10017DF08(&qword_100EA15C0);
  uint64_t v84 = *(void *)(v114 - 8);
  uint64_t v28 = __chkstk_darwin(v114);
  uint64_t v86 = (uint64_t)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = v29;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v83 - v30;
  uint64_t v31 = v99 & 1;
  int v92 = v99 & 1;
  int v99 = v101 & 1;
  uint64_t v32 = v118;
  double v33 = sub_1000CF4D8(v13, v117, v119, v31, a4, v118, a6, v99, a8, a10, a11, a12, a13);
  uint64_t v89 = v13;
  sub_1001300BC();
  unint64_t v34 = (v20 + ((*(unsigned __int8 *)(v98 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  sub_100130070();
  *(double *)(v37 + v34) = v33;
  unint64_t v38 = v37 + v35;
  uint64_t v39 = v117;
  uint64_t v40 = v119;
  *(void *)unint64_t v38 = v117;
  *(void *)(v38 + 8) = v40;
  char v41 = v92;
  *(unsigned char *)(v38 + 16) = v92;
  *(void *)(v38 + 24) = a4;
  unint64_t v42 = v37 + v36;
  *(void *)unint64_t v42 = v32;
  *(void *)(v42 + 8) = a6;
  char v43 = v99;
  *(unsigned char *)(v42 + 16) = v99;
  *(void *)(v42 + 24) = v93;
  uint64_t v44 = (uint64_t *)(v37 + ((v36 + 39) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v45 = v94;
  uint64_t v46 = v95;
  *uint64_t v44 = v94;
  v44[1] = v46;
  LOBYTE(v34) = v96;
  uint64_t v47 = v97;
  v44[2] = v96;
  v44[3] = v47;
  uint64_t v121 = sub_10009F208;
  uint64_t v122 = v37;
  uint64_t v101 = v37;
  sub_100190CC4(v39, v40, v41);
  swift_bridgeObjectRetain();
  sub_100190CC4(v118, a6, v43);
  swift_bridgeObjectRetain();
  sub_100147E1C(v45, v46, v34, v47);
  static Axis.Set.vertical.getter();
  sub_10017DF08(&qword_100EA1620);
  sub_10024D5E4((uint64_t)&unk_100EA1628);
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v48 = v100;
  static ScrollIndicatorVisibility.never.getter();
  LOBYTE(v34) = static Axis.Set.vertical.getter();
  unsigned __int8 v49 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v34) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v49) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v50 = v91;
  uint64_t v51 = (uint64_t)v90;
  uint64_t v52 = v89;
  uint64_t v53 = v88;
  uint64_t v54 = v87;
  sub_10024D5E4((uint64_t)&unk_100EA15F0);
  id v55 = v102;
  uint64_t v56 = v107;
  uint64_t v57 = v120;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v53);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v57, v56);
  uint64_t v58 = v112;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
  uint64_t v60 = v103;
  uint64_t v61 = v113;
  v59(v103, v55, v113);
  int v62 = v111;
  v59(v111, v60, v61);
  swift_release();
  LOBYTE(v56) = static Edge.Set.top.getter();
  uint64_t v63 = v52 + *(int *)(v109 + 64);
  long long v64 = *(_OWORD *)(v63 + 16);
  v123[0] = *(_OWORD *)v63;
  v123[1] = v64;
  char v124 = *(unsigned char *)(v63 + 32);
  sub_10024D364((uint64_t)v123, (uint64_t)v125, &qword_100E63F98);
  sub_1000FA648((uint64_t)v125, (void (*)(void, void, void, void, void))sub_100190CD4);
  sub_1000FA688();
  sub_1000FA648((uint64_t)v123, (void (*)(void, void, void, void, void))sub_100191934);
  EdgeInsets.init(_all:)();
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v73 = (uint64_t)v104;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v104, v62, v61);
  uint64_t v74 = v73 + *(int *)(v106 + 36);
  *(unsigned char *)uint64_t v74 = v56;
  *(void *)(v74 + 8) = v66;
  *(void *)(v74 + 16) = v68;
  *(void *)(v74 + 24) = v70;
  *(void *)(v74 + 32) = v72;
  *(unsigned char *)(v74 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v62, v61);
  uint64_t v75 = v110;
  sub_10006DF38(v73, v110, &qword_100EA15E0);
  *(_WORD *)(v75 + *(int *)(v108 + 36)) = 0;
  sub_100178110(v73, &qword_100EA15E0);
  sub_10006DF38(v75, v51, &qword_100EA15D0);
  uint64_t v76 = (void *)(v51 + *(int *)(v114 + 36));
  *uint64_t v76 = 0xD000000000000012;
  v76[1] = 0x8000000100C96C80;
  sub_100178110(v75, &qword_100EA15D0);
  id v77 = [self currentDevice];
  id v78 = [v77 userInterfaceIdiom];

  if (v78)
  {
    sub_10006DF38(v51, (uint64_t)v50, &qword_100EA15C0);
  }
  else
  {
    uint64_t v79 = v86;
    sub_10006DF38(v51, v86, &qword_100EA15C0);
    unint64_t v80 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
    uint64_t v81 = swift_allocObject();
    sub_10024D364(v79, v81 + v80, &qword_100EA15C0);
    *uint64_t v50 = sub_10002D8A8;
    v50[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v81;
  }
  swift_storeEnumTagMultiPayload();
  sub_10017DF08(&qword_100EA15B0);
  sub_10024D5E4((uint64_t)&unk_100EA15A8);
  sub_1000CFCF8();
  _ConditionalContent<>.init(storage:)();
  return sub_100178110(v51, &qword_100EA15C0);
}

double sub_1000CF4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  int v48 = a8;
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v47 = a9;
  uint64_t v14 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1 + *(int *)(type metadata accessor for LocationContentView(0) + 56);
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  sub_100149AE8();
  char v21 = v20;
  sub_10018F6D8(v18, v19);
  sub_1000CF838(v21 & 1);
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  LOBYTE(v18) = v26 & 1;
  uint64_t v27 = type metadata accessor for Text.WritingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v27);
  Text.Measurements.size(of:in:writingMode:)();
  double v29 = v28;
  sub_100191924(v22, v24, v18);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v16, &qword_100E63DB8);
  static Font.largeTitle.getter();
  uint64_t v30 = Text.font(_:)();
  uint64_t v32 = v31;
  char v34 = v33;
  swift_release();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v27);
  Text.Measurements.size(of:in:writingMode:)();
  double v36 = v35;
  sub_100191924(v30, v32, v34 & 1);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v16, &qword_100E63DB8);
  double v37 = v29 + v36 + sub_1000FA800();
  double v38 = v37 + sub_1000CF9D0();
  if (a13)
  {
    uint64_t v49 = a10;
    uint64_t v50 = a11;
    sub_100190CC4(a10, a11, a12 & 1);
    swift_bridgeObjectRetain();
    static Font.headline.getter();
    Font.smallCaps()();
    swift_release();
    char v51 = a12 & 1;
    uint64_t v39 = Text.font(_:)();
    uint64_t v41 = v40;
    char v43 = v42;
    swift_release();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v27);
    Text.Measurements.size(of:in:writingMode:)();
    double v45 = v44;
    sub_100191924(v39, v41, v43 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(v49, v50, a12 & 1);
    swift_bridgeObjectRelease();
    sub_100178110((uint64_t)v16, &qword_100E63DB8);
    return v38 + v45;
  }
  return v38;
}

uint64_t sub_1000CF838(char a1)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((a1 & 1) == 0) {
    uint64_t v14 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *v14, v8);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for Font.Leading.tight(_:), v2);
  uint64_t v15 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  return v15;
}

double sub_1000CF9D0()
{
  id v0 = [self currentDevice];
  unint64_t v1 = (unint64_t)[v0 userInterfaceIdiom];

  double result = 0.0;
  if (v1 <= 5) {
    return dbl_100C46878[v1];
  }
  return result;
}

__n128 sub_1000CFA3C@<Q0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, __n128 a13, unint64_t a14, unint64_t a15)
{
  *(void *)a9 = swift_getKeyPath();
  *(unsigned char *)(a9 + 8) = 0;
  *(void *)(a9 + 16) = swift_getKeyPath();
  *(unsigned char *)(a9 + 24) = 0;
  uint64_t v23 = (int *)type metadata accessor for LocationHeaderView(0);
  uint64_t v24 = (uint64_t *)(a9 + v23[6]);
  *uint64_t v24 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  sub_100183804();
  char v25 = (uint64_t *)(a9 + v23[7]);
  *char v25 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  sub_100183804();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100166AD0(KeyPath);
  uint64_t v27 = swift_getKeyPath();
  sub_100166AD0(v27);
  double v28 = (uint64_t *)(a9 + v23[10]);
  *double v28 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  sub_100183804();
  uint64_t v29 = swift_getKeyPath();
  sub_100166AD0(v29);
  uint64_t v30 = (uint64_t *)(a9 + v23[12]);
  *uint64_t v30 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD8);
  sub_100183804();
  uint64_t v31 = swift_getKeyPath();
  sub_100166AD0(v31);
  uint64_t v32 = a9 + v23[14];
  *(void *)uint64_t v32 = swift_getKeyPath();
  *(void *)(v32 + 8) = 0;
  *(void *)(v32 + 16) = 0;
  *(void *)(v32 + 24) = 0;
  *(unsigned char *)(v32 + 32) = 0;
  uint64_t v33 = a9 + v23[15];
  *(void *)uint64_t v33 = swift_getKeyPath();
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(_OWORD *)(v33 + 33) = 0u;
  Text.Measurements.init()();
  sub_100146A70();
  ScaledMetric.init(wrappedValue:)();
  memcpy((void *)(a9 + v23[16]), a1, 0xA2uLL);
  uint64_t v34 = a9 + v23[17];
  *(void *)uint64_t v34 = a2;
  *(void *)(v34 + 8) = a3;
  *(unsigned char *)(v34 + 16) = a4 & 1;
  *(void *)(v34 + 24) = a5;
  uint64_t v35 = a9 + v23[18];
  *(void *)uint64_t v35 = a6;
  *(void *)(v35 + 8) = a7;
  *(unsigned char *)(v35 + 16) = a8 & 1;
  *(void *)(v35 + 24) = a12;
  double v36 = (__n128 *)(a9 + v23[19]);
  __n128 result = a13;
  *double v36 = a13;
  v36[1].n128_u64[0] = a14;
  v36[1].n128_u64[1] = a15;
  *(double *)(a9 + v23[20]) = a10;
  *(double *)(a9 + v23[22]) = a11;
  return result;
}

unint64_t sub_1000CFCF8()
{
  unint64_t result = qword_100EA15B8;
  if (!qword_100EA15B8)
  {
    sub_10018C6DC(&qword_100EA15C0);
    sub_10022BC60();
    sub_10024D5E4((uint64_t)&qword_100E7EA48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA15B8);
  }
  return result;
}

unint64_t sub_1000CFD98()
{
  unint64_t result = qword_100EA1EC8;
  if (!qword_100EA1EC8)
  {
    sub_10018C6DC(&qword_100EA1E68);
    sub_100135128((uint64_t)&unk_100EA1ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1EC8);
  }
  return result;
}

void *sub_1000CFE44(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v146 = *(void *)(v10 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v146 + 24);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  uint64_t v12 = v6[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v6[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[5];
  char v19 = &a1[v18];
  char v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)char v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  swift_retain();
  swift_release();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v22 = a3[7];
  uint64_t v151 = a1;
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v145 = *(void *)(v25 - 8);
  uint64_t v147 = v25;
  uint64_t v143 = *(void (**)(char *, char *))(v145 + 24);
  v143(v23, v24);
  char v26 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v27 = v26[5];
  double v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  *(void *)double v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v26[6];
  uint64_t v31 = &v23[v30];
  uint64_t v32 = &v24[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = v26[7];
  uint64_t v34 = &v23[v33];
  uint64_t v35 = &v24[v33];
  uint64_t v36 = type metadata accessor for TimeZone();
  uint64_t v144 = *(void *)(v36 - 8);
  uint64_t v148 = v36;
  uint64_t v142 = *(void (**)(char *, char *))(v144 + 24);
  v142(v34, v35);
  v11(&v23[v26[8]], &v24[v26[8]], v10);
  uint64_t v149 = v10;
  v11(&v23[v26[9]], &v24[v26[9]], v10);
  uint64_t v37 = v26[10];
  double v38 = &v23[v37];
  uint64_t v39 = &v24[v37];
  *(void *)double v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = v26[11];
  uint64_t v41 = &v23[v40];
  char v42 = &v24[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v23[v26[12]] = *(void *)&v24[v26[12]];
  v23[v26[13]] = v24[v26[13]];
  uint64_t v43 = v26[14];
  double v44 = &v23[v43];
  double v45 = &v24[v43];
  *(void *)double v44 = *(void *)v45;
  *((void *)v44 + 1) = *((void *)v45 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = v26[15];
  uint64_t v47 = &v23[v46];
  int v48 = &v24[v46];
  uint64_t v49 = type metadata accessor for Precipitation();
  LODWORD(v34) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  uint64_t v150 = v49;
  if (v34)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v51 = *(void *)(v49 - 8);
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v49);
LABEL_6:
    uint64_t v52 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 24))(v47, v48, v49);
LABEL_7:
  v23[v26[16]] = v24[v26[16]];
  uint64_t v53 = v26[17];
  uint64_t v54 = &v23[v53];
  id v55 = &v24[v53];
  *(void *)uint64_t v54 = *(void *)v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = v26[18];
  uint64_t v57 = &v23[v56];
  uint64_t v58 = &v24[v56];
  *(void *)uint64_t v57 = *(void *)v58;
  *((void *)v57 + 1) = *((void *)v58 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = v26[19];
  uint64_t v60 = &v23[v59];
  uint64_t v61 = &v24[v59];
  *(void *)uint64_t v60 = *(void *)v61;
  *((void *)v60 + 1) = *((void *)v61 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v23[v26[20]] = *(void *)&v24[v26[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v151 + a3[8]) = *(void *)&a2[a3[8]];
  uint64_t v62 = a3[9];
  uint64_t v63 = (void *)((char *)v151 + v62);
  long long v64 = &a2[v62];
  *uint64_t v63 = *(void *)v64;
  v63[1] = *((void *)v64 + 1);
  uint64_t v65 = a3[10];
  uint64_t v66 = (void *)((char *)v151 + v65);
  uint64_t v67 = &a2[v65];
  *uint64_t v66 = *(void *)v67;
  v66[1] = *((void *)v67 + 1);
  *(void *)((char *)v151 + a3[11]) = *(void *)&a2[a3[11]];
  *((unsigned char *)v151 + a3[12]) = a2[a3[12]];
  uint64_t v68 = a3[13];
  uint64_t v69 = (char *)v151 + v68;
  uint64_t v70 = &a2[v68];
  *(void *)((char *)v151 + v68) = *(void *)&a2[v68];
  swift_retain();
  swift_release();
  *((void *)v69 + 1) = *((void *)v70 + 1);
  swift_retain();
  swift_release();
  uint64_t v71 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v72 = &v69[v71];
  uint64_t v73 = &v70[v71];
  int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, (uint64_t)v26);
  int v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, (uint64_t)v26);
  if (!v74)
  {
    if (v75)
    {
      sub_1001440E4((uint64_t)v72, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_13;
    }
    ((void (*)(char *, char *, uint64_t))v143)(v72, v73, v147);
    uint64_t v101 = v26[5];
    uint64_t v102 = &v72[v101];
    uint64_t v103 = &v73[v101];
    *(void *)uint64_t v102 = *(void *)v103;
    *((void *)v102 + 1) = *((void *)v103 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v104 = v26[6];
    uint64_t v105 = &v72[v104];
    uint64_t v106 = &v73[v104];
    *(void *)uint64_t v105 = *(void *)v106;
    *((void *)v105 + 1) = *((void *)v106 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v142)(&v72[v26[7]], &v73[v26[7]], v148);
    v11(&v72[v26[8]], &v73[v26[8]], v149);
    v11(&v72[v26[9]], &v73[v26[9]], v149);
    uint64_t v107 = v26[10];
    uint64_t v108 = &v72[v107];
    uint64_t v109 = &v73[v107];
    *(void *)uint64_t v108 = *(void *)v109;
    *((void *)v108 + 1) = *((void *)v109 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v110 = v26[11];
    char v111 = &v72[v110];
    uint64_t v112 = &v73[v110];
    *(void *)char v111 = *(void *)v112;
    *((void *)v111 + 1) = *((void *)v112 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v72[v26[12]] = *(void *)&v73[v26[12]];
    v72[v26[13]] = v73[v26[13]];
    uint64_t v113 = v26[14];
    uint64_t v114 = &v72[v113];
    uint64_t v115 = &v73[v113];
    *(void *)uint64_t v114 = *(void *)v115;
    *((void *)v114 + 1) = *((void *)v115 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v116 = v26[15];
    uint64_t v117 = &v72[v116];
    uint64_t v118 = &v73[v116];
    int v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v72[v116], 1, v150);
    int v120 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v150);
    if (v119)
    {
      if (!v120)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v117, v118, v150);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v150);
LABEL_23:
        v72[v26[16]] = v73[v26[16]];
        uint64_t v132 = v26[17];
        uint64_t v133 = &v72[v132];
        uint64_t v134 = &v73[v132];
        *(void *)uint64_t v133 = *(void *)v134;
        *((void *)v133 + 1) = *((void *)v134 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v135 = v26[18];
        uint64_t v136 = &v72[v135];
        uint64_t v137 = &v73[v135];
        *(void *)uint64_t v136 = *(void *)v137;
        *((void *)v136 + 1) = *((void *)v137 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v138 = v26[19];
        uint64_t v139 = &v72[v138];
        uint64_t v140 = &v73[v138];
        *(void *)uint64_t v139 = *(void *)v140;
        *((void *)v139 + 1) = *((void *)v140 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v72[v26[20]] = *(void *)&v73[v26[20]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v151;
      }
    }
    else
    {
      uint64_t v130 = *(void *)(v150 - 8);
      if (!v120)
      {
        (*(void (**)(char *, char *, uint64_t))(v130 + 24))(v117, v118, v150);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v130 + 8))(v117, v150);
    }
    uint64_t v131 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v117, v118, *(void *)(*(void *)(v131 - 8) + 64));
    goto LABEL_23;
  }
  if (v75)
  {
LABEL_13:
    uint64_t v100 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v72, v73, *(void *)(*(void *)(v100 - 8) + 64));
    return v151;
  }
  (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v72, v73, v147);
  uint64_t v76 = v26[5];
  id v77 = &v72[v76];
  id v78 = &v73[v76];
  *(void *)id v77 = *(void *)v78;
  *((void *)v77 + 1) = *((void *)v78 + 1);
  uint64_t v79 = v26[6];
  unint64_t v80 = &v72[v79];
  uint64_t v81 = &v73[v79];
  *(void *)unint64_t v80 = *(void *)v81;
  *((void *)v80 + 1) = *((void *)v81 + 1);
  uint64_t v82 = v26[7];
  uint64_t v83 = &v72[v82];
  uint64_t v84 = &v73[v82];
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v144 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v85(v83, v84, v148);
  uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v146 + 16);
  v86(&v72[v26[8]], &v73[v26[8]], v149);
  v86(&v72[v26[9]], &v73[v26[9]], v149);
  uint64_t v87 = v26[10];
  uint64_t v88 = &v72[v87];
  uint64_t v89 = &v73[v87];
  *(void *)uint64_t v88 = *(void *)v89;
  *((void *)v88 + 1) = *((void *)v89 + 1);
  uint64_t v90 = v26[11];
  uint64_t v91 = &v72[v90];
  int v92 = &v73[v90];
  *(void *)uint64_t v91 = *(void *)v92;
  *((void *)v91 + 1) = *((void *)v92 + 1);
  *(void *)&v72[v26[12]] = *(void *)&v73[v26[12]];
  v72[v26[13]] = v73[v26[13]];
  uint64_t v93 = v26[14];
  uint64_t v94 = &v72[v93];
  uint64_t v95 = &v73[v93];
  *(void *)uint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  uint64_t v96 = v26[15];
  uint64_t v97 = &v72[v96];
  uint64_t v98 = &v73[v96];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v150))
  {
    uint64_t v99 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v97, v98, v150);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v150);
  }
  v72[v26[16]] = v73[v26[16]];
  uint64_t v121 = v26[17];
  uint64_t v122 = &v72[v121];
  uint64_t v123 = &v73[v121];
  *(void *)uint64_t v122 = *(void *)v123;
  *((void *)v122 + 1) = *((void *)v123 + 1);
  uint64_t v124 = v26[18];
  uint64_t v125 = &v72[v124];
  uint64_t v126 = &v73[v124];
  *(void *)uint64_t v125 = *(void *)v126;
  *((void *)v125 + 1) = *((void *)v126 + 1);
  uint64_t v127 = v26[19];
  uint64_t v128 = &v72[v127];
  uint64_t v129 = &v73[v127];
  *(void *)uint64_t v128 = *(void *)v129;
  *((void *)v128 + 1) = *((void *)v129 + 1);
  *(void *)&v72[v26[20]] = *(void *)&v73[v26[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, (uint64_t)v26);
  return v151;
}

uint64_t initializeWithCopy for CollisionModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  char v6 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  sub_100195B7C(v5, v6);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_retain();
  return a1;
}

void *sub_1000D0B48(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v8 = *v9;
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v12 = type metadata accessor for CodableError();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
LABEL_5:
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_7:
  uint64_t v13 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E639E8);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_1000D0D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    void *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = a3;
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)(a2 + v14);
  *(_WORD *)(v15 + 1) = *(_WORD *)(a2 + v14 + 1);
  uint64_t v17 = *(void *)(a2 + v14 + 16);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  *(void *)(v15 + 16) = v17;
  uint64_t v18 = (int *)type metadata accessor for LocationFooterViewModel();
  uint64_t v19 = v18[8];
  char v20 = (void *)(v15 + v19);
  uint64_t v21 = (const void *)(v16 + v19);
  uint64_t v22 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  uint64_t v52 = a2;
  uint64_t v53 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E749B0);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v24 = v18[9];
  uint64_t v25 = v15 + v24;
  uint64_t v26 = v16 + v24;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)(v16 + v24);
  *(void *)(v25 + 8) = *(void *)(v16 + v24 + 8);
  uint64_t v27 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v28 = v27[6];
  uint64_t v29 = (void *)(v25 + v28);
  uint64_t v30 = (const void *)(v26 + v28);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v22))
  {
    uint64_t v31 = sub_10017DF08(&qword_100E749B0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v29, v30, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v22);
  }
  uint64_t v32 = v27[7];
  uint64_t v33 = (void *)(v25 + v32);
  uint64_t v34 = (void *)(v26 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  *(void *)(v25 + v27[8]) = *(void *)(v26 + v27[8]);
  *(unsigned char *)(v15 + v18[10]) = *(unsigned char *)(v16 + v18[10]);
  uint64_t v36 = v18[11];
  uint64_t v37 = (void *)(v15 + v36);
  double v38 = (const void *)(v16 + v36);
  uint64_t v39 = type metadata accessor for LocationOfInterest();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_10017DF08(&qword_100E63508);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  *(unsigned char *)(v15 + v18[12]) = *(unsigned char *)(v16 + v18[12]);
  *(unsigned char *)(v15 + v18[13]) = *(unsigned char *)(v16 + v18[13]);
  uint64_t v41 = v18[14];
  char v42 = (unsigned char *)(v15 + v41);
  uint64_t v43 = (unsigned char *)(v16 + v41);
  double v44 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
  {
    uint64_t v45 = sub_10017DF08(&qword_100E6DC10);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    *char v42 = *v43;
    uint64_t v46 = v44[5];
    uint64_t v47 = &v42[v46];
    int v48 = &v43[v46];
    uint64_t v49 = type metadata accessor for Location();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 16))(&v42[v44[6]], &v43[v44[6]], v39);
    v42[v44[7]] = v43[v44[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
  }
  *(_OWORD *)(v53 + *(int *)(v51 + 32)) = *(_OWORD *)(v52 + *(int *)(v51 + 32));
  swift_unknownObjectRetain();
  return v53;
}

uint64_t sub_1000D11E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  char v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 24);
  uint64_t v20 = *(void *)(v17 + 32);
  uint64_t v21 = *(void *)(v17 + 40);
  char v22 = *(unsigned char *)(v17 + 48);
  sub_100193004(v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(v16 + 16);
  uint64_t v24 = *(void *)(v16 + 24);
  uint64_t v25 = *(void *)(v16 + 32);
  uint64_t v26 = *(void *)(v16 + 40);
  *(void *)(v16 + 16) = v18;
  *(void *)(v16 + 24) = v19;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = v21;
  char v27 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v22;
  sub_100191D78(v23, v24, v25, v26, v27);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_retain();
  swift_release();
  uint64_t v28 = v8[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v18) = _s7Weather24LocationCompositionStateOwet_0(v29, 1, (uint64_t)v31);
  int v32 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, (uint64_t)v31);
  if (!v18)
  {
    if (v32)
    {
      sub_1001338DC(v29, (void (*)(void))type metadata accessor for LocationFooterViewModel);
      goto LABEL_13;
    }
    *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
    *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
    *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
    *(void *)(v29 + 8) = *(void *)(v30 + 8);
    *(void *)(v29 + 16) = *(void *)(v30 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v42 = v31[8];
    uint64_t v43 = (void *)(v29 + v42);
    double v44 = (const void *)(v30 + v42);
    uint64_t v45 = type metadata accessor for URL();
    int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
    int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
    if (v46)
    {
      if (!v47)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v190 = *(void *)(v45 - 8);
      if (!v47)
      {
        (*(void (**)(void *, const void *, uint64_t))(v190 + 24))(v43, v44, v45);
LABEL_59:
        uint64_t v236 = v31;
        uint64_t v192 = v31[9];
        uint64_t v193 = v29 + v192;
        uint64_t v194 = v30 + v192;
        *(unsigned char *)uint64_t v193 = *(unsigned char *)(v30 + v192);
        *(void *)(v193 + 8) = *(void *)(v30 + v192 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v233 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
        uint64_t v195 = v233[6];
        uint64_t v196 = (const void *)(v194 + v195);
        uint64_t v227 = v193 + v195;
        int v197 = _s7Weather24LocationCompositionStateOwet_0(v193 + v195, 1, v45);
        int v198 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v45);
        if (v197)
        {
          if (v198)
          {
            size_t v199 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
            uint64_t v200 = (void *)v227;
LABEL_64:
            memcpy(v200, v196, v199);
            goto LABEL_68;
          }
          (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v227, v196, v45);
          _s7Weather24LocationCompositionStateOwst_0(v227, 0, 1, v45);
        }
        else
        {
          uint64_t v201 = *(void *)(v45 - 8);
          if (v198)
          {
            (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v227, v45);
            size_t v199 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
            uint64_t v200 = (void *)v227;
            goto LABEL_64;
          }
          (*(void (**)(uint64_t, const void *, uint64_t))(v201 + 24))(v227, v196, v45);
        }
LABEL_68:
        uint64_t v202 = v233[7];
        uint64_t v203 = (void *)(v193 + v202);
        unint64_t v204 = (void *)(v194 + v202);
        *uint64_t v203 = *v204;
        v203[1] = v204[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v193 + v233[8]) = *(void *)(v194 + v233[8]);
        swift_retain();
        swift_release();
        *(unsigned char *)(v29 + v236[10]) = *(unsigned char *)(v30 + v236[10]);
        uint64_t v205 = v236[11];
        uint64_t v206 = (void *)(v29 + v205);
        uint64_t v207 = (const void *)(v30 + v205);
        uint64_t v208 = type metadata accessor for LocationOfInterest();
        int v209 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v206, 1, v208);
        int v210 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, v208);
        if (v209)
        {
          if (!v210)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v208 - 8) + 16))(v206, v207, v208);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v208);
LABEL_74:
            *(unsigned char *)(v29 + v236[12]) = *(unsigned char *)(v30 + v236[12]);
            *(unsigned char *)(v29 + v236[13]) = *(unsigned char *)(v30 + v236[13]);
            uint64_t v213 = v236[14];
            uint64_t v214 = (unsigned char *)(v29 + v213);
            uint64_t v215 = (unsigned char *)(v30 + v213);
            uint64_t v216 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
            int v217 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v214, 1, (uint64_t)v216);
            int v218 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v215, 1, (uint64_t)v216);
            if (v217)
            {
              if (!v218)
              {
                *uint64_t v214 = *v215;
                uint64_t v219 = v216[5];
                v220 = &v214[v219];
                v221 = &v215[v219];
                uint64_t v222 = type metadata accessor for Location();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v222 - 8) + 16))(v220, v221, v222);
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v208 - 8) + 16))(&v214[v216[6]], &v215[v216[6]], v208);
                v214[v216[7]] = v215[v216[7]];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v214, 0, 1, (uint64_t)v216);
                goto LABEL_15;
              }
            }
            else
            {
              if (!v218)
              {
                *uint64_t v214 = *v215;
                uint64_t v223 = v216[5];
                unint64_t v224 = &v214[v223];
                uint64_t v225 = &v215[v223];
                uint64_t v226 = type metadata accessor for Location();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v226 - 8) + 24))(v224, v225, v226);
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v208 - 8) + 24))(&v214[v216[6]], &v215[v216[6]], v208);
                v214[v216[7]] = v215[v216[7]];
                goto LABEL_15;
              }
              sub_1001338DC((uint64_t)v214, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
            }
            size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
            uint64_t v39 = v214;
            uint64_t v40 = v215;
LABEL_14:
            memcpy(v39, v40, v38);
LABEL_15:
            uint64_t v41 = a3;
            goto LABEL_31;
          }
        }
        else
        {
          uint64_t v211 = *(void *)(v208 - 8);
          if (!v210)
          {
            (*(void (**)(void *, const void *, uint64_t))(v211 + 24))(v206, v207, v208);
            goto LABEL_74;
          }
          (*(void (**)(void *, uint64_t))(v211 + 8))(v206, v208);
        }
        uint64_t v212 = sub_10017DF08(&qword_100E63508);
        memcpy(v206, v207, *(void *)(*(void *)(v212 - 8) + 64));
        goto LABEL_74;
      }
      (*(void (**)(void *, uint64_t))(v190 + 8))(v43, v45);
    }
    uint64_t v191 = sub_10017DF08(&qword_100E749B0);
    memcpy(v43, v44, *(void *)(*(void *)(v191 - 8) + 64));
    goto LABEL_59;
  }
  if (v32)
  {
LABEL_13:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v39 = (void *)v29;
    uint64_t v40 = (const void *)v30;
    goto LABEL_14;
  }
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
  *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  uint64_t v33 = v31[8];
  uint64_t v34 = (void *)(v29 + v33);
  uint64_t v35 = (const void *)(v30 + v33);
  uint64_t v36 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
  {
    uint64_t v37 = sub_10017DF08(&qword_100E749B0);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
  }
  uint64_t v231 = v29;
  v234 = v31;
  uint64_t v48 = v31[9];
  uint64_t v49 = v29 + v48;
  uint64_t v50 = v30 + v48;
  *(unsigned char *)uint64_t v49 = *(unsigned char *)(v30 + v48);
  *(void *)(v49 + 8) = *(void *)(v30 + v48 + 8);
  uint64_t v51 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v52 = v51[6];
  __dst = (void *)(v49 + v52);
  uint64_t v53 = (const void *)(v50 + v52);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v36))
  {
    uint64_t v54 = sub_10017DF08(&qword_100E749B0);
    memcpy(__dst, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(__dst, v53, v36);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v36);
  }
  uint64_t v55 = v51[7];
  uint64_t v56 = (void *)(v49 + v55);
  uint64_t v57 = (void *)(v50 + v55);
  *uint64_t v56 = *v57;
  v56[1] = v57[1];
  *(void *)(v49 + v51[8]) = *(void *)(v50 + v51[8]);
  *(unsigned char *)(v231 + v31[10]) = *(unsigned char *)(v30 + v31[10]);
  uint64_t v58 = v31[11];
  uint64_t v59 = (void *)(v231 + v58);
  uint64_t v60 = (const void *)(v30 + v58);
  uint64_t v61 = type metadata accessor for LocationOfInterest();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
  {
    uint64_t v62 = sub_10017DF08(&qword_100E63508);
    memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
  }
  uint64_t v63 = (uint64_t)v31;
  *(unsigned char *)(v231 + v31[12]) = *(unsigned char *)(v30 + v31[12]);
  *(unsigned char *)(v231 + v31[13]) = *(unsigned char *)(v30 + v31[13]);
  uint64_t v64 = v31[14];
  uint64_t v65 = (unsigned char *)(v231 + v64);
  uint64_t v66 = (unsigned char *)(v30 + v64);
  uint64_t v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
  {
    uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
    memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    *uint64_t v65 = *v66;
    uint64_t v69 = v67[5];
    uint64_t v70 = &v65[v69];
    uint64_t v71 = &v66[v69];
    uint64_t v72 = type metadata accessor for Location();
    uint64_t v73 = v70;
    uint64_t v63 = (uint64_t)v234;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 16))(v73, v71, v72);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v61 - 8) + 16))(&v65[v67[6]], &v66[v67[6]], v61);
    v65[v67[7]] = v66[v67[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
  }
  uint64_t v41 = a3;
  _s7Weather24LocationCompositionStateOwst_0(v231, 0, 1, v63);
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  int v75 = *(void **)(a2 + v74);
  uint64_t v76 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = v75;
  id v77 = v75;

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v78 = v8[19];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  uint64_t v81 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  uint64_t v82 = v8[20];
  uint64_t v83 = (void *)(a1 + v82);
  uint64_t v84 = (const void *)(a2 + v82);
  uint64_t v85 = type metadata accessor for ForegroundEffect();
  LODWORD(v79) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v85);
  int v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85);
  if (v79)
  {
    if (!v86)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  uint64_t v87 = *(void *)(v85 - 8);
  if (v86)
  {
    (*(void (**)(void *, uint64_t))(v87 + 8))(v83, v85);
LABEL_36:
    uint64_t v88 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(v87 + 24))(v83, v84, v85);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v89 = v8[24];
  uint64_t v90 = a1 + v89;
  uint64_t v91 = a2 + v89;
  uint64_t v92 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 24))(v90, v91, v92);
  uint64_t v93 = v41[5];
  uint64_t v94 = a1 + v93;
  uint64_t v95 = a2 + v93;
  uint64_t v96 = *(void *)(a2 + v93);
  uint64_t v97 = *(void *)(a2 + v93 + 8);
  char v98 = *(unsigned char *)(a2 + v93 + 16);
  sub_100190CC4(v96, v97, v98);
  uint64_t v99 = *(void *)v94;
  uint64_t v100 = *(void *)(v94 + 8);
  char v101 = *(unsigned char *)(v94 + 16);
  *(void *)uint64_t v94 = v96;
  *(void *)(v94 + 8) = v97;
  *(unsigned char *)(v94 + 16) = v98;
  sub_100191924(v99, v100, v101);
  *(void *)(v94 + 24) = *(void *)(v95 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v102 = v41[6];
  uint64_t v103 = a1 + v102;
  uint64_t v104 = a2 + v102;
  uint64_t v105 = *(void *)(a2 + v102);
  uint64_t v106 = *(void *)(a2 + v102 + 8);
  char v107 = *(unsigned char *)(a2 + v102 + 16);
  sub_100190CC4(v105, v106, v107);
  uint64_t v108 = *(void *)v103;
  uint64_t v109 = *(void *)(v103 + 8);
  char v110 = *(unsigned char *)(v103 + 16);
  *(void *)uint64_t v103 = v105;
  *(void *)(v103 + 8) = v106;
  *(unsigned char *)(v103 + 16) = v107;
  sub_100191924(v108, v109, v110);
  *(void *)(v103 + 24) = *(void *)(v104 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v111 = v41[7];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  uint64_t v114 = *(void *)(a1 + v111 + 24);
  uint64_t v115 = *(void *)(a2 + v111 + 24);
  if (v114)
  {
    if (v115)
    {
      uint64_t v116 = *(void *)v113;
      uint64_t v117 = *(void *)(v113 + 8);
      char v118 = *(unsigned char *)(v113 + 16);
      sub_100190CC4(*(void *)v113, v117, v118);
      uint64_t v119 = *(void *)v112;
      uint64_t v120 = *(void *)(v112 + 8);
      char v121 = *(unsigned char *)(v112 + 16);
      *(void *)uint64_t v112 = v116;
      *(void *)(v112 + 8) = v117;
      *(unsigned char *)(v112 + 16) = v118;
      sub_100191924(v119, v120, v121);
      *(void *)(v112 + 24) = *(void *)(v113 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10024ADC8(v112);
      long long v125 = *(_OWORD *)(v113 + 16);
      *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
      *(_OWORD *)(v112 + 16) = v125;
    }
  }
  else if (v115)
  {
    uint64_t v122 = *(void *)v113;
    uint64_t v123 = *(void *)(v113 + 8);
    char v124 = *(unsigned char *)(v113 + 16);
    sub_100190CC4(*(void *)v113, v123, v124);
    *(void *)uint64_t v112 = v122;
    *(void *)(v112 + 8) = v123;
    *(unsigned char *)(v112 + 16) = v124;
    *(void *)(v112 + 24) = *(void *)(v113 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v126 = *(_OWORD *)(v113 + 16);
    *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
    *(_OWORD *)(v112 + 16) = v126;
  }
  uint64_t v127 = v41[8];
  uint64_t v128 = a1 + v127;
  uint64_t v129 = a2 + v127;
  uint64_t v130 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 24))(v128, v129, v130);
  if (a1 != a2)
  {
    uint64_t v131 = v41[9];
    uint64_t v132 = a1 + v131;
    uint64_t v133 = a2 + v131;
    sub_100178110(a1 + v131, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v132 = *(void *)v133;
      *(void *)(v132 + 8) = *(void *)(v133 + 8);
      *(unsigned char *)(v132 + 16) = *(unsigned char *)(v133 + 16);
      *(unsigned char *)(v132 + 17) = *(unsigned char *)(v133 + 17);
      *(unsigned char *)(v132 + 18) = *(unsigned char *)(v133 + 18);
      uint64_t v134 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v135 = v132 + v134;
      uint64_t v136 = v133 + v134;
      uint64_t v137 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
    }
    else
    {
      *(void *)uint64_t v132 = *(void *)v133;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v138 = v41[10];
  uint64_t v232 = a2;
  uint64_t v235 = a1;
  uint64_t v139 = a1 + v138;
  uint64_t v140 = v232 + v138;
  uint64_t v141 = *(void *)v140;
  uint64_t v142 = *(void *)(v140 + 8);
  uint64_t v143 = *(void *)(v140 + 16);
  uint64_t v144 = *(void *)(v140 + 24);
  uint64_t v145 = *(void *)(v140 + 32);
  uint64_t v146 = *(void *)(v140 + 40);
  uint64_t v147 = *(void *)(v140 + 48);
  uint64_t v148 = *(void *)(v140 + 56);
  uint64_t v149 = *(void *)(v140 + 64);
  char __dsta = *(unsigned char *)(v140 + 72);
  sub_1001910C8(*(void *)v140, v142, v143, v144, v145, v146, v147, v148, v149, __dsta);
  uint64_t v150 = *(void *)v139;
  uint64_t v151 = *(void *)(v139 + 8);
  uint64_t v152 = *(void *)(v139 + 16);
  uint64_t v153 = *(void *)(v139 + 24);
  uint64_t v154 = *(void *)(v139 + 32);
  uint64_t v155 = *(void *)(v139 + 40);
  uint64_t v156 = *(void *)(v139 + 48);
  uint64_t v157 = *(void *)(v139 + 56);
  uint64_t v158 = *(void *)(v139 + 64);
  char v159 = *(unsigned char *)(v139 + 72);
  *(void *)uint64_t v139 = v141;
  *(void *)(v139 + 8) = v142;
  *(void *)(v139 + 16) = v143;
  *(void *)(v139 + 24) = v144;
  *(void *)(v139 + 32) = v145;
  *(void *)(v139 + 40) = v146;
  *(void *)(v139 + 48) = v147;
  *(void *)(v139 + 56) = v148;
  *(void *)(v139 + 64) = v149;
  *(unsigned char *)(v139 + 72) = __dsta;
  sub_10018CCC4(v150, v151, v152, v153, v154, v155, v156, v157, v158, v159);
  uint64_t v160 = a3[11];
  uint64_t v161 = v235 + v160;
  uint64_t v162 = v232 + v160;
  uint64_t v163 = *(void *)v162;
  LOBYTE(v142) = *(unsigned char *)(v162 + 8);
  sub_100195B7C(*(void *)v162, v142);
  uint64_t v164 = *(void *)v161;
  char v165 = *(unsigned char *)(v161 + 8);
  *(void *)uint64_t v161 = v163;
  *(unsigned char *)(v161 + 8) = v142;
  sub_10018F6D8(v164, v165);
  uint64_t v166 = a3[12];
  uint64_t v167 = v235 + v166;
  uint64_t v168 = v232 + v166;
  uint64_t v169 = *(void *)v168;
  uint64_t v170 = *(void *)(v168 + 8);
  uint64_t v171 = *(void *)(v168 + 16);
  uint64_t v172 = *(void *)(v168 + 24);
  LOBYTE(v145) = *(unsigned char *)(v168 + 32);
  sub_100190CD4(*(void *)v168, v170, v171, v172, v145);
  uint64_t v173 = *(void *)v167;
  uint64_t v174 = *(void *)(v167 + 8);
  uint64_t v175 = *(void *)(v167 + 16);
  uint64_t v176 = *(void *)(v167 + 24);
  char v177 = *(unsigned char *)(v167 + 32);
  *(void *)uint64_t v167 = v169;
  *(void *)(v167 + 8) = v170;
  *(void *)(v167 + 16) = v171;
  *(void *)(v167 + 24) = v172;
  *(unsigned char *)(v167 + 32) = v145;
  sub_100191934(v173, v174, v175, v176, v177);
  if (v235 != v232)
  {
    uint64_t v178 = a3[13];
    uint64_t v179 = (void *)(v235 + v178);
    uint64_t v180 = (void *)(v232 + v178);
    sub_100178110(v235 + v178, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v181 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v181 - 8) + 16))(v179, v180, v181);
    }
    else
    {
      *uint64_t v179 = *v180;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v182 = a3[14];
  uint64_t v183 = v235 + v182;
  uint64_t v184 = v232 + v182;
  uint64_t v185 = *(void *)v184;
  char v186 = *(unsigned char *)(v184 + 8);
  sub_100195B7C(*(void *)v184, v186);
  uint64_t v187 = *(void *)v183;
  char v188 = *(unsigned char *)(v183 + 8);
  *(void *)uint64_t v183 = v185;
  *(unsigned char *)(v183 + 8) = v186;
  sub_10018F6D8(v187, v188);
  return v235;
}

uint64_t sub_1000D26B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E63A10);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E8EDA0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E8EDA8);
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E8EDB0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v14 = static HorizontalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v20 = sub_10017DF08(&qword_100E8EDB8);
  sub_1000D2A90(v2, (uint64_t)&v14[*(int *)(v20 + 44)]);
  uint64_t v28 = v2;
  sub_10006DF38(v2, (uint64_t)v8, &qword_100E63A10);
  uint64_t v21 = type metadata accessor for ContentStatusBanner();
  LODWORD(v2) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v21);
  sub_10017DF4C((uint64_t)v8, &qword_100E63A10);
  if (v2 == 1) {
    static AccessibilityChildBehavior.ignore.getter();
  }
  else {
    static AccessibilityChildBehavior.contain.getter();
  }
  unint64_t v22 = sub_10024D5E4((uint64_t)&unk_100E8EDC0);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v26);
  sub_10017DF4C((uint64_t)v14, &qword_100E8EDA0);
  sub_10006DF38(v28, (uint64_t)v6, &qword_100E63A10);
  _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v21);
  sub_10017DF4C((uint64_t)v6, &qword_100E63A10);
  uint64_t v31 = v12;
  unint64_t v32 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v29;
  View.accessibilityHidden(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v23);
  return sub_10024D364((uint64_t)v19, v30, &qword_100E8EDB0);
}

uint64_t sub_1000D2A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v91 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  uint64_t v3 = __chkstk_darwin(v91);
  uint64_t v90 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v89 = (char *)&v70 - v5;
  uint64_t v88 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v88);
  uint64_t v87 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationViewBannerContainer(0);
  uint64_t v8 = v7 - 8;
  uint64_t v80 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v81 = v9;
  int v86 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContentStatusBanner();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContentStatusBannerView();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (_OWORD *)((char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10017DF08(&qword_100E8EDC8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E8EDD0);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10017DF08(&qword_100E8EDD8);
  __chkstk_darwin(v71);
  uint64_t v74 = (uint64_t (*)(uint64_t))((char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = sub_10017DF08(&qword_100E8EDE0);
  __chkstk_darwin(v73);
  uint64_t v26 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10017DF08(&qword_100E8EDE8);
  __chkstk_darwin(v72);
  uint64_t v75 = (uint64_t)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_10017DF08(&qword_100E8EDF0);
  __chkstk_darwin(v93);
  uint64_t v78 = (uint64_t)&v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10017DF08(&qword_100E8EDF8);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v79 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10017DF08(&qword_100E8EE00);
  uint64_t v30 = __chkstk_darwin(v76);
  uint64_t v85 = (uint64_t)&v70 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  id v77 = (char *)&v70 - v33;
  __chkstk_darwin(v32);
  uint64_t v82 = (uint64_t)&v70 - v34;
  sub_1001B1E64((void *)(a1 + *(int *)(v8 + 28)), *(void *)(a1 + *(int *)(v8 + 28) + 24));
  uint64_t v35 = a1;
  sub_1000D41A8();
  sub_1000D36C4((uint64_t)v12, v15);
  sub_100151660();
  double v36 = sub_1000D3F78();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  LOBYTE(a1) = static Edge.Set.all.getter();
  sub_10015176C();
  uint64_t v43 = &v19[*(int *)(v17 + 44)];
  *uint64_t v43 = a1;
  *((double *)v43 + 1) = v36;
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = v40;
  *((void *)v43 + 4) = v42;
  v43[40] = 0;
  sub_100151660();
  LOBYTE(a1) = static Edge.Set.horizontal.getter();
  sub_10006DF38((uint64_t)v19, (uint64_t)v23, &qword_100E8EDC8);
  double v44 = &v23[*(int *)(v21 + 44)];
  *double v44 = a1;
  *(_OWORD *)(v44 + 8) = 0u;
  *(_OWORD *)(v44 + 24) = 0u;
  v44[40] = 1;
  sub_10017DF4C((uint64_t)v19, &qword_100E8EDC8);
  uint64_t v45 = v35 + *(int *)(v8 + 32);
  char v96 = *(unsigned char *)(v45 + 32);
  long long v46 = *(_OWORD *)(v45 + 16);
  v95[0] = *(_OWORD *)v45;
  v95[1] = v46;
  sub_10024D364((uint64_t)v95, (uint64_t)v97, &qword_100E63F98);
  sub_1000FA648((uint64_t)v97, (void (*)(void, void, void, void, void))sub_100190CD4);
  sub_1000FA688();
  sub_1000FA648((uint64_t)v95, (void (*)(void, void, void, void, void))sub_100191934);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  int v47 = v74;
  sub_10006DF38((uint64_t)v23, (uint64_t)v74, &qword_100E8EDD0);
  memcpy((char *)v47 + *(int *)(v71 + 36), __src, 0x70uLL);
  sub_10017DF4C((uint64_t)v23, &qword_100E8EDD0);
  uint64_t v48 = static Alignment.center.getter();
  uint64_t v50 = v49;
  sub_10006DF38((uint64_t)v47, (uint64_t)v26, &qword_100E8EDD8);
  uint64_t v51 = (uint64_t *)&v26[*(int *)(v73 + 36)];
  *uint64_t v51 = v48;
  v51[1] = v50;
  sub_10017DF4C((uint64_t)v47, &qword_100E8EDD8);
  LOBYTE(v48) = static Edge.Set.top.getter();
  uint64_t v52 = v75;
  sub_10006DF38((uint64_t)v26, v75, &qword_100E8EDE0);
  *(unsigned char *)(v52 + *(int *)(v72 + 36)) = v48;
  sub_10017DF4C((uint64_t)v26, &qword_100E8EDE0);
  uint64_t v73 = static Alignment.center.getter();
  uint64_t v72 = v53;
  uint64_t v74 = type metadata accessor for LocationViewBannerContainer;
  sub_10015176C();
  uint64_t v54 = v35;
  uint64_t v55 = swift_allocObject();
  sub_1001516CC();
  uint64_t v56 = v78;
  sub_10006DF38(v52, v78, &qword_100E8EDE8);
  uint64_t v57 = (uint64_t (**)(uint64_t))(v56 + *(int *)(v93 + 36));
  *uint64_t v57 = sub_100213EBC;
  v57[1] = (uint64_t (*)(uint64_t))v55;
  uint64_t v58 = v72;
  v57[2] = (uint64_t (*)(uint64_t))v73;
  v57[3] = (uint64_t (*)(uint64_t))v58;
  sub_10017DF4C(v52, &qword_100E8EDE8);
  uint64_t v59 = v87;
  sub_10006DF38(v54, v87, &qword_100E63A10);
  sub_10015176C();
  swift_allocObject();
  sub_1001516CC();
  sub_1000D54F4();
  sub_1000D543C();
  uint64_t v60 = v79;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10017DF4C(v59, &qword_100E63A10);
  sub_10017DF4C(v56, &qword_100E8EDF0);
  uint64_t v61 = (uint64_t)v77;
  uint64_t v62 = &v77[*(int *)(v76 + 36)];
  *(void *)uint64_t v62 = swift_getKeyPath();
  uint64_t v63 = type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  *((void *)v62 + 2) = 0;
  *((void *)v62 + 3) = 0;
  *((void *)v62 + 1) = 0;
  v62[32] = 0;
  uint64_t v64 = (uint64_t *)&v62[*(int *)(v63 + 20)];
  *uint64_t v64 = swift_getKeyPath();
  sub_10017DF08(&qword_100EAA740);
  swift_storeEnumTagMultiPayload();
  if (qword_100E62548 != -1) {
    swift_once();
  }
  sub_1002102B0(v91, (uint64_t)qword_100E8DEB0);
  sub_10015176C();
  sub_10015176C();
  State.init(wrappedValue:)();
  sub_100151660();
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v61, v60, v84);
  uint64_t v65 = v82;
  sub_10024D364(v61, v82, &qword_100E8EE00);
  uint64_t v66 = v85;
  sub_10006DF38(v65, v85, &qword_100E8EE00);
  uint64_t v67 = v92;
  sub_10006DF38(v66, v92, &qword_100E8EE00);
  uint64_t v68 = v67 + *(int *)(sub_10017DF08(&qword_100E8EE68) + 48);
  *(void *)uint64_t v68 = 0;
  *(unsigned char *)(v68 + 8) = 1;
  sub_10017DF4C(v65, &qword_100E8EE00);
  return sub_10017DF4C(v66, &qword_100E8EE00);
}

double sub_1000D36C4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v11 - v8;
  sub_1000D37D4(a1, (uint64_t)v11 - v8);
  sub_1000D37D4((uint64_t)v9, (uint64_t)v7);
  if (qword_100E62300 != -1) {
    swift_once();
  }
  sub_1000D3894((uint64_t)v7, (uint64_t)(id)qword_100E775B0, v11);
  sub_1000D3838((uint64_t)v9);
  return sub_1000D4350(v11, a2);
}

uint64_t sub_1000D37D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D3838(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentStatusBanner();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000D3894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = &type metadata for FoundationContentStatusBannerLastUpdatedFormatter;
  uint64_t v56 = &off_100E16DF8;
  v54[0] = a2;
  uint64_t v14 = *(void *)(a1 + 8);
  unint64_t v13 = *(void *)(a1 + 16);
  uint64_t v15 = *(int *)(type metadata accessor for ContentStatusBanner() + 24);
  uint64_t v52 = (unsigned char *)a1;
  sub_1001C7278(a1 + v15, (uint64_t)v8);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  unint64_t v53 = v13;
  if (v16 == 1)
  {
    sub_1000D54E0(v14, v13);
    sub_1001E7540((uint64_t)v8);
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = v52;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t v20 = (void *)*sub_1001B1E64(v54, (uint64_t)v55);
    uint64_t v51 = v14;
    sub_1000D54E0(v14, v13);
    uint64_t v21 = sub_1000D3E38((uint64_t)v12, v20);
    unint64_t v22 = v13;
    uint64_t v24 = v23;
    id v25 = [self mainBundle];
    if (v22)
    {
      unint64_t v26 = 0xD000000000000010;
      unint64_t v27 = 0xD000000000000170;
      unint64_t v49 = 0x8000000100CBF1E0;
      unint64_t v28 = 0x8000000100CBF1C0;
    }
    else
    {
      unint64_t v27 = 0xD00000000000016DLL;
      unint64_t v49 = 0x8000000100CBF360;
      unint64_t v26 = 0x6C6E6F207473614CLL;
      unint64_t v28 = 0xEF4025203A656E69;
    }
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v26, (Swift::String_optional)0, (NSBundle)v25, v29, *(Swift::String *)&v27);
    uint64_t v19 = v52;

    sub_10017DF08(&qword_100E64020);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_100C251B0;
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = sub_10012B7C0();
    *(void *)(v30 + 32) = v21;
    *(void *)(v30 + 40) = v24;
    uint64_t v17 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v18 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v14 = v51;
  }
  switch(*v19)
  {
    case 1:
      id v32 = [self mainBundle];
      v35._uint64_t countAndFlagsBits = 0xD000000000000016;
      v57._uint64_t countAndFlagsBits = 0xD000000000000057;
      v57._object = (void *)0x8000000100CBF110;
      v35._object = (void *)0x8000000100CB8820;
      v36._uint64_t countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      Swift::String v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v32, v36, v57);
      uint64_t countAndFlagsBits = v37._countAndFlagsBits;
      object = v37._object;
      unint64_t v40 = 0xEA00000000006873;
      uint64_t v41 = 0x616C732E69666977;
      goto LABEL_17;
    case 2:
      id v32 = [self mainBundle];
      unint64_t v42 = 0xD000000000000014;
      unint64_t v33 = 0xD000000000000046;
      unint64_t v50 = 0x8000000100CBF0C0;
      uint64_t v43 = "Airplane Mode is on.";
      goto LABEL_13;
    case 3:
      id v32 = [self mainBundle];
      unint64_t v33 = 0xD000000000000058;
      unint64_t v50 = 0x8000000100CBF060;
      unint64_t v42 = 0xE2676E6964616F4CLL;
      unint64_t v44 = 0xAA0000000000A680;
      goto LABEL_16;
    case 4:
      id v32 = [self mainBundle];
      unint64_t v42 = 0xD00000000000001CLL;
      unint64_t v33 = 0xD00000000000008FLL;
      unint64_t v50 = 0x8000000100CBEFD0;
      uint64_t v43 = "Location may be approximate.";
LABEL_13:
      unint64_t v44 = (unint64_t)(v43 - 32) | 0x8000000000000000;
      goto LABEL_16;
    case 5:
      id v32 = [self mainBundle];
      unint64_t v33 = 0xD00000000000008CLL;
      uint64_t v34 = "Description for the application's state when the \"Current Location\" card is displaying the forecast for a "
            "location the user is no longer at.";
      goto LABEL_15;
    default:
      id v32 = [self mainBundle];
      unint64_t v33 = 0xD00000000000004BLL;
      uint64_t v34 = "Description for the application's state when Weather data is not available.";
LABEL_15:
      unint64_t v50 = (unint64_t)(v34 - 32) | 0x8000000000000000;
      unint64_t v44 = 0x8000000100CB5170;
      unint64_t v42 = 0xD000000000000013;
LABEL_16:
      v45._uint64_t countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      Swift::String v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v42, (Swift::String_optional)0, (NSBundle)v32, v45, *(Swift::String *)&v33);
      uint64_t countAndFlagsBits = v46._countAndFlagsBits;
      object = v46._object;
      uint64_t v41 = 0;
      unint64_t v40 = 0;
LABEL_17:

      sub_1000D3838((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v54);
      *a3 = countAndFlagsBits;
      a3[1] = (uint64_t)object;
      a3[2] = v41;
      a3[3] = v40;
      a3[4] = v17;
      a3[5] = v18;
      unint64_t v48 = v53;
      a3[6] = v14;
      a3[7] = v48;
      return result;
  }
}

uint64_t sub_1000D3E38(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  char v7 = Calendar.isDateInToday(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  [a2 setDateStyle:(v7 & 1) == 0];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v9 = [a2 stringFromDate:isa];

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v10;
}

double sub_1000D3F78()
{
  uint64_t v1 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = v0 + *(int *)(type metadata accessor for LocationViewBannerContainer(0) + 24);
  char v9 = *(unsigned char *)(v2 + 32);
  long long v3 = *(_OWORD *)(v2 + 16);
  v8[0] = *(_OWORD *)v2;
  v8[1] = v3;
  sub_10024D364((uint64_t)v8, (uint64_t)v10, &qword_100E63F98);
  sub_1000FA648((uint64_t)v10, (void (*)(void, void, void, void, void))sub_100190CD4);
  sub_1000FA688();
  double v5 = v4;
  sub_1000FA648((uint64_t)v8, (void (*)(void, void, void, void, void))sub_100191934);
  sub_1001EFFBC();
  double v6 = sub_1000D4144();
  sub_100151660();
  sub_1001EFFBC();
  sub_1000D40E0();
  sub_100151660();
  return v5 + v6;
}

double sub_1000D40E0()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  double result = 10.0;
  if (v1 == (id)1) {
    return 14.0;
  }
  return result;
}

double sub_1000D4144()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  double result = 2.0;
  if (v1 == (id)1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1000D41A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LocationViewBannerContainer(0);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v3 - 8);
  double v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(v1, (uint64_t)v5, &qword_100E63A10);
  sub_10015176C();
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    sub_10017DF08(&qword_100E8EAB0);
    State.wrappedValue.getter();
    sub_100151660();
    return sub_10017DF4C((uint64_t)v5, &qword_100E63A10);
  }
  else
  {
    sub_100151660();
    return sub_1001516CC();
  }
}

double sub_1000D4350@<D0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  long long v8 = a1[1];
  *a2 = *a1;
  a2[1] = v8;
  long long v9 = a1[3];
  a2[2] = a1[2];
  a2[3] = v9;
  uint64_t v10 = type metadata accessor for ContentStatusBannerView();
  uint64_t v11 = (uint64_t *)((char *)a2 + *(int *)(v10 + 20));
  uint64_t *v11 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (char *)a2 + *(int *)(v10 + 24);
  uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
  _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v13);
  sub_1000D448C(0, 0, v7, (uint64_t)v18);
  State.init(wrappedValue:)();
  char v14 = v21;
  uint64_t v15 = v22;
  double result = *(double *)&v19;
  long long v17 = v20;
  *(_OWORD *)uint64_t v12 = v19;
  *((_OWORD *)v12 + 1) = v17;
  v12[32] = v14;
  *((void *)v12 + 5) = v15;
  return result;
}

__n128 initializeWithTake for LocationHeaderSecondaryLabel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1000D448C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1000D4CEC(a1, a2, a3);
  long long v9 = self;
  swift_retain();
  id v10 = [v9 labelColor];
  uint64_t v11 = Color.init(uiColor:)();
  uint64_t v12 = sub_1000D50A0(a1, a2, a3);
  uint64_t v13 = sub_1000D48F8(a1, a2, a3);
  BOOL v14 = sub_1000D4588(a1, a2, a3);
  sub_1001EB5EC(a1, a2);
  swift_release();
  uint64_t result = sub_1001781AC(a3, &qword_100E65ED8);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v11;
  *(void *)(a4 + 16) = v12;
  *(void *)(a4 + 24) = v13;
  *(unsigned char *)(a4 + 32) = v14;
  return result;
}

BOOL sub_1000D4588(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)&v22 - v16;
  if (a2 < 2) {
    return 0;
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))((char *)&v22 - v16, enum case for UserInterfaceSizeClass.compact(_:), v5);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v5);
  uint64_t v18 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_10006DF38(a3, (uint64_t)v11, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v17, v18, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5) == 1)
  {
    sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) == 1)
    {
      sub_1001781AC((uint64_t)v11, &qword_100E65ED8);
      return 1;
    }
    goto LABEL_7;
  }
  sub_10006DF38((uint64_t)v11, (uint64_t)v15, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) == 1)
  {
    sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
LABEL_7:
    sub_1001781AC((uint64_t)v11, &qword_100E662F0);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v18, v5);
  sub_1000D8C08(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  long long v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v8, v5);
  sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
  v20(v15, v5);
  sub_1001781AC((uint64_t)v11, &qword_100E65ED8);
  return (v19 & 1) != 0;
}

uint64_t sub_1000D48F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)&v25 - v16;
  if (a2)
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))((char *)&v25 - v16, enum case for UserInterfaceSizeClass.compact(_:), v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v5);
    uint64_t v18 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_10006DF38(a3, (uint64_t)v11, &qword_100E65ED8);
    sub_10006DF38((uint64_t)v17, v18, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5) == 1)
    {
      sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) == 1)
      {
        sub_1001781AC((uint64_t)v11, &qword_100E65ED8);
LABEL_12:
        id v23 = [self secondaryLabelColor];
LABEL_14:
        id v24 = v23;
        return Color.init(uiColor:)();
      }
    }
    else
    {
      sub_10006DF38((uint64_t)v11, (uint64_t)v15, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v18, v5);
        sub_1000D8C08(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
        v22(v8, v5);
        sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
        v22(v15, v5);
        sub_1001781AC((uint64_t)v11, &qword_100E65ED8);
        if (v21) {
          goto LABEL_12;
        }
LABEL_13:
        id v23 = [self labelColor];
        goto LABEL_14;
      }
      sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    }
    sub_1001781AC((uint64_t)v11, &qword_100E662F0);
    goto LABEL_13;
  }
  id v19 = [self labelColor];

  return Color.init(uiColor:)();
}

uint64_t sub_1000D4CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)&v24 - v16;
  if (!a2)
  {
    static Font.body.getter();
    static Font.Weight.semibold.getter();
    uint64_t v19 = Font.weight(_:)();
    swift_release();
    return v19;
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))((char *)&v24 - v16, enum case for UserInterfaceSizeClass.compact(_:), v5);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v5);
  uint64_t v18 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_10006DF38(a3, (uint64_t)v11, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v17, v18, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5) != 1)
  {
    sub_10006DF38((uint64_t)v11, (uint64_t)v15, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v18, v5);
      sub_1000D8C08(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
      v22(v8, v5);
      sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
      v22(v15, v5);
      sub_1001781AC((uint64_t)v11, &qword_100E65ED8);
      if (v21) {
        goto LABEL_10;
      }
LABEL_11:
      static Font.body.getter();
      goto LABEL_12;
    }
    sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
LABEL_8:
    sub_1001781AC((uint64_t)v11, &qword_100E662F0);
    goto LABEL_11;
  }
  sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v11, &qword_100E65ED8);
LABEL_10:
  static Font.caption.getter();
LABEL_12:
  static Font.Weight.medium.getter();
  uint64_t v23 = Font.weight(_:)();
  swift_release();
  return v23;
}

uint64_t sub_1000D50A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v17 = (char *)&v22 - v16;
  if (!a2)
  {
    return static Font.footnote.getter();
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))((char *)&v22 - v16, enum case for UserInterfaceSizeClass.compact(_:), v5);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v5);
  uint64_t v18 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_10006DF38(a3, (uint64_t)v11, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v17, v18, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5) == 1)
  {
    sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) == 1)
    {
      sub_1001781AC((uint64_t)v11, &qword_100E65ED8);
      return static Font.caption.getter();
    }
    goto LABEL_10;
  }
  sub_10006DF38((uint64_t)v11, (uint64_t)v15, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v5) == 1)
  {
    sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
LABEL_10:
    sub_1001781AC((uint64_t)v11, &qword_100E662F0);
    return static Font.footnote.getter();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v18, v5);
  sub_1000D8C08(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  long long v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v8, v5);
  sub_1001781AC((uint64_t)v17, &qword_100E65ED8);
  v20(v15, v5);
  sub_1001781AC((uint64_t)v11, &qword_100E65ED8);
  if (v19) {
    return static Font.caption.getter();
  }
  return static Font.footnote.getter();
}

unint64_t sub_1000D543C()
{
  unint64_t result = qword_100E8EE58;
  if (!qword_100E8EE58)
  {
    sub_10018C6DC(&qword_100E63A10);
    sub_10015180C((uint64_t)&unk_100E8EE60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EE58);
  }
  return result;
}

uint64_t sub_1000D54E0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1000D54F4()
{
  unint64_t result = qword_100E8EE08;
  if (!qword_100E8EE08)
  {
    sub_10018C6DC(&qword_100E8EDF0);
    sub_1001C1C7C((uint64_t)&unk_100E8EE10);
    sub_10024D5E4((uint64_t)&unk_100E8EE48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EE08);
  }
  return result;
}

uint64_t sub_1000D55C0()
{
  uint64_t v4 = sub_1001A4BD0();
  sub_100164920(v4);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = type metadata accessor for Location();
  sub_100164920(v9);
  unint64_t v11 = (v6 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = sub_10019AEE4();
  sub_100164920(v12);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  unint64_t v17 = (v3 + *(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  return sub_1000D56D0(v1, *(void *)(v0 + 16), v0 + v6, v0 + v11, *(void *)(v0 + v2), *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + v3 + 24), v0 + v17, *(unsigned char *)(v0 + v17 + *(void *)(v16 + 64)));
}

uint64_t sub_1000D56D0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t v36 = a8;
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v27 = a5;
  uint64_t v28 = a3;
  HIDWORD(v29) = a11;
  uint64_t v30 = a9;
  uint64_t v31 = a10;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *a1;
  unint64_t v18 = a1[1];
  static os_signpost_type_t.end.getter();
  uint64_t v35 = a2;
  sub_10017DF08(&qword_100E64020);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100C251B0;
  uint64_t v32 = a4;
  uint64_t v20 = Location.name.getter();
  uint64_t v22 = v21;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_10012B7C0();
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v22;
  uint64_t v23 = v27;
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  *uint64_t v16 = v17;
  v16[1] = v18;
  swift_storeEnumTagMultiPayload();
  sub_1000D58E0(v17, v18);
  sub_10015B128((uint64_t)v16);
  sub_1001BC5DC();
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  if (v18 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = v17;
    uint64_t v25 = v18;
  }
  sub_100127E18(v32, v33, v34, v36, v30, v31, BYTE4(v29) & 1, v24, v25, v23, v27, v28, v29, v30, v31, v32, v33, v34, v35,
    v36,
    v37,
    v38);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D58E0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000D58F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  uint64_t v25 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10018C6DC(&qword_100EA1E38);
  uint64_t v27 = v6;
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v26 = sub_10024D5E4((uint64_t)&unk_100EA1E40);
  uint64_t v31 = v6;
  uint64_t v32 = &type metadata for String;
  uint64_t v33 = v7;
  unint64_t v34 = v26;
  uint64_t v35 = &protocol witness table for String;
  uint64_t v8 = type metadata accessor for ForEach();
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  unint64_t v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&KeyPath - v12;
  sub_1000D5DDC(a1);
  sub_1000D5C34(v14);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v31 = v16;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v25, v2, a1);
  unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = *(void *)(a1 + 24);
  *(void *)(v19 + 16) = v7;
  *(void *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v19 + v18, v17, a1);
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v7;
  v21[3] = v20;
  v21[4] = sub_100131108;
  v21[5] = v19;
  ForEach<>.init(_:id:content:)();
  uint64_t v30 = v20;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v11, v8, (uint64_t)v13);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v28 + 8);
  v22(v11, v8);
  sub_100121584((uint64_t)v13, v8, v29);
  return ((uint64_t (*)(char *, uint64_t))v22)(v13, v8);
}

void sub_1000D5C34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = &_swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = (void *)((char *)&_swiftEmptyArrayStorage + 32);
    uint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
    while (1)
    {
      uint64_t v8 = *(v6 - 2);
      uint64_t v7 = *(v6 - 1);
      uint64_t v9 = *v6;
      if (v3)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_100182920();
        if (v11) {
          goto LABEL_28;
        }
        int64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v13 = v12 <= 1 ? 1 : v12;
        sub_10017DF08(&qword_100E6B7A0);
        uint64_t v14 = (void *)swift_allocObject();
        uint64_t v15 = (uint64_t)(j__malloc_size(v14) - 32) / 32;
        v14[2] = v13;
        v14[3] = 2 * v15;
        uint64_t v16 = v14 + 4;
        uint64_t v17 = v2[3] >> 1;
        uint64_t v5 = &v14[4 * v17 + 4];
        uint64_t v3 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
        if (v2[2])
        {
          BOOL v18 = v14 != v2 || v16 >= &v2[4 * v17 + 4];
          if (v18) {
            memmove(v16, v2 + 4, 32 * v17);
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_release();
        uint64_t v2 = v14;
      }
      BOOL v19 = __OFSUB__(v3--, 1);
      if (v19) {
        break;
      }
      v6 += 3;
      *uint64_t v5 = v4;
      v5[1] = v8;
      v5[2] = v7;
      v5[3] = v9;
      v5 += 4;
      if (v1 == ++v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  uint64_t v3 = 0;
LABEL_23:
  sub_1001870D4();
  if (v18)
  {
    unint64_t v21 = v20 >> 1;
    BOOL v19 = __OFSUB__(v21, v3);
    uint64_t v22 = v21 - v3;
    if (!v19)
    {
      v2[2] = v22;
      return;
    }
    goto LABEL_29;
  }
}

void sub_1000D5DDC(uint64_t a1)
{
  uint64_t v2 = *v1;
  v3[1] = *(_OWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_1000D607C((uint64_t)sub_1000D6218, (uint64_t)v3, v2);
}

void *sub_1000D5E44(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v16 = *(void *)(a3 + 16);
  if (!v16) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = a3;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v15 = v4;
  while (1)
  {
    uint64_t v19 = *(void *)(v4 + 8 * v5 + 32);
    swift_bridgeObjectRetain();
    a1(v18, &v19);
    if (v3) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = v18[0];
    if (v18[0])
    {
      uint64_t v8 = v18[1];
      uint64_t v9 = v18[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100183298();
        sub_1000D5FB8();
        uint64_t v6 = v12;
      }
      unint64_t v10 = v6[2];
      if (v10 >= v6[3] >> 1)
      {
        sub_1000D5FB8();
        uint64_t v6 = v13;
      }
      v6[2] = v10 + 1;
      char v11 = &v6[3 * v10];
      v11[4] = v7;
      v11[5] = v8;
      v11[6] = v9;
      uint64_t v4 = v15;
    }
    if (v16 == ++v5)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1000D5FB8()
{
  sub_10018C55C();
  if (v3)
  {
    sub_10017E9A4();
    if (v4 != v5)
    {
      sub_100183F88();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_1001A2E3C();
  if (v2)
  {
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 24);
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_10018A3F8();
    sub_1000D6630(v8, v9, v10);
    sub_1001855E0();
  }
  else
  {
    uint64_t v11 = sub_10019DF5C();
    sub_100012A2C(v11, v12, v13, v14);
  }
}

void sub_1000D607C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(a3 + 48);
    size_t v7 = &_swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v9 = *(v6 - 2);
      uint64_t v8 = *(v6 - 1);
      uint64_t v10 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001826B4();
      char v12 = v11();
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v12)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000D6524(0, v7[2] + 1, 1);
        }
        unint64_t v14 = v7[2];
        unint64_t v13 = v7[3];
        uint64_t v15 = v7;
        if (v14 >= v13 >> 1)
        {
          sub_1000D6524(v13 > 1, v14 + 1, 1);
          uint64_t v15 = v7;
        }
        v15[2] = v14 + 1;
        uint64_t v16 = &v15[3 * v14];
        v16[4] = v9;
        v16[5] = v8;
        v16[6] = v10;
        uint64_t v4 = a3;
        size_t v7 = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 3;
      if (v18 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
  }
}

BOOL sub_1000D6218()
{
  return sub_1000D623C();
}

BOOL sub_1000D623C()
{
  swift_bridgeObjectRetain();
  sub_1000D62AC();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1 != 0;
}

void sub_1000D62AC()
{
  sub_10016314C();
  sub_10018A138();
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v5 = sub_100164920(v4);
  uint64_t v18 = v6;
  __chkstk_darwin(v5);
  uint64_t v17 = (uint64_t)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100152388();
  sub_10018A4E4();
  if (v9)
  {
    uint64_t v16 = v1;
    uint64_t v15 = v2;
    while (*(void *)(v1 + 16))
    {
      unint64_t v10 = sub_10019DBC0();
      sub_10019DD78(v10, v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      sub_1001826B4();
      char v11 = v2();
      if (v0)
      {
        sub_10019E1D8(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      if (v11)
      {
        sub_100183754(v3, v17, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100185790();
          sub_1000D649C();
        }
        sub_10017F6F0();
        if (v12)
        {
          sub_100188C7C();
          sub_1000D649C();
        }
        sub_100183680();
        sub_100183754(v17, v13, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        uint64_t v1 = v16;
        uint64_t v2 = v15;
      }
      else
      {
        sub_10019E1D8(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      }
      sub_10019D364();
      if (v14) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    sub_100191138();
    sub_100163164();
  }
}

void sub_1000D649C()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

uint64_t sub_1000D6500(uint64_t a1)
{
  return sub_1001BE900(a1, *(void *)(v1 + 32)) & 1;
}

void sub_1000D6524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000D6574(a1, a2, a3, *v3, (uint64_t)&unk_100E6CCC8, (void (*)(uint64_t))sub_1000D6630, (void (*)(uint64_t))sub_100215B3C);
  *uint64_t v3 = v4;
}

void sub_1000D6574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10018B130();
  if (v12)
  {
    sub_10017E9A4();
    if (v13 != v14)
    {
      sub_100183F88();
      if (v13)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_100185C7C();
  if (v9)
  {
    sub_10017DF08(v15);
    uint64_t v16 = (void *)sub_10016EEEC();
    sub_100163FA0(v16);
  }
  uint64_t v17 = sub_100176DD8();
  if (v8)
  {
    a6(v17);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    a7(v17);
  }
  swift_release();
}

char *sub_1000D6630(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

uint64_t sub_1000D66CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)v1;
  uint64_t v5 = sub_10017DF08(&qword_100E7CF68);
  __chkstk_darwin(v5 - 8);
  sub_10012B938();
  uint64_t v6 = sub_10017DF08(&qword_100E7CF70);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  sub_1000D6FB8(v1, (uint64_t)v23);
  uint64_t v11 = swift_allocObject();
  memcpy((void *)(v11 + 16), v23, 0x58uLL);
  uint64_t v12 = sub_10017DF08(&qword_100E7CF78);
  v23[10] = sub_100224A28;
  v23[11] = 0;
  LOBYTE(v23[12]) = 0;
  v23[0] = v12;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_1001262FC((uint64_t)&xmmword_100F51398, (uint64_t)v22, &qword_100E6F2A0);
  if (*(void *)&v22[24])
  {
    sub_1001262E4((long long *)v22, (uint64_t)&v23[3]);
    v23[1] = sub_1000F3E34;
    v23[2] = v11;
    uint64_t v14 = Dictionary.init(dictionaryLiteral:)();
    v23[8] = &_swiftEmptyArrayStorage;
    v23[9] = v14;
    memcpy(v22, v23, sizeof(v22));
    uint64_t v15 = *v3;
    sub_10020D948((uint64_t)(v3 + 1), (uint64_t)v24);
    uint64_t v16 = v3[7];
    v23[13] = v15;
    v24[5] = v16;
    sub_1001262FC((uint64_t)v22, (uint64_t)v23, &qword_100E7CF80);
    swift_retain();
    swift_retain();
    sub_1001781AC((uint64_t)v22, &qword_100E7CF80);
    uint64_t v17 = sub_1000D69E8();
    sub_1000D7250(v17, v18, v3[8], v2);
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)v23, &qword_100E7CF88);
    uint64_t v19 = (uint64_t *)(v10 + *(int *)(v6 + 36));
    sub_10020D948((uint64_t)(v3 + 1), (uint64_t)(v19 + 2));
    uint64_t v20 = v3[7];
    swift_retain();
    swift_retain();
    sub_10017DF08(&qword_100E64B58);
    sub_1001246C8(&qword_100EAA6D0, &qword_100E64B58);
    *uint64_t v19 = ObservedObject.init(wrappedValue:)();
    v19[1] = v21;
    v19[7] = v20;
    sub_10020E72C(v2, v10, &qword_100E7CF68);
    return sub_10020E72C(v10, a1, &qword_100E7CF70);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000D69E8()
{
  uint64_t v3 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100125FF8();
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  sub_100162E88();
  uint64_t v8 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v8 - 8);
  sub_10011C760();
  swift_retain();
  sub_1001362A4();
  swift_release();
  sub_10020E72C(v0, v2, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v3) == 1)
  {
    sub_1001781AC(v2, &qword_100E6DC08);
    sub_10017DF08(&qword_100E7CFB0);
    State.wrappedValue.getter();
    uint64_t v9 = *(void *)(v26 + 16);
    uint64_t v10 = *(void *)(v26 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    if (v10)
    {
      if (qword_100E62798 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_1002102B0(v11, (uint64_t)qword_100F51DE0);
      sub_1001A0928();
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        swift_slowAlloc();
        sub_10017CE4C(7.2225e-34);
        sub_10019FDD8();
        uint64_t v15 = sub_1001A2010();
        sub_10017A3CC(v15);
        swift_bridgeObjectRelease_n();
        uint64_t v16 = "StackDestination: No active location, using last location: %{private,mask.hash}s";
LABEL_17:
        _os_log_impl((void *)&_mh_execute_header, v12, v13, v16, v14, 0x16u);
        swift_arrayDestroy();
        sub_100162EE0();
        sub_100162EE0();

        return v9;
      }
    }
    else
    {
      static CurrentLocation.placeholderIdentifier.getter();
      uint64_t v9 = Location.Identifier.id.getter();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
      if (qword_100E62798 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_1002102B0(v23, (uint64_t)qword_100F51DE0);
      sub_1001A0928();
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        swift_slowAlloc();
        sub_10017CE4C(7.2225e-34);
        sub_10019FDD8();
        uint64_t v24 = sub_1001A2010();
        sub_10017A3CC(v24);
        swift_bridgeObjectRelease_n();
        uint64_t v16 = "StackDestination: No active location, using current location: %{private,mask.hash}s";
        goto LABEL_17;
      }
    }

    swift_bridgeObjectRelease_n();
    return v9;
  }
  uint64_t v9 = Location.Identifier.id.getter();
  uint64_t v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v3);
  if (qword_100E62798 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1002102B0(v19, (uint64_t)qword_100F51DE0);
  sub_1001A0928();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 141558275;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1001A2010();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "StackDestination: Using active location: %{private,mask.hash}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E7CFB0);
  State.wrappedValue.getter();
  *(void *)(v26 + 16) = v9;
  *(void *)(v26 + 24) = v18;
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1000D6F4C@<X0>(void (*a1)(void *__return_ptr)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  a1(v8);
  sub_1000D6FB8((uint64_t)v8, (uint64_t)a4);
  a4[11] = a2;
  a4[12] = a3;
  a4[13] = 0;
  a4[14] = 0;
  swift_retain();
  return sub_1000D70B0((uint64_t)v8);
}

uint64_t sub_1000D6FB8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for MainViewDestinationLocationViewer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000D70B0(uint64_t a1)
{
  return a1;
}

uint64_t destroy for MainViewDestinationLocationViewer(uint64_t a1)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000D7158@<X0>(void *a1@<X8>)
{
  return sub_1000D7160(v1 + 16, a1);
}

uint64_t sub_1000D7160@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  sub_10020D948(a1 + 32, (uint64_t)(a2 + 1));
  uint64_t v5 = *(void *)(a1 + 16);
  *a2 = v4;
  swift_retain();
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  sub_1001246C8(&qword_100E64A08, (uint64_t *)&unk_100EAAA90);
  a2[6] = ObservedObject.init(wrappedValue:)();
  a2[7] = v6;
  a2[8] = v5;
  sub_10017DF08((uint64_t *)&unk_100EAAAA0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  uint64_t result = State.init(wrappedValue:)();
  a2[9] = v9;
  a2[10] = v10;
  return result;
}

uint64_t sub_1000D7250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v28 = a4;
  uint64_t v27 = sub_10017DF08(&qword_100E7CF90);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ZoomNavigationTransition();
  uint64_t v25 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E7CF98);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v24 - v17;
  if (qword_100E62668 != -1) {
    swift_once();
  }
  if (byte_100F51C48 == 1)
  {
    uint64_t v33 = a1;
    uint64_t v34 = a2;
    sub_1000D765C();
    static NavigationTransition<>.zoom<A>(sourceID:in:)();
    uint64_t v19 = sub_10017DF08(&qword_100E7CF88);
    unint64_t v20 = sub_1000D76A8();
    View.navigationTransition<A>(_:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v16, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v18, v12);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v19;
    uint64_t v34 = v9;
    unint64_t v35 = v20;
    uint64_t v36 = &protocol witness table for ZoomNavigationTransition;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  else
  {
    sub_1001262FC(v4, (uint64_t)&v33, &qword_100E7CF88);
    sub_1001262FC((uint64_t)&v33, (uint64_t)v8, &qword_100E7CF88);
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = sub_10017DF08(&qword_100E7CF88);
    unint64_t v23 = sub_1000D76A8();
    uint64_t v29 = v22;
    uint64_t v30 = v9;
    unint64_t v31 = v23;
    uint64_t v32 = &protocol witness table for ZoomNavigationTransition;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_1001781AC((uint64_t)&v33, &qword_100E7CF88);
  }
}

unint64_t sub_1000D765C()
{
  unint64_t result = qword_100E798E8;
  if (!qword_100E798E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E798E8);
  }
  return result;
}

unint64_t sub_1000D76A8()
{
  unint64_t result = qword_100E7CFA0;
  if (!qword_100E7CFA0)
  {
    sub_10018C6DC(&qword_100E7CF88);
    sub_1001246C8((unint64_t *)&unk_100EAA9F0, &qword_100E7CF80);
    sub_1002178F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7CFA0);
  }
  return result;
}

uint64_t sub_1000D7748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v21[1] = a1;
  uint64_t v3 = type metadata accessor for ContentStatusBannerView();
  v21[0] = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v21[0] + 64);
  __chkstk_darwin(v3);
  sub_10017DF08(&qword_100E65ED8);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10017DF08(&qword_100E9C600);
  __chkstk_darwin(v9 - 8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  sub_10017DF08(&qword_100E9C608);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  *(void *)uint64_t v12 = static HorizontalAlignment.center.getter();
  *(void *)(v12 + 8) = 0;
  *(unsigned char *)(v12 + 16) = 0;
  uint64_t v17 = sub_10017DF08(&qword_100E9C610);
  sub_1000D7B8C(v2, v12 + *(int *)(v17 + 44));
  static Alignment.center.getter();
  sub_1000D8B88();
  sub_1001781AC(v12, &qword_100E9C600);
  sub_10019B2FC();
  sub_1000D8930((uint64_t)v2, (uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ContentStatusBannerView);
  unint64_t v18 = (*(unsigned __int8 *)(v21[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21[0] + 80);
  uint64_t v19 = swift_allocObject();
  sub_1000D7B28((uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  sub_1000D8D94();
  sub_1000D7A84();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_1001781AC(v8, &qword_100E65ED8);
  return sub_1001781AC(v16, &qword_100E9C608);
}

uint64_t sub_1000D7A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1000D7A84();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_1000D7A84()
{
  unint64_t result = qword_100E65F20;
  if (!qword_100E65F20)
  {
    sub_10018C6DC(&qword_100E65ED8);
    sub_1000D8BC0(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F20);
  }
  return result;
}

uint64_t sub_1000D7B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentStatusBannerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D7B8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v128 = a2;
  uint64_t v3 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v3 - 8);
  uint64_t v108 = (char *)&v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for BlendMode();
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v105 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_10017DF08(&qword_100E63F78);
  uint64_t v6 = __chkstk_darwin(v126);
  uint64_t v104 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v103 = (uint64_t)&v103 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E9C630);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v127 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v125 = (uint64_t)&v103 - v12;
  uint64_t v123 = type metadata accessor for AccessibilityTraits();
  uint64_t v120 = *(void *)(v123 - 8);
  uint64_t v121 = v120;
  __chkstk_darwin(v123);
  uint64_t v122 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v114 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  char v110 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E9C638);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E9C640);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  os_log_type_t v21 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10017DF08(&qword_100E9C648);
  __chkstk_darwin(v111);
  unint64_t v23 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_10017DF08(&qword_100E9C650);
  uint64_t v118 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v109 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_10017DF08(&qword_100E9C658);
  uint64_t v25 = __chkstk_darwin(v119);
  uint64_t v124 = (uint64_t)&v103 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v113 = (char *)&v103 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v115 = (char *)&v103 - v30;
  __chkstk_darwin(v29);
  uint64_t v130 = (uint64_t)&v103 - v31;
  *(void *)uint64_t v17 = static VerticalAlignment.center.getter();
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  uint64_t v32 = (uint64_t)&v17[*(int *)(sub_10017DF08(&qword_100E9C660) + 44)];
  uint64_t v112 = a1;
  sub_1000D8984(a1, v32);
  uint64_t v33 = (char *)a1 + *(int *)(type metadata accessor for ContentStatusBannerView() + 24);
  char v34 = v33[32];
  unint64_t v35 = (char *)*((void *)v33 + 5);
  long long v36 = *((_OWORD *)v33 + 1);
  long long v131 = *(_OWORD *)v33;
  long long v132 = v36;
  char v133 = v34;
  uint64_t v134 = v35;
  uint64_t v37 = sub_10017DF08(&qword_100E9C628);
  State.wrappedValue.getter();
  uint64_t v38 = v135;
  swift_release();
  swift_release();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006DF38((uint64_t)v17, (uint64_t)v21, &qword_100E9C638);
  unint64_t v40 = (uint64_t *)&v21[*(int *)(v19 + 44)];
  *unint64_t v40 = KeyPath;
  v40[1] = v38;
  sub_1001781AC((uint64_t)v17, &qword_100E9C638);
  char v41 = v33[32];
  unint64_t v42 = (char *)*((void *)v33 + 5);
  long long v43 = *((_OWORD *)v33 + 1);
  long long v131 = *(_OWORD *)v33;
  long long v132 = v43;
  char v133 = v41;
  uint64_t v134 = v42;
  uint64_t v129 = v37;
  State.wrappedValue.getter();
  swift_release();
  uint64_t v44 = v136;
  swift_release();
  swift_release();
  uint64_t v45 = swift_getKeyPath();
  sub_10006DF38((uint64_t)v21, (uint64_t)v23, &qword_100E9C640);
  uint64_t v46 = v111;
  int v47 = (uint64_t *)&v23[*(int *)(v111 + 36)];
  *int v47 = v45;
  v47[1] = v44;
  sub_1001781AC((uint64_t)v21, &qword_100E9C640);
  unint64_t v48 = v110;
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v49 = sub_1000D8CF4();
  unint64_t v50 = v109;
  uint64_t v51 = v46;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v48, v116);
  sub_1001781AC((uint64_t)v23, &qword_100E9C648);
  sub_10017DF08((uint64_t *)&unk_100EAAE80);
  uint64_t v52 = v121;
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_100C251B0;
  static AccessibilityTraits.isHeader.getter();
  *(void *)&long long v131 = v53;
  sub_1000D8C08(&qword_100E742F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  sub_10017DF08((uint64_t *)&unk_100EAAE90);
  sub_1001246C8(&qword_100E74300, (uint64_t *)&unk_100EAAE90);
  uint64_t v54 = v122;
  uint64_t v55 = v123;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&long long v131 = v51;
  *((void *)&v131 + 1) = v49;
  swift_getOpaqueTypeConformance2();
  uint64_t v56 = (uint64_t)v113;
  uint64_t v57 = v117;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v55);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v50, v57);
  uint64_t v58 = v112;
  uint64_t v59 = v112[1];
  *(void *)&long long v131 = *v112;
  *((void *)&v131 + 1) = v59;
  sub_10014A85C();
  uint64_t v60 = (uint64_t)v115;
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  sub_1001781AC(v56, &qword_100E9C658);
  sub_10020E72C(v60, v130, &qword_100E9C658);
  uint64_t v61 = v58[5];
  if (v61)
  {
    *(void *)&long long v131 = v58[4];
    *((void *)&v131 + 1) = v61;
    swift_bridgeObjectRetain();
    uint64_t v62 = Text.init<A>(_:)();
    uint64_t v64 = v63;
    uint64_t v65 = *(void *)v33;
    uint64_t v117 = *((void *)v33 + 1);
    char v67 = v66 & 1;
    uint64_t v68 = *((void *)v33 + 3);
    uint64_t v116 = *((void *)v33 + 2);
    uint64_t v123 = v68;
    LODWORD(v122) = v33[32];
    uint64_t v115 = (char *)*((void *)v33 + 5);
    *(void *)&long long v131 = v65;
    *((void *)&v131 + 1) = v117;
    uint64_t v118 = v65;
    *(void *)&long long v132 = v116;
    *((void *)&v132 + 1) = v68;
    char v133 = (char)v122;
    uint64_t v134 = v115;
    State.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v69 = Text.font(_:)();
    uint64_t v71 = v70;
    char v73 = v72;
    uint64_t v114 = v74;
    swift_release();
    char v75 = v73 & 1;
    sub_100191924(v62, v64, v67);
    swift_bridgeObjectRelease();
    uint64_t v76 = v117;
    *(void *)&long long v131 = v65;
    *((void *)&v131 + 1) = v117;
    uint64_t v77 = v116;
    *(void *)&long long v132 = v116;
    *((void *)&v132 + 1) = v123;
    char v133 = (char)v122;
    uint64_t v78 = v115;
    uint64_t v134 = v115;
    State.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v119 = Text.foregroundColor(_:)();
    uint64_t v120 = v79;
    char v81 = v80;
    uint64_t v121 = v82;
    swift_release();
    char v83 = v81 & 1;
    sub_100191924(v69, v71, v75);
    swift_bridgeObjectRelease();
    *(void *)&long long v131 = v118;
    *((void *)&v131 + 1) = v76;
    *(void *)&long long v132 = v77;
    *((void *)&v132 + 1) = v123;
    char v133 = (char)v122;
    uint64_t v134 = v78;
    State.wrappedValue.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v84 = v106;
    uint64_t v85 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    if (!v137) {
      uint64_t v85 = (unsigned int *)&enum case for BlendMode.normal(_:);
    }
    int v86 = v105;
    uint64_t v87 = v107;
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v105, *v85, v107);
    uint64_t v88 = (uint64_t)v108;
    (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v108, v86, v87);
    uint64_t v89 = v126;
    uint64_t v90 = (uint64_t)v104;
    sub_1000D8930(v88, (uint64_t)&v104[*(int *)(v126 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
    uint64_t v91 = v119;
    uint64_t v92 = v120;
    *(void *)uint64_t v90 = v119;
    *(void *)(v90 + 8) = v92;
    *(unsigned char *)(v90 + 16) = v83;
    *(void *)(v90 + 24) = v121;
    sub_100190CC4(v91, v92, v83);
    swift_bridgeObjectRetain();
    sub_1000D8C98(v88);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v86, v87);
    sub_100191924(v91, v92, v83);
    swift_bridgeObjectRelease();
    uint64_t v93 = v103;
    sub_10020E72C(v90, v103, &qword_100E63F78);
    uint64_t v94 = v125;
    sub_10020E72C(v93, v125, &qword_100E63F78);
    uint64_t v95 = 0;
    uint64_t v96 = v89;
  }
  else
  {
    uint64_t v94 = v125;
    uint64_t v96 = v126;
    uint64_t v95 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v94, v95, 1, v96);
  uint64_t v97 = v130;
  uint64_t v98 = v124;
  sub_10006DF38(v130, v124, &qword_100E9C658);
  uint64_t v99 = v127;
  sub_10006DF38(v94, v127, &qword_100E9C630);
  uint64_t v100 = v128;
  sub_10006DF38(v98, v128, &qword_100E9C658);
  uint64_t v101 = sub_10017DF08(&qword_100E9C680);
  sub_10006DF38(v99, v100 + *(int *)(v101 + 48), &qword_100E9C630);
  sub_1001781AC(v94, &qword_100E9C630);
  sub_1001781AC(v97, &qword_100E9C658);
  sub_1001781AC(v99, &qword_100E9C630);
  return sub_1001781AC(v98, &qword_100E9C658);
}

uint64_t initializeWithCopy for ContentStatusBannerViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000D8930(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1000D8984@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E9C688);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v23 - v8;
  if (a1[3])
  {
    swift_bridgeObjectRetain();
    v23[0] = Image.init(systemName:)();
    View.accessibilityHidden(_:)();
    swift_release();
    uint64_t v10 = sub_10017DF08(&qword_100E9C690);
    uint64_t v11 = (uint64_t)v9;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v10 = sub_10017DF08(&qword_100E9C690);
    uint64_t v11 = (uint64_t)v9;
    uint64_t v12 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v11, v12, 1, v10);
  uint64_t v13 = a1[1];
  v23[0] = *a1;
  v23[1] = v13;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_10006DF38((uint64_t)v9, (uint64_t)v7, &qword_100E9C688);
  sub_10006DF38((uint64_t)v7, a2, &qword_100E9C688);
  uint64_t v21 = a2 + *(int *)(sub_10017DF08(&qword_100E9C698) + 48);
  *(void *)uint64_t v21 = v14;
  *(void *)(v21 + 8) = v16;
  *(unsigned char *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = v18;
  sub_100190CC4(v14, v16, v20);
  swift_bridgeObjectRetain();
  sub_1001781AC((uint64_t)v9, &qword_100E9C688);
  sub_100191924(v14, v16, v20);
  swift_bridgeObjectRelease();
  return sub_1001781AC((uint64_t)v7, &qword_100E9C688);
}

uint64_t sub_1000D8B88()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_1000D8BC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D8C08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D8C50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D8C98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _BlendModeEffect();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000D8CF4()
{
  unint64_t result = qword_100E9C668;
  if (!qword_100E9C668)
  {
    sub_10018C6DC(&qword_100E9C648);
    sub_1000059F0();
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C668);
  }
  return result;
}

unint64_t sub_1000D8D94()
{
  unint64_t result = qword_100E9C618;
  if (!qword_100E9C618)
  {
    sub_10018C6DC(&qword_100E9C608);
    sub_1001246C8(&qword_100E9C620, &qword_100E9C600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C618);
  }
  return result;
}

uint64_t sub_1000D8E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v21 = a2;
  uint64_t v22 = a1;
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  swift_retain();
  sub_1000D900C();
  swift_release();
  uint64_t v11 = v2[3];
  uint64_t v20 = v2[2];
  sub_10020D948((uint64_t)(v2 + 4), (uint64_t)v23);
  uint64_t v12 = v2[10];
  swift_retain();
  sub_1000D900C();
  swift_release();
  uint64_t v13 = sub_1000D92D0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  if (v15)
  {
    uint64_t v17 = v3[9];
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v13 = 0;
  }
  uint64_t v18 = static Color.black.getter();
  sub_1000D9574((uint64_t)v10, v20, v11, (uint64_t)v23, v12, v17, v13, v15, v21, 0, v18);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
  return ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
}

void sub_1000D900C()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v2 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E64A58);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10016278C();
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (void (**)(void))((char *)&v23 - v11);
  sub_1001D0DE0();
  uint64_t v14 = v1 + *(void *)(v13 + 120);
  sub_100126024();
  sub_10006DF38(v14, (uint64_t)v12, &qword_100E64A58);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10017DF08(&qword_100E64A78);
      type metadata accessor for WeatherConditionBackgroundModel();
      sub_100162E4C();
      uint64_t v16 = sub_100126010();
      v17(v16);
      (*(void (**)(void (**)(void), uint64_t))(v3 + 8))(v12, v2);
    }
    else
    {
      type metadata accessor for WeatherConditionBackgroundModel();
      sub_100162E4C();
      (*(void (**)(uint64_t, void (**)(void)))(v22 + 32))(v0, v12);
    }
  }
  else
  {
    uint64_t v18 = *v12;
    uint64_t v24 = v2;
    char v19 = v12[2];
    v18();
    ((void (*)(char *))v19)(v5);
    swift_release();
    swift_release();
    uint64_t v20 = v9 + *(int *)(sub_10017DF08(&qword_100E64A78) + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v9, v5, v24);
    type metadata accessor for WeatherConditionBackgroundModel();
    sub_100162E4C();
    (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v0);
    swift_storeEnumTagMultiPayload();
    sub_100182350();
    sub_1001DF004(v9, v14, &qword_100E64A58);
    swift_endAccess();
  }
  sub_100162694();
}

uint64_t sub_1000D92D0()
{
  uint64_t v0 = type metadata accessor for Location();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BackgroundAnimationData.Model();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BackgroundAnimationData();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  WeatherConditionBackgroundModel.animationData.getter();
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == enum case for BackgroundAnimationData.none(_:) || v12 != enum case for BackgroundAnimationData.loaded(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    BackgroundAnimationData.Model.location.getter();
    uint64_t v13 = Location.id.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v13;
}

uint64_t sub_1000D9574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v26 = a7;
  uint64_t v25 = a6;
  uint64_t v18 = type metadata accessor for WeatherConditionBackgroundModel();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, a1);
  sub_10020D948(a4, (uint64_t)v28);
  sub_10017DF08(&qword_100E85A30);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  LOBYTE(v24) = a10;
  sub_1000D9728((uint64_t)v20, a2, a3, (uint64_t)v28, a5, v25, v26, a8, v24, a11, v25, v26, v27, v28[0], v28[1], v28[2], v28[3], v28[4], v28[5],
    v28[6],
    v29,
    v30);
  uint64_t v22 = sub_10017DF08(&qword_100E85A38);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a9, v27, v22);
}

void sub_1000D9728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned __int8 a21,uint64_t a22)
{
  sub_100162EA0();
  uint64_t v102 = v22;
  uint64_t v99 = v23;
  uint64_t v100 = v24;
  uint64_t v107 = v25;
  uint64_t v108 = v26;
  uint64_t v94 = v27;
  uint64_t v95 = v28;
  uint64_t v30 = v29;
  uint64_t v109 = a22;
  uint64_t v110 = v31;
  int v98 = a21;
  uint64_t v103 = type metadata accessor for SkyBackgroundGradient();
  sub_100179C0C();
  uint64_t v101 = v32;
  __chkstk_darwin(v33);
  sub_100182438(v34, v91);
  type metadata accessor for AnimatedGradient();
  sub_100179C0C();
  uint64_t v104 = v36;
  uint64_t v105 = v35;
  __chkstk_darwin(v35);
  sub_100166BD4(v37, v91);
  uint64_t v93 = sub_10017DF08(&qword_100EB4848);
  sub_100162E4C();
  __chkstk_darwin(v38);
  sub_10016278C();
  uint64_t v92 = v39 - v40;
  __chkstk_darwin(v41);
  long long v43 = (char *)&v91 - v42;
  uint64_t v91 = sub_10017DF08(&qword_100EAA930);
  sub_100162E4C();
  __chkstk_darwin(v44);
  sub_10016278C();
  uint64_t v47 = v45 - v46;
  __chkstk_darwin(v48);
  unint64_t v50 = (char *)&v91 - v49;
  sub_10017DF08(&qword_100E64A60);
  sub_100162E4C();
  __chkstk_darwin(v51);
  sub_10016278C();
  uint64_t v54 = v52 - v53;
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)&v91 - v56;
  type metadata accessor for LocationViewCollisionOptions();
  sub_1001CA9B8(&qword_100E6D0B8, (void (*)(uint64_t))type metadata accessor for LocationViewCollisionOptions);
  *uint64_t v30 = EnvironmentObject.init()();
  v30[1] = v58;
  uint64_t v59 = (int *)type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v60 = (uint64_t *)((char *)v30 + v59[5]);
  *uint64_t v60 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62D60);
  sub_100184618();
  uint64_t v61 = (uint64_t *)((char *)v30 + v59[6]);
  *uint64_t v61 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  sub_100184618();
  uint64_t v62 = (uint64_t *)((char *)v30 + v59[7]);
  *uint64_t v62 = swift_getKeyPath();
  sub_10017DF08(&qword_100E83C68);
  sub_100184618();
  uint64_t v63 = (char *)v30 + v59[8];
  *(void *)uint64_t v63 = swift_getKeyPath();
  v63[8] = 0;
  uint64_t v64 = (char *)v30 + v59[9];
  *(void *)uint64_t v64 = swift_getKeyPath();
  v64[8] = 0;
  *(uint64_t *)((char *)v30 + v59[15]) = 0;
  uint64_t v106 = type metadata accessor for WeatherConditionBackgroundModel();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 1, 1, v106);
  sub_10006DF38((uint64_t)v57, v54, &qword_100E64A60);
  State.init(wrappedValue:)();
  sub_100178110((uint64_t)v57, &qword_100E64A60);
  uint64_t v65 = type metadata accessor for TargetWindowSizeClass();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 1, 1, v65);
  sub_10006DF38((uint64_t)v50, v47, &qword_100EAA930);
  State.init(wrappedValue:)();
  sub_100178110((uint64_t)v50, &qword_100EAA930);
  uint64_t v66 = type metadata accessor for CollisionViewMetrics();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 1, 1, v66);
  sub_10006DF38((uint64_t)v43, v92, &qword_100EB4848);
  State.init(wrappedValue:)();
  sub_100178110((uint64_t)v43, &qword_100EB4848);
  char v67 = (uint64_t *)((char *)v30 + v59[21]);
  type metadata accessor for WeatherConditionBackgroundModifierState(0);
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 0;
  ObservationRegistrar.init()();
  uint64_t v111 = v68;
  sub_100184E54();
  uint64_t v69 = v113;
  *char v67 = v112;
  v67[1] = v69;
  uint64_t v111 = 0;
  sub_100184E54();
  sub_1001836D0();
  uint64_t v111 = 0;
  sub_100184E54();
  sub_1001836D0();
  uint64_t v70 = (char *)v30 + v59[24];
  *(void *)uint64_t v70 = sub_100225900;
  *((void *)v70 + 1) = 0;
  v70[16] = 0;
  uint64_t v71 = (char *)v30 + v59[25];
  *(void *)uint64_t v71 = swift_getKeyPath();
  v71[8] = 0;
  char v72 = (char *)v30 + v59[27];
  *(void *)char v72 = sub_100225BE4;
  *((void *)v72 + 1) = 0;
  v72[16] = 0;
  char v73 = (uint64_t *)((char *)v30 + v59[28]);
  type metadata accessor for WeatherConditionBackgroundModifierObservableModel();
  uint64_t v74 = swift_allocObject();
  uint64_t v75 = v106;
  _s7Weather24LocationCompositionStateOwst_0(v74 + OBJC_IVAR____TtC7Weather49WeatherConditionBackgroundModifierObservableModel__model, 1, 1, v106);
  ObservationRegistrar.init()();
  uint64_t v111 = v74;
  sub_100184E54();
  uint64_t v76 = v113;
  *char v73 = v112;
  v73[1] = v76;
  *(_DWORD *)((char *)v30 + v59[29]) = 1092616192;
  uint64_t v77 = *(void *)(v75 - 8);
  uint64_t v78 = v94;
  sub_100162808();
  v79();
  char v80 = (uint64_t *)((char *)v30 + v59[11]);
  uint64_t v81 = v95;
  *char v80 = v107;
  v80[1] = v81;
  sub_10020D948(v110, (uint64_t)v30 + v59[12]);
  uint64_t v82 = (uint64_t *)((char *)v30 + v59[26]);
  type metadata accessor for WeatherVFXConditionBackground();
  sub_1001CA9B8(&qword_100E70F28, (void (*)(uint64_t))&type metadata accessor for WeatherVFXConditionBackground);
  swift_unknownObjectRetain();
  swift_retain();
  *uint64_t v82 = ObservedObject.init(wrappedValue:)();
  v82[1] = v83;
  uint64_t v84 = (uint64_t *)((char *)v30 + v59[13]);
  uint64_t v85 = v100;
  *uint64_t v84 = v99;
  v84[1] = v85;
  v84[2] = v102;
  *((unsigned char *)v30 + v59[16]) = v98;
  *(uint64_t *)((char *)v30 + v59[14]) = v109;
  swift_retain();
  uint64_t v86 = v96;
  WeatherConditionBackgroundModel.gradient.getter();
  SkyBackgroundGradient.gradient()();
  uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v101 + 8);
  uint64_t v88 = v103;
  v87(v86, v103);
  WeatherConditionBackgroundModel.gradient.getter();
  SkyBackgroundGradient.gradient()();
  v87(v86, v88);
  uint64_t v89 = v97;
  AnimatedGradient.init(baseGradient:animatedGradient:showAnimatedGradient:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v110);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v78, v106);
  uint64_t v90 = (char *)v30 + v59[17];
  *(void *)&v90[*(int *)(sub_10017DF08(&qword_100EB4850) + 28)] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 32))(v90, v89, v105);
  sub_100162694();
}

uint64_t type metadata accessor for LocationViewCollisionOptions()
{
  uint64_t result = qword_100EABB38;
  if (!qword_100EABB38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for WeatherConditionBackgroundModifierObservableModel()
{
  uint64_t result = qword_100EAE0E0;
  if (!qword_100EAE0E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for WeatherConditionBackgroundModifierState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB45E0);
}

#error "1000DA02C: call analysis failed (funcsize=93)"

uint64_t sub_1000DA0E4()
{
  return sub_1000DA108();
}

uint64_t sub_1000DA108()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1000DA114@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1000DAD34(a1, a2, a3, a4);
}

uint64_t sub_1000DA138@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1000DA114(a1, a2, a3, a4);
}

uint64_t sub_1000DA140@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1007FCD74(a1, a2, a3, a4);
}

uint64_t sub_1000DA168(uint64_t a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E98040);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_28;
  }
  sub_10005F1E4(a1);
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E980E8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v5 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_10010B654, v5, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for NotificationsStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v6 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BF4, v6, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for NotificationsOptInStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BF0, v7, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for SavedLocationsStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v8 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BEC, v8, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for ReverseGeocodingStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v9 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BE8, v9, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for WeatherDataStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v10 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BE4, v10, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for WeatherMapOverlayDataStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v11 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BE0, v11, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for WidgetReloadStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v12 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BDC, v12, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for LocationViewerStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v13 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BD8, v13, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for OpenL2HandlerObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v14 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BD4, v14, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for InteractionDonationStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v15 = result;
  swift_retain();
  sub_1000DAD34(0, (uint64_t)sub_100113BD0, v15, v35);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E90C68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v34)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  sub_1001262E4(&v33, (uint64_t)v35);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  sub_10020D948((uint64_t)v35, (uint64_t)&v33);
  uint64_t v17 = swift_allocObject();
  sub_1001262E4(&v33, v17 + 16);
  sub_1000DAD34(v16, (uint64_t)sub_1001AD80C, v17, &v33);

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v33);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for WeatherConditionBackgroundStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v18 = result;
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  swift_retain();
  sub_1000DAD34(v19, (uint64_t)sub_1001AD808, v18, &v33);

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v33);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for TimeStoreObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v20 = result;
  uint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
  swift_retain();
  sub_1000DAD34(v21, (uint64_t)sub_1001AD804, v20, &v33);

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v33);
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E80790);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v32)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  sub_1001262E4(&v31, (uint64_t)&v33);
  uint64_t v22 = (void *)static OS_dispatch_queue.main.getter();
  sub_10020D948((uint64_t)&v33, (uint64_t)&v31);
  uint64_t v23 = swift_allocObject();
  sub_1001262E4(&v31, v23 + 16);
  sub_1000DAD34(v22, (uint64_t)sub_1001AD7C0, v23, &v31);

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v31);
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E97FE0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v30)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  sub_1001262E4(&v29, (uint64_t)&v31);
  uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
  sub_10020D948((uint64_t)&v31, (uint64_t)&v29);
  uint64_t v25 = swift_allocObject();
  sub_1001262E4(&v29, v25 + 16);
  sub_1000DAD34(v24, (uint64_t)sub_1001AD770, v25, &v29);

  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v29);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Daemon.enablePushLocationViewLoadData.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if (v29 == 1)
  {
    sub_1001B1E64(a2, a2[3]);
    type metadata accessor for VisibleLocationWeatherLoadStoreObserver();
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (!result)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    uint64_t v26 = result;
    uint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
    swift_retain();
    sub_1000DAD34(v27, (uint64_t)sub_1007FD170, v26, &v29);

    swift_release_n();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v29);
  }
  sub_1001B1E64(a2, a2[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v29 == 2)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if ((v29 & 1) == 0)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_26:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v31);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v33);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  }
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for DiagnosticManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v28 = result;
    swift_retain();
    sub_1000DAD34(0, (uint64_t)sub_1007FD168, v28, &v29);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release_n();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v29);
    goto LABEL_26;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1000DAD34@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    if (a1) {
      id v16 = a1;
    }
    else {
      id v16 = *(id *)(v5 + 48);
    }
    uint64_t v17 = sub_10017DF08(&qword_100E98198);
    swift_allocObject();
    uint64_t v18 = sub_1000DAF98(a2, a3, (uint64_t)v16);
    swift_unknownObjectWeakAssign();
    swift_beginAccess();
    id v19 = a1;
    swift_retain();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    sub_1000DAF94(*(void *)((*(void *)(v5 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10));
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    a4[3] = v17;
    uint64_t result = sub_1001246C8(&qword_100E981A0, &qword_100E98198);
    a4[4] = result;
    *a4 = v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DAF68(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  return result;
}

void *sub_1000DAF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  _OWORD v3[2] = a1;
  v3[3] = a2;
  v3[5] = a3;
  return v3;
}

uint64_t sub_1000DAFE0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v7 = a2(0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    a4[3] = v7;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for HourlyForecastComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for AveragesComponentViewModelFactory()
{
  return self;
}

uint64_t sub_1000DB0AC(void *a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v5 = sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(a2);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v7 = sub_100162708();
    a3(v7);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for VisibilityComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for UVIndexComponentViewModelFactory()
{
  return self;
}

uint64_t sub_1000DB178@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCD8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v25)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E8DCE0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v23)
    {
      uint64_t v5 = sub_1000DF0C4((uint64_t)v22, v23);
      __n128 v6 = __chkstk_darwin(v5);
      uint64_t v8 = (void *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for LocationComponentViewModelFactory();
      v21[3] = v11;
      v21[4] = &off_100E174D8;
      v21[0] = v10;
      uint64_t v12 = type metadata accessor for LocationContentViewModelFactory();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v21, v11);
      __n128 v15 = __chkstk_darwin(v14);
      uint64_t v17 = (void *)((char *)&v21[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v18 + 16))(v17, v15);
      uint64_t v19 = *v17;
      v13[10] = v11;
      v13[11] = &off_100E174D8;
      v13[7] = v19;
      sub_1001262E4(&v24, (uint64_t)(v13 + 2));
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
      a2[3] = v12;
      a2[4] = &off_100E38970;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000DB3E4(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCE0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCD8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v26)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCC8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v24)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v22)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE50);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v20)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v16)
  {
    uint64_t v3 = sub_1000DF0C4((uint64_t)v27, v28);
    __n128 v4 = __chkstk_darwin(v3);
    __n128 v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
    uint64_t v8 = sub_1000DF0C4((uint64_t)v23, v24);
    __n128 v9 = __chkstk_darwin(v8);
    uint64_t v11 = (uint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v12 + 16))(v11, v9);
    uint64_t v13 = sub_1000DB75C(*v6, &v25, *v11, &v21, &v19, &v17, &v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    return v13;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1000DB75C(uint64_t a1, long long *a2, uint64_t a3, long long *a4, long long *a5, long long *a6, long long *a7)
{
  uint64_t v31 = type metadata accessor for LocationComponentViewModelFactory();
  uint64_t v32 = &off_100E174D8;
  v30[0] = a1;
  uint64_t v28 = type metadata accessor for LocationContentViewModelFactory();
  long long v29 = &off_100E38970;
  v27[0] = a3;
  type metadata accessor for LocationViewModelFactory();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_1000DF0C4((uint64_t)v30, v31);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (void *)((char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
  uint64_t v20 = sub_1000DF0C4((uint64_t)v27, v28);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v23 = (void *)((char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
  uint64_t v25 = sub_1000DB9DC(*v18, a2, *v23, a4, a5, a6, a7, v14);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v30);
  return v25;
}

uint64_t type metadata accessor for LocationContentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for LocationViewModelFactory()
{
  uint64_t result = qword_100EA93F8;
  if (!qword_100EA93F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DB9DC(uint64_t a1, long long *a2, uint64_t a3, long long *a4, long long *a5, long long *a6, long long *a7, uint64_t a8)
{
  uint64_t v41 = type metadata accessor for LocationComponentViewModelFactory();
  uint64_t v42 = &off_100E174D8;
  *(void *)&long long v40 = a1;
  uint64_t v38 = type metadata accessor for LocationContentViewModelFactory();
  uint64_t v39 = &off_100E38970;
  *(void *)&long long v37 = a3;
  uint64_t v13 = a8 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastWeatherData;
  uint64_t v14 = type metadata accessor for WeatherData(0);
  _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v14);
  uint64_t v15 = a8 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastNewsData;
  uint64_t v16 = type metadata accessor for NewsDataModel();
  _s7Weather24LocationCompositionStateOwst_0(v15, 1, 1, v16);
  uint64_t v17 = a8 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastViewModel;
  uint64_t v18 = type metadata accessor for LocationViewModel();
  _s7Weather24LocationCompositionStateOwst_0(v17, 1, 1, v18);
  uint64_t v19 = a8 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastPreprocessedDataUuid;
  uint64_t v20 = type metadata accessor for UUID();
  _s7Weather24LocationCompositionStateOwst_0(v19, 1, 1, v20);
  uint64_t v21 = OBJC_IVAR____TtC7Weather24LocationViewModelFactory_logger;
  sub_1000DBCCC();
  *(void *)(a8 + v21) = OS_os_log.init(subsystem:category:)();
  uint64_t v22 = (Swift::String *)(a8 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_myLocationString);
  uint64_t v23 = self;
  id v24 = [v23 mainBundle];
  v43._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v43._object = (void *)0x8000000100CAF170;
  v25._uint64_t countAndFlagsBits = 0x7461636F4C20794DLL;
  v25._object = (void *)0xEB000000006E6F69;
  v26._uint64_t countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v43);

  *uint64_t v22 = v27;
  uint64_t v28 = (Swift::String *)(a8 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_myLocationAllCapsString);
  id v29 = [v23 mainBundle];
  v44._uint64_t countAndFlagsBits = 0xD000000000000053;
  v44._object = (void *)0x8000000100CAF1B0;
  v30._uint64_t countAndFlagsBits = 0x5441434F4C20594DLL;
  v30._object = (void *)0xEB000000004E4F49;
  v31._uint64_t countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v44);

  *uint64_t v28 = v32;
  sub_1001262E4(&v40, a8 + 16);
  sub_1001262E4(a2, a8 + 56);
  sub_1001262E4(&v37, a8 + 96);
  sub_1001262E4(a4, a8 + 136);
  sub_1001262E4(a5, a8 + 176);
  sub_1001262E4(a6, a8 + 216);
  sub_1001262E4(a7, a8 + 256);
  return a8;
}

unint64_t sub_1000DBCCC()
{
  unint64_t result = qword_100E62D68;
  if (!qword_100E62D68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E62D68);
  }
  return result;
}

uint64_t sub_1000DBD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10090FB88);
}

void *sub_1000DBD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t *a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, uint64_t *a17, void *a18, uint64_t **a19)
{
  uint64_t v113 = a8;
  uint64_t v123 = a18;
  uint64_t v122 = a17;
  uint64_t v120 = a16;
  uint64_t v119 = a15;
  uint64_t v118 = a14;
  uint64_t v117 = a13;
  uint64_t v116 = a12;
  uint64_t v115 = a11;
  uint64_t v114 = a10;
  uint64_t v112 = a9;
  uint64_t v121 = *a19;
  uint64_t v179 = type metadata accessor for AutomationReducer();
  uint64_t v180 = &off_100E28520;
  v178[0] = a1;
  uint64_t v176 = type metadata accessor for AppLifecycleReducer();
  char v177 = &off_100E35A60;
  v175[0] = a2;
  uint64_t v173 = type metadata accessor for AppConfigurationReducer();
  uint64_t v174 = &off_100E29EC0;
  v172[0] = a3;
  uint64_t v170 = type metadata accessor for EnvironmentReducer();
  uint64_t v171 = &off_100E2BEC0;
  v169[0] = a4;
  uint64_t v168 = &off_100E28918;
  uint64_t v167 = type metadata accessor for LocationsReducer();
  v166[0] = a5;
  char v165 = &off_100E27EC0;
  uint64_t v164 = type metadata accessor for TimeReducer();
  v163[0] = a6;
  uint64_t v162 = &off_100E1D070;
  uint64_t v161 = type metadata accessor for ViewStateReducer();
  v160[0] = a7;
  char v159 = &off_100E35ED8;
  uint64_t v158 = type metadata accessor for ModalViewStateReducer();
  v157[0] = v113;
  uint64_t v156 = &off_100E0D278;
  uint64_t v155 = type metadata accessor for LocationViewStateReducer();
  v154[0] = a9;
  uint64_t v152 = type metadata accessor for WeatherDataReducer();
  uint64_t v153 = &off_100E35EB0;
  v151[0] = a10;
  uint64_t v149 = type metadata accessor for PerformanceTestReducer();
  uint64_t v150 = &off_100E2BC10;
  v148[0] = a11;
  uint64_t v146 = type metadata accessor for DebugReducer();
  uint64_t v147 = &off_100E13358;
  v145[0] = a12;
  uint64_t v143 = type metadata accessor for NotificationsReducer();
  uint64_t v144 = &off_100E13B40;
  v142[0] = a13;
  uint64_t v140 = type metadata accessor for NotificationsOptInReducer();
  uint64_t v141 = &off_100E17628;
  v139[0] = a14;
  uint64_t v137 = type metadata accessor for ConditionDetailViewStateReducer();
  uint64_t v138 = &off_100E383E8;
  v136[0] = a15;
  uint64_t v134 = type metadata accessor for SunriseSunsetDetailViewStateReducer();
  uint64_t v135 = &off_100E2BA68;
  v133[0] = a16;
  uint64_t v131 = type metadata accessor for MoonDetailViewStateReducer();
  long long v132 = &off_100E2B630;
  v130[0] = a17;
  uint64_t v128 = type metadata accessor for AveragesDetailViewStateReducer();
  uint64_t v129 = &off_100E31A58;
  v127[0] = a18;
  uint64_t v125 = v121;
  uint64_t v126 = &off_100E36530;
  v124[0] = a19;
  type metadata accessor for MainReducer();
  uint64_t v123 = (void *)swift_allocObject();
  uint64_t v26 = sub_1000DF0C4((uint64_t)v178, v179);
  __n128 v27 = __chkstk_darwin(v26);
  uint64_t v122 = (uint64_t *)((char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v29 + 16))(v27);
  uint64_t v30 = sub_1000DF0C4((uint64_t)v175, v176);
  __n128 v31 = __chkstk_darwin(v30);
  uint64_t v121 = (uint64_t *)((char *)&v112 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v33 + 16))(v31);
  uint64_t v34 = sub_1000DF0C4((uint64_t)v172, v173);
  __n128 v35 = __chkstk_darwin(v34);
  uint64_t v120 = (uint64_t *)((char *)&v112 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v37 + 16))(v35);
  uint64_t v38 = sub_1000DF0C4((uint64_t)v169, v170);
  __n128 v39 = __chkstk_darwin(v38);
  uint64_t v119 = (uint64_t *)((char *)&v112 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v41 + 16))(v39);
  uint64_t v42 = sub_1000DF0C4((uint64_t)v166, v167);
  __n128 v43 = __chkstk_darwin(v42);
  uint64_t v118 = (uint64_t *)((char *)&v112 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v45 + 16))(v43);
  uint64_t v46 = sub_1000DF0C4((uint64_t)v163, v164);
  __n128 v47 = __chkstk_darwin(v46);
  uint64_t v117 = (uint64_t *)((char *)&v112 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v49 + 16))(v47);
  uint64_t v50 = sub_1000DF0C4((uint64_t)v160, v161);
  __n128 v51 = __chkstk_darwin(v50);
  uint64_t v116 = (uint64_t *)((char *)&v112 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v53 + 16))(v51);
  uint64_t v54 = sub_1000DF0C4((uint64_t)v157, v158);
  __n128 v55 = __chkstk_darwin(v54);
  uint64_t v115 = (uint64_t *)((char *)&v112 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v57 + 16))(v55);
  uint64_t v58 = sub_1000DF0C4((uint64_t)v154, v155);
  __n128 v59 = __chkstk_darwin(v58);
  uint64_t v114 = (uint64_t *)((char *)&v112 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v61 + 16))(v59);
  uint64_t v62 = sub_1000DF0C4((uint64_t)v151, v152);
  __n128 v63 = __chkstk_darwin(v62);
  uint64_t v113 = (uint64_t *)((char *)&v112 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v65 + 16))(v63);
  uint64_t v66 = sub_1000DF0C4((uint64_t)v148, v149);
  __n128 v67 = __chkstk_darwin(v66);
  uint64_t v112 = (uint64_t *)((char *)&v112 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v69 + 16))(v67);
  uint64_t v70 = sub_1000DF0C4((uint64_t)v145, v146);
  __n128 v71 = __chkstk_darwin(v70);
  char v73 = (uint64_t *)((char *)&v112 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v74 + 16))(v73, v71);
  uint64_t v75 = sub_1000DF0C4((uint64_t)v142, v143);
  __n128 v76 = __chkstk_darwin(v75);
  uint64_t v78 = (uint64_t *)((char *)&v112 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v79 + 16))(v78, v76);
  uint64_t v80 = sub_1000DF0C4((uint64_t)v139, v140);
  __n128 v81 = __chkstk_darwin(v80);
  uint64_t v83 = (uint64_t *)((char *)&v112 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v84 + 16))(v83, v81);
  uint64_t v85 = sub_1000DF0C4((uint64_t)v136, v137);
  __n128 v86 = __chkstk_darwin(v85);
  uint64_t v88 = (uint64_t *)((char *)&v112 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v89 + 16))(v88, v86);
  uint64_t v90 = sub_1000DF0C4((uint64_t)v133, v134);
  __n128 v91 = __chkstk_darwin(v90);
  uint64_t v93 = (uint64_t *)((char *)&v112 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v94 + 16))(v93, v91);
  uint64_t v95 = sub_1000DF0C4((uint64_t)v130, v131);
  __n128 v96 = __chkstk_darwin(v95);
  int v98 = (uint64_t *)((char *)&v112 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v99 + 16))(v98, v96);
  uint64_t v100 = sub_1000DF0C4((uint64_t)v127, v128);
  __n128 v101 = __chkstk_darwin(v100);
  uint64_t v103 = (uint64_t *)((char *)&v112 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v104 + 16))(v103, v101);
  uint64_t v105 = sub_1000DF0C4((uint64_t)v124, (uint64_t)v125);
  __n128 v106 = __chkstk_darwin(v105);
  uint64_t v108 = (uint64_t *)((char *)&v112 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v109 + 16))(v108, v106);
  uint64_t v110 = sub_1002241E8(*v122, *v121, *v120, *v119, *v118, *v117, *v116, *v115, *v114, *v113, *v112, *v73, *v78, *v83, *v88, *v93, *v98, *v103, *v108,
           v123);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v124);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v127);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v130);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v133);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v139);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v142);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v145);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v148);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v151);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v154);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v157);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v160);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v163);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v166);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v172);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v175);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v178);
  return v110;
}

uint64_t sub_1000DCCA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD70);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v163)
  {
    __break(1u);
    goto LABEL_23;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDF0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v161)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD78);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v159)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD80);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v157)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD88);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v155)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD90);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v153)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD98);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v151)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDA0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v149)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v147)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDA8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v145)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDB0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v143)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDB8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v141)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDC0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v139)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDC8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v137)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDD0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v135)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDD8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v133)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDE8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v131)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE00);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v129)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v127)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v123 = a2;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE10);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v125)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v162, v163);
    uint64_t v122 = v94;
    __n128 v6 = __chkstk_darwin(v5);
    uint64_t v117 = (void *)((char *)v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v8 + 16))(v6);
    uint64_t v9 = sub_1000DF0C4((uint64_t)v160, v161);
    uint64_t v121 = v94;
    __n128 v10 = __chkstk_darwin(v9);
    uint64_t v115 = (void *)((char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v12 + 16))(v10);
    uint64_t v13 = sub_1000DF0C4((uint64_t)v158, v159);
    uint64_t v120 = v94;
    __n128 v14 = __chkstk_darwin(v13);
    uint64_t v113 = (void *)((char *)v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v16 + 16))(v14);
    uint64_t v17 = sub_1000DF0C4((uint64_t)v156, v157);
    uint64_t v119 = v94;
    __n128 v18 = __chkstk_darwin(v17);
    uint64_t v112 = (void *)((char *)v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v20 + 16))(v18);
    uint64_t v21 = sub_1000DF0C4((uint64_t)v154, v155);
    uint64_t v118 = v94;
    __n128 v22 = __chkstk_darwin(v21);
    uint64_t v110 = (void *)((char *)v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v24 + 16))(v22);
    uint64_t v25 = sub_1000DF0C4((uint64_t)v152, v153);
    uint64_t v116 = v94;
    __n128 v26 = __chkstk_darwin(v25);
    uint64_t v108 = (void *)((char *)v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v28 + 16))(v26);
    uint64_t v29 = sub_1000DF0C4((uint64_t)v150, v151);
    uint64_t v114 = v94;
    __n128 v30 = __chkstk_darwin(v29);
    __n128 v106 = (void *)((char *)v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v32 + 16))(v30);
    uint64_t v33 = sub_1000DF0C4((uint64_t)v148, v149);
    uint64_t v111 = v94;
    __n128 v34 = __chkstk_darwin(v33);
    uint64_t v104 = (uint64_t **)((char *)v94 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v36 + 16))(v34);
    uint64_t v37 = sub_1000DF0C4((uint64_t)v146, v147);
    uint64_t v109 = v94;
    __n128 v38 = __chkstk_darwin(v37);
    uint64_t v102 = (uint64_t **)((char *)v94 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v40 + 16))(v38);
    uint64_t v41 = sub_1000DF0C4((uint64_t)v144, v145);
    uint64_t v107 = v94;
    __n128 v42 = __chkstk_darwin(v41);
    __n128 v101 = (uint64_t **)((char *)v94 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v44 + 16))(v42);
    uint64_t v45 = sub_1000DF0C4((uint64_t)v142, v143);
    uint64_t v105 = v94;
    __n128 v46 = __chkstk_darwin(v45);
    uint64_t v99 = (uint64_t **)((char *)v94 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v48 + 16))(v46);
    uint64_t v49 = sub_1000DF0C4((uint64_t)v140, v141);
    uint64_t v103 = v94;
    __n128 v50 = __chkstk_darwin(v49);
    uint64_t v97 = (uint64_t **)((char *)v94 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v52 + 16))(v50);
    uint64_t v53 = sub_1000DF0C4((uint64_t)v138, v139);
    uint64_t v100 = v94;
    __n128 v54 = __chkstk_darwin(v53);
    uint64_t v95 = (uint64_t **)((char *)v94 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v56 + 16))(v54);
    uint64_t v57 = sub_1000DF0C4((uint64_t)v136, v137);
    int v98 = v94;
    __n128 v58 = __chkstk_darwin(v57);
    uint64_t v60 = (uint64_t **)((char *)v94 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v61 + 16))(v60, v58);
    uint64_t v62 = sub_1000DF0C4((uint64_t)v134, v135);
    __n128 v96 = v94;
    __n128 v63 = __chkstk_darwin(v62);
    uint64_t v65 = (uint64_t **)((char *)v94 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v66 + 16))(v65, v63);
    uint64_t v67 = sub_1000DF0C4((uint64_t)v132, v133);
    v94[3] = v94;
    __n128 v68 = __chkstk_darwin(v67);
    uint64_t v70 = (uint64_t **)((char *)v94 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v71 + 16))(v70, v68);
    uint64_t v72 = sub_1000DF0C4((uint64_t)v130, v131);
    v94[2] = v94;
    __n128 v73 = __chkstk_darwin(v72);
    uint64_t v75 = (uint64_t **)((char *)v94 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v76 + 16))(v75, v73);
    uint64_t v77 = sub_1000DF0C4((uint64_t)v128, v129);
    v94[1] = v94;
    __n128 v78 = __chkstk_darwin(v77);
    uint64_t v80 = (void **)((char *)v94 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(void **, __n128))(v81 + 16))(v80, v78);
    uint64_t v82 = sub_1000DF0C4((uint64_t)v126, v127);
    v94[0] = v94;
    __n128 v83 = __chkstk_darwin(v82);
    uint64_t v85 = (uint64_t **)((char *)v94 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v86 + 16))(v85, v83);
    uint64_t v87 = sub_1000DF0C4((uint64_t)v124, v125);
    __n128 v88 = __chkstk_darwin(v87);
    uint64_t v90 = (uint64_t ***)((char *)v94 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t ***, __n128))(v91 + 16))(v90, v88);
    uint64_t v92 = sub_1000DE070(*v117, *v115, *v113, *v112, *v110, *v108, *v106, *v104, *v102, *v101, *v99, *v97, *v95, *v60, *v65, *v70, *v75, *v80, *v85,
            *v90);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v124);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v126);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v128);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v130);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v132);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v134);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v136);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v138);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v140);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v142);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v144);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v146);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v148);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v150);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v152);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v154);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v156);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v158);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v160);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v162);
    uint64_t result = type metadata accessor for LocationComponentViewModelFactory();
    uint64_t v93 = v123;
    v123[3] = result;
    v93[4] = &off_100E174D8;
    *uint64_t v93 = v92;
    return result;
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1000DE070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t *a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, uint64_t *a17, void *a18, uint64_t *a19, uint64_t **a20)
{
  uint64_t v118 = a8;
  uint64_t v129 = a18;
  uint64_t v126 = a17;
  uint64_t v125 = a16;
  uint64_t v124 = a15;
  uint64_t v123 = a14;
  uint64_t v122 = a13;
  uint64_t v121 = a12;
  uint64_t v120 = a11;
  uint64_t v119 = a10;
  uint64_t v117 = a9;
  uint64_t v128 = a19;
  uint64_t v127 = *a20;
  uint64_t v188 = type metadata accessor for AirQualityComponentViewModelFactory();
  uint64_t v189 = &off_100E38DC8;
  v187[0] = a1;
  uint64_t v185 = type metadata accessor for AveragesComponentViewModelFactory();
  char v186 = &off_100E19EE8;
  v184[0] = a2;
  uint64_t v182 = type metadata accessor for DailyForecastComponentViewModelFactory();
  uint64_t v183 = &off_100E16D38;
  v181[0] = a3;
  uint64_t v179 = type metadata accessor for FeelsLikeComponentViewModelFactory();
  uint64_t v180 = &off_100E35D58;
  v178[0] = a4;
  char v177 = &off_100E1CB90;
  uint64_t v176 = type metadata accessor for HourlyForecastComponentViewModelFactory();
  v175[0] = a5;
  uint64_t v174 = &off_100E10870;
  uint64_t v173 = type metadata accessor for HumidityComponentViewModelFactory();
  v172[0] = a6;
  uint64_t v171 = &off_100E1EF58;
  uint64_t v170 = type metadata accessor for MapComponentViewModelFactory();
  v169[0] = a7;
  uint64_t v168 = &off_100E2C3B8;
  uint64_t v167 = type metadata accessor for MoonComponentViewModelFactory();
  v166[0] = v118;
  char v165 = &off_100E23878;
  uint64_t v164 = type metadata accessor for NewsArticleComponentViewModelFactory();
  v163[0] = a9;
  uint64_t v162 = &off_100E27680;
  uint64_t HourPrecipitationComponentViewModelFactory = type metadata accessor for NextHourPrecipitationComponentViewModelFactory();
  v160[0] = a10;
  uint64_t v158 = type metadata accessor for NotificationsOptInComponentViewModelFactory();
  uint64_t v159 = &off_100E1A498;
  v157[0] = a11;
  uint64_t v155 = type metadata accessor for NotificationsResubscriptionComponentViewModelFactory();
  uint64_t v156 = &off_100E13450;
  v154[0] = a12;
  uint64_t v152 = type metadata accessor for PressureComponentViewModelFactory();
  uint64_t v153 = &off_100E39AB0;
  v151[0] = a13;
  uint64_t v149 = type metadata accessor for PrecipitationTotalComponentViewModelFactory();
  uint64_t v150 = &off_100E2A0C0;
  v148[0] = a14;
  uint64_t v146 = type metadata accessor for ReportWeatherComponentViewModelFactory();
  uint64_t v147 = &off_100E2C2D8;
  v145[0] = a15;
  uint64_t v143 = type metadata accessor for SevereAlertComponentViewModelFactory();
  uint64_t v144 = &off_100E31D58;
  v142[0] = a16;
  uint64_t v140 = type metadata accessor for SunriseSunsetComponentViewModelFactory();
  uint64_t v141 = &off_100E13668;
  v139[0] = a17;
  uint64_t v137 = type metadata accessor for UVIndexComponentViewModelFactory();
  uint64_t v138 = &off_100E2E048;
  v136[0] = a18;
  uint64_t v134 = type metadata accessor for VisibilityComponentViewModelFactory();
  uint64_t v135 = &off_100E2BAA8;
  v133[0] = a19;
  uint64_t v131 = v127;
  long long v132 = &off_100E27900;
  v130[0] = a20;
  type metadata accessor for LocationComponentViewModelFactory();
  uint64_t v129 = (void *)swift_allocObject();
  uint64_t v27 = sub_1000DF0C4((uint64_t)v187, v188);
  __n128 v28 = __chkstk_darwin(v27);
  uint64_t v128 = (uint64_t *)((char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v30 + 16))(v28);
  uint64_t v31 = sub_1000DF0C4((uint64_t)v184, v185);
  __n128 v32 = __chkstk_darwin(v31);
  uint64_t v127 = (uint64_t *)((char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v34 + 16))(v32);
  uint64_t v35 = sub_1000DF0C4((uint64_t)v181, v182);
  __n128 v36 = __chkstk_darwin(v35);
  uint64_t v126 = (uint64_t *)((char *)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v38 + 16))(v36);
  uint64_t v39 = sub_1000DF0C4((uint64_t)v178, v179);
  __n128 v40 = __chkstk_darwin(v39);
  uint64_t v125 = (uint64_t *)((char *)&v117 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v42 + 16))(v40);
  uint64_t v43 = sub_1000DF0C4((uint64_t)v175, v176);
  __n128 v44 = __chkstk_darwin(v43);
  uint64_t v124 = (uint64_t *)((char *)&v117 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v46 + 16))(v44);
  uint64_t v47 = sub_1000DF0C4((uint64_t)v172, v173);
  __n128 v48 = __chkstk_darwin(v47);
  uint64_t v123 = (uint64_t *)((char *)&v117 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v50 + 16))(v48);
  uint64_t v51 = sub_1000DF0C4((uint64_t)v169, v170);
  __n128 v52 = __chkstk_darwin(v51);
  uint64_t v122 = (uint64_t *)((char *)&v117 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v54 + 16))(v52);
  uint64_t v55 = sub_1000DF0C4((uint64_t)v166, v167);
  __n128 v56 = __chkstk_darwin(v55);
  uint64_t v121 = (uint64_t *)((char *)&v117 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v58 + 16))(v56);
  uint64_t v59 = sub_1000DF0C4((uint64_t)v163, v164);
  __n128 v60 = __chkstk_darwin(v59);
  uint64_t v120 = (uint64_t *)((char *)&v117 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v62 + 16))(v60);
  uint64_t v63 = sub_1000DF0C4((uint64_t)v160, HourPrecipitationComponentViewModelFactory);
  __n128 v64 = __chkstk_darwin(v63);
  uint64_t v119 = (uint64_t *)((char *)&v117 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v66 + 16))(v64);
  uint64_t v67 = sub_1000DF0C4((uint64_t)v157, v158);
  __n128 v68 = __chkstk_darwin(v67);
  uint64_t v118 = (uint64_t *)((char *)&v117 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v70 + 16))(v68);
  uint64_t v71 = sub_1000DF0C4((uint64_t)v154, v155);
  __n128 v72 = __chkstk_darwin(v71);
  uint64_t v117 = (uint64_t *)((char *)&v117 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v74 + 16))(v72);
  uint64_t v75 = sub_1000DF0C4((uint64_t)v151, v152);
  __n128 v76 = __chkstk_darwin(v75);
  __n128 v78 = (uint64_t *)((char *)&v117 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v79 + 16))(v78, v76);
  uint64_t v80 = sub_1000DF0C4((uint64_t)v148, v149);
  __n128 v81 = __chkstk_darwin(v80);
  __n128 v83 = (uint64_t *)((char *)&v117 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v84 + 16))(v83, v81);
  uint64_t v85 = sub_1000DF0C4((uint64_t)v145, v146);
  __n128 v86 = __chkstk_darwin(v85);
  __n128 v88 = (uint64_t *)((char *)&v117 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v89 + 16))(v88, v86);
  uint64_t v90 = sub_1000DF0C4((uint64_t)v142, v143);
  __n128 v91 = __chkstk_darwin(v90);
  uint64_t v93 = (uint64_t *)((char *)&v117 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v94 + 16))(v93, v91);
  uint64_t v95 = sub_1000DF0C4((uint64_t)v139, v140);
  __n128 v96 = __chkstk_darwin(v95);
  int v98 = (uint64_t *)((char *)&v117 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v99 + 16))(v98, v96);
  uint64_t v100 = sub_1000DF0C4((uint64_t)v136, v137);
  __n128 v101 = __chkstk_darwin(v100);
  uint64_t v103 = (uint64_t *)((char *)&v117 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v104 + 16))(v103, v101);
  uint64_t v105 = sub_1000DF0C4((uint64_t)v133, v134);
  __n128 v106 = __chkstk_darwin(v105);
  uint64_t v108 = (uint64_t *)((char *)&v117 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v109 + 16))(v108, v106);
  uint64_t v110 = sub_1000DF0C4((uint64_t)v130, (uint64_t)v131);
  __n128 v111 = __chkstk_darwin(v110);
  uint64_t v113 = (uint64_t *)((char *)&v117 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v114 + 16))(v113, v111);
  uint64_t v115 = sub_1000DF1EC(*v128, *v127, *v126, *v125, *v124, *v123, *v122, *v121, *v120, *v119, *v118, *v117, *v78, *v83, *v88, *v93, *v98, *v103, *v108,
           *v113,
           v129);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v130);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v133);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v139);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v142);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v145);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v148);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v151);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v154);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v157);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v160);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v163);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v166);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v172);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v175);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v178);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v181);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v184);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v187);
  return v115;
}

uint64_t sub_1000DF0C4(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t type metadata accessor for LocationComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for PrecipitationTotalComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for DailyForecastComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for SevereAlertComponentViewModelFactory()
{
  uint64_t result = qword_100EA69F0;
  if (!qword_100EA69F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NewsArticleComponentViewModelFactory()
{
  return self;
}

void *sub_1000DF1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  a21[5] = type metadata accessor for AirQualityComponentViewModelFactory();
  a21[6] = &off_100E38DC8;
  a21[2] = a1;
  a21[10] = type metadata accessor for AveragesComponentViewModelFactory();
  a21[11] = &off_100E19EE8;
  a21[7] = a2;
  a21[15] = type metadata accessor for DailyForecastComponentViewModelFactory();
  a21[16] = &off_100E16D38;
  a21[12] = a3;
  a21[20] = type metadata accessor for FeelsLikeComponentViewModelFactory();
  a21[21] = &off_100E35D58;
  a21[17] = a4;
  a21[25] = type metadata accessor for HourlyForecastComponentViewModelFactory();
  a21[26] = &off_100E1CB90;
  a21[22] = a5;
  a21[30] = type metadata accessor for HumidityComponentViewModelFactory();
  a21[31] = &off_100E10870;
  a21[27] = a6;
  a21[35] = type metadata accessor for MapComponentViewModelFactory();
  a21[36] = &off_100E1EF58;
  a21[32] = a7;
  a21[40] = type metadata accessor for MoonComponentViewModelFactory();
  a21[41] = &off_100E2C3B8;
  a21[37] = a8;
  a21[45] = type metadata accessor for NewsArticleComponentViewModelFactory();
  a21[46] = &off_100E23878;
  a21[42] = a9;
  a21[50] = type metadata accessor for NextHourPrecipitationComponentViewModelFactory();
  a21[51] = &off_100E27680;
  a21[47] = a10;
  a21[55] = type metadata accessor for NotificationsOptInComponentViewModelFactory();
  a21[56] = &off_100E1A498;
  a21[52] = a11;
  a21[60] = type metadata accessor for NotificationsResubscriptionComponentViewModelFactory();
  a21[61] = &off_100E13450;
  a21[57] = a12;
  a21[65] = type metadata accessor for PressureComponentViewModelFactory();
  a21[66] = &off_100E39AB0;
  a21[62] = a13;
  a21[70] = type metadata accessor for PrecipitationTotalComponentViewModelFactory();
  a21[71] = &off_100E2A0C0;
  a21[67] = a14;
  a21[75] = type metadata accessor for ReportWeatherComponentViewModelFactory();
  a21[76] = &off_100E2C2D8;
  a21[72] = a15;
  a21[80] = type metadata accessor for SevereAlertComponentViewModelFactory();
  a21[81] = &off_100E31D58;
  a21[77] = a16;
  a21[85] = type metadata accessor for SunriseSunsetComponentViewModelFactory();
  a21[86] = &off_100E13668;
  a21[82] = a17;
  a21[90] = type metadata accessor for UVIndexComponentViewModelFactory();
  a21[91] = &off_100E2E048;
  a21[87] = a18;
  a21[95] = type metadata accessor for VisibilityComponentViewModelFactory();
  a21[96] = &off_100E2BAA8;
  a21[92] = a19;
  a21[100] = type metadata accessor for WindComponentViewModelFactory();
  a21[101] = &off_100E27900;
  a21[97] = a20;
  return a21;
}

uint64_t sub_1000DF4E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E890A8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v9)
  {
    sub_1001B1E64(a1, a1[3]);
    type metadata accessor for NextHourPrecipitationStringBuilder();
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t HourPrecipitationComponentViewModelFactory = type metadata accessor for NextHourPrecipitationComponentViewModelFactory();
      uint64_t v7 = swift_allocObject();
      uint64_t result = sub_1001262E4(&v8, v7 + 16);
      *(void *)(v7 + 56) = v5;
      a2[3] = HourPrecipitationComponentViewModelFactory;
      a2[4] = (uint64_t)&off_100E27680;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for NextHourPrecipitationComponentViewModelFactory()
{
  return self;
}

uint64_t sub_1000DF5F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    uint64_t v4 = type metadata accessor for NotificationsOptInComponentViewModelFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(_OWORD *)(result + 24) = v6;
    *(void *)(result + 40) = v7;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E1A498;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NotificationsOptInComponentViewModelFactory()
{
  return self;
}

uint64_t sub_1000DF6BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetEventCalculator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  SunriseSunsetEventCalculator.init()();
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDE0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v13)
  {
    uint64_t v9 = type metadata accessor for SunriseSunsetComponentViewModelFactory();
    uint64_t v10 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_sunriseSunsetEventCalculator, v7, v4);
    uint64_t result = sub_1001262E4(&v12, v10 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_viewModelFactory);
    a2[3] = v9;
    a2[4] = (uint64_t)&off_100E13668;
    *a2 = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetComponentViewModelFactory()
{
  uint64_t result = qword_100E718B0;
  if (!qword_100E718B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DF86C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE40);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for HumidityComponentViewModelFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_100E10870;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for HumidityComponentViewModelFactory()
{
  return self;
}

uint64_t sub_1000DF91C()
{
  type metadata accessor for AirQualityComponentViewModelFactory();

  return swift_allocObject();
}

uint64_t type metadata accessor for AirQualityComponentViewModelFactory()
{
  return self;
}

uint64_t sub_1000DF974(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E6CF28);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v5)
    {
      type metadata accessor for MoonComponentViewModelFactory();
      uint64_t v3 = swift_allocObject();
      sub_1001262E4(&v6, v3 + 16);
      sub_1001262E4(&v4, v3 + 56);
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MoonComponentViewModelFactory()
{
  return self;
}

uint64_t sub_1000DFA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  long long v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_1000DFB1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v182 = *(void *)(v6 - 8);
  uint64_t v185 = v6;
  uint64_t v178 = *(void (**)(uint64_t, uint64_t))(v182 + 24);
  v178(a1, a2);
  unint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  long long v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *long long v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v179 = type metadata accessor for TimeZone();
  uint64_t v176 = *(void *)(v179 - 8);
  uint64_t v175 = *(void (**)(uint64_t, uint64_t))(v176 + 24);
  v175(v15, v16);
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_10017DF08(&qword_100E65250);
  uint64_t v181 = *(void *)(v20 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 24);
  v21(v18, v19, v20);
  uint64_t v183 = v21;
  v21(a1 + v7[9], a2 + v7[9], v20);
  uint64_t v22 = v7[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v7[11];
  __n128 v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *__n128 v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  *(unsigned char *)(a1 + v7[13]) = *(unsigned char *)(a2 + v7[13]);
  uint64_t v28 = v7[14];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v7[15];
  __n128 v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = type metadata accessor for Precipitation();
  LODWORD(v21) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (v21)
  {
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v36 = *(void *)(v34 - 8);
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v36 + 8))(v32, v34);
LABEL_6:
    uint64_t v37 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v36 + 24))(v32, v33, v34);
LABEL_7:
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v38 = v7[17];
  uint64_t v39 = (void *)(a1 + v38);
  __n128 v40 = (void *)(a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v7[18];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v7[19];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[20]) = *(void *)(a2 + v7[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v183(a1 + a3[5], a2 + a3[5], v20);
  v183(a1 + a3[6], a2 + a3[6], v20);
  uint64_t v47 = a3[7];
  __n128 v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  int v50 = _s7Weather24LocationCompositionStateOwet_0(a1 + v47, 1, v20);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v20);
  uint64_t v180 = v34;
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v181 + 16))(v48, v49, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v181 + 8))(v48, v20);
LABEL_12:
    uint64_t v52 = sub_10017DF08(qword_100E65268);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_13;
  }
  v183((uint64_t)v48, (uint64_t)v49, v20);
LABEL_13:
  uint64_t v53 = a3[8];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  uint64_t v56 = a3[9];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (void *)(a2 + v56);
  *uint64_t v57 = *v58;
  v57[1] = v58[1];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v59 = a3[11];
  __n128 v60 = (void *)(a1 + v59);
  uint64_t v61 = (void *)(a2 + v59);
  uint64_t v62 = v61[1];
  *__n128 v60 = *v61;
  v60[1] = v62;
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v63 = a3[14];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  *(void *)(a1 + v63) = *(void *)(a2 + v63);
  swift_retain();
  swift_release();
  *(void *)(v64 + 8) = *(void *)(v65 + 8);
  swift_retain();
  swift_release();
  uint64_t v66 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v67 = (unsigned char *)(v64 + v66);
  __n128 v68 = (unsigned char *)(v65 + v66);
  int v69 = _s7Weather24LocationCompositionStateOwet_0(v64 + v66, 1, (uint64_t)v7);
  int v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, (uint64_t)v7);
  if (!v69)
  {
    if (v70)
    {
      sub_100142888((uint64_t)v67, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_19;
    }
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v178)(v67, v68, v185);
    uint64_t v94 = v7[5];
    uint64_t v95 = &v67[v94];
    __n128 v96 = &v68[v94];
    *uint64_t v95 = *v96;
    v95[1] = v96[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v97 = v7[6];
    int v98 = &v67[v97];
    uint64_t v99 = &v68[v97];
    *int v98 = *v99;
    v98[1] = v99[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v175)(&v67[v7[7]], &v68[v7[7]], v179);
    v183((uint64_t)&v67[v7[8]], (uint64_t)&v68[v7[8]], v20);
    v183((uint64_t)&v67[v7[9]], (uint64_t)&v68[v7[9]], v20);
    uint64_t v100 = v7[10];
    __n128 v101 = &v67[v100];
    uint64_t v102 = &v68[v100];
    *__n128 v101 = *v102;
    v101[1] = v102[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v103 = v7[11];
    uint64_t v104 = &v67[v103];
    uint64_t v105 = &v68[v103];
    *uint64_t v104 = *v105;
    v104[1] = v105[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v67[v7[12]] = *(void *)&v68[v7[12]];
    v67[v7[13]] = v68[v7[13]];
    uint64_t v106 = v7[14];
    uint64_t v107 = &v67[v106];
    uint64_t v108 = &v68[v106];
    *uint64_t v107 = *v108;
    v107[1] = v108[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v109 = v7[15];
    uint64_t v110 = &v67[v109];
    __n128 v111 = &v68[v109];
    int v112 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v67[v109], 1, v180);
    int v113 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v180);
    if (v112)
    {
      if (!v113)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v110, v111, v180);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v180);
LABEL_30:
        v67[v7[16]] = v68[v7[16]];
        uint64_t v125 = v7[17];
        uint64_t v126 = &v67[v125];
        uint64_t v127 = &v68[v125];
        *uint64_t v126 = *v127;
        v126[1] = v127[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v128 = v7[18];
        uint64_t v129 = &v67[v128];
        uint64_t v130 = &v68[v128];
        *uint64_t v129 = *v130;
        v129[1] = v130[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v131 = v7[19];
        long long v132 = &v67[v131];
        uint64_t v133 = &v68[v131];
        *long long v132 = *v133;
        v132[1] = v133[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v67[v7[20]] = *(void *)&v68[v7[20]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v123 = *(void *)(v180 - 8);
      if (!v113)
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 24))(v110, v111, v180);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v123 + 8))(v110, v180);
    }
    uint64_t v124 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v110, v111, *(void *)(*(void *)(v124 - 8) + 64));
    goto LABEL_30;
  }
  if (v70)
  {
LABEL_19:
    uint64_t v93 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v67, v68, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v182 + 16))(v67, v68, v185);
  uint64_t v71 = v7[5];
  __n128 v72 = &v67[v71];
  uint64_t v73 = &v68[v71];
  *__n128 v72 = *v73;
  v72[1] = v73[1];
  uint64_t v74 = v7[6];
  uint64_t v75 = &v67[v74];
  __n128 v76 = &v68[v74];
  *uint64_t v75 = *v76;
  v75[1] = v76[1];
  uint64_t v77 = v7[7];
  __n128 v78 = &v67[v77];
  uint64_t v184 = &v68[v77];
  char v177 = *(void (**)(char *, char *, uint64_t))(v176 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v177(v78, v184, v179);
  uint64_t v79 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v181 + 16);
  v79(&v67[v7[8]], &v68[v7[8]], v20);
  v79(&v67[v7[9]], &v68[v7[9]], v20);
  uint64_t v80 = v7[10];
  __n128 v81 = &v67[v80];
  uint64_t v82 = &v68[v80];
  *__n128 v81 = *v82;
  v81[1] = v82[1];
  uint64_t v83 = v7[11];
  uint64_t v84 = &v67[v83];
  uint64_t v85 = &v68[v83];
  *uint64_t v84 = *v85;
  v84[1] = v85[1];
  *(void *)&v67[v7[12]] = *(void *)&v68[v7[12]];
  v67[v7[13]] = v68[v7[13]];
  uint64_t v86 = v7[14];
  uint64_t v87 = &v67[v86];
  __n128 v88 = &v68[v86];
  *uint64_t v87 = *v88;
  v87[1] = v88[1];
  uint64_t v89 = v7[15];
  uint64_t v90 = &v67[v89];
  __n128 v91 = &v68[v89];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v180))
  {
    uint64_t v92 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v90, v91, v180);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v180);
  }
  v67[v7[16]] = v68[v7[16]];
  uint64_t v114 = v7[17];
  uint64_t v115 = &v67[v114];
  uint64_t v116 = &v68[v114];
  *uint64_t v115 = *v116;
  v115[1] = v116[1];
  uint64_t v117 = v7[18];
  uint64_t v118 = &v67[v117];
  uint64_t v119 = &v68[v117];
  *uint64_t v118 = *v119;
  v118[1] = v119[1];
  uint64_t v120 = v7[19];
  uint64_t v121 = &v67[v120];
  uint64_t v122 = &v68[v120];
  *uint64_t v121 = *v122;
  v121[1] = v122[1];
  *(void *)&v67[v7[20]] = *(void *)&v68[v7[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, (uint64_t)v7);
LABEL_31:
  uint64_t v134 = a3[15];
  uint64_t v135 = a1 + v134;
  uint64_t v136 = a2 + v134;
  uint64_t v137 = sub_10017DF08(&qword_100E73A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 24))(v135, v136, v137);
  uint64_t v138 = a3[16];
  uint64_t v139 = a1 + v138;
  uint64_t v140 = a2 + v138;
  uint64_t v141 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 24))(v139, v140, v141);
  uint64_t v142 = a3[17];
  uint64_t v143 = a1 + v142;
  uint64_t v144 = a2 + v142;
  uint64_t v145 = *(void *)v144;
  LOBYTE(v140) = *(unsigned char *)(v144 + 8);
  sub_100195B7C(*(void *)v144, v140);
  uint64_t v146 = *(void *)v143;
  char v147 = *(unsigned char *)(v143 + 8);
  *(void *)uint64_t v143 = v145;
  *(unsigned char *)(v143 + 8) = v140;
  sub_10018F6D8(v146, v147);
  uint64_t v148 = a3[18];
  uint64_t v149 = a1 + v148;
  uint64_t v150 = a2 + v148;
  uint64_t v151 = *(void *)v150;
  LOBYTE(v140) = *(unsigned char *)(v150 + 8);
  sub_100195B7C(*(void *)v150, v140);
  uint64_t v152 = *(void *)v149;
  char v153 = *(unsigned char *)(v149 + 8);
  *(void *)uint64_t v149 = v151;
  *(unsigned char *)(v149 + 8) = v140;
  sub_10018F6D8(v152, v153);
  uint64_t v154 = a3[19];
  uint64_t v155 = a1 + v154;
  uint64_t v156 = a2 + v154;
  uint64_t v157 = *(void *)v156;
  LOBYTE(v140) = *(unsigned char *)(v156 + 8);
  sub_100195B7C(*(void *)v156, v140);
  uint64_t v158 = *(void *)v155;
  char v159 = *(unsigned char *)(v155 + 8);
  *(void *)uint64_t v155 = v157;
  *(unsigned char *)(v155 + 8) = v140;
  sub_10018F6D8(v158, v159);
  if (a1 != a2)
  {
    uint64_t v160 = a3[20];
    uint64_t v161 = (void *)(a1 + v160);
    uint64_t v162 = (void *)(a2 + v160);
    sub_100178110(a1 + v160, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v163 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v163 - 8) + 16))(v161, v162, v163);
    }
    else
    {
      *uint64_t v161 = *v162;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v164 = a3[21];
  uint64_t v165 = a1 + v164;
  uint64_t v166 = a2 + v164;
  *(void *)(a1 + v164) = *(void *)(a2 + v164);
  swift_retain();
  swift_release();
  *(void *)(v165 + 8) = *(void *)(v166 + 8);
  swift_retain();
  swift_release();
  uint64_t v167 = a3[22];
  uint64_t v168 = (char *)(a1 + v167);
  uint64_t v169 = (char *)(a2 + v167);
  int v170 = _s7Weather24LocationCompositionStateOwet_0(a1 + v167, 1, v185);
  int v171 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v169, 1, v185);
  if (!v170)
  {
    if (!v171)
    {
      ((void (*)(char *, char *, uint64_t))v178)(v168, v169, v185);
      goto LABEL_42;
    }
    (*(void (**)(char *, uint64_t))(v182 + 8))(v168, v185);
    goto LABEL_41;
  }
  if (v171)
  {
LABEL_41:
    uint64_t v172 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v168, v169, *(void *)(*(void *)(v172 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v168, v169, v185);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v168, 0, 1, v185);
LABEL_42:
  uint64_t v173 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v168[*(int *)(v173 + 28)] = *(void *)&v169[*(int *)(v173 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

BOOL sub_1000E0AF8(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_1000E0C28((uint64_t)v4, (uint64_t)__dst);
}

double sub_1000E0B50()
{
  double v1 = *(double *)(v0 + 40);
  double v2 = *(double *)(v0 + 56) + *(double *)(v0 + 56);
  sub_1000E0E14(v0 + 8, (uint64_t)v12);
  sub_1000E0E14((uint64_t)v12, (uint64_t)v13);
  double v3 = v13[0];
  if (v14 == 1)
  {
    sub_1000E0E84();
    sub_1000E0DAC(v0 + 49, (uint64_t)&v11);
    sub_1000E0DAC((uint64_t)&v11, (uint64_t)&v15);
    sub_1001809F4();
    unsigned __int8 v4 = sub_1000E0EF0();
    double v5 = sub_10017D9F8(v4);
    if (v7) {
      double v3 = v6;
    }
    else {
      double v3 = v5;
    }
  }
  double v8 = sub_10017ED44();
  return v1 * v8 + v2 + v3 * (double)v9;
}

BOOL sub_1000E0C28(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  sub_1000E0E14(a1 + 8, (uint64_t)v16);
  sub_1000E0E14(a2 + 8, (uint64_t)v15);
  sub_1000E0E14((uint64_t)v16, (uint64_t)v17);
  double v5 = *(double *)v17;
  if (v18)
  {
    double v6 = *(double *)&v17[2];
    sub_1000E0E14((uint64_t)v15, (uint64_t)v19);
    if (v20 != 1) {
      return 0;
    }
    sub_1001A01F4();
    BOOL v8 = v8 && v6 == v7;
    if (!v8) {
      return 0;
    }
LABEL_11:
    if (*(double *)(a1 + 40) != *(double *)(a2 + 40) || *(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
      return 0;
    }
    sub_1000E0DAC(a1 + 49, (uint64_t)&v14);
    sub_1000E0DAC(a2 + 49, (uint64_t)&v13);
    sub_1000E0DAC((uint64_t)&v14, (uint64_t)&v21);
    sub_100163C34();
    if (v8)
    {
      sub_1000E0DAC(v10, v11);
      if (v22 != 4) {
        return 0;
      }
    }
    else if (v2 == 3)
    {
      sub_1000E0DAC(v10, v11);
      if (v22 != 3) {
        return 0;
      }
    }
    else
    {
      sub_1000E0DAC(v10, v11);
      if (v22 - 3 < 2 || v2 != v22) {
        return 0;
      }
    }
    if (*(double *)(a1 + 56) == *(double *)(a2 + 56)) {
      return sub_100189644();
    }
    return 0;
  }
  sub_1000E0E14((uint64_t)v15, (uint64_t)v19);
  BOOL result = 0;
  if ((v20 & 1) == 0 && v5 == v19[0]) {
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1000E0DAC(uint64_t a1, uint64_t a2)
{
  return a2;
}

unsigned char *initializeBufferWithCopyOfBuffer for OptInUserStatus(unsigned char *result, unsigned char *a2)
{
  *BOOL result = *a2;
  return result;
}

uint64_t sub_1000E0E14(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 initializeWithTake for NotificationsState(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

double sub_1000E0E84()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 48);
  sub_1000E0DAC(v0 + 49, (uint64_t)&v4);
  sub_1000E0DAC((uint64_t)&v4, (uint64_t)&v5);
  uint64_t v2 = (2 * v5) | 1;
  if (v5 - 3 < 2) {
    uint64_t v2 = 0;
  }
  return *(double *)(v0 + 40) * (double)(v2 + 2 * v1 + 1);
}

uint64_t sub_1000E0EF0()
{
  sub_1000E0DAC(v0 + 49, (uint64_t)&v3);
  sub_1000E0DAC((uint64_t)&v3, (uint64_t)&v4);
  sub_10017AD60();
  switch(v1)
  {
    case 2:
      return 0;
    case 6:
      return 2;
    case 4:
      return 1;
  }
  uint64_t result = sub_1001A11DC();
  __break(1u);
  return result;
}

uint64_t sub_1000E0F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000E0FDC(a1, a2, a3);
}

uint64_t sub_1000E0FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v37 = a1;
  uint64_t v45 = a3;
  swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for _ViewModifier_Content();
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v54 = v6;
  uint64_t v55 = v7;
  uint64_t v56 = WitnessTable;
  uint64_t v57 = v9;
  uint64_t v38 = &opaque type descriptor for <<opaque return type of View.transaction<A>(_:body:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v41 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v11 = (char *)&v34 - v10;
  sub_10018C6DC(&qword_100E80908);
  uint64_t v40 = type metadata accessor for ModifiedContent();
  uint64_t v43 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v35 = (uint64_t)&v34 - v12;
  uint64_t v13 = type metadata accessor for ModifiedContent();
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v39 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v42 = (uint64_t)&v34 - v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v7;
  *(void *)(v17 + 24) = v9;
  long long v18 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v17 + 48) = v18;
  *(_OWORD *)(v17 + 64) = *(_OWORD *)(v4 + 32);
  *(void *)(v17 + 80) = *(void *)(v4 + 48);
  uint64_t v46 = v7;
  uint64_t v47 = v9;
  uint64_t v48 = v4;
  sub_1000E1544(v4);
  uint64_t v19 = swift_checkMetadataState();
  View.transaction<A>(_:body:)();
  swift_release();
  char v53 = sub_1000E1598() & 1;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v7;
  *(void *)(v20 + 24) = v9;
  long long v21 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v20 + 48) = v21;
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v4 + 32);
  *(void *)(v20 + 80) = *(void *)(v4 + 48);
  sub_1000E1544(v4);
  uint64_t v54 = v19;
  uint64_t v55 = v7;
  uint64_t v56 = WitnessTable;
  uint64_t v57 = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v35;
  uint64_t v24 = OpaqueTypeMetadata2;
  sub_1000E163C((uint64_t)&v53, OpaqueTypeMetadata2, (uint64_t)&type metadata for Bool, OpaqueTypeConformance2, v35);
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v24);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v7;
  *(void *)(v25 + 24) = v9;
  long long v26 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v25 + 32) = *(_OWORD *)v4;
  *(_OWORD *)(v25 + 48) = v26;
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v4 + 32);
  *(void *)(v25 + 80) = *(void *)(v4 + 48);
  sub_1000E1544(v4);
  unint64_t v27 = sub_1000E15E8();
  uint64_t v51 = OpaqueTypeConformance2;
  unint64_t v52 = v27;
  uint64_t v28 = v40;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = (uint64_t)v39;
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v23, v28);
  uint64_t v49 = v29;
  int v50 = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable();
  uint64_t v31 = v42;
  sub_100121584(v30, v13, v42);
  __n128 v32 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v32(v30, v13);
  sub_100121584(v31, v13, v45);
  return ((uint64_t (*)(uint64_t, uint64_t))v32)(v31, v13);
}

uint64_t sub_1000E1544(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000E1598()
{
  sub_10017DF08((uint64_t *)&unk_100E749A0);
  Binding.wrappedValue.getter();
  return v1;
}

unint64_t sub_1000E15E8()
{
  unint64_t result = qword_100E80910;
  if (!qword_100E80910)
  {
    sub_10018C6DC(&qword_100E80908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80910);
  }
  return result;
}

uint64_t sub_1000E163C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  v16[2] = a4;
  v16[0] = a5;
  v16[1] = a2;
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for _ValueTransactionModifier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  _ValueTransactionModifier.init(value:transform:)();
  View.modifier<A>(_:)();
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  swift_retain();
  return v14(v13, v10);
}

uint64_t sub_1000E17F0()
{
  sub_100185118();
  sub_10017DF08(&qword_100E640C8);
  sub_100162F30();
  if (*(_DWORD *)(v2 + 84) != v0) {
    return sub_10019FA5C(*(int *)(v1 + 40));
  }
  uint64_t v3 = sub_10019B378();

  return _s7Weather24LocationCompositionStateOwet_0(v3, v4, v5);
}

uint64_t sub_1000E1860@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v3 - 8);
  uint64_t v51 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationViewPage(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  __chkstk_darwin(v8);
  uint64_t v9 = sub_10017DF08(&qword_100E8ED40);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  __chkstk_darwin(v9);
  char v53 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10017DF08(&qword_100E8ED48);
  __chkstk_darwin(v52);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E8ED50);
  uint64_t v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  if (*(unsigned char *)(v1 + *(int *)(v5 + 28)))
  {
    return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v15);
  }
  else
  {
    uint64_t v46 = v17;
    uint64_t v47 = v15;
    uint64_t v48 = (uint64_t)&v41 - v16;
    v57[0] = static HorizontalAlignment.center.getter();
    v57[1] = 0;
    char v58 = 1;
    uint64_t v42 = v59;
    int v50 = type metadata accessor for LocationViewPage;
    sub_10015176C();
    uint64_t v19 = ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + v7;
    uint64_t v45 = a1;
    swift_allocObject();
    uint64_t v49 = v1;
    uint64_t v43 = v12;
    uint64_t v44 = v5;
    sub_1001516CC();
    sub_10015176C();
    uint64_t v20 = swift_allocObject();
    sub_1001516CC();
    sub_1000E390C((void (*)(long long *))sub_1000E3A74, (uint64_t)sub_1000F3FF8, v20, &qword_100E8DCB8, (uint64_t)sub_100224A10, (uint64_t)v42);
    sub_10006DF38((uint64_t)v57, (uint64_t)v56, &qword_100E8ED58);
    v56[121] = 1;
    sub_10017DF4C((uint64_t)v57, &qword_100E8ED58);
    sub_10015176C();
    uint64_t v41 = v19;
    uint64_t v21 = swift_allocObject();
    sub_1001516CC();
    sub_10006DF38((uint64_t)v56, (uint64_t)v57, &qword_100E8ED60);
    v59[13] = sub_10003FD40;
    v59[14] = 0;
    v59[15] = sub_1000375B0;
    v59[16] = v21;
    sub_10017DF4C((uint64_t)v56, &qword_100E8ED60);
    sub_10015176C();
    swift_allocObject();
    sub_1001516CC();
    sub_10017DF08(&qword_100E8ED68);
    sub_1000E4044();
    unsigned __int8 v22 = v53;
    View.onTapGesture(count:perform:)();
    swift_release();
    sub_10017DF4C((uint64_t)v57, &qword_100E8ED68);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = v49;
    sub_10015176C();
    uint64_t v25 = swift_allocObject();
    sub_1001516CC();
    uint64_t v27 = v54;
    uint64_t v26 = v55;
    uint64_t v28 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v43, v22, v55);
    uint64_t v29 = (uint64_t *)(v28 + *(int *)(v52 + 36));
    *uint64_t v29 = KeyPath;
    v29[1] = (uint64_t)sub_10005DA28;
    v29[2] = v25;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v26);
    uint64_t v30 = v24 + *(int *)(v44 + 20);
    uint64_t v31 = sub_1000E21C8();
    uint64_t v32 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
    uint64_t v33 = v51;
    sub_10006DF38(v30 + *(int *)(v32 + 20), v51, &qword_100E63A10);
    uint64_t v34 = type metadata accessor for ContentStatusBanner();
    LOBYTE(v26) = _s7Weather24LocationCompositionStateOwet_0(v33, 1, v34) != 1;
    sub_10017DF4C(v33, &qword_100E63A10);
    uint64_t v35 = v46;
    sub_10006DF38(v28, v46, &qword_100E8ED48);
    uint64_t v36 = v47;
    uint64_t v37 = v35 + *(int *)(v47 + 36);
    *(void *)uint64_t v37 = v31;
    *(unsigned char *)(v37 + 8) = v26;
    sub_10017DF4C(v28, &qword_100E8ED48);
    uint64_t v38 = v48;
    sub_10024D364(v35, v48, &qword_100E8ED50);
    uint64_t v39 = v38;
    uint64_t v40 = v45;
    sub_10024D364(v39, v45, &qword_100E8ED50);
    return _s7Weather24LocationCompositionStateOwst_0(v40, 0, 1, v36);
  }
}

uint64_t sub_1000E1F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v5 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E8E230);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10017DF08(&qword_100E8E238);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E8E240);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  long long v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v10 = static Alignment.center.getter();
  v10[1] = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E8E248);
  sub_1000E2304(a2, a1, (uint64_t)v10 + *(int *)(v20 + 44));
  uint64_t KeyPath = swift_getKeyPath();
  unsigned __int8 v22 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  sub_10017DF08(&qword_100E8E250);
  sub_10015176C();
  *unsigned __int8 v22 = KeyPath;
  sub_10024D364((uint64_t)v10, (uint64_t)v14, &qword_100E8E230);
  uint64_t v23 = sub_1000E21C8();
  uint64_t v24 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  sub_10006DF38(a1 + *(int *)(v24 + 20), (uint64_t)v7, &qword_100E63A10);
  uint64_t v25 = type metadata accessor for ContentStatusBanner();
  LOBYTE(a1) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v25) != 1;
  sub_10017DF4C((uint64_t)v7, &qword_100E63A10);
  sub_10006DF38((uint64_t)v14, (uint64_t)v18, &qword_100E8E238);
  uint64_t v26 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v26 = v23;
  v26[8] = a1;
  sub_10017DF4C((uint64_t)v14, &qword_100E8E238);
  return sub_10024D364((uint64_t)v18, v29, &qword_100E8E240);
}

uint64_t sub_1000E21C8()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  sub_10006DF38(v0 + *(int *)(v4 + 20), (uint64_t)v3, &qword_100E63A10);
  uint64_t v5 = type metadata accessor for ContentStatusBanner();
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v3, 1, v5);
  sub_10017DF4C((uint64_t)v3, &qword_100E63A10);
  if (v6 == 1)
  {
    if (qword_100E62340 == -1) {
      return swift_retain();
    }
    goto LABEL_6;
  }
  if (qword_100E62338 != -1) {
LABEL_6:
  }
    swift_once();
  return swift_retain();
}

uint64_t sub_1000E2304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v48 = a3;
  uint64_t v49 = sub_10017DF08(&qword_100E8E260);
  uint64_t v42 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v41 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08(&qword_100E8E268);
  __chkstk_darwin(v43);
  uint64_t v47 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10017DF08(&qword_100E8E270);
  __chkstk_darwin(v46);
  uint64_t v40 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E662F0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  long long v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v40 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v40 - v22;
  type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v45 = a1;
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v21, enum case for UserInterfaceSizeClass.compact(_:), v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v7);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10006DF38((uint64_t)v23, (uint64_t)v14, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v21, v24, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v7) == 1)
  {
    sub_10017DF4C((uint64_t)v21, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v23, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v7) == 1)
    {
      sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
LABEL_8:
      uint64_t v27 = v40;
      sub_1000E2A30(v44, v40);
      sub_10006DF38(v27, v47, &qword_100E8E270);
      swift_storeEnumTagMultiPayload();
      sub_1000E3678();
      uint64_t v28 = sub_10018C6DC(&qword_100E8E318);
      uint64_t v29 = type metadata accessor for DisplayMetrics();
      unint64_t v30 = sub_10024D5E4((uint64_t)&unk_100E8E320);
      unint64_t v31 = sub_10015180C((uint64_t)&unk_100E65FF0);
      uint64_t v50 = v28;
      uint64_t v51 = v29;
      unint64_t v52 = v30;
      unint64_t v53 = v31;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return sub_10017DF4C(v27, &qword_100E8E270);
    }
    goto LABEL_6;
  }
  sub_10006DF38((uint64_t)v14, (uint64_t)v18, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v7) == 1)
  {
    sub_10017DF4C((uint64_t)v21, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v23, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
LABEL_6:
    sub_10017DF4C((uint64_t)v14, &qword_100E662F0);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v24, v7);
  sub_10015180C((uint64_t)&qword_100E65F28);
  char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v10, v7);
  sub_10017DF4C((uint64_t)v21, &qword_100E65ED8);
  sub_10017DF4C((uint64_t)v23, &qword_100E65ED8);
  v26(v18, v7);
  sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
  if (v25) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v33 = v41;
  sub_1006EA564(v44, v41);
  uint64_t v34 = v42;
  uint64_t v35 = v49;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v47, v33, v49);
  swift_storeEnumTagMultiPayload();
  sub_1000E3678();
  uint64_t v36 = sub_10018C6DC(&qword_100E8E318);
  uint64_t v37 = type metadata accessor for DisplayMetrics();
  unint64_t v38 = sub_10024D5E4((uint64_t)&unk_100E8E320);
  unint64_t v39 = sub_10015180C((uint64_t)&unk_100E65FF0);
  uint64_t v50 = v36;
  uint64_t v51 = v37;
  unint64_t v52 = v38;
  unint64_t v53 = v39;
  swift_getOpaqueTypeConformance2();
  _ConditionalContent<>.init(storage:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
}

uint64_t sub_1000E2A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void v18[3] = a2;
  uint64_t v3 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  v18[2] = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for MeasuredLocationViewerView(0);
  v18[1] = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10017DF08(&qword_100E8E328);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E8E288);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62668 != -1) {
    swift_once();
  }
  if (byte_100F51C48 == 1)
  {
    sub_1000E2E08(a1, (uint64_t)v10);
    sub_10006DF38((uint64_t)v10, (uint64_t)v7, &qword_100E8E288);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E8E300);
    sub_1000E36F4();
    sub_1000E3848();
    _ConditionalContent<>.init(storage:)();
    return sub_10017DF4C((uint64_t)v10, &qword_100E8E288);
  }
  else
  {
    uint64_t v12 = static Alignment.center.getter();
    v18[0] = v13;
    sub_10015176C();
    sub_10015176C();
    uint64_t v14 = swift_allocObject();
    sub_1001516CC();
    sub_1001516CC();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v16 = sub_1003485C8();
    uint64_t v17 = v18[0];
    *(void *)uint64_t v7 = v12;
    *((void *)v7 + 1) = v17;
    *((void *)v7 + 2) = KeyPath;
    v7[24] = 0;
    *((void *)v7 + 4) = sub_1006F3A08;
    *((void *)v7 + 5) = v14;
    *((void *)v7 + 6) = v16;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E8E300);
    sub_1000E36F4();
    sub_1000E3848();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1000E2E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v5 = sub_10017DF08(&qword_100E8E330);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E8E2A8);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E8E298);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E31A0(a1, (uint64_t)v8);
  uint64_t v17 = (int *)type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v18 = v3 + v17[24];
  long long v19 = *(_OWORD *)(v18 + 16);
  v37[0] = *(_OWORD *)v18;
  v37[1] = v19;
  v37[2] = *(_OWORD *)(v18 + 32);
  char v38 = *(unsigned char *)(v18 + 48);
  sub_10024D364((uint64_t)v37, (uint64_t)v39, &qword_100E63DB0);
  sub_1000FDCE8((uint64_t)v39);
  sub_1000FDD60();
  sub_1000FDCE8((uint64_t)v37);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v12, v8, v5);
  uint64_t v20 = &v12[*(int *)(v10 + 44)];
  long long v21 = v35;
  *(_OWORD *)uint64_t v20 = v34;
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v36;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v22 = *(void *)(v3 + v17[16]);
  uint64_t v23 = v3 + v17[20];
  uint64_t v24 = &v16[*(int *)(v14 + 44)];
  long long v33 = *(_OWORD *)(v3 + v17[19]);
  sub_1001E9994(v23, (uint64_t)(v24 + 24));
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v25 = Namespace.wrappedValue.getter();
  *(void *)uint64_t v24 = v22;
  *(_OWORD *)(v24 + 8) = v33;
  *((void *)v24 + 8) = v25;
  type metadata accessor for WeatherVFXConditionBackground();
  sub_10015180C((uint64_t)&qword_100E70F28);
  *((void *)v24 + 9) = EnvironmentObject.init()();
  *((void *)v24 + 10) = v26;
  sub_10024D364((uint64_t)v12, (uint64_t)v16, &qword_100E8E2A8);
  uint64_t v27 = static SafeAreaRegions.all.getter();
  LOBYTE(v17) = static Edge.Set.all.getter();
  uint64_t v28 = v32;
  sub_10006DF38((uint64_t)v16, v32, &qword_100E8E298);
  uint64_t v29 = v28 + *(int *)(sub_10017DF08(&qword_100E8E288) + 36);
  *(void *)uint64_t v29 = v27;
  *(unsigned char *)(v29 + 8) = (_BYTE)v17;
  return sub_10017DF4C((uint64_t)v16, &qword_100E8E298);
}

uint64_t sub_1000E31A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = type metadata accessor for LocationViewerViewModel();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E8E2D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E8E2C8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&KeyPath - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E8E2B0);
  __chkstk_darwin(v26);
  uint64_t v16 = (char *)&KeyPath - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v17 = (uint64_t)&v10[*(int *)(sub_10017DF08(&qword_100E8E338) + 44)];
  uint64_t v25 = v2;
  sub_1000F8E90(v2, a1, v17);
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  char v18 = v7[*(int *)(v5 + 60)];
  sub_100151660();
  sub_10006DF38((uint64_t)v10, (uint64_t)v14, &qword_100E8E2D8);
  long long v19 = &v14[*(int *)(v12 + 44)];
  *(void *)long long v19 = KeyPath;
  v19[8] = v18;
  sub_10017DF4C((uint64_t)v10, &qword_100E8E2D8);
  sub_1001520F8();
  uint64_t v20 = *(void *)&v7[*(int *)(v5 + 28)];
  swift_bridgeObjectRetain();
  sub_100151660();
  sub_10006DF38((uint64_t)v14, (uint64_t)v16, &qword_100E8E2C8);
  long long v21 = &v16[*(int *)(v26 + 36)];
  *(void *)long long v21 = 0;
  *((void *)v21 + 1) = v20;
  sub_10017DF4C((uint64_t)v14, &qword_100E8E2C8);
  uint64_t v22 = v25;
  sub_1000E34A0();
  uint64_t v28 = v22;
  sub_1000E37A8();
  View.alert(isPresented:content:)();
  swift_release();
  swift_release();
  return sub_10017DF4C((uint64_t)v16, &qword_100E8E2B0);
}

uint64_t sub_1000E34A0()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView(0);
  __chkstk_darwin(v0 - 8);
  sub_10015176C();
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = &protocol witness table for MainActor;
  sub_1001516CC();
  sub_10015176C();
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = &protocol witness table for MainActor;
  sub_1001516CC();
  Binding.init(get:set:)();
  return v6;
}

unint64_t sub_1000E3678()
{
  unint64_t result = qword_100E8E278;
  if (!qword_100E8E278)
  {
    sub_10018C6DC(&qword_100E8E270);
    sub_1000E36F4();
    sub_1000E3848();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E278);
  }
  return result;
}

unint64_t sub_1000E36F4()
{
  unint64_t result = qword_100E8E280;
  if (!qword_100E8E280)
  {
    sub_10018C6DC(&qword_100E8E288);
    sub_1001CB570((uint64_t)&unk_100E8E290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E280);
  }
  return result;
}

unint64_t sub_1000E37A8()
{
  unint64_t result = qword_100E8E2B8;
  if (!qword_100E8E2B8)
  {
    sub_10018C6DC(&qword_100E8E2B0);
    sub_100007848();
    sub_10024D5E4((uint64_t)&unk_100E8E2E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E2B8);
  }
  return result;
}

unint64_t sub_1000E3848()
{
  unint64_t result = qword_100E8E2F8;
  if (!qword_100E8E2F8)
  {
    sub_10018C6DC(&qword_100E8E300);
    sub_10024D5E4((uint64_t)&unk_100E8E308);
    sub_10024D5E4((uint64_t)&qword_100E64438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E2F8);
  }
  return result;
}

uint64_t sub_1000E390C@<X0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v11 = sub_10017DF08(a4);
  *(void *)(a6 + 80) = a5;
  *(void *)(a6 + 88) = 0;
  *(unsigned char *)(a6 + 96) = 0;
  *(void *)a6 = v11;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)&v16, &qword_100E6F2A0);
  if (v17)
  {
    sub_1001262E4(&v16, a6 + 24);
    *(void *)(a6 + 8) = a2;
    *(void *)(a6 + 16) = a3;
    swift_retain();
    uint64_t v13 = Dictionary.init(dictionaryLiteral:)();
    *(void *)&long long v16 = &_swiftEmptyArrayStorage;
    *((void *)&v16 + 1) = v13;
    if (a1)
    {
      swift_retain();
      a1(&v16);
      swift_release();
      sub_1001361AC((uint64_t)a1);
      uint64_t result = sub_1001361AC((uint64_t)a1);
      uint64_t v15 = *((void *)&v16 + 1);
      uint64_t v14 = (void *)v16;
    }
    else
    {
      uint64_t v15 = v13;
      uint64_t result = swift_release();
      uint64_t v14 = &_swiftEmptyArrayStorage;
    }
    *(void *)(a6 + 64) = v14;
    *(void *)(a6 + 72) = v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000E3A74()
{
  uint64_t v0 = type metadata accessor for LocationViewPage(0);
  sub_1001627C0(v0);
  sub_10017238C();

  sub_1000E3AB8();
}

void sub_1000E3AB8()
{
}

void sub_1000E3AE8()
{
  sub_100162EA0();
  uint64_t v29 = v1;
  uint64_t v30 = v2;
  uint64_t v28 = v3;
  uint64_t v4 = type metadata accessor for LocationModel();
  sub_10017C83C();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v10 = __chkstk_darwin(v9);
  long long v33 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v11 = *(void (**)(uint64_t))(v6 + 16);
  sub_10018354C();
  v11(v12);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v31 = v13 | 7;
  uint64_t v32 = ((v13 + 16) & ~v13) + v8;
  unint64_t v14 = (v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  long long v16 = *(void (**)(uint64_t))(v6 + 32);
  sub_1001911B4();
  v16(v17);
  char v18 = (void *)(v15 + v14);
  uint64_t v19 = v30;
  *char v18 = v29;
  v18[1] = v19;
  swift_bridgeObjectRetain();
  sub_1000E3D20();
  uint64_t v20 = *(void *)(*v0 + 16);
  sub_1000E3D08(v20);
  uint64_t v21 = *v0;
  *(void *)(v21 + 16) = v20 + 1;
  uint64_t v22 = v21 + 16 * v20;
  *(void *)(v22 + 32) = sub_100223310;
  *(void *)(v22 + 40) = v15;
  *uint64_t v0 = v21;
  sub_10018354C();
  v11(v23);
  *((void *)&v35 + 1) = v4;
  sub_100170694((uint64_t *)&v34);
  sub_10018354C();
  v11(v24);
  sub_1001911B4();
  v16(v25);
  uint64_t v26 = swift_allocObject();
  sub_1001911B4();
  v16(v27);
  *(void *)&long long v36 = sub_100223F54;
  *((void *)&v36 + 1) = v26;
  v37[0] = v34;
  v37[1] = v35;
  v37[2] = v36;
  sub_1000E3D38((uint64_t)v37, v4);
  sub_100162694();
}

uint64_t sub_1000E3D08(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_10012C034);
}

uint64_t sub_1000E3D20()
{
  return sub_100129E78((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10012C034);
}

uint64_t sub_1000E3D38(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    long long v4 = *(_OWORD *)(a1 + 16);
    long long v23 = *(_OWORD *)a1;
    long long v24 = v4;
    long long v25 = *(_OWORD *)(a1 + 32);
    return sub_1000E3E4C(&v23, a2);
  }
  else
  {
    sub_100178160(a1, &qword_100E63A90);
    unint64_t v6 = sub_1002109DC(a2);
    if (v7)
    {
      unint64_t v8 = v6;
      swift_isUniquelyReferenced_nonNull_native();
      sub_10019D3D0();
      int v9 = sub_10017DF08(&qword_100E63A98);
      sub_1001D0DB4(v9, v10, v11, v12, v13, v14, v15, v16, v20, v21);
      uint64_t v17 = (long long *)(*(void *)(v22 + 56) + 48 * v8);
      long long v19 = v17[1];
      long long v18 = v17[2];
      long long v23 = *v17;
      long long v24 = v19;
      long long v25 = v18;
      _NativeDictionary._delete(at:)();
      *uint64_t v2 = v22;
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
      long long v23 = 0u;
    }
    return sub_100178160((uint64_t)&v23, &qword_100E63A90);
  }
}

uint64_t sub_1000E3E4C(_OWORD *a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_1000E3ECC(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;

  return swift_bridgeObjectRelease();
}

unint64_t sub_1000E3ECC(_OWORD *a1, uint64_t a2, char a3)
{
  long long v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1002109DC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_10017DF08(&qword_100E63A98);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_1002109DC(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_13:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  long long v18 = *v4;
  if (v15)
  {
    uint64_t v19 = v18[7] + 48 * v14;
    return sub_100249A00((uint64_t)a1, v19);
  }
  else
  {
    return sub_1000E3FEC(v14, a2, a1, v18);
  }
}

unint64_t sub_1000E3FEC(unint64_t result, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  long long v4 = (_OWORD *)(a4[7] + 48 * result);
  long long v5 = a3[1];
  *long long v4 = *a3;
  v4[1] = v5;
  v4[2] = a3[2];
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_1000E4044()
{
  unint64_t result = qword_100E8ED70;
  if (!qword_100E8ED70)
  {
    sub_10018C6DC(&qword_100E8ED68);
    sub_10022E1BC();
    sub_10024D5E4((uint64_t)&unk_100E8ED90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8ED70);
  }
  return result;
}

uint64_t sub_1000E40E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for GridGeometryComputerModifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = static Alignment.center.getter();
  uint64_t v11 = v10;
  sub_1000E5BDC(v3, (uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for GridGeometryComputerModifier);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  sub_1000E4D7C((uint64_t)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (void (*)(void))type metadata accessor for GridGeometryComputerModifier);
  uint64_t v14 = sub_10017DF08(&qword_100EA67D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a2, a1, v14);
  uint64_t result = sub_10017DF08(&qword_100EA67E0);
  unint64_t v16 = (uint64_t (**)())(a2 + *(int *)(result + 36));
  *unint64_t v16 = sub_10003793C;
  v16[1] = (uint64_t (*)())v13;
  v16[2] = (uint64_t (*)())v9;
  void v16[3] = v11;
  return result;
}

uint64_t sub_1000E4274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v94 = a4;
  uint64_t v73 = a2;
  uint64_t v93 = a5;
  uint64_t v8 = type metadata accessor for LocationViewGeometry(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v85 = v8 - 8;
  uint64_t v92 = v9;
  uint64_t v91 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v90 = (uint64_t)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GridGeometryRoot();
  uint64_t v74 = v11;
  uint64_t v88 = *(void *)(v11 - 8);
  uint64_t v89 = *(void *)(v88 + 64);
  __chkstk_darwin(v11);
  uint64_t v87 = (char *)v67 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100EAA930);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  __n128 v81 = (char *)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a3;
  uint64_t v17 = *(void *)(a3 - 8);
  __chkstk_darwin(v14);
  uint64_t v19 = (char *)v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018C6DC(&qword_100EA6648);
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v72 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v67 - v21;
  sub_10018C6DC(&qword_100E70D20);
  uint64_t v70 = type metadata accessor for ModifiedContent();
  uint64_t v76 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  __n128 v68 = (char *)v67 - v23;
  sub_10018C6DC(&qword_100EAAE30);
  uint64_t v77 = type metadata accessor for ModifiedContent();
  uint64_t v78 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  int v69 = (char *)v67 - v24;
  sub_10018C6DC(&qword_100EA6650);
  uint64_t v80 = type metadata accessor for ModifiedContent();
  uint64_t v84 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v75 = (char *)v67 - v25;
  sub_10018C6DC(&qword_100E8F078);
  uint64_t v83 = type metadata accessor for ModifiedContent();
  uint64_t v86 = *(void *)(v83 - 8);
  uint64_t v26 = __chkstk_darwin(v83);
  uint64_t v79 = (char *)v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v82 = (uint64_t)v67 - v28;
  uint64_t v29 = a2 + *(int *)(v11 + 36);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v71 = v16;
  v30(v19, v29, v16);
  swift_getKeyPath();
  uint64_t v31 = *(void *)(a1 + 24);
  char v32 = *(unsigned char *)(a1 + 32);
  uint64_t v33 = *(void *)(a1 + 40);
  __int16 v34 = *(_WORD *)(a1 + 48);
  uint64_t v105 = *(void *)a1;
  long long v106 = *(_OWORD *)(a1 + 8);
  uint64_t v107 = v31;
  char v108 = v32;
  uint64_t v109 = v33;
  __int16 v110 = v34;
  long long v111 = *(_OWORD *)(a1 + 56);
  uint64_t v35 = v94;
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_getKeyPath();
  LOBYTE(v105) = *(unsigned char *)(a1 + 72);
  uint64_t v36 = sub_1001246C8(&qword_100EA6660, &qword_100EA6648);
  uint64_t v103 = v35;
  uint64_t v104 = v36;
  uint64_t WitnessTable = swift_getWitnessTable();
  char v38 = v68;
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v22, v20);
  swift_getKeyPath();
  LOBYTE(v105) = (*(unsigned char *)(a1 + 72) & 0xC1) == 0;
  v67[1] = &protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>;
  uint64_t v39 = sub_1001246C8(&qword_100E70D18, &qword_100E70D20);
  uint64_t v101 = WitnessTable;
  uint64_t v102 = v39;
  v67[2] = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v40 = v70;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v69;
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v38, v40);
  swift_getKeyPath();
  uint64_t v43 = a1 + *(int *)(v85 + 32);
  uint64_t v44 = type metadata accessor for TargetWindowSizeClass();
  uint64_t v45 = (uint64_t)v81;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v81, v43, v44);
  _s7Weather24LocationCompositionStateOwst_0(v45, 0, 1, v44);
  uint64_t v46 = sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
  uint64_t v99 = v41;
  uint64_t v100 = v46;
  uint64_t v47 = v77;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v75;
  View.environment<A>(_:_:)();
  swift_release();
  sub_100178110(v45, &qword_100EAA930);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v42, v47);
  swift_getKeyPath();
  uint64_t v50 = v88;
  uint64_t v51 = v87;
  uint64_t v52 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v73, v74);
  uint64_t v53 = v90;
  sub_1000E5BDC(a1, v90, (void (*)(void))type metadata accessor for LocationViewGeometry);
  unint64_t v54 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v55 = (v89 + *(unsigned __int8 *)(v92 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  uint64_t v56 = swift_allocObject();
  uint64_t v57 = v94;
  *(void *)(v56 + 16) = v71;
  *(void *)(v56 + 24) = v57;
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v56 + v54, v51, v52);
  sub_1000E4D7C(v53, v56 + v55, (void (*)(void))type metadata accessor for LocationViewGeometry);
  uint64_t v58 = sub_1001246C8((unint64_t *)&unk_100EAA920, &qword_100EA6650);
  uint64_t v97 = v48;
  uint64_t v98 = v58;
  uint64_t v59 = v80;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v61 = (uint64_t)v79;
  View.transformEnvironment<A>(_:transform:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v49, v59);
  uint64_t v62 = sub_1001246C8(&qword_100E8F070, &qword_100E8F078);
  uint64_t v95 = v60;
  uint64_t v96 = v62;
  uint64_t v63 = v83;
  swift_getWitnessTable();
  uint64_t v64 = v82;
  sub_100121584(v61, v63, v82);
  uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
  v65(v61, v63);
  sub_100121584(v64, v63, v93);
  return ((uint64_t (*)(uint64_t, uint64_t))v65)(v64, v63);
}

uint64_t sub_1000E4D7C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1000E4DDC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = type metadata accessor for GridGeometryRoot();
  sub_1001627C0(v3);
  uint64_t v4 = sub_100181A58();

  return sub_1000E4274(v4, v5, v1, v2, v6);
}

double sub_1000E4E4C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for GridGeometryRoot() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = type metadata accessor for LocationViewGeometry(0);
  sub_1001627C0(v6);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  *(void *)&double result = sub_100069AC4(a1, v1 + v4, v8).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for GridGeometryRoot()
{
  return sub_100109098();
}

uint64_t sub_1000E4F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  sub_10017C83C();
  uint64_t v66 = v3;
  uint64_t v67 = *(void *)(v4 + 64);
  __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for GridGeometryComputerModifier(0);
  uint64_t v8 = (int *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = sub_10017DF08(&qword_100EA6640);
  sub_100162E4C();
  __chkstk_darwin(v11);
  uint64_t v63 = (uint64_t *)((char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = *(void *)(a1 + 16);
  uint64_t v61 = a1;
  sub_10018C6DC(&qword_100EA6648);
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100E70D20);
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100EAAE30);
  sub_10017FE34();
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100EA6650);
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100E8F078);
  uint64_t v13 = type metadata accessor for ModifiedContent();
  unint64_t v14 = sub_1000E56DC();
  unint64_t v57 = v14;
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v62 = v15;
  uint64_t v16 = sub_1001246C8(&qword_100EA6660, &qword_100EA6648);
  uint64_t v84 = v15;
  uint64_t v85 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = sub_1001246C8(&qword_100E70D18, &qword_100E70D20);
  uint64_t v82 = WitnessTable;
  uint64_t v83 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
  uint64_t v80 = v19;
  uint64_t v81 = v20;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = sub_1001246C8((unint64_t *)&unk_100EAA920, &qword_100EA6650);
  uint64_t v78 = v21;
  uint64_t v79 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = sub_1001246C8(&qword_100E8F070, &qword_100E8F078);
  uint64_t v76 = v23;
  uint64_t v77 = v24;
  uint64_t v58 = v13;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v72 = &type metadata for ComputedGridGeometryPreferenceKey;
  uint64_t v73 = v13;
  unint64_t v74 = v14;
  uint64_t v75 = v55;
  uint64_t v59 = type metadata accessor for _OverlayPreferenceModifier();
  uint64_t v25 = v54;
  uint64_t v26 = type metadata accessor for ModifiedContent();
  sub_10017C83C();
  uint64_t v60 = v27;
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v56 = (uint64_t)&v53 - v32;
  uint64_t v33 = static Color.clear.getter();
  *uint64_t v10 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  __int16 v34 = (uint64_t *)((char *)v10 + v8[7]);
  *__int16 v34 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v35 = (char *)v10 + v8[8];
  *(void *)uint64_t v35 = swift_getKeyPath();
  v35[8] = 0;
  uint64_t v36 = (char *)v10 + v8[9];
  *(void *)uint64_t v36 = swift_getKeyPath();
  v36[8] = 0;
  uint64_t v37 = (uint64_t *)((char *)v10 + v8[10]);
  *uint64_t v37 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  char v38 = (uint64_t *)((char *)v10 + v8[11]);
  *char v38 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = (char *)v10 + v8[12];
  *(void *)uint64_t v39 = sub_10021A810;
  *((void *)v39 + 1) = 0;
  v39[16] = 0;
  uint64_t v40 = v63;
  sub_1000E5BDC((uint64_t)v10, (uint64_t)v63 + *(int *)(v25 + 36), (void (*)(void))type metadata accessor for GridGeometryComputerModifier);
  *uint64_t v40 = v33;
  sub_1000E5B88((uint64_t)v10, (void (*)(void))type metadata accessor for GridGeometryComputerModifier);
  uint64_t v42 = v65;
  uint64_t v41 = v66;
  uint64_t v43 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v68, v61);
  uint64_t v44 = v41;
  unint64_t v45 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = v62;
  *(void *)(v46 + 16) = v64;
  *(void *)(v46 + 24) = v47;
  (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v46 + v45, v42, v43);
  unint64_t v48 = sub_1000E5728();
  static Alignment.center.getter();
  View.overlayPreferenceValue<A, B>(_:alignment:_:)();
  swift_release();
  sub_100178110((uint64_t)v40, &qword_100EA6640);
  uint64_t v49 = swift_getWitnessTable();
  unint64_t v70 = v48;
  uint64_t v71 = v49;
  swift_getWitnessTable();
  uint64_t v50 = v56;
  sub_100121584((uint64_t)v31, v26, v56);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v60 + 8);
  v51(v31, v26);
  sub_100121584(v50, v26, v69);
  return ((uint64_t (*)(uint64_t, uint64_t))v51)(v50, v26);
}

uint64_t sub_1000E5640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 16))((*(unsigned __int8 *)(v8 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(unsigned __int8 *)(v8 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

unint64_t sub_1000E56DC()
{
  unint64_t result = qword_100EA6658;
  if (!qword_100EA6658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6658);
  }
  return result;
}

unint64_t sub_1000E5728()
{
  unint64_t result = qword_100EA6668;
  if (!qword_100EA6668)
  {
    sub_10018C6DC(&qword_100EA6640);
    sub_1000C3E38(&qword_100EA6670, (void (*)(uint64_t))type metadata accessor for GridGeometryComputerModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6668);
  }
  return result;
}

uint64_t sub_1000E57D4(const void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for LocationViewGeometry(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v30 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  uint64_t v9 = &v31[-v8 - 8];
  __chkstk_darwin(v10);
  uint64_t v12 = &v31[-v11 - 8];
  __chkstk_darwin(v13);
  uint64_t v15 = &v31[-v14 - 8];
  __chkstk_darwin(v16);
  uint64_t v18 = &v31[-v17 - 8];
  __chkstk_darwin(v19);
  uint64_t v21 = &v31[-v20 - 8];
  memcpy(__dst, a1, sizeof(__dst));
  memcpy(v31, a2, sizeof(v31));
  BOOL v22 = sub_100037990((uint64_t)v31);
  sub_1000E5BDC((uint64_t)a1, (uint64_t)v21, (void (*)(void))type metadata accessor for LocationViewGeometry);
  sub_1000E5BDC((uint64_t)a2, (uint64_t)v18, (void (*)(void))type metadata accessor for LocationViewGeometry);
  if (!v22)
  {
    sub_1000E5B88((uint64_t)v18, (void (*)(void))type metadata accessor for LocationViewGeometry);
    sub_1000E5B88((uint64_t)v21, (void (*)(void))type metadata accessor for LocationViewGeometry);
    sub_1000E5BDC((uint64_t)a1, (uint64_t)v15, (void (*)(void))type metadata accessor for LocationViewGeometry);
    sub_1000E5BDC((uint64_t)a2, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationViewGeometry);
    goto LABEL_6;
  }
  unsigned __int8 v23 = v21[72];
  sub_1000E5B88((uint64_t)v21, (void (*)(void))type metadata accessor for LocationViewGeometry);
  unsigned __int8 v24 = v18[72];
  sub_1000E5B88((uint64_t)v18, (void (*)(void))type metadata accessor for LocationViewGeometry);
  char v25 = sub_100212308(v23, v24);
  sub_1000E5BDC((uint64_t)a1, (uint64_t)v15, (void (*)(void))type metadata accessor for LocationViewGeometry);
  sub_1000E5BDC((uint64_t)a2, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationViewGeometry);
  if ((v25 & 1) == 0)
  {
LABEL_6:
    sub_1000E5B88((uint64_t)v12, (void (*)(void))type metadata accessor for LocationViewGeometry);
    sub_1000E5B88((uint64_t)v15, (void (*)(void))type metadata accessor for LocationViewGeometry);
    sub_1000E5BDC((uint64_t)a1, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationViewGeometry);
    uint64_t v27 = v30;
    sub_1000E5BDC((uint64_t)a2, (uint64_t)v30, (void (*)(void))type metadata accessor for LocationViewGeometry);
    goto LABEL_7;
  }
  char v26 = sub_100214FB4((uint64_t)&v15[*(int *)(v4 + 24)], (uint64_t)&v12[*(int *)(v4 + 24)]);
  sub_1000E5B88((uint64_t)v12, (void (*)(void))type metadata accessor for LocationViewGeometry);
  sub_1000E5B88((uint64_t)v15, (void (*)(void))type metadata accessor for LocationViewGeometry);
  sub_1000E5BDC((uint64_t)a1, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationViewGeometry);
  uint64_t v27 = v30;
  sub_1000E5BDC((uint64_t)a2, (uint64_t)v30, (void (*)(void))type metadata accessor for LocationViewGeometry);
  if ((v26 & 1) == 0)
  {
LABEL_7:
    char v28 = 0;
    goto LABEL_8;
  }
  char v28 = static EdgeInsets.== infix(_:_:)();
LABEL_8:
  sub_1000E5B88((uint64_t)v27, (void (*)(void))type metadata accessor for LocationViewGeometry);
  sub_1000E5B88((uint64_t)v9, (void (*)(void))type metadata accessor for LocationViewGeometry);
  return v28 & 1;
}

uint64_t sub_1000E5B88(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1000E5BDC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for LocationViewGeometry(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA66D0);
}

uint64_t sub_1000E5C50(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
    uint64_t v6 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[5];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
  }
  else
  {
    void *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  char v24 = *(unsigned char *)(v22 + 8);
  sub_100195B7C(*(void *)v22, v24);
  *(void *)uint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = v24;
  uint64_t v25 = a3[8];
  char v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *char v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = a3[9];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
    }
  }
  else
  {
    *uint64_t v30 = *v31;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = a3[10];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  uint64_t v38 = v36[1];
  char v39 = *((unsigned char *)v36 + 16);
  sub_100195B88();
  *(void *)uint64_t v35 = v37;
  *(void *)(v35 + 8) = v38;
  *(unsigned char *)(v35 + 16) = v39;
  return a1;
}

uint64_t type metadata accessor for GridGeometryComputerModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA6768);
}

uint64_t sub_1000E6050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  sub_10017C83C();
  uint64_t v5 = v4;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = *(void *)(v10 + 24);
  uint64_t v14 = type metadata accessor for SlowDeviceGridView();
  sub_10017C83C();
  uint64_t v32 = v15;
  uint64_t v17 = __chkstk_darwin(v16);
  char v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v31 - v20;
  type metadata accessor for _ConditionalContent();
  sub_10017C83C();
  uint64_t v34 = v23;
  uint64_t v35 = v22;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v31 - v24;
  if (DeviceIsVerySlow())
  {
    uint64_t v31 = *(void *)(v33 + 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v12, v33 + *(int *)(a1 + 36), v3);
    uint64_t v26 = swift_unknownObjectRetain();
    sub_1007934C4(v26, v31, (uint64_t)v12, v3, v19);
    swift_getWitnessTable();
    sub_100121584((uint64_t)v19, v14, (uint64_t)v21);
    uint64_t v27 = *(void (**)(void))(v32 + 8);
    sub_100166CA8();
    v27();
    sub_100121584((uint64_t)v21, v14, (uint64_t)v19);
    sub_1000E95C0();
    sub_100166CA8();
    v27();
    sub_100166CA8();
    v27();
  }
  else
  {
    sub_100121584(v33 + *(int *)(a1 + 36), v3, (uint64_t)v12);
    sub_100121584((uint64_t)v12, v3, (uint64_t)v9);
    swift_getWitnessTable();
    sub_100121F14();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
    v28(v9, v3);
    v28(v12, v3);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v38 = v13;
  uint64_t v29 = v35;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v25, v29, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v25, v29);
}

uint64_t sub_1000E63D0(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 96);
  swift_release();
  sub_10018F6D8(*(void *)(a1 + 144), *(unsigned char *)(a1 + 152));
  uint64_t v4 = a1 + a2[13];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[14]), *(unsigned char *)(a1 + a2[14] + 8));
  uint64_t v7 = a1 + a2[15];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[16];
  sub_100191934(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(unsigned char *)(v9 + 32));
  sub_10018F6D8(*(void *)(a1 + a2[17]), *(unsigned char *)(a1 + a2[17] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[18]), *(unsigned char *)(a1 + a2[18] + 8));
  uint64_t v10 = a1 + a2[19];
  sub_10014DC00(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(unsigned char *)(v10 + 48));
  sub_10018F6E4();
  swift_release();
  uint64_t v11 = a1 + a2[22];
  uint64_t v12 = type metadata accessor for Text.Measurements();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t type metadata accessor for SlowDeviceGridView()
{
  return sub_100109098();
}

uint64_t sub_1000E661C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for ConditionSummaryModifier(0);
  uint64_t v35 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v36 = v4;
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E64470);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E64478);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100E64480);
  __chkstk_darwin(v34);
  uint64_t v37 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocationHeaderViewMeasurements(0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_1000E72E0();
  swift_release();
  sub_1000E72AC();
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_1000E7380();
  swift_release();
  sub_1000E71D0((uint64_t *)&v14[*(int *)(v12 + 40)]);
  sub_10014CC74((uint64_t)v14, (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
  int v15 = *(unsigned __int8 *)(v2 + *(int *)(v3 + 24));
  uint64_t v16 = 0;
  if (v15 == 1)
  {
    uint64_t v17 = (uint64_t *)(v2 + *(int *)(v3 + 40));
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v39 = v18;
    uint64_t v40 = v19;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.getter();
    uint64_t v16 = v41;
  }
  uint64_t v20 = sub_10017DF08(&qword_100E64488);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v7, v33, v20);
  uint64_t v21 = &v7[*(int *)(v31 + 36)];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = v16;
  double v22 = 1.0;
  if (v15)
  {
    CGFloat.clamp(min:max:)();
    double v22 = v23;
  }
  sub_10006DF38((uint64_t)v7, (uint64_t)v9, &qword_100E64470);
  *(double *)&v9[*(int *)(v32 + 36)] = v22;
  sub_100178110((uint64_t)v7, &qword_100E64470);
  sub_10014D0EC(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for ConditionSummaryModifier);
  unint64_t v24 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v25 = swift_allocObject();
  sub_10014DEEC((uint64_t)v5, v25 + v24, (void (*)(void))type metadata accessor for ConditionSummaryModifier);
  sub_10014D0EC(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for ConditionSummaryModifier);
  uint64_t v26 = swift_allocObject();
  sub_10014DEEC((uint64_t)v5, v26 + v24, (void (*)(void))type metadata accessor for ConditionSummaryModifier);
  uint64_t v27 = v37;
  sub_10006DF38((uint64_t)v9, v37, &qword_100E64478);
  uint64_t v28 = (uint64_t (**)(uint64_t))(v27 + *(int *)(v34 + 36));
  *uint64_t v28 = sub_100213138;
  v28[1] = (uint64_t (*)(uint64_t))v25;
  void v28[2] = sub_100213FEC;
  v28[3] = (uint64_t (*)(uint64_t))v26;
  sub_100178110((uint64_t)v9, &qword_100E64478);
  return sub_10024D364(v27, v38, &qword_100E64480);
}

uint64_t sub_1000E6B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for TemperatureModifier(0);
  uint64_t v35 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v36 = v4;
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E64530);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E64538);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100E64540);
  __chkstk_darwin(v34);
  uint64_t v37 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocationHeaderViewMeasurements(0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_1000E72E0();
  swift_release();
  sub_1000E72AC();
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_1000E7380();
  swift_release();
  sub_1000E71D0((uint64_t *)&v14[*(int *)(v12 + 40)]);
  sub_10014CC74((uint64_t)v14, (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
  int v15 = *(unsigned __int8 *)(v2 + *(int *)(v3 + 24));
  uint64_t v16 = 0;
  if (v15 == 1)
  {
    uint64_t v17 = (uint64_t *)(v2 + *(int *)(v3 + 40));
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v39 = v18;
    uint64_t v40 = v19;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.getter();
    uint64_t v16 = v41;
  }
  double v20 = 1.0;
  uint64_t v21 = sub_10017DF08(&qword_100E64548);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v7, v33, v21);
  double v22 = &v7[*(int *)(v31 + 36)];
  *(void *)double v22 = 0;
  *((void *)v22 + 1) = v16;
  if (v15)
  {
    CGFloat.clamp(min:max:)();
    double v20 = v23;
  }
  sub_10006DF38((uint64_t)v7, (uint64_t)v9, &qword_100E64530);
  *(double *)&v9[*(int *)(v32 + 36)] = v20;
  sub_100178110((uint64_t)v7, &qword_100E64530);
  sub_10014D0EC(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for TemperatureModifier);
  unint64_t v24 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v25 = swift_allocObject();
  sub_10014DEEC((uint64_t)v5, v25 + v24, (void (*)(void))type metadata accessor for TemperatureModifier);
  sub_10014D0EC(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for TemperatureModifier);
  uint64_t v26 = swift_allocObject();
  sub_10014DEEC((uint64_t)v5, v26 + v24, (void (*)(void))type metadata accessor for TemperatureModifier);
  uint64_t v27 = v37;
  sub_10006DF38((uint64_t)v9, v37, &qword_100E64538);
  uint64_t v28 = (uint64_t (**)(uint64_t))(v27 + *(int *)(v34 + 36));
  *uint64_t v28 = sub_100213164;
  v28[1] = (uint64_t (*)(uint64_t))v25;
  void v28[2] = sub_100214118;
  v28[3] = (uint64_t (*)(uint64_t))v26;
  sub_100178110((uint64_t)v9, &qword_100E64538);
  return sub_10024D364(v27, v38, &qword_100E64540);
}

void sub_1000E7048()
{
  sub_100162EA0();
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_100214D8C();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10011BFD8();
  swift_retain();
  if ((v1 & 1) == 0)
  {
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    uint64_t v11 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)sub_10017E670();
      uint64_t v15 = sub_10016EEA8();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v14 = sub_10016414C(v5, v3, &v15);
      sub_10017F094(v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      sub_1001891D4();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    sub_10012B990();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  }
  sub_100162694();
}

void sub_1000E71B8()
{
}

uint64_t sub_1000E71D0(uint64_t *a1)
{
  id v2 = [self currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 == (id)5) {
    return 0x4034000000000000;
  }
  if (v3 != (id)1) {
    return 0;
  }
  BOOL v4 = sub_1005A73C4(*a1);
  uint64_t v5 = a1[1];
  if (!v4)
  {
    if (v5 == 1) {
      return 0x4050000000000000;
    }
    return 0x4034000000000000;
  }
  if (v5 == 1) {
    return 0x4053800000000000;
  }
  else {
    return 0x4041000000000000;
  }
}

void sub_1000E72AC()
{
}

double sub_1000E72E0()
{
  swift_getKeyPath();
  sub_1000E7420((uint64_t)&unk_100E63D70);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 24);
}

double sub_1000E7380()
{
  swift_getKeyPath();
  sub_1000E7420((uint64_t)&unk_100E63D70);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 16);
}

unint64_t sub_1000E7420(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1000E7464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v59 = a1;
  type metadata accessor for Button();
  swift_getWitnessTable();
  uint64_t v66 = &opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>;
  swift_getOpaqueTypeMetadata2();
  sub_100181BCC();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for ModifiedContent();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v99 = sub_1000E8960();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v71 = sub_1000E89AC();
  swift_getOpaqueTypeMetadata2();
  unint64_t v70 = sub_1000E89F8();
  sub_10018C568();
  swift_getOpaqueTypeMetadata2();
  uint64_t v69 = type metadata accessor for PlainButtonStyle();
  uint64_t v96 = WitnessTable;
  uint64_t v97 = sub_1000E8A44((unint64_t *)&qword_100E70FB8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v68 = v97;
  sub_10018C568();
  swift_getOpaqueTypeMetadata2();
  uint64_t v67 = type metadata accessor for _ConditionalContent();
  uint64_t v3 = type metadata accessor for _ConditionalContent();
  sub_100179C0C();
  uint64_t v57 = v4;
  __chkstk_darwin(v5);
  sub_10016278C();
  uint64_t v8 = v6 - v7;
  __chkstk_darwin(v9);
  sub_100128F8C();
  sub_100109338(v10);
  sub_10018C568();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for ModifiedContent();
  uint64_t v92 = swift_getOpaqueTypeConformance2();
  unint64_t v93 = v99;
  swift_getWitnessTable();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v94 = OpaqueTypeMetadata2;
  uint64_t v95 = swift_getOpaqueTypeConformance2();
  uint64_t v64 = v95;
  sub_10018C568();
  swift_getOpaqueTypeMetadata2();
  uint64_t v11 = type metadata accessor for ModifiedContent();
  sub_100179C0C();
  uint64_t v55 = v12;
  __chkstk_darwin(v13);
  sub_10016278C();
  uint64_t v16 = v14 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v62 = v3;
  uint64_t v20 = v58;
  uint64_t v61 = type metadata accessor for _ConditionalContent();
  sub_100179C0C();
  uint64_t v60 = v21;
  __chkstk_darwin(v22);
  sub_100109338((uint64_t)&v55 - v23);
  uint64_t v24 = *(void *)v20;
  char v25 = *(unsigned char *)(v20 + 8);
  sub_100195B7C(*(void *)v20, v25);
  sub_100149AE8();
  char v27 = v26;
  sub_10018F6D8(v24, v25);
  if (v27)
  {
    sub_100B3287C(v59, v16);
    sub_1001A136C();
    uint64_t v28 = sub_10019F7E4();
    unint64_t v29 = sub_1000E7DD8();
    uint64_t v76 = v28;
    unint64_t v77 = v29;
    swift_getWitnessTable();
    sub_100121584(v16, v11, (uint64_t)v19);
    uint64_t v30 = *(void (**)(void))(v55 + 8);
    sub_100163D14();
    v30();
    sub_100121584((uint64_t)v19, v11, v16);
    sub_10017EE98((uint64_t)&type metadata for DefaultBackgroundButtonStyle);
    uint64_t v31 = swift_getOpaqueTypeConformance2();
    sub_10017AFFC((uint64_t)&type metadata for FixedBackgroundButtonStyle);
    uint64_t v32 = swift_getOpaqueTypeConformance2();
    sub_100180C0C();
    uint64_t v33 = sub_10019F7E4();
    uint64_t v74 = v32;
    uint64_t v75 = v33;
    uint64_t v34 = swift_getWitnessTable();
    uint64_t v72 = v31;
    uint64_t v73 = v34;
    swift_getWitnessTable();
    sub_1000E95C0();
    sub_100163D14();
    v30();
    sub_100163D14();
    v30();
  }
  else
  {
    sub_1000E7E24(v59, v8);
    sub_10017EE98((uint64_t)&type metadata for DefaultBackgroundButtonStyle);
    uint64_t v35 = swift_getOpaqueTypeConformance2();
    sub_10017AFFC((uint64_t)&type metadata for FixedBackgroundButtonStyle);
    uint64_t v36 = swift_getOpaqueTypeConformance2();
    sub_100180C0C();
    uint64_t v37 = sub_10019F7E4();
    uint64_t v90 = v36;
    uint64_t v91 = v37;
    uint64_t v38 = swift_getWitnessTable();
    uint64_t v88 = v35;
    uint64_t v89 = v38;
    uint64_t v39 = v62;
    swift_getWitnessTable();
    uint64_t v40 = v56;
    sub_100121584(v8, v39, v56);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v41(v8, v39);
    sub_100121584(v40, v39, v8);
    sub_1001A136C();
    uint64_t v42 = sub_10019F7E4();
    unint64_t v43 = sub_1000E7DD8();
    uint64_t v86 = v42;
    unint64_t v87 = v43;
    swift_getWitnessTable();
    sub_100121F14();
    v41(v8, v39);
    v41(v40, v39);
  }
  sub_1001A136C();
  uint64_t v44 = sub_10019F7E4();
  unint64_t v45 = sub_1000E7DD8();
  uint64_t v84 = v44;
  unint64_t v85 = v45;
  uint64_t v46 = swift_getWitnessTable();
  sub_10017EE98((uint64_t)&type metadata for DefaultBackgroundButtonStyle);
  uint64_t v47 = swift_getOpaqueTypeConformance2();
  sub_10017AFFC((uint64_t)&type metadata for FixedBackgroundButtonStyle);
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  sub_100180C0C();
  uint64_t v49 = sub_10019F7E4();
  uint64_t v82 = v48;
  uint64_t v83 = v49;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v80 = v47;
  uint64_t v81 = v50;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v78 = v46;
  uint64_t v79 = v51;
  uint64_t v52 = v61;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v66, v52, v63);
  sub_1001842BC();
  return v53();
}

unint64_t sub_1000E7DD8()
{
  unint64_t result = qword_100EB1BD0;
  if (!qword_100EB1BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1BD0);
  }
  return result;
}

uint64_t sub_1000E7E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v3 = type metadata accessor for PlainButtonStyle();
  sub_100179C0C();
  uint64_t v104 = v4;
  __chkstk_darwin(v5);
  uint64_t v113 = a1;
  uint64_t v6 = type metadata accessor for Button();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v132 = v6;
  uint64_t v133 = (ValueMetadata *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v132 = v6;
  uint64_t v133 = (ValueMetadata *)WitnessTable;
  uint64_t v9 = sub_1001A3638();
  uint64_t v132 = OpaqueTypeMetadata2;
  uint64_t v133 = (ValueMetadata *)v9;
  swift_getOpaqueTypeMetadata2();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v132 = OpaqueTypeMetadata2;
  uint64_t v133 = (ValueMetadata *)v9;
  uint64_t v11 = sub_1001A3638();
  unint64_t v12 = sub_1000E8960();
  uint64_t v136 = v11;
  unint64_t v137 = v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = sub_1000E8A44((unint64_t *)&qword_100E70FB8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v132 = v10;
  uint64_t v133 = (ValueMetadata *)v3;
  uint64_t v121 = (ValueMetadata *)v3;
  uint64_t v122 = v14;
  uint64_t v134 = v13;
  unint64_t v135 = v14;
  uint64_t v15 = swift_getOpaqueTypeMetadata2();
  sub_100179C0C();
  uint64_t v103 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v102 = v18;
  __chkstk_darwin(v19);
  sub_100128F8C();
  sub_100109338(v20);
  unint64_t v21 = sub_1000E89F8();
  uint64_t v132 = v10;
  uint64_t v133 = &type metadata for FixedBackgroundButtonStyle;
  uint64_t v134 = v13;
  unint64_t v135 = v21;
  unint64_t v123 = v21;
  swift_getOpaqueTypeMetadata2();
  sub_100179C0C();
  uint64_t v100 = v22;
  __chkstk_darwin(v23);
  sub_10016278C();
  uint64_t v26 = v24 - v25;
  __chkstk_darwin(v27);
  sub_100128F8C();
  sub_100109328(v28);
  uint64_t v106 = v29;
  uint64_t v107 = v15;
  uint64_t v30 = type metadata accessor for _ConditionalContent();
  sub_100179C0C();
  uint64_t v110 = v31;
  __chkstk_darwin(v32);
  sub_100162EF8();
  uint64_t v109 = v33;
  __chkstk_darwin(v34);
  sub_100128F8C();
  sub_100109328(v35);
  uint64_t v36 = swift_checkMetadataState();
  sub_100179C0C();
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v99 - v38;
  unint64_t v40 = sub_1000E89AC();
  uint64_t v132 = v36;
  uint64_t v133 = &type metadata for DefaultBackgroundButtonStyle;
  uint64_t v115 = v13;
  uint64_t v134 = v13;
  unint64_t v135 = v40;
  uint64_t v41 = swift_getOpaqueTypeMetadata2();
  sub_100179C0C();
  uint64_t v105 = v42;
  __chkstk_darwin(v43);
  sub_10016278C();
  uint64_t v46 = v44 - v45;
  __chkstk_darwin(v47);
  sub_100128F8C();
  sub_100109328(v48);
  uint64_t v119 = v30;
  type metadata accessor for _ConditionalContent();
  sub_100179C0C();
  uint64_t v117 = v50;
  uint64_t v118 = v49;
  __chkstk_darwin(v49);
  sub_100109338((uint64_t)&v99 - v51);
  if (qword_100E62678 != -1) {
    swift_once();
  }
  unint64_t v112 = v40;
  if (byte_100F51C58 == 1)
  {
    sub_1000E8A8C(v113, (uint64_t)v39);
    uint64_t v52 = v115;
    View.buttonStyle<A>(_:)();
    uint64_t v53 = sub_1001A29F4();
    v54(v53);
    uint64_t v132 = v36;
    uint64_t v133 = &type metadata for DefaultBackgroundButtonStyle;
    uint64_t v134 = v52;
    unint64_t v135 = v40;
    swift_getOpaqueTypeConformance2();
    uint64_t v55 = v111;
    sub_100121584(v46, v41, v111);
    uint64_t v56 = *(void (**)(void))(v105 + 8);
    sub_1001841DC();
    v56();
    sub_100121584(v55, v41, v46);
    uint64_t v132 = v36;
    uint64_t v133 = &type metadata for FixedBackgroundButtonStyle;
    uint64_t v134 = v52;
    unint64_t v135 = v123;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v132 = v36;
    uint64_t v114 = v36;
    uint64_t v59 = v121;
    uint64_t v58 = v122;
    uint64_t v133 = v121;
    uint64_t v134 = v52;
    unint64_t v135 = v122;
    uint64_t v60 = sub_10019F7E4();
    uint64_t v124 = OpaqueTypeConformance2;
    uint64_t v125 = v60;
    swift_getWitnessTable();
    uint64_t v61 = v116;
    sub_1000E95C0();
    uint64_t v62 = v52;
    sub_1001841DC();
    v56();
    unint64_t v63 = v58;
    uint64_t v64 = v59;
    uint64_t v36 = v114;
    sub_1001841DC();
    v56();
    unint64_t v65 = v112;
  }
  else
  {
    uint64_t v111 = v41;
    int v66 = *(unsigned __int8 *)(v114 + 9);
    sub_1000E8A8C(v113, (uint64_t)v39);
    if (v66 == 1)
    {
      uint64_t v62 = v115;
      unint64_t v67 = v123;
      View.buttonStyle<A>(_:)();
      uint64_t v68 = sub_1001A29F4();
      v69(v68);
      uint64_t v132 = v36;
      uint64_t v133 = &type metadata for FixedBackgroundButtonStyle;
      uint64_t v134 = v62;
      unint64_t v135 = v67;
      sub_10019F7E4();
      uint64_t v70 = v99;
      uint64_t v71 = v106;
      sub_100121584(v26, v106, v99);
      uint64_t v72 = *(void (**)(void))(v100 + 8);
      sub_1001791A0();
      v72();
      sub_100121584(v70, v71, v26);
      uint64_t v132 = v36;
      uint64_t v133 = v121;
      uint64_t v134 = v62;
      unint64_t v135 = v122;
      sub_10019F7E4();
      uint64_t v73 = v108;
      sub_1000E95C0();
      sub_1001791A0();
      v72();
      sub_1001791A0();
      v72();
    }
    else
    {
      PlainButtonStyle.init()();
      uint64_t v74 = v102;
      uint64_t v75 = v121;
      unint64_t v76 = v122;
      uint64_t v62 = v115;
      View.buttonStyle<A>(_:)();
      sub_1001842BC();
      v77();
      uint64_t v78 = sub_1001A29F4();
      v79(v78);
      uint64_t v132 = v36;
      uint64_t v133 = v75;
      uint64_t v134 = v62;
      unint64_t v135 = v76;
      sub_10019F7E4();
      uint64_t v80 = v101;
      uint64_t v81 = v107;
      sub_100121584(v74, v107, v101);
      uint64_t v82 = *(void (**)(uint64_t))(v103 + 8);
      uint64_t v83 = sub_100182DD0();
      v82(v83);
      sub_100121584(v80, v81, v74);
      uint64_t v132 = v36;
      uint64_t v133 = &type metadata for FixedBackgroundButtonStyle;
      uint64_t v134 = v62;
      unint64_t v135 = v123;
      sub_10019F7E4();
      uint64_t v73 = v108;
      sub_100121F14();
      uint64_t v84 = sub_100182DD0();
      v82(v84);
      ((void (*)(uint64_t, uint64_t))v82)(v80, v81);
    }
    uint64_t v61 = v116;
    uint64_t v132 = v36;
    uint64_t v133 = &type metadata for FixedBackgroundButtonStyle;
    uint64_t v134 = v62;
    unint64_t v135 = v123;
    uint64_t v85 = swift_getOpaqueTypeConformance2();
    uint64_t v64 = v121;
    uint64_t v132 = v36;
    uint64_t v133 = v121;
    uint64_t v134 = v62;
    unint64_t v135 = v122;
    uint64_t v86 = sub_10019F7E4();
    uint64_t v130 = v85;
    uint64_t v131 = v86;
    uint64_t v87 = v119;
    swift_getWitnessTable();
    uint64_t v88 = v109;
    uint64_t v89 = v73;
    sub_100121584(v73, v87, v109);
    uint64_t v132 = v36;
    uint64_t v133 = &type metadata for DefaultBackgroundButtonStyle;
    unint64_t v65 = v112;
    uint64_t v134 = v62;
    unint64_t v135 = v112;
    sub_100181BCC();
    sub_100121F14();
    uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
    v90(v88, v87);
    uint64_t v91 = v89;
    unint64_t v63 = v122;
    v90(v91, v87);
  }
  uint64_t v132 = v36;
  uint64_t v133 = &type metadata for DefaultBackgroundButtonStyle;
  uint64_t v134 = v62;
  unint64_t v135 = v65;
  uint64_t v92 = swift_getOpaqueTypeConformance2();
  uint64_t v132 = v36;
  uint64_t v133 = &type metadata for FixedBackgroundButtonStyle;
  uint64_t v134 = v62;
  unint64_t v135 = v123;
  uint64_t v93 = sub_100181BCC();
  uint64_t v132 = v36;
  uint64_t v133 = v64;
  uint64_t v134 = v62;
  unint64_t v135 = v63;
  uint64_t v94 = sub_10019F7E4();
  uint64_t v128 = v93;
  uint64_t v129 = v94;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v126 = v92;
  uint64_t v127 = v95;
  uint64_t v96 = v118;
  swift_getWitnessTable();
  sub_100121584(v61, v96, v120);
  sub_1001842BC();
  return v97();
}

unint64_t sub_1000E8960()
{
  unint64_t result = qword_100EB1BB8;
  if (!qword_100EB1BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1BB8);
  }
  return result;
}

unint64_t sub_1000E89AC()
{
  unint64_t result = qword_100EB1BC0;
  if (!qword_100EB1BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1BC0);
  }
  return result;
}

unint64_t sub_1000E89F8()
{
  unint64_t result = qword_100EB1BC8;
  if (!qword_100EB1BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1BC8);
  }
  return result;
}

uint64_t sub_1000E8A44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E8A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v76 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v75 = *(void *)(v76 - 8);
  uint64_t v3 = __chkstk_darwin(v76);
  uint64_t v71 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v58 = *(void *)(a1 + 24);
  uint64_t v8 = type metadata accessor for Button();
  uint64_t v68 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v61 = (char *)&v53 - v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v86 = v8;
  uint64_t v87 = WitnessTable;
  uint64_t v11 = v8;
  uint64_t v62 = v8;
  uint64_t v12 = WitnessTable;
  uint64_t v63 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v65 = OpaqueTypeMetadata2;
  uint64_t v66 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v60 = (char *)&v53 - v14;
  uint64_t v86 = v11;
  uint64_t v87 = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v86 = OpaqueTypeMetadata2;
  uint64_t v87 = OpaqueTypeConformance2;
  uint64_t v69 = &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>;
  uint64_t v67 = swift_getOpaqueTypeMetadata2();
  uint64_t v73 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v79 = (char *)&v53 - v15;
  uint64_t v72 = type metadata accessor for ModifiedContent();
  uint64_t v74 = *(void *)(v72 - 8);
  uint64_t v16 = __chkstk_darwin(v72);
  uint64_t v80 = (uint64_t)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v70 = (uint64_t)&v53 - v18;
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v19 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v19;
  uint64_t v20 = v78;
  uint64_t v54 = a1;
  v59(v19, v78, a1);
  uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v57 = v22 + v6;
  uint64_t v56 = v21 | 7;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v58;
  *(void *)(v23 + 16) = v7;
  *(void *)(v23 + 24) = v24;
  uint64_t v55 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v55(v23 + v22, v19, a1);
  uint64_t v81 = v7;
  uint64_t v82 = v24;
  uint64_t v83 = v20;
  uint64_t v25 = v61;
  Button.init(action:label:)();
  uint64_t v26 = v53;
  uint64_t v27 = v54;
  v59(v53, v20, v54);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v7;
  *(void *)(v28 + 24) = v24;
  uint64_t v29 = v27;
  v55(v28 + v22, v26, v27);
  uint64_t v30 = v60;
  uint64_t v31 = v62;
  View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v25, v31);
  uint64_t v32 = v71;
  static AccessibilityChildBehavior.contain.getter();
  uint64_t v33 = v65;
  uint64_t v34 = OpaqueTypeConformance2;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v32, v76);
  uint64_t v35 = v33;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v30, v33);
  uint64_t v36 = v78 + *(int *)(v29 + 48);
  uint64_t v37 = *(void *)v36;
  uint64_t v38 = *(void *)(v36 + 8);
  LOBYTE(v24) = *(unsigned char *)(v36 + 16);
  uint64_t v39 = *(void *)(v36 + 24);
  long long v95 = 0u;
  long long v96 = 0u;
  sub_100190CC4(v37, v38, v24);
  uint64_t v76 = v39;
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EA3A00);
  State.init(wrappedValue:)();
  uint64_t v40 = v86;
  uint64_t v41 = v87;
  uint64_t v42 = v88;
  uint64_t v43 = v89;
  uint64_t v78 = v90;
  uint64_t v86 = v37;
  uint64_t v87 = v38;
  LOBYTE(v88) = v24;
  uint64_t v89 = v39;
  uint64_t v90 = v40;
  uint64_t v91 = v41;
  uint64_t v92 = v42;
  uint64_t v93 = v43;
  uint64_t v94 = v78;
  *(void *)&long long v95 = v35;
  *((void *)&v95 + 1) = v34;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v45 = v67;
  uint64_t v46 = v79;
  View.modifier<A>(_:)();
  sub_100191924(v37, v38, v24);
  swift_bridgeObjectRelease();
  sub_100147E60(v40, v41, v42, v43);
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v46, v45);
  unint64_t v47 = sub_1000E8960();
  uint64_t v84 = v44;
  unint64_t v85 = v47;
  uint64_t v48 = v72;
  swift_getWitnessTable();
  uint64_t v49 = v70;
  uint64_t v50 = v80;
  sub_100121584(v80, v48, v70);
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
  v51(v50, v48);
  sub_100121584(v49, v48, v77);
  return ((uint64_t (*)(uint64_t, uint64_t))v51)(v49, v48);
}

uint64_t sub_1000E9324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 + 10 + a1) & ~v10;
  uint64_t v12 = (v10 + 10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 48) + 7;
  uint64_t v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  unint64_t v17 = ((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = ((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  LOBYTE(v9) = *(unsigned char *)(v18 + 16);
  swift_retain();
  sub_100190CC4(v19, v20, v9);
  *(void *)unint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  *(unsigned char *)(v17 + 16) = v9;
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  unint64_t v21 = (v17 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v26 = v25 + 23;
  unint64_t v27 = v25 + 23 + v21;
  unint64_t v28 = ~v25 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = v27 & v28;
  uint64_t v30 = (v26 + v22) & v28;
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v23))
  {
    int v31 = *(_DWORD *)(v24 + 84);
    uint64_t v32 = *(void *)(v24 + 64);
    if (v31) {
      size_t v33 = *(void *)(v24 + 64);
    }
    else {
      size_t v33 = v32 + 1;
    }
    memcpy((void *)v29, (const void *)v30, v33);
  }
  else
  {
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    uint64_t v34 = v24 + 16;
    v35(v29, v30, v23);
    _s7Weather24LocationCompositionStateOwst_0(v29, 0, 1, v23);
    int v31 = *(_DWORD *)(v34 + 68);
    uint64_t v32 = *(void *)(v34 + 48);
  }
  if (v31) {
    uint64_t v36 = v32;
  }
  else {
    uint64_t v36 = v32 + 1;
  }
  *(void *)(((v29 | 7) + v36) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v30 | 7) + v36) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t destroy for WeatherComponentButtonAccessibilityLabelModifier(uint64_t a1)
{
  sub_100191924(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    sub_100191924(*(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

void sub_1000E95C0()
{
  sub_10010977C();
  sub_10012BFF0();
  sub_100162E4C();
  __chkstk_darwin(v0);
  sub_100162880();
  sub_10008B8B4();
  v1();
  swift_storeEnumTagMultiPayload();
  sub_1005EFD90();
  sub_100162714();
}

uint64_t sub_1000E966C()
{
  uint64_t v178 = type metadata accessor for UUID();
  uint64_t v176 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v175 = (char *)&v147 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v173);
  uint64_t v179 = (char *)&v147 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v172);
  char v177 = (uint64_t *)((char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for TimeState();
  __chkstk_darwin(v4 - 8);
  uint64_t v195 = (uint64_t)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for NotificationsOptInState();
  __chkstk_darwin(v171);
  uint64_t v174 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationsState();
  __chkstk_darwin(v7 - 8);
  uint64_t v192 = (uint64_t)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = type metadata accessor for EnvironmentState();
  __chkstk_darwin(v161);
  uint64_t v194 = (uint64_t)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EB74D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v169 = (uint64_t)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100EB74D8);
  __chkstk_darwin(v12 - 8);
  uint64_t v168 = (uint64_t)&v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EB74E0);
  __chkstk_darwin(v14 - 8);
  uint64_t v167 = (uint64_t)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EB74E8);
  __chkstk_darwin(v16 - 8);
  uint64_t v166 = (uint64_t)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EB74F0);
  __chkstk_darwin(v18 - 8);
  uint64_t v165 = (uint64_t)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100EB74F8);
  __chkstk_darwin(v20 - 8);
  uint64_t v164 = (uint64_t)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100EB7500);
  __chkstk_darwin(v22 - 8);
  uint64_t v163 = (uint64_t)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100EB7508);
  __chkstk_darwin(v24 - 8);
  uint64_t v162 = (uint64_t)&v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100EB7510);
  __chkstk_darwin(v26 - 8);
  uint64_t v160 = (uint64_t)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100EB7518);
  __chkstk_darwin(v28 - 8);
  uint64_t v190 = (uint64_t)&v147 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100EB7520);
  __chkstk_darwin(v30 - 8);
  uint64_t v189 = (uint64_t)&v147 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100EB7528);
  __chkstk_darwin(v32 - 8);
  uint64_t v188 = (uint64_t)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100EB7530);
  __chkstk_darwin(v34 - 8);
  uint64_t v187 = (uint64_t)&v147 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10017DF08(&qword_100EB7538);
  __chkstk_darwin(v36 - 8);
  uint64_t v186 = (uint64_t)&v147 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10017DF08(&qword_100EB7540);
  __chkstk_darwin(v38 - 8);
  uint64_t v185 = (uint64_t)&v147 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100EB7548);
  __chkstk_darwin(v40 - 8);
  uint64_t v184 = (uint64_t)&v147 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100EB7550);
  __chkstk_darwin(v42 - 8);
  uint64_t v183 = (uint64_t)&v147 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08(&qword_100EB7558);
  __chkstk_darwin(v44 - 8);
  uint64_t v182 = (uint64_t)&v147 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10017DF08(&qword_100EB7560);
  __chkstk_darwin(v46 - 8);
  uint64_t v181 = (uint64_t)&v147 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v48 - 8);
  uint64_t v180 = (uint64_t)&v147 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for AppConfigurationState();
  __chkstk_darwin(v50 - 8);
  uint64_t v193 = (uint64_t)&v147 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for WeatherCoalescedLocationResult();
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v53 = (char *)&v147 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for Location();
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v147 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v58 - 8);
  uint64_t v157 = (uint64_t)&v147 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  uint64_t v158 = (char *)&v147 - v61;
  __chkstk_darwin(v62);
  uint64_t v64 = (char *)&v147 - v63;
  __chkstk_darwin(v65);
  uint64_t v67 = (char *)&v147 - v66;
  uint64_t v68 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v68 - 8);
  char v159 = (char *)&v147 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v70);
  uint64_t v72 = (char *)&v147 - v71;
  uint64_t v73 = *(void *)(v0 + 88);
  uint64_t v191 = (uint64_t *)v0;
  uint64_t v156 = (void *)(v0 + 64);
  sub_1001B1E64((void *)(v0 + 64), v73);
  dispatch thunk of LocationManagerType.currentLocation.getter();
  sub_1000EB4E0((uint64_t)v67, (uint64_t)v64);
  int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v54);
  uint64_t v149 = v55;
  uint64_t v148 = v57;
  uint64_t v152 = v54;
  if (v74 == 1)
  {
    uint64_t v75 = type metadata accessor for CurrentLocation();
    uint64_t v76 = (uint64_t)v72;
    uint64_t v77 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v57, v64, v54);
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v72, v57, v54);
    uint64_t v78 = type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
    uint64_t v76 = (uint64_t)v72;
    uint64_t v77 = 0;
    uint64_t v75 = v78;
  }
  _s7Weather24LocationCompositionStateOwst_0(v76, v77, 1, v75);
  sub_1001781AC((uint64_t)v67, &qword_100E639E8);
  uint64_t v79 = v191;
  uint64_t v80 = v191[16];
  uint64_t v154 = v191 + 13;
  sub_1001B1E64(v191 + 13, v80);
  dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
  sub_1001B1E64(v79 + 18, v79[21]);
  uint64_t v81 = dispatch thunk of LocationsOfInterestManagerType.locations.getter();
  sub_1001B1E64(v79 + 23, v79[26]);
  int v170 = v72;
  uint64_t v155 = v81;
  dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:)();
  swift_bridgeObjectRelease();
  uint64_t v153 = WeatherCoalescedLocationResult.coalescedLocations.getter();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v53, v151);
  uint64_t v82 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0(v180, 1, 1, v82);
  uint64_t v83 = type metadata accessor for AppStoreReviewConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v181, 1, 1, v83);
  uint64_t v84 = type metadata accessor for FeaturesConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v182, 1, 1, v84);
  uint64_t v85 = type metadata accessor for GeocodeConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v183, 1, 1, v85);
  uint64_t v86 = type metadata accessor for HistoricalFactsConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v184, 1, 1, v86);
  uint64_t v87 = type metadata accessor for LocationsConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v185, 1, 1, v87);
  uint64_t v88 = type metadata accessor for MapsConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v186, 1, 1, v88);
  uint64_t v89 = type metadata accessor for NetworkConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v187, 1, 1, v89);
  uint64_t v90 = type metadata accessor for NewsConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v188, 1, 1, v90);
  uint64_t v91 = type metadata accessor for NotificationsConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v189, 1, 1, v91);
  uint64_t v92 = type metadata accessor for PrivacyConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v190, 1, 1, v92);
  uint64_t v93 = type metadata accessor for WidgetPrivacyConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v160, 1, 1, v93);
  uint64_t v94 = type metadata accessor for ProviderAttributionConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v162, 1, 1, v94);
  uint64_t v95 = type metadata accessor for ReportWeatherConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v163, 1, 1, v95);
  uint64_t v96 = type metadata accessor for TemperatureScaleConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v164, 1, 1, v96);
  uint64_t v97 = type metadata accessor for UnitConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v165, 1, 1, v97);
  uint64_t v98 = type metadata accessor for WeatherDataConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v166, 1, 1, v98);
  uint64_t v99 = type metadata accessor for WeatherDataServiceConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v167, 1, 1, v99);
  uint64_t v100 = type metadata accessor for WeatherMenuConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v168, 1, 1, v100);
  uint64_t v101 = type metadata accessor for WidgetConfiguration();
  _s7Weather24LocationCompositionStateOwst_0(v169, 1, 1, v101);
  AppConfiguration.init(lastRefreshed:appConfigRefreshTimeInterval:locationDecimalPrecision:reverseGeocodingRefreshTimeInterval:appStoreReview:endpoints:features:geocode:historicalFacts:locationsConfiguration:maps:namedNetworkConfigurations:network:news:notifications:privacy:widgetPrivacy:providerAttribution:reportWeather:temperatureScale:unitConfiguration:weatherData:weatherDataService:weatherMenu:widget:languageConfigs:fallbackLanguage:treatmentIDs:segmentSetIDs:)();
  uint64_t v102 = (int *)v161;
  uint64_t v103 = v194;
  static Locale.current.getter();
  Swift::String CurrentCountry = GeocodeManagerGetCurrentCountryCode()();
  LOBYTE(v80) = UIAccessibilityIsReduceMotionEnabled();
  BOOL IsSwitchControlRunning = UIAccessibilityIsSwitchControlRunning();
  BOOL IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
  sub_1000EC078();
  *(_WORD *)uint64_t v103 = 1;
  *(unsigned char *)(v103 + 2) = 3;
  *(Swift::String *)(v103 + v102[8]) = CurrentCountry;
  *(unsigned char *)(v103 + v102[9]) = v80;
  *(unsigned char *)(v103 + v102[10]) = IsSwitchControlRunning;
  *(unsigned char *)(v103 + v102[11]) = IsVoiceOverRunning;
  *(unsigned char *)(v103 + v102[12]) = 0;
  *(void *)(v103 + v102[13]) = 0;
  *(unsigned char *)(v103 + v102[14]) = 0;
  *(unsigned char *)(v103 + v102[15]) = 0;
  *(unsigned char *)(v103 + v102[16]) = 0;
  uint64_t v107 = (_OWORD *)(v103 + v102[17]);
  long long v108 = v197;
  *uint64_t v107 = v196;
  v107[1] = v108;
  v107[2] = v198;
  sub_1001B1E64(v156, v79[11]);
  uint64_t v109 = (uint64_t)v158;
  dispatch thunk of LocationManagerType.currentLocation.getter();
  uint64_t v110 = v157;
  sub_1000EB4E0(v109, v157);
  uint64_t v111 = v152;
  if (_s7Weather24LocationCompositionStateOwet_0(v110, 1, v152) == 1)
  {
    uint64_t v112 = type metadata accessor for CurrentLocation();
    uint64_t v113 = (uint64_t)v159;
    uint64_t v114 = 1;
  }
  else
  {
    uint64_t v115 = v149;
    uint64_t v116 = v148;
    (*(void (**)(char *, uint64_t, uint64_t))(v149 + 32))(v148, v110, v111);
    uint64_t v117 = v159;
    (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v159, v116, v111);
    uint64_t v118 = type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v111);
    uint64_t v113 = (uint64_t)v117;
    uint64_t v114 = 0;
    uint64_t v112 = v118;
  }
  _s7Weather24LocationCompositionStateOwst_0(v113, v114, 1, v112);
  sub_1001781AC(v109, &qword_100E639E8);
  uint64_t v119 = v191;
  sub_1001B1E64(v154, v191[16]);
  dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
  sub_1001B1E64(v119 + 28, v119[31]);
  dispatch thunk of LocationDisplayContextManagerType.fetchDisplayContextByLocation()();
  sub_1001CF8D0();
  uint64_t v120 = (int *)v171;
  uint64_t v121 = (uint64_t)v174;
  Date.init(timeIntervalSince1970:)();
  *(unsigned char *)uint64_t v121 = 0;
  *(void *)(v121 + 8) = &_swiftEmptySetSingleton;
  *(_DWORD *)(v121 + 16) = 0;
  *(unsigned char *)(v121 + v120[11]) = 0;
  *(unsigned char *)(v121 + v120[12]) = 0;
  *(unsigned char *)(v121 + v120[13]) = 0;
  *(unsigned char *)(v121 + v120[14]) = 0;
  *(unsigned char *)(v121 + v120[15]) = 0;
  *(unsigned char *)(v121 + v120[16]) = 0;
  Date.init()();
  type metadata accessor for ListViewState._Storage();
  swift_allocObject();
  uint64_t v122 = sub_1000EC58C(0, 0, 1, 0, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
  unint64_t v123 = (int *)v172;
  uint64_t v124 = v177;
  sub_1000EB68C((uint64_t)v119, (uint64_t *)((char *)v177 + *(int *)(v172 + 20)));
  BOOL v125 = sub_1000EBEC0(v119);
  uint64_t v126 = (uint64_t *)((char *)v124 + v123[8]);
  uint64_t v127 = type metadata accessor for SearchViewState(0);
  type metadata accessor for SearchViewState.ViewState(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126 + *(int *)(v127 + 28), 1, 1, v111);
  *uint64_t v126 = 0;
  v126[1] = 0xE000000000000000;
  *((unsigned char *)v126 + *(int *)(v127 + 24)) = 0;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v127);
  sub_1000EAD40((uint64_t)v124 + v123[9]);
  uint64_t v128 = (_WORD *)((char *)v124 + v123[10]);
  uint64_t v129 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v130 = (char *)v128 + v129[6];
  uint64_t v131 = enum case for WeatherMapPrecipitationOverlayKind.auto(_:);
  uint64_t v132 = type metadata accessor for WeatherMapPrecipitationOverlayKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v132 - 8) + 104))(v130, v131, v132);
  uint64_t v133 = enum case for WeatherMapOverlayKind.precipitation(_:);
  uint64_t v134 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v134 - 8) + 104))(v130, v133, v134);
  uint64_t v135 = (uint64_t)v128 + v129[8];
  uint64_t v136 = sub_10017DF08(&qword_100E66460);
  _s7Weather24LocationCompositionStateOwst_0(v135, 3, 3, v136);
  *uint64_t v128 = -32764;
  unint64_t v137 = (void *)((char *)v128 + v129[7]);
  *unint64_t v137 = 0;
  v137[1] = 0;
  *((unsigned char *)v128 + v129[9]) = 1;
  uint64_t *v124 = v122;
  *((unsigned char *)v124 + v123[6]) = 0;
  *((unsigned char *)v124 + v123[7]) = v125;
  *((unsigned char *)v124 + v123[11]) = 0;
  uint64_t v138 = (uint64_t)v179;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for LocationWeatherDataState(0);
  uint64_t v191 = (uint64_t *)Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for LocationAvailableDataSetState(0);
  uint64_t v139 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v140 = v175;
  UUID.init()();
  uint64_t v141 = UUID.uuidString.getter();
  uint64_t v143 = v142;
  (*(void (**)(char *, uint64_t))(v176 + 8))(v140, v178);
  type metadata accessor for WeatherCondition();
  uint64_t v144 = Dictionary.init(dictionaryLiteral:)();
  sub_1001781AC((uint64_t)v170, (uint64_t *)&unk_100EADD50);
  type metadata accessor for MainState._Storage(0);
  swift_allocObject();
  *((void *)&v146 + 1) = v143;
  *(void *)&long long v146 = v141;
  return sub_10016E888((uint64_t)&_swiftEmptySetSingleton, 2, v193, v194, v192, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, 0, v121, v195, (uint64_t)v124, v138, v146, (uint64_t)v191, v139, 0, v144, (uint64_t)&_swiftEmptyDictionarySingleton);
}

double sub_1000EAD00@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationHeaderViewMeasurements(0);
  sub_1000EAD40((uint64_t)a1 + *(int *)(v2 + 32));
  double result = 0.0;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void sub_1000EAD40(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v3 - 8);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10012B938();
  id v11 = [self sharedApplication];
  uint64_t v12 = (void *)UIApplication.maybeWindow.getter();

  if (v12)
  {
    sub_1000EB04C(v12, a1);
  }
  else
  {
    if (qword_100E627B0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1002102B0(v13, (uint64_t)qword_100F51E28);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "DisplayMetrics.expectedWindowMetrics used fallback window display metrics.", v16, 2u);
      swift_slowDealloc();
    }

    id v17 = [self currentTraitCollection];
    id v18 = [self currentDevice];
    uint64_t v19 = sub_1000EB548();

    id v20 = [v17 horizontalSizeClass];
    id v21 = [v17 preferredContentSizeCategory];
    DynamicTypeSize.init(_:)();
    if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7) == 1)
    {
      (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v1, enum case for DynamicTypeSize.medium(_:), v7);
      sub_100B5B438(v6);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v1, v6, v7);
    }
    *(void *)a1 = v19;
    *(void *)(a1 + 8) = v20;
    *(_WORD *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 18) = 0;
    uint64_t v22 = type metadata accessor for DisplayMetrics();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a1 + *(int *)(v22 + 36), v1, v7);
  }
}

void sub_1000EB04C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v35);
  sub_10012B938();
  uint64_t v5 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v5 - 8);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100125FF8();
  id v34 = [a1 interfaceOrientation];
  id v13 = [a1 traitCollection];
  id v33 = [v13 horizontalSizeClass];

  [a1 bounds];
  double v15 = v14;
  id v16 = [a1 screen];
  [v16 bounds];
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;

  v37.origin.x = v18;
  v37.origin.y = v20;
  v37.size.width = v22;
  v37.size.height = v24;
  double v25 = v15 / CGRectGetWidth(v37);
  [a1 bounds];
  BOOL v27 = sub_1000EB408(v26);
  [a1 bounds];
  char v29 = sub_1000EB37C(v28);
  id v30 = [a1 traitCollection];
  id v31 = [v30 preferredContentSizeCategory];

  DynamicTypeSize.init(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v3, enum case for DynamicTypeSize.medium(_:), v9);
    sub_100B5B438(v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v3, v8, v9);
  }
  *(void *)uint64_t v2 = v34;
  *(void *)(v2 + 8) = v33;
  if (v25 == 1.0)
  {
    char v32 = 0;
  }
  else if (vabdd_f64(0.5, v25) <= 0.05)
  {
    char v32 = 2;
  }
  else if (v25 > 0.5)
  {
    char v32 = 1;
  }
  else
  {
    char v32 = 3;
  }
  *(unsigned char *)(v2 + 16) = v32;
  *(unsigned char *)(v2 + 17) = v27;
  *(unsigned char *)(v2 + 18) = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v2 + *(int *)(v35 + 36), v3, v9);
  sub_1000EB47C(v2, a2);
}

uint64_t sub_1000EB37C(double a1)
{
  for (uint64_t i = 3; ; --i)
  {
    if (!*((unsigned char *)&off_100E060B0 + i + 31))
    {
      if (a1 >= 0.0 || i == 1) {
        return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
      }
      goto LABEL_13;
    }
    if (*((unsigned char *)&off_100E060B0 + i + 31) != 1) {
      break;
    }
    if (a1 >= 1024.0) {
      return static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    }
LABEL_12:
    if (i == 1) {
      return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    }
LABEL_13:
    uint64_t v3 = i - 2;
    if (v3 >= 3)
    {
      __break(1u);
      return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    }
  }
  if (a1 < 1200.0) {
    goto LABEL_12;
  }
  return 2;
}

BOOL sub_1000EB408(double a1)
{
  char v1 = 0;
  BOOL result = a1 >= 1024.0;
  uint64_t v3 = &_mh_execute_header.magic + 1;
  do
  {
    while (*((unsigned char *)&off_100E06088 + v3 + 32) == 1)
    {
      uint64_t v3 = 0;
      char v4 = (a1 >= 1024.0) | v1;
      char v1 = 1;
      if (v4) {
        return result;
      }
    }
    uint64_t v3 = 0;
    unsigned __int8 v5 = v1 ^ 1;
    char v1 = 1;
  }
  while (((a1 < 0.0) & v5) != 0);
  return 0;
}

uint64_t sub_1000EB47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DisplayMetrics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000EB4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000EB548()
{
  unint64_t v1 = (unint64_t)[v0 orientation];
  if (v1 > 6) {
    return 0;
  }
  if (((1 << v1) & 0x61) != 0)
  {
    uint64_t v3 = self;
    id v4 = [v3 mainScreen];
    [v4 bounds];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;

    v23.origin.x = v6;
    v23.origin.y = v8;
    v23.size.width = v10;
    v23.size.height = v12;
    double Width = CGRectGetWidth(v23);
    id v14 = [v3 mainScreen];
    [v14 bounds];
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;
    CGFloat v22 = v21;

    v24.origin.x = v16;
    v24.origin.y = v18;
    v24.size.width = v20;
    v24.size.height = v22;
    if (CGRectGetHeight(v24) >= Width) {
      return 1;
    }
    else {
      return 3;
    }
  }
  else if (((1 << v1) & 6) != 0)
  {
    return 1;
  }
  else
  {
    return 3;
  }
}

uint64_t sub_1000EB68C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v71 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for Location();
  uint64_t v69 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v68 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E66678);
  __chkstk_darwin(v7 - 8);
  double v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  CGFloat v12 = (char *)&v60 - v11;
  uint64_t v73 = type metadata accessor for SavedLocation();
  uint64_t v13 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v64 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  double v17 = (char *)&v60 - v16;
  __chkstk_darwin(v18);
  uint64_t v70 = (uint64_t)&v60 - v19;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v67 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  CGRect v24 = (char *)&v60 - v23;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if ((*(unsigned char *)(a1 + 264) & 1) == 0)
  {
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E629F8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    uint64_t v25 = v74;
    uint64_t v26 = v75;
  }
  uint64_t v27 = static Location.currentLocationID.getter();
  if (v26)
  {
    if (v25 == v27 && v26 == v28)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_100BCE110(a1, (uint64_t)v24);
      goto LABEL_43;
    }
    uint64_t v63 = v9;
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v63 = v9;
    swift_bridgeObjectRelease();
  }
  uint64_t v65 = (void *)a1;
  uint64_t v66 = v24;
  uint64_t v31 = *(void *)(a1 + 128);
  uint64_t v61 = (void *)(a1 + 104);
  sub_1001B1E64((void *)(a1 + 104), v31);
  uint64_t v32 = dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
  uint64_t v33 = *(void *)(v32 + 16);
  if (!v33)
  {
LABEL_25:
    uint64_t v40 = v73;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  uint64_t v62 = a2;
  uint64_t v34 = v32 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v35 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10018D110(v34, (uint64_t)v17, (void (*)(void))&type metadata accessor for SavedLocation);
    uint64_t v36 = SavedLocation.id.getter();
    if (!v26)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    if (v36 == v25 && v26 == v37) {
      break;
    }
    char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_29;
    }
LABEL_23:
    sub_1000EBE64((uint64_t)v17);
    v34 += v35;
    if (!--v33)
    {
      swift_bridgeObjectRelease();
      a2 = v62;
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
LABEL_29:
  swift_bridgeObjectRelease();
  sub_10017DE8C((uint64_t)v17, (uint64_t)v12, (void (*)(void))&type metadata accessor for SavedLocation);
  uint64_t v40 = v73;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a2 = v62;
LABEL_30:
  CGRect v24 = v66;
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v40);
  uint64_t v42 = v65;
  if (v41 != 1)
  {
    uint64_t v50 = v70;
    sub_10017DE8C((uint64_t)v12, v70, (void (*)(void))&type metadata accessor for SavedLocation);
    SavedLocation.identifier.getter();
    sub_1000EBE64(v50);
LABEL_39:
    uint64_t v49 = type metadata accessor for Location.Identifier();
    uint64_t v53 = (uint64_t)v24;
    uint64_t v54 = 0;
    goto LABEL_42;
  }
  sub_1001781AC((uint64_t)v12, &qword_100E66678);
  sub_1001B1E64(v42 + 8, v42[11]);
  uint64_t v43 = (uint64_t)v71;
  dispatch thunk of LocationManagerType.currentLocation.getter();
  uint64_t v44 = v72;
  if (_s7Weather24LocationCompositionStateOwet_0(v43, 1, v72) != 1)
  {
    uint64_t v51 = v68;
    uint64_t v52 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v68, v43, v44);
    Location.identifier.getter();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v44);
    goto LABEL_39;
  }
  sub_1001781AC(v43, &qword_100E639E8);
  uint64_t v45 = v61;
  sub_1001B1E64(v61, v42[16]);
  uint64_t v46 = *(void *)(dispatch thunk of SavedLocationsManagerType.savedLocations.getter() + 16);
  swift_bridgeObjectRelease();
  if (!v46)
  {
    uint64_t v49 = type metadata accessor for Location.Identifier();
    goto LABEL_41;
  }
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.StubData.singleCity.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if (v74 != 1) {
    goto LABEL_36;
  }
  sub_1001B1E64(v45, v42[16]);
  uint64_t v47 = dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
  uint64_t v48 = (uint64_t)v63;
  sub_10043F79C(v47, (uint64_t)v63);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v40) == 1)
  {
    sub_1001781AC(v48, &qword_100E66678);
LABEL_36:
    uint64_t v49 = type metadata accessor for Location.Identifier();
    CGRect v24 = v67;
LABEL_41:
    uint64_t v53 = (uint64_t)v24;
    uint64_t v54 = 1;
LABEL_42:
    _s7Weather24LocationCompositionStateOwst_0(v53, v54, 1, v49);
  }
  else
  {
    uint64_t v56 = v48;
    uint64_t v57 = v64;
    sub_10017DE8C(v56, v64, (void (*)(void))&type metadata accessor for SavedLocation);
    SavedLocation.identifier.getter();
    sub_1000EBE64(v57);
    uint64_t v58 = type metadata accessor for Location.Identifier();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v58);
    uint64_t v59 = (uint64_t)v24;
    CGRect v24 = v67;
    sub_10017DE8C(v59, (uint64_t)v67, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  }
LABEL_43:
  type metadata accessor for LocationViewerViewState._Storage(0);
  swift_allocObject();
  *a2 = sub_1001CCEF8((uint64_t)v24, 0, 0, 2, 0, 0);
  type metadata accessor for ViewState.SecondaryViewState(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000EBE64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SavedLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1000EBEC0(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E629F8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v11[0] || v11[1] != 0xE000000000000000)
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1001B1E64(a1 + 8, a1[11]);
  dispatch thunk of LocationManagerType.currentLocation.getter();
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v7 = 1;
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v6);
  sub_1001781AC((uint64_t)v4, &qword_100E639E8);
  if (v8 == 1)
  {
    sub_1001B1E64(a1 + 13, a1[16]);
    uint64_t v9 = *(void *)(dispatch thunk of SavedLocationsManagerType.savedLocations.getter() + 16);
    swift_bridgeObjectRelease();
    return v9 != 0;
  }
  return v7;
}

void sub_1000EC078()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v5 = sub_10017DF08(qword_100E77770);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011BFD8();
  uint64_t v7 = sub_10017DF08(&qword_100E77758);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v9 = sub_10017DF08(&qword_100E6F620);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = sub_10017DF08(&qword_100E77768);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_10017DF08(&qword_100E77760);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_10011BA28();
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  UnitManager.preferredPrecipitationUnit.getter();
  swift_release();
  uint64_t v24 = type metadata accessor for UnitConfiguration.Precipitation();
  sub_10012B520(v2, 1, v24);
  if (v25)
  {
    sub_100178254(v2, &qword_100E77760);
    static UnitManager.standard.getter();
    uint64_t v42 = UnitManager.precipitationRainfall.getter();
    swift_release();
  }
  else
  {
    uint64_t v42 = UnitConfiguration.Precipitation.asUnit.getter();
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v2, v24);
  }
  static UnitManager.standard.getter();
  UnitManager.preferredPressureUnit.getter();
  swift_release();
  uint64_t v27 = type metadata accessor for UnitConfiguration.Pressure();
  sub_10012B520(v21, 1, v27);
  if (v25)
  {
    sub_100178254(v21, &qword_100E77768);
    static UnitManager.standard.getter();
    uint64_t v28 = UnitManager.pressure.getter();
    swift_release();
  }
  else
  {
    uint64_t v28 = UnitConfiguration.Pressure.asUnit.getter();
    sub_100162880();
    sub_10017B290();
    v29();
  }
  static UnitManager.standard.getter();
  UnitManager.preferredTemperatureUnit.getter();
  swift_release();
  uint64_t v30 = type metadata accessor for UnitConfiguration.Temperature();
  sub_10012B520((uint64_t)v16, 1, v30);
  if (v25)
  {
    sub_100178254((uint64_t)v16, &qword_100E6F620);
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v31 = UnitConfiguration.Temperature.asUnit.getter();
    sub_100162880();
    sub_10017B290();
    v32();
  }
  static UnitManager.standard.getter();
  UnitManager.systemWideTemperatureUnit.getter();
  swift_release();
  sub_10012B520(v13, 1, v30);
  if (v25)
  {
    sub_100178254(v13, &qword_100E6F620);
    uint64_t v33 = 0;
  }
  else
  {
    uint64_t v33 = UnitConfiguration.Temperature.asUnit.getter();
    sub_100162880();
    sub_10017B290();
    v34();
  }
  static UnitManager.standard.getter();
  UnitManager.preferredDistanceUnit.getter();
  swift_release();
  uint64_t v35 = type metadata accessor for UnitConfiguration.Distance();
  sub_10012B520(v1, 1, v35);
  if (v25)
  {
    sub_100178254(v1, &qword_100E77758);
    static UnitManager.standard.getter();
    uint64_t v36 = UnitManager.visibility.getter();
    swift_release();
  }
  else
  {
    uint64_t v36 = UnitConfiguration.Distance.asUnit.getter();
    sub_100162880();
    sub_10017B290();
    v37();
  }
  static UnitManager.standard.getter();
  UnitManager.preferredWindUnit.getter();
  swift_release();
  uint64_t v38 = type metadata accessor for UnitConfiguration.WindSpeed();
  sub_10012B520(v0, 1, v38);
  if (v25)
  {
    sub_100178254(v0, qword_100E77770);
    static UnitManager.standard.getter();
    uint64_t v39 = UnitManager.windSpeed.getter();
    swift_release();
  }
  else
  {
    uint64_t v39 = UnitConfiguration.WindSpeed.asUnit.getter();
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v0, v38);
  }
  *uint64_t v4 = v42;
  v4[1] = v28;
  v4[2] = v31;
  v4[3] = v33;
  v4[4] = v36;
  v4[5] = v39;
  sub_100162694();
}

uint64_t sub_1000EC58C(uint64_t a1, char a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, char a14)
{
  *(void *)(v14 + 16) = a1;
  *(unsigned char *)(v14 + 24) = a2 & 1;
  *(unsigned char *)(v14 + 25) = a3;
  *(unsigned char *)(v14 + 26) = a4;
  *(unsigned char *)(v14 + 27) = a5;
  *(void *)(v14 + 32) = a6;
  *(void *)(v14 + 40) = a7;
  *(void *)(v14 + 48) = a8;
  *(void *)(v14 + 56) = a9;
  *(unsigned char *)(v14 + 64) = a10;
  *(void *)(v14 + 72) = a11;
  *(void *)(v14 + 80) = a12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 88) = a13 & 1;
  *(unsigned char *)(v14 + 89) = a14;
  return v14;
}

Swift::Void __swiftcall SessionEventsAndDataCoordinator.sceneDidBecomeActive()()
{
  uint64_t v2 = v0;
  uint64_t started = type metadata accessor for StartMethod();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10012B938();
  sub_1001B1E64((void *)(v0 + 248), *(void *)(v0 + 272));
  sub_1000EDE3C(&qword_100E76AD8, (void (*)(uint64_t))type metadata accessor for SessionEventsAndDataCoordinator);
  sub_1001A2C24();
  dispatch thunk of AppConfigurationManagerType.addObserver(_:)();
  sub_1001B1E64((void *)(v2 + 288), *(void *)(v2 + 312));
  sub_1000EDE3C(&qword_100E76AE0, (void (*)(uint64_t))type metadata accessor for SessionEventsAndDataCoordinator);
  sub_1001A2C24();
  dispatch thunk of LocationManagerType.addObserver(_:)();
  UnfairLock.lock()();
  if ((*(unsigned char *)(v0 + 336) & 1) == 0)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v1, enum case for StartMethod.homeScreenIconTap(_:), started);
    uint64_t v7 = v0 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v7, v1, started);
    swift_endAccess();
    sub_1000ECC08();
  }
  *(unsigned char *)(v2 + 336) = 0;
  UnfairLock.unlock()();
}

void sub_1000EC7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  sub_100162EA0();
  uint64_t v24 = (void *)v23;
  uint64_t v44 = v25;
  uint64_t v45 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v47 = v35;
  uint64_t v49 = v36;
  uint64_t v37 = type metadata accessor for UnfairLock.Options();
  __chkstk_darwin(v37);
  sub_1001626E0();
  sub_10017DF08(&qword_100E62C98);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_100C251B0;
  static UnfairLock.Options.dataSynchronization.getter();
  *(void *)&v50[0] = v38;
  sub_1000EDE3C((unint64_t *)&qword_100E62CA0, (void (*)(uint64_t))&type metadata accessor for UnfairLock.Options);
  sub_10017DF08(&qword_100E62CA8);
  sub_1001246C8((unint64_t *)&qword_100E62CB0, &qword_100E62CA8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v23 + 328) = UnfairLock.init(options:)();
  *(unsigned char *)(v23 + 336) = 0;
  uint64_t v39 = v23 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod;
  uint64_t v40 = enum case for StartMethod.unknown(_:);
  type metadata accessor for StartMethod();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v41 + 104))(v39, v40);
  *(void *)((char *)v24 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_lastPushedTemperatureUnit) = 0;
  v24[3] = v47;
  v24[4] = v34;
  swift_retain();
  v24[2] = SessionManager.tracker.getter();
  v24[5] = v44;
  sub_10020D948((uint64_t)v32, (uint64_t)(v24 + 6));
  uint64_t v46 = v30;
  sub_10020D948(v30, (uint64_t)(v24 + 11));
  uint64_t v48 = v28;
  sub_10020D948(v28, (uint64_t)(v24 + 16));
  sub_10020D948(v49, (uint64_t)(v24 + 21));
  sub_10020D948(v45, (uint64_t)(v24 + 26));
  sub_10020D948(a21, (uint64_t)(v24 + 31));
  sub_10020D948(a22, (uint64_t)(v24 + 36));
  *((unsigned char *)v24 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_purpose) = a23;
  id v42 = v44;
  sub_1000EF1B0();
  sub_1000F06B0();
  sub_1000EFC8C();
  sub_1000EDEF0();
  sub_1000ECC08();
  sub_1000EF4D0();
  sub_1000EE374();
  sub_1000EF9A0();
  sub_1001B1E64(v32, v32[3]);
  sub_1000EDE3C(&qword_100E76C50, (void (*)(uint64_t))type metadata accessor for SessionEventsAndDataCoordinator);
  swift_retain();
  dispatch thunk of IdentityServiceType.addObserver(_:)();
  swift_release();
  if (a23 == 2)
  {
    sub_10020D948(a21, (uint64_t)v50);
    uint64_t v43 = swift_allocObject();
    sub_1001262E4(v50, v43 + 16);
    *(void *)(v43 + 56) = v24;
    swift_retain();
    Tracker.onSessionChange(block:)();
    swift_release();
    swift_retain();
    SessionObserver.dispose(on:)();
    swift_release();

    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a22);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a21);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v45);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v49);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v48);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v46);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
  sub_100162694();
}

uint64_t sub_1000ECC08()
{
  uint64_t v0 = sub_10017DF08(&qword_100E76D18);
  uint64_t v99 = *(void *)(v0 - 8);
  uint64_t v100 = v0;
  __chkstk_darwin(v0);
  uint64_t v98 = (char *)v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for AppConfiguration();
  uint64_t v96 = *(void *)(v2 - 8);
  uint64_t v97 = v2;
  __chkstk_darwin(v2);
  uint64_t v95 = (void (*)(void))((char *)v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for CellularRadioAccessTechnology();
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  __chkstk_darwin(v4);
  uint64_t v90 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E76D20);
  __chkstk_darwin(v6 - 8);
  uint64_t v103 = (uint64_t)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for LocationAccessData();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E76D28);
  __chkstk_darwin(v9 - 8);
  uint64_t v102 = (uint64_t)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartMethod();
  uint64_t v83 = *(void *)(started - 8);
  __chkstk_darwin(started);
  uint64_t v82 = (char *)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E76D30);
  __chkstk_darwin(v12 - 8);
  *(void *)&long long v101 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E76D38);
  __chkstk_darwin(v14 - 8);
  uint64_t v80 = (uint64_t)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for Locale.Language();
  unint64_t v78 = *(void *)(v79 - 8);
  uint64_t v16 = __chkstk_darwin(v79);
  uint64_t v77 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v74 - v18;
  uint64_t v76 = type metadata accessor for Locale();
  unint64_t v104 = *(void *)(v76 - 8);
  uint64_t v20 = __chkstk_darwin(v76);
  uint64_t v75 = (char *)v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v74 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E63DC0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for TimeZone();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for SessionData();
  uint64_t v91 = *(void *)(v35 - 8);
  uint64_t v92 = v35;
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v88 = (char *)v74 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v89 = (char *)v74 - v38;
  static TimeZone.current.getter();
  Date.init()();
  uint64_t v39 = TimeZone.secondsFromGMT(for:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  if (v39 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v39 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v74[1] = v39;
  static Locale.current.getter();
  Locale.language.getter();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v104 + 8);
  uint64_t v42 = v76;
  v104 += 8;
  v41(v23, v76);
  Locale.Language.languageCode.getter();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v78 + 8);
  uint64_t v44 = v79;
  v43(v19, v79);
  uint64_t v45 = type metadata accessor for Locale.LanguageCode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v45) == 1)
  {
    sub_100178110((uint64_t)v26, &qword_100E63DC0);
    unint64_t v78 = 0xE100000000000000;
    v74[0] = 45;
  }
  else
  {
    v74[0] = Locale.LanguageCode.identifier.getter();
    unint64_t v78 = v46;
    (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v26, v45);
  }
  uint64_t v47 = v80;
  uint64_t v48 = v75;
  static Locale.current.getter();
  uint64_t v49 = v77;
  Locale.language.getter();
  v41(v48, v42);
  Locale.Language.region.getter();
  v43(v49, v44);
  uint64_t v50 = type metadata accessor for Locale.Region();
  if (_s7Weather24LocationCompositionStateOwet_0(v47, 1, v50) == 1)
  {
    sub_100178110(v47, &qword_100E76D38);
    unint64_t v104 = 0xE100000000000000;
    uint64_t v80 = 45;
  }
  else
  {
    uint64_t v80 = Locale.Region.identifier.getter();
    unint64_t v104 = v51;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v47, v50);
  }
  uint64_t v52 = v81;
  uint64_t v53 = (char *)v81 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_startMethod;
  swift_beginAccess();
  uint64_t v54 = v83;
  uint64_t v55 = (uint64_t)v82;
  uint64_t v56 = v53;
  uint64_t v57 = started;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v82, v56, started);
  sub_1000EDA8C(v55, (uint64_t (*)(void))&type metadata accessor for StartMethod, v101);
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v57);
  sub_1001B1E64(v52 + 21, v52[24]);
  uint64_t v58 = (uint64_t)v85;
  dispatch thunk of LocationAccessDataProviderType.locationAccessData.getter();
  sub_1000EDA8C(v58, (uint64_t (*)(void))&type metadata accessor for LocationAccessData, v102);
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v58, v87);
  sub_1001B1E64(v52 + 16, v52[19]);
  uint64_t v59 = (uint64_t)v90;
  dispatch thunk of CellularRadioAccessTechnologyProviderType.cellularRadioAccessTechnology.getter();
  sub_1000EDA8C(v59, (uint64_t (*)(void))&type metadata accessor for CellularRadioAccessTechnology, v103);
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v59, v94);
  sub_1001B1E64(v52 + 31, v52[34]);
  uint64_t v60 = v95;
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  uint64_t v61 = AppConfiguration.treatmentIDs.getter();
  uint64_t v62 = v97;
  uint64_t v63 = *(void (**)(void (*)(void), uint64_t))(v96 + 8);
  v63(v60, v97);
  sub_1000EDB38(v61);
  swift_bridgeObjectRelease();
  sub_1001B1E64(v52 + 31, v52[34]);
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  uint64_t v64 = AppConfiguration.segmentSetIDs.getter();
  v63(v60, v62);
  sub_1000EDB38(v64);
  swift_bridgeObjectRelease();
  uint64_t v65 = v89;
  SessionData.init(utcOffset:languageCode:countryCode:startMethod:productType:locationAccess:cellularRadioAccessTechnology:userSegmentationTreatmentIDs:userSegmentationSegmentSetIDs:)();
  unint64_t v104 = v52[4];
  SessionManager.tracker.getter();
  uint64_t v103 = sub_10017DF08(&qword_100E6E1F0);
  uint64_t v97 = type metadata accessor for DataEventTrait();
  uint64_t v66 = *(void *)(v97 - 8);
  uint64_t v67 = *(unsigned __int8 *)(v66 + 80);
  uint64_t v68 = (v67 + 32) & ~v67;
  uint64_t v102 = v67 | 7;
  uint64_t v69 = swift_allocObject();
  long long v101 = xmmword_100C251B0;
  *(_OWORD *)(v69 + 16) = xmmword_100C251B0;
  LODWORD(v96) = enum case for DataEventTrait.unique(_:);
  uint64_t v95 = *(void (**)(void))(v66 + 104);
  v95(v69 + v68);
  sub_1000EDE3C(&qword_100E76D40, (void (*)(uint64_t))&type metadata accessor for SessionData);
  uint64_t v70 = v92;
  Tracker.push<A>(data:traits:file:line:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v71 = v91;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v65, v70);
  uint64_t v72 = v98;
  SessionData.init(key:data:)();
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = v101;
  ((void (*)(uint64_t, void, uint64_t))v95)(v73 + v68, v96, v97);
  SessionManager.push<A>(_:traits:file:line:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v72, v100);
  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v65, v70);
}

uint64_t sub_1000EDA8C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  char v6 = Tracker.diagnosticSubmissionAllowed.getter();
  uint64_t v7 = a2(0);
  if (v6) {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, a1, v7);
  }
  uint64_t v8 = sub_1001A1650();

  return _s7Weather24LocationCompositionStateOwst_0(v8, v9, v10, v11);
}

uint64_t sub_1000EDB38(uint64_t a1)
{
  if ((Tracker.diagnosticSubmissionAllowed.getter() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000EDB78(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v8 = sub_10017DF08(&qword_100E646B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for LayoutSubview();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000EDD68();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1) {
    return sub_100178110((uint64_t)v10, &qword_100E646B8);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v17.origin.x = a1;
  v17.origin.y = a2;
  v17.size.width = a3;
  v17.size.height = a4;
  CGRectGetMinX(v17);
  v18.origin.x = a1;
  v18.origin.y = a2;
  v18.size.width = a3;
  v18.size.height = a4;
  CGRectGetMinY(v18);
  static UnitPoint.topLeading.getter();
  v16[8] = 0;
  v16[0] = 0;
  LayoutSubview.place(at:anchor:proposal:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1000EDD68()
{
  type metadata accessor for LayoutSubviews();
  sub_1000EDE3C(&qword_100E70808, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  sub_100183AF4();
  sub_1001D18EC();
  sub_1001A3204();
  if (v1)
  {
    type metadata accessor for LayoutSubview();
    uint64_t v13 = sub_100162E38();
  }
  else
  {
    sub_10017A2AC();
    sub_1001A4610();
    type metadata accessor for LayoutSubview();
    sub_100162E4C();
    uint64_t v2 = sub_10019EAC0();
    uint64_t v4 = v3(v2);
    uint64_t v12 = sub_1001A07D0(v4, v5, v6, v7, v8, v9, v10, v11, v18, v19);
    v0(v12);
    uint64_t v13 = sub_10017E3FC();
  }
  return _s7Weather24LocationCompositionStateOwst_0(v13, v14, v15, v16);
}

uint64_t sub_1000EDE3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EDE84@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F0900(a1);
}

uint64_t type metadata accessor for SessionEventsAndDataCoordinator()
{
  uint64_t result = qword_100E76B48;
  if (!qword_100E76B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000EDEF0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E76C90);
  uint64_t v25 = *(void *)(v0 - 8);
  uint64_t v26 = v0;
  __chkstk_darwin(v0);
  uint64_t v24 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DebugData();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = type metadata accessor for CharacterSet();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Settings.WeatherAnalytics.Debugging.sessionName.getter();
  sub_1000EDE3C(&qword_100E76C98, (void (*)(uint64_t))type metadata accessor for SessionEventsAndDataCoordinator);
  Configurable.setting<A>(_:)();
  swift_release();
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10014A85C();
  uint64_t v12 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15) {
    return swift_bridgeObjectRelease();
  }
  DebugData.init(name:)();
  uint64_t v16 = v23;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v5, v7, v2);
  sub_1000EDE3C(&qword_100E76CA0, (void (*)(uint64_t))&type metadata accessor for DebugData);
  CGRect v17 = v24;
  SessionData.init(key:data:)();
  sub_10017DF08(&qword_100E6E1F0);
  uint64_t v18 = type metadata accessor for DataEventTrait();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, enum case for DataEventTrait.unique(_:), v18);
  SessionManager.push<A>(_:traits:file:line:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v7, v2);
}

uint64_t sub_1000EE374()
{
  uint64_t v1 = sub_10017DF08(&qword_100E76D08);
  uint64_t v74 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UserData();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v73 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v61 - v8;
  uint64_t v10 = type metadata accessor for Calendar.Identifier();
  uint64_t v80 = *(void *)(v10 - 8);
  *(void *)&long long v81 = v10;
  __chkstk_darwin(v10);
  uint64_t v79 = (void (*)(void))((char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v12 - 8);
  uint64_t v85 = (uint64_t)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v82 = v14;
  uint64_t v83 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v76 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v61 - v18;
  uint64_t v84 = type metadata accessor for UserIdentity();
  uint64_t v78 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Calendar();
  uint64_t v77 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DateComponents();
  uint64_t result = __chkstk_darwin(v25);
  uint64_t v86 = v0;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_purpose))
  {
    uint64_t v70 = v28;
    uint64_t v71 = result;
    uint64_t v69 = v9;
    uint64_t v65 = v5;
    uint64_t v66 = v4;
    uint64_t v67 = v3;
    uint64_t v68 = v1;
    uint64_t v75 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    static Calendar.current.getter();
    sub_10017DF08(&qword_100E65238);
    uint64_t v29 = type metadata accessor for Calendar.Component();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(void *)(v30 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_100C25ED0;
    unint64_t v34 = v33 + v32;
    uint64_t v35 = *(void (**)(unint64_t, void, uint64_t))(v30 + 104);
    v35(v34, enum case for Calendar.Component.year(_:), v29);
    v35(v34 + v31, enum case for Calendar.Component.month(_:), v29);
    sub_1000EEDB0(v33);
    uint64_t v72 = v21;
    uint64_t v36 = *(void *)(v86 + 72);
    uint64_t v63 = (void *)(v86 + 48);
    sub_1001B1E64((void *)(v86 + 48), v36);
    dispatch thunk of IdentityServiceType.identity.getter();
    UserIdentity.startDate.getter();
    uint64_t v62 = *(void (**)(char *, uint64_t))(v78 + 8);
    v62(v21, v84);
    uint64_t v37 = v75;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v38 = v82;
    uint64_t v78 = *(void *)(v83 + 8);
    uint64_t v64 = v83 + 8;
    ((void (*)(char *, uint64_t))v78)(v19, v82);
    uint64_t v39 = *(void (**)(char *, uint64_t))(v77 + 8);
    v39(v24, v22);
    DateComponents.day.setter();
    uint64_t v41 = v79;
    uint64_t v40 = v80;
    uint64_t v42 = v81;
    (*(void (**)(void (*)(void), void, void))(v80 + 104))(v79, enum case for Calendar.Identifier.gregorian(_:), v81);
    Calendar.init(identifier:)();
    (*(void (**)(void (*)(void), uint64_t))(v40 + 8))(v41, v42);
    uint64_t v43 = v85;
    Calendar.date(from:)();
    v39(v24, v22);
    int v44 = _s7Weather24LocationCompositionStateOwet_0(v43, 1, v38);
    uint64_t v45 = v86;
    uint64_t v46 = v84;
    uint64_t v47 = v72;
    if (v44 == 1)
    {
      (*(void (**)(char *, uint64_t))(v70 + 8))(v37, v71);
      return sub_100178110(v85, (uint64_t *)&unk_100E73CA0);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v83 + 32))(v76, v85, v38);
    uint64_t result = Date.timeIntervalSince1970.getter();
    double v49 = v48 * 1000.0;
    if ((~*(void *)&v49 & 0x7FF0000000000000) != 0)
    {
      if (v49 > -9.22337204e18)
      {
        if (v49 < 9.22337204e18)
        {
          sub_1001B1E64(v63, *(void *)(v45 + 72));
          dispatch thunk of IdentityServiceType.identity.getter();
          UserIdentity.identifier.getter();
          v62(v47, v46);
          uint64_t v50 = v69;
          UserData.init(userID:userStartDate:)();
          uint64_t v86 = *(void *)(v45 + 32);
          SessionManager.tracker.getter();
          uint64_t v85 = sub_10017DF08(&qword_100E6E1F0);
          uint64_t v51 = type metadata accessor for DataEventTrait();
          uint64_t v52 = *(void *)(v51 - 8);
          uint64_t v53 = *(void *)(v52 + 72);
          uint64_t v54 = *(unsigned __int8 *)(v52 + 80);
          uint64_t v55 = (v54 + 32) & ~v54;
          uint64_t v83 = v54 | 7;
          uint64_t v84 = v55 + v53;
          uint64_t v56 = swift_allocObject();
          long long v81 = xmmword_100C251B0;
          *(_OWORD *)(v56 + 16) = xmmword_100C251B0;
          LODWORD(v80) = enum case for DataEventTrait.unique(_:);
          uint64_t v79 = *(void (**)(void))(v52 + 104);
          v79(v56 + v55);
          sub_1000EDE3C(&qword_100E76D10, (void (*)(uint64_t))&type metadata accessor for UserData);
          uint64_t v57 = v66;
          Tracker.push<A>(data:traits:file:line:)();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v58 = v65;
          (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v73, v50, v57);
          uint64_t v59 = v67;
          SessionData.init(key:data:)();
          uint64_t v60 = swift_allocObject();
          *(_OWORD *)(v60 + 16) = v81;
          ((void (*)(uint64_t, void, uint64_t))v79)(v60 + v55, v80, v51);
          SessionManager.push<A>(_:traits:file:line:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v74 + 8))(v59, v68);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v69, v57);
          ((void (*)(char *, uint64_t))v78)(v76, v82);
          return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v75, v71);
        }
LABEL_11:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1000EEDB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v32 = v3;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v27 - v8;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = &_swiftEmptySetSingleton;
    goto LABEL_16;
  }
  sub_10017DF08(&qword_100E6D0F0);
  uint64_t result = sub_10017FA94();
  uint64_t v10 = (unsigned char *)result;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  unint64_t v11 = 0;
  uint64_t v30 = a1 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
  uint64_t v34 = v32 + 16;
  uint64_t v35 = result + 56;
  uint64_t v12 = (void (**)(char *, uint64_t))(v32 + 8);
  uint64_t v28 = a1;
  uint64_t v29 = (uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32);
  while (v11 < *(void *)(a1 + 16))
  {
    uint64_t v13 = *(void *)(v32 + 72);
    uint64_t v14 = *(void (**)(void))(v32 + 16);
    sub_100179F98();
    v14();
    sub_1000EF090(&qword_100E6D0F8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
    uint64_t v15 = dispatch thunk of Hashable._rawHashValue(seed:)() & ~(-1 << v10[32]);
    sub_10019E830();
    if ((v18 & v17) != 0)
    {
      unint64_t v33 = v11;
      uint64_t v20 = ~v19;
      while (1)
      {
        sub_100179F98();
        v14();
        sub_1000EF090(&qword_100E6D100, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
        char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v22 = *v12;
        (*v12)(v7, v2);
        if (v21) {
          break;
        }
        uint64_t v15 = (v15 + 1) & v20;
        sub_10019E830();
        if ((v17 & v18) == 0)
        {
          a1 = v28;
          unint64_t v11 = v33;
          goto LABEL_10;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v36, v2);
      a1 = v28;
      unint64_t v11 = v33;
    }
    else
    {
LABEL_10:
      uint64_t v23 = v36;
      *(void *)(v35 + 8 * v16) = v18 | v17;
      uint64_t result = (*v29)(*((void *)v10 + 6) + v15 * v13, v23, v2);
      uint64_t v24 = *((void *)v10 + 2);
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_18;
      }
      *((void *)v10 + 2) = v26;
    }
    if (++v11 == v31) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000EF090(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EF0D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EF120(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EF168(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000EF1B0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E76CE0);
  uint64_t v15 = *(void *)(v0 - 8);
  uint64_t v16 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AppData();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - v8;
  Client.version.getter();
  Client.buildNumber.getter();
  AppData.init(appVersion:appBuildNumber:)();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_1000EDE3C(&qword_100E76CE8, (void (*)(uint64_t))&type metadata accessor for AppData);
  SessionData.init(key:data:)();
  sub_10017DF08(&qword_100E6E1F0);
  uint64_t v10 = type metadata accessor for DataEventTrait();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, enum case for DataEventTrait.unique(_:), v10);
  SessionManager.push<A>(_:traits:file:line:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

void sub_1000EF4D0()
{
  sub_1000EF56C();
  id v1 = [self defaultCenter];
  id updated = (id)static UnitManager.Notification.didUpdateUnits.getter();
  [v1 addObserver:v0 selector:"pushTemperatureScaleData" name:updated object:0];
}

void sub_1000EF56C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E76C88);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TemperatureScaleData();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)v27 - v11;
  if (Tracker.diagnosticSubmissionAllowed.getter())
  {
    uint64_t v28 = v5;
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    id v29 = (id)UnitManager.temperature.getter();
    swift_release();
    uint64_t v13 = OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_lastPushedTemperatureUnit;
    uint64_t v14 = *(void **)(v0 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_lastPushedTemperatureUnit);
    if (v14
      && (sub_1001ABC4C(0, (unint64_t *)&qword_100E65130),
          id v15 = v14,
          char v16 = static NSObject.== infix(_:_:)(),
          v15,
          (v16 & 1) != 0))
    {
      id v17 = v29;
    }
    else
    {
      id v18 = v29;
      TemperatureScaleData.init(_:)();
      uint64_t v19 = *(void **)(v1 + v13);
      *(void *)(v1 + v13) = v29;
      id v29 = v18;

      void v27[3] = *(void *)(v1 + 32);
      SessionManager.tracker.getter();
      uint64_t v20 = sub_1000EDE3C(&qword_100E74D48, (void (*)(uint64_t))&type metadata accessor for TemperatureScaleData);
      v27[2] = 0x8000000100C9FAB0;
      v27[1] = v20;
      Tracker.push<A>(data:traits:file:line:)();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
      char v21 = v28;
      SessionData.init(key:data:)();
      sub_10017DF08(&qword_100E6E1F0);
      uint64_t v22 = type metadata accessor for DataEventTrait();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
      v27[0] = v2;
      uint64_t v25 = (v24 + 32) & ~v24;
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
      (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v26 + v25, enum case for DataEventTrait.unique(_:), v22);
      SessionManager.push<A>(_:traits:file:line:)();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, void))(v3 + 8))(v21, v27[0]);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
  }
}

uint64_t sub_1000EF9A0()
{
  uint64_t v1 = type metadata accessor for UserIdentity();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PrivateUserData();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Weather31SessionEventsAndDataCoordinator_purpose))
  {
    SessionManager.tracker.getter();
    sub_1001B1E64((void *)(v0 + 48), *(void *)(v0 + 72));
    dispatch thunk of IdentityServiceType.identity.getter();
    UserIdentity.privateIdentifier.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    PrivateUserData.init(privateUserID:)();
    sub_10017DF08(&qword_100E6E1F0);
    uint64_t v10 = type metadata accessor for DataEventTrait();
    uint64_t v11 = *(void *)(v10 - 8);
    unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100C251B0;
    (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, enum case for DataEventTrait.unique(_:), v10);
    sub_1000EDE3C(&qword_100E71968, (void (*)(uint64_t))&type metadata accessor for PrivateUserData);
    Tracker.push<A>(data:traits:file:line:)();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

void sub_1000EFC8C()
{
  id v1 = [self currentDevice];
  [v1 beginGeneratingDeviceOrientationNotifications];

  sub_1000EFD48();
  id v2 = [self defaultCenter];
  [v2 addObserver:v0 selector:"pushOrientationData" name:UIDeviceOrientationDidChangeNotification object:0];
}

uint64_t sub_1000EFD48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E76CA8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for InterfaceOrientation();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DeviceOrientation();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OrientationData();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  double v49 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v17 = (char *)&v36 - v16;
  uint64_t result = Tracker.diagnosticSubmissionAllowed.getter();
  if (result)
  {
    uint64_t v43 = v17;
    uint64_t v44 = v13;
    uint64_t v45 = v12;
    id v19 = [self currentDevice];
    id v20 = [v19 orientation];

    sub_1000F05C8((uint64_t)v20, (uint64_t)v11);
    id v21 = [self sharedApplication];
    id v22 = [v21 connectedScenes];

    sub_1001ABC4C(0, &qword_100E76CB0);
    sub_1000F0308(&qword_100E76CB8, &qword_100E76CB0);
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000F0358();
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v47 = v3;
    uint64_t v48 = v2;
    uint64_t v46 = v5;
    if (v24)
    {
      self;
      uint64_t v25 = (void *)swift_dynamicCastObjCClass();
      char v26 = v25 == 0;
      if (v25) {
        id v27 = [v25 interfaceOrientation];
      }
      else {
        id v27 = 0;
      }
      uint64_t v28 = v43;
    }
    else
    {
      id v27 = 0;
      char v26 = 1;
      uint64_t v28 = v43;
    }
    sub_1000F04F4((uint64_t)v27, v26, (uint64_t)v8);
    OrientationData.init(deviceOrientation:interfaceOrientation:)();
    uint64_t v43 = *(char **)(v1 + 32);
    SessionManager.tracker.getter();
    uint64_t v42 = sub_10017DF08(&qword_100E6E1F0);
    uint64_t v39 = type metadata accessor for DataEventTrait();
    uint64_t v29 = *(void *)(v39 - 8);
    unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    unint64_t v41 = v30 + *(void *)(v29 + 72);
    uint64_t v31 = swift_allocObject();
    long long v40 = xmmword_100C251B0;
    *(_OWORD *)(v31 + 16) = xmmword_100C251B0;
    unsigned int v38 = enum case for DataEventTrait.unique(_:);
    uint64_t v37 = *(void (**)(unint64_t))(v29 + 104);
    v37(v31 + v30);
    sub_1000EDE3C(&qword_100E76CC0, (void (*)(uint64_t))&type metadata accessor for OrientationData);
    uint64_t v32 = v45;
    Tracker.push<A>(data:traits:file:line:)();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v33 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v49, v28, v32);
    uint64_t v34 = v46;
    SessionData.init(key:data:)();
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v40;
    ((void (*)(unint64_t, void, uint64_t))v37)(v35 + v30, v38, v39);
    SessionManager.push<A>(_:traits:file:line:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v28, v32);
  }
  return result;
}

uint64_t sub_1000F0308(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1001ABC4C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000F0358()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  if ((v0 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = __CocoaSet.startIndex.getter();
    uint64_t v6 = v5;
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v4 = sub_10044263C(v0);
    uint64_t v6 = v8;
    uint64_t v7 = v9 & 1;
  }
  uint64_t v10 = sub_1000F046C(v3);
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  char v15 = sub_1000F04C0(v4, v6, v7, v10, v11, v13 & 1);
  sub_1000F0460(v10, v12, v14);
  if ((v15 & 1) == 0) {
    sub_10001C104(v4, v6, v7, v3, v2);
  }
  sub_1000F0460(v4, v6, v7);
  sub_100162694();
}

uint64_t sub_1000F0460(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000F046C(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return __CocoaSet.endIndex.getter();
  }
  else {
    return 1 << *(unsigned char *)(a1 + 32);
  }
}

uint64_t sub_1000F04C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) == 0)
  {
    if ((a6 & 1) == 0)
    {
      if (a2 == a5) {
        return a1 == a4;
      }
      __break(1u);
    }
    goto LABEL_8;
  }
  if ((a6 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    return static __CocoaSet.Index.== infix(_:_:)(a1, a2, a3, a4);
  }
  a3 = a4;
  a4 = a5;
  return static __CocoaSet.Index.== infix(_:_:)(a1, a2, a3, a4);
}

uint64_t sub_1000F04F4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if (a2)
  {
LABEL_3:
    uint64_t v4 = (unsigned int *)&enum case for InterfaceOrientation.unknown(_:);
  }
  else
  {
    switch(a1)
    {
      case 1:
        uint64_t v4 = (unsigned int *)&enum case for InterfaceOrientation.portrait(_:);
        break;
      case 2:
        uint64_t v4 = (unsigned int *)&enum case for InterfaceOrientation.portraitUpsideDown(_:);
        break;
      case 3:
        uint64_t v4 = (unsigned int *)&enum case for InterfaceOrientation.landscapeRight(_:);
        break;
      case 4:
        uint64_t v4 = (unsigned int *)&enum case for InterfaceOrientation.landscapeLeft(_:);
        break;
      default:
        goto LABEL_3;
    }
  }
  uint64_t v5 = *v4;
  uint64_t v6 = type metadata accessor for InterfaceOrientation();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v7(a3, v5, v6);
}

uint64_t sub_1000F05C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = (unsigned int *)&enum case for DeviceOrientation.portrait(_:);
      break;
    case 2:
      uint64_t v3 = (unsigned int *)&enum case for DeviceOrientation.portraitUpsideDown(_:);
      break;
    case 3:
      uint64_t v3 = (unsigned int *)&enum case for DeviceOrientation.landscapeLeft(_:);
      break;
    case 4:
      uint64_t v3 = (unsigned int *)&enum case for DeviceOrientation.landscapeRight(_:);
      break;
    case 5:
      uint64_t v3 = (unsigned int *)&enum case for DeviceOrientation.faceUp(_:);
      break;
    case 6:
      uint64_t v3 = (unsigned int *)&enum case for DeviceOrientation.faceDown(_:);
      break;
    default:
      uint64_t v3 = (unsigned int *)&enum case for DeviceOrientation.unknown(_:);
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = type metadata accessor for DeviceOrientation();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a2, v4, v5);
}

uint64_t sub_1000F06B0()
{
  swift_retain();
  SessionManager.transaction(_:)();

  return swift_release();
}

uint64_t sub_1000F070C(uint64_t a1)
{
  void (*v11)(void *__return_ptr, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void v17[3];
  void v18[3];

  uint64_t v2 = type metadata accessor for EnvironmentState();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocationsState();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t))(a1 + 16);
  v11(v18, v8);
  sub_10016698C(v18[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v10, (void (*)(void))type metadata accessor for LocationsState);
  swift_release();
  uint64_t v12 = *(void *)&v10[*(int *)(v7 + 28)];
  swift_bridgeObjectRetain();
  char v13 = sub_1001592F0((uint64_t)v10, (void (*)(void))type metadata accessor for LocationsState);
  v11(v18, v13);
  char v14 = v18[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  sub_10016698C(v14, (uint64_t)v5, (void (*)(void))type metadata accessor for EnvironmentState);
  swift_release();
  char v15 = *(void *)&v5[*(int *)(v3 + 60)];
  sub_1001592F0((uint64_t)v5, (void (*)(void))type metadata accessor for EnvironmentState);
  v17[1] = v12;
  v17[2] = v15;
  sub_10017DF08(&qword_100EB6230);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t sub_1000F0900@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EnvironmentState();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v14[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void *__return_ptr, uint64_t))(v1 + 16))(v14, v4);
  uint64_t v7 = v14[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  sub_1000F1324(v7, (uint64_t)v6);
  swift_release();
  uint64_t v8 = v6[2];
  sub_1000F12C8((uint64_t)v6);
  switch(v8)
  {
    case 1:
      uint64_t v9 = (unsigned int *)&enum case for CellularRadioAccessTechnology.wifi(_:);
      break;
    case 2:
    case 3:
      uint64_t v9 = (unsigned int *)&enum case for CellularRadioAccessTechnology.unknown(_:);
      break;
    case 4:
      uint64_t v9 = (unsigned int *)&enum case for CellularRadioAccessTechnology.notReachable(_:);
      break;
    default:
      uint64_t v9 = (unsigned int *)&enum case for CellularRadioAccessTechnology.wwan(_:);
      break;
  }
  uint64_t v10 = *v9;
  uint64_t v11 = type metadata accessor for CellularRadioAccessTechnology();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
}

uint64_t sub_1000F0A5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1000F0AB0();
  *a1 = result;
  return result;
}

uint64_t sub_1000F0A88()
{
  return sub_1007FCD4C((uint64_t)&v1);
}

uint64_t sub_1000F0AB0()
{
  return sub_1001AB118();
}

double sub_1000F0AD4@<D0>(unsigned __int8 a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, unsigned char *a9@<X8>, char a10, char a11, char a12, uint64_t a13, char a14, char a15, char a16, uint64_t a17)
{
  uint64_t v18 = v17;
  int v106 = a8;
  int v104 = a7;
  uint64_t v107 = a6;
  uint64_t v122 = a5;
  uint64_t v116 = a4;
  int v120 = a2;
  int v121 = a3;
  uint64_t v113 = a9;
  int v114 = a1;
  uint64_t v111 = a17;
  sub_1000F1388(a17, (uint64_t)v123);
  uint64_t v102 = (void *)v123[0];
  long long v101 = (void *)v123[1];
  uint64_t v100 = (void *)v123[2];
  uint64_t v99 = (void *)v123[3];
  uint64_t v98 = (void *)v123[4];
  uint64_t v97 = (void *)v123[5];
  uint64_t v19 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v19 - 8);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v103 = v24;
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v119 = v26;
  uint64_t v118 = type metadata accessor for EnvironmentState();
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v32);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v33);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v97 - v35;
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v97 - v38;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v97 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v97 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v97 - v47;
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v97 - v50;
  __chkstk_darwin(v52);
  uint64_t v54 = (unsigned __int8 *)&v97 - v53;
  sub_1000F1324(v18, (uint64_t)&v97 - v53);
  if (v114 == 2) {
    int v55 = *v54;
  }
  else {
    int v55 = v114 & 1;
  }
  int v114 = v55;
  sub_1000F12C8((uint64_t)v54);
  sub_1000F1324(v18, (uint64_t)v51);
  if (v120 == 5) {
    int v120 = v51[1];
  }
  sub_1000F12C8((uint64_t)v51);
  sub_1000F1324(v18, (uint64_t)v48);
  if (v121 == 5) {
    int v121 = v48[2];
  }
  sub_1000F12C8((uint64_t)v48);
  sub_1000F1540(v116, v22);
  sub_1000F1324(v18, (uint64_t)v45);
  int v56 = _s7Weather24LocationCompositionStateOwet_0(v22, 1, v23);
  uint64_t v57 = v122;
  uint64_t v58 = (int *)v118;
  if (v56 == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v103 + 16))(v119, &v45[*(int *)(v118 + 28)], v23);
    sub_1000F12C8((uint64_t)v45);
    sub_10012B8A0(v22);
  }
  else
  {
    sub_1000F12C8((uint64_t)v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))(v119, v22, v23);
  }
  uint64_t v59 = v107;
  char v60 = v106;
  uint64_t v61 = v105;
  int v62 = v104;
  sub_1000F1324(v18, (uint64_t)v42);
  if (v59)
  {
    uint64_t v116 = v59;
  }
  else
  {
    uint64_t v63 = (uint64_t *)&v42[v58[8]];
    uint64_t v57 = *v63;
    uint64_t v116 = v63[1];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1000F12C8((uint64_t)v42);
  sub_1000F1324(v18, (uint64_t)v39);
  if (v62 == 2) {
    int v64 = v39[v58[9]];
  }
  else {
    int v64 = v62 & 1;
  }
  LODWORD(v107) = v64;
  sub_1000F12C8((uint64_t)v39);
  sub_1000F1324(v18, (uint64_t)v36);
  if (v60 == 2) {
    int v65 = v36[v58[10]];
  }
  else {
    int v65 = v60 & 1;
  }
  int v106 = v65;
  uint64_t v66 = v111;
  uint64_t v67 = v110;
  sub_1000F12C8((uint64_t)v36);
  uint64_t v68 = v115;
  sub_1000F1324(v18, v115);
  uint64_t v122 = v57;
  if (a10 == 2) {
    int v69 = *(unsigned __int8 *)(v68 + v58[11]);
  }
  else {
    int v69 = a10 & 1;
  }
  LODWORD(v111) = v69;
  uint64_t v70 = v112;
  uint64_t v71 = v108;
  uint64_t v72 = v68;
  sub_1000F12C8(v72);
  sub_1000F1324(v18, v61);
  if (a11 == 2) {
    int v74 = *(unsigned __int8 *)(v61 + v58[12]);
  }
  else {
    int v74 = a11 & 1;
  }
  LODWORD(v115) = v74;
  uint64_t v75 = v109;
  sub_1000F12C8(v61);
  sub_1000F1324(v18, v71);
  if (a14) {
    a13 = *(void *)(v71 + v58[13]);
  }
  sub_1000F12C8(v71);
  uint64_t v76 = v117;
  sub_1000F1324(v18, v117);
  if (a12 == 2) {
    int v77 = *(unsigned __int8 *)(v76 + v58[14]);
  }
  else {
    int v77 = a12 & 1;
  }
  LODWORD(v112) = v77;
  sub_1000F12C8(v76);
  sub_1000F1324(v18, v75);
  if (a15 == 2) {
    int v78 = *(unsigned __int8 *)(v75 + v58[15]);
  }
  else {
    int v78 = a15 & 1;
  }
  LODWORD(v117) = v78;
  sub_1000F12C8(v75);
  sub_1000F1324(v18, v67);
  if (a16 == 2) {
    char v79 = *(unsigned char *)(v67 + v58[16]);
  }
  else {
    char v79 = a16 & 1;
  }
  sub_1000F12C8(v67);
  sub_1000F1324(v18, v70);
  sub_1000F1388(v66, (uint64_t)&v124);
  if (v124 == 1)
  {
    uint64_t v80 = a13;
    uint64_t v81 = v70 + v58[17];
    uint64_t v83 = *(void **)v81;
    uint64_t v82 = *(void **)(v81 + 8);
    uint64_t v84 = v70;
    uint64_t v86 = *(void **)(v81 + 16);
    uint64_t v85 = *(void **)(v81 + 24);
    uint64_t v88 = *(void **)(v81 + 32);
    uint64_t v87 = *(void **)(v81 + 40);
    uint64_t v89 = v113;
  }
  else
  {
    uint64_t v83 = v102;
    uint64_t v80 = a13;
    uint64_t v89 = v113;
    uint64_t v82 = v101;
    uint64_t v86 = v100;
    uint64_t v84 = v70;
    uint64_t v85 = v99;
    uint64_t v88 = v98;
    uint64_t v87 = v97;
  }
  id v90 = v87;
  id v91 = v83;
  id v92 = v82;
  id v93 = v86;
  id v94 = v85;
  id v95 = v88;
  sub_1000F12C8(v84);
  v125[0] = v83;
  v125[1] = v82;
  v125[2] = v86;
  v125[3] = v85;
  v125[4] = v88;
  v125[5] = v87;
  *(void *)&double result = sub_1000F13F0(v114, v120, v121, v119, v122, v116, v107, v106, v89, v111, v115, v80, v112, v117, v79, (uint64_t)v125).n128_u64[0];
  return result;
}

uint64_t sub_1000F12C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EnvironmentState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000F1324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F1388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA4500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 sub_1000F13F0@<Q0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, unsigned char *a9@<X8>, char a10, char a11, uint64_t a12, char a13, char a14, char a15, uint64_t a16)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  uint64_t v20 = (int *)type metadata accessor for EnvironmentState();
  uint64_t v21 = &a9[v20[7]];
  type metadata accessor for Locale();
  sub_100162E4C();
  (*(void (**)(unsigned char *, uint64_t))(v22 + 32))(v21, a4);
  uint64_t v23 = &a9[v20[8]];
  *uint64_t v23 = a5;
  v23[1] = a6;
  a9[v20[9]] = a7;
  a9[v20[10]] = a8;
  a9[v20[11]] = a10;
  a9[v20[12]] = a11;
  *(void *)&a9[v20[13]] = a12;
  a9[v20[14]] = a13;
  a9[v20[15]] = a14;
  a9[v20[16]] = a15;
  uint64_t v24 = &a9[v20[17]];
  long long v25 = *(_OWORD *)(a16 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)a16;
  *((_OWORD *)v24 + 1) = v25;
  __n128 result = *(__n128 *)(a16 + 32);
  *((__n128 *)v24 + 2) = result;
  return result;
}

uint64_t sub_1000F1540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *sub_1000F15A8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = *(void *)&a2[v6 + 8];
  *uint64_t v7 = *(void *)&a2[v6];
  v7[1] = v9;
  swift_retain();
  swift_retain();
  uint64_t v10 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  char v13 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v117 = v5;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v115 = v3;
    uint64_t v116 = v4;
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v11, v12, v15);
    uint64_t v16 = v13[5];
    uint64_t v17 = &v11[v16];
    uint64_t v18 = &v12[v16];
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    uint64_t v20 = v13[6];
    uint64_t v21 = &v11[v20];
    uint64_t v22 = &v12[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = v13[7];
    long long v25 = &v11[v24];
    uint64_t v26 = &v12[v24];
    uint64_t v27 = type metadata accessor for TimeZone();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    uint64_t v29 = v13[8];
    uint64_t v30 = &v11[v29];
    uint64_t v31 = &v12[v29];
    uint64_t v32 = sub_10017DF08(&qword_100E65250);
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    v33(v30, v31, v32);
    v33(&v11[v13[9]], &v12[v13[9]], v32);
    uint64_t v34 = v13[10];
    uint64_t v35 = &v11[v34];
    uint64_t v36 = &v12[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    uint64_t v38 = v13[11];
    uint64_t v39 = &v11[v38];
    uint64_t v40 = &v12[v38];
    uint64_t v41 = *((void *)v40 + 1);
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = v41;
    *(void *)&v11[v13[12]] = *(void *)&v12[v13[12]];
    v11[v13[13]] = v12[v13[13]];
    uint64_t v42 = v13[14];
    uint64_t v43 = &v11[v42];
    uint64_t v44 = &v12[v42];
    uint64_t v45 = *((void *)v44 + 1);
    *(void *)uint64_t v43 = *(void *)v44;
    *((void *)v43 + 1) = v45;
    uint64_t v46 = v13[15];
    uint64_t v47 = &v11[v46];
    uint64_t v48 = &v12[v46];
    uint64_t v49 = type metadata accessor for Precipitation();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
    {
      uint64_t v50 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
    }
    v11[v13[16]] = v12[v13[16]];
    uint64_t v51 = v13[17];
    uint64_t v52 = &v11[v51];
    uint64_t v53 = &v12[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = *(void *)v53;
    *((void *)v52 + 1) = v54;
    uint64_t v55 = v13[18];
    int v56 = &v11[v55];
    uint64_t v57 = &v12[v55];
    uint64_t v58 = *((void *)v57 + 1);
    *(void *)int v56 = *(void *)v57;
    *((void *)v56 + 1) = v58;
    uint64_t v59 = v13[19];
    char v60 = &v11[v59];
    uint64_t v61 = &v12[v59];
    uint64_t v62 = *((void *)v61 + 1);
    *(void *)char v60 = *(void *)v61;
    *((void *)v60 + 1) = v62;
    *(void *)&v11[v13[20]] = *(void *)&v12[v13[20]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, (uint64_t)v13);
    uint64_t v4 = v116;
    uint64_t v5 = v117;
    uint64_t v3 = v115;
  }
  uint64_t v63 = *(int *)(v3 + 24);
  int v64 = &v5[v63];
  int v65 = &v4[v63];
  uint64_t v66 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  uint64_t v67 = v13[5];
  uint64_t v68 = &v64[v67];
  int v69 = &v65[v67];
  uint64_t v70 = v69[1];
  *uint64_t v68 = *v69;
  v68[1] = v70;
  uint64_t v71 = v13[6];
  uint64_t v72 = &v64[v71];
  uint64_t v73 = &v65[v71];
  uint64_t v74 = v73[1];
  *uint64_t v72 = *v73;
  v72[1] = v74;
  uint64_t v75 = v13[7];
  uint64_t v76 = &v64[v75];
  int v77 = &v65[v75];
  uint64_t v78 = type metadata accessor for TimeZone();
  char v79 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v78 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v79(v76, v77, v78);
  uint64_t v80 = v13[8];
  uint64_t v81 = &v64[v80];
  uint64_t v82 = &v65[v80];
  uint64_t v83 = sub_10017DF08(&qword_100E65250);
  uint64_t v84 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v83 - 8) + 16);
  v84(v81, v82, v83);
  v84(&v64[v13[9]], &v65[v13[9]], v83);
  uint64_t v85 = v13[10];
  uint64_t v86 = &v64[v85];
  uint64_t v87 = &v65[v85];
  uint64_t v88 = v87[1];
  *uint64_t v86 = *v87;
  v86[1] = v88;
  uint64_t v89 = v13[11];
  id v90 = &v64[v89];
  id v91 = &v65[v89];
  uint64_t v92 = v91[1];
  *id v90 = *v91;
  v90[1] = v92;
  *(void *)&v64[v13[12]] = *(void *)&v65[v13[12]];
  v64[v13[13]] = v65[v13[13]];
  uint64_t v93 = v13[14];
  id v94 = &v64[v93];
  id v95 = &v65[v93];
  uint64_t v96 = v95[1];
  *id v94 = *v95;
  v94[1] = v96;
  uint64_t v97 = v13[15];
  uint64_t v98 = &v64[v97];
  uint64_t v99 = &v65[v97];
  uint64_t v100 = type metadata accessor for Precipitation();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
  {
    uint64_t v101 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
  }
  v64[v13[16]] = v65[v13[16]];
  uint64_t v102 = v13[17];
  uint64_t v103 = &v64[v102];
  int v104 = &v65[v102];
  uint64_t v105 = v104[1];
  *uint64_t v103 = *v104;
  v103[1] = v105;
  uint64_t v106 = v13[18];
  uint64_t v107 = &v64[v106];
  uint64_t v108 = &v65[v106];
  uint64_t v109 = v108[1];
  *uint64_t v107 = *v108;
  v107[1] = v109;
  uint64_t v110 = v13[19];
  uint64_t v111 = &v64[v110];
  uint64_t v112 = &v65[v110];
  uint64_t v113 = v112[1];
  *uint64_t v111 = *v112;
  v111[1] = v113;
  *(void *)&v64[v13[20]] = *(void *)&v65[v13[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v117;
}

uint64_t sub_1000F1C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = static Alignment.center.getter();
  uint64_t v7 = v6;
  uint64_t v8 = a2 + *(int *)(sub_10017DF08(&qword_100E74A50) + 36);
  sub_1000F1CD8(v2, v8);
  uint64_t v9 = (uint64_t *)(v8 + *(int *)(sub_10017DF08(&qword_100E74A58) + 36));
  uint64_t *v9 = v5;
  v9[1] = v7;
  uint64_t v10 = sub_10017DF08(&qword_100E74A60);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);

  return v11(a2, a1, v10);
}

uint64_t sub_1000F1CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SafariSheetModifier.SafariPresenter(0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for SafariSheetModifier(0);
  sub_1000F32E4(a1 + *(int *)(v11 + 20), (uint64_t)v6);
  uint64_t v12 = *(void *)(a1 + 8);
  char v13 = *(unsigned char *)(a1 + 16);
  v19[0] = *(void *)a1;
  v19[1] = v12;
  char v20 = v13;
  sub_10017DF08((uint64_t *)&unk_100E749A0);
  Binding.projectedValue.getter();
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  char v16 = v23;
  *uint64_t v10 = swift_getKeyPath();
  sub_10017DF08(&qword_100E74A68);
  swift_storeEnumTagMultiPayload();
  sub_1000F21C8((uint64_t)v6, (uint64_t)v10 + *(int *)(v8 + 28));
  uint64_t v17 = (char *)v10 + *(int *)(v8 + 32);
  *(void *)uint64_t v17 = v14;
  *((void *)v17 + 1) = v15;
  v17[16] = v16;
  sub_1000F1FD0((uint64_t)v10, a2);
  *(void *)(a2 + *(int *)(sub_10017DF08(&qword_100E74A70) + 36)) = 0;
  return sub_1000F1E68((uint64_t)v10);
}

uint64_t sub_1000F1E68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SafariSheetModifier.SafariPresenter(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000F1EC4(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_release();

  return swift_release();
}

uint64_t sub_1000F1FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SafariSheetModifier.SafariPresenter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1000F2034(void *a1, void *a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 24);
  char v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)char v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  v13[16] = v14[16];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000F21C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F2230()
{
  uint64_t v59 = type metadata accessor for UnitConfiguration.Temperature();
  uint64_t v55 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v53 = &v51[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v58 = sub_10017DF08(&qword_100E80DB8);
  __chkstk_darwin(v58);
  int v64 = &v51[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_10017DF08(&qword_100E6F620);
  __chkstk_darwin(v3 - 8);
  uint64_t v54 = &v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v62 = &v51[-v6];
  uint64_t v65 = type metadata accessor for MainAction();
  __chkstk_darwin(v65);
  char v60 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08(&qword_100E6A680);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v12 - 8);
  uint64_t v57 = &v51[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  char v16 = &v51[-v15];
  __chkstk_darwin(v17);
  uint64_t v19 = &v51[-v18];
  uint64_t v20 = type metadata accessor for Locale();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v23 = &v51[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  uint64_t v26 = &v51[-v25];
  static Locale.current.getter();
  uint64_t v66 = v21;
  uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 16);
  uint64_t v63 = v26;
  int v56 = v27;
  v27(v19, v26, v20);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v20);
  uint64_t v61 = v0;
  uint64_t v28 = v0 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastLocale;
  swift_beginAccess();
  uint64_t v29 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_1000F350C((uint64_t)v19, (uint64_t)v11, &qword_100E63730);
  sub_1000F350C(v28, v29, &qword_100E63730);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v20) == 1)
  {
    sub_1000F3400((uint64_t)v19, &qword_100E63730);
    int v30 = _s7Weather24LocationCompositionStateOwet_0(v29, 1, v20);
    uint64_t v31 = v63;
    if (v30 == 1)
    {
      sub_1000F3400((uint64_t)v11, &qword_100E63730);
      uint64_t v33 = (uint64_t)v60;
      uint64_t v32 = v61;
      uint64_t v34 = v59;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1000F350C((uint64_t)v11, (uint64_t)v16, &qword_100E63730);
    if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v20) != 1)
    {
      uint64_t v35 = v66;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v66 + 32))(v23, v29, v20);
      sub_10058FC20(&qword_100E6A698, (void (*)(uint64_t))&type metadata accessor for Locale);
      int v52 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v35 + 8);
      v36(v23, v20);
      sub_1000F3400((uint64_t)v19, &qword_100E63730);
      v36(v16, v20);
      sub_1000F3400((uint64_t)v11, &qword_100E63730);
      uint64_t v33 = (uint64_t)v60;
      uint64_t v32 = v61;
      uint64_t v34 = v59;
      uint64_t v31 = v63;
      if (v52) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    sub_1000F3400((uint64_t)v19, &qword_100E63730);
    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v16, v20);
    uint64_t v31 = v63;
  }
  sub_1000F3400((uint64_t)v11, &qword_100E6A680);
  uint64_t v33 = (uint64_t)v60;
  uint64_t v32 = v61;
  uint64_t v34 = v59;
LABEL_8:
  uint64_t v37 = *(uint64_t (**)(uint64_t))(v32 + 16);
  uint64_t v38 = v56;
  v56((unsigned char *)v33, v31, v20);
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = 0;
  long long v67 = 0u;
  long long v68 = 0u;
  swift_retain();
  sub_1001AAF58(v33, (uint64_t)&v67, v37);
  sub_1000F3400((uint64_t)&v67, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v33);
  swift_release();
  uint64_t v39 = (uint64_t)v57;
  v38(v57, v31, v20);
  _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v20);
  swift_beginAccess();
  sub_100231914(v39, v28);
  swift_endAccess();
LABEL_9:
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v40 = (uint64_t)v62;
  UnitManager.systemWideTemperatureUnit.getter();
  swift_release();
  uint64_t v41 = v32 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastTemperatureUnit;
  swift_beginAccess();
  uint64_t v42 = v64;
  uint64_t v43 = (uint64_t)&v64[*(int *)(v58 + 48)];
  sub_1000F350C(v40, (uint64_t)v64, &qword_100E6F620);
  sub_1000F350C(v41, v43, &qword_100E6F620);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v34) != 1)
  {
    uint64_t v44 = v54;
    sub_1000F350C((uint64_t)v42, (uint64_t)v54, &qword_100E6F620);
    if (_s7Weather24LocationCompositionStateOwet_0(v43, 1, v34) != 1)
    {
      uint64_t v45 = v55;
      uint64_t v46 = v53;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v55 + 32))(v53, v43, v34);
      sub_10058FC20(qword_100E80DC0, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
      LODWORD(v61) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v45 + 8);
      v47(v46, v34);
      v47(v44, v34);
      uint64_t v31 = v63;
      sub_1000F3400((uint64_t)v64, &qword_100E6F620);
      if (v61) {
        goto LABEL_16;
      }
LABEL_17:
      swift_beginAccess();
      sub_100231274(v40, v41);
      swift_endAccess();
      uint64_t v49 = *(uint64_t (**)(uint64_t))(v32 + 16);
      sub_1000F350C(v40, v33, &qword_100E6F620);
      type metadata accessor for ConfiguredUnitsAction();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for EnvironmentAction();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = 0;
      long long v67 = 0u;
      long long v68 = 0u;
      swift_retain();
      sub_1001AAF58(v33, (uint64_t)&v67, v49);
      sub_1000F3400((uint64_t)&v67, (uint64_t *)&unk_100EA01F0);
      sub_1001ABE70(v33);
      swift_release();
      uint64_t v48 = v40;
      goto LABEL_18;
    }
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v44, v34);
LABEL_14:
    sub_1000F3400((uint64_t)v42, &qword_100E80DB8);
    goto LABEL_17;
  }
  if (_s7Weather24LocationCompositionStateOwet_0(v43, 1, v34) != 1) {
    goto LABEL_14;
  }
  sub_1000F3400((uint64_t)v42, &qword_100E6F620);
LABEL_16:
  uint64_t v48 = v40;
LABEL_18:
  sub_1000F3400(v48, &qword_100E6F620);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v66 + 8))(v31, v20);
}

void sub_1000F2BB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ColorScheme();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E74B40);
  UIViewControllerRepresentableContext.coordinator.getter();
  uint64_t v6 = (char *)v15[1];
  uint64_t v7 = type metadata accessor for SafariSheetModifier.SafariPresenter(0);
  uint64_t v8 = v1 + *(int *)(v7 + 20);
  uint64_t v9 = (uint64_t)&v6[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL];
  swift_beginAccess();
  sub_1000F365C(v8, v9);
  swift_endAccess();
  uint64_t v10 = (uint64_t *)(v1 + *(int *)(v7 + 24));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  LOBYTE(v10) = *((unsigned char *)v10 + 16);
  uint64_t v13 = &v6[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
  *(void *)uint64_t v13 = v11;
  *((void *)v13 + 1) = v12;
  v13[16] = (char)v10;
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  sub_1000F3620();
  uint64_t v14 = &v6[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_colorScheme];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 40))(v14, v5, v2);
  swift_endAccess();
  sub_1000F2D90();
}

uint64_t type metadata accessor for SafariSheetModifier.SafariPresenter(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E74AD8);
}

void sub_1000F2D90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&aBlock - v13;
  uint64_t v15 = OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController;
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController];
  uint64_t v17 = (uint64_t)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL];
  swift_beginAccess();
  sub_1000F32E4(v17, (uint64_t)v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_1000F3400((uint64_t)v7, &qword_100E749B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                       + 8];
    char v19 = v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
           + 16];
    aBlock = *(void ***)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
    uint64_t v39 = v18;
    LOBYTE(v40) = v19;
    sub_10017DF08((uint64_t *)&unk_100E749A0);
    Binding.wrappedValue.getter();
    if (v44 == 1 && !v16)
    {
      id v31 = [v1 viewIfLoaded];
      id v32 = [v31 window];

      if (!v32)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        return;
      }
      sub_10040A24C();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      id v33 = sub_100409E90((uint64_t)v12);
      [v33 setDelegate:v1];
      [v33 setModalPresentationStyle:2];
      id v34 = [v33 presentationController];
      if (v34)
      {
        uint64_t v35 = v34;
        [v34 setDelegate:v1];
      }
      uint64_t v36 = *(void **)&v1[v15];
      *(void *)&v1[v15] = v33;
      id v37 = v33;

      [v1 presentViewController:v37 animated:1 completion:0];
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  uint64_t v20 = *(void **)&v1[v15];
  if (!v20) {
    return;
  }
  uint64_t v21 = *(void *)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
                     + 8];
  char v22 = v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation
         + 16];
  aBlock = *(void ***)&v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
  uint64_t v39 = v21;
  LOBYTE(v40) = v22;
  id v23 = v20;
  sub_10017DF08((uint64_t *)&unk_100E749A0);
  Binding.wrappedValue.getter();
  if ((v44 & 1) != 0 || !v16)
  {
  }
  else
  {
    [v23 setDelegate:0];
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v42 = sub_10040A244;
    uint64_t v43 = v24;
    aBlock = _NSConcreteStackBlock;
    uint64_t v39 = 1107296256;
    uint64_t v40 = sub_10010A4D4;
    uint64_t v41 = &unk_100E15D08;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_release();
    [v23 dismissViewControllerAnimated:1 completion:v25];

    _Block_release(v25);
    uint64_t v26 = *(void **)&v1[v15];
    *(void *)&v1[v15] = 0;
  }
LABEL_11:
  uint64_t v27 = *(void **)&v1[v15];
  if (v27)
  {
    uint64_t v28 = &v1[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_colorScheme];
    swift_beginAccess();
    uint64_t v29 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v4, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v29);
    id v30 = v27;
    [v30 setOverrideUserInterfaceStyle:UIUserInterfaceStyle.init(_:)()];
  }
}

uint64_t sub_1000F32E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F334C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = sub_10017DF08(a2);
  __chkstk_darwin(v6 - 8);
  sub_1001626E0();
  uint64_t v9 = sub_1000F350C(a1, v8 - v7, a2);
  a3(v9);
  EnvironmentValues.subscript.setter();
  return sub_1000F3400(a1, a2);
}

uint64_t sub_1000F3400(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10017DF08(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000F345C()
{
  return sub_1000F3480();
}

uint64_t sub_1000F3480()
{
  unint64_t v0 = sub_1000F34C0();
  sub_10017F820(v0, (uint64_t)&type metadata for WindowHorizontalSizeClassKey);

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_1000F34C0()
{
  unint64_t result = qword_100E65F50;
  if (!qword_100E65F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F50);
  }
  return result;
}

uint64_t sub_1000F350C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10017DF08(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F3570()
{
  return sub_1000F3594();
}

uint64_t sub_1000F3594()
{
  unint64_t v0 = sub_1000F35D4();
  sub_10017F820(v0, (uint64_t)&unk_100E0D028);

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_1000F35D4()
{
  unint64_t result = qword_100E65FE0;
  if (!qword_100E65FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FE0);
  }
  return result;
}

void sub_1000F3620()
{
}

uint64_t sub_1000F365C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F36C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v55 = a2;
  uint64_t v5 = a1[2];
  uint64_t v6 = type metadata accessor for Optional();
  sub_10017C83C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v50 = v10;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v53 = (char *)v48 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v48 - v14;
  sub_10017C83C();
  uint64_t v57 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v56 = v18;
  __chkstk_darwin(v19);
  uint64_t v54 = (char *)v48 - v20;
  uint64_t v21 = *(void *)(v3 + 80);
  uint64_t v22 = *(void *)(v3 + 88);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  uint64_t v58 = v5;
  uint64_t v59 = v23;
  uint64_t v60 = v5;
  uint64_t v61 = v24;
  uint64_t v25 = type metadata accessor for ModuleView.Cache();
  swift_getWitnessTable();
  v48[1] = v22;
  uint64_t v49 = v21;
  uint64_t v26 = StateObject.wrappedValue.getter();
  uint64_t v27 = v26 + *(void *)(*(void *)v26 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v15, v27, v6);
  swift_release();
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v5);
  uint64_t v51 = v8;
  uint64_t v52 = v6;
  if (v28 == 1)
  {
    uint64_t v49 = v25;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v6);
  }
  else
  {
    uint64_t v29 = v57;
    v48[0] = *(void *)(v57 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v48[0])(v56, v15, v5);
    uint64_t v30 = StateObject.wrappedValue.getter();
    uint64_t v31 = *(void *)(v30 + *(void *)(*(void *)v30 + 120) + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    sub_1000F3C00(v31, *(void *)(v3 + 72));
    char v33 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v33)
    {
      id v34 = v54;
      ((void (*)(char *, uint64_t, uint64_t))v48[0])(v54, v56, v5);
      uint64_t v35 = v29;
LABEL_8:
      (*(void (**)(char *))(v3 + 8))(v34);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v34, v5);
    }
    uint64_t v49 = v25;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v56, v5);
  }
  sub_1001B1E64((void *)(v3 + 24), *(void *)(v3 + 48));
  uint64_t v36 = *(void *)(v3 + 64);
  uint64_t v37 = *(void *)(v3 + 72);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v36;
  *(void *)(v38 + 24) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = (uint64_t)v53;
  dispatch thunk of ResolverType.resolve<A>(_:with:)();
  uint64_t v40 = v39;
  swift_release();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v39, 1, v5);
  if (result != 1)
  {
    uint64_t v35 = v57;
    id v34 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v54, v40, v5);
    uint64_t v42 = StateObject.wrappedValue.getter();
    uint64_t v43 = v50;
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v50, v34, v5);
    _s7Weather24LocationCompositionStateOwst_0(v43, 0, 1, v5);
    uint64_t v44 = v42 + *(void *)(*(void *)v42 + 112);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 40))(v44, v43, v52);
    swift_endAccess();
    swift_release();
    uint64_t v45 = StateObject.wrappedValue.getter();
    uint64_t v46 = *(void *)(v3 + 72);
    uint64_t v47 = (void *)(v45 + *(void *)(*(void *)v45 + 120));
    *uint64_t v47 = *(void *)(v3 + 64);
    v47[1] = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ModuleView.Cache()
{
  return swift_getGenericMetadata();
}

void sub_1000F3C00(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  sub_100214EF8();
  if (!v4) {
    return;
  }
  int64_t v5 = 0;
  uint64_t v21 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      sub_1001D17C4();
      int64_t v11 = v10 | (v5 << 6);
LABEL_9:
      uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8 * v11);
      sub_1000F4244(*(void *)(a1 + 56) + 48 * v11, (uint64_t)&v24 + 8);
      *(void *)&long long v24 = v12;
      goto LABEL_27;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v13 < v9)
    {
      if (*(void *)(v21 + 8 * v13)) {
        goto LABEL_13;
      }
      int64_t v15 = v5 + 2;
      ++v5;
      if (v13 + 1 < v9)
      {
        if (*(void *)(v21 + 8 * v15)) {
          goto LABEL_13;
        }
        int64_t v5 = v13 + 1;
        if (v13 + 2 < v9)
        {
          if (*(void *)(v21 + 8 * (v13 + 2))) {
            goto LABEL_13;
          }
          int64_t v16 = v13 + 3;
          int64_t v5 = v13 + 2;
          if (v13 + 3 < v9) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v8 = 0;
    uint64_t v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v24 = 0u;
LABEL_27:
    sub_100127928((uint64_t)&v24, (uint64_t)&v28, &qword_100E6A6C0);
    if (!*((void *)&v30 + 1)) {
      return;
    }
    long long v24 = v29;
    long long v25 = v30;
    long long v26 = v31;
    unint64_t v18 = sub_10021505C(v28);
    if ((v19 & 1) == 0)
    {
      sub_1000F41B8((uint64_t)&v24);
      return;
    }
    sub_1000F4244(*(void *)(a2 + 56) + 48 * v18, (uint64_t)v22);
    char v20 = v23(&v24);
    sub_1000F41B8((uint64_t)v22);
    sub_1000F41B8((uint64_t)&v24);
    if ((v20 & 1) == 0) {
      return;
    }
  }
  if (*(void *)(v21 + 8 * v16))
  {
LABEL_13:
    sub_1002EF004();
    int64_t v5 = v14;
    goto LABEL_9;
  }
  while (!__OFADD__(v16, 1))
  {
    if (v16 + 1 >= v9)
    {
      int64_t v5 = v9 - 1;
      goto LABEL_26;
    }
    sub_1001D40DC();
    if (v17) {
      goto LABEL_13;
    }
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1000F3E34(void *a1)
{
  return sub_1000F3E3C(a1);
}

uint64_t sub_1000F3E3C(void *a1)
{
  return sub_1000F3E84();
}

uint64_t sub_1000F3E84()
{
  sub_10020D948(v0 + 16, (uint64_t)v4);
  sub_10020D948(v0 + 88, (uint64_t)v3);
  sub_10020D948(v0 + 136, (uint64_t)v2);
  sub_1000F3F4C();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  return swift_retain();
}

uint64_t sub_1000F3F4C()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  int64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  *(void *)(v16 + 168) = swift_getKeyPath();
  *(unsigned char *)(v17 + 176) = 0;
  *(void *)uint64_t v17 = v15;
  sub_1001262E4(v13, v17 + 16);
  *(void *)(v17 + 8) = v9;
  *(void *)(v17 + 56) = v11;
  *(void *)(v17 + 64) = v7;
  *(void *)(v17 + 72) = v5;
  sub_1001262E4(v3, v17 + 80);
  *(void *)(v17 + 160) = v1;
  sub_100162694();
  return sub_1001262E4(v18, v19);
}

double sub_1000F3FF8()
{
  uint64_t v0 = sub_10018C470();
  uint64_t v1 = type metadata accessor for LocationViewPage(v0);
  sub_1001627C0(v1);
  uint64_t v2 = (void *)sub_10017F930();

  return sub_1000F4040(v2, v3, v4);
}

double sub_1000F4040@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v5 = type metadata accessor for LocationViewPage(0);
  *(void *)&double result = sub_1000F4094(*(void *)(a2 + *(int *)(v5 + 24)), a3).n128_u64[0];
  return result;
}

__n128 sub_1000F4094@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = v2[1].n128_u64[1];
  unint64_t v6 = v2[5].n128_u64[0];
  uint64_t v7 = a2 + 96;
  __n128 v10 = v2[2];
  sub_10020D948((uint64_t)&v2[5].n128_i64[1], a2 + 56);
  sub_10020D948((uint64_t)&v2[8], v7);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_10017DF08(&qword_100E64A38);
  sub_1000F4164();
  *(void *)a2 = ObservedObject.init(wrappedValue:)();
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v5;
  __n128 result = v10;
  *(__n128 *)(a2 + 24) = v10;
  *(void *)(a2 + 40) = a1;
  *(void *)(a2 + 48) = v6;
  return result;
}

unint64_t sub_1000F4164()
{
  unint64_t result = qword_100E64A40;
  if (!qword_100E64A40)
  {
    sub_10018C6DC(&qword_100E64A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64A40);
  }
  return result;
}

uint64_t sub_1000F41B8(uint64_t a1)
{
  return a1;
}

uint64_t destroy for AnyEquatable(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);

  return swift_release();
}

uint64_t sub_1000F4244(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *initializeWithCopy for AnyEquatable(void *a1, void *a2)
{
  uint64_t v4 = a2[3];
  a1[3] = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  return a1;
}

uint64_t sub_1000F4304@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for WeatherApp() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000F4388(a1, (void *)(v2 + 16), v6, a2);
}

uint64_t sub_1000F4388@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v37 = a4;
  uint64_t v6 = type metadata accessor for MainView(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10017DF08(&qword_100E9C348);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10017DF08(&qword_100E9C350);
  __chkstk_darwin(v38);
  int64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10017DF08(&qword_100E9C358);
  __chkstk_darwin(v39);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10017DF08(&qword_100E9C360);
  __chkstk_darwin(v36);
  uint64_t v35 = (uint64_t)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1000F4CCC(v8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E97FD0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v42)
  {
    char v19 = *(unsigned char *)sub_1001B1E64(v41, v42);
    sub_1000F4944((uint64_t)v8, (uint64_t)v11, (void (*)(void))type metadata accessor for MainView);
    uint64_t v20 = &v11[*(int *)(v9 + 36)];
    *(void *)uint64_t v20 = KeyPath;
    v20[8] = v19;
    sub_1000F49E0((uint64_t)v8);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
    uint64_t v34 = swift_getKeyPath();
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E624E8 != -1) {
      swift_once();
    }
    DeviceSupportsStickyHeaders();
    char v21 = SettingReader.isEnabled(_:with:)();
    swift_release();
    static SettingReader.shared.getter();
    if (qword_100E624F8 != -1) {
      swift_once();
    }
    char v22 = SettingReader.isEnabled(_:with:)();
    swift_release();
    static SettingReader.shared.getter();
    if (qword_100E62500 != -1) {
      swift_once();
    }
    char v23 = SettingReader.isEnabled(_:with:)();
    swift_release();
    static SettingReader.shared.getter();
    static Settings.VFX.foregroundEffects.getter();
    DeviceSupportsForegroundEffects();
    char v24 = SettingReader.isEnabled(_:with:)();
    swift_release();
    swift_release();
    sub_10006DF38((uint64_t)v11, (uint64_t)v13, &qword_100E9C348);
    long long v25 = &v13[*(int *)(v38 + 36)];
    *(void *)long long v25 = v34;
    v25[8] = v21 & 1;
    v25[9] = v22 & 1;
    v25[10] = v23 & 1;
    v25[11] = v24 & 1;
    sub_1001781AC((uint64_t)v11, &qword_100E9C348);
    sub_10017DF08(&qword_100E9C248);
    long long v26 = (void *)UIApplicationDelegateAdaptor.wrappedValue.getter();
    uint64_t v27 = sub_1000F4C38();

    type metadata accessor for ObservableResolver();
    sub_1000F5068((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
    uint64_t v28 = static ObservableObject.environmentStore.getter();
    sub_10006DF38((uint64_t)v13, (uint64_t)v15, &qword_100E9C350);
    long long v29 = (uint64_t *)&v15[*(int *)(v39 + 36)];
    *long long v29 = v28;
    v29[1] = v27;
    sub_1001781AC((uint64_t)v13, &qword_100E9C350);
    sub_1001B1E64(a2, a2[3]);
    sub_10017DF08(&qword_100E81B08);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v30 = result;
      sub_1001246C8(&qword_100E981B0, &qword_100E81B08);
      uint64_t v31 = static ObservableObject.environmentStore.getter();
      uint64_t v32 = v35;
      sub_10006DF38((uint64_t)v15, v35, &qword_100E9C358);
      char v33 = (uint64_t *)(v32 + *(int *)(v36 + 36));
      *char v33 = v31;
      v33[1] = v30;
      sub_1001781AC((uint64_t)v15, &qword_100E9C358);
      return sub_10020E72C(v32, v37, &qword_100E9C360);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F4944(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for WeatherApp()
{
  uint64_t result = qword_100E9C2A8;
  if (!qword_100E9C2A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000F49E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000F4A3C(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + 88;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v4);
  uint64_t v5 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[9];
  sub_10017DF08((uint64_t *)&unk_100EAA550);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for LegibilityWeight();
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[10];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  swift_release();
  uint64_t v11 = a1 + a2[15];

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v11);
}

uint64_t sub_1000F4C38()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___observableResolver;
  if (*(void *)(v0 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___observableResolver))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___observableResolver);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1000A0944((uint64_t)v5);
    type metadata accessor for ObservableResolver();
    swift_allocObject();
    uint64_t v2 = ObservableResolver.init(_:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1000F4CCC@<X0>(void *a1@<X8>)
{
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100EAA540);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10017DF08(&qword_100EA5288);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10011BFD8();
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EAA530);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10016279C();
  uint64_t v13 = *(void *)(v1 + 56);
  sub_10020D948(v1 + 16, (uint64_t)v19);
  sub_10020D948(v1 + 64, (uint64_t)v18);
  sub_10020D948(v1 + 120, (uint64_t)v17);
  uint64_t v14 = *(void *)(v1 + 160);
  sub_10020D948(v1 + 168, (uint64_t)v16);
  *uint64_t v3 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  *uint64_t v2 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA550);
  swift_storeEnumTagMultiPayload();
  *uint64_t v8 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  sub_1000F4EB8(v13, v19, v18, v17, (uint64_t)v3, (uint64_t)v2, (uint64_t)v8, v14, a1, v16);
  swift_retain();
  return swift_retain();
}

uint64_t sub_1000F4EB8@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, long long *a10)
{
  *a9 = a1;
  sub_1001262E4(a2, (uint64_t)(a9 + 1));
  sub_1001262E4(a3, (uint64_t)(a9 + 6));
  sub_1001262E4(a4, (uint64_t)(a9 + 11));
  uint64_t v17 = (int *)type metadata accessor for MainView(0);
  sub_10024D364(a5, (uint64_t)a9 + v17[8], (uint64_t *)&unk_100EAA530);
  sub_10024D364(a6, (uint64_t)a9 + v17[9], &qword_100EA5288);
  sub_10024D364(a7, (uint64_t)a9 + v17[10], (uint64_t *)&unk_100EAA540);
  unint64_t v18 = (char *)a9 + v17[11];
  *(void *)unint64_t v18 = swift_getKeyPath();
  v18[8] = 0;
  *(void *)((char *)a9 + v17[12]) = 0;
  *(void *)((char *)a9 + v17[13]) = 0;
  *(void *)((char *)a9 + v17[14]) = a8;
  uint64_t v19 = (uint64_t)a9 + v17[15];

  return sub_1001262E4(a10, v19);
}

uint64_t sub_1000F4FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E9C248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000F5068(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F50B0()
{
  uint64_t v1 = type metadata accessor for MainViewScenePhaseObservationViewModifier(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  uint64_t v4 = type metadata accessor for ScenePhase();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F80DC();
  sub_1000F678C(v0, (uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for MainViewScenePhaseObservationViewModifier);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1000F66B0((uint64_t)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (void (*)(void))type metadata accessor for MainViewScenePhaseObservationViewModifier);
  sub_10017DF08(&qword_100EAA8D0);
  sub_1001246C8(&qword_100EAA8D8, &qword_100EAA8D0);
  sub_1000F6744(&qword_100EAA8E0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000F5328@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v209 = a1;
  uint64_t v207 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v208 = v4;
  uint64_t v206 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162EF8();
  uint64_t v205 = v6;
  __chkstk_darwin(v7);
  unint64_t v204 = &v157[-v8];
  sub_100129064();
  uint64_t v9 = type metadata accessor for WeatherMapStatusBarColorSceneModifier();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v203 = v11;
  uint64_t v199 = sub_10017DF08(&qword_100E827E0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v200 = v13;
  uint64_t v14 = sub_100129064();
  uint64_t v15 = type metadata accessor for MainView(v14);
  sub_100179C0C();
  uint64_t v213 = v16;
  __chkstk_darwin(v17);
  uint64_t v212 = v18;
  uint64_t v201 = &v157[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100129064();
  type metadata accessor for ContentSizeCategory();
  sub_100179C0C();
  uint64_t v197 = v20;
  uint64_t v198 = v19;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v196 = v21;
  uint64_t v22 = sub_100129064();
  uint64_t v211 = type metadata accessor for MainViewScenePhaseObservationViewModifier(v22);
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v214 = v24;
  sub_100129064();
  uint64_t v210 = type metadata accessor for VibrantDividerStyle();
  sub_100179C0C();
  unint64_t v177 = v25;
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v176 = v27;
  sub_100129064();
  uint64_t v28 = type metadata accessor for UserInterfaceSizeClass();
  sub_100179C0C();
  uint64_t v164 = v29;
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v159 = v31;
  uint64_t v32 = sub_10017DF08(&qword_100E662F0);
  uint64_t v33 = v32 - 8;
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v163 = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100162EF8();
  uint64_t v202 = v37;
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v160 = &v157[-v40];
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = &v157[-v42];
  __chkstk_darwin(v41);
  uint64_t v162 = &v157[-v44];
  uint64_t v165 = sub_10017DF08(&qword_100EAA650);
  sub_100162E4C();
  __chkstk_darwin(v45);
  sub_100109314();
  uint64_t v166 = v46;
  sub_10017DF08(&qword_100EAA658);
  sub_100179C0C();
  uint64_t v173 = v48;
  uint64_t v174 = v47;
  __chkstk_darwin(v47);
  sub_100109314();
  uint64_t v170 = v49;
  uint64_t v167 = sub_10017DF08(&qword_100EAA660);
  sub_100162E4C();
  __chkstk_darwin(v50);
  sub_100109314();
  uint64_t v172 = v51;
  uint64_t v169 = sub_10017DF08(&qword_100EAA668);
  sub_100162E4C();
  __chkstk_darwin(v52);
  sub_100109314();
  uint64_t v171 = v53;
  uint64_t v168 = sub_10017DF08(&qword_100EAA670);
  sub_100162E4C();
  __chkstk_darwin(v54);
  sub_100109314();
  uint64_t v175 = v55;
  uint64_t v180 = sub_10017DF08(&qword_100EAA678);
  sub_100162E4C();
  __chkstk_darwin(v56);
  sub_100109314();
  uint64_t v178 = v57;
  sub_10017DF08(&qword_100EAA680);
  sub_100179C0C();
  uint64_t v183 = v59;
  uint64_t v184 = v58;
  __chkstk_darwin(v58);
  sub_100109314();
  uint64_t v215 = v60;
  sub_10017DF08(&qword_100EAA688);
  sub_100179C0C();
  uint64_t v186 = v62;
  uint64_t v187 = v61;
  __chkstk_darwin(v61);
  sub_100109314();
  uint64_t v185 = v63;
  uint64_t v181 = sub_10017DF08(&qword_100EAA690);
  sub_100162E4C();
  __chkstk_darwin(v64);
  sub_100109314();
  uint64_t v188 = v65;
  uint64_t v182 = sub_10017DF08(&qword_100EAA698);
  sub_100162E4C();
  __chkstk_darwin(v66);
  sub_100109314();
  uint64_t v191 = v67;
  uint64_t v189 = sub_10017DF08(&qword_100EAA6A0);
  sub_100162E4C();
  __chkstk_darwin(v68);
  sub_100109314();
  uint64_t v192 = v69;
  uint64_t v190 = sub_10017DF08(&qword_100EAA6A8);
  sub_100162E4C();
  __chkstk_darwin(v70);
  sub_100109314();
  uint64_t v195 = v71;
  uint64_t v193 = sub_10017DF08(&qword_100EAA6B0);
  sub_100162E4C();
  __chkstk_darwin(v72);
  sub_100109314();
  uint64_t v194 = v73;
  v219[0] = static Alignment.center.getter();
  v219[1] = v74;
  sub_1000F6D50(v1, (uint64_t)&v220);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v76 = Namespace.wrappedValue.getter();
  sub_10006DF38((uint64_t)v219, (uint64_t)v221, &qword_100EAA6B8);
  v221[15] = KeyPath;
  v221[16] = v76;
  char v222 = 0;
  uint64_t v77 = v163;
  sub_100178110((uint64_t)v219, &qword_100EAA6B8);
  uint64_t v78 = (uint64_t)(v2 + 1);
  sub_10020D948((uint64_t)(v2 + 1), (uint64_t)v223);
  uint64_t v79 = (uint64_t)v162;
  uint64_t v161 = Namespace.wrappedValue.getter();
  uint64_t v216 = (uint64_t)v2;
  uint64_t v217 = v15;
  uint64_t v80 = (char *)v2 + *(int *)(v15 + 40);
  uint64_t v81 = v164;
  uint64_t v179 = v80;
  sub_10019B2FC();
  (*(void (**)(unsigned char *, void, uint64_t))(v81 + 104))(v43, enum case for UserInterfaceSizeClass.regular(_:), v28);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v28);
  uint64_t v82 = v77 + *(int *)(v33 + 56);
  sub_10006DF38(v79, v77, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v43, v82, &qword_100E65ED8);
  sub_100181AA8(v77);
  if (v84)
  {
    sub_100178110((uint64_t)v43, &qword_100E65ED8);
    sub_100178110(v79, &qword_100E65ED8);
    sub_100181AA8(v82);
    if (v84)
    {
      sub_100178110(v77, &qword_100E65ED8);
LABEL_14:
      char v85 = 1;
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v83 = v160;
  sub_10006DF38(v77, (uint64_t)v160, &qword_100E65ED8);
  sub_100181AA8(v82);
  if (v84)
  {
    sub_100178110((uint64_t)v43, &qword_100E65ED8);
    sub_100178110(v79, &qword_100E65ED8);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v83, v28);
LABEL_9:
    sub_100178110(v77, &qword_100E662F0);
    goto LABEL_10;
  }
  uint64_t v86 = v159;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 32))(v159, v82, v28);
  sub_1000F6744(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  int v158 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
  v87(v86, v28);
  sub_100178110((uint64_t)v43, &qword_100E65ED8);
  sub_100178110(v79, &qword_100E65ED8);
  v87((uint64_t)v83, v28);
  sub_100178110(v77, &qword_100E65ED8);
  if (v158) {
    goto LABEL_14;
  }
LABEL_10:
  if (qword_100E62668 != -1) {
    swift_once();
  }
  char v85 = byte_100F51C48 ^ 1;
LABEL_15:
  sub_1001262E4(v223, (uint64_t)v225);
  *((void *)&v225[2] + 1) = v161;
  LOBYTE(v225[3]) = v85 & 1;
  sub_10006DF38((uint64_t)v221, (uint64_t)v223, (uint64_t *)&unk_100EAA6C0);
  v223[9] = v225[0];
  v223[10] = v225[1];
  v223[11] = v225[2];
  char v224 = v225[3];
  sub_100178110((uint64_t)v221, (uint64_t *)&unk_100EAA6C0);
  uint64_t v88 = v216;
  swift_retain();
  sub_10017DF08(&qword_100E64B58);
  sub_1001246C8(&qword_100EAA6D0, &qword_100E64B58);
  uint64_t v89 = ObservedObject.init(wrappedValue:)();
  uint64_t v91 = v90;
  sub_10006DF38((uint64_t)v223, (uint64_t)v225, &qword_100EAA6D8);
  *((void *)&v225[12] + 1) = v89;
  *(void *)&v225[13] = v91;
  sub_100178110((uint64_t)v223, &qword_100EAA6D8);
  sub_10020D948(v78, (uint64_t)v218);
  uint64_t v92 = *(void *)(v88 + *(int *)(v217 + 56));
  uint64_t v93 = swift_getKeyPath();
  id v94 = v166;
  id v95 = (uint64_t *)&v166[*(int *)(v165 + 36)];
  *(uint64_t *)((char *)v95 + *(int *)(type metadata accessor for MainViewSheetViewModifier(0) + 28)) = v93;
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  *id v95 = ObservedObject.init(wrappedValue:)();
  v95[1] = v96;
  sub_1001262E4(v218, (uint64_t)(v95 + 2));
  v95[7] = v92;
  memcpy(v94, v225, 0xD8uLL);
  static DividerStyle<>.vibrant.getter();
  sub_1000F7DF8();
  sub_1000F6744(&qword_100EAA738, (void (*)(uint64_t))&type metadata accessor for VibrantDividerStyle);
  uint64_t v97 = v170;
  View.dividerStyle<A>(_:)();
  sub_100162F0C();
  v98();
  sub_100178110((uint64_t)v94, &qword_100EAA650);
  uint64_t v99 = v216 + *(int *)(v217 + 44);
  uint64_t v100 = *(void *)v99;
  LOBYTE(v89) = *(unsigned char *)(v99 + 8);
  sub_100195B7C(*(void *)v99, v89);
  sub_100149AE8();
  char v102 = v101;
  sub_10018F6D8(v100, v89);
  if (v102) {
    uint64_t v103 = static Color.black.getter();
  }
  else {
    uint64_t v103 = static Color.white.getter();
  }
  uint64_t v104 = v103;
  uint64_t v105 = swift_getKeyPath();
  uint64_t v107 = v172;
  uint64_t v106 = v173;
  uint64_t v108 = v174;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v173 + 16))(v172, v97, v174);
  uint64_t v109 = (uint64_t *)(v107 + *(int *)(v167 + 36));
  *uint64_t v109 = v105;
  v109[1] = v104;
  (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v97, v108);
  uint64_t v110 = static Color.white.getter();
  uint64_t v111 = swift_getKeyPath();
  uint64_t v112 = v171;
  sub_10006DF38(v107, v171, &qword_100EAA660);
  uint64_t v113 = (uint64_t *)(v112 + *(int *)(v169 + 36));
  *uint64_t v113 = v111;
  v113[1] = v110;
  sub_100178110(v107, &qword_100EAA660);
  uint64_t v114 = v175;
  sub_10006DF38(v112, v175, &qword_100EAA668);
  *(unsigned char *)(v114 + *(int *)(v168 + 36)) = 1;
  sub_100178110(v112, &qword_100EAA668);
  uint64_t v115 = v216;
  uint64_t v116 = v214;
  sub_10020D948(v216 + 48, (uint64_t)v214);
  uint64_t v117 = (uint64_t *)((char *)v116 + *(int *)(v211 + 20));
  *uint64_t v117 = swift_getKeyPath();
  sub_10017DF08(&qword_100EAA740);
  swift_storeEnumTagMultiPayload();
  uint64_t v118 = v178;
  sub_10006DF38(v114, v178, &qword_100EAA670);
  uint64_t v119 = v180;
  sub_1000F66B0((uint64_t)v116, v118 + *(int *)(v180 + 36), (void (*)(void))type metadata accessor for MainViewScenePhaseObservationViewModifier);
  sub_100178110(v114, &qword_100EAA670);
  sub_10014E6E8();
  uint64_t v214 = type metadata accessor for MainView;
  int v120 = v201;
  sub_1000F678C(v115, (uint64_t)v201, (void (*)(void))type metadata accessor for MainView);
  uint64_t v121 = *(unsigned __int8 *)(v213 + 80);
  v212 += (v121 + 16) & ~v121;
  uint64_t v213 = (v121 + 16) & ~v121;
  uint64_t v122 = v213;
  uint64_t v211 = v121 | 7;
  uint64_t v123 = swift_allocObject();
  uint64_t v210 = (uint64_t)type metadata accessor for MainView;
  sub_1000F66B0((uint64_t)v120, v123 + v122, (void (*)(void))type metadata accessor for MainView);
  unint64_t v177 = sub_1000F7EA4();
  uint64_t v124 = sub_1000F6744(&qword_100EAA788, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  uint64_t v125 = v198;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100162F0C();
  v126();
  sub_100178110(v118, &qword_100EAA678);
  uint64_t v127 = v200;
  sub_1000F80B4();
  sub_1000F678C(v115, (uint64_t)v120, (void (*)(void))v214);
  uint64_t v128 = swift_allocObject();
  sub_100163C14(v128);
  *(void *)&v225[0] = v119;
  *((void *)&v225[0] + 1) = v125;
  *(void *)&v225[1] = v177;
  *((void *)&v225[1] + 1) = v124;
  swift_getOpaqueTypeConformance2();
  sub_1000F7D54();
  uint64_t v129 = v185;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178110(v127, &qword_100E827E0);
  sub_100162F0C();
  v130();
  uint64_t v131 = v115;
  sub_1000F678C(v115, (uint64_t)v120, (void (*)(void))v214);
  uint64_t v132 = swift_allocObject();
  sub_100163C14(v132);
  uint64_t v134 = v186;
  uint64_t v133 = v187;
  uint64_t v135 = v188;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v186 + 16))(v188, v129, v187);
  uint64_t v136 = (uint64_t (**)())(v135 + *(int *)(v181 + 36));
  *uint64_t v136 = sub_100217228;
  v136[1] = (uint64_t (*)())v132;
  v136[2] = 0;
  void v136[3] = 0;
  (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v129, v133);
  uint64_t v137 = swift_getKeyPath();
  uint64_t v138 = v202;
  sub_10019B2FC();
  uint64_t v139 = v191;
  uint64_t v140 = (uint64_t *)(v191 + *(int *)(v182 + 36));
  uint64_t v141 = sub_10017DF08(&qword_100EAA7A0);
  sub_10006DF38(v138, (uint64_t)v140 + *(int *)(v141 + 28), &qword_100E65ED8);
  *uint64_t v140 = v137;
  sub_10006DF38(v135, v139, &qword_100EAA690);
  sub_100178110(v138, &qword_100E65ED8);
  sub_100178110(v135, &qword_100EAA690);
  uint64_t v142 = type metadata accessor for ColorScheme();
  uint64_t v143 = v204;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v204, 1, 1, v142);
  sub_10006DF38((uint64_t)v143, v205, (uint64_t *)&unk_100EAA640);
  uint64_t v144 = v203;
  State.init(wrappedValue:)();
  sub_100178110((uint64_t)v143, (uint64_t *)&unk_100EAA640);
  uint64_t v145 = v192;
  sub_10006DF38(v139, v192, &qword_100EAA698);
  sub_1000F66B0(v144, v145 + *(int *)(v189 + 36), (void (*)(void))type metadata accessor for WeatherMapStatusBarColorSceneModifier);
  sub_100178110(v139, &qword_100EAA698);
  sub_10019B2FC();
  uint64_t v146 = v195;
  uint64_t v147 = v195 + *(int *)(v190 + 36);
  sub_10006DF38(v138, v147, &qword_100E65ED8);
  uint64_t v148 = (uint64_t (**)())(v147 + *(int *)(sub_10017DF08(&qword_100EAA7A8) + 36));
  char *v148 = sub_100A26D8C;
  v148[1] = 0;
  sub_10006DF38(v145, v146, &qword_100EAA6A0);
  sub_100178110(v138, &qword_100E65ED8);
  sub_100178110(v145, &qword_100EAA6A0);
  uint64_t v149 = v208;
  sub_10020D948(v131 + 88, v208);
  uint64_t v150 = v207;
  uint64_t v151 = (uint64_t *)(v149 + *(int *)(v207 + 20));
  uint64_t *v151 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA7B0);
  swift_storeEnumTagMultiPayload();
  uint64_t v152 = (void *)(v149 + *(int *)(v150 + 24));
  type metadata accessor for ExtendedAppLaunchState(0);
  uint64_t v153 = swift_allocObject();
  *(unsigned char *)(v153 + 16) = 1;
  ObservationRegistrar.init()();
  *(void *)&v223[0] = v153;
  State.init(wrappedValue:)();
  uint64_t v154 = *((void *)&v225[0] + 1);
  *uint64_t v152 = *(void *)&v225[0];
  v152[1] = v154;
  uint64_t v155 = v194;
  sub_10006DF38(v146, v194, &qword_100EAA6A8);
  sub_1000F66B0(v149, v155 + *(int *)(v193 + 36), (void (*)(void))type metadata accessor for MonitorAppLaunchStateViewModifier);
  sub_100178110(v146, &qword_100EAA6A8);
  return sub_10024D364(v155, v209, &qword_100EAA6B0);
}

uint64_t sub_1000F66B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for MainViewScenePhaseObservationViewModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAA848);
}

uint64_t type metadata accessor for MonitorAppLaunchStateViewModifier(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E7A428);
}

uint64_t sub_1000F6744(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F678C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for MainView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAA5C8);
}

uint64_t sub_1000F6800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000F68F8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  long long v10 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 48, a2 + 48);
  long long v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 88, a2 + 88);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_10017DF08((uint64_t *)&unk_100EAA550);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for LegibilityWeight();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_10017DF08(&qword_100E827E0);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
    }
  }
  else
  {
    *uint64_t v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[11];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)v28;
  char v30 = *(unsigned char *)(v28 + 8);
  sub_100195B7C(*(void *)v28, v30);
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = v30;
  uint64_t v31 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  uint64_t v32 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  long long v35 = *(_OWORD *)(v34 + 24);
  *(_OWORD *)(a1 + v32 + 24) = v35;
  uint64_t v36 = v35;
  uint64_t v37 = **(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8);
  swift_retain();
  v37(v33, v34, v36);
  return a1;
}

uint64_t sub_1000F6D50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v32 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10017DF08(&qword_100E662F0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v30[-v15];
  __chkstk_darwin(v14);
  uint64_t v18 = &v30[-v17];
  uint64_t v33 = type metadata accessor for MainView(0);
  sub_10019B2FC();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v16, enum case for UserInterfaceSizeClass.regular(_:), v3);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10006DF38((uint64_t)v18, (uint64_t)v9, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v16, v19, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v3) == 1)
  {
    sub_100178110((uint64_t)v16, &qword_100E65ED8);
    sub_100178110((uint64_t)v18, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v3) == 1)
    {
      sub_100178110((uint64_t)v9, &qword_100E65ED8);
LABEL_8:
      uint64_t v22 = *a1;
      uint64_t v23 = v33;
      swift_retain();
      uint64_t v24 = Namespace.wrappedValue.getter();
      sub_10020D948((uint64_t)(a1 + 1), (uint64_t)v37);
      sub_10020D948((uint64_t)a1 + *(int *)(v23 + 60), (uint64_t)&v39);
      uint64_t v35 = v22;
      uint64_t v36 = v24;
      sub_100A2D324((uint64_t)&v35, (uint64_t)v40);
      char v41 = 0;
      sub_1000F7720();
      sub_1000F779C();
      _ConditionalContent<>.init(storage:)();
      return sub_100A2D35C((uint64_t)&v35);
    }
    goto LABEL_6;
  }
  sub_10006DF38((uint64_t)v9, (uint64_t)v13, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v3) == 1)
  {
    sub_100178110((uint64_t)v16, &qword_100E65ED8);
    sub_100178110((uint64_t)v18, &qword_100E65ED8);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v13, v3);
LABEL_6:
    sub_100178110((uint64_t)v9, &qword_100E662F0);
    goto LABEL_9;
  }
  uint64_t v20 = v32;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 32))(v32, v19, v3);
  sub_1000F6744(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  int v31 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v21(v20, v3);
  sub_100178110((uint64_t)v16, &qword_100E65ED8);
  sub_100178110((uint64_t)v18, &qword_100E65ED8);
  v21(v13, v3);
  sub_100178110((uint64_t)v9, &qword_100E65ED8);
  if (v31) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v26 = v33;
  swift_retain();
  uint64_t v27 = Namespace.wrappedValue.getter();
  uint64_t v28 = *(uint64_t *)((char *)a1 + *(int *)(v26 + 56));
  sub_10020D948((uint64_t)(a1 + 1), (uint64_t)&v38);
  swift_retain();
  sub_10017DF08(&qword_100E64B58);
  sub_1001246C8(&qword_100EAA6D0, &qword_100E64B58);
  uint64_t v35 = ObservedObject.init(wrappedValue:)();
  uint64_t v36 = v29;
  v37[0] = v27;
  v37[1] = v28;
  sub_1000F8BF0((uint64_t)&v35, (uint64_t)v40);
  char v41 = 1;
  sub_1000F7720();
  sub_1000F779C();
  _ConditionalContent<>.init(storage:)();
  return sub_1000F776C((uint64_t)&v35);
}

uint64_t sub_1000F72E0(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v4);
  uint64_t v8 = sub_10017DF08(&qword_100E7A470);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10012B938();
  sub_1000F7538(v1, (uint64_t)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1000F76BC((uint64_t)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_10017DF08(&qword_100E7A478);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v2, a1);
  uint64_t v13 = (uint64_t (**)())(v2 + *(int *)(v8 + 36));
  *uint64_t v13 = sub_100218C0C;
  v13[1] = (uint64_t (*)())v11;
  v13[2] = 0;
  double v13[3] = 0;
  uint64_t v14 = (uint64_t *)(v1 + *(int *)(v5 + 32));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  v18[1] = v16;
  long long v18[2] = v15;
  sub_10017DF08(&qword_100E7A480);
  State.wrappedValue.getter();
  type metadata accessor for ExtendedAppLaunchState(0);
  sub_1000F8014();
  sub_100128BE4(&qword_100E7A498, (void (*)(uint64_t))type metadata accessor for ExtendedAppLaunchState);
  View.environment<A>(_:)();
  swift_release();
  return sub_100178110(v2, &qword_100E7A470);
}

uint64_t type metadata accessor for ExtendedAppLaunchState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7A338);
}

uint64_t sub_1000F7538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F759C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  sub_10017DF08((uint64_t *)&unk_100EAA7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for FinishLaunchTestAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000F76BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000F7720()
{
  unint64_t result = qword_100EAA7D8;
  if (!qword_100EAA7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA7D8);
  }
  return result;
}

uint64_t sub_1000F776C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000F779C()
{
  unint64_t result = qword_100EAA7E0;
  if (!qword_100EAA7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA7E0);
  }
  return result;
}

uint64_t sub_1000F77E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v34 = a2;
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  long long v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = type metadata accessor for WeatherMapStatusBarColorSceneModifier();
  uint64_t v10 = sub_100164920(v9);
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E79410);
  sub_100162880();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10017DF08(&qword_100E79418);
  uint64_t v20 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000F7B60(v2, (uint64_t)v15);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1000F7CF0((uint64_t)v15, v24 + v23);
  sub_10017DF08(&qword_100E79420);
  sub_100162880();
  (*(void (**)(char *, uint64_t))(v25 + 16))(v19, v32);
  uint64_t v26 = (uint64_t (**)(uint64_t))&v19[*(int *)(v16 + 36)];
  *uint64_t v26 = sub_100489364;
  v26[1] = (uint64_t (*)(uint64_t))v24;
  sub_10017DF08(&qword_100E79370);
  State.wrappedValue.getter();
  uint64_t v27 = type metadata accessor for ColorScheme();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v27) == 1)
  {
    sub_100162880();
    (*(void (**)(char *))(v28 + 104))(v8);
    sub_100178254((uint64_t)v6, (uint64_t *)&unk_100EAA640);
  }
  else
  {
    sub_100162880();
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v8, v6, v27);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v27);
  sub_1000F7F50();
  View.statusBarPreserving(preferredColorScheme:)();
  sub_100178254((uint64_t)v8, (uint64_t *)&unk_100EAA640);
  sub_100178254((uint64_t)v19, &qword_100E79410);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v34, v22, v33);
}

uint64_t sub_1000F7B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapStatusBarColorSceneModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for WeatherMapStatusBarColorSceneModifier()
{
  uint64_t result = qword_100E793D0;
  if (!qword_100E793D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_1000F7C0C(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for ColorScheme();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100EAA640);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  }
  uint64_t v6 = sub_10017DF08(&qword_100E79370);
  *(void *)&a1[*(int *)(v6 + 28)] = *(void *)&a2[*(int *)(v6 + 28)];
  swift_retain();
  return a1;
}

uint64_t sub_1000F7CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapStatusBarColorSceneModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000F7D54()
{
  unint64_t result = qword_100EAA790;
  if (!qword_100EAA790)
  {
    sub_10018C6DC(&qword_100E827E0);
    sub_1000F6744(&qword_100EAA798, (void (*)(uint64_t))&type metadata accessor for LegibilityWeight);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA790);
  }
  return result;
}

unint64_t sub_1000F7DF8()
{
  unint64_t result = qword_100EAA6E0;
  if (!qword_100EAA6E0)
  {
    sub_10018C6DC(&qword_100EAA650);
    sub_100229D08();
    sub_1000F6744(&qword_100EAA730, (void (*)(uint64_t))type metadata accessor for MainViewSheetViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA6E0);
  }
  return result;
}

unint64_t sub_1000F7EA4()
{
  unint64_t result = qword_100EAA748;
  if (!qword_100EAA748)
  {
    sub_10018C6DC(&qword_100EAA678);
    sub_100229F4C();
    sub_1000F6744(&qword_100EAA780, (void (*)(uint64_t))type metadata accessor for MainViewScenePhaseObservationViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA748);
  }
  return result;
}

unint64_t sub_1000F7F50()
{
  unint64_t result = qword_100E79428;
  if (!qword_100E79428)
  {
    sub_10018C6DC(&qword_100E79410);
    sub_1001246C8(&qword_100E79430, &qword_100E79420);
    sub_1001246C8(&qword_100E79438, &qword_100E79440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E79428);
  }
  return result;
}

unint64_t sub_1000F8014()
{
  unint64_t result = qword_100E7A488;
  if (!qword_100E7A488)
  {
    sub_10018C6DC(&qword_100E7A470);
    sub_1001246C8(&qword_100E7A490, &qword_100E7A478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7A488);
  }
  return result;
}

void sub_1000F80B4()
{
}

void sub_1000F80DC()
{
}

uint64_t sub_1000F8114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100EAA9D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10017DF08(&qword_100EAAA20);
  __chkstk_darwin(v66);
  uint64_t v67 = (uint64_t)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10017DF08(&qword_100EAAA28);
  __chkstk_darwin(v62);
  uint64_t v63 = (uint64_t)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10017DF08(&qword_100EAA968);
  __chkstk_darwin(v65);
  uint64_t v64 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10017DF08(&qword_100EAA9A8);
  uint64_t v10 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10017DF08(&qword_100EAA998);
  __chkstk_darwin(v55);
  uint64_t v14 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100EAA988);
  __chkstk_darwin(v57);
  uint64_t v59 = (uint64_t)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100EAA978);
  uint64_t v16 = __chkstk_darwin(v60);
  uint64_t v58 = (uint64_t)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v61 = (uint64_t)v54 - v18;
  uint64_t v19 = type metadata accessor for MainViewModel(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (unsigned __int8 *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v1;
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  int v23 = *v21;
  uint64_t v24 = sub_10008DEE0((uint64_t)v21);
  if (v23 == 1)
  {
    v54[2] = v54;
    __chkstk_darwin(v24);
    v54[1] = sub_10017DF08(&qword_100EAAA40);
    uint64_t v25 = sub_10018C6DC(&qword_100EAAA48);
    uint64_t v26 = sub_10018C6DC(&qword_100EAAA50);
    v54[4] = a1;
    uint64_t v27 = v26;
    uint64_t v28 = sub_1001246C8(&qword_100EAAA58, &qword_100EAAA48);
    uint64_t v29 = sub_10018C6DC(&qword_100EAAA60);
    void v54[3] = v3;
    uint64_t v30 = v29;
    uint64_t v31 = sub_1001246C8((unint64_t *)&unk_100EAAA68, &qword_100EAAA60);
    __src[0] = v30;
    __src[1] = v31;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    __src[0] = v25;
    __src[1] = v27;
    __src[2] = v28;
    __src[3] = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    NavigationStack.init<>(root:)();
    uint64_t v33 = v56;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v56);
    v14[*(int *)(v55 + 36)] = 0;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v33);
    __src[0] = sub_1000F8ADC();
    __src[1] = v34;
    LOBYTE(__src[2]) = v35 & 1;
    sub_10017DF08((uint64_t *)&unk_100E749A0);
    Binding.wrappedValue.getter();
    swift_release();
    swift_release();
    sub_100009414(v69, (uint64_t)v70);
    uint64_t v36 = v59;
    sub_10006DF38((uint64_t)v14, v59, &qword_100EAA998);
    uint64_t v37 = v36 + *(int *)(v57 + 36);
    long long v38 = v70[1];
    *(_OWORD *)uint64_t v37 = v70[0];
    *(_OWORD *)(v37 + 16) = v38;
    *(void *)(v37 + 32) = v71;
    sub_100178110((uint64_t)v14, &qword_100EAA998);
    uint64_t v39 = sub_1000F8ADC();
    uint64_t v41 = v40;
    char v43 = v42;
    sub_1000F8BF0(v22, (uint64_t)__src);
    uint64_t v44 = swift_allocObject();
    memcpy((void *)(v44 + 16), __src, 0x48uLL);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_1000D7158;
    *(void *)(v45 + 24) = v44;
    char v69 = 0;
    swift_retain();
    swift_retain();
    swift_retain();
    State.init(wrappedValue:)();
    char v46 = __src[0];
    uint64_t v47 = __src[1];
    uint64_t v48 = v58;
    sub_10006DF38(v36, v58, &qword_100EAA988);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v49 = v48 + *(int *)(v60 + 36);
    *(void *)uint64_t v49 = v39;
    *(void *)(v49 + 8) = v41;
    *(unsigned char *)(v49 + 16) = v43 & 1;
    *(unsigned char *)(v49 + 17) = 0;
    *(void *)(v49 + 24) = sub_10010A144;
    *(void *)(v49 + 32) = v45;
    *(unsigned char *)(v49 + 40) = v46;
    *(void *)(v49 + 48) = v47;
    sub_100178110(v36, &qword_100EAA988);
    uint64_t v50 = v61;
    sub_10024D364(v48, v61, &qword_100EAA978);
    sub_10006DF38(v50, v63, &qword_100EAA978);
    swift_storeEnumTagMultiPayload();
    sub_10022A094();
    uint64_t v51 = (uint64_t)v64;
    _ConditionalContent<>.init(storage:)();
    sub_10006DF38(v51, v67, &qword_100EAA968);
    swift_storeEnumTagMultiPayload();
    sub_100227698();
    sub_1001246C8(&qword_100EAA9C8, &qword_100EAA9D0);
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v51, &qword_100EAA968);
    return sub_100178110(v50, &qword_100EAA978);
  }
  else
  {
    uint64_t v53 = v67;
    if (v23 == 2)
    {
      sub_10017DF08(&qword_100EAAA30);
      sub_1001246C8(&qword_100EAAA38, &qword_100EAAA30);
      NavigationView.init(content:)();
      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v53, v6, v3);
      swift_storeEnumTagMultiPayload();
      sub_100227698();
      sub_1001246C8(&qword_100EAA9C8, &qword_100EAA9D0);
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000F8ADC()
{
  sub_1000F8BF0(v0, (uint64_t)__src);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = v1;
  v2[3] = &protocol witness table for MainActor;
  memcpy(v2 + 4, __src, 0x48uLL);
  sub_1000F8BF0(v0, (uint64_t)__src);
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = &protocol witness table for MainActor;
  memcpy(v4 + 4, __src, 0x48uLL);
  Binding.init(get:set:)();
  return __src[0];
}

uint64_t sub_1000F8BF0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for CompactContent(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2 + 32;
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 32, v5, v7);
  return a1;
}

double sub_1000F8CC8@<D0>(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = 0xD000000000000012;
  v22[1] = 0x8000000100C96C80;
  static CoordinateSpaceProtocol<>.named<A>(_:)();
  GeometryProxy.frame<A>(in:)();
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v23.origin.x = v9;
  v23.origin.double y = v11;
  v23.size.width = v13;
  v23.size.height = v15;
  CGRect v24 = CGRectIntegral(v23);
  double y = v24.origin.y;
  *(_OWORD *)&v24.origin.double y = *(_OWORD *)(a1 + 40);
  v20[0] = *(_OWORD *)(a1 + 24);
  v20[1] = *(_OWORD *)&v24.origin.y;
  char v21 = *(unsigned char *)(a1 + 56);
  sub_10024D364((uint64_t)v20, (uint64_t)v22, &qword_100E63F98);
  sub_1000FA614((uint64_t)v22);
  sub_1000FA688();
  double v18 = v17;
  sub_1000FA614((uint64_t)v20);
  double result = y - v18;
  *a2 = y - v18;
  return result;
}

uint64_t sub_1000F8E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v166 = a2;
  uint64_t v170 = a3;
  uint64_t v149 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v148 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v147 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = type metadata accessor for Image.Scale();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v139 = (char *)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10017DF08(&qword_100E8E340);
  __chkstk_darwin(v123);
  uint64_t v122 = (uint64_t *)((char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v128 = sub_10017DF08(&qword_100E8E348);
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v124 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10017DF08(&qword_100E8E350);
  __chkstk_darwin(v121);
  uint64_t v129 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_10017DF08(&qword_100E8E358);
  __chkstk_darwin(v125);
  uint64_t v130 = (uint64_t)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_10017DF08(&qword_100E8E360);
  __chkstk_darwin(v126);
  uint64_t v134 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_10017DF08(&qword_100E8E368);
  __chkstk_darwin(v132);
  uint64_t v136 = (uint64_t)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_10017DF08(&qword_100E8E370);
  __chkstk_darwin(v131);
  uint64_t v135 = (char *)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_10017DF08(&qword_100E8E378);
  __chkstk_darwin(v133);
  uint64_t v137 = (uint64_t)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_10017DF08(&qword_100E8E380);
  __chkstk_darwin(v143);
  uint64_t v138 = (uint64_t)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_10017DF08(&qword_100E8E388);
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v144 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_10017DF08(&qword_100E8E390);
  __chkstk_darwin(v168);
  uint64_t v142 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E8E398);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v169 = (uint64_t)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v165 = (char *)&v120 - v20;
  uint64_t v164 = sub_10017DF08(&qword_100E8E3A0);
  __chkstk_darwin(v164);
  uint64_t v163 = (uint64_t)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v161 = *(void *)(v171 - 8);
  uint64_t v160 = *(void *)(v161 + 64);
  __chkstk_darwin(v171);
  uint64_t v159 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  uint64_t v158 = *(void *)(v23 - 8);
  uint64_t v157 = *(void *)(v158 + 64);
  __chkstk_darwin(v23 - 8);
  uint64_t v156 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for LocationViewerViewModel();
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E8D8D0);
  __chkstk_darwin(v29 - 8);
  uint64_t v151 = (uint64_t)&v120 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_10017DF08(&qword_100E8E3A8);
  __chkstk_darwin(v162);
  uint64_t v155 = (uint64_t)&v120 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E8E3B0);
  uint64_t v173 = *(void *)(v32 - 8);
  uint64_t v33 = __chkstk_darwin(v32);
  char v35 = (char *)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v120 - v36;
  uint64_t v38 = sub_10017DF08(&qword_100E8E3B8);
  uint64_t v39 = __chkstk_darwin(v38 - 8);
  uint64_t v167 = (uint64_t)&v120 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v172 = (uint64_t)&v120 - v41;
  swift_retain();
  sub_1000FA278();
  swift_release();
  type metadata accessor for LocationViewerBindingWrapper(0);
  sub_10015180C((uint64_t)&unk_100E8E1A8);
  uint64_t v154 = v37;
  Bindable<A>.init(wrappedValue:)();
  uint64_t v152 = sub_1000FAC60();
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  char v42 = *(void (**)(char *, uint64_t))(v173 + 8);
  v173 += 8;
  uint64_t v153 = v42;
  v42(v35, v32);
  uint64_t v150 = sub_1000FCDD8();
  uint64_t v44 = v43;
  uint64_t v45 = *(void *)(a1 + *(int *)(v171 + 112));
  swift_retain();
  sub_1001520F8();
  int v46 = v28[*(int *)(v26 + 44)];
  sub_100151660();
  sub_10015176C();
  sub_10015176C();
  uint64_t v47 = swift_allocObject();
  sub_1001516CC();
  sub_1001516CC();
  uint64_t v48 = v155;
  sub_1000FD224((uint64_t)v152, v151, v150, v44, v45, v46, (void (*)(uint64_t))sub_100150BA8, v47, v155);
  sub_10006DF38(v48, v163, &qword_100E8E3A8);
  swift_storeEnumTagMultiPayload();
  sub_10017DF08(&qword_100E8E3C0);
  sub_10024D5E4((uint64_t)&unk_100E8E3C8);
  sub_1000FD8D4();
  _ConditionalContent<>.init(storage:)();
  sub_10017DF4C(v48, &qword_100E8E3A8);
  uint64_t v49 = v32;
  uint64_t v50 = (uint64_t)v165;
  v153(v154, v49);
  uint64_t v51 = 1;
  if (sub_1000FA870())
  {
    uint64_t v52 = static VerticalAlignment.center.getter();
    uint64_t v53 = (uint64_t)v122;
    uint64_t *v122 = v52;
    *(void *)(v53 + 8) = 0;
    *(unsigned char *)(v53 + 16) = 1;
    uint64_t v54 = sub_10017DF08(&qword_100E8E3F8);
    sub_1000FB3F4(a1, (char *)(v53 + *(int *)(v54 + 44)));
    sub_10024D5E4((uint64_t)&unk_100E8E400);
    sub_1000FD1D8();
    uint64_t v55 = v124;
    View.buttonStyle<A>(_:)();
    sub_10017DF4C(v53, &qword_100E8E340);
    char v56 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    uint64_t v65 = v127;
    uint64_t v66 = (uint64_t)v129;
    uint64_t v67 = v128;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v129, v55, v128);
    uint64_t v68 = v66 + *(int *)(v121 + 36);
    *(unsigned char *)uint64_t v68 = v56;
    *(void *)(v68 + 8) = v58;
    *(void *)(v68 + 16) = v60;
    *(void *)(v68 + 24) = v62;
    *(void *)(v68 + 32) = v64;
    *(unsigned char *)(v68 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v55, v67);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v69 = v130;
    sub_10006DF38(v66, v130, &qword_100E8E350);
    uint64_t v70 = (_OWORD *)(v69 + *(int *)(v125 + 36));
    long long v71 = v177;
    *uint64_t v70 = v176;
    v70[1] = v71;
    _OWORD v70[2] = v178;
    sub_10017DF4C(v66, &qword_100E8E350);
    uint64_t v72 = v140;
    uint64_t v73 = v139;
    uint64_t v74 = v141;
    (*(void (**)(char *, void, uint64_t))(v140 + 104))(v139, enum case for Image.Scale.large(_:), v141);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v76 = (uint64_t)v134;
    uint64_t v77 = (uint64_t *)&v134[*(int *)(v126 + 36)];
    uint64_t v78 = sub_10017DF08(&qword_100EAADC0);
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))((char *)v77 + *(int *)(v78 + 28), v73, v74);
    *uint64_t v77 = KeyPath;
    sub_10006DF38(v69, v76, &qword_100E8E358);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
    sub_10017DF4C(v69, &qword_100E8E358);
    LOBYTE(KeyPath) = static Edge.Set.bottom.getter();
    uint64_t v79 = a1 + *(int *)(v171 + 52);
    long long v80 = *(_OWORD *)(v79 + 16);
    v179[0] = *(_OWORD *)v79;
    v179[1] = v80;
    char v180 = *(unsigned char *)(v79 + 32);
    sub_10024D364((uint64_t)v179, (uint64_t)v181, &qword_100E63F98);
    sub_1000FA648((uint64_t)v181, (void (*)(void, void, void, void, void))sub_100190CD4);
    sub_1000FA688();
    sub_1000FA648((uint64_t)v179, (void (*)(void, void, void, void, void))sub_100191934);
    EdgeInsets.init(_all:)();
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v86 = v85;
    uint64_t v88 = v87;
    uint64_t v89 = v136;
    sub_10006DF38(v76, v136, &qword_100E8E360);
    uint64_t v90 = v89 + *(int *)(v132 + 36);
    *(unsigned char *)uint64_t v90 = KeyPath;
    *(void *)(v90 + 8) = v82;
    *(void *)(v90 + 16) = v84;
    *(void *)(v90 + 24) = v86;
    *(void *)(v90 + 32) = v88;
    *(unsigned char *)(v90 + 40) = 0;
    sub_10017DF4C(v76, &qword_100E8E360);
    uint64_t v91 = static Alignment.center.getter();
    uint64_t v93 = v92;
    uint64_t v94 = (uint64_t)v135;
    uint64_t v95 = (uint64_t)&v135[*(int *)(v131 + 36)];
    sub_1000FAF28(a1, v95);
    uint64_t v96 = (uint64_t *)(v95 + *(int *)(sub_10017DF08(&qword_100E8E410) + 36));
    *uint64_t v96 = v91;
    v96[1] = v93;
    sub_10024D364(v89, v94, &qword_100E8E368);
    uint64_t v97 = v137;
    sub_10006DF38(v94, v137, &qword_100E8E370);
    *(unsigned char *)(v97 + *(int *)(v133 + 36)) = 1;
    sub_10017DF4C(v94, &qword_100E8E370);
    uint64_t v98 = swift_getKeyPath();
    uint64_t v99 = static Alignment.top.getter();
    uint64_t v101 = v100;
    uint64_t v102 = v138;
    sub_10006DF38(v97, v138, &qword_100E8E378);
    uint64_t v103 = v143;
    uint64_t v104 = v102 + *(int *)(v143 + 36);
    *(void *)uint64_t v104 = v98;
    *(unsigned char *)(v104 + 8) = 0;
    *(void *)(v104 + 16) = v99;
    *(void *)(v104 + 24) = v101;
    sub_10017DF4C(v97, &qword_100E8E378);
    uint64_t v105 = v147;
    static AccessibilityChildBehavior.contain.getter();
    unint64_t v106 = sub_1000FD750();
    uint64_t v107 = v144;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v105, v149);
    sub_10017DF4C(v102, &qword_100E8E380);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v108 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v110 = v109;
    LOBYTE(v97) = v111 & 1;
    uint64_t v174 = v103;
    unint64_t v175 = v106;
    swift_getOpaqueTypeConformance2();
    uint64_t v112 = (uint64_t)v142;
    uint64_t v113 = v146;
    View.accessibilityLabel(_:)();
    sub_100191924(v108, v110, v97);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v145 + 8))(v107, v113);
    sub_10024D364(v112, v50, &qword_100E8E390);
    uint64_t v51 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v50, v51, 1, v168);
  uint64_t v114 = v172;
  uint64_t v115 = v167;
  sub_10006DF38(v172, v167, &qword_100E8E3B8);
  uint64_t v116 = v169;
  sub_10006DF38(v50, v169, &qword_100E8E398);
  uint64_t v117 = v170;
  sub_10006DF38(v115, v170, &qword_100E8E3B8);
  uint64_t v118 = sub_10017DF08(&qword_100E8E3F0);
  sub_10006DF38(v116, v117 + *(int *)(v118 + 48), &qword_100E8E398);
  sub_10017DF4C(v50, &qword_100E8E398);
  sub_10017DF4C(v114, &qword_100E8E3B8);
  sub_10017DF4C(v116, &qword_100E8E398);
  return sub_10017DF4C(v115, &qword_100E8E3B8);
}

uint64_t type metadata accessor for LocationViewerBindingWrapper(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8DF28);
}

void sub_1000FA278()
{
}

uint64_t sub_1000FA290()
{
  uint64_t v1 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  __chkstk_darwin(v1 - 8);
  uint64_t result = sub_1001C15A0();
  if ((result & 1) == 0)
  {
    type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
    sub_10017DF08(&qword_100E8EF18);
    State.wrappedValue.getter();
    sub_100151660();
    long long v3 = *(_OWORD *)(v0 + 16);
    v4[0] = *(_OWORD *)v0;
    v4[1] = v3;
    char v5 = *(unsigned char *)(v0 + 32);
    sub_10024D364((uint64_t)v4, (uint64_t)v6, &qword_100E63F98);
    sub_1000FA648((uint64_t)v6, (void (*)(void, void, void, void, void))sub_100190CD4);
    sub_1000FA688();
    return sub_1000FA648((uint64_t)v4, (void (*)(void, void, void, void, void))sub_100191934);
  }
  return result;
}

double sub_1000FA3CC()
{
  uint64_t v1 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v1 - 8);
  long long v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for LocationHeaderView(0);
  char v5 = (long long *)(v0 + v4[14]);
  long long v6 = v5[1];
  if (*(unsigned char *)(v0 + v4[16] + 138) == 1)
  {
    long long v17 = *v5;
    long long v18 = v6;
    LOBYTE(v19) = *((unsigned char *)v5 + 32);
    sub_10024D364((uint64_t)&v17, (uint64_t)v24, &qword_100E63F98);
    sub_1000FA614((uint64_t)v24);
    sub_1000FA688();
    double v8 = v7;
    sub_1000FA614((uint64_t)&v17);
  }
  else
  {
    v21[0] = *v5;
    v21[1] = v6;
    char v22 = *((unsigned char *)v5 + 32);
    sub_10024D364((uint64_t)v21, (uint64_t)v23, &qword_100E63F98);
    sub_1000FA614((uint64_t)v23);
    sub_1000FA688();
    double v10 = v9;
    sub_1000FA614((uint64_t)v21);
    uint64_t v11 = (long long *)(v0 + v4[15]);
    long long v12 = v11[1];
    long long v17 = *v11;
    long long v18 = v12;
    long long v19 = v11[2];
    char v20 = *((unsigned char *)v11 + 48);
    sub_10024D364((uint64_t)&v17, (uint64_t)v24, &qword_100E63DB0);
    sub_1000FDC70((uint64_t)v24);
    sub_1000FDD60();
    sub_1000FDC70((uint64_t)&v17);
    double v8 = v10 - v16[2];
  }
  sub_1001EFFBC();
  uint64_t v13 = *((void *)v3 + 1);
  sub_10014CC74((uint64_t)v3, (void (*)(void))type metadata accessor for DisplayMetrics);
  double v14 = 0.0;
  if (v13 == 1) {
    double v14 = sub_1000FA800();
  }
  return v8 + v14;
}

uint64_t sub_1000FA614(uint64_t a1)
{
  uint64_t v2 = sub_100187094(a1);
  v3(v2);
  return v1;
}

uint64_t sub_1000FA648(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void sub_1000FA688()
{
  sub_100162EA0();
  type metadata accessor for EnvironmentValues();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10011BFD8();
  if (*(unsigned char *)(v0 + 32) != 1)
  {
    swift_retain();
    static os_log_type_t.fault.getter();
    long long v3 = static Log.runtimeIssuesLog.getter();
    if (sub_1005EFF58(v3))
    {
      sub_10017E670();
      uint64_t v7 = sub_10016EEA8();
      sub_1005F002C(4.8149e-34);
      sub_10016414C(0x65736E4965676445, 0xEA00000000007374, &v7);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_1005EFCD0((void *)&_mh_execute_header, v4, v5, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      sub_1005EFEE4();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    sub_1005EFDEC();
    sub_1005D2C94(v0);
    sub_100164FC8();
    v6();
  }
  sub_100162694();
}

double sub_1000FA800()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  double result = 0.0;
  if (!v1) {
    double result = 12.0;
  }
  if (v1 == (id)5) {
    return 20.0;
  }
  return result;
}

uint64_t sub_1000FA870()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E662F0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  double v14 = (char *)&v21 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v14, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_10006DF38((uint64_t)v16, (uint64_t)v7, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v14, v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v0) == 1)
  {
    sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
    {
      sub_10017DF4C((uint64_t)v7, &qword_100E65ED8);
      return 1;
    }
    goto LABEL_6;
  }
  sub_10006DF38((uint64_t)v7, (uint64_t)v11, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
  {
    sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
LABEL_6:
    sub_10017DF4C((uint64_t)v7, &qword_100E662F0);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
  sub_10015180C((uint64_t)&qword_100E65F28);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v20 = *(void (**)(char *, uint64_t))(v1 + 8);
  v20(v3, v0);
  sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
  sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
  v20(v11, v0);
  sub_10017DF4C((uint64_t)v7, &qword_100E65ED8);
  if (v19) {
    return 1;
  }
LABEL_7:
  if (qword_100E62538 != -1) {
    swift_once();
  }
  return byte_100E8DE90;
}

void *sub_1000FAC60()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView.LocationTabPageModel(0) - 8;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocationViewerViewModel();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  uint64_t v7 = *(void *)&v6[*(int *)(v4 + 28)];
  swift_bridgeObjectRetain();
  sub_100151660();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    char v19 = _swiftEmptyArrayStorage;
    sub_1000FAEC4();
    uint64_t v9 = v19;
    uint64_t v18 = type metadata accessor for LocationModel();
    uint64_t v10 = *(void *)(v18 - 8);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v17[1] = v7;
    uint64_t v13 = v7 + v12;
    uint64_t v14 = *(void *)(v10 + 72);
    do
    {
      v11(v2, v13, v18);
      char v19 = v9;
      unint64_t v15 = v9[2];
      if (v15 >= v9[3] >> 1)
      {
        sub_1000FAEC4();
        uint64_t v9 = v19;
      }
      v9[2] = v15 + 1;
      sub_1001516CC();
      v13 += v14;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v9;
}

void sub_1000FAEC4()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

uint64_t sub_1000FAF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v29 = sub_10017DF08(&qword_100E8E468);
  __chkstk_darwin(v29);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E8E470);
  uint64_t v5 = __chkstk_darwin(v31);
  uint64_t v28 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v30 = (uint64_t)&v27 - v7;
  uint64_t v8 = sub_10017DF08(&qword_100E8E478);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1 + *(int *)(type metadata accessor for MeasuredLocationViewerView(0) + 40);
  uint64_t v16 = *(void *)v15;
  LOBYTE(a1) = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, a1);
  sub_100149AE8();
  char v18 = v17;
  sub_10018F6D8(v16, a1);
  if (v18)
  {
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Color.RGBColorSpace.sRGB(_:), v11);
    *uint64_t v10 = Color.init(_:white:opacity:)();
    swift_storeEnumTagMultiPayload();
    sub_1000FDA38();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v20 = v31;
    uint64_t v21 = sub_1000FB30C();
    if (qword_100E62580 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Material();
    uint64_t v23 = sub_1002102B0(v22, (uint64_t)qword_100F51B10);
    char v24 = static Edge.Set.all.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v4, v23, v22);
    v4[*(int *)(v29 + 36)] = v24;
    uint64_t v25 = v28;
    sub_10006DF38((uint64_t)v4, (uint64_t)v28 + *(int *)(v20 + 36), &qword_100E8E468);
    *uint64_t v25 = v21;
    sub_10017DF4C((uint64_t)v4, &qword_100E8E468);
    uint64_t v26 = v30;
    sub_10024D364((uint64_t)v25, v30, &qword_100E8E470);
    sub_10006DF38(v26, (uint64_t)v10, &qword_100E8E470);
    swift_storeEnumTagMultiPayload();
    sub_1000FDA38();
    _ConditionalContent<>.init(storage:)();
    return sub_10017DF4C(v26, &qword_100E8E470);
  }
}

uint64_t sub_1000FB30C()
{
  uint64_t v0 = type metadata accessor for LocationViewerViewModel();
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  LODWORD(v1) = v3[*(int *)(v1 + 60)];
  sub_100151660();
  if (v1 != 1) {
    return static Color.clear.getter();
  }
  static Color.black.getter();
  uint64_t v4 = Color.opacity(_:)();
  swift_release();
  return v4;
}

uint64_t sub_1000FB3F4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v132 = sub_10017DF08(&qword_100E8E490);
  uint64_t v3 = __chkstk_darwin(v132);
  uint64_t v128 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v131 = (char *)&v111 - v5;
  uint64_t v146 = sub_10017DF08(&qword_100E8E498);
  uint64_t v130 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v129 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v140 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  char v111 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v137);
  uint64_t v141 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v133 = (uint64_t)&v111 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v138 = (char *)&v111 - v13;
  __chkstk_darwin(v12);
  uint64_t v139 = (char *)&v111 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E8E4A0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v145 = (uint64_t)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v155 = (uint64_t)&v111 - v18;
  uint64_t v19 = sub_10017DF08(&qword_100E8E4A8);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v144 = (uint64_t)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v157 = (uint64_t)&v111 - v22;
  uint64_t v23 = type metadata accessor for PageControl(0);
  __chkstk_darwin(v23 - 8);
  uint64_t v134 = (uint64_t)&v111 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10017DF08(&qword_100E8E4B0) - 8;
  uint64_t v25 = __chkstk_darwin(v136);
  uint64_t v143 = (uint64_t)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v135 = (char *)&v111 - v28;
  __chkstk_darwin(v27);
  uint64_t v151 = (uint64_t)&v111 - v29;
  uint64_t v148 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v148);
  uint64_t v31 = (char *)&v111 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v32 = *(void *)(v150 - 8);
  uint64_t v33 = *(void *)(v32 + 64);
  __chkstk_darwin(v150);
  uint64_t v34 = sub_10017DF08(&qword_100E8E4B8);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v111 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_10017DF08(&qword_100E8E4C0);
  __chkstk_darwin(v149);
  uint64_t v39 = (char *)&v111 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E8E4C8);
  uint64_t v153 = *(void *)(v40 - 8);
  uint64_t v154 = v40;
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v111 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v156 = (char *)&v111 - v44;
  sub_10015176C();
  uint64_t v45 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v46 = (v45 + 16) & ~v45;
  uint64_t v117 = v46 + v33;
  uint64_t v116 = v45 | 7;
  swift_allocObject();
  uint64_t v118 = v46;
  uint64_t v120 = (char *)&v111 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001516CC();
  Button.init(action:label:)();
  uint64_t v47 = a1;
  uint64_t v113 = a1 + *(int *)(v150 + 60);
  sub_1001520F8();
  char v48 = v31[*(int *)(v148 + 44)];
  uint64_t v124 = v31;
  sub_100151660();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = swift_allocObject();
  *(unsigned char *)(v50 + 16) = (v48 & 1) == 0;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  uint64_t v115 = v35 + 16;
  uint64_t v114 = v51;
  v51(v39, v37, v34);
  uint64_t v52 = (uint64_t *)&v39[*(int *)(v149 + 36)];
  *uint64_t v52 = KeyPath;
  v52[1] = (uint64_t)sub_10021277C;
  v52[2] = v50;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v123 = v37;
  uint64_t v126 = v34;
  uint64_t v125 = v35 + 8;
  uint64_t v112 = v53;
  v53(v37, v34);
  uint64_t v54 = sub_10017DF08(&qword_100E8E4D0);
  unint64_t v55 = sub_1000FD974();
  unint64_t v56 = sub_10024D5E4((uint64_t)&unk_100E8E4E0);
  uint64_t v122 = v54;
  unint64_t v119 = v55;
  unint64_t v121 = v56;
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  uint64_t v127 = v39;
  sub_10017DF4C((uint64_t)v39, &qword_100E8E4C0);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v153 + 32);
  uint64_t v152 = v43;
  v57(v156, v43, v154);
  sub_1000FCA70(v134);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v58 = (uint64_t)v135;
  sub_10015176C();
  memcpy((void *)(v58 + *(int *)(v136 + 44)), __src, 0x70uLL);
  sub_100151660();
  sub_10024D364(v58, v151, &qword_100E8E4B0);
  if (qword_100E62538 != -1) {
    swift_once();
  }
  if (byte_100E8DE90 == 1)
  {
    uint64_t v59 = v157;
    sub_1006ECF54(v47, v157);
    uint64_t v60 = 0;
    uint64_t v61 = v155;
  }
  else
  {
    uint64_t v60 = 1;
    uint64_t v61 = v155;
    uint64_t v59 = v157;
  }
  uint64_t v62 = v142;
  uint64_t v63 = (uint64_t)v141;
  uint64_t v64 = v140;
  uint64_t v65 = (uint64_t)v139;
  uint64_t v66 = (uint64_t)v138;
  uint64_t v67 = sub_10017DF08(&qword_100E8E4E8);
  _s7Weather24LocationCompositionStateOwst_0(v59, v60, 1, v67);
  sub_10019B2FC();
  (*(void (**)(uint64_t, void, uint64_t))(v64 + 104))(v66, enum case for UserInterfaceSizeClass.compact(_:), v62);
  _s7Weather24LocationCompositionStateOwst_0(v66, 0, 1, v62);
  uint64_t v68 = v63 + *(int *)(v137 + 48);
  sub_10006DF38(v65, v63, &qword_100E65ED8);
  sub_10006DF38(v66, v68, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v62) != 1)
  {
    uint64_t v69 = v133;
    sub_10006DF38(v63, v133, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v68, 1, v62) != 1)
    {
      uint64_t v72 = v65;
      uint64_t v73 = v69;
      uint64_t v74 = v111;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v111, v68, v62);
      sub_10015180C((uint64_t)&qword_100E65F28);
      char v75 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v76 = *(void (**)(char *, uint64_t))(v64 + 8);
      v76(v74, v62);
      sub_10017DF4C(v66, &qword_100E65ED8);
      sub_10017DF4C(v72, &qword_100E65ED8);
      v76((char *)v73, v62);
      sub_10017DF4C(v63, &qword_100E65ED8);
      if (v75) {
        goto LABEL_13;
      }
      uint64_t v70 = 1;
      uint64_t v71 = v146;
      uint64_t v61 = v155;
LABEL_15:
      uint64_t v95 = v157;
      goto LABEL_16;
    }
    sub_10017DF4C(v66, &qword_100E65ED8);
    sub_10017DF4C(v65, &qword_100E65ED8);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v69, v62);
LABEL_11:
    sub_10017DF4C(v63, &qword_100E662F0);
    uint64_t v70 = 1;
    uint64_t v71 = v146;
    goto LABEL_15;
  }
  sub_10017DF4C(v66, &qword_100E65ED8);
  sub_10017DF4C(v65, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v68, 1, v62) != 1) {
    goto LABEL_11;
  }
  sub_10017DF4C(v63, &qword_100E65ED8);
LABEL_13:
  sub_10015176C();
  swift_allocObject();
  sub_1001516CC();
  uint64_t v77 = v123;
  Button.init(action:label:)();
  uint64_t v78 = v124;
  sub_1001520F8();
  char v79 = v78[*(int *)(v148 + 40)];
  sub_100151660();
  uint64_t v80 = swift_getKeyPath();
  uint64_t v81 = swift_allocObject();
  *(unsigned char *)(v81 + 16) = (v79 & 1) == 0;
  uint64_t v82 = (uint64_t)v127;
  uint64_t v83 = v126;
  v114(v127, v77, v126);
  uint64_t v84 = (uint64_t *)(v82 + *(int *)(v149 + 36));
  *uint64_t v84 = v80;
  v84[1] = (uint64_t)sub_100212FFC;
  v84[2] = v81;
  v112(v77, v83);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v85 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v87 = v86;
  LOBYTE(v77) = v88 & 1;
  uint64_t v89 = (uint64_t)v128;
  View.accessibilityLabel(_:)();
  sub_100191924(v85, v87, (char)v77);
  swift_bridgeObjectRelease();
  sub_10017DF4C(v82, &qword_100E8E4C0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v90 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v92 = v91;
  LOBYTE(v77) = v93 & 1;
  uint64_t v94 = (uint64_t)v131;
  ModifiedContent<>.accessibilityHint(_:)();
  sub_100191924(v90, v92, (char)v77);
  swift_bridgeObjectRelease();
  uint64_t v95 = v157;
  sub_10017DF4C(v89, &qword_100E8E490);
  sub_1000FD828();
  uint64_t v96 = v129;
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  sub_10017DF4C(v94, &qword_100E8E490);
  uint64_t v61 = v155;
  uint64_t v71 = v146;
  (*(void (**)(uint64_t, char *, uint64_t))(v130 + 32))(v155, v96, v146);
  uint64_t v70 = 0;
LABEL_16:
  _s7Weather24LocationCompositionStateOwst_0(v61, v70, 1, v71);
  uint64_t v98 = v153;
  uint64_t v97 = v154;
  uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v153 + 16);
  uint64_t v100 = v152;
  v99(v152, v156, v154);
  uint64_t v101 = v151;
  uint64_t v102 = v143;
  sub_10006DF38(v151, v143, &qword_100E8E4B0);
  uint64_t v103 = v95;
  uint64_t v104 = v144;
  sub_10006DF38(v103, v144, &qword_100E8E4A8);
  uint64_t v105 = v61;
  uint64_t v106 = v145;
  sub_10006DF38(v105, v145, &qword_100E8E4A0);
  uint64_t v107 = v147;
  v99(v147, v100, v97);
  uint64_t v108 = (int *)sub_10017DF08(&qword_100E8E4F0);
  sub_10006DF38(v102, (uint64_t)&v107[v108[12]], &qword_100E8E4B0);
  sub_10006DF38(v104, (uint64_t)&v107[v108[16]], &qword_100E8E4A8);
  sub_10006DF38(v106, (uint64_t)&v107[v108[20]], &qword_100E8E4A0);
  sub_10017DF4C(v155, &qword_100E8E4A0);
  sub_10017DF4C(v157, &qword_100E8E4A8);
  sub_10017DF4C(v101, &qword_100E8E4B0);
  uint64_t v109 = *(void (**)(char *, uint64_t))(v98 + 8);
  v109(v156, v97);
  sub_10017DF4C(v106, &qword_100E8E4A0);
  sub_10017DF4C(v104, &qword_100E8E4A8);
  sub_10017DF4C(v102, &qword_100E8E4B0);
  return ((uint64_t (*)(char *, uint64_t))v109)(v152, v97);
}

void sub_1000FC6E4()
{
  sub_100163298();
  if (v3)
  {
    *(void *)(v1 + 16) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_10017DF08(&qword_100E63BF8);
    uint64_t v6 = v1 + *(int *)(v4 + 32);
    _s7Weather24LocationCompositionStateOwst_0(v6, v0, v0, v5);
  }
}

void sub_1000FC75C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017E428();
  sub_10017C808();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_10016350C();
    _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(v5 + *(int *)(a4 + 20) + 8) = -v4;
  }
}

void sub_1000FC7D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(void))
{
  a5(0);
  sub_100162F30();
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v9);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
}

uint64_t sub_1000FC864(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E63A50);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1000FC8E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  type metadata accessor for OverviewTableViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = v10;
    uint64_t v13 = a1;
  }
  else
  {
    uint64_t v12 = sub_10017DF08(a5);
    uint64_t v13 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v13, a2, a2, v12);
}

uint64_t sub_1000FC978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

void sub_1000FC9C4()
{
  sub_100150288();
  sub_10017DF08(&qword_100E79530);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v4);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20) + 8) = (v0 - 1);
  }
}

uint64_t sub_1000FCA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100484EC4);
}

uint64_t sub_1000FCA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004142AC);
}

uint64_t sub_1000FCA70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = type metadata accessor for LocationViewerViewModel();
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E8D8D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E8E3B0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v23 - v13;
  swift_retain();
  sub_1000FA278();
  swift_release();
  type metadata accessor for LocationViewerBindingWrapper(0);
  sub_10015180C((uint64_t)&unk_100E8E1A8);
  Bindable<A>.init(wrappedValue:)();
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  uint64_t v16 = *(void *)&v4[*(int *)(v2 + 28)];
  swift_bridgeObjectRetain();
  sub_100151660();
  uint64_t v17 = v24;
  sub_10024D364((uint64_t)v7, v24, &qword_100E8D8D0);
  uint64_t v18 = (int *)type metadata accessor for PageControl(0);
  *(void *)(v17 + v18[5]) = v16;
  uint64_t v19 = (uint64_t *)(v17 + v18[6]);
  *uint64_t v19 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = v17 + v18[7];
  type metadata accessor for PageControlDisplayState(0);
  sub_10015180C((uint64_t)&unk_100E8E1B0);
  *(void *)uint64_t v20 = Environment.init<A>(_:)();
  *(unsigned char *)(v20 + 8) = v21 & 1;
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
}

uint64_t sub_1000FCDD8()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E662F0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v21 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v14, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_10006DF38((uint64_t)v16, (uint64_t)v7, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v14, v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v0) == 1)
  {
    sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
    {
      sub_10017DF4C((uint64_t)v7, &qword_100E65ED8);
      return swift_retain();
    }
  }
  else
  {
    sub_10006DF38((uint64_t)v7, (uint64_t)v11, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_10015180C((uint64_t)&qword_100E65F28);
      char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v1 + 8);
      v19(v3, v0);
      sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
      sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
      v19(v11, v0);
      sub_10017DF4C((uint64_t)v7, &qword_100E65ED8);
      if (v18) {
        return swift_retain();
      }
      goto LABEL_7;
    }
    sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
  }
  sub_10017DF4C((uint64_t)v7, &qword_100E662F0);
LABEL_7:
  if (qword_100E628A8 != -1) {
    swift_once();
  }
  return swift_retain();
}

unint64_t sub_1000FD1D8()
{
  unint64_t result = qword_100E8E408;
  if (!qword_100E8E408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E408);
  }
  return result;
}

uint64_t sub_1000FD224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v38 = a8;
  uint64_t v39 = a1;
  uint64_t v40 = a7;
  int v36 = a6;
  uint64_t v35 = a2;
  uint64_t v12 = sub_10017DF08(&qword_100E8E520);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v34 - v16;
  char v18 = (int *)sub_10017DF08(&qword_100E8E3A8);
  uint64_t v19 = a9 + v18[17];
  LOBYTE(v41) = 0;
  State.init(wrappedValue:)();
  uint64_t v20 = *((void *)&v42 + 1);
  *(unsigned char *)uint64_t v19 = v42;
  *(void *)(v19 + 8) = v20;
  uint64_t v21 = a9 + v18[18];
  LOBYTE(v41) = 0;
  State.init(wrappedValue:)();
  uint64_t v22 = *((void *)&v42 + 1);
  *(unsigned char *)uint64_t v21 = v42;
  *(void *)(v21 + 8) = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E8E528);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 1, 1, v23);
  sub_10006DF38((uint64_t)v17, (uint64_t)v15, &qword_100E8E520);
  State.init(wrappedValue:)();
  sub_10017DF4C((uint64_t)v17, &qword_100E8E520);
  uint64_t v24 = v18[20];
  uint64_t v41 = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)(a9 + v24) = v42;
  uint64_t v25 = a9 + v18[22];
  *(void *)uint64_t v25 = swift_getKeyPath();
  *(unsigned char *)(v25 + 8) = 0;
  uint64_t v26 = a9 + v18[23];
  *(void *)uint64_t v26 = swift_getKeyPath();
  *(unsigned char *)(v26 + 8) = 0;
  uint64_t v27 = a9 + v18[24];
  *(void *)uint64_t v27 = swift_getKeyPath();
  *(unsigned char *)(v27 + 8) = 0;
  uint64_t v28 = v35;
  sub_10006DF38(v35, a9, &qword_100E8D8D0);
  uint64_t v29 = a9 + v18[13];
  sub_10017DF08(&qword_100E8D8D0);
  Binding.wrappedValue.getter();
  *(void *)(v29 + *(int *)(sub_10017DF08(&qword_100E8E530) + 28)) = 0;
  *(unsigned char *)(a9 + v18[21]) = v36;
  uint64_t v30 = (void *)(a9 + v18[15]);
  uint64_t v31 = v37;
  *uint64_t v30 = a3;
  v30[1] = v31;
  *(void *)(a9 + v18[16]) = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v32 = sub_10015097C(v39, v40);
  swift_release();
  swift_release();
  sub_10017DF4C(v28, &qword_100E8D8D0);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a9 + v18[14]) = v32;
  return result;
}

void sub_1000FD510(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(a4 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v9) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v14 = *(_DWORD *)(v11 + 80);
  uint64_t v15 = *(void *)(*(void *)(v7 - 8) + 64) + v14;
  uint64_t v16 = (v15 & ~v14) + *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v17 = *(unsigned __int8 *)(v8 + 80) | *(_DWORD *)(v11 + 80);
  size_t v18 = ((v16 + ((v16 + v17) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v13 >= a3)
  {
    int v22 = 0;
  }
  else
  {
    unsigned int v19 = a3 - v13;
    if (((v16 + ((v16 + v17) & ~v17) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v20 = v19 + 1;
    }
    else {
      unsigned int v20 = 2;
    }
    if (v20 >= 0x10000) {
      int v21 = 4;
    }
    else {
      int v21 = 2;
    }
    if (v20 < 0x100) {
      int v21 = 1;
    }
    if (v20 >= 2) {
      int v22 = v21;
    }
    else {
      int v22 = 0;
    }
  }
  if (a2 <= v13)
  {
    switch(v22)
    {
      case 1:
        a1[v18] = 0;
        if (a2) {
          goto LABEL_32;
        }
        break;
      case 2:
        *(_WORD *)&a1[v18] = 0;
        if (a2) {
          goto LABEL_32;
        }
        break;
      case 3:
LABEL_39:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)&a1[v18] = 0;
        goto LABEL_31;
      default:
LABEL_31:
        if (a2)
        {
LABEL_32:
          if (v9 < v12)
          {
            a1 = (unsigned char *)((unint64_t)&a1[v15] & ~v14);
            uint64_t v9 = v12;
            uint64_t v7 = v10;
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, a2, v9, v7);
        }
        break;
    }
  }
  else
  {
    if (v18) {
      int v23 = 1;
    }
    else {
      int v23 = a2 - v13;
    }
    if (v18)
    {
      int v24 = ~v13 + a2;
      bzero(a1, v18);
      *uint64_t v6 = v24;
    }
    switch(v22)
    {
      case 1:
        *((unsigned char *)v6 + v18) = v23;
        break;
      case 2:
        *(_WORD *)((char *)v6 + v18) = v23;
        break;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)((char *)v6 + v18) = v23;
        break;
      default:
        return;
    }
  }
}

unint64_t sub_1000FD750()
{
  unint64_t result = qword_100E8E418;
  if (!qword_100E8E418)
  {
    sub_10018C6DC(&qword_100E8E380);
    sub_1001CB570((uint64_t)&unk_100E8E420);
    sub_10024D5E4((uint64_t)&unk_100E8E458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E418);
  }
  return result;
}

unint64_t sub_1000FD828()
{
  unint64_t result = qword_100E8E4F8;
  if (!qword_100E8E4F8)
  {
    sub_10018C6DC(&qword_100E8E490);
    sub_1000FD974();
    sub_10015180C((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E4F8);
  }
  return result;
}

unint64_t sub_1000FD8D4()
{
  unint64_t result = qword_100E8E3D0;
  if (!qword_100E8E3D0)
  {
    sub_10018C6DC(&qword_100E8E3C0);
    sub_10024D5E4((uint64_t)&unk_100E8E3D8);
    sub_10021C674();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E3D0);
  }
  return result;
}

unint64_t sub_1000FD974()
{
  unint64_t result = qword_100E8E4D8;
  if (!qword_100E8E4D8)
  {
    sub_10018C6DC(&qword_100E8E4C0);
    sub_10024D5E4((uint64_t)&unk_100EAAC90);
    sub_10024D5E4((uint64_t)&unk_100E66BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E4D8);
  }
  return result;
}

unint64_t sub_1000FDA38()
{
  unint64_t result = qword_100E8E480;
  if (!qword_100E8E480)
  {
    sub_10018C6DC(&qword_100E8E470);
    sub_10024D5E4((uint64_t)&unk_100E8E488);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E480);
  }
  return result;
}

uint64_t sub_1000FDAD8()
{
  id v1 = [self currentDevice];
  id v2 = [v1 userInterfaceIdiom];

  if (v2 == (id)1)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    uint64_t v4 = type metadata accessor for LocationHeaderView(0);
    uint64_t v5 = *(int *)(v4 + 60);
    if (*(unsigned char *)(v0 + *(int *)(v4 + 64) + 136)) {
      double v6 = 0.4;
    }
    else {
      double v6 = 0.36;
    }
    long long v7 = *(_OWORD *)(v0 + v5 + 16);
    v11[0] = *(_OWORD *)(v0 + v5);
    v11[1] = v7;
    void v11[2] = *(_OWORD *)(v0 + v5 + 32);
    char v12 = *(unsigned char *)(v0 + v5 + 48);
    sub_10024D364((uint64_t)v11, (uint64_t)v13, &qword_100E63DB0);
    sub_1000FDC70((uint64_t)v13);
    sub_1000FDD60();
    sub_1000FDC70((uint64_t)v11);
    sub_1000FDC70((uint64_t)v13);
    sub_1000FDD60();
    sub_1000FDC70((uint64_t)v11);
    sub_1000FDC70((uint64_t)v13);
    sub_1000FDD60();
    sub_1000FDC70((uint64_t)v11);
    *(double *)&uint64_t result = v6 * (v8 + v9 + v10);
  }
  return result;
}

uint64_t sub_1000FDC70(uint64_t a1)
{
  uint64_t v2 = sub_100187094(a1);
  v3(v2);
  return v1;
}

uint64_t sub_1000FDCA8(uint64_t a1)
{
  uint64_t v2 = sub_10017DFE0(a1);
  v3(v2, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
  return v1;
}

uint64_t sub_1000FDCE8(uint64_t a1)
{
  uint64_t v2 = sub_10019B15C(a1);
  v3(v2);
  return v1;
}

uint64_t sub_1000FDD1C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

void sub_1000FDD60()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  type metadata accessor for EnvironmentValues();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10012B938();
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 40);
    long long v6 = *(_OWORD *)(v0 + 24);
    uint64_t v7 = *(void *)v0;
    long long v8 = *(_OWORD *)(v0 + 8);
  }
  else
  {
    swift_retain();
    static os_log_type_t.fault.getter();
    double v9 = static Log.runtimeIssuesLog.getter();
    if (sub_1005EFDD0(v9))
    {
      sub_10017E670();
      uint64_t v13 = sub_10016EEA8();
      sub_100214F3C(4.8149e-34);
      sub_10016414C(0x74654D656E656353, 0xEC00000073636972, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_1005EFC40((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_1005D2C58(v0);
    sub_100164F40();
    v12();
    uint64_t v7 = v13;
    long long v8 = v14;
    long long v6 = v15;
    uint64_t v5 = v16;
  }
  *(void *)uint64_t v3 = v7;
  *(_OWORD *)(v3 + 8) = v8;
  *(_OWORD *)(v3 + 24) = v6;
  *(void *)(v3 + 40) = v5;
  sub_100162694();
}

uint64_t sub_1000FDF14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t, uint64_t), uint64_t a5, void (*a6)(char *, uint64_t, uint64_t))
{
  uint64_t v215 = a6;
  uint64_t v206 = a5;
  uint64_t v212 = a4;
  uint64_t v233 = a3;
  uint64_t v224 = a2;
  uint64_t ObjectType = a1;
  uint64_t v6 = type metadata accessor for SkyBackgroundGradient();
  __chkstk_darwin(v6 - 8);
  uint64_t v181 = (char *)&v172 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = type metadata accessor for VFXLoadRequest();
  uint64_t v182 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  char v180 = (char *)&v172 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E76780);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v179 = (uint64_t)&v172 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v194 = (uint64_t)&v172 - v12;
  uint64_t v190 = type metadata accessor for BackgroundAnimationData();
  uint64_t v189 = *(void *)(v190 - 8);
  __chkstk_darwin(v190);
  uint64_t v188 = (char *)&v172 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for BackgroundAnimationData.Model();
  uint64_t v192 = *(void *)(v193 - 8);
  uint64_t v14 = __chkstk_darwin(v193);
  long long v178 = (char *)&v172 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v191 = (char *)&v172 - v16;
  uint64_t v200 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v199 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  uint64_t v198 = (char *)&v172 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for CollisionViewMetrics();
  uint64_t v174 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v172 = (char *)&v172 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_10017DF08(&qword_100EB4A98);
  __chkstk_darwin(v185);
  uint64_t v186 = (uint64_t)&v172 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_10017DF08(&qword_100EB4AA0);
  __chkstk_darwin(v202);
  uint64_t v207 = (uint64_t)&v172 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v213 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  uint64_t v196 = (char *)&v172 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_10017DF08(&qword_100EB4A90);
  __chkstk_darwin(v211);
  uint64_t v214 = (uint64_t)&v172 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E64A60);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v209 = (uint64_t)&v172 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v208 = (char *)&v172 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v201 = (uint64_t)&v172 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v172 - v30;
  uint64_t v32 = sub_10017DF08(&qword_100EB4848);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v177 = (uint64_t)&v172 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v173 = (uint64_t)&v172 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v184 = (char *)&v172 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v217 = (uint64_t)&v172 - v40;
  __chkstk_darwin(v39);
  uint64_t v231 = (uint64_t)&v172 - v41;
  uint64_t v232 = type metadata accessor for TargetWindowSizeClass();
  uint64_t v226 = *(void *)(v232 - 8);
  uint64_t v42 = __chkstk_darwin(v232);
  uint64_t v195 = (char *)&v172 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  char v222 = (char *)&v172 - v45;
  __chkstk_darwin(v44);
  uint64_t v230 = (uint64_t)&v172 - v46;
  uint64_t v47 = sub_10017DF08(&qword_100EAA930);
  uint64_t v48 = __chkstk_darwin(v47 - 8);
  uint64_t v176 = (uint64_t)&v172 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  unint64_t v175 = (char *)&v172 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v197 = (uint64_t)&v172 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  unint64_t v204 = (char *)&v172 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v205 = (uint64_t)&v172 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v60 = (char *)&v172 - v59;
  __chkstk_darwin(v58);
  uint64_t v229 = (uint64_t)&v172 - v61;
  uint64_t v62 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v63 = __chkstk_darwin(v62);
  uint64_t v218 = (uint64_t)&v172 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v219 = (uint64_t)&v172 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v221 = (uint64_t)&v172 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v71 = (char **)((char *)&v172 - v70);
  uint64_t v72 = __chkstk_darwin(v69);
  uint64_t v74 = (char *)&v172 - v73;
  __chkstk_darwin(v72);
  uint64_t v76 = (char *)&v172 - v75;
  uint64_t v77 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v77 - 8);
  char v79 = (char *)&v172 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for DynamicTypeSize();
  uint64_t v210 = *(char **)(v80 - 8);
  uint64_t v81 = v210;
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v203 = (char *)&v172 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __chkstk_darwin(v82);
  uint64_t v216 = (char *)&v172 - v85;
  __chkstk_darwin(v84);
  uint64_t v87 = (char *)&v172 - v86;
  uint64_t v89 = v88;
  sub_10006DF38(v233, (uint64_t)v79, &qword_100EB3360);
  sub_1001C9BA4(v234, (uint64_t)v76, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  int v90 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v89);
  uint64_t v233 = v89;
  uint64_t v225 = v87;
  uint64_t v227 = v62;
  uint64_t v228 = v81;
  if (v90 == 1)
  {
    sub_1001CAA20();
    sub_1000FFDCC((uint64_t)v76, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    sub_100178110((uint64_t)v79, &qword_100EB3360);
  }
  else
  {
    sub_1000FFDCC((uint64_t)v76, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    (*((void (**)(char *, char *, uint64_t))v81 + 4))(v87, v79, v89);
  }
  sub_10006DF38((uint64_t)v212, (uint64_t)v60, &qword_100EAA930);
  uint64_t v91 = v234;
  sub_1001C9BA4(v234, (uint64_t)v74, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  uint64_t v92 = v232;
  int v93 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v232);
  uint64_t v94 = v223;
  uint64_t v95 = v215;
  uint64_t v96 = v213;
  if (v93 == 1)
  {
    sub_1001CAA60();
    sub_1000FFDCC((uint64_t)v74, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    sub_100178110((uint64_t)v60, &qword_100EAA930);
  }
  else
  {
    sub_1000FFDCC((uint64_t)v74, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v97 = v229;
    (*(void (**)(uint64_t, char *, uint64_t))(v226 + 32))(v229, v60, v92);
    _s7Weather24LocationCompositionStateOwst_0(v97, 0, 1, v92);
  }
  sub_1001C9BA4(v91, (uint64_t)v71, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  if (v95)
  {
    uint64_t v98 = (uint64_t)v95;
  }
  else
  {
    if (!*v71)
    {
      type metadata accessor for LocationViewCollisionOptions();
      sub_1001CA9B8(&qword_100E6D0B8, (void (*)(uint64_t))type metadata accessor for LocationViewCollisionOptions);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
      return result;
    }
    swift_retain();
    uint64_t v98 = sub_1000C965C();
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_1000FFDCC((uint64_t)v71, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  uint64_t v99 = v224;
  sub_100100298(v229, v230);
  sub_1001007A8(v91, v99, v98, v231);
  swift_bridgeObjectRelease();
  uint64_t v212 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
  uint64_t v206 = v96 + 16;
  v212(v31, v99, v94);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v94);
  uint64_t v100 = v214;
  uint64_t v101 = v214 + *(int *)(v211 + 48);
  uint64_t v102 = &qword_100E64A60;
  sub_10006DF38(ObjectType, v214, &qword_100E64A60);
  sub_10006DF38((uint64_t)v31, v101, &qword_100E64A60);
  if (_s7Weather24LocationCompositionStateOwet_0(v100, 1, v94) == 1)
  {
    sub_100178110((uint64_t)v31, &qword_100E64A60);
    if (_s7Weather24LocationCompositionStateOwet_0(v101, 1, v94) == 1)
    {
      char v103 = -1;
    }
    else
    {
      uint64_t v102 = &qword_100EB4A90;
      char v103 = 0;
    }
  }
  else
  {
    uint64_t v104 = v201;
    sub_10006DF38(v100, v201, &qword_100E64A60);
    if (_s7Weather24LocationCompositionStateOwet_0(v101, 1, v94) == 1)
    {
      sub_100178110((uint64_t)v31, &qword_100E64A60);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v104, v94);
      char v103 = 0;
      uint64_t v102 = &qword_100EB4A90;
    }
    else
    {
      uint64_t v105 = v196;
      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v196, v101, v94);
      sub_1001CA9B8((unint64_t *)&qword_100E64A80, (void (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModel);
      uint64_t v106 = v104;
      char v103 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v107 = *(void (**)(char *, uint64_t))(v96 + 8);
      v107(v105, v94);
      uint64_t v102 = &qword_100E64A60;
      sub_100178110((uint64_t)v31, &qword_100E64A60);
      v107((char *)v106, v94);
    }
  }
  sub_100178110(v100, v102);
  uint64_t v108 = v221;
  sub_1001C9BA4(v91, v221, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  uint64_t v109 = v226;
  uint64_t v111 = v226 + 16;
  uint64_t v110 = *(void (**)(char *, uint64_t, uint64_t))(v226 + 16);
  uint64_t v112 = v222;
  uint64_t v113 = v232;
  v110(v222, v230, v232);
  uint64_t v214 = v111;
  uint64_t v215 = v110;
  if ((v103 & 1) == 0)
  {
    char v222 = *(char **)(v109 + 8);
    ((void (*)(char *, uint64_t))v222)(v112, v113);
    sub_1000FFDCC(v108, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v122 = v233;
    unint64_t v121 = v225;
    uint64_t v123 = v228;
LABEL_27:
    uint64_t v126 = v91;
    uint64_t v119 = v219;
    sub_1001C9BA4(v126, v219, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v120 = v217;
    sub_10006DF38(v231, v217, &qword_100EB4848);
    goto LABEL_28;
  }
  uint64_t v114 = v108;
  sub_10017DF08(&qword_100EB4868);
  uint64_t v115 = v205;
  State.wrappedValue.getter();
  uint64_t v116 = (uint64_t)v204;
  v110(v204, (uint64_t)v112, v113);
  _s7Weather24LocationCompositionStateOwst_0(v116, 0, 1, v113);
  uint64_t v117 = v207;
  uint64_t v118 = v207 + *(int *)(v202 + 48);
  sub_10006DF38(v115, v207, &qword_100EAA930);
  sub_10006DF38(v116, v118, &qword_100EAA930);
  if (_s7Weather24LocationCompositionStateOwet_0(v117, 1, v113) == 1)
  {
    sub_100178110(v116, &qword_100EAA930);
    sub_100178110(v115, &qword_100EAA930);
    char v222 = *(char **)(v109 + 8);
    ((void (*)(char *, uint64_t))v222)(v112, v113);
    sub_1000FFDCC(v114, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    if (_s7Weather24LocationCompositionStateOwet_0(v118, 1, v113) == 1)
    {
      sub_100178110(v207, &qword_100EAA930);
      uint64_t v119 = v219;
      sub_1001C9BA4(v234, v219, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
      uint64_t v120 = v217;
      sub_10006DF38(v231, v217, &qword_100EB4848);
      unint64_t v121 = v225;
      uint64_t v94 = v223;
      goto LABEL_42;
    }
    uint64_t v122 = v233;
    uint64_t v91 = v234;
    unint64_t v121 = v225;
    uint64_t v123 = v228;
    uint64_t v94 = v223;
    uint64_t v117 = v207;
    goto LABEL_26;
  }
  uint64_t v124 = v197;
  sub_10006DF38(v117, v197, &qword_100EAA930);
  if (_s7Weather24LocationCompositionStateOwet_0(v118, 1, v113) == 1)
  {
    sub_100178110((uint64_t)v204, &qword_100EAA930);
    sub_100178110(v205, &qword_100EAA930);
    uint64_t v125 = *(void (**)(char *, uint64_t))(v109 + 8);
    v125(v222, v113);
    sub_1000FFDCC(v221, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    char v222 = (char *)v125;
    v125((char *)v124, v113);
    uint64_t v122 = v233;
    uint64_t v91 = v234;
    unint64_t v121 = v225;
    uint64_t v123 = v228;
    uint64_t v94 = v223;
LABEL_26:
    sub_100178110(v117, &qword_100EB4AA0);
    goto LABEL_27;
  }
  uint64_t v158 = v195;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(v195, v118, v113);
  sub_1001CA9B8(&qword_100E66028, (void (*)(uint64_t))&type metadata accessor for TargetWindowSizeClass);
  char v159 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v160 = *(void (**)(char *, uint64_t))(v109 + 8);
  v160(v158, v113);
  sub_100178110((uint64_t)v204, &qword_100EAA930);
  sub_100178110(v205, &qword_100EAA930);
  v160(v222, v113);
  sub_1000FFDCC(v221, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  char v222 = (char *)v160;
  v160((char *)v124, v232);
  sub_100178110(v117, &qword_100EAA930);
  uint64_t v119 = v219;
  sub_1001C9BA4(v234, v219, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  uint64_t v120 = v217;
  sub_10006DF38(v231, v217, &qword_100EB4848);
  uint64_t v122 = v233;
  unint64_t v121 = v225;
  uint64_t v123 = v228;
  uint64_t v94 = v223;
  if (v159)
  {
LABEL_42:
    sub_10017DF08(&qword_100EB4870);
    uint64_t v161 = v119;
    uint64_t v162 = (uint64_t)v184;
    State.wrappedValue.getter();
    uint64_t v163 = v186;
    uint64_t v164 = v186 + *(int *)(v185 + 48);
    sub_10006DF38(v162, v186, &qword_100EB4848);
    sub_10006DF38(v120, v164, &qword_100EB4848);
    uint64_t v165 = v187;
    if (_s7Weather24LocationCompositionStateOwet_0(v163, 1, v187) == 1)
    {
      sub_100178110(v162, &qword_100EB4848);
      sub_100178110(v120, &qword_100EB4848);
      sub_1000FFDCC(v161, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
      int v166 = _s7Weather24LocationCompositionStateOwet_0(v164, 1, v165);
      uint64_t v122 = v233;
      if (v166 == 1)
      {
        sub_100178110(v163, &qword_100EB4848);
        char v127 = 0;
LABEL_49:
        uint64_t v123 = v228;
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v167 = v173;
      sub_10006DF38(v163, v173, &qword_100EB4848);
      if (_s7Weather24LocationCompositionStateOwet_0(v164, 1, v165) != 1)
      {
        uint64_t v168 = v162;
        uint64_t v169 = v174;
        uint64_t v170 = v172;
        (*(void (**)(char *, uint64_t, uint64_t))(v174 + 32))(v172, v164, v165);
        sub_1001CA9B8(&qword_100EB4AA8, (void (*)(uint64_t))&type metadata accessor for CollisionViewMetrics);
        LODWORD(v221) = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v171 = *(void (**)(char *, uint64_t))(v169 + 8);
        v171(v170, v165);
        sub_100178110(v168, &qword_100EB4848);
        sub_100178110(v120, &qword_100EB4848);
        sub_1000FFDCC(v219, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
        v171((char *)v167, v165);
        unint64_t v121 = v225;
        sub_100178110(v163, &qword_100EB4848);
        char v127 = v221 ^ 1;
        uint64_t v122 = v233;
        goto LABEL_49;
      }
      sub_100178110(v162, &qword_100EB4848);
      sub_100178110(v120, &qword_100EB4848);
      sub_1000FFDCC(v219, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
      (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v167, v165);
      uint64_t v122 = v233;
    }
    sub_100178110(v163, &qword_100EB4A98);
    char v127 = 1;
    goto LABEL_49;
  }
LABEL_28:
  sub_100178110(v120, &qword_100EB4848);
  sub_1000FFDCC(v119, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  char v127 = 1;
LABEL_29:
  uint64_t v128 = v216;
  uint64_t v129 = (void (*)(char *, char *, uint64_t))*((void *)v123 + 2);
  v129(v216, v121, v122);
  uint64_t v130 = v218;
  sub_1001C9BA4(v234, v218, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  if (v127)
  {
    uint64_t v228 = (char *)v129;
    sub_1000FFDCC(v130, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v131 = (void (*)(char *, uint64_t))*((void *)v123 + 1);
    v131(v128, v122);
  }
  else
  {
    uint64_t v132 = v203;
    sub_1001CAA20();
    sub_1001CA9B8(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    char v133 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v134 = v233;
    char v135 = v133;
    uint64_t v131 = (void (*)(char *, uint64_t))*((void *)v228 + 1);
    v228 += 8;
    v131(v132, v233);
    sub_1000FFDCC(v130, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    v131(v128, v134);
    if (v135)
    {
      sub_100178110(v231, &qword_100EB4848);
      ((void (*)(uint64_t, uint64_t))v222)(v230, v232);
      sub_100178110(v229, &qword_100EAA930);
      return ((uint64_t (*)(char *, uint64_t))v131)(v225, v134);
    }
    uint64_t v228 = (char *)v129;
  }
  uint64_t v137 = (uint64_t)v208;
  v212(v208, v224, v94);
  _s7Weather24LocationCompositionStateOwst_0(v137, 0, 1, v94);
  uint64_t v138 = v227;
  sub_10006DF38(v137, v209, &qword_100E64A60);
  sub_10017DF08(&qword_100EB4860);
  State.wrappedValue.setter();
  sub_100178110(v137, &qword_100E64A60);
  char v139 = WeatherConditionBackgroundModel.canShowAnimatedBackground.getter();
  uint64_t v140 = v215;
  if ((v139 & 1) == 0)
  {
    sub_100178110(v231, &qword_100EB4848);
    ((void (*)(uint64_t, uint64_t))v222)(v230, v232);
    uint64_t v157 = v229;
    goto LABEL_39;
  }
  uint64_t v141 = v198;
  WeatherConditionBackgroundModel.animationKind.getter();
  uint64_t v142 = v199;
  uint64_t v143 = v200;
  if ((*(unsigned int (**)(char *, uint64_t))(v199 + 88))(v141, v200) == enum case for BackgroundAnimationKind.vfx(_:))
  {
    uint64_t v141 = v188;
    WeatherConditionBackgroundModel.animationData.getter();
    uint64_t v142 = v189;
    uint64_t v143 = v190;
    if ((*(unsigned int (**)(char *, uint64_t))(v189 + 88))(v141, v190) == enum case for BackgroundAnimationData.loaded(_:))
    {
      (*(void (**)(char *, uint64_t))(v142 + 96))(v141, v143);
      uint64_t v144 = v192;
      uint64_t v145 = v191;
      uint64_t v146 = v193;
      (*(void (**)(char *, char *, uint64_t))(v192 + 32))(v191, v141, v193);
      uint64_t v147 = v194;
      sub_10001359C(ObjectType, v194);
      uint64_t v148 = (uint64_t *)(v234 + *(int *)(v138 + 44));
      uint64_t v149 = *v148;
      uint64_t v150 = v148[1];
      uint64_t v221 = v149;
      uint64_t v223 = v150;
      uint64_t ObjectType = swift_getObjectType();
      sub_10006DF38(v147, v179, &qword_100E76780);
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v178, v145, v146);
      swift_retain();
      WeatherConditionBackgroundModel.gradient.getter();
      ((void (*)(char *, char *, uint64_t))v228)(v203, v225, v233);
      v140(v195, v230, v232);
      uint64_t v151 = v177;
      sub_10006DF38(v231, v177, &qword_100EB4848);
      uint64_t v152 = v180;
      VFXLoadRequest.init(backgroundObserver:lastModel:model:gradient:dynamicTypeSize:targetWindowSizeClass:collisionViewMetrics:)();
      dispatch thunk of WeatherConditionBackgroundManagerType.addLoadRequest(_:)();
      (*(void (**)(char *, uint64_t))(v182 + 8))(v152, v183);
      uint64_t v153 = (uint64_t)v175;
      uint64_t v154 = v230;
      uint64_t v155 = v232;
      v215(v175, v230, v232);
      _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, v155);
      sub_10006DF38(v153, v176, &qword_100EAA930);
      sub_10017DF08(&qword_100EB4868);
      State.wrappedValue.setter();
      sub_100178110(v153, &qword_100EAA930);
      uint64_t v156 = v231;
      sub_10006DF38(v231, v151, &qword_100EB4848);
      sub_10017DF08(&qword_100EB4870);
      State.wrappedValue.setter();
      sub_100178110(v194, &qword_100E76780);
      (*(void (**)(char *, uint64_t))(v192 + 8))(v191, v193);
      sub_100178110(v156, &qword_100EB4848);
      ((void (*)(uint64_t, uint64_t))v222)(v154, v155);
      uint64_t v157 = v229;
LABEL_39:
      sub_100178110(v157, &qword_100EAA930);
      return ((uint64_t (*)(char *, uint64_t))v131)(v225, v233);
    }
  }
  sub_100178110(v231, &qword_100EB4848);
  ((void (*)(uint64_t, uint64_t))v222)(v230, v232);
  sub_100178110(v229, &qword_100EAA930);
  v131(v225, v233);
  return (*(uint64_t (**)(char *, uint64_t))(v142 + 8))(v141, v143);
}

uint64_t sub_1000FFDCC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1000FFE20(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_10017DF08(&qword_100E83C68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for TargetWindowSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v10 = a1 + a2[10];
  uint64_t v11 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[12]);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v13 = a1 + a2[17];
  uint64_t v14 = type metadata accessor for AnimatedGradient();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  sub_10017DF08(&qword_100EB4850);
  swift_release();
  uint64_t v15 = a1 + a2[18];
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v11)) {
    v12(v15, v11);
  }
  sub_10017DF08(&qword_100EB4860);
  swift_release();
  uint64_t v16 = a1 + a2[19];
  uint64_t v17 = type metadata accessor for TargetWindowSizeClass();
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  sub_10017DF08(&qword_100EB4868);
  swift_release();
  uint64_t v18 = a1 + a2[20];
  uint64_t v19 = type metadata accessor for CollisionViewMetrics();
  if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  sub_10017DF08(&qword_100EB4870);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10018F6E4();
  sub_10018F6D8(*(void *)(a1 + a2[25]), *(unsigned char *)(a1 + a2[25] + 8));
  swift_release();
  sub_10018F6E4();
  swift_release();

  return swift_release();
}

uint64_t sub_100100298@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v33 = a2;
  uint64_t v2 = sub_10017DF08(&qword_100EAA930);
  __chkstk_darwin(v2 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v32 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v11 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for BackgroundAnimationData();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  WeatherConditionBackgroundModel.animationData.getter();
  BackgroundAnimationData.options.getter();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  WeatherConditionBackgroundOptions.cameraPositionType.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v32);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for WeatherConditionBackgroundConfig.CameraPositionType.list(_:), v4);
  sub_1001CA9B8(&qword_100EB4AB0, (void (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType);
  LOBYTE(v17) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v8, v4);
  v18(v10, v4);
  if (v17)
  {
    id v19 = [self currentDevice];
    id v20 = [v19 userInterfaceIdiom];

    uint64_t v21 = type metadata accessor for TargetWindowSizeClass();
    if (v20) {
      uint64_t v22 = (unsigned int *)&enum case for TargetWindowSizeClass.portraitRegular(_:);
    }
    else {
      uint64_t v22 = (unsigned int *)&enum case for TargetWindowSizeClass.compact(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v21 - 8) + 104))(v33, *v22, v21);
  }
  else
  {
    uint64_t v23 = v31;
    sub_10006DF38(v30, v31, &qword_100EAA930);
    uint64_t v24 = type metadata accessor for TargetWindowSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24) == 1)
    {
      sub_100178110(v23, &qword_100EAA930);
      if (qword_100E627D0 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      sub_1002102B0(v25, (uint64_t)qword_100F51E88);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "VFX background is using compact configs because the target size class is not set", v28, 2u);
        swift_slowDealloc();
      }

      return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v33, enum case for TargetWindowSizeClass.compact(_:), v24);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v33, v23, v24);
    }
  }
}

uint64_t sub_1001007A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v30 = a2;
  uint64_t v6 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BackgroundAnimationData();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62BB0 != -1) {
    swift_once();
  }
  int v16 = byte_100EB45A8;
  uint64_t v28 = a1;
  sub_1001C9BA4(a1, (uint64_t)v15, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  if (v16 != 1)
  {
    sub_1000FFDCC((uint64_t)v15, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
LABEL_9:
    uint64_t v23 = 1;
    goto LABEL_11;
  }
  uint64_t v27 = a4;
  uint64_t v17 = &v15[*(int *)(v13 + 36)];
  uint64_t v18 = *(void *)v17;
  char v19 = v17[8];
  sub_100195B7C(*(void *)v17, v19);
  sub_100149AE8();
  char v21 = v20;
  sub_10018F6D8(v18, v19);
  sub_1000FFDCC((uint64_t)v15, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  if ((v21 & 1) == 0)
  {
    uint64_t v23 = 1;
    a4 = v27;
    goto LABEL_11;
  }
  WeatherConditionBackgroundModel.animationData.getter();
  BackgroundAnimationData.options.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  char v22 = WeatherConditionBackgroundOptions.canShowCollisionLayer.getter();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  a4 = v27;
  if ((v22 & 1) == 0 || !*(void *)(v29 + 16)) {
    goto LABEL_9;
  }
  sub_100100AF4();
  swift_bridgeObjectRetain();
  CollisionViewMetrics.init(vfxViewWidth:gapWidth:leadingPadding:componentWidths:)();
  uint64_t v23 = 0;
LABEL_11:
  uint64_t v24 = type metadata accessor for CollisionViewMetrics();
  return _s7Weather24LocationCompositionStateOwst_0(a4, v23, 1, v24);
}

uint64_t sub_100100AF4()
{
  if (*v0)
  {
    swift_retain();
    uint64_t v1 = sub_1000C965C();
    float v3 = v2;
    uint64_t v4 = v1;
    swift_release();
    float v5 = sub_100100BE0(v4, v3);
    uint64_t result = swift_bridgeObjectRelease();
    if (v5 > 0.0) {
      return type metadata accessor for WeatherConditionBackgroundModifier(0);
    }
  }
  else
  {
    type metadata accessor for LocationViewCollisionOptions();
    sub_1001CA9B8(&qword_100E6D0B8, (void (*)(uint64_t))type metadata accessor for LocationViewCollisionOptions);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

float sub_100100BE0(uint64_t a1, float a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 <= 1) {
    uint64_t v3 = 1;
  }
  uint64_t v4 = v3 - 1;
  Array<A>.total.getter();
  return v6 + (float)((float)v4 * a2);
}

uint64_t sub_100100C48()
{
  swift_release();
  if (*(void *)(v0 + 56)) {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100100CB8()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 176);

  return swift_deallocObject();
}

void sub_100100D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void))
{
  sub_10017F28C();
  uint64_t v15 = *(void *)(v13 + 32);
  uint64_t v14 = *(void *)(v13 + 40);
  uint64_t v16 = type metadata accessor for AnimatableTabView();
  sub_100179EF0();
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  type metadata accessor for Binding();
  sub_100162880();
  char v20 = *(void (**)(void))(v19 + 8);
  sub_100183F94();
  v20();
  uint64_t v21 = sub_100163968();
  ((void (*)(uint64_t))v20)(v21);
  type metadata accessor for State();
  sub_10012B664();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100189ED8();
  sub_100189ED8();
  unint64_t v22 = v13 + v18 + *(int *)(v16 + 76);
  if (!sub_10017A970())
  {
    sub_100162880();
    sub_100127BA4();
    v23();
    uint64_t v24 = sub_10017F124();
    sub_100188BAC(v24);
    sub_100164944();
    a13();
    unint64_t v25 = v22 + *(int *)(v15 + 52);
    sub_1001D0F04();
    sub_100127BA4();
    v26();
    ((void (*)(unint64_t, uint64_t))a13)(v25 + *(int *)(a10 + 52), v14);
  }
  sub_1001A2E4C();
  type metadata accessor for State();
  sub_10012B664();
  sub_100189ED8();
  sub_100180498();
  sub_100180F84();
}

uint64_t sub_100100EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v33 = a5;
  type metadata accessor for PresentationWithoutInitialAnimation();
  swift_getWitnessTable();
  type metadata accessor for _ViewModifier_Content();
  uint64_t v8 = type metadata accessor for PlaceholderContentView();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v29 - v10;
  uint64_t v32 = *(void *)(a3 - 8);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t))(a2 + 24);
  v29[1] = *(void *)(a2 + 32);
  uint64_t v30 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v11, a1, v8);
  swift_getWitnessTable();
  uint64_t v19 = AnyView.init<A>(_:)();
  uint64_t v20 = sub_100109B1C();
  uint64_t v22 = v21;
  LOBYTE(v8) = v23;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v31;
  *(void *)(v24 + 16) = a3;
  *(void *)(v24 + 24) = v25;
  long long v26 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v24 + 48) = v26;
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(a2 + 32);
  *(void *)(v24 + 80) = *(void *)(a2 + 48);
  sub_1000E1544(a2);
  v30(v19, v20, v22, v8 & 1, sub_10021870C, v24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100121584((uint64_t)v14, a3, (uint64_t)v16);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v32 + 8);
  v27(v14, a3);
  sub_100121584((uint64_t)v16, a3, v33);
  return ((uint64_t (*)(char *, uint64_t))v27)(v16, a3);
}

uint64_t sub_1001011E0()
{
  swift_release();
  sub_100191934(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return swift_deallocObject();
}

uint64_t sub_100101228()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_100101268()
{
  sub_100162EA0();
  type metadata accessor for Location();
  sub_100179C0C();
  type metadata accessor for Date();
  sub_100179C0C();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  sub_100164938();
  v2();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100101354()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100101394()
{
  uint64_t v1 = type metadata accessor for SearchResultsList(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v2, 1, v3)) {
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
    }
  }
  else
  {
    swift_release();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v2 + *(int *)(v1 + 20));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001014FC()
{
  type metadata accessor for ReportWeatherView();
  sub_100179CD4();
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v4 = v2 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v5 + 8))(v4);
  }
  sub_100181000();
  sub_10019FB58();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100101610()
{
  uint64_t v1 = type metadata accessor for CalendarView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_10018F6D8(*(void *)v3, *(unsigned char *)(v3 + 8));
  uint64_t v4 = v3 + *(int *)(v1 + 20);
  type metadata accessor for TimeZone();
  sub_100162E4C();
  sub_100162F0C();
  v5();
  float v6 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v7 = v4 + v6[5];
  uint64_t v8 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  uint64_t v11 = sub_10019E784(v6[6]);
  ((void (*)(uint64_t))v10)(v11);
  uint64_t v12 = sub_10019E784(v6[7]);
  ((void (*)(uint64_t))v10)(v12);
  uint64_t v13 = v4 + v6[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v8)) {
    v10(v13, v8);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for MoonPhase.Hemisphere();
  sub_100162E4C();
  sub_100162F0C();
  v14();
  sub_10017DF08(&qword_100E66E70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for Locale();
    sub_100162E4C();
    sub_100162F0C();
    v15();
  }
  else
  {
    swift_release();
  }
  uint64_t v16 = (int *)_s13CalendarStateVMa();
  uint64_t v17 = sub_10019E784(v16[5]);
  ((void (*)(uint64_t))v10)(v17);
  type metadata accessor for Calendar();
  sub_100162E4C();
  sub_100162F0C();
  v18();
  uint64_t v19 = sub_10019E784(v16[7]);
  ((void (*)(uint64_t))v10)(v19);
  uint64_t v20 = sub_10019E784(v16[8]);
  ((void (*)(uint64_t))v10)(v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_10019E784(v16[10]);
  ((void (*)(uint64_t))v10)(v21);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v1 + 28));

  return swift_deallocObject();
}

uint64_t sub_1001018D8()
{
  uint64_t v1 = type metadata accessor for DailyForecastRowViewButtonStyle();
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = v3 + *(int *)(v4 + 20);
  swift_release();
  swift_release();
  uint64_t v6 = v5 + *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, (uint64_t)v7))
  {
    type metadata accessor for Date();
    sub_100162E4C();
    sub_100162F0C();
    v8();
    sub_1001631A8();
    sub_1001631A8();
    type metadata accessor for TimeZone();
    sub_100162E4C();
    sub_100162F0C();
    v9();
    uint64_t v10 = v6 + v7[8];
    uint64_t v11 = sub_10017DF08(&qword_100E65250);
    sub_100162E4C();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v13(v10, v11);
    v13(v6 + v7[9], v11);
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    uint64_t v14 = v6 + v7[15];
    uint64_t v15 = type metadata accessor for Precipitation();
    if (!sub_1001810A0(v15))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v11);
    }
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v3 + *(int *)(v1 + 24);
  type metadata accessor for Date();
  sub_100162E4C();
  sub_100162F0C();
  v18();
  sub_100179008();
  sub_100179008();
  type metadata accessor for TimeZone();
  sub_100162E4C();
  sub_100162F0C();
  v19();
  uint64_t v20 = v17 + v7[8];
  uint64_t v21 = sub_10017DF08(&qword_100E65250);
  sub_100162E4C();
  char v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v23(v20, v21);
  v23(v17 + v7[9], v21);
  sub_100179008();
  sub_100179008();
  sub_100179008();
  uint64_t v24 = v17 + v7[15];
  uint64_t v25 = type metadata accessor for Precipitation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  sub_100179008();
  sub_100179008();
  sub_100179008();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100101C80()
{
  uint64_t v1 = type metadata accessor for ConditionDetailChartDataInput(0);
  sub_100179EF0();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v17 = *(void *)(v4 + 64);
  uint64_t v18 = type metadata accessor for ConditionUnits();
  sub_100179C0C();
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v9 = *(void (**)(void))(v8 + 8);
  sub_10017F000();
  v9();
  sub_10017F000();
  v9();
  type metadata accessor for DetailChartCondition();
  sub_100162E4C();
  sub_100162F0C();
  v10();
  sub_10017F000();
  v9();
  sub_10017F000();
  v9();
  type metadata accessor for TimeZone();
  sub_100162E4C();
  sub_100162F0C();
  v11();
  swift_bridgeObjectRelease();
  type metadata accessor for CurrentWeather();
  sub_100162E4C();
  sub_100162F0C();
  v12();
  uint64_t v13 = v0 + ((v3 + 16) & ~v3) + *(int *)(v1 + 52);
  uint64_t v14 = type metadata accessor for DayWeather();
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  type metadata accessor for ChartViewModelInterpolationMode();
  sub_100162E4C();
  sub_100162F0C();
  v15();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((((v3 + 16) & ~v3) + v17 + v7) & ~v7), v18);

  return swift_deallocObject();
}

uint64_t sub_100101F18()
{
  sub_100179FAC();
  sub_10019E848();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  }
  swift_release();
  swift_release();
  uint64_t v5 = (id *)(v0 + v3 + *(int *)(v1 + 48));

  uint64_t v6 = type metadata accessor for WeatherAsyncImage.LoadingState();
  uint64_t v7 = (uint64_t)v5 + *(int *)(v6 + 36);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v7, v4);
  }
  sub_100330EDC(*(unint64_t *)((char *)v5 + *(int *)(v6 + 40)));
  type metadata accessor for State();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001020A8()
{
  type metadata accessor for MeasuredConditionDetailLegendView(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001021EC()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10010223C()
{
  uint64_t v1 = (int *)(type metadata accessor for SearchZeroKeywordView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v2);
  uint64_t v3 = v0 + v2 + v1[7];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
    {
      sub_100162F0C();
      v5();
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100102368()
{
  uint64_t v1 = (int *)type metadata accessor for LocationPreviewView();
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for LocationPreviewViewContentModel(0);
  sub_100179EF0();
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v3 + v5 + v8;
  uint64_t v10 = v0 + v3;
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_100163380() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100179DC0();
    sub_100162F0C();
    v11();
  }
  else
  {
    swift_release();
  }
  unint64_t v12 = v9 & ~v8;
  sub_10018F6D8(*(void *)(v10 + v1[7]), *(unsigned char *)(v10 + v1[7] + 8));
  sub_10017DF08(&qword_100E63BC8);
  if (sub_100163380() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v13();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v10 + v1[9]), *(unsigned char *)(v10 + v1[9] + 8));
  swift_release();
  sub_10018F6E4();
  sub_10018F6E4();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v10 + v1[14]);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v10 + v1[16]);
  uint64_t v14 = v0 + v12;
  type metadata accessor for PreviewLocation();
  switch(sub_10017A0C8())
  {
    case 0u:
      type metadata accessor for Location();
      goto LABEL_10;
    case 1u:
      type metadata accessor for LocationOfInterest();
LABEL_10:
      sub_100179DC0();
      (*(void (**)(unint64_t))(v15 + 8))(v0 + v12);
      break;
    case 2u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v14 + *(int *)(type metadata accessor for SearchLocation() + 32);
      uint64_t v17 = type metadata accessor for Location();
      if (!sub_1001632AC(v17))
      {
        sub_100162880();
        (*(void (**)(uint64_t))(v18 + 8))(v16);
      }
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100179DC0();
  sub_100162F0C();
  v19();
  uint64_t v20 = v14 + *(int *)(v6 + 36);
  type metadata accessor for LocationPreviewModalViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for NewsArticle();
    uint64_t v23 = sub_10018694C();
    if (!sub_100163364())
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v23);
    }
    type metadata accessor for Date();
    sub_100179DC0();
    sub_100162F0C();
    v25();
    sub_100162880();
    uint64_t v27 = *(void (**)(void))(v26 + 8);
    v27();
    uint64_t v28 = v20 + *(int *)(v14 + 36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v28 + *(int *)(type metadata accessor for NewsChannel() + 24);
    if (!sub_100163364()) {
      ((void (*)(uint64_t, uint64_t))v27)(v29, v23);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    type metadata accessor for URL();
    sub_100179DC0();
    sub_100162F0C();
    v22();
  }

  return swift_deallocObject();
}

uint64_t sub_100102818()
{
  type metadata accessor for RecordPinnedMapAnimatingViewModifier();
  sub_100179CD4();
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ScenePhase();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_10017A168();

  return swift_deallocObject();
}

uint64_t sub_1001028F0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for WireframeScrollInterestView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[13], v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100102A00()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100102A40()
{
  uint64_t v1 = (int *)(type metadata accessor for MoonScrubberHeaderView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + 48);
  uint64_t v3 = v2 + v1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for MoonScrubberHeaderViewModel(0);
  uint64_t v5 = v3 + *(int *)(v4 + 32);
  uint64_t v6 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + *(int *)(v4 + 36), v6);
  uint64_t v9 = v2 + v1[14];
  type metadata accessor for CoordinateSpace();
  sub_100162E4C();
  (*(void (**)(uint64_t))(v10 + 8))(v9);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100102BF8()
{
  type metadata accessor for MoonComponentView(0);
  sub_100179CD4();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_10018F6D8(*(void *)v3, *(unsigned char *)(v3 + 8));
  sub_10017DF08(&qword_100E66E50);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100179DC0();
    uint64_t v4 = sub_10017A2F0();
    v5(v4);
  }
  else
  {
    swift_release();
  }
  sub_10017E48C();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    uint64_t v6 = sub_10017A2F0();
    v7(v6);
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E78CE0);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v8 = type metadata accessor for ForegroundEffect();
    if (!sub_100129098(v8))
    {
      sub_100162F0C();
      v9();
    }
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100EAA740);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ScenePhase();
    sub_100179DC0();
    uint64_t v10 = sub_10017A2F0();
    v11(v10);
  }
  else
  {
    swift_release();
  }
  type metadata accessor for Text.Measurements();
  sub_100179DC0();
  uint64_t v12 = sub_10017A2F0();
  v13(v12);
  uint64_t v14 = v3 + *(int *)(v0 + 48);
  swift_bridgeObjectRelease();
  int v15 = *(unsigned __int8 *)(v14 + 32);
  if (v15 != 255) {
    sub_1001F3C7C(*(void *)(v14 + 16), *(void *)(v14 + 24), v15);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for MoonComponentViewModel();
  type metadata accessor for Date();
  sub_100179DC0();
  sub_100162F0C();
  v16();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100102E9C()
{
  sub_100162EA0();
  uint64_t v1 = type metadata accessor for ListLocationRowView(0);
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v1 + 28));
  uint64_t v5 = v3 + *(int *)(v1 + 32);
  type metadata accessor for LocationModel();
  sub_100162E4C();
  sub_100162F0C();
  v6();
  uint64_t v7 = type metadata accessor for ListLocationViewModel(0);
  sub_1001631A8();
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for Date();
    if (!sub_100183918(v8))
    {
      sub_100162880();
      sub_100162F0C();
      v9();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10019FDA4(v5 + *(int *)(v7 + 32));
  uint64_t v10 = type metadata accessor for Date();
  if (!sub_100183918(v10))
  {
    sub_100162880();
    uint64_t v11 = sub_10018A904();
    v12(v11);
  }
  uint64_t v13 = type metadata accessor for TimeZone();
  if (!sub_100183918(v13))
  {
    sub_100162880();
    uint64_t v14 = sub_10018A904();
    v15(v14);
  }
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100162E4C();
  sub_100162F0C();
  v16();
  sub_1001631A8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_10010318C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001031D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for WeatherWindowGroup() - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + ((v2 + 32) & ~v2), v1);

  return swift_deallocObject();
}

uint64_t sub_1001032A8()
{
  uint64_t v1 = (int *)type metadata accessor for TemperatureAveragesHeroChartView();
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_10018F6D8(*(void *)v3, *(unsigned char *)(v3 + 8));
  uint64_t v4 = v3 + v1[5];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100179DC0();
    sub_100162F0C();
    v5();
  }
  else
  {
    swift_release();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + v1[7]);
  uint64_t v6 = v3 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v7 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  sub_1001A3264();
  type metadata accessor for TemperatureScaleConfiguration();
  sub_100179DC0();
  sub_100162F0C();
  v8();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v6 + v7[12]), *(void **)(v6 + v7[12] + 8), *(void *)(v6 + v7[12] + 16), *(unsigned char *)(v6 + v7[12] + 24));
  uint64_t v9 = sub_1001A3264();
  uint64_t v10 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(v9);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v10))
  {
    type metadata accessor for Date();
    sub_100179DC0();
    (*(void (**)(uint64_t))(v11 + 8))(v4);
  }
  uint64_t v12 = sub_1001A3264();
  uint64_t v13 = type metadata accessor for PeakUpperMarkModel(v12);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v13))
  {
    type metadata accessor for Date();
    sub_100179DC0();
    sub_100162F0C();
    v14();
    sub_100179008();
    sub_100179008();
    sub_100179008();
  }
  uint64_t v15 = sub_1001A3264();
  type metadata accessor for DetailHeroChartLollipopModel(v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    sub_10019D65C();
    type metadata accessor for Date();
    sub_100179DC0();
    sub_100162F0C();
    v16();
  }
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    sub_10019D65C();
    type metadata accessor for AttributedString();
    sub_100179DC0();
    sub_100162F0C();
    v18();
    sub_100179008();
    sub_100179008();
    sub_100179008();
    sub_100179008();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v19 = v6 + v7[16];
  uint64_t v20 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v22(v19, v20);
  v22(v6 + v7[17], v20);
  type metadata accessor for DetailChartGradientModel();
  sub_100179DC0();
  sub_100162F0C();
  v23();

  return swift_deallocObject();
}

uint64_t sub_1001036B8()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 40);

  return swift_deallocObject();
}

uint64_t sub_1001036F8()
{
  sub_100162EA0();
  uint64_t v1 = type metadata accessor for PrecipitationAmountsEditorView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = v3 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v6 + 8))(v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v3 + *(int *)(v1 + 24);
  uint64_t v8 = type metadata accessor for PrecipitationAmount();
  sub_100162E4C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  swift_release();
  v10(v3 + *(int *)(v1 + 32), v8);
  sub_10017DF08(&qword_100E7DCE8);
  swift_release();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_1001038B0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100103900()
{
  type metadata accessor for ConditionDetailInnerView(0);
  sub_100179CD4();
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v4);
  swift_release();
  sub_1001853BC();
  swift_bridgeObjectRelease();
  type metadata accessor for ConditionDetailViewModel.Model(0);
  sub_1001A329C();
  sub_100162E4C();
  uint64_t v6 = *(void (**)(void))(v5 + 8);
  sub_10017E660();
  v6();
  uint64_t v7 = type metadata accessor for DetailChartSelection();
  if (!sub_100183918(v7))
  {
    swift_bridgeObjectRelease();
    sub_10017E660();
    v6();
    sub_10017E660();
    v6();
    uint64_t v8 = sub_1001830B8();
    ((void (*)(uint64_t))v6)(v8);
  }
  sub_1001A46A0();
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  sub_100162F0C();
  v9();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + *(int *)(v1 + 44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Location();
  sub_100162E4C();
  sub_100162F0C();
  v11();
  type metadata accessor for LocationDetailEntity();
  sub_100162E4C();
  sub_100162F0C();
  v12();
  sub_1001A2CBC();

  return swift_deallocObject();
}

uint64_t sub_100103B08()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100103B60()
{
  sub_100162EA0();
  uint64_t v1 = type metadata accessor for DayWeatherEditorView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = v3 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v6 + 8))(v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = v3 + *(int *)(v1 + 24);
  uint64_t v8 = type metadata accessor for DayWeather();
  sub_100162E4C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  swift_release();
  v10(v3 + *(int *)(v1 + 32), v8);
  sub_10017DF08(&qword_100E86130);
  swift_release();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100103D18()
{
  type metadata accessor for MoonDetailRootContentView(0);
  sub_100179CD4();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    sub_10017DF08(&qword_100E669A0);
    type metadata accessor for PresentationMode();
    sub_100162E4C();
    uint64_t v5 = sub_10018A9AC();
    v6(v5);
  }
  sub_10019FEB0();
  uint64_t v8 = v3 + v7;
  type metadata accessor for MoonDetailSelectedDate();
  if (swift_getEnumCaseMultiPayload() <= 2)
  {
    type metadata accessor for Date();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v9 + 8))(v8);
  }
  uint64_t v10 = (int *)type metadata accessor for MoonDetailViewModel.Model(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v8 + v10[7];
  uint64_t v12 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v14 = *(void (**)(void))(v13 + 8);
  sub_100164FC8();
  v14();
  uint64_t v15 = type metadata accessor for MoonViewModel(0);
  uint64_t v16 = v11 + *(int *)(v15 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v12)) {
    ((void (*)(uint64_t, uint64_t))v14)(v16, v12);
  }
  uint64_t v17 = v11 + *(int *)(v15 + 28);
  if (!sub_1001892C0()) {
    ((void (*)(uint64_t, uint64_t))v14)(v17, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for MoonScrubberHeaderViewModel(0);
  sub_100164FC8();
  v14();
  uint64_t v115 = v14;
  sub_100164FC8();
  v14();
  uint64_t v18 = type metadata accessor for OverviewTableViewModel();
  sub_100162E4C();
  uint64_t v20 = *(void (**)(void))(v19 + 8);
  sub_100164FC8();
  v20();
  uint64_t v21 = v8 + v10[10];
  uint64_t v22 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
  {
    sub_100164FC8();
    v20();
    uint64_t v23 = v21 + *(int *)(v22 + 20);
    if (!sub_1001A2D58(v23)) {
      ((void (*)(uint64_t, uint64_t))v20)(v23, v18);
    }
  }
  uint64_t v24 = v8 + v10[11];
  sub_10014D144(*(void *)v24, *(void *)(v24 + 8), *(unsigned char *)(v24 + 16));
  swift_bridgeObjectRelease();
  uint64_t v25 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v26 = v24 + v25[6];
  uint64_t v27 = type metadata accessor for WeatherDescription();
  if (!sub_100165150(v27))
  {
    sub_100162880();
    (*(void (**)(uint64_t, void (*)(void)))(v28 + 8))(v26, v20);
  }
  uint64_t v116 = v20;
  uint64_t v29 = v24 + v25[7];
  uint64_t v30 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v31 = (uint64_t)v116;
      goto LABEL_32;
    case 1u:
      goto LABEL_37;
    case 2u:
      uint64_t v32 = type metadata accessor for AttributedString();
      goto LABEL_31;
    case 3u:
      uint64_t v32 = sub_10017DF08(&qword_100E73808);
      goto LABEL_31;
    case 4u:
      if (*(void *)(v29 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v33 = sub_100182AF8();
      type metadata accessor for NewsArticleComponentViewModel(v33);
      if (sub_100186AB0() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v111 = type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v106 = v26 + *(int *)(v111 + 20);
        uint64_t v109 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v106, 1, v109))
        {
          sub_100162880();
          (*(void (**)(void))(v34 + 8))();
        }
        swift_bridgeObjectRelease();
        uint64_t v107 = v26;
        uint64_t v26 = v109;
        sub_100162880();
        uint64_t v105 = *(void (**)(void))(v35 + 8);
        v105();
        uint64_t v112 = v107 + *(int *)(v111 + 32);
        if (!sub_1001A2D58(v112)) {
          ((void (*)(uint64_t, uint64_t))v105)(v112, v109);
        }
      }
      sub_100182AF8();
      uint64_t v36 = type metadata accessor for DetailComponentAction();
      if (sub_100163744(v36)) {
        goto LABEL_38;
      }
      type metadata accessor for URL();
      goto LABEL_99;
    case 5u:
      if (*(void *)(v29 + 24))
      {
        sub_100191924(*(void *)v29, *(void *)(v29 + 8), *(unsigned char *)(v29 + 16));
        swift_bridgeObjectRelease();
      }
      sub_10033AB48(*(void *)(v29 + 32), *(void *)(v29 + 40), *(void *)(v29 + 48), *(void *)(v29 + 56), *(void *)(v29 + 64), *(void *)(v29 + 72), *(void *)(v29 + 80), *(unsigned __int8 *)(v29 + 88), *(unsigned char *)(v29 + 89));
      goto LABEL_38;
    case 6u:
      uint64_t v32 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_31:
      uint64_t v31 = v32;
LABEL_32:
      (*(void (**)(uint64_t))(*(void *)(v31 - 8) + 8))(v29);
      goto LABEL_38;
    case 7u:
      type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int v37 = swift_getEnumCaseMultiPayload();
      if (v37 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v68 = type metadata accessor for ConditionDetailMapViewModel();
        type metadata accessor for Location();
        sub_100162E4C();
        sub_100162F0C();
        v69();
        uint64_t v113 = v68;
        uint64_t v70 = sub_100182AF8();
        uint64_t v114 = type metadata accessor for WeatherData(v70);
        if (!_s7Weather24LocationCompositionStateOwet_0(v68, 1, v114))
        {
          swift_bridgeObjectRelease();
          uint64_t v108 = v68 + *(int *)(v114 + 20);
          uint64_t v110 = v68;
          uint64_t v71 = type metadata accessor for Locale();
          if (!sub_1001A2D58(v108))
          {
            sub_100162880();
            (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v108, v71);
          }
          type metadata accessor for WeatherDataModel();
          sub_100162E4C();
          sub_100162F0C();
          v73();
          uint64_t v74 = sub_10017DF08(&qword_100E63738);
          if (!sub_100163744(v74))
          {
            uint64_t v75 = sub_1001A2320();
            v76(v75);
          }
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v77 = sub_100186AB0();
          if (v77 == 1)
          {
            type metadata accessor for WeatherStatisticsModel();
            sub_100162E4C();
            uint64_t v90 = sub_10018A9AC();
            v91(v90);
          }
          else if (!v77)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v92 = v110 + *(int *)(v114 + 36);
          uint64_t v93 = type metadata accessor for WeatherDataOverrides();
          if (!_s7Weather24LocationCompositionStateOwet_0(v92, 1, v93))
          {
            if (!_s7Weather24LocationCompositionStateOwet_0(v92, 1, v12)) {
              ((void (*)(uint64_t, uint64_t))v115)(v92, v12);
            }
            if (!sub_1001892C0())
            {
              uint64_t v94 = sub_1001A2320();
              v95(v94);
            }
          }
        }
        uint64_t v26 = v113;
        swift_bridgeObjectRelease();
        sub_100182AF8();
        type metadata accessor for WeatherMapOverlayKind();
LABEL_99:
        sub_100162E4C();
        (*(void (**)(uint64_t))(v96 + 8))(v26);
      }
      else if (!v37)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        swift_bridgeObjectRelease();
      }
LABEL_38:
      uint64_t v38 = v24 + v25[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v38, 1, v30))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v39 = (uint64_t)v116;
            goto LABEL_57;
          case 1u:
            goto LABEL_62;
          case 2u:
            uint64_t v40 = type metadata accessor for AttributedString();
            goto LABEL_56;
          case 3u:
            uint64_t v40 = sub_10017DF08(&qword_100E73808);
            goto LABEL_56;
          case 4u:
            if (*(void *)(v38 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v41 = type metadata accessor for DetailComponentContainerViewModel();
            uint64_t v42 = v38 + *(int *)(v41 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v43 = type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v44 = v42 + *(int *)(v43 + 20);
              uint64_t v45 = type metadata accessor for URL();
              if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45))
              {
                sub_100162880();
                (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
              }
              swift_bridgeObjectRelease();
              sub_100162880();
              uint64_t v117 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
              sub_100164FC8();
              v48();
              uint64_t v49 = v42 + *(int *)(v43 + 32);
              if (!_s7Weather24LocationCompositionStateOwet_0(v49, 1, v45)) {
                v117(v49, v45);
              }
            }
            uint64_t v50 = v38 + *(int *)(v41 + 24);
            uint64_t v51 = type metadata accessor for DetailComponentAction();
            if (sub_100163744(v51)) {
              break;
            }
            type metadata accessor for URL();
            goto LABEL_107;
          case 5u:
            if (*(void *)(v38 + 24))
            {
              sub_100191924(*(void *)v38, *(void *)(v38 + 8), *(unsigned char *)(v38 + 16));
              swift_bridgeObjectRelease();
            }
            sub_10033AB48(*(void *)(v38 + 32), *(void *)(v38 + 40), *(void *)(v38 + 48), *(void *)(v38 + 56), *(void *)(v38 + 64), *(void *)(v38 + 72), *(void *)(v38 + 80), *(unsigned __int8 *)(v38 + 88), *(unsigned char *)(v38 + 89));
            break;
          case 6u:
            uint64_t v40 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_56:
            uint64_t v39 = v40;
LABEL_57:
            (*(void (**)(uint64_t))(*(void *)(v39 - 8) + 8))(v38);
            break;
          case 7u:
            type metadata accessor for ConditionDetailDynamicContentIdentifier();
            int v52 = swift_getEnumCaseMultiPayload();
            if (v52 == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v78 = type metadata accessor for ConditionDetailMapViewModel();
              type metadata accessor for Location();
              sub_100162E4C();
              sub_100162F0C();
              v79();
              uint64_t v80 = v38 + *(int *)(v78 + 24);
              uint64_t v81 = type metadata accessor for WeatherData(0);
              if (!_s7Weather24LocationCompositionStateOwet_0(v80, 1, v81))
              {
                uint64_t v118 = v78;
                swift_bridgeObjectRelease();
                uint64_t v82 = v80 + *(int *)(v81 + 20);
                uint64_t v83 = type metadata accessor for Locale();
                if (!sub_1001A2D58(v82))
                {
                  sub_100162880();
                  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v82, v83);
                }
                type metadata accessor for WeatherDataModel();
                sub_100162E4C();
                sub_100162F0C();
                v85();
                uint64_t v86 = sub_10017DF08(&qword_100E63738);
                if (!sub_100163744(v86))
                {
                  uint64_t v87 = sub_1001A2320();
                  v88(v87);
                }
                type metadata accessor for WeatherData.WeatherStatisticsState(0);
                int v89 = sub_100186AB0();
                uint64_t v78 = v118;
                if (v89 == 1)
                {
                  type metadata accessor for WeatherStatisticsModel();
                  sub_100162E4C();
                  uint64_t v97 = sub_10018A9AC();
                  v98(v97);
                }
                else if (!v89)
                {
                  swift_bridgeObjectRelease();
                }
                uint64_t v99 = type metadata accessor for WeatherDataOverrides();
                if (!sub_100165150(v99))
                {
                  if (!sub_1001892C0())
                  {
                    uint64_t v100 = sub_1001A2320();
                    v101(v100);
                  }
                  if (!sub_1001892C0())
                  {
                    uint64_t v102 = sub_1001A2320();
                    v103(v102);
                  }
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v50 = v38 + *(int *)(v78 + 32);
              type metadata accessor for WeatherMapOverlayKind();
LABEL_107:
              sub_100162E4C();
              (*(void (**)(uint64_t))(v104 + 8))(v50);
            }
            else if (!v52)
            {
              swift_bridgeObjectRelease();
LABEL_62:
              swift_bridgeObjectRelease();
            }
            break;
          default:
            break;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v53 = v8 + v10[13];
      uint64_t v54 = type metadata accessor for DetailComponentContainerViewModel();
      if (!_s7Weather24LocationCompositionStateOwet_0(v53, 1, v54))
      {
        if (*(void *)(v53 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v55 = v53 + *(int *)(v54 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (sub_100186AB0() == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v56 = type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v57 = v55 + *(int *)(v56 + 20);
          uint64_t v58 = type metadata accessor for URL();
          if (!_s7Weather24LocationCompositionStateOwet_0(v57, 1, v58))
          {
            sub_100162880();
            (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
          }
          swift_bridgeObjectRelease();
          sub_100162880();
          uint64_t v61 = *(void (**)(void))(v60 + 8);
          v61();
          uint64_t v62 = v55 + *(int *)(v56 + 32);
          if (!_s7Weather24LocationCompositionStateOwet_0(v62, 1, v58)) {
            ((void (*)(uint64_t, uint64_t))v61)(v62, v58);
          }
        }
        uint64_t v63 = type metadata accessor for DetailComponentAction();
        if (!sub_100163744(v63))
        {
          type metadata accessor for URL();
          sub_100162E4C();
          uint64_t v64 = sub_10018A9AC();
          v65(v64);
        }
      }
      type metadata accessor for Location();
      sub_100162E4C();
      sub_100162F0C();
      v66();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v0 + 32));
      sub_100183D58();
      sub_100183D58();
      sub_100183D58();
      sub_100183D58();
      sub_100183D58();
      sub_100183D58();
      sub_100183D58();
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    default:
      goto LABEL_38;
  }
}

uint64_t sub_100104C20()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100104C60()
{
  type metadata accessor for Location();
  sub_100162E4C();
  sub_100162F0C();
  v0();

  return swift_deallocObject();
}

uint64_t sub_100104CE4()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for NotificationsOptInComponentView() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(v2);
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100104DCC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100104E24()
{
  sub_10010977C();
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_100179EF0();
  swift_release();
  sub_100188768();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100179DC0();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_10019D788();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }
  sub_100109404();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v2))
    {
      sub_100162880();
      sub_100162F0C();
      v3();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001801E4();
  sub_1001A6918();
  sub_100186B00();
  sub_100183E00();
  sub_100179DC0();
  sub_100162F0C();
  v4();
  sub_1001D2520();
  sub_100163804();
  sub_1001A17C4();
  sub_100184748();
  sub_1001093E8();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_100104FF0()
{
  uint64_t v1 = *(void *)(type metadata accessor for LocationViewCollisionOptionsUpdatingView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_10018CCC4(*(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(unsigned char *)(v2 + 72));
  swift_bridgeObjectRelease();
  type metadata accessor for Location.Identifier();
  sub_100162E4C();
  sub_100162F0C();
  v3();
  swift_release();
  swift_release();
  swift_release();
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100162E4C();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001051A4()
{
  uint64_t v1 = type metadata accessor for DetailContainerView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = v3 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100179DC0();
    (*(void (**)(uint64_t))(v6 + 8))(v5);
  }
  type metadata accessor for DetailType();
  sub_100179DC0();
  sub_100162F0C();
  v7();
  type metadata accessor for DetailViewVisibilityTrackerModel();
  type metadata accessor for Location();
  sub_100179DC0();
  sub_100162F0C();
  v8();
  type metadata accessor for DetailViewOrigin();
  sub_100179DC0();
  sub_100162F0C();
  v9();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v1 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100162F0C();
  v10();

  return swift_deallocObject();
}

uint64_t sub_1001053E8()
{
  uint64_t v1 = (int *)(type metadata accessor for PrecipitationAveragesHeroChartView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_10018F6D8(*(void *)v2, *(unsigned char *)(v2 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + 16);
  uint64_t v3 = v2 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v3 + 104), *(void **)(v3 + 112), *(void *)(v3 + 120), *(unsigned char *)(v3 + 128));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v5 = *(void (**)(void))(v4 + 8);
  sub_1001629EC();
  v5();
  type metadata accessor for PeakUpperMarkModel(0);
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  sub_1001629EC();
  v5();
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    sub_1001629EC();
    v5();
  }
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    type metadata accessor for AttributedString();
    sub_100162E4C();
    sub_100162F0C();
    v7();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_10:
  sub_1001629EC();
  v5();
  sub_1001629EC();
  v5();

  return swift_deallocObject();
}

uint64_t sub_10010572C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10010578C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for SlowDeviceGridView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[11], v1);
  swift_release();
  uint64_t v4 = v3 + v2[13];
  sub_10018CCC4(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72));

  return swift_deallocObject();
}

uint64_t sub_1001058C0()
{
  uint64_t v1 = type metadata accessor for ChartView(0);
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for ChartViewModel(0);
  sub_100176DB8();
  type metadata accessor for ChartKind();
  sub_100179DC0();
  sub_100162F0C();
  v5();
  swift_bridgeObjectRelease();
  sub_100176DB8();
  type metadata accessor for DetailChartExtrema();
  sub_100179DC0();
  sub_100162F0C();
  v6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100186BB0(v3 + *(int *)(v4 + 44));
  sub_10017DF08(&qword_100E6BF00);
  uint64_t v7 = type metadata accessor for Date();
  if (!sub_100163364())
  {
    sub_100162880();
    uint64_t v8 = sub_10019FFBC();
    v9(v8);
  }
  uint64_t v10 = sub_10017DF08(&qword_100E6BF10);
  if (!sub_1001810A0(v10))
  {
    swift_release();
    if (!sub_100163364())
    {
      sub_100162880();
      uint64_t v11 = sub_10019FFBC();
      v12(v11);
    }
  }
  type metadata accessor for ChartDarkeningScrim();
  sub_100179DC0();
  sub_100162F0C();
  v13();
  swift_bridgeObjectRelease();
  sub_100162880();
  uint64_t v15 = *(void (**)(void))(v14 + 8);
  sub_100163918();
  v15();
  sub_100163918();
  v15();
  sub_100163918();
  v15();
  sub_100176DB8();
  type metadata accessor for DetailChartDataElement();
  if (!sub_10019B61C(v7))
  {
    sub_100162880();
    sub_100162B9C();
    v16();
  }
  swift_bridgeObjectRelease();
  sub_100176DB8();
  type metadata accessor for ChartPeakMarkStyle();
  sub_100179DC0();
  sub_100162F0C();
  v17();
  swift_bridgeObjectRelease();
  sub_100176DB8();
  type metadata accessor for ChartViewModelInterpolationMode();
  sub_100179DC0();
  sub_100162F0C();
  v18();
  sub_100176DB8();
  type metadata accessor for ChartPastDataTreatment();
  sub_100179DC0();
  sub_100162F0C();
  v19();
  sub_100183044();
  sub_100183044();
  sub_100183044();
  sub_100183044();
  sub_100183044();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v1 + 28));
  sub_10018F6D8(*(void *)(v3 + *(int *)(v1 + 32)), *(unsigned char *)(v3 + *(int *)(v1 + 32) + 8));
  sub_10017DF08(&qword_100E66E50);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100179DC0();
    sub_100162F0C();
    v20();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E62CB8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100179DC0();
    sub_100162F0C();
    v21();
  }
  else
  {
    swift_release();
  }
  type metadata accessor for Text.Measurements();
  sub_100179DC0();
  sub_100162F0C();
  v22();

  return swift_deallocObject();
}

void sub_100105D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t, uint64_t))
{
  sub_10017F28C();
  uint64_t v15 = *(void *)(v13 + 16);
  uint64_t v14 = *(void *)(v13 + 24);
  uint64_t v16 = type metadata accessor for AnimatableTabView();
  sub_100179EF0();
  uint64_t v18 = v13 + ((*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  swift_release();
  swift_release();
  type metadata accessor for Binding();
  sub_100162880();
  uint64_t v20 = *(void (**)(void))(v19 + 8);
  sub_100183F94();
  v20();
  uint64_t v21 = sub_100163968();
  ((void (*)(uint64_t))v20)(v21);
  type metadata accessor for State();
  sub_10012B664();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100189ED8();
  sub_100189ED8();
  uint64_t v22 = v18 + *(int *)(v16 + 76);
  if (!sub_10017A970())
  {
    sub_100162880();
    sub_100127BA4();
    v23();
    uint64_t v24 = sub_10017F124();
    a13(v22 + *(int *)(v24 + 52), v14);
    uint64_t v25 = v22 + *(int *)(v15 + 52);
    sub_1001D0F04();
    sub_100127BA4();
    v26();
    a13(v25 + *(int *)(v24 + 52), v14);
  }
  sub_1001A2E4C();
  type metadata accessor for State();
  sub_10012B664();
  sub_100189ED8();
  sub_100180498();
  sub_100180F84();
}

uint64_t sub_100105F10()
{
  uint64_t v1 = (int *)(type metadata accessor for LollipopChartOverlayView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2);
  type metadata accessor for ChartProxy();
  sub_100179DC0();
  sub_100162F0C();
  v3();
  type metadata accessor for GeometryProxy();
  sub_100179DC0();
  sub_100162F0C();
  v4();
  uint64_t v5 = v2 + v1[9];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v2 + v1[10], v6);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100179DC0();
    sub_100162F0C();
    v8();
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1001060E4()
{
  uint64_t v1 = (int *)(type metadata accessor for CalendarHeaderView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_10018F6D8(*(void *)v2, *(unsigned char *)(v2 + 8));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[8];
  uint64_t v4 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  v6(v2 + v1[9], v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + v1[12]);

  return swift_deallocObject();
}

uint64_t sub_100106214()
{
  uint64_t v1 = type metadata accessor for TrackExposureModifier();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 28);
  uint64_t v4 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100106354()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100106394()
{
  uint64_t v3 = type metadata accessor for LocationGridView();
  sub_100179EF0();
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = type metadata accessor for Location.Identifier();
  sub_100162E4C();
  uint64_t v8 = *(void (**)(uint64_t))(v7 + 8);
  uint64_t v9 = sub_100179100();
  v8(v9);
  uint64_t v10 = type metadata accessor for LocationViewModel();
  if (!sub_100191220(v10)) {
    ((void (*)(uint64_t, uint64_t))v8)(v2, v6);
  }
  uint64_t v11 = v5 + v1[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(unsigned char *)(v11 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10021038C();
  uint64_t v12 = v5 + v1[9];
  uint64_t v13 = type metadata accessor for LocationFooterViewModel();
  if (!sub_1001810A0(v13))
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = type metadata accessor for URL();
    if (!sub_10018A418(v14))
    {
      sub_100162880();
      sub_1001723EC();
      v15();
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = type metadata accessor for LearnMoreAttributorViewModel();
    if (!sub_10019D27C(v16))
    {
      sub_100162880();
      sub_1001723EC();
      v17();
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v18 = v12 + *(int *)(v2 + 44);
    uint64_t v19 = type metadata accessor for LocationOfInterest();
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
    {
      sub_100162880();
      sub_1001723EC();
      v20();
    }
    uint64_t v21 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!sub_1001810A0(v21))
    {
      type metadata accessor for Location();
      sub_100179DC0();
      sub_100162F0C();
      v22();
      sub_100162880();
      sub_1001723EC();
      v23();
    }
  }

  type metadata accessor for Date();
  sub_100179DC0();
  sub_100162F0C();
  v24();
  uint64_t v25 = type metadata accessor for ForegroundEffect();
  if (!sub_1001810A0(v25))
  {
    sub_100162880();
    sub_10017B290();
    v26();
  }
  swift_bridgeObjectRelease();
  type metadata accessor for LocationEntity();
  sub_100179DC0();
  sub_100162F0C();
  v27();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v5 + *(int *)(v3 + 36));
  type metadata accessor for DisplayMetrics();
  sub_100176DE4();
  sub_100179DC0();
  sub_100162F0C();
  v28();
  swift_release();
  sub_100184BF0();

  return swift_deallocObject();
}

uint64_t sub_1001067B8()
{
  uint64_t v1 = type metadata accessor for ViewData();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for DetailViewVisibilityTrackerModel() - 8);
  unint64_t v8 = (v4 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v17 = type metadata accessor for DetailViewOriginationData();
  sub_100179C0C();
  uint64_t v11 = v10;
  unint64_t v12 = (v9 + *(unsigned __int8 *)(v11 + 80) + v8 + 1) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  type metadata accessor for DetailType();
  sub_100179DC0();
  sub_100162F0C();
  v13();
  type metadata accessor for Location();
  sub_100179DC0();
  sub_100162F0C();
  v14();
  type metadata accessor for DetailViewOrigin();
  sub_100179DC0();
  sub_100162F0C();
  v15();
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v12, v17);

  return swift_deallocObject();
}

uint64_t sub_1001069B4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001069F4()
{
  sub_100162EA0();
  uint64_t v1 = (int *)type metadata accessor for SunriseSunsetInteractiveChartView();
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v3, 1, v5))
  {
    sub_100162880();
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  uint64_t v7 = sub_10017DF08(&qword_100E7DDF8);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = v4 + v1[6];
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v5))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v5);
  }
  swift_release();
  swift_release();
  uint64_t v10 = v4 + v1[8];
  swift_release();
  swift_release();
  uint64_t v11 = v10 + *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v12 = type metadata accessor for DetailChartDataElement();
  if (!sub_1001632AC(v12))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v7);
  }
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100162E4C();
    sub_100162F0C();
    v14();
  }
  else
  {
    swift_release();
  }

  type metadata accessor for SunriseSunsetDetailChartViewModel();
  sub_100162E4C();
  sub_100162F0C();
  v15();
  type metadata accessor for SunriseSunsetDetailChartContentStyle();
  sub_100162E4C();
  sub_100162F0C();
  v16();
  type metadata accessor for Calendar();
  sub_100162E4C();
  sub_100162F0C();
  v17();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100106CD0()
{
  uint64_t v1 = (int *)type metadata accessor for WeatherEditorView();
  uint64_t v124 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v123 = (v124 + 16) & ~v124;
  uint64_t v2 = v0 + v123;
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v4 = v2 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100179DC0();
    (*(void (**)(uint64_t))(v5 + 8))(v4);
  }
  type metadata accessor for LocationModel();
  sub_100179DC0();
  uint64_t v6 = sub_100162728();
  v7(v6);
  uint64_t v8 = v2 + v1[7];
  type metadata accessor for LocationWeatherDataState(0);
  int v9 = swift_getEnumCaseMultiPayload();
  uint64_t v125 = v0 + v123;
  uint64_t v126 = v1;
  if (v9 == 2)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v8 + 24) < 0xEuLL) {
      goto LABEL_40;
    }
    goto LABEL_9;
  }
  if (v9 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
    type metadata accessor for Locale();
    if (!sub_1001D2098())
    {
      sub_100162880();
      uint64_t v11 = sub_100184164();
      v12(v11);
    }
    type metadata accessor for WeatherDataModel();
    sub_100179DC0();
    uint64_t v13 = sub_100162728();
    v14(v13);
    uint64_t v15 = v8 + v10[7];
    uint64_t v16 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
    {
      type metadata accessor for Date();
      sub_100179DC0();
      uint64_t v17 = sub_100129018();
      v18(v17);
    }
    uint64_t v19 = v8 + v10[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 1)
    {
      type metadata accessor for WeatherStatisticsModel();
      sub_100179DC0();
      uint64_t v22 = sub_100129018();
      v23(v22);
    }
    else if (!v20)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v24 = v8 + v10[9];
    uint64_t v25 = type metadata accessor for WeatherDataOverrides();
    if (!sub_10018A0A8(v25))
    {
      uint64_t v26 = type metadata accessor for Date();
      if (!sub_10018AB84(v26))
      {
        sub_100162880();
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v19);
      }
      if (!sub_1001D2098())
      {
        sub_100162880();
        uint64_t v28 = sub_100184164();
        v29(v28);
      }
    }
    uint64_t v121 = sub_10017DF08(&qword_100E63748);
    uint64_t v30 = v8 + *(int *)(v121 + 48);
    type metadata accessor for UUID();
    sub_100179DC0();
    sub_100162F0C();
    v31();
    uint64_t v32 = type metadata accessor for PreprocessedWeatherData();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    sub_1001856F4();
    if (!sub_1001D2098())
    {
      swift_bridgeObjectRelease();
      type metadata accessor for TemperatureScaleConfiguration();
      sub_100179DC0();
      uint64_t v33 = sub_100162728();
      v34(v33);
      type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      sub_10017E98C();
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = v30 + *(int *)(v32 + 28);
    swift_bridgeObjectRelease();
    uint64_t v36 = v35 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v37 = type metadata accessor for WeatherDescription();
    if (!sub_100185E40(v37))
    {
      sub_100162880();
      uint64_t v38 = sub_10016518C();
      v39(v38);
    }
    sub_1001A4970();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = v36 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v41 = type metadata accessor for Date();
    sub_100162E4C();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    uint64_t v43 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v44 = v40 + *(int *)(v43 + 20);
    uint64_t v45 = type metadata accessor for Elevation();
    if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    }
    uint64_t v47 = v40 + *(int *)(v43 + 24);
    uint64_t v48 = type metadata accessor for BackgroundMoonData();
    if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v48))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
    sub_1001A4970();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100162880();
    sub_100162F0C();
    v50();
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    sub_10017E98C();
    sub_1001A4970();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v30 + *(int *)(v32 + 48);
    type metadata accessor for PressureTrend();
    sub_100179DC0();
    uint64_t v52 = sub_100162728();
    v53(v52);
    type metadata accessor for PressureComponentPreprocessedDataModel();
    sub_10017E98C();
    sub_10017E98C();
    sub_10017E98C();
    sub_10017E98C();
    sub_1001A4970();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100162F0C();
    v54();
    uint64_t v55 = sub_1001A3564(*(int *)(v43 + 20));
    if (!_s7Weather24LocationCompositionStateOwet_0(v55, v56, v45))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v51, v45);
    }
    if (!sub_1001D2098())
    {
      sub_100162880();
      uint64_t v58 = sub_100184164();
      v59(v58);
    }
    sub_1001A4970();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = v8 + *(int *)(v121 + 64);
    type metadata accessor for NewsDataModel();
    uint64_t v2 = v125;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      type metadata accessor for News();
      sub_100179DC0();
      (*(void (**)(uint64_t))(v61 + 8))(v60);
    }
    uint64_t v1 = v126;
  }
  else
  {
    if (v9) {
      goto LABEL_40;
    }
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    type metadata accessor for News();
    sub_100179DC0();
    sub_100162F0C();
    v21();
  }
LABEL_40:
  uint64_t v62 = v2 + v1[8];
  swift_bridgeObjectRelease();
  uint64_t v63 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v64 = v62 + v63[5];
  uint64_t v65 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v64, 1, v65))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
  }
  uint64_t v67 = v62 + v63[6];
  uint64_t v68 = type metadata accessor for WeatherDataModel();
  sub_100162E4C();
  uint64_t v70 = *(void *)(v69 + 8);
  ((void (*)(uint64_t, uint64_t))v70)(v67, v68);
  uint64_t v71 = v62 + v63[7];
  uint64_t v72 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v72))
  {
    type metadata accessor for Date();
    sub_100179DC0();
    uint64_t v73 = sub_100129018();
    v74(v73);
  }
  uint64_t v75 = v62 + v63[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v76 = swift_getEnumCaseMultiPayload();
  uint64_t v120 = (void (*)(uint64_t, uint64_t))v70;
  uint64_t v122 = v68;
  if (v76 == 1)
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100179DC0();
    uint64_t v77 = sub_100129018();
    v78(v77);
  }
  else if (!v76)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v79 = v62 + v63[9];
  uint64_t v80 = type metadata accessor for WeatherDataOverrides();
  if (!sub_10018A0A8(v80))
  {
    uint64_t v81 = type metadata accessor for Date();
    if (!sub_10018AB84(v81))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v79, v75);
    }
    uint64_t v67 = v79 + *(int *)(v70 + 20);
    if (!sub_1001D2098())
    {
      sub_100162880();
      uint64_t v83 = sub_100184164();
      v84(v83);
    }
  }
  uint64_t v85 = v2 + v1[9];
  type metadata accessor for UUID();
  sub_100179DC0();
  sub_100162F0C();
  v86();
  uint64_t v87 = (int *)type metadata accessor for PreprocessedWeatherData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v88 = sub_1001856F4();
  if (!_s7Weather24LocationCompositionStateOwet_0(v67, 1, v88))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TemperatureScaleConfiguration();
    sub_100179DC0();
    uint64_t v89 = sub_100162728();
    v90(v89);
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    sub_10017E98C();
  }
  swift_bridgeObjectRelease();
  uint64_t v91 = v85 + v87[7];
  swift_bridgeObjectRelease();
  uint64_t v92 = v91 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v93 = type metadata accessor for WeatherDescription();
  if (!sub_100185E40(v93))
  {
    sub_100162880();
    uint64_t v94 = sub_10016518C();
    v95(v94);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v96 = v92 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v97 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  v99(v96, v97);
  uint64_t v100 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v101 = v96 + *(int *)(v100 + 20);
  uint64_t v102 = type metadata accessor for Elevation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v101, 1, v102))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
  }
  uint64_t v104 = v96 + *(int *)(v100 + 24);
  uint64_t v105 = type metadata accessor for BackgroundMoonData();
  if (!_s7Weather24LocationCompositionStateOwet_0(v104, 1, v105))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100162880();
  sub_100162F0C();
  v107();
  type metadata accessor for UVIndexComponentPreprocessedDataModel();
  sub_10017E98C();
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v108 = v85 + v87[12];
  type metadata accessor for PressureTrend();
  sub_100179DC0();
  uint64_t v109 = sub_100162728();
  v110(v109);
  type metadata accessor for PressureComponentPreprocessedDataModel();
  sub_10017E98C();
  sub_10017E98C();
  sub_10017E98C();
  sub_10017E98C();
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v99(v85 + v87[14], v97);
  uint64_t v111 = sub_1001A3564(*(int *)(v100 + 20));
  if (!_s7Weather24LocationCompositionStateOwet_0(v111, v112, v102))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v108, v102);
  }
  uint64_t v114 = sub_1001A3564(*(int *)(v100 + 24));
  if (!_s7Weather24LocationCompositionStateOwet_0(v114, v115, v105))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v108, v105);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v117 = v125 + v126[10];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for News();
    sub_100179DC0();
    (*(void (**)(uint64_t))(v118 + 8))(v117);
  }
  swift_release();
  v120(v125 + v126[12], v122);
  sub_10017DF08(&qword_100EA6858);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100107C84()
{
  uint64_t v1 = type metadata accessor for CurrentWeatherEditorView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = v3 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v6 + 8))(v5);
  }
  uint64_t v7 = v3 + *(int *)(v1 + 20);
  uint64_t v8 = type metadata accessor for CurrentWeather();
  sub_100162E4C();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  swift_release();
  v10(v3 + *(int *)(v1 + 28), v8);
  sub_10017DF08(&qword_100EA7410);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100107E3C()
{
  uint64_t v1 = type metadata accessor for LearnMoreAttributorView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
  uint64_t v4 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_100191924(*(void *)(v2 + *(int *)(v1 + 24)), *(void *)(v2 + *(int *)(v1 + 24) + 8), *(unsigned char *)(v2 + *(int *)(v1 + 24) + 16));
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100107FAC()
{
  uint64_t v1 = type metadata accessor for MainView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + 48);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + 88);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100162E4C();
    sub_100162F0C();
    v3();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08((uint64_t *)&unk_100EAA550);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for LegibilityWeight();
    if (!sub_100129098(v4))
    {
      sub_100162F0C();
      v5();
    }
  }
  else
  {
    swift_release();
  }
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v6))
    {
      sub_100162F0C();
      v7();
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v2 + *(int *)(v1 + 44)), *(unsigned char *)(v2 + *(int *)(v1 + 44) + 8));
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + *(int *)(v1 + 60));

  return swift_deallocObject();
}

uint64_t sub_1001081F4()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10010823C()
{
  type metadata accessor for Location();
  sub_100179DC0();
  sub_100162F0C();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1001082BC()
{
  type metadata accessor for InteractiveMapView();
  sub_100179CD4();
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  type metadata accessor for WeatherMapDisplayMode();
  sub_100162E4C();
  sub_100162F0C();
  v5();
  sub_10018AC0C();
  uint64_t v6 = v4 + *(int *)(v0 + 44);
  uint64_t v7 = type metadata accessor for WeatherMapPerformanceTestConditions();
  if (!sub_100129098(v7))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v2);
  }
  sub_10017DF08(&qword_100EACB90);
  swift_release();
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v9();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v10))
    {
      sub_100162880();
      sub_100162F0C();
      v11();
    }
  }
  else
  {
    swift_release();
  }
  sub_100163C78();
  sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorScheme();
    sub_100162E4C();
    sub_100162F0C();
    v12();
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100108528()
{
  uint64_t v1 = (int *)(type metadata accessor for MainViewSheetViewModifier(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v2 + 16);
  swift_release();
  uint64_t v3 = v0 + v2 + v1[9];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100108670()
{
  uint64_t v1 = (int *)(type metadata accessor for LegacySearchResultsView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[9];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100181EF0(v4)) {
      (*(void (**)(unint64_t, unint64_t))(*(void *)(v0 + v2 - 8) + 8))(v3, v0 + v2);
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1001087A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 88);

  return swift_deallocObject();
}

uint64_t sub_1001087F8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 128);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10010887C()
{
  type metadata accessor for DailyForecastEditorView();
  sub_100179CD4();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    unint64_t v4 = v0 + v2 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100179DC0();
    (*(void (**)(unint64_t))(v5 + 8))(v4);
  }
  sub_10017DF08(&qword_100E66CA0);
  sub_100179DC0();
  sub_100162F0C();
  v6();
  type metadata accessor for TimeZone();
  sub_100179DC0();
  sub_100162F0C();
  v7();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100108A08()
{
  uint64_t v1 = (int *)(type metadata accessor for WeatherComponentButton() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  sub_10018F6D8(*(void *)v2, *(unsigned char *)(v2 + 8));
  sub_100162880();
  (*(void (**)(void))(v3 + 8))();
  swift_release();
  sub_100191924(*(void *)(v2 + v1[14]), *(void *)(v2 + v1[14] + 8), *(unsigned char *)(v2 + v1[14] + 16));
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = v2 + v1[16];
  uint64_t v5 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100108BA8()
{
  sub_100162EA0();
  type metadata accessor for ScrubberView(0);
  sub_100179CD4();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + 8);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ScrubberViewModel(0);
  type metadata accessor for TimeZone();
  sub_100162E4C();
  sub_100162F0C();
  v4();
  sub_100181BE8();
  sub_1001A3650();
  uint64_t v5 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v7 = *(void (**)(uint64_t))(v6 + 8);
  uint64_t v8 = sub_100185804();
  v7(v8);
  sub_10017DF08(&qword_100EB1D68);
  swift_release();
  sub_100181BE8();
  sub_1001A3650();
  sub_100181BE8();
  sub_100181BE8();
  uint64_t v9 = v3 + *(int *)(v0 + 72);
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(sub_10017DF08(&qword_100E98608) + 32);
  uint64_t v11 = type metadata accessor for ScrubberDateSelection();
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)
    && !_s7Weather24LocationCompositionStateOwet_0(v10, 1, v5))
  {
    ((void (*)(uint64_t, uint64_t))v7)(v10, v5);
  }
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100162E4C();
    sub_100162F0C();
    v12();
  }
  else
  {
    swift_release();
  }
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100108DD8()
{
  uint64_t v1 = (int *)(type metadata accessor for TemperatureChartPickerView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = type metadata accessor for TemperatureChartKind();
  sub_100162E4C();
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(v0 + v2, v3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v2 + v1[7]);
  uint64_t v6 = v0 + v2 + v1[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v3)) {
    v5(v6, v3);
  }
  sub_10017DF08(&qword_100EB5E68);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100108F24()
{
  type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  sub_100179EF0();
  sub_10017DF08(qword_100E84608);
  if (sub_10017A0C8() == 1)
  {
    swift_release();
    type metadata accessor for PerformLocationComponentHeaderInputModelAction();
    type metadata accessor for UUID();
    sub_100179DC0();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100109050()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_100109098()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1001090C8(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(unsigned int *)(v6 + 84);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8) {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80);
  uint64_t v13 = *(void *)(*(void *)(v5 - 8) + 64) + v12;
  if (v11 >= a2)
  {
LABEL_24:
    if (v11)
    {
      if (v8 < v10)
      {
        uint64_t result = (v13 + result) & ~v12;
        uint64_t v8 = v10;
        uint64_t v5 = v7;
      }
      return _s7Weather24LocationCompositionStateOwet_0(result, v8, v5);
    }
    return 0;
  }
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80) | *(_DWORD *)(v9 + 80);
  unint64_t v15 = (((v13 & ~v12)
        + *(void *)(*(void *)(v7 - 8) + 64)
        + (((v13 & ~v12) + *(void *)(*(void *)(v7 - 8) + 64) + v14) & ~v14)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unsigned int v16 = a2 - v11;
  uint64_t v17 = v15 & 0xFFFFFFF8;
  if ((v15 & 0xFFFFFFF8) != 0) {
    unsigned int v18 = 2;
  }
  else {
    unsigned int v18 = v16 + 1;
  }
  if (v18 >= 0x10000) {
    LODWORD(v19) = 4;
  }
  else {
    LODWORD(v19) = 2;
  }
  if (v18 < 0x100) {
    LODWORD(v19) = 1;
  }
  if (v18 >= 2) {
    uint64_t v19 = v19;
  }
  else {
    uint64_t v19 = 0;
  }
  switch(v19)
  {
    case 1:
      int v20 = *(unsigned __int8 *)(result + v15);
      if (!v20) {
        goto LABEL_24;
      }
      goto LABEL_21;
    case 2:
      int v20 = *(unsigned __int16 *)(result + v15);
      if (!v20) {
        goto LABEL_24;
      }
      goto LABEL_21;
    case 3:
      __break(1u);
      return result;
    case 4:
      int v20 = *(_DWORD *)(result + v15);
      if (!v20) {
        goto LABEL_24;
      }
LABEL_21:
      unsigned int v21 = v20 - 1;
      if (v17)
      {
        unsigned int v21 = 0;
        int v22 = *(_DWORD *)result;
      }
      else
      {
        int v22 = 0;
      }
      uint64_t result = v11 + (v22 | v21) + 1;
      break;
    default:
      goto LABEL_24;
  }
  return result;
}

uint64_t type metadata accessor for AnimatableTabView()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for WireframeScrollInterestView()
{
  return sub_100109098();
}

uint64_t sub_1001092B4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001092D0()
{
  return static NSUnitLength.read(from:)();
}

uint64_t type metadata accessor for PresentationWithoutInitialAnimation()
{
  return sub_100109098();
}

uint64_t sub_100109308(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100109328@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

void sub_100109338(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

void sub_100109344(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>, unint64_t a8)
{
  sub_10020FA74(a1, a2, a3, a4, a5, 0xD000000000000019, (a7 - 32) | 0x8000000000000000, a6, a8);
}

uint64_t sub_100109388()
{
  return sub_1001184F4(v0, v1);
}

uint64_t sub_1001093BC()
{
  return v0;
}

uint64_t sub_1001093D4()
{
  return v0;
}

uint64_t sub_1001093E8()
{
  return v0;
}

uint64_t sub_100109410()
{
  return 0;
}

uint64_t sub_100109420()
{
  return sub_1001781AC(v1, v0);
}

uint64_t sub_100109438()
{
  return Array<A>.write(to:)();
}

uint64_t sub_100109460()
{
  return Hasher.init(_seed:)();
}

__n128 sub_100109488(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 160);
  a1[1] = result;
  return result;
}

void sub_1001094A0()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_100127C8C();
  uint64_t v5 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = *v1;
  sub_100109818(&qword_100E63A28, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  swift_bridgeObjectRetain();
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v28 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v25 = v0;
    uint64_t v26 = ~v14;
    uint64_t v24 = v7;
    unsigned int v18 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v17 = v7 + 16;
    unsigned int v16 = v18;
    uint64_t v27 = *(void *)(v17 + 56);
    while (1)
    {
      uint64_t v19 = v12;
      int v20 = v16;
      v16(v11, *(void *)(v12 + 48) + v27 * v15, v5);
      sub_100109818((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v22 = *(void (**)(void))(v17 - 8);
      sub_100183F94();
      v22();
      if (v21) {
        break;
      }
      unint64_t v15 = (v15 + 1) & v26;
      uint64_t v12 = v19;
      unsigned int v16 = v20;
      if (((*(void *)(v28 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = v25;
        uint64_t v7 = v24;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_100183F94();
    v22();
    v20(v25, *(void *)(*v2 + 48) + v27 * v15, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    unsigned int v16 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16(v11, v4, v5);
    uint64_t v29 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_100109860(v11, v15, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v0, v4, v5);
  }
  sub_100162694();
}

uint64_t sub_10010979C()
{
  return String.hash(into:)();
}

double sub_1001097C0()
{
  return 0.0;
}

uint64_t sub_1001097CC()
{
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v1);
}

void *sub_1001097EC(void *a1)
{
  return memcpy(a1, v1, 0xE8uLL);
}

uint64_t sub_100109818(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100109860(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_100109D4C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1007F0F1C();
      goto LABEL_12;
    }
    sub_100015F70();
  }
  uint64_t v12 = *v3;
  sub_100109818(&qword_100E63A28, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100109818((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100109B1C()
{
  sub_10017DF08((uint64_t *)&unk_100E749A0);
  Binding.projectedValue.getter();
  return v1;
}

uint64_t sub_100109B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100109B78(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24));
}

uint64_t sub_100109B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a7;
  v12[3] = a8;
  v12[4] = a5;
  v12[5] = a6;
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100EAD6E0);
  sub_100109C7C();
  View.sheet<A>(isPresented:onDismiss:content:)();
  return swift_release();
}

unint64_t sub_100109C7C()
{
  unint64_t result = qword_100EAD6E8;
  if (!qword_100EAD6E8)
  {
    sub_10018C6DC(&qword_100EAD6E0);
    sub_10018C6DC(&qword_100EAD6F0);
    type metadata accessor for FormPresentationSizing();
    sub_1002301A8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD6E8);
  }
  return result;
}

uint64_t sub_100109D4C()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for Location.Identifier();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10017DF08(&qword_100E970E0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_100109818(&qword_100E63A28, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_1007F3004(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_10010A144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10010A14C(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24));
}

uint64_t sub_10010A14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a7;
  v12[3] = a8;
  v12[4] = a5;
  v12[5] = a6;
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100EAAA78);
  sub_10010A458(&qword_100EAAA80, &qword_100EAAA78, (void (*)(void))sub_100218C24);
  View._fullScreenSheet<A>(isPresented:onDismiss:content:)();
  return swift_release();
}

uint64_t sub_10010A27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_10010A284(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(void *)(v6 + 24));
}

uint64_t sub_10010A284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a7;
  v12[3] = a8;
  v12[4] = a5;
  v12[5] = a6;
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E745E8);
  sub_10010A388();
  View.fullScreenCover<A>(isPresented:onDismiss:content:)();
  return swift_release();
}

unint64_t sub_10010A388()
{
  unint64_t result = qword_100E745F0;
  if (!qword_100E745F0)
  {
    sub_10018C6DC(&qword_100E745E8);
    sub_10018C6DC(&qword_100E745F8);
    type metadata accessor for ZoomNavigationTransition();
    sub_10022A87C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E745F0);
  }
  return result;
}

uint64_t sub_10010A458(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10010A4D4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10010A518()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(v0 + 16) + 16))(v0 + 24);
}

void sub_10010A548()
{
  uint64_t v0 = type metadata accessor for OSSignpostID();
  sub_100164920(v0);
  uint64_t v1 = type metadata accessor for Location();
  sub_1001627C0(v1);
  sub_10010A5C8();
}

void sub_10010A5C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    static os_signpost_type_t.begin.getter();
    uint64_t v2 = *(void **)(v1 + 448);
    sub_10017DF08(&qword_100E64020);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100C251B0;
    id v4 = v2;
    uint64_t v5 = Location.name.getter();
    uint64_t v7 = v6;
    *(void *)(v3 + 56) = &type metadata for String;
    *(void *)(v3 + 64) = sub_10012B7C0();
    *(void *)(v3 + 32) = v5;
    *(void *)(v3 + 40) = v7;
    os_signpost(_:dso:log:name:signpostID:_:_:)();
    swift_release();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1006A7CD8(0xD000000000000022, 0x8000000100CBB2F0);
  }
}

void sub_10010A718()
{
  uint64_t v2 = type metadata accessor for OSSignpostID();
  sub_100164920(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = type metadata accessor for Location();
  sub_100164920(v7);
  unint64_t v9 = (v4 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  sub_1001EA8B0();
  uint64_t v10 = type metadata accessor for ProductRequirementsFactory.AppRequiredProducts();
  sub_100164920(v10);
  unint64_t v12 = (v1 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  sub_100164920(Options);
  sub_1001A38E8();
  sub_100125688(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), v0 + v4, v0 + v9, *(void **)(v0 + v1), v0 + v12, v0 + v14, *(void *)(v0 + v15), *(void *)(v0 + v15 + 8), v0 + v16, *(void *)(v0 + ((v16 + 47) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v16 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_10010A86C()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = v3 + *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for AppConfiguration();
  sub_100164920(v6);
  sub_1001A38E8();
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_10010A948(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + v3, *(unsigned char *)(v0 + v5), v0 + v9, *(void *)(v0 + v10), *(void *)(v0 + v10 + 8), *(void *)(v0 + v7), *(void *)(v0 + v7 + 8), *(void *)(v0 + v8), *(void *)(v0 + v8 + 8), *(void *)(v0 + v8 + 16), *(void *)(v0 + v8 + 24));
}

void sub_10010A948(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v80 = a8;
  uint64_t v73 = a7;
  uint64_t v77 = a6;
  uint64_t v84 = a2;
  uint64_t v78 = type metadata accessor for Location();
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v74 = v16;
  uint64_t v75 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TimeZone();
  uint64_t v72 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v83 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for OSSignpostID();
  uint64_t v79 = *(void *)(v82 - 8);
  uint64_t v22 = *(void *)(v79 + 64);
  uint64_t v23 = __chkstk_darwin(v82);
  uint64_t v81 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v58 - v24;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v70 = a13;
    uint64_t v69 = a12;
    uint64_t v68 = a11;
    LODWORD(v63) = a4 & 1;
    uint64_t v65 = a10;
    uint64_t v67 = a9;
    uint64_t v62 = a5;
    uint64_t v27 = Strong;
    Location.coordinate.getter();
    double v29 = v28;
    Location.coordinate.getter();
    id v66 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v29 longitude:v30];
    unint64_t v31 = *(void **)(v27 + 448);
    uint64_t v59 = a3;
    uint64_t v64 = v27;
    id v32 = v31;
    uint64_t v60 = updated;
    uint64_t v33 = v25;
    OSSignpostID.init(log:)();
    static os_signpost_type_t.begin.getter();
    uint64_t v71 = v17;
    sub_10017DF08(&qword_100E64020);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_100C251B0;
    id v35 = v32;
    uint64_t v36 = Location.name.getter();
    uint64_t v38 = v37;
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = sub_10012B7C0();
    *(void *)(v34 + 32) = v36;
    *(void *)(v34 + 40) = v38;
    uint64_t v39 = v33;
    uint64_t v61 = v33;
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v21);
    sub_1001BC5DC();
    uint64_t v63 = sub_10010B03C();
    uint64_t v40 = v59;
    Location.timeZone.getter();
    uint64_t v62 = AppConfiguration.locationDecimalPrecision.getter();
    uint64_t v41 = swift_allocObject();
    uint64_t v60 = v41;
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v42 = v75;
    uint64_t v43 = v76;
    uint64_t v44 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v40, v78);
    uint64_t v45 = v79;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v81, v39, v82);
    unint64_t v46 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v47 = (v74 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v48 = (*(unsigned __int8 *)(v45 + 80) + v47 + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = v41;
    *(void *)(v49 + 24) = v84;
    (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v49 + v46, v42, v44);
    uint64_t v50 = (void *)(v49 + v47);
    uint64_t v51 = v68;
    *uint64_t v50 = v65;
    v50[1] = v51;
    uint64_t v52 = v70;
    long long v50[2] = v69;
    v50[3] = v52;
    uint64_t v53 = v82;
    (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v49 + v48, v81, v82);
    uint64_t v54 = (void *)(v49 + ((v22 + v48 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v55 = v67;
    *uint64_t v54 = v80;
    v54[1] = v55;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v56 = v66;
    uint64_t v57 = v83;
    WeatherService.fetchAvailableDataSets(for:timeZone:locationDecimalPrecision:countryCode:completion:)();
    swift_release();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v57, v71);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v61, v53);
    swift_release();
  }
  else
  {
    sub_1006A7CD8(0xD000000000000022, 0x8000000100CBB2F0);
  }
}

uint64_t sub_10010B03C()
{
  return swift_retain();
}

void sub_10010B054()
{
  sub_10018AFA0();
  sub_10017C720();
  sub_10020FA74(v0, v1, v2, v3, v4, 0xD000000000000013, 0x8000000100C97020, 0xD000000000000013, v5);
}

uint64_t sub_10010B0A4()
{
  uint64_t v1 = *(void *)(sub_10017DF08(&qword_100EB9408) - 8);
  return (*(uint64_t (**)(unint64_t))(v0 + 16))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

void sub_10010B110(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MainAction();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v32 = 0xD000000000000017;
  unint64_t v33 = 0x8000000100CB3BB0;
  sub_10006DF38(a1, (uint64_t)&v28, (uint64_t *)&unk_100EA01F0);
  if (v29)
  {
    sub_1001262E4(&v28, (uint64_t)&v30);
    sub_1001B1E64(&v30, v31);
    dispatch thunk of ShortDescribable.shortDescription.getter();
    sub_1001B1E64(&v28, v29);
    uint64_t v7 = dispatch thunk of ShortDescriptionType.describe(withIndentation:)();
    uint64_t v9 = v8;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v28);
    v10._uint64_t countAndFlagsBits = v7;
    v10._object = v9;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v30);
  }
  else
  {
    sub_1001781AC((uint64_t)&v28, (uint64_t *)&unk_100EA01F0);
  }
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    v27[1] = v1;
    v13._uint64_t countAndFlagsBits = 23328;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    uint64_t v14 = v11 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v15 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1001666D4(v14, (uint64_t)v6);
      sub_1001A58D4(&qword_100E7F4F0, 255, (void (*)(uint64_t))type metadata accessor for MainAction);
      v30._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      v30._object = v16;
      swift_bridgeObjectRetain();
      v17._uint64_t countAndFlagsBits = 8236;
      v17._object = (void *)0xE200000000000000;
      String.append(_:)(v17);
      swift_bridgeObjectRelease();
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      sub_100158F34((uint64_t)v6, (void (*)(void))type metadata accessor for MainAction);
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.index(_:offsetBy:)();
    swift_bridgeObjectRelease();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v18 = static String._fromSubstring(_:)();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    unint64_t v32 = v18;
    unint64_t v33 = v20;
    v21._uint64_t countAndFlagsBits = 93;
    v21._object = (void *)0xE100000000000000;
    String.append(_:)(v21);
  }
  uint64_t v23 = v32;
  unint64_t v22 = v33;
  swift_bridgeObjectRetain();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    v30._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 141558275;
    *(void *)&long long v28 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2081;
    swift_bridgeObjectRetain();
    *(void *)&long long v28 = sub_10016414C(v23, v22, &v30._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{private,mask.hash}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10010B5B8()
{
  sub_10010B610(&qword_100E7F508);

  return ShortDescribable.description.getter();
}

uint64_t sub_10010B610(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MainAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10010B658(uint64_t *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);
  uint64_t v2 = *a1;
  uint64_t v3 = (char *)a1 + *(int *)(sub_10017DF08(&qword_100EB9408) + 64);

  sub_10010B6B4(v2, v1, v3);
}

void sub_10010B6B4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = type metadata accessor for MainAction() - 8;
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = v9 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v12 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1001669EC(v11, (uint64_t)v8, (void (*)(void))type metadata accessor for MainAction);
      sub_100173070((uint64_t)v8, *(void *)(a2 + 64), a3);
      sub_100159398((uint64_t)v8, (void (*)(void))type metadata accessor for MainAction);
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10010B7F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v42 = type metadata accessor for Location.Identifier();
  uint64_t v4 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v41 = v5;
  uint64_t v6 = type metadata accessor for SavedLocation();
  uint64_t v40 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  sub_100109314();
  uint64_t v39 = v7;
  uint64_t v8 = type metadata accessor for LocationsAction();
  sub_100162E4C();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v33 - v13;
  uint64_t v15 = type metadata accessor for MainAction();
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a1;
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v20 = *(void *)(result + 16);
  if (!v20) {
    return result;
  }
  uint64_t v36 = (void *)(v2 + 16);
  uint64_t v21 = result + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v22 = *(void *)(v16 + 72);
  v33[1] = result;
  uint64_t v34 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  uint64_t v37 = v15;
  uint64_t v38 = v8;
  uint64_t v35 = v22;
  while (1)
  {
    sub_1001667D8(v21, (uint64_t)v18, (void (*)(void))type metadata accessor for MainAction);
    if (swift_getEnumCaseMultiPayload() == 3) {
      break;
    }
    uint64_t v23 = type metadata accessor for MainAction;
    uint64_t v24 = (uint64_t)v18;
LABEL_7:
    sub_100159088(v24, (void (*)(void))v23);
LABEL_8:
    v21 += v22;
    if (!--v20) {
      return swift_bridgeObjectRelease();
    }
  }
  sub_100222538((uint64_t)v18, (uint64_t)v14);
  sub_1001667D8((uint64_t)v14, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationsAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100159088((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
      type metadata accessor for Location();
      sub_100162E4C();
      (*(void (**)(char *))(v25 + 8))(v12);
      goto LABEL_8;
    case 2u:
      sub_100159088((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 3u:
      uint64_t v23 = type metadata accessor for LocationsAction;
      uint64_t v24 = (uint64_t)v14;
      goto LABEL_7;
    case 4u:
      uint64_t v26 = v2;
      unint64_t v27 = *(void *)v12;
      uint64_t v28 = *(void *)(v43 + 56);
      uint64_t v29 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
      uint64_t result = type metadata accessor for LocationsState();
      if ((v27 & 0x8000000000000000) == 0)
      {
        uint64_t v30 = *(void *)(v28 + v29 + *(int *)(result + 20));
        if (v27 >= *(void *)(v30 + 16)) {
          goto LABEL_21;
        }
        uint64_t v31 = v39;
        sub_1001667D8(v30+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v27, v39, (void (*)(void))&type metadata accessor for SavedLocation);
        uint64_t v2 = v26;
        sub_1001B1E64(v36, *(void *)(v26 + 40));
        uint64_t v32 = v41;
        SavedLocation.identifier.getter();
        sub_100693DCC();
        (*v34)(v32, v42);
        sub_100159088(v31, (void (*)(void))&type metadata accessor for SavedLocation);
        sub_100159088((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
        uint64_t v22 = v35;
        goto LABEL_8;
      }
      __break(1u);
LABEL_21:
      __break(1u);
      return result;
    case 5u:
      sub_100159088((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
LABEL_17:
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 6u:
      sub_100159088((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
      sub_10015303C(*(void *)v12, *((void *)v12 + 1), v12[16]);
      goto LABEL_8;
    default:
      sub_100159088((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
      uint64_t v23 = (uint64_t (*)())&type metadata accessor for CurrentLocation;
      uint64_t v24 = (uint64_t)v12;
      goto LABEL_7;
  }
}

uint64_t sub_10010BD2C(uint64_t a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v188 = *v1;
  uint64_t v4 = type metadata accessor for LocationsState();
  __chkstk_darwin(v4 - 8);
  sub_100109314();
  uint64_t v208 = v5;
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v6 - 8);
  sub_100109314();
  sub_100109328(v7);
  uint64_t v207 = type metadata accessor for WeatherDataAction();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100162EF8();
  uint64_t v219 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100128F8C();
  uint64_t v218 = v11;
  sub_100129064();
  uint64_t v206 = type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v213 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100128F8C();
  uint64_t v216 = (uint64_t *)v15;
  sub_100129064();
  uint64_t v16 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109328(v20);
  uint64_t v205 = type metadata accessor for LocationViewAction();
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v212 = (uint64_t *)v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100128F8C();
  uint64_t v220 = (uint64_t *)v24;
  uint64_t v25 = sub_100129064();
  uint64_t v185 = type metadata accessor for ViewState.SecondaryViewState(v25);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v28 = sub_100109328(v27);
  uint64_t v197 = type metadata accessor for ModalViewState(v28);
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_100162EF8();
  uint64_t v187 = v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  uint64_t v183 = (char *)&v165 - v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  uint64_t v181 = (uint64_t)&v165 - v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100128F8C();
  uint64_t v37 = sub_100109328(v36);
  uint64_t v192 = type metadata accessor for ViewState(v37);
  sub_100162E4C();
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v165 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v165 - v42;
  uint64_t v204 = type metadata accessor for ModalViewAction();
  sub_100162E4C();
  __chkstk_darwin(v44);
  sub_100162EF8();
  uint64_t v215 = v45;
  sub_1001626D4();
  __chkstk_darwin(v46);
  sub_100128F8C();
  uint64_t v221 = (uint64_t *)v47;
  sub_100129064();
  uint64_t v190 = type metadata accessor for LocationViewerViewAction();
  sub_100162E4C();
  __chkstk_darwin(v48);
  sub_100162EF8();
  uint64_t v193 = v49;
  sub_1001626D4();
  __chkstk_darwin(v50);
  sub_100128F8C();
  sub_100109328(v51);
  uint64_t v211 = type metadata accessor for NotificationsOptInAction();
  sub_100162E4C();
  __chkstk_darwin(v52);
  sub_100162EF8();
  uint64_t v210 = v53;
  sub_1001626D4();
  __chkstk_darwin(v54);
  uint64_t v217 = (uint64_t *)((char *)&v165 - v55);
  sub_1001626D4();
  __chkstk_darwin(v56);
  sub_100128F8C();
  sub_100109328(v57);
  uint64_t v189 = type metadata accessor for ListViewAction();
  sub_100162E4C();
  __chkstk_darwin(v58);
  sub_100162EF8();
  uint64_t v191 = v59;
  sub_1001626D4();
  __chkstk_darwin(v60);
  sub_100128F8C();
  sub_100109328(v61);
  uint64_t v203 = type metadata accessor for ViewAction();
  sub_100162E4C();
  __chkstk_darwin(v62);
  sub_100162EF8();
  uint64_t v214 = (uint64_t *)v63;
  sub_1001626D4();
  __chkstk_darwin(v64);
  sub_100128F8C();
  uint64_t v209 = v65;
  sub_100129064();
  uint64_t v66 = type metadata accessor for MainAction();
  sub_100179C0C();
  uint64_t v68 = v67;
  __chkstk_darwin(v69);
  uint64_t v71 = (uint64_t *)((char *)&v165 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010DC44(a1);
  uint64_t v72 = a1;
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v74 = *(void *)(result + 16);
  if (!v74) {
    return result;
  }
  uint64_t v180 = v16;
  uint64_t v200 = v2;
  uint64_t v186 = (void *)(v2 + 72);
  uint64_t v75 = result + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
  unint64_t v175 = v43;
  uint64_t v174 = v43 + 8;
  uint64_t v176 = v41;
  uint64_t v171 = v41 + 8;
  uint64_t v178 = v18 + 32;
  uint64_t v177 = (void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v179 = (void (**)(uint64_t, uint64_t))(v18 + 8);
  uint64_t v76 = *(void *)(v68 + 72);
  uint64_t v199 = result;
  swift_bridgeObjectRetain();
  uint64_t v169 = "mperature";
  unint64_t v170 = 0x8000000100C954E0;
  uint64_t v168 = "authorizedWhenInUse";
  long long v173 = xmmword_100C31780;
  uint64_t v172 = (char *)&type metadata for () + 8;
  uint64_t v77 = v72;
  uint64_t v78 = v208;
  uint64_t v79 = v209;
  uint64_t v201 = v76;
  while (2)
  {
    sub_100166440(v75, (uint64_t)v71, (void (*)(void))type metadata accessor for MainAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0x11u:
        uint64_t v80 = (void (*)(void))type metadata accessor for MainAction;
        uint64_t v81 = v71;
        goto LABEL_5;
      case 2u:
        uint64_t v82 = (uint64_t)v216;
        sub_100164CA0((uint64_t)v71, (uint64_t)v216, (void (*)(void))type metadata accessor for EnvironmentAction);
        sub_100166440(v82, (uint64_t)v213, (void (*)(void))type metadata accessor for EnvironmentAction);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 5u:
          case 6u:
          case 7u:
          case 8u:
          case 0xCu:
          case 0xDu:
            goto LABEL_9;
          case 2u:
          case 3u:
          case 0xBu:
            uint64_t v83 = type metadata accessor for EnvironmentAction;
            sub_100158A74((uint64_t)v216, (void (*)(void))type metadata accessor for EnvironmentAction);
            uint64_t v81 = (uint64_t *)v213;
            goto LABEL_96;
          case 4u:
            sub_100158A74((uint64_t)v216, (void (*)(void))type metadata accessor for EnvironmentAction);
            goto LABEL_22;
          case 9u:
            sub_100158A74((uint64_t)v216, (void (*)(void))type metadata accessor for EnvironmentAction);
            sub_1001EB5EC(*(void *)v213, *((void *)v213 + 1));
            goto LABEL_6;
          case 0xAu:
            if (qword_100E622A8 != -1) {
              swift_once();
            }
            sub_100039C08(&qword_100E6BBA0);
            uint64_t result = Configurable.setting<A>(_:)();
            uint64_t v76 = v223 + 1;
            if (!__OFADD__(v223, 1))
            {
              ++v223;
              sub_100039C08(&qword_100E6BBC8);
              Updatable.save<A>(setting:value:)();
              if (v76 == 2)
              {
                uint64_t v167 = v77;
                sub_1001AB3E0();
                char v135 = (void *)static OS_dispatch_queue.main.getter();
                sub_10017DF08(&qword_100E6BBD0);
                uint64_t v136 = swift_allocObject();
                *(_OWORD *)(v136 + 16) = v173;
                swift_retain();
                uint64_t v137 = OnlyOnceDeferredPromise.promise.getter();
                uint64_t result = swift_release();
                if (!v137) {
                  goto LABEL_115;
                }
                *(void *)(v136 + 32) = v137;
                swift_retain();
                uint64_t v138 = OnlyOnceDeferredPromise.promise.getter();
                uint64_t result = swift_release();
                if (!v138) {
                  goto LABEL_116;
                }
                *(void *)(v136 + 40) = v138;
                uint64_t v223 = v136;
                specialized Array._endMutation()();
                when<A>(on:_:)();

                swift_bridgeObjectRelease();
                uint64_t v76 = static OS_dispatch_queue.main.getter();
                swift_retain();
                Promise.then<A>(on:closure:)();
                swift_release();
                swift_release();

                swift_release();
                uint64_t v77 = v167;
              }
              sub_100158A74((uint64_t)v216, (void (*)(void))type metadata accessor for EnvironmentAction);
              uint64_t v78 = v208;
              uint64_t v79 = v209;
              sub_1001D17FC();
LABEL_6:
              v75 += v76;
              if (!--v74) {
                return swift_bridgeObjectRelease();
              }
              continue;
            }
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
            return result;
          default:
            uint64_t v166 = *v213;
            uint64_t v134 = *(void *)(v77 + 56) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
            swift_beginAccess();
            if (*(unsigned char *)(v134 + 1) == 2)
            {
              switch(v166)
              {
                case 1:
                  swift_bridgeObjectRelease();
                  goto LABEL_102;
                default:
                  uint64_t v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v76)
                  {
LABEL_102:
                    uint64_t v167 = v77;
                    sub_1001A4584(v200);
                    uint64_t v77 = v167;
                    if ((dispatch thunk of NotificationsOptInManagerType.loweredPermissionsSheetShown()() & 1) == 0)
                    {
                      sub_1001A4584(v200);
                      uint64_t v77 = v167;
                      dispatch thunk of NotificationsOptInManagerType.didShowLoweredPermissionsSheet()();
                      sub_10019FC30();
                      swift_storeEnumTagMultiPayload();
                      sub_1003036A4(v78);
                      sub_100158A74(v78, (void (*)(void))type metadata accessor for NotificationsOptInAction);
                    }
                  }
                  break;
              }
            }
            uint64_t v158 = v187;
            sub_100166440(*(void *)(v77 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v187, (void (*)(void))type metadata accessor for ModalViewState);
            if (sub_10018A854() == 1)
            {
              uint64_t v76 = v201;
              if (v166 == 2)
              {
                swift_retain();
                asyncMain(block:)();
                swift_release();
              }
            }
            else
            {
              sub_100158A74(v158, (void (*)(void))type metadata accessor for ModalViewState);
              sub_1001D17FC();
            }
            swift_retain();
            OnlyOnceDeferredPromise.resolve(_:)();
            swift_release();
LABEL_9:
            uint64_t v80 = (void (*)(void))type metadata accessor for EnvironmentAction;
            uint64_t v81 = v216;
            goto LABEL_5;
        }
      case 5u:
        uint64_t v99 = (uint64_t)v217;
        sub_100164CA0((uint64_t)v71, (uint64_t)v217, (void (*)(void))type metadata accessor for NotificationsOptInAction);
        sub_100166440(v99, v210, (void (*)(void))type metadata accessor for NotificationsOptInAction);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            sub_100158A74((uint64_t)v217, (void (*)(void))type metadata accessor for NotificationsOptInAction);
            (*v179)(v210, v180);
            goto LABEL_6;
          case 3u:
            sub_100158A74((uint64_t)v217, (void (*)(void))type metadata accessor for NotificationsOptInAction);
            goto LABEL_22;
          case 4u:
            sub_100158A74((uint64_t)v217, (void (*)(void))type metadata accessor for NotificationsOptInAction);
            type metadata accessor for Date();
            sub_100162E4C();
            (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v210, v140);
            goto LABEL_6;
          case 8u:
            sub_10017F9EC();
            dispatch thunk of NotificationsOptInManagerType.didDismissResubscriptionTip()();
            goto LABEL_19;
          case 0xBu:
            goto LABEL_92;
          case 0xCu:
            uint64_t v141 = v77;
            uint64_t v167 = *(void *)(v77 + 64);
            uint64_t v142 = (uint64_t)v175;
            sub_100166440(v167 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v175, (void (*)(void))type metadata accessor for ViewState);
            uint64_t v76 = v192;
            if (*(void *)&v174[*(int *)(v192 + 36)] == 1)
            {
              uint64_t v143 = self;
              swift_retain();
              id v144 = [v143 currentDevice];
              [v144 userInterfaceIdiom];

              uint64_t v145 = v184;
              if (*(unsigned char *)(v142 + *(int *)(v76 + 28)) == 1)
              {
                swift_release();
                sub_100158A74(v142, (void (*)(void))type metadata accessor for ViewState);
                goto LABEL_82;
              }
            }
            else
            {
              swift_retain();
              uint64_t v145 = v184;
            }
            sub_100158A74(v142, (void (*)(void))type metadata accessor for ViewState);
            swift_release();
            uint64_t v146 = sub_100188FB0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView);
            uint64_t v147 = v182;
            sub_100166440(v146, v182, (void (*)(void))type metadata accessor for ModalViewState);
            int v148 = sub_10018A854();
            uint64_t v149 = v147;
            uint64_t v76 = v192;
            sub_100158A74(v149, (void (*)(void))type metadata accessor for ModalViewState);
            if (v148 == 6)
            {
              swift_retain();
              asyncMain(block:)();
              swift_release();
            }
LABEL_82:
            uint64_t v150 = sub_100188FB0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
            uint64_t v104 = (uint64_t)v176;
            sub_100166440(v150, (uint64_t)v176, (void (*)(void))type metadata accessor for ViewState);
            sub_100166440(v104 + *(int *)(v76 + 20), (uint64_t)v145, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
            uint64_t v77 = v141;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              sub_100158A74((uint64_t)v145, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
              sub_100185994();
              sub_1001D17FC();
LABEL_84:
              sub_100158A74(v151, (void (*)(void))type metadata accessor for ViewState);
              uint64_t v78 = v208;
              goto LABEL_91;
            }
            uint64_t v104 = *v145;
            BOOL v133 = *(void *)&v171[*(int *)(v76 + 36)] == 1;
            uint64_t v76 = v201;
            if (v133)
            {
              id v152 = [self currentDevice];
              [v152 userInterfaceIdiom];

              if ((v176[*(int *)(v192 + 28)] & 1) == 0)
              {
                swift_release();
                uint64_t v151 = sub_100185994();
                goto LABEL_84;
              }
            }
            sub_100158A74((uint64_t)v176, (void (*)(void))type metadata accessor for ViewState);
            swift_release();
            uint64_t v153 = sub_100188FB0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView);
            uint64_t v154 = v181;
            sub_100166440(v153, v181, (void (*)(void))type metadata accessor for ModalViewState);
            int v155 = sub_10018A854();
            sub_100158A74(v154, (void (*)(void))type metadata accessor for ModalViewState);
            BOOL v133 = v155 == 6;
            uint64_t v104 = (uint64_t)v183;
            uint64_t v78 = v208;
            if (v133)
            {
              sub_1001A312C();
              asyncMain(block:)();
              swift_release();
            }
LABEL_91:
            uint64_t v156 = sub_100188FB0(OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView);
            sub_100166440(v156, v104, (void (*)(void))type metadata accessor for ModalViewState);
            if (sub_10018A854() == 1)
            {
LABEL_92:
              sub_1001A312C();
              asyncMain(block:)();
              swift_release();
LABEL_19:
              uint64_t v80 = (void (*)(void))type metadata accessor for NotificationsOptInAction;
              uint64_t v81 = v217;
            }
            else
            {
              sub_100158A74((uint64_t)v217, (void (*)(void))type metadata accessor for NotificationsOptInAction);
              uint64_t v105 = type metadata accessor for ModalViewState;
LABEL_26:
              uint64_t v80 = (void (*)(void))v105;
              uint64_t v81 = (uint64_t *)v104;
            }
LABEL_5:
            sub_100158A74((uint64_t)v81, v80);
            break;
          case 0xFu:
            sub_10017F9EC();
            dispatch thunk of NotificationsOptInManagerType.resetTappedAllowNotifications()();
            goto LABEL_19;
          default:
            goto LABEL_19;
        }
        goto LABEL_6;
      case 6u:
        sub_100164CA0((uint64_t)v71, v79, (void (*)(void))type metadata accessor for ViewAction);
        sub_100166440(v79, (uint64_t)v214, (void (*)(void))type metadata accessor for ViewAction);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v109 = v194;
            sub_100164CA0((uint64_t)v214, v194, (void (*)(void))type metadata accessor for LocationViewerViewAction);
            sub_100166440(v109, v193, (void (*)(void))type metadata accessor for LocationViewerViewAction);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
                sub_10019E7D8();
                break;
              case 4u:
              case 5u:
              case 6u:
              case 7u:
              case 8u:
              case 9u:
                break;
              default:
                uint64_t v83 = type metadata accessor for LocationViewerViewAction;
                sub_100158A74(v194, (void (*)(void))type metadata accessor for LocationViewerViewAction);
                sub_100158A74(v79, (void (*)(void))type metadata accessor for ViewAction);
                uint64_t v157 = &v223;
                goto LABEL_95;
            }
            uint64_t v107 = type metadata accessor for LocationViewerViewAction;
            uint64_t v108 = (uint64_t *)&v224;
LABEL_38:
            sub_100158A74(*(v108 - 32), (void (*)(void))v107);
            goto LABEL_39;
          case 2u:
          case 6u:
          case 7u:
          case 8u:
          case 9u:
LABEL_39:
            uint64_t v80 = (void (*)(void))type metadata accessor for ViewAction;
            uint64_t v81 = (uint64_t *)v79;
            goto LABEL_5;
          case 3u:
          case 4u:
          case 5u:
            uint64_t v83 = type metadata accessor for ViewAction;
            sub_100158A74(v79, (void (*)(void))type metadata accessor for ViewAction);
            uint64_t v81 = v214;
            goto LABEL_96;
          default:
            uint64_t v106 = v196;
            sub_100164CA0((uint64_t)v214, v196, (void (*)(void))type metadata accessor for ListViewAction);
            sub_100166440(v106, v191, (void (*)(void))type metadata accessor for ListViewAction);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 4u:
              case 5u:
              case 6u:
              case 7u:
              case 8u:
              case 9u:
              case 0xAu:
              case 0xBu:
              case 0xCu:
              case 0xEu:
              case 0xFu:
                goto LABEL_35;
              case 2u:
                uint64_t v83 = type metadata accessor for ListViewAction;
                sub_100158A74(v196, (void (*)(void))type metadata accessor for ListViewAction);
                sub_100158A74(v79, (void (*)(void))type metadata accessor for ViewAction);
                uint64_t v157 = (uint64_t *)&v222;
LABEL_95:
                uint64_t v81 = (uint64_t *)*(v157 - 32);
                goto LABEL_96;
              case 3u:
                sub_10019E7D8();
                goto LABEL_35;
              case 0xDu:
                uint64_t v76 = v200;
                sub_1001A2B38(*(void *)(v200 + 104));
                uint64_t v161 = v186;
                sub_1001851D4(v186);
                dispatch thunk of NotificationsOptInManagerType.didDismissListViewTip()();
                sub_1001A2B38(*(void *)(v76 + 104));
                sub_1001851D4(v161);
                uint64_t v78 = v208;
                char v162 = dispatch thunk of NotificationsOptInManagerType.tipDismissalOverThreshold()();
                uint64_t v163 = (uint64_t)v198;
                *uint64_t v198 = v162 & 1;
                swift_storeEnumTagMultiPayload();
                sub_1001D17FC();
                sub_1003036A4(v164);
                sub_100158A74(v163, (void (*)(void))type metadata accessor for NotificationsOptInAction);
LABEL_35:
                uint64_t v107 = type metadata accessor for ListViewAction;
                uint64_t v108 = &v225;
                goto LABEL_38;
              default:
                sub_100158A74(v196, (void (*)(void))type metadata accessor for ListViewAction);
                sub_100158A74(v79, (void (*)(void))type metadata accessor for ViewAction);
                type metadata accessor for LocationModel();
                sub_100162E4C();
                (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v191, v160);
                goto LABEL_6;
            }
        }
      case 7u:
        uint64_t v100 = (uint64_t)v221;
        sub_100164CA0((uint64_t)v71, (uint64_t)v221, (void (*)(void))type metadata accessor for ModalViewAction);
        uint64_t v101 = v100;
        uint64_t v102 = v215;
        sub_100166440(v101, (uint64_t)v215, (void (*)(void))type metadata accessor for ModalViewAction);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            switch(*(unsigned char *)v215)
            {
              case 3:
                goto LABEL_78;
              case 5:
                sub_10017F9EC();
                dispatch thunk of NotificationsOptInManagerType.didTapAllowLocation()();
                break;
              default:
                goto LABEL_21;
            }
            goto LABEL_21;
          case 2u:
            switch(*(unsigned char *)v215)
            {
              case 1:
                sub_10019E7D8();
                break;
              case 2:
                sub_10017E130();
                dispatch thunk of NotificationsOptInManagerType.didTapAllowLocation()();
                sub_10019FC30();
                goto LABEL_98;
              case 3:
LABEL_78:
                sub_10017E130();
                dispatch thunk of NotificationsOptInManagerType.didTapAllowNotifications()();
                sub_10019FC30();
LABEL_98:
                swift_storeEnumTagMultiPayload();
                uint64_t v79 = v209;
                sub_1003036A4((uint64_t)v102);
                sub_100158A74((uint64_t)v102, (void (*)(void))type metadata accessor for NotificationsOptInAction);
                break;
              default:
                goto LABEL_21;
            }
            goto LABEL_21;
          case 3u:
            sub_100158A74((uint64_t)v221, (void (*)(void))type metadata accessor for ModalViewAction);
            sub_100274F58(*v215);
            goto LABEL_6;
          case 4u:
          case 5u:
          case 6u:
LABEL_21:
            uint64_t v80 = (void (*)(void))type metadata accessor for ModalViewAction;
            uint64_t v81 = v221;
            break;
          default:
            uint64_t v83 = type metadata accessor for ModalViewAction;
            sub_100158A74((uint64_t)v221, (void (*)(void))type metadata accessor for ModalViewAction);
            uint64_t v81 = v215;
LABEL_96:
            uint64_t v80 = (void (*)(void))v83;
            goto LABEL_5;
        }
        goto LABEL_5;
      case 8u:
        uint64_t v84 = (uint64_t)v220;
        sub_100164CA0((uint64_t)v71, (uint64_t)v220, (void (*)(void))type metadata accessor for LocationViewAction);
        sub_100166440(v84, (uint64_t)v212, (void (*)(void))type metadata accessor for LocationViewAction);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_100158A74((uint64_t)v220, (void (*)(void))type metadata accessor for LocationViewAction);
            uint64_t v103 = sub_10017DF08(&qword_100E66458);
            uint64_t v104 = (uint64_t)v212;
            sub_100178160((uint64_t)v212 + *(int *)(v103 + 64), (uint64_t *)&unk_100E73CA0);
            uint64_t v105 = type metadata accessor for LocationComponentAction;
            goto LABEL_26;
          case 2u:
            sub_100158A74((uint64_t)v220, (void (*)(void))type metadata accessor for LocationViewAction);
            uint64_t v80 = (void (*)(void))type metadata accessor for LocationFooterAction;
            uint64_t v81 = v212;
            goto LABEL_5;
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_14;
          default:
            uint64_t v85 = sub_100186888();
            uint64_t v167 = v77;
            uint64_t v86 = v180;
            v87(v85, v212, v180);
            uint64_t v88 = *(void *)(v200 + 96);
            uint64_t v166 = v66;
            uint64_t v89 = v186;
            sub_1001B1E64(v186, v88);
            dispatch thunk of NotificationsOptInManagerType.didDismissTip(for:)();
            uint64_t v165 = *(int *)(sub_10017DF08(&qword_100E6BBD8) + 48);
            uint64_t v90 = (uint64_t)v198;
            (*v177)(v198, v202, v86);
            uint64_t v91 = v89;
            uint64_t v66 = v166;
            sub_1001851D4(v91);
            *(unsigned char *)(v90 + v165) = dispatch thunk of NotificationsOptInManagerType.tipDismissalOverThreshold()() & 1;
            uint64_t v76 = v208;
            uint64_t v92 = v167;
            swift_storeEnumTagMultiPayload();
            sub_1003036A4(v90);
            uint64_t v79 = v209;
            sub_1001D17FC();
            sub_100158A74(v93, v94);
            uint64_t v95 = sub_100186888();
            uint64_t v96 = v86;
            uint64_t v77 = v92;
            uint64_t v78 = v76;
            v97(v95, v96);
LABEL_14:
            uint64_t v80 = (void (*)(void))type metadata accessor for LocationViewAction;
            uint64_t v81 = v220;
            break;
        }
        goto LABEL_5;
      case 9u:
        uint64_t v98 = v218;
        sub_100164CA0((uint64_t)v71, v218, (void (*)(void))type metadata accessor for WeatherDataAction);
        sub_100166440(v98, (uint64_t)v219, (void (*)(void))type metadata accessor for WeatherDataAction);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            sub_100158A74(v218, (void (*)(void))type metadata accessor for WeatherDataAction);
            uint64_t v110 = v219[2];
            uint64_t v111 = v78;
            unint64_t v112 = v219[3];
            uint64_t v76 = v219[5];
            swift_bridgeObjectRelease();
            unint64_t v113 = v112;
            uint64_t v78 = v111;
            sub_100303D6C(v110, v113);
            sub_1001D17FC();
            goto LABEL_22;
          case 3u:
          case 9u:
            sub_100158A74(v218, (void (*)(void))type metadata accessor for WeatherDataAction);
            swift_bridgeObjectRelease();
            goto LABEL_22;
          case 4u:
            uint64_t v119 = v78;
            uint64_t v120 = v219;
            uint64_t v121 = v219[1];
            sub_1001A2B38(*v219);
            uint64_t v122 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v123 = (uint64_t)v120 + v122[12];
            uint64_t v124 = v77;
            uint64_t v125 = (char *)v120 + v122[16];
            sub_100158A74((uint64_t)v120 + v122[20], (void (*)(void))type metadata accessor for NewsDataModel);
            uint64_t v126 = (uint64_t)v125;
            uint64_t v78 = v119;
            uint64_t v77 = v124;
            sub_100158A74(v126, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            sub_100158A74(v123, (void (*)(void))type metadata accessor for WeatherData);
            goto LABEL_45;
          case 5u:
            sub_100158A74(v218, (void (*)(void))type metadata accessor for WeatherDataAction);
            uint64_t v114 = v219;
            swift_bridgeObjectRelease();
            uint64_t v81 = (uint64_t *)((char *)v114 + *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48));
            uint64_t v80 = (void (*)(void))type metadata accessor for NewsDataModel;
            goto LABEL_5;
          case 6u:
            char v127 = v219;
            uint64_t v121 = v219[1];
            sub_1001A2B38(*v219);
            uint64_t v128 = (char *)v127 + *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            type metadata accessor for AvailableDataSets();
            sub_100162E4C();
            (*(void (**)(char *))(v129 + 8))(v128);
LABEL_45:
            uint64_t v76 = v195;
            sub_100166440(*(void *)(v77 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v78, (void (*)(void))type metadata accessor for LocationsState);
            sub_10013B3F0(v78, v76);
            sub_100158A74(v78, (void (*)(void))type metadata accessor for LocationsState);
            uint64_t v130 = type metadata accessor for CurrentLocation();
            if (_s7Weather24LocationCompositionStateOwet_0(v76, 1, v130) == 1)
            {
              sub_100178160(v76, (uint64_t *)&unk_100EADD50);
              swift_bridgeObjectRelease();
              goto LABEL_77;
            }
            uint64_t v77 = CurrentLocation.id.getter();
            uint64_t v132 = v131;
            sub_100158A74(v76, (void (*)(void))&type metadata accessor for CurrentLocation);
            BOOL v133 = v167 == v77 && v121 == v132;
            if (v133)
            {
              swift_bridgeObjectRelease_n();
              sub_100182948();
            }
            else
            {
              uint64_t v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_100182948();
              if ((v76 & 1) == 0) {
                goto LABEL_77;
              }
            }
            swift_retain();
            OnlyOnceDeferredPromise.resolve(_:)();
            swift_release();
LABEL_77:
            sub_100158A74(v218, (void (*)(void))type metadata accessor for WeatherDataAction);
            sub_1001D17FC();
            uint64_t v79 = v209;
            break;
          case 8u:
            sub_100158A74(v218, (void (*)(void))type metadata accessor for WeatherDataAction);
            uint64_t v115 = v219;
            swift_bridgeObjectRelease();
            uint64_t v116 = (char *)v115 + *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            type metadata accessor for WeatherStatisticsModel();
            sub_100162E4C();
            (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v118);
            goto LABEL_6;
          default:
            sub_100158A74(v218, (void (*)(void))type metadata accessor for WeatherDataAction);
            goto LABEL_22;
        }
        goto LABEL_6;
      case 0x10u:
LABEL_22:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      default:
        goto LABEL_6;
    }
  }
}

uint64_t type metadata accessor for ListViewAction()
{
  uint64_t result = qword_100E7E348;
  if (!qword_100E7E348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10010DC44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v61 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v4 - 8);
  uint64_t v66 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v6 = __chkstk_darwin(v65);
  uint64_t v63 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v64 = (uint64_t)&v60 - v8;
  uint64_t v9 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v13 = __chkstk_darwin(active - 8);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v60 - v17;
  __chkstk_darwin(v16);
  uint64_t v68 = (uint64_t)&v60 - v19;
  uint64_t v20 = (int *)type metadata accessor for ViewState(0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v67 = a1;
  uint64_t v26 = *(void *)(a1 + 64);
  sub_100166440(v26 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)&v60 - v24, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v27 = *(void *)&v25[v20[9] + 8];
  uint64_t result = sub_100158A74((uint64_t)v25, (void (*)(void))type metadata accessor for ViewState);
  if (v27 == 1) {
    return result;
  }
  uint64_t v29 = v26 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
  uint64_t result = type metadata accessor for NotificationsOptInState();
  if (*(unsigned char *)(v29 + *(int *)(result + 48))) {
    return result;
  }
  sub_100166440(v26 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v23, (void (*)(void))type metadata accessor for ViewState);
  sub_100166440((uint64_t)&v23[v20[5]], (uint64_t)v11, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100158A74((uint64_t)v11, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_5:
    uint64_t v30 = (void (*)(void))type metadata accessor for ViewState;
    uint64_t v31 = (uint64_t)v23;
    return sub_100158A74(v31, v30);
  }
  uint64_t v32 = *v11;
  if (*(void *)&v23[v20[9] + 8] == 1)
  {
    id v33 = [self currentDevice];
    [v33 userInterfaceIdiom];

    if ((v23[v20[7]] & 1) == 0)
    {
      swift_release();
      goto LABEL_5;
    }
  }
  sub_100158A74((uint64_t)v23, (void (*)(void))type metadata accessor for ViewState);
  sub_100166440(v32 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v18, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  swift_release();
  uint64_t v34 = v68;
  sub_100164CA0((uint64_t)v18, v68, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v35 = type metadata accessor for Location.Identifier();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v35);
  char v36 = sub_10011CB88(v34, (uint64_t)v15);
  sub_100158A74((uint64_t)v15, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  if (v36) {
    goto LABEL_29;
  }
  uint64_t v37 = v67;
  uint64_t v38 = *(void *)(*(void *)(v67 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1001782AC();
  uint64_t v40 = (uint64_t)v66;
  sub_1001BBE9C(v39, v41, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, v65) == 1)
  {
    sub_100158A74(v34, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    return sub_100178160(v40, &qword_100E63770);
  }
  uint64_t v42 = v64;
  sub_100164CA0(v40, v64, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v43 = v63;
  sub_100166440(v42, v63, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100158A74(v42, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_100158A74(v34, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    uint64_t v31 = v43;
    uint64_t v30 = (void (*)(void))type metadata accessor for LocationWeatherDataState;
    return sub_100158A74(v31, v30);
  }
  uint64_t v44 = sub_10017DF08(&qword_100E63748);
  uint64_t v45 = v43 + *(int *)(v44 + 48);
  uint64_t v46 = v43 + *(int *)(v44 + 64);
  uint64_t v47 = v61;
  sub_100164CA0(v43, v61, (void (*)(void))type metadata accessor for WeatherData);
  sub_100158A74(v46, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_100158A74(v45, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  uint64_t v48 = *(void *)(v37 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  LOBYTE(v48) = *(unsigned char *)(v48 + 2) == 4;
  uint64_t v49 = v62;
  sub_1001B1E64((void *)(v62 + 32), *(void *)(v62 + 56));
  uint64_t v50 = sub_10005DF64(v47, v48);
  uint64_t v51 = v50;
  if (*(void *)(v52 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v53 = 2;
    goto LABEL_28;
  }
  if (!v50[2]
    || (Hasher.init(_seed:)(),
        String.hash(into:)(),
        Swift::Int v54 = Hasher._finalize()(),
        uint64_t v55 = -1 << *((unsigned char *)v51 + 32),
        unint64_t v56 = v54 & ~v55,
        ((*(void *)((char *)v51 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v56) & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v53 = 1;
    goto LABEL_28;
  }
  uint64_t v57 = ~v55;
  while (2)
  {
    switch(*(unsigned char *)(v51[6] + v56))
    {
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      default:
        char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v58 & 1) == 0)
        {
          unint64_t v56 = (v56 + 1) & v57;
          if (((*(void *)((char *)v51 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v56) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v53 = 1;
            goto LABEL_27;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_26:
        swift_bridgeObjectRelease();
        char v53 = 2;
LABEL_27:
        uint64_t v34 = v68;
LABEL_28:
        uint64_t v59 = swift_allocObject();
        *(void *)(v59 + 16) = v49;
        *(unsigned char *)(v59 + 24) = v53;
        swift_retain();
        asyncMain(block:)();
        swift_release();
        sub_100158A74(v47, (void (*)(void))type metadata accessor for WeatherData);
        sub_100158A74(v42, (void (*)(void))type metadata accessor for LocationWeatherDataState);
LABEL_29:
        uint64_t v30 = (void (*)(void))type metadata accessor for LocationViewerActiveLocationState;
        uint64_t v31 = v34;
        return sub_100158A74(v31, v30);
    }
  }
}

uint64_t sub_10010E58C(uint64_t a1)
{
  uint64_t v40 = type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v34 - v6;
  uint64_t v8 = type metadata accessor for LocationsAction();
  sub_100162E4C();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v41 = (uint64_t)&v34 - v13;
  uint64_t v14 = type metadata accessor for MainAction();
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(result + 16);
  if (v19)
  {
    uint64_t v37 = a1;
    uint64_t v38 = result;
    uint64_t v20 = result + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v21 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain();
    uint64_t v39 = v7;
    while (2)
    {
      sub_10016698C(v20, (uint64_t)v17, (void (*)(void))type metadata accessor for MainAction);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xDu:
        case 0xEu:
        case 0x11u:
          uint64_t v22 = type metadata accessor for MainAction;
          uint64_t v23 = (uint64_t)v17;
          goto LABEL_5;
        case 2u:
          sub_100117050((uint64_t)v17, (uint64_t)v7, (void (*)(void))type metadata accessor for EnvironmentAction);
          sub_10016698C((uint64_t)v7, (uint64_t)v5, (void (*)(void))type metadata accessor for EnvironmentAction);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              if ((v5[1] & 1) != 0 || *v5 == 4) {
                goto LABEL_12;
              }
              char v33 = 0;
LABEL_33:
              sub_1001170B0(v33);
LABEL_12:
              uint64_t v22 = type metadata accessor for EnvironmentAction;
              uint64_t v23 = (uint64_t)v7;
              break;
            case 2u:
            case 3u:
            case 0xBu:
              uint64_t v36 = v8;
              sub_1001592F0((uint64_t)v7, (void (*)(void))type metadata accessor for EnvironmentAction);
              uint64_t v23 = (uint64_t)v5;
              uint64_t v22 = type metadata accessor for EnvironmentAction;
              uint64_t v8 = v36;
              break;
            case 4u:
              swift_bridgeObjectRelease();
              char v33 = 1;
              goto LABEL_33;
            case 9u:
              sub_1001592F0((uint64_t)v7, (void (*)(void))type metadata accessor for EnvironmentAction);
              sub_1001EB5EC(*(void *)v5, *((void *)v5 + 1));
              goto LABEL_6;
            default:
              goto LABEL_12;
          }
LABEL_5:
          sub_1001592F0(v23, (void (*)(void))v22);
          goto LABEL_6;
        case 3u:
          uint64_t v24 = v5;
          uint64_t v25 = (uint64_t)v12;
          uint64_t v26 = v8;
          uint64_t v27 = v41;
          sub_100117050((uint64_t)v17, v41, (void (*)(void))type metadata accessor for LocationsAction);
          uint64_t v28 = v27;
          uint64_t v8 = v26;
          uint64_t v12 = (char *)v25;
          sub_10016698C(v28, v25, (void (*)(void))type metadata accessor for LocationsAction);
          uint64_t v5 = v24;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_1001170B0(0);
              sub_1001592F0(v41, (void (*)(void))type metadata accessor for LocationsAction);
              type metadata accessor for Location();
              sub_100162E4C();
              (*(void (**)(char *))(v31 + 8))(v12);
              break;
            case 2u:
              uint64_t v35 = v24;
              uint64_t v36 = v8;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              type metadata accessor for LocationsState();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              char v32 = static SavedLocation.areListsEqual(_:_:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v32 & 1) == 0) {
                sub_1001170B0(0);
              }
              sub_1001592F0(v41, (void (*)(void))type metadata accessor for LocationsAction);
              uint64_t v5 = v35;
              uint64_t v8 = v36;
              break;
            case 3u:
            case 4u:
              uint64_t v29 = type metadata accessor for LocationsAction;
              uint64_t v30 = v41;
              goto LABEL_20;
            case 5u:
              sub_1001592F0(v41, (void (*)(void))type metadata accessor for LocationsAction);
              swift_bridgeObjectRelease();
              break;
            case 6u:
              sub_1001592F0(v41, (void (*)(void))type metadata accessor for LocationsAction);
              sub_10015303C(*(void *)v12, *((void *)v12 + 1), v12[16]);
              break;
            default:
              sub_1001592F0(v41, (void (*)(void))type metadata accessor for LocationsAction);
              uint64_t v29 = (uint64_t (*)())&type metadata accessor for CurrentLocation;
              uint64_t v30 = (uint64_t)v12;
LABEL_20:
              sub_1001592F0(v30, (void (*)(void))v29);
              break;
          }
          uint64_t v7 = v39;
          goto LABEL_6;
        case 0xCu:
        case 0xFu:
        case 0x12u:
          goto LABEL_6;
        case 0x10u:
          swift_bridgeObjectRelease();
          goto LABEL_6;
        case 0x13u:
          goto LABEL_17;
        default:
          if (*v17)
          {
            if (*v17 != 1) {
              goto LABEL_6;
            }
          }
          else
          {
            sub_10004E53C();
          }
LABEL_17:
          sub_1001170B0(0);
LABEL_6:
          v20 += v21;
          if (--v19) {
            continue;
          }
          uint64_t result = swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_10010EB5C(void *a1)
{
  if (sub_10010EBB8())
  {
    return sub_10010EC80(a1);
  }
  else
  {
    return sub_100985ADC(a1);
  }
}

uint64_t sub_10010EBB8()
{
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 2) {
    return v1 & 1;
  }
  static Settings.SavedLocations.useCoherence.getter();
  sub_100128E6C(&qword_100EA4648, v2, (void (*)(uint64_t))type metadata accessor for SavedLocationsStoreObserver);
  Configurable.setting<A>(_:)();
  swift_release();
  uint64_t result = v4;
  *(unsigned char *)(v0 + 112) = v4;
  return result;
}

uint64_t sub_10010EC80(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v2 - 8);
  unsigned __int8 v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for Location();
  uint64_t v5 = *(void *)(v53 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v53);
  uint64_t v46 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v52 = (char *)v41 - v8;
  uint64_t v9 = type metadata accessor for LocationsAction();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v41 - v13;
  uint64_t v15 = type metadata accessor for MainAction();
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v54 = a1;
  uint64_t v19 = a1[5];
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v45 = v4;
    uint64_t v55 = (void *)(v60 + 72);
    uint64_t v21 = v19 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v22 = *(void *)(v16 + 72);
    uint64_t v51 = v5 + 32;
    uint64_t v44 = v5 + 16;
    uint64_t v43 = v6 + 7;
    uint64_t v23 = v22;
    uint64_t v42 = (void (**)(char *, uint64_t))(v5 + 8);
    v41[0] = v19;
    swift_bridgeObjectRetain();
    v41[2] = (char *)&type metadata for () + 8;
    uint64_t v56 = v5;
    uint64_t v57 = v15;
    char v58 = v14;
    uint64_t v59 = v23;
    v41[1] = v9;
    do
    {
      sub_100166724(v21, (uint64_t)v18, (void (*)(void))type metadata accessor for MainAction);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_10017481C((uint64_t)v18, (uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
        sub_100166724((uint64_t)v14, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationsAction);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            int v49 = v12[*(int *)(sub_10017DF08(&qword_100E6F628) + 48)];
            unint64_t v50 = *(void *)(v5 + 32);
            uint64_t v26 = v52;
            uint64_t v27 = v53;
            ((void (*)(char *, char *, uint64_t))v50)(v52, v12, v53);
            uint64_t v48 = type metadata accessor for TaskPriority();
            uint64_t v28 = (uint64_t)v45;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 1, 1, v48);
            uint64_t v29 = v46;
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v46, v26, v27);
            sub_10006DF38((uint64_t)v54, (uint64_t)__src, &qword_100E647A8);
            unint64_t v30 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
            unint64_t v31 = (v43 + v30) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v32 = swift_allocObject();
            *(void *)(v32 + 16) = 0;
            uint64_t v47 = (void *)(v32 + 16);
            *(void *)(v32 + 24) = 0;
            *(unsigned char *)(v32 + 32) = v49;
            *(void *)(v32 + 40) = v60;
            uint64_t v33 = v27;
            uint64_t v34 = v48;
            ((void (*)(unint64_t, char *, uint64_t))v50)(v32 + v30, v29, v33);
            memcpy((void *)(v32 + v31), __src, 0x48uLL);
            LODWORD(v31) = _s7Weather24LocationCompositionStateOwet_0(v28, 1, v34);
            swift_retain();
            if (v31 == 1)
            {
              sub_100178160(v28, &qword_100E634B0);
              unint64_t v50 = 0;
            }
            else
            {
              unsigned __int8 v35 = TaskPriority.rawValue.getter();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v28, v34);
              unint64_t v50 = v35;
            }
            if (*v47)
            {
              swift_getObjectType();
              swift_unknownObjectRetain();
              uint64_t v36 = dispatch thunk of Actor.unownedExecutor.getter();
              uint64_t v38 = v37;
              swift_unknownObjectRelease();
            }
            else
            {
              uint64_t v36 = 0;
              uint64_t v38 = 0;
            }
            uint64_t v23 = v59;
            uint64_t v39 = swift_allocObject();
            *(void *)(v39 + 16) = &unk_100EA4640;
            *(void *)(v39 + 24) = v32;
            if (v38 | v36)
            {
              uint64_t v61 = 0;
              uint64_t v62 = 0;
              uint64_t v63 = v36;
              uint64_t v64 = v38;
            }
            uint64_t v5 = v56;
            swift_task_create();
            swift_release();
            (*v42)(v52, v53);
            uint64_t v24 = type metadata accessor for LocationsAction;
            uint64_t v14 = v58;
            goto LABEL_23;
          case 2u:
            sub_100159038((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
            swift_bridgeObjectRelease();
            uint64_t v23 = v59;
            swift_bridgeObjectRelease();
            goto LABEL_25;
          case 3u:
            sub_1001B1E64(v55, *(void *)(v60 + 96));
            uint64_t v14 = v58;
            uint64_t v5 = v56;
            dispatch thunk of SavedLocationsManagerType.moveLocation(from:to:)();
            goto LABEL_12;
          case 4u:
            sub_1001B1E64(v55, *(void *)(v60 + 96));
            uint64_t v14 = v58;
            dispatch thunk of SavedLocationsManagerType.removeLocation(at:)();
LABEL_12:
            uint64_t v23 = v59;
            goto LABEL_14;
          case 5u:
            swift_bridgeObjectRelease();
            sub_1001B1E64(v55, *(void *)(v60 + 96));
            type metadata accessor for LocationsState();
            swift_bridgeObjectRetain();
            uint64_t v14 = v58;
            dispatch thunk of SavedLocationsManagerType.updateSavedLocationTimeZones(_:)();
            uint64_t v23 = v59;
            uint64_t v5 = v56;
            swift_bridgeObjectRelease();
LABEL_14:
            uint64_t v24 = type metadata accessor for LocationsAction;
LABEL_23:
            uint64_t v25 = (uint64_t)v14;
            goto LABEL_24;
          case 6u:
            sub_100159038((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
            sub_10015303C(*(void *)v12, *((void *)v12 + 1), v12[16]);
            goto LABEL_25;
          default:
            sub_100159038((uint64_t)v14, (void (*)(void))type metadata accessor for LocationsAction);
            uint64_t v24 = (uint64_t (*)())&type metadata accessor for CurrentLocation;
            uint64_t v25 = (uint64_t)v12;
            goto LABEL_24;
        }
      }
      uint64_t v24 = type metadata accessor for MainAction;
      uint64_t v25 = (uint64_t)v18;
LABEL_24:
      sub_100159038(v25, (void (*)(void))v24);
LABEL_25:
      v21 += v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
  return sub_10010F4BC(v54);
}

uint64_t sub_10010F4BC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SavedLocation();
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v79 = (uint64_t)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = v6;
  __chkstk_darwin(v5);
  uint64_t v88 = (uint64_t)v65 - v7;
  uint64_t v85 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v84 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v82 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v12 - 8);
  uint64_t v72 = (uint64_t)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for LocationsState();
  __chkstk_darwin(v86);
  uint64_t v70 = (uint64_t)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for CurrentLocation();
  uint64_t v66 = *(void *)(v71 - 8);
  uint64_t v15 = __chkstk_darwin(v71);
  uint64_t v68 = (uint64_t)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v16;
  __chkstk_darwin(v15);
  uint64_t v69 = (uint64_t)v65 - v17;
  uint64_t v18 = type metadata accessor for MainAction();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (void *)((char *)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for ViewState(0);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100166724(a1[8] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v25, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v26 = *(void *)&v25[*(int *)(v23 + 44) + 8];
  uint64_t result = sub_100159038((uint64_t)v25, (void (*)(void))type metadata accessor for ViewState);
  if (v26 != 1)
  {
    uint64_t result = a1[5];
    uint64_t v28 = *(void *)(result + 16);
    if (v28)
    {
      uint64_t v29 = result + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      uint64_t v74 = &v91;
      uint64_t v77 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v78 = (void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v30 = *(void *)(v19 + 72);
      v65[1] = result;
      swift_bridgeObjectRetain();
      uint64_t v76 = a1;
      uint64_t v75 = v18;
      uint64_t v73 = v30;
      unint64_t v31 = v84;
      while (1)
      {
        sub_100166724(v29, (uint64_t)v21, (void (*)(void))type metadata accessor for MainAction);
        if (swift_getEnumCaseMultiPayload() != 3) {
          break;
        }
        type metadata accessor for LocationsAction();
        if (swift_getEnumCaseMultiPayload() != 4)
        {
          uint64_t v52 = type metadata accessor for LocationsAction;
          goto LABEL_15;
        }
        uint64_t v32 = *v21;
        uint64_t result = sub_100986468((uint64_t)a1, *v21);
        if ((result & 1) == 0) {
          return swift_bridgeObjectRelease();
        }
        uint64_t v33 = *(int *)(v86 + 20);
        uint64_t v34 = *(void *)(*(void *)(a1[7] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + v33) + 16)
            - 1;
        uint64_t v35 = a1[8] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
        uint64_t v36 = *(void *)(v35 + v33);
        unint64_t v37 = *(void *)(v36 + 16);
        unint64_t v38 = v37 - 1;
        if (v32 != v34) {
          unint64_t v38 = v32;
        }
        if (!v37)
        {
          swift_bridgeObjectRelease();
          uint64_t v53 = v35;
          uint64_t v54 = v70;
          sub_100166724(v53, v70, (void (*)(void))type metadata accessor for LocationsState);
          uint64_t v55 = v72;
          sub_10006DF38(v54, v72, (uint64_t *)&unk_100EADD50);
          sub_100159038(v54, (void (*)(void))type metadata accessor for LocationsState);
          if (_s7Weather24LocationCompositionStateOwet_0(v55, 1, v71) == 1) {
            return sub_100178160(v55, (uint64_t *)&unk_100EADD50);
          }
          uint64_t v56 = v69;
          sub_10017481C(v55, v69, (void (*)(void))&type metadata accessor for CurrentLocation);
          sub_1001AB3E0();
          uint64_t v57 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v58 = v68;
          sub_100166724(v56, v68, (void (*)(void))&type metadata accessor for CurrentLocation);
          unint64_t v59 = (*(unsigned __int8 *)(v66 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
          uint64_t v60 = swift_allocObject();
          *(void *)(v60 + 16) = v2;
          sub_10017481C(v58, v60 + v59, (void (*)(void))&type metadata accessor for CurrentLocation);
          uint64_t v93 = sub_100986F7C;
          uint64_t v94 = v60;
          aBlock = _NSConcreteStackBlock;
          uint64_t v90 = 1107296256;
          uint64_t v91 = sub_10010A4D4;
          uint64_t v92 = &unk_100E307E0;
          uint64_t v61 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          uint64_t v62 = v82;
          static DispatchQoS.unspecified.getter();
          aBlock = (void **)&_swiftEmptyArrayStorage;
          sub_100128E6C((unint64_t *)&qword_100EA0200, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_10017DF08(&qword_100E75530);
          sub_100115EDC();
          uint64_t v64 = v84;
          uint64_t v63 = v85;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v61);

          (*v77)(v64, v63);
          (*v78)(v62, v83);
          return sub_100159038(v56, (void (*)(void))&type metadata accessor for CurrentLocation);
        }
        if ((v38 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_23:
          __break(1u);
          return result;
        }
        if (v38 >= v37) {
          goto LABEL_23;
        }
        uint64_t v39 = *(unsigned __int8 *)(v81 + 80);
        uint64_t v40 = v88;
        sub_100166724(v36 + ((v39 + 32) & ~v39) + *(void *)(v81 + 72) * v38, v88, (void (*)(void))&type metadata accessor for SavedLocation);
        sub_1001AB3E0();
        uint64_t v87 = static OS_dispatch_queue.main.getter();
        uint64_t v41 = v79;
        sub_100166724(v40, v79, (void (*)(void))&type metadata accessor for SavedLocation);
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = v2;
        sub_10017481C(v41, v42 + ((v39 + 24) & ~v39), (void (*)(void))&type metadata accessor for SavedLocation);
        uint64_t v93 = sub_100986E4C;
        uint64_t v94 = v42;
        aBlock = _NSConcreteStackBlock;
        uint64_t v90 = 1107296256;
        uint64_t v91 = sub_10010A4D4;
        uint64_t v92 = &unk_100E30790;
        uint64_t v43 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t v44 = v82;
        static DispatchQoS.unspecified.getter();
        aBlock = (void **)&_swiftEmptyArrayStorage;
        sub_100128E6C((unint64_t *)&qword_100EA0200, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_100115EDC();
        uint64_t v45 = v2;
        uint64_t v46 = v85;
        uint64_t v30 = v73;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v47 = (void *)v87;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        uint64_t v48 = v43;
        a1 = v76;
        _Block_release(v48);

        uint64_t v49 = v46;
        uint64_t v2 = v45;
        (*v77)(v31, v49);
        (*v78)(v44, v83);
        unint64_t v50 = &type metadata accessor for SavedLocation;
        uint64_t v51 = v88;
LABEL_16:
        sub_100159038(v51, (void (*)(void))v50);
        v29 += v30;
        if (!--v28) {
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v52 = type metadata accessor for MainAction;
LABEL_15:
      unint64_t v50 = (uint64_t (**)(void))v52;
      uint64_t v51 = (uint64_t)v21;
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_10010FF94(uint64_t a1)
{
  uint64_t v145 = *v1;
  uint64_t v149 = sub_10017DF08(&qword_100E6DD18);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v147 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v146 = v7;
  sub_1001626D4();
  __chkstk_darwin(v8);
  uint64_t v150 = (uint64_t)v130 - v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  uint64_t v154 = (char *)v130 - v11;
  uint64_t v134 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v133 = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v132 = v14;
  uint64_t v140 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v139 = v15;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v137 = v17;
  uint64_t v138 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v136 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v135 = v20;
  uint64_t v131 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  v130[4] = v21;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v144 = type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  uint64_t v143 = v23;
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v142 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E63770);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100162EF8();
  uint64_t v148 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  unint64_t v31 = (char *)v130 - v30;
  uint64_t v32 = sub_10017DF08(&qword_100E63850);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100162EF8();
  uint64_t v152 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  unint64_t v37 = (char *)v130 - v36;
  type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v156 = v39;
  uint64_t v157 = v38;
  uint64_t v41 = *(void *)(v40 + 64);
  uint64_t v42 = __chkstk_darwin(v38);
  uint64_t v141 = (char *)v130 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  int v155 = (char *)v130 - v43;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v45 = sub_100109308(active);
  __chkstk_darwin(v45);
  sub_1001626E0();
  uint64_t v48 = v47 - v46;
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v49);
  sub_1001626E0();
  uint64_t v52 = (uint64_t *)(v51 - v50);
  uint64_t v53 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v54);
  sub_1001626E0();
  uint64_t v57 = v56 - v55;
  uint64_t v153 = a1;
  sub_100113908(*(void *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v56 - v55, (void (*)(void))type metadata accessor for ViewState);
  sub_100113908(v57 + v53[5], (uint64_t)v52, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011E460((uint64_t)v52, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    return sub_10011E460(v57, (void (*)(void))type metadata accessor for ViewState);
  }
  uint64_t v59 = *v52;
  if (*(void *)(v57 + v53[9] + 8) == 1)
  {
    id v60 = [self currentDevice];
    [v60 userInterfaceIdiom];

    if ((*(unsigned char *)(v57 + v53[7]) & 1) == 0)
    {
      swift_release();
      return sub_10011E460(v57, (void (*)(void))type metadata accessor for ViewState);
    }
  }
  sub_10011E460(v57, (void (*)(void))type metadata accessor for ViewState);
  sub_100113908(v59 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v48, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v61 = v157;
  sub_10012B520(v48, 1, v157);
  if (v68) {
    return swift_release();
  }
  v130[1] = v59;
  uint64_t v62 = v155;
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 32);
  void v130[3] = v156 + 32;
  v130[2] = (uint64_t)v63;
  v63(v155, v48, v61);
  uint64_t v64 = v153;
  uint64_t v65 = *(void *)(*(void *)(v153 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v66 = Location.Identifier.id.getter();
  sub_1001BBE9C(v66, v67, v65);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v130[0] = type metadata accessor for LocationWeatherDataState(0);
  sub_10012B520((uint64_t)v31, 1, v130[0]);
  if (v68)
  {
    sub_100178110((uint64_t)v31, &qword_100E63770);
    uint64_t v70 = v151;
    uint64_t v69 = v152;
LABEL_16:
    uint64_t v73 = v147;
    uint64_t v74 = v157;
    goto LABEL_23;
  }
  sub_1001177B0((uint64_t)v37);
  sub_10011E460((uint64_t)v31, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v71 = type metadata accessor for WeatherData(0);
  sub_10012B520((uint64_t)v37, 1, v71);
  uint64_t v69 = v152;
  if (v72)
  {
    sub_100178110((uint64_t)v37, &qword_100E63850);
    uint64_t v70 = v151;
    goto LABEL_16;
  }
  uint64_t v75 = sub_10019F534();
  v76(v75);
  sub_10011E460((uint64_t)v37, (void (*)(void))type metadata accessor for WeatherData);
  WeatherDataModel.hourlyForecast.getter();
  (*(void (**)(uint64_t, uint64_t *))(v65 + 8))(v71, &OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v77 = v131;
  uint64_t v78 = Forecast.forecast.getter();
  sub_100162F0C();
  v79();
  uint64_t v70 = v151;
  swift_bridgeObjectRetain();
  uint64_t v80 = sub_10001AADC();
  if (!v80)
  {
    swift_bridgeObjectRelease();
    uint64_t v73 = v147;
    goto LABEL_21;
  }
  uint64_t v77 = v80;
  swift_bridgeObjectRetain();
  sub_100BD9E48();
  char v82 = v81;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v73 = v147;
  if ((v82 & 1) == 0)
  {
LABEL_21:
    sub_1001AB3E0();
    uint64_t v147 = static OS_dispatch_queue.main.getter();
    uint64_t v83 = swift_allocObject();
    swift_weakInit();
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = v83;
    *(void *)(v84 + 24) = v78;
    char v162 = sub_10094FC8C;
    uint64_t v163 = v84;
    aBlock = _NSConcreteStackBlock;
    uint64_t v159 = 1107296256;
    uint64_t v160 = sub_10010A4D4;
    uint64_t v161 = &unk_100E2FCA0;
    uint64_t v85 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v86 = v135;
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)&_swiftEmptyArrayStorage;
    sub_1001110D8((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_100115EDC();
    sub_10017EBC0();
    sub_100163B0C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v87 = (void *)v147;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v85);

    uint64_t v69 = v152;
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v77, v70);
    uint64_t v88 = v86;
    uint64_t v64 = v153;
    (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v88, v138);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v74 = v157;
LABEL_23:
  uint64_t v89 = *(void *)(*(void *)(v64 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v90 = Location.Identifier.id.getter();
  uint64_t v91 = v148;
  sub_1001BBE9C(v90, v92, v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10012B520(v91, 1, v130[0]);
  uint64_t v93 = v156;
  if (v68)
  {
    sub_100178110(v91, &qword_100E63770);
    uint64_t v94 = (uint64_t)v154;
    goto LABEL_34;
  }
  uint64_t v95 = v91;
  sub_1001177B0(v69);
  sub_10011E460(v91, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v96 = type metadata accessor for WeatherData(0);
  sub_10012B520(v69, 1, v96);
  uint64_t v94 = (uint64_t)v154;
  if (v97)
  {
    sub_100178110(v69, &qword_100E63850);
    goto LABEL_34;
  }
  uint64_t v98 = sub_10019F534();
  v99(v98);
  sub_10011E460(v69, (void (*)(void))type metadata accessor for WeatherData);
  WeatherDataModel.dailyForecast.getter();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v95, v96);
  uint64_t v100 = Forecast.forecast.getter();
  sub_100162F0C();
  v101();
  swift_bridgeObjectRetain();
  if (sub_10001F2E0())
  {
    swift_bridgeObjectRetain();
    sub_100BDD5F4();
    char v103 = v102;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v103)
    {
      swift_bridgeObjectRelease();
      uint64_t v74 = v157;
      goto LABEL_34;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1001AB3E0();
  uint64_t v153 = static OS_dispatch_queue.main.getter();
  uint64_t v104 = swift_allocObject();
  swift_weakInit();
  uint64_t v105 = v156 + 16;
  uint64_t v106 = v62;
  uint64_t v107 = v157;
  (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v141, v106, v157);
  unint64_t v108 = (v41 + ((*(unsigned __int8 *)(v105 + 64) + 24) & ~(unint64_t)*(unsigned __int8 *)(v105 + 64)) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v109 = swift_allocObject();
  *(void *)(v109 + 16) = v104;
  uint64_t v93 = v156;
  sub_100180854();
  v110();
  *(void *)(v109 + v108) = v100;
  uint64_t v94 = (uint64_t)v154;
  char v162 = sub_10094FBBC;
  uint64_t v163 = v109;
  aBlock = _NSConcreteStackBlock;
  uint64_t v159 = 1107296256;
  uint64_t v160 = sub_10010A4D4;
  uint64_t v161 = &unk_100E2FC50;
  uint64_t v111 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v112 = v135;
  static DispatchQoS.unspecified.getter();
  aBlock = (void **)&_swiftEmptyArrayStorage;
  sub_1001110D8((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  sub_10017EBC0();
  sub_100163B0C();
  uint64_t v74 = v107;
  uint64_t v62 = v155;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v113 = (void *)v153;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v111);

  uint64_t v70 = v151;
  sub_100162F0C();
  v114();
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v112, v138);
LABEL_34:
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 16))(v94, v62, v74);
  _s7Weather24LocationCompositionStateOwst_0(v94, 0, 1, v74);
  uint64_t v115 = v70 + OBJC_IVAR____TtC7Weather27LocationViewerStoreObserver_lastViewedLocationIdentifier;
  swift_beginAccess();
  uint64_t v116 = v73 + *(int *)(v149 + 48);
  sub_100111070(v94, v73);
  sub_100111070(v115, v116);
  sub_10012B520(v73, 1, v74);
  uint64_t v117 = v150;
  if (v68)
  {
    sub_100178110(v94, &qword_100E6DC08);
    sub_10012B520(v116, 1, v74);
    if (v68)
    {
      sub_100178110(v73, &qword_100E6DC08);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v62, v157);
      return swift_release();
    }
    goto LABEL_42;
  }
  sub_100111070(v73, v150);
  sub_10012B520(v116, 1, v74);
  if (v118)
  {
    sub_100178110(v94, &qword_100E6DC08);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v117, v74);
LABEL_42:
    sub_100178110(v73, &qword_100E6DD18);
    goto LABEL_43;
  }
  uint64_t v123 = v141;
  sub_100180854();
  v124();
  sub_1001110D8((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  char v125 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v126 = v74;
  char v127 = *(void (**)(char *, uint64_t))(v93 + 8);
  v127(v123, v126);
  sub_100178110(v94, &qword_100E6DC08);
  uint64_t v128 = v126;
  uint64_t v129 = v155;
  v127((char *)v117, v128);
  sub_100178110(v73, &qword_100E6DC08);
  if (v125)
  {
    v127(v129, v157);
    return swift_release();
  }
LABEL_43:
  if (qword_100E629F8 != -1) {
    swift_once();
  }
  uint64_t v164 = Location.Identifier.id.getter();
  uint64_t v165 = v119;
  sub_1001110D8(&qword_100EA3598, (void (*)(uint64_t))type metadata accessor for LocationViewerStoreObserver);
  Updatable.save<A>(setting:value:)();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v120 = v146;
  uint64_t v121 = v157;
  sub_100180854();
  v122();
  _s7Weather24LocationCompositionStateOwst_0(v120, 0, 1, v121);
  swift_beginAccess();
  sub_1000171F8(v120, v115);
  return swift_endAccess();
}

uint64_t sub_100111070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6DC08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001110D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100111120(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDataAction();
  __chkstk_darwin(v2 - 8);
  sub_1001626E0();
  uint64_t v30 = v4 - v3;
  uint64_t v5 = type metadata accessor for NotificationsAction();
  __chkstk_darwin(v5 - 8);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v31 = type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v32 = (unsigned __int8 *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v29 - v12;
  uint64_t v14 = type metadata accessor for LocationsAction();
  __chkstk_darwin(v14 - 8);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for MainAction();
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v23 = *(void *)(result + 16);
  if (v23)
  {
    uint64_t v24 = result + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v25 = *(void *)(v19 + 72);
    v29[1] = result;
    swift_bridgeObjectRetain();
    do
    {
      sub_100166618(v24, (uint64_t)v21, (void (*)(void))type metadata accessor for MainAction);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 0xAu:
        case 0xBu:
        case 0xDu:
        case 0xEu:
        case 0x11u:
          uint64_t v26 = type metadata accessor for MainAction;
          uint64_t v27 = (unsigned __int8 *)v21;
          goto LABEL_5;
        case 2u:
          sub_100164DC8((uint64_t)v21, (uint64_t)v13, (void (*)(void))type metadata accessor for EnvironmentAction);
          sub_100166618((uint64_t)v13, (uint64_t)v32, (void (*)(void))type metadata accessor for EnvironmentAction);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 5u:
            case 6u:
            case 7u:
            case 8u:
            case 0xAu:
            case 0xCu:
            case 0xDu:
              goto LABEL_9;
            case 2u:
            case 3u:
            case 0xBu:
              sub_100158EDC((uint64_t)v13, (void (*)(void))type metadata accessor for EnvironmentAction);
              uint64_t v27 = v32;
              uint64_t v26 = type metadata accessor for EnvironmentAction;
              goto LABEL_5;
            case 4u:
              sub_100158EDC((uint64_t)v13, (void (*)(void))type metadata accessor for EnvironmentAction);
              goto LABEL_13;
            case 9u:
              sub_100158EDC((uint64_t)v13, (void (*)(void))type metadata accessor for EnvironmentAction);
              sub_1001EB5EC(*(void *)v32, *((void *)v32 + 1));
              goto LABEL_6;
            default:
              sub_1006BBD1C(*v32, *(void *)(v33 + 64));
LABEL_9:
              uint64_t v26 = type metadata accessor for EnvironmentAction;
              uint64_t v27 = (unsigned __int8 *)v13;
              break;
          }
          goto LABEL_5;
        case 3u:
          sub_100164DC8((uint64_t)v21, v17, (void (*)(void))type metadata accessor for LocationsAction);
          sub_1000308B0(v17, v33);
          uint64_t v26 = type metadata accessor for LocationsAction;
          uint64_t v27 = (unsigned __int8 *)v17;
          goto LABEL_5;
        case 4u:
          sub_100164DC8((uint64_t)v21, v8, (void (*)(void))type metadata accessor for NotificationsAction);
          sub_100117298(v8, *(void *)(v33 + 64));
          uint64_t v26 = type metadata accessor for NotificationsAction;
          uint64_t v27 = (unsigned __int8 *)v8;
          goto LABEL_5;
        case 9u:
          uint64_t v28 = v30;
          sub_100164DC8((uint64_t)v21, v30, (void (*)(void))type metadata accessor for WeatherDataAction);
          sub_1001115C8(v28, *(void *)(v33 + 64));
          uint64_t v26 = type metadata accessor for WeatherDataAction;
          uint64_t v27 = (unsigned __int8 *)v28;
LABEL_5:
          sub_100158EDC((uint64_t)v27, (void (*)(void))v26);
          break;
        case 0x10u:
LABEL_13:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
LABEL_6:
      v24 += v25;
      --v23;
    }
    while (v23);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001115C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherDataAction();
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100166618(a1, (uint64_t)v6, (void (*)(void))type metadata accessor for WeatherDataAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v10 = (int *)sub_10017DF08(&qword_100E6BBC0);
      uint64_t v11 = (char *)v6 + v10[12];
      uint64_t v12 = (uint64_t)v6 + v10[16];
      sub_100158EDC((uint64_t)v6 + v10[20], (void (*)(void))type metadata accessor for NewsDataModel);
      sub_100158EDC(v12, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v7 = (void (*)(void))type metadata accessor for WeatherData;
      uint64_t v8 = (uint64_t)v11;
      goto LABEL_3;
    case 5u:
      swift_bridgeObjectRelease();
      uint64_t v8 = (uint64_t)v6 + *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
      uint64_t v7 = (void (*)(void))type metadata accessor for NewsDataModel;
      goto LABEL_3;
    case 6u:
      uint64_t v13 = *v6;
      unint64_t v14 = v6[1];
      uint64_t v15 = (char *)v6 + *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
      sub_1006BCE0C(v13, v14, a2);
      swift_bridgeObjectRelease();
      uint64_t v16 = type metadata accessor for AvailableDataSets();
      goto LABEL_8;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v15 = (char *)v6 + *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
      uint64_t v16 = type metadata accessor for WeatherStatisticsModel();
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      break;
    default:
      uint64_t v7 = (void (*)(void))type metadata accessor for WeatherDataAction;
      uint64_t v8 = (uint64_t)v6;
LABEL_3:
      uint64_t result = sub_100158EDC(v8, v7);
      break;
  }
  return result;
}

uint64_t sub_1001117FC(uint64_t a1)
{
  uint64_t v38 = type metadata accessor for WeatherDataAction();
  sub_100162E4C();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v32 - v6;
  uint64_t v37 = type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = type metadata accessor for MainAction();
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(result + 16);
  if (v19)
  {
    uint64_t v20 = result + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v21 = *(void *)(v15 + 72);
    uint64_t v35 = result;
    swift_bridgeObjectRetain();
    uint64_t v36 = v7;
    do
    {
      sub_100118240(v20, (uint64_t)v17, (void (*)(void))type metadata accessor for MainAction);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 0xAu:
        case 0xBu:
        case 0xDu:
        case 0xEu:
        case 0x11u:
          uint64_t v22 = (void (*)(void))type metadata accessor for MainAction;
          uint64_t v23 = (uint64_t)v17;
LABEL_5:
          sub_100158C20(v23, v22);
          break;
        case 2u:
          sub_100164D00((uint64_t)v17, (uint64_t)v13, (void (*)(void))type metadata accessor for EnvironmentAction);
          sub_100118240((uint64_t)v13, (uint64_t)v11, (void (*)(void))type metadata accessor for EnvironmentAction);
          if (swift_getEnumCaseMultiPayload() == 11) {
            sub_10001BB60(1);
          }
          sub_100158C20((uint64_t)v13, (void (*)(void))type metadata accessor for EnvironmentAction);
          sub_100158C20((uint64_t)v11, (void (*)(void))type metadata accessor for EnvironmentAction);
          uint64_t v7 = v36;
          break;
        case 9u:
          sub_100164D00((uint64_t)v17, (uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataAction);
          sub_100118240((uint64_t)v7, (uint64_t)v5, (void (*)(void))type metadata accessor for WeatherDataAction);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
              sub_100158C20((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataAction);
              uint64_t v24 = v5[2];
              unint64_t v25 = v5[3];
              uint64_t v34 = (char *)v5[5];
              swift_bridgeObjectRelease();
              uint64_t v26 = v24;
              uint64_t v7 = v36;
              sub_100303D6C(v26, v25);
              goto LABEL_15;
            case 3u:
            case 9u:
              sub_100158C20((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              goto LABEL_15;
            case 4u:
              swift_bridgeObjectRelease();
              uint64_t v27 = (int *)sub_10017DF08(&qword_100E6BBC0);
              uint64_t v34 = (char *)v5 + v27[12];
              uint64_t v33 = (uint64_t)v5 + v27[16];
              uint64_t v28 = (char *)v5 + v27[20];
              sub_10001BB60(1);
              sub_100158C20((uint64_t)v36, (void (*)(void))type metadata accessor for WeatherDataAction);
              uint64_t v29 = (uint64_t)v28;
              uint64_t v7 = v36;
              sub_100158C20(v29, (void (*)(void))type metadata accessor for NewsDataModel);
              sub_100158C20(v33, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
              uint64_t v22 = (void (*)(void))type metadata accessor for WeatherData;
              uint64_t v23 = (uint64_t)v34;
              goto LABEL_5;
            case 5u:
              sub_100158C20((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              uint64_t v23 = (uint64_t)v5 + *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
              uint64_t v22 = (void (*)(void))type metadata accessor for NewsDataModel;
              goto LABEL_5;
            case 6u:
              sub_100158C20((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              uint64_t v30 = (char *)v5 + *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
              type metadata accessor for AvailableDataSets();
              break;
            case 8u:
              sub_100158C20((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataAction);
              swift_bridgeObjectRelease();
              uint64_t v30 = (char *)v5 + *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
              type metadata accessor for WeatherStatisticsModel();
              break;
            default:
              sub_100158C20((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataAction);
              goto LABEL_15;
          }
          sub_100162E4C();
          (*(void (**)(char *))(v31 + 8))(v30);
          break;
        case 0xCu:
        case 0xFu:
        case 0x12u:
        case 0x13u:
          break;
        case 0x10u:
LABEL_15:
          swift_bridgeObjectRelease();
          break;
        default:
          if (*v17 == 1) {
            sub_10001BB60(0);
          }
          break;
      }
      v20 += v21;
      --v19;
    }
    while (v19);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100111DB4(uint64_t a1)
{
  v274[1] = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100109314();
  v274[0] = v3;
  uint64_t v4 = type metadata accessor for LocationPreviewViewState(0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v275 = v6;
  uint64_t v253 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v252 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  sub_100109338(v9);
  uint64_t v10 = sub_10017DF08(&qword_100E63770);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v12);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v13);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v14);
  sub_100128F8C();
  sub_100109338(v15);
  uint64_t v16 = sub_10017DF08(&qword_100E63850);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v19);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100128F8C();
  sub_100109338(v21);
  uint64_t v22 = sub_10017DF08(&qword_100E66680);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v24);
  sub_100128F8C();
  uint64_t v26 = sub_100109328(v25);
  uint64_t v268 = type metadata accessor for OpenL2Descriptor(v26);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100128F8C();
  sub_100109338(v29);
  uint64_t v30 = sub_10017DF08(&qword_100E639E8);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v273 = v32;
  __chkstk_darwin(v33);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v34);
  sub_100128F8C();
  sub_100109328(v35);
  uint64_t v278 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v276 = v36;
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v277 = v38;
  __chkstk_darwin(v39);
  sub_100128F8C();
  sub_100109328(v40);
  uint64_t v41 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v272 = v43;
  uint64_t v44 = sub_10017DF08(&qword_100EAC4A0);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_100109314();
  sub_100109328(v46);
  uint64_t v266 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v269 = v47;
  __chkstk_darwin(v48);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v49);
  sub_100109770();
  sub_100179C90();
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v244 - v52;
  __chkstk_darwin(v51);
  uint64_t v55 = (char *)&v244 - v54;
  uint64_t v280 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v267 = v56;
  __chkstk_darwin(v57);
  sub_100162EF8();
  sub_100179C90();
  uint64_t v59 = __chkstk_darwin(v58);
  uint64_t v61 = (char *)&v244 - v60;
  __chkstk_darwin(v59);
  sub_100128F8C();
  uint64_t v279 = v62;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v64 = sub_100109308(active);
  __chkstk_darwin(v64);
  sub_1001626E0();
  uint64_t v67 = v66 - v65;
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v68);
  sub_1001626E0();
  uint64_t v71 = (uint64_t *)(v70 - v69);
  char v72 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v73);
  sub_1001626E0();
  uint64_t v76 = v75 - v74;
  sub_100113A28(*(void *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v75 - v74, (void (*)(void))type metadata accessor for ViewState);
  sub_100113A28(v76 + v72[5], (uint64_t)v71, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011E408((uint64_t)v71, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_11:
    uint64_t v85 = v276;
    uint64_t v83 = (void (*)(void, void, void))v278;
    uint64_t v98 = v274[0];
    sub_10011E408(v76, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v84 = v275;
    uint64_t v99 = v277;
    goto LABEL_41;
  }
  uint64_t v77 = *v71;
  if (*(void *)(v76 + v72[9] + 8) == 1)
  {
    id v78 = [self currentDevice];
    [v78 userInterfaceIdiom];

    if ((*(unsigned char *)(v76 + v72[7]) & 1) == 0)
    {
      swift_release();
      goto LABEL_11;
    }
  }
  sub_10011E408(v76, (void (*)(void))type metadata accessor for ViewState);
  sub_100113A28(v77 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v67, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v79 = sub_1001A1520();
  uint64_t v80 = v280;
  sub_10012B520(v79, v81, v280);
  uint64_t v82 = v77;
  uint64_t v83 = (void (*)(void, void, void))v278;
  if (v124)
  {
    swift_release();
    uint64_t v84 = v275;
    uint64_t v85 = v276;
LABEL_39:
    uint64_t v99 = v277;
LABEL_40:
    uint64_t v98 = v274[0];
    goto LABEL_41;
  }
  uint64_t v246 = v82;
  uint64_t v86 = v267;
  uint64_t v87 = v279;
  sub_1001627D4();
  v88();
  uint64_t v89 = v272;
  sub_100113A28(*(void *)(a1 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v272, (void (*)(void))type metadata accessor for LocationsState);
  static CurrentLocation.placeholderIdentifier.getter();
  char v90 = static Location.Identifier.== infix(_:_:)();
  uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
  uint64_t v83 = (void (*)(void, void, void))(v86 + 8);
  v270 = v91;
  uint64_t v271 = v83;
  v91((uint64_t)v61, v80);
  unint64_t v247 = v55;
  if (v90)
  {
    sub_10017DF08(&qword_100E63878);
    uint64_t v92 = v263;
    type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for LocationOfInterest();
    uint64_t v93 = sub_10017F088();
    _s7Weather24LocationCompositionStateOwst_0(v93, v94, 1, v95);
    uint64_t v96 = v269;
    uint64_t v97 = v266;
    (*(void (**)(uint64_t, void, uint64_t))(v269 + 104))(v92, enum case for LocationModel.current(_:), v266);
    sub_100186BE4();
    uint64_t v83 = (void (*)(void, void, void))v278;
  }
  else
  {
    uint64_t v245 = a1;
    uint64_t v100 = *(void *)(v89 + *(int *)(v41 + 24));
    uint64_t v87 = *(void *)(v100 + 16);
    uint64_t v244 = v100;
    if (v87)
    {
      uint64_t v83 = *(void (**)(void, void, void))(v269 + 16);
      uint64_t v80 = v100 + ((*(unsigned __int8 *)(v269 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v269 + 80));
      uint64_t v101 = (void (**)(char *, uint64_t))(v269 + 8);
      a1 = *(void *)(v269 + 72);
      swift_bridgeObjectRetain();
      uint64_t v97 = v266;
      while (1)
      {
        v83(v53, v80, v97);
        LocationModel.identifier.getter();
        char v102 = static Location.Identifier.== infix(_:_:)();
        sub_100127BA4();
        v104(v103);
        if (v102) {
          break;
        }
        (*v101)(v53, v97);
        v80 += a1;
        if (!--v87) {
          goto LABEL_18;
        }
      }
      uint64_t v96 = v269;
      uint64_t v92 = v263;
      sub_1001627D4();
      v108(v107);
      sub_100186BE4();
      swift_bridgeObjectRelease();
      sub_10018AA88();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v97 = v266;
LABEL_18:
      uint64_t v92 = v263;
      uint64_t v105 = sub_1001A1520();
      _s7Weather24LocationCompositionStateOwst_0(v105, v106, 1, v97);
      swift_bridgeObjectRelease();
      sub_10018AA88();
      uint64_t v96 = v269;
    }
  }
  sub_10011E408(v272, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v109 = sub_1001A1520();
  sub_10012B520(v109, v110, v97);
  uint64_t v85 = v276;
  uint64_t v99 = v277;
  if (v124)
  {
    sub_1001781AC(v92, &qword_100EAC4A0);
    if (qword_100E62848 != -1) {
      swift_once();
    }
    uint64_t v111 = type metadata accessor for Logger();
    sub_1002102B0(v111, (uint64_t)qword_100F51FE0);
    uint64_t v112 = v260;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v267 + 16))(v260, v87, v80);
    unint64_t v113 = Logger.logObject.getter();
    os_log_type_t v114 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v113, v114))
    {
      swift_slowAlloc();
      uint64_t v282 = sub_1001A3458();
      sub_100183FA4(7.2225e-34);
      uint64_t v115 = v112;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(a1 + 12) = 2081;
      sub_100210468();
      uint64_t v116 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v281 = sub_10016414C(v116, v117, &v282);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      char v118 = v270;
      v270(v115, v80);
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "Could not find LocationModel for active location, identifier=%{private,mask.hash}s", (uint8_t *)a1, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      a1 = v245;
      uint64_t v99 = v277;
      sub_100162EE0();

      sub_1001817D4();
      uint64_t v85 = v276;
      v118(v279, v80);
    }
    else
    {

      sub_1001817D4();
      uint64_t v135 = v270;
      v270(v112, v80);
      v135(v87, v80);
    }
    uint64_t v84 = v275;
    goto LABEL_40;
  }
  uint64_t v119 = v247;
  sub_1001627D4();
  v121(v120);
  sub_10012B920();
  LocationModel.coalesceLocation.getter();
  uint64_t v122 = sub_1001A1520();
  sub_10012B520(v122, v123, (uint64_t)v83);
  if (v124)
  {
    sub_1001781AC(v92, &qword_100E639E8);
    if (qword_100E62848 != -1) {
      swift_once();
    }
    uint64_t v125 = type metadata accessor for Logger();
    sub_1002102B0(v125, (uint64_t)qword_100F51FE0);
    uint64_t v126 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 16);
    uint64_t v127 = v266;
    v126((uint64_t)v261, v119, v266);
    uint64_t v128 = Logger.logObject.getter();
    os_log_type_t v129 = static os_log_type_t.error.getter();
    int v130 = v129;
    if (os_log_type_enabled(v128, v129))
    {
      swift_slowAlloc();
      uint64_t v272 = sub_1001A3458();
      uint64_t v282 = v272;
      sub_100183FA4(7.2225e-34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(a1 + 12) = 2081;
      uint64_t v267 = a1 + 14;
      LODWORD(v269) = v130;
      uint64_t v131 = v261;
      v126(v256, v261, v127);
      uint64_t v132 = String.init<A>(describing:)();
      uint64_t v281 = sub_10016414C(v132, v133, &v282);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v134((uint64_t)v131, v127);
      _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v269, "Could not find coalesceLocation for active LocationModel, locationModel=%{private,mask.hash}s", (uint8_t *)a1, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      a1 = v245;
      uint64_t v83 = (void (*)(void, void, void))v278;
      sub_100162EE0();

      sub_1001817D4();
      v134((uint64_t)v247, v127);
    }
    else
    {

      sub_1001817D4();
      uint64_t v152 = *(void (**)(uint64_t))(v96 + 8);
      uint64_t v153 = sub_100185CA8((uint64_t)&v283);
      v152(v153);
      uint64_t v154 = sub_100185CA8((uint64_t)v274);
      v152(v154);
    }
    sub_100127BA4();
    v156(v155);
    uint64_t v84 = v275;
    goto LABEL_39;
  }
  uint64_t v136 = a1;
  sub_1001627D4();
  v138(v137);
  uint64_t v139 = v265 + 2;
  uint64_t v140 = *sub_1001B1E64(v265 + 2, v265[5]) + OBJC_IVAR____TtC7Weather21AppContinuationBridge_pendingOpenL2Descriptor;
  swift_beginAccess();
  uint64_t v141 = v140;
  uint64_t v142 = v258;
  sub_100113B48(v141, v258);
  uint64_t v143 = sub_10017F088();
  sub_10012B520(v143, v144, v268);
  uint64_t v84 = v275;
  if (v145)
  {
    sub_1001817D4();
    sub_100127BA4();
    v147(v146);
    uint64_t v148 = sub_10019F1D4();
    v149(v148);
    sub_100127BA4();
    v151(v150);
    sub_1001781AC(v142, &qword_100E66680);
LABEL_59:
    a1 = v136;
    goto LABEL_40;
  }
  uint64_t v177 = v142;
  uint64_t v178 = v257;
  sub_10016E174(v177, v257, (void (*)(void))type metadata accessor for OpenL2Descriptor);
  if (*(unsigned char *)(v178 + 1) == 1)
  {
    sub_1001817D4();
    sub_10011E408(v178, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    sub_100127BA4();
    v180(v179);
    uint64_t v181 = sub_10019F1D4();
    v182(v181);
    uint64_t v183 = v279;
    uint64_t v184 = v80;
LABEL_58:
    v270(v183, v184);
    goto LABEL_59;
  }
  uint64_t v198 = *(void *)(*(void *)(v136 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  Location.id.getter();
  sub_10012B920();
  sub_1001BBE9C(v199, v200, v198);
  swift_bridgeObjectRelease();
  uint64_t v201 = v92;
  swift_bridgeObjectRelease();
  uint64_t v202 = type metadata accessor for LocationWeatherDataState(0);
  sub_10012B520(v201, 1, v202);
  if (v124)
  {
    uint64_t v203 = &qword_100E63770;
    uint64_t v204 = v201;
  }
  else
  {
    uint64_t v208 = v254;
    sub_1001177B0(v254);
    sub_10011E408(v201, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v209 = type metadata accessor for WeatherData(0);
    uint64_t v210 = sub_10017F088();
    sub_10012B520(v210, v211, v209);
    if (!v212)
    {
      uint64_t v272 = v209;
      WeatherDataModel.hourlyForecast.getter();
      sub_10011E408(v208, (void (*)(void))type metadata accessor for WeatherData);
      Forecast.forecast.getter();
      sub_100127BA4();
      v226(v225);
      swift_bridgeObjectRelease();
      uint64_t v227 = *(void *)(*(void *)(v136 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
      swift_bridgeObjectRetain();
      uint64_t v228 = Location.id.getter();
      uint64_t v229 = v248;
      sub_1001BBE9C(v228, v230, v227);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10012B520(v229, 1, v202);
      if (v231)
      {
        sub_1001781AC(v229, &qword_100E63770);
        uint64_t v236 = v249;
        _s7Weather24LocationCompositionStateOwst_0(v249, 1, 1, v272);
      }
      else
      {
        uint64_t v236 = v249;
        sub_1001177B0(v249);
        sub_10011E408(v229, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      }
      uint64_t v99 = v277;
      sub_1001B1E64(v139, v265[5]);
      sub_1001A2E74();
      uint64_t v238 = *(void *)(v237 - 256);
      v239(v238, v259, v83);
      _s7Weather24LocationCompositionStateOwst_0(v238, 0, 1, (uint64_t)v83);
      sub_10038806C(v236, v238);
      sub_1001817D4();
      sub_1001781AC(v238, &qword_100E639E8);
      sub_1001781AC(v236, &qword_100E63850);
      sub_10011E408(v257, (void (*)(void))type metadata accessor for OpenL2Descriptor);
      sub_100127BA4();
      v241(v240);
      uint64_t v242 = sub_10019F1D4();
      v243(v242);
      uint64_t v183 = v279;
      uint64_t v184 = v280;
      goto LABEL_58;
    }
    uint64_t v203 = &qword_100E63850;
    uint64_t v204 = v208;
  }
  sub_1001781AC(v204, v203);
  uint64_t v98 = v274[0];
  sub_1001817D4();
  sub_10011E408(v257, (void (*)(void))type metadata accessor for OpenL2Descriptor);
  sub_100127BA4();
  v214(v213);
  uint64_t v215 = sub_10019F1D4();
  v216(v215);
  sub_100127BA4();
  v218(v217);
  a1 = v136;
LABEL_41:
  uint64_t v157 = a1;
  uint64_t v158 = *(void *)(a1 + 64);
  sub_100113A28(v158 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v98, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v159 = type metadata accessor for ModalViewState;
    uint64_t v160 = v98;
    return sub_10011E408(v160, (void (*)(void))v159);
  }
  sub_10016E174(v98, v84, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  uint64_t v162 = v273;
  sub_10081B708(v273);
  uint64_t v163 = sub_10017F088();
  sub_10012B520(v163, v164, (uint64_t)v83);
  if (v124)
  {
    sub_10011E408(v84, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v165 = &qword_100E639E8;
    uint64_t v166 = v162;
  }
  else
  {
    sub_1001627D4();
    v168(v167);
    uint64_t v169 = v265 + 2;
    uint64_t v170 = *sub_1001B1E64(v265 + 2, v265[5]) + OBJC_IVAR____TtC7Weather21AppContinuationBridge_pendingOpenL2Descriptor;
    swift_beginAccess();
    uint64_t v171 = v170;
    uint64_t v172 = v264;
    sub_100113B48(v171, v264);
    sub_10012B520(v172, 1, v268);
    if (!v173)
    {
      uint64_t v174 = v172;
      uint64_t v175 = v262;
      sub_10016E174(v174, v262, (void (*)(void))type metadata accessor for OpenL2Descriptor);
      if ((*(unsigned char *)(v175 + 1) & 1) != 0 && (*(unsigned char *)(v175 + *(int *)(v268 + 28) + 16) & 1) == 0)
      {
        uint64_t v185 = v268;
        sub_1001B1E64(v265 + 7, v265[10]);
        uint64_t v186 = *(void *)(v175 + *(int *)(v185 + 32) + 8);
        uint64_t v187 = v175;
        swift_bridgeObjectRetain();
        sub_1006950B0();
        char v189 = v188;
        swift_bridgeObjectRelease();
        if ((v189 & 1) == 0)
        {
          sub_10011E408(v187, (void (*)(void))type metadata accessor for OpenL2Descriptor);
          (*(void (**)(uint64_t, void (*)(void, void, void)))(v85 + 8))(v277, v83);
          goto LABEL_55;
        }
        uint64_t v190 = *(void *)(v158 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
        swift_bridgeObjectRetain();
        uint64_t v99 = v277;
        Location.id.getter();
        sub_10012B920();
        sub_1001BBE9C(v191, v192, v190);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v193 = type metadata accessor for LocationWeatherDataState(0);
        uint64_t v194 = sub_1001A1520();
        sub_10012B520(v194, v195, v193);
        if (v124)
        {
          uint64_t v196 = &qword_100E63770;
          uint64_t v197 = v186;
        }
        else
        {
          uint64_t v205 = v255;
          sub_1001177B0(v255);
          sub_10011E408(v186, (void (*)(void))type metadata accessor for LocationWeatherDataState);
          uint64_t v206 = type metadata accessor for WeatherData(0);
          sub_10012B520(v205, 1, v206);
          if (v207)
          {
            uint64_t v196 = &qword_100E63850;
            uint64_t v197 = v205;
          }
          else
          {
            uint64_t v280 = v206;
            sub_10012B920();
            WeatherDataModel.hourlyForecast.getter();
            sub_10011E408(v205, (void (*)(void))type metadata accessor for WeatherData);
            uint64_t v219 = v253;
            Forecast.forecast.getter();
            (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v186, v219);
            swift_bridgeObjectRelease();
            uint64_t v220 = *(void *)(*(void *)(v157 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
            swift_bridgeObjectRetain();
            uint64_t v221 = Location.id.getter();
            uint64_t v222 = v250;
            sub_1001BBE9C(v221, v223, v220);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10012B520(v222, 1, v193);
            if (v224)
            {
              sub_1001781AC(v222, &qword_100E63770);
              uint64_t v232 = v251;
              _s7Weather24LocationCompositionStateOwst_0(v251, 1, 1, v280);
            }
            else
            {
              uint64_t v232 = v251;
              sub_1001177B0(v251);
              sub_10011E408(v222, (void (*)(void))type metadata accessor for LocationWeatherDataState);
            }
            sub_1001B1E64(v169, v265[5]);
            sub_1001A2E74();
            uint64_t v234 = *(void *)(v233 - 256);
            v235(v234, v99, v83);
            _s7Weather24LocationCompositionStateOwst_0(v234, 0, 1, (uint64_t)v83);
            sub_10038806C(v232, v234);
            sub_1001781AC(v234, &qword_100E639E8);
            uint64_t v196 = &qword_100E63850;
            uint64_t v197 = v232;
          }
        }
        sub_1001781AC(v197, v196);
        uint64_t v176 = v262;
      }
      else
      {
        uint64_t v176 = v175;
      }
      sub_10011E408(v176, (void (*)(void))type metadata accessor for OpenL2Descriptor);
      (*(void (**)(uint64_t, void (*)(void, void, void)))(v85 + 8))(v99, v83);
LABEL_55:
      uint64_t v159 = type metadata accessor for LocationPreviewViewState;
      uint64_t v160 = v84;
      return sub_10011E408(v160, (void (*)(void))v159);
    }
    (*(void (**)(uint64_t, void (*)(void, void, void)))(v85 + 8))(v99, v83);
    sub_10011E408(v84, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v165 = &qword_100E66680;
    uint64_t v166 = v172;
  }
  return sub_1001781AC(v166, v165);
}

uint64_t sub_100113680(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  sub_10008B8B4();
  v5();
  return a2;
}

uint64_t sub_1001136D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100113738(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100113798(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001137EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011384C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001138AC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t sub_100113908(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100113968(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001139C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100113A28(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100113A88(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100113AE8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100113B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for OpenL2Descriptor(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAEB20);
}

uint64_t sub_100113BF8(uint64_t a1)
{
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v37 = v5;
  uint64_t v36 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v35 = v9;
  uint64_t v10 = type metadata accessor for MainAction();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t result = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(result + 16);
  if (v18)
  {
    uint64_t v19 = result + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v20 = *(void *)(v14 + 72);
    uint64_t v31 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v32 = v42;
    v29[1] = result;
    uint64_t v30 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v33 = v13;
    uint64_t v34 = v10;
    uint64_t v21 = v35;
    uint64_t v22 = v38;
    do
    {
      sub_10015B0C4(v19, (uint64_t)v16);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_10015B0C4((uint64_t)v16, (uint64_t)v13);
        type metadata accessor for EnvironmentAction();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          sub_1001AB3E0();
          uint64_t v23 = static OS_dispatch_queue.main.getter();
          v42[2] = sub_1002F1328;
          v42[3] = v39;
          uint64_t v40 = (void *)v23;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          v42[0] = sub_10010A4D4;
          v42[1] = &unk_100E10880;
          uint64_t v24 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = &_swiftEmptyArrayStorage;
          sub_100216874();
          sub_10017DF08(&qword_100E75530);
          sub_100115EDC();
          uint64_t v25 = v20;
          uint64_t v26 = v37;
          uint64_t v13 = v33;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v27 = v40;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v24);

          uint64_t v28 = v26;
          uint64_t v20 = v25;
          (*v31)(v28, v22);
          (*v30)(v21, v36);
        }
        sub_100158A14((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for EnvironmentAction);
      }
      sub_100158A14((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for MainAction);
      v19 += v20;
      --v18;
    }
    while (v18);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100113F9C(uint64_t a1)
{
  uint64_t v250 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v286 = v2;
  __chkstk_darwin(v3);
  sub_100109314();
  sub_100109328(v4);
  uint64_t v268 = (char *)type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v7 = sub_100109328(v6);
  uint64_t v261 = type metadata accessor for ModalViewState(v7);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v9);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v10);
  sub_100128F8C();
  uint64_t v12 = sub_100109328(v11);
  uint64_t v13 = type metadata accessor for LocationPreviewViewState(v12);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v253 = v15;
  uint64_t v16 = sub_10017DF08(&qword_100E663D8);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109328(v18);
  uint64_t v274 = type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100128F8C();
  sub_100109328(v21);
  uint64_t v252 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v282 = v22;
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109328(v24);
  uint64_t v290 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v285 = v25;
  __chkstk_darwin(v26);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v27);
  sub_100109770();
  uint64_t v292 = v28;
  __chkstk_darwin(v29);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100128F8C();
  sub_100109328(v32);
  uint64_t v33 = type metadata accessor for CurrentLocation();
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109328(v35);
  uint64_t v273 = type metadata accessor for LocationsAction();
  sub_100162E4C();
  __chkstk_darwin(v36);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v37);
  sub_100128F8C();
  sub_100109328(v38);
  uint64_t v39 = type metadata accessor for TimeState();
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100109314();
  uint64_t v42 = sub_100109328(v41);
  uint64_t v270 = type metadata accessor for ViewState.SecondaryViewState(v42);
  sub_100162E4C();
  __chkstk_darwin(v43);
  sub_100109314();
  uint64_t v45 = sub_100109328(v44);
  uint64_t v271 = type metadata accessor for ViewState(v45);
  sub_100162E4C();
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v233 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v272 = v49;
  __chkstk_darwin(v50);
  sub_100109314();
  uint64_t v258 = v51;
  uint64_t v52 = sub_10017DF08(&qword_100E639E8);
  uint64_t v53 = sub_100164920(v52);
  uint64_t v257 = v54;
  __chkstk_darwin(v53);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v55);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v56);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v57);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v58);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v59);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v60);
  sub_100128F8C();
  sub_100109328(v61);
  uint64_t v295 = type metadata accessor for MainAction();
  sub_100179C0C();
  uint64_t v63 = v62;
  __chkstk_darwin(v64);
  uint64_t v66 = (unsigned __int8 *)&v233 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = *(void *)(a1 + 64);
  uint64_t v68 = *(uint8_t **)(v67 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v281 = *(char **)(v67 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v70 = *(void *)(v67 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v69 = *(void *)(v67 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  uint64_t v71 = v67 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v72 = type metadata accessor for LocationsState();
  uint64_t v73 = *(void *)(v71 + *(int *)(v72 + 32));
  uint64_t v294 = a1;
  uint64_t v74 = *(uint8_t **)(a1 + 40);
  if (*((void *)v74 + 2))
  {
    uint64_t v244 = v72;
    uint64_t v245 = v293 + 24;
    uint64_t v296 = &v74[(*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80)];
    uint64_t v297 = v63;
    uint64_t v246 = v48 + 8;
    v291 = (void (**)(uint64_t, uint64_t, uint64_t))(v285 + 32);
    uint64_t v242 = &v302;
    uint64_t v248 = v285 + 8;
    uint64_t v241 = v282 + 8;
    uint64_t v237 = v286 + 32;
    uint64_t v236 = (void (**)(uint64_t, uint64_t))(v286 + 8);
    uint64_t v243 = (void (**)(uint64_t, uint64_t))(v272 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v286 = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v75 = 0;
    uint64_t v247 = 0;
    *(void *)&long long v76 = 141558275;
    long long v239 = v76;
    uint64_t v238 = (uint64_t)&type metadata for Any + 8;
    uint64_t v264 = v48;
    sub_100185FF8();
    uint64_t v277 = v68;
    uint64_t v287 = v70;
    unint64_t v77 = (unint64_t)v68;
    sub_1001A369C();
    while ((unint64_t)v75 < *((void *)v74 + 2))
    {
      id v78 = v75++;
      sub_1001668D8((uint64_t)&v296[*(void *)(v297 + 72) * (void)v78], (uint64_t)v66, (void (*)(void))type metadata accessor for MainAction);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xDu:
        case 0xEu:
        case 0x11u:
          uint64_t v79 = type metadata accessor for MainAction;
          uint64_t v80 = (uint64_t)v66;
LABEL_6:
          sub_10015918C(v80, (void (*)(void))v79);
          goto LABEL_7;
        case 2u:
          uint64_t v89 = v283;
          sub_100116FA0((uint64_t)v66, v283, (void (*)(void))type metadata accessor for EnvironmentAction);
          sub_1001A1B3C(v89, (void (*)(void))type metadata accessor for EnvironmentAction, (uint64_t)v303);
          uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch((int)EnumCaseMultiPayload)
          {
            case 1:
              sub_10019B804();
              if ((*(unsigned char *)(v157 + 1) & 1) == 0)
              {
                sub_10019B804();
                if (*v158 != 4)
                {
                  uint64_t v159 = *(void *)(v294 + 56) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
                  swift_beginAccess();
                  if (*(unsigned char *)(v159 + 2) == 4)
                  {
                    sub_100181C20();
                    sub_1001A2A2C(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v160, (void (*)(void))type metadata accessor for TimeState);
                    uint64_t v68 = (uint8_t *)v77;
                    uint64_t v48 = v281;
                    sub_10019DCC0(v73, v71, (uint64_t)v281, v77, v287, (uint64_t)&v263);
                    sub_1001842CC(v161, (void (*)(void))type metadata accessor for TimeState);
                    uint64_t v162 = sub_100186E64();
                    sub_100178110(v162, &qword_100E639E8);
                    sub_100184E48();
                    uint64_t v74 = v235;
                    sub_1001A369C();
                    sub_10005EC80();
                  }
                }
              }
              goto LABEL_18;
            case 2:
            case 11:
              sub_10015918C(v278, (void (*)(void))type metadata accessor for EnvironmentAction);
              uint64_t v104 = *(void *)(v293 + 16);
              uint64_t v282 = v104;
              sub_100A41EA4();
              sub_10018A1B4();
              uint64_t v106 = v267;
              sub_1001668D8(v105 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v267, (void (*)(void))type metadata accessor for ModalViewState);
              int v107 = swift_getEnumCaseMultiPayload();
              if (v107 == 4)
              {
                sub_1001A1B3C(v106, (void (*)(void))type metadata accessor for ModalViewState, (uint64_t)&v284);
                type metadata accessor for ModalViewState.MapViewModal(0);
                uint64_t v195 = sub_10011C004();
                if (_s7Weather24LocationCompositionStateOwet_0(v195, v196, v197) == 1)
                {
                  sub_100178110(v254, &qword_100E663E8);
                  uint64_t v108 = v269;
LABEL_74:
                  uint64_t v104 = v263;
                  uint64_t v198 = sub_10011C004();
                  _s7Weather24LocationCompositionStateOwst_0(v198, v199, 1, (uint64_t)v268);
                  sub_10015918C(v267, (void (*)(void))type metadata accessor for ModalViewState);
                  goto LABEL_76;
                }
              }
              else
              {
                uint64_t v108 = v269;
                if (v107) {
                  goto LABEL_74;
                }
                uint64_t v106 = v267;
                sub_1001A1B3C(v267, (void (*)(void))type metadata accessor for ModalViewState, (uint64_t)&v280);
              }
              uint64_t v68 = v74;
              uint64_t v200 = v253;
              sub_100116FA0(v104, v253, (void (*)(void))type metadata accessor for LocationPreviewViewState);
              sub_10015918C(v106, (void (*)(void))type metadata accessor for ModalViewState);
              sub_1001A1B3C(v200, (void (*)(void))type metadata accessor for PreviewLocation, (uint64_t)&v293);
              uint64_t v74 = v68;
              sub_1001A369C();
              sub_10018AC90();
              uint64_t v48 = v268;
              sub_10015918C(v201, v202);
              a1 = v289;
              sub_100184E48();
              _s7Weather24LocationCompositionStateOwst_0(v203, v204, v205, v206);
              uint64_t v108 = v269;
LABEL_76:
              uint64_t v207 = sub_10011C004();
              if (_s7Weather24LocationCompositionStateOwet_0(v207, v208, (uint64_t)v268) == 1)
              {
                sub_100178110(v104, &qword_100E663D8);
                uint64_t v209 = sub_1001A2FDC();
LABEL_84:
                sub_100188CA8(v209, (void (*)(void))type metadata accessor for EnvironmentAction);
                sub_100178110(v108, &qword_100E639E8);
                goto LABEL_86;
              }
              unint64_t v77 = v262;
              sub_1001668D8(v104, v262, (void (*)(void))type metadata accessor for PreviewLocation);
              int v210 = swift_getEnumCaseMultiPayload();
              if ((v210 - 2) >= 2)
              {
                if (v210)
                {
                  uint64_t v212 = v249;
                  uint64_t v213 = v250;
                  sub_1001190D4();
                  v214();
                  LocationOfInterest.location.getter();
                  uint64_t v215 = v212;
                  uint64_t v104 = v263;
                  uint64_t v216 = v213;
                  uint64_t v108 = v269;
                  (*v236)(v215, v216);
                }
                else
                {
                  sub_100182728();
                  sub_1001190D4();
                  v211();
                }
              }
              else
              {
                sub_10015918C(v262, (void (*)(void))type metadata accessor for PreviewLocation);
              }
              sub_10018AC90();
              uint64_t v217 = v108;
              uint64_t v218 = v290;
              _s7Weather24LocationCompositionStateOwst_0(v217, v219, 1, v290);
              sub_10015918C(v104, (void (*)(void))type metadata accessor for PreviewLocation);
              uint64_t v220 = v218;
              uint64_t v108 = v269;
              uint64_t v209 = _s7Weather24LocationCompositionStateOwet_0(v269, 1, v220);
              if (v209 == 1) {
                goto LABEL_84;
              }
              sub_100182728();
              uint64_t v221 = v73;
              uint64_t v222 = v74;
              uint64_t v223 = v251;
              sub_1001190D4();
              v224();
              sub_100A41D0C(v223, 0, v225, v226, v227, v228, v229, v230, (uint64_t)v233, (uint64_t)v234, (uint64_t)v235, (uint64_t)v236, v237, v238, v239, *((uint64_t *)&v239 + 1), v240, v241, (uint64_t)v242,
                (uint64_t)v243);
              sub_1001A02E0();
              uint64_t v74 = v222;
              uint64_t v73 = v221;
              unint64_t v77 = (unint64_t)v277;
              a1 = v289;
              uint64_t v48 = v264;
              sub_100162F0C();
              uint64_t v232 = v231();
              sub_100188CA8(v232, (void (*)(void))type metadata accessor for EnvironmentAction);
LABEL_86:
              uint64_t v71 = v288;
              break;
            case 3:
              sub_10015918C(v283, (void (*)(void))type metadata accessor for EnvironmentAction);
              uint64_t v80 = v278;
              uint64_t v79 = type metadata accessor for EnvironmentAction;
              goto LABEL_6;
            case 4:
              sub_100188CA8(EnumCaseMultiPayload, (void (*)(void))type metadata accessor for EnvironmentAction);
              sub_10019B804();
              goto LABEL_22;
            case 9:
              sub_100188CA8(EnumCaseMultiPayload, (void (*)(void))type metadata accessor for EnvironmentAction);
              sub_10019B804();
              sub_1001EB5EC(*(void *)v163, *(void *)(v163 + 8));
              goto LABEL_7;
            default:
LABEL_18:
              uint64_t v79 = type metadata accessor for EnvironmentAction;
              uint64_t v91 = &v306;
              goto LABEL_29;
          }
          goto LABEL_7;
        case 3u:
          uint64_t v92 = v284;
          sub_100116FA0((uint64_t)v66, v284, (void (*)(void))type metadata accessor for LocationsAction);
          sub_1001A1B3C(v92, (void (*)(void))type metadata accessor for LocationsAction, (uint64_t)v304);
          uint64_t v93 = swift_getEnumCaseMultiPayload();
          switch((int)v93)
          {
            case 1:
              sub_100182728();
              unint64_t v109 = v77;
              uint64_t v110 = v260;
              sub_1001190D4();
              v111();
              sub_10018A1B4();
              sub_1001A2A2C(v112 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v113, (void (*)(void))type metadata accessor for TimeState);
              sub_100162CDC();
              uint64_t v73 = v287;
              uint64_t v48 = v281;
              sub_10017F730();
              sub_10005FF78(v114, v115, v116, v117, v118, v119, 0, 0, 0, 0, (uint64_t)v233, (uint64_t)v234, (uint64_t)v235, (uint64_t)v236, v237, v238, v239, *((uint64_t *)&v239 + 1), v240,
                v241,
                (uint64_t)v242,
                (uint64_t)v243);
              sub_1001842CC(v120, (void (*)(void))type metadata accessor for TimeState);
              sub_100184E48();
              sub_1001822C8();
              sub_10016546C();
              sub_1001A02E0();
              uint64_t v121 = v110;
              unint64_t v77 = v109;
              uint64_t v71 = v288;
              v122(v121, v290);
              goto LABEL_28;
            case 2:
              uint64_t v234 = v66;
              uint64_t v235 = v74;
              sub_100162CDC();
              swift_bridgeObjectRelease();
              uint64_t v123 = swift_bridgeObjectRelease();
              __chkstk_darwin(v123);
              swift_bridgeObjectRetain();
              uint64_t v124 = v247;
              sub_100A95BE4();
              uint64_t v126 = sub_100B71D20(v125);
              uint64_t v247 = v124;
              swift_bridgeObjectRelease();
              uint64_t v127 = v126[2];
              if (v127)
              {
                uint64_t v128 = v257;
                uint64_t v129 = (uint64_t)v126
                     + ((*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80));
                uint64_t v233 = v126;
                swift_bridgeObjectRetain();
                uint64_t v282 = *(void *)(v128 + 72);
                int v130 = _swiftEmptyArrayStorage;
                a1 = v290;
                uint64_t v131 = v255;
                uint64_t v68 = (uint8_t *)&qword_100E639E8;
                uint64_t v126 = v256;
                do
                {
                  sub_10006DF38(v129, v131, &qword_100E639E8);
                  sub_100360330(v131, (uint64_t)v126);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, a1) == 1)
                  {
                    sub_100178110((uint64_t)v126, &qword_100E639E8);
                  }
                  else
                  {
                    uint64_t v132 = *v291;
                    uint64_t v133 = v276;
                    (*v291)(v276, (uint64_t)v126, a1);
                    v132(v292, v133, a1);
                    if (swift_isUniquelyReferenced_nonNull_native()) {
                      uint64_t v134 = (uint64_t)v130;
                    }
                    else {
                      uint64_t v134 = sub_1001D262C(0, v130[2] + 1, 1, (uint64_t)v130);
                    }
                    unint64_t v77 = *(void *)(v134 + 16);
                    unint64_t v135 = *(void *)(v134 + 24);
                    uint64_t v68 = (uint8_t *)&qword_100E639E8;
                    if (v77 >= v135 >> 1) {
                      uint64_t v134 = sub_1001D262C(v135 > 1, v77 + 1, 1, v134);
                    }
                    *(void *)(v134 + 16) = v77 + 1;
                    int v130 = (void *)v134;
                    a1 = v290;
                    v132(v134+ ((*(unsigned __int8 *)(v285 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v285 + 80))+ *(void *)(v285 + 72) * v77, v292, v290);
                    sub_10018AC90();
                  }
                  v129 += v282;
                  --v127;
                }
                while (v127);
                swift_bridgeObjectRelease_n();
              }
              else
              {
                swift_bridgeObjectRelease();
                int v130 = _swiftEmptyArrayStorage;
                a1 = v290;
                uint64_t v68 = (uint8_t *)&qword_100E639E8;
              }
              if (qword_100E62818 != -1) {
                swift_once();
              }
              uint64_t v184 = type metadata accessor for Logger();
              sub_1002102B0(v184, (uint64_t)qword_100F51F50);
              uint64_t v185 = (uint64_t)v130;
              swift_bridgeObjectRetain_n();
              uint64_t v186 = Logger.logObject.getter();
              os_log_type_t v187 = static os_log_type_t.default.getter();
              int v188 = v187;
              if (os_log_type_enabled(v186, v187))
              {
                uint64_t v189 = swift_slowAlloc();
                LODWORD(v233) = v188;
                uint64_t v190 = v189;
                uint64_t v298 = swift_slowAlloc();
                *(_DWORD *)uint64_t v190 = v239;
                uint64_t v301 = 1752392040;
                uint64_t v126 = v242;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v190 + 12) = 2081;
                uint64_t v282 = v190 + 14;
                swift_bridgeObjectRetain();
                a1 = Array.description.getter();
                unint64_t v192 = v191;
                swift_bridgeObjectRelease();
                uint64_t v301 = sub_10016414C(a1, v192, &v298);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v186, (os_log_type_t)v233, "Fetching weather for new locations found in saved location sync, newLocations=%{private,mask.hash}s", (uint8_t *)v190, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              uint64_t v66 = v234;
              sub_100181C20();
              sub_1001A2A2C(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v193, (void (*)(void))type metadata accessor for TimeState);
              uint64_t v48 = v281;
              uint64_t v73 = v77;
              sub_10019DCC0(v185, (uint64_t)v126, (uint64_t)v281, v77, v287, (uint64_t)&v305);
              sub_10015918C(a1, (void (*)(void))type metadata accessor for TimeState);
              sub_100178110((uint64_t)v126, &qword_100E639E8);
              uint64_t v71 = v282;
              sub_10005EC80();
              uint64_t v194 = swift_bridgeObjectRelease();
              sub_100182E1C(v194, (void (*)(void))type metadata accessor for LocationsAction);
              sub_100185FF8();
              uint64_t v74 = v235;
              sub_1001A369C();
              sub_100184E48();
              sub_1001822C8();
              goto LABEL_7;
            case 3:
            case 4:
LABEL_28:
              uint64_t v79 = type metadata accessor for LocationsAction;
              uint64_t v91 = &v307;
LABEL_29:
              uint64_t v80 = *(v91 - 32);
              goto LABEL_6;
            case 5:
              sub_100182E1C(v93, (void (*)(void))type metadata accessor for LocationsAction);
              goto LABEL_22;
            case 6:
              sub_100182E1C(v93, (void (*)(void))type metadata accessor for LocationsAction);
              sub_10015303C(*(void *)v280, *(void *)(v280 + 8), *(unsigned char *)(v280 + 16));
              goto LABEL_7;
            default:
              uint64_t v235 = v74;
              sub_100162CDC();
              uint64_t v94 = v266;
              sub_100116FA0(v280, v266, (void (*)(void))&type metadata accessor for CurrentLocation);
              CurrentLocation.location.getter();
              if (_s7Weather24LocationCompositionStateOwet_0(a1, 1, v290) == 1)
              {
                uint64_t v95 = sub_10015918C(v94, (void (*)(void))&type metadata accessor for CurrentLocation);
                sub_100182E1C(v95, (void (*)(void))type metadata accessor for LocationsAction);
                sub_100178110(a1, &qword_100E639E8);
                sub_1001822C8();
                sub_10018AC90();
              }
              else
              {
                sub_100182728();
                sub_1001190D4();
                v164();
                static os_signpost_type_t.event.getter();
                unint64_t v77 = v293;
                a1 = *(void *)(v293 + 104);
                static OSSignpostID.exclusive.getter();
                os_signpost(_:dso:log:name:signpostID:)();
                uint64_t v71 = v288;
                sub_100162F0C();
                v165();
                sub_10018A1B4();
                sub_1001A2A2C(v166 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v167, (void (*)(void))type metadata accessor for TimeState);
                uint64_t v73 = (uint64_t)v281;
                sub_10018AC90();
                sub_10017F730();
                sub_10005FF78(v168, v169, v170, v171, v172, v173, 1, 0, 0, 0, (uint64_t)v233, (uint64_t)v234, (uint64_t)v235, (uint64_t)v236, v237, v238, v239, *((uint64_t *)&v239 + 1), v240,
                  v241,
                  (uint64_t)v242,
                  (uint64_t)v243);
                sub_1001842CC(v174, (void (*)(void))type metadata accessor for TimeState);
                sub_10016546C();
                sub_1001A02E0();
                uint64_t v48 = v264;
                sub_100162F0C();
                v175();
                uint64_t v176 = sub_10015918C(v266, (void (*)(void))&type metadata accessor for CurrentLocation);
                sub_100182E1C(v176, (void (*)(void))type metadata accessor for LocationsAction);
                sub_1001822C8();
              }
              uint64_t v74 = v235;
              goto LABEL_7;
          }
        case 0xCu:
        case 0xFu:
        case 0x12u:
          goto LABEL_7;
        case 0x10u:
LABEL_22:
          swift_bridgeObjectRelease();
          goto LABEL_7;
        case 0x13u:
          sub_100181C20();
          sub_1001A2A2C(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v96, (void (*)(void))type metadata accessor for TimeState);
          sub_1001D22E4();
          sub_100063DCC(v97, v98, v99, v100, v101, v286, a1);
          sub_1001842CC(v102, (void (*)(void))type metadata accessor for TimeState);
          uint64_t v103 = sub_100186E64();
          sub_100178110(v103, &qword_100E639E8);
          goto LABEL_7;
        default:
          LODWORD(v282) = *v66;
          if (v282 > 1) {
            goto LABEL_7;
          }
          if (qword_100E62818 != -1) {
            swift_once();
          }
          uint64_t v81 = type metadata accessor for Logger();
          sub_1002102B0(v81, (uint64_t)qword_100F51F50);
          uint64_t v82 = Logger.logObject.getter();
          os_log_type_t v83 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v82, v83))
          {
            uint64_t v68 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v68 = 0;
            _os_log_impl((void *)&_mh_execute_header, v82, v83, "WeatherDataStoreObserver: Calling fetchWeatherForAllUserLocations for .didFinishLaunch .willEnterForeground event", v68, 2u);
            sub_1001A369C();
            swift_slowDealloc();
          }

          uint64_t v84 = v293;
          sub_10001B1D4(*(void *)(v294 + 64), v71);
          if (!v282)
          {
            sub_10020D948(v245, (uint64_t)&v298);
            uint64_t v235 = (uint8_t *)sub_1001B1E64(&v298, v300);
            uint64_t v85 = v265;
            sub_10006DF38(v71, v265, &qword_100E639E8);
            uint64_t v86 = sub_10011C004();
            if (_s7Weather24LocationCompositionStateOwet_0(v86, v87, v290) == 1)
            {
              sub_100178110(v85, &qword_100E639E8);
              static Location.currentLocationID.getter();
              uint64_t v68 = v88;
            }
            else
            {
              sub_100162CDC();
              uint64_t v136 = v48;
              uint64_t v137 = v258;
              Location.identifier.getter();
              sub_1001A02E0();
              sub_100162F0C();
              v138();
              Location.Identifier.id.getter();
              uint64_t v68 = v139;
              uint64_t v140 = v137;
              uint64_t v48 = v136;
              uint64_t v73 = v272;
              unint64_t v77 = (unint64_t)v277;
              (*v243)(v140, v259);
            }
            uint64_t v84 = *(void *)v235;
            sub_10021E3FC();
            swift_bridgeObjectRelease();
            _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v298);
            uint64_t v71 = v288;
            sub_1001A369C();
          }
          sub_10018A1B4();
          sub_1001668D8(v141 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v48, (void (*)(void))type metadata accessor for ViewState);
          uint64_t v142 = (int *)v271;
          sub_1001A1B3C((uint64_t)&v48[*(int *)(v271 + 20)], (void (*)(void))type metadata accessor for ViewState.SecondaryViewState, (uint64_t)v299);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_10015918C(v84, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_62:
            sub_10015918C((uint64_t)v48, (void (*)(void))type metadata accessor for ViewState);
            uint64_t v144 = v286;
            goto LABEL_63;
          }
          if (*(void *)&v246[v142[9]] == 1)
          {
            uint64_t v142 = (int *)[self currentDevice];
            [v142 userInterfaceIdiom];

            if ((v48[*(int *)(v271 + 28)] & 1) == 0)
            {
              swift_release();
              goto LABEL_62;
            }
          }
          sub_10015918C((uint64_t)v48, (void (*)(void))type metadata accessor for ViewState);
          swift_release();
          int v143 = _s7Weather24LocationCompositionStateOwet_0(v71, 1, v290);
          uint64_t v144 = v286;
          if (v143 == 1)
          {
            uint64_t v145 = *(void *)(v294 + 64);
            uint64_t v146 = v73;
            uint64_t v147 = v286;
            swift_beginAccess();
            type metadata accessor for EnvironmentState();
            uint64_t v71 = v275;
            sub_1001A2FDC();
            sub_1001A2A2C(v145 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v148, (void (*)(void))type metadata accessor for TimeState);
            sub_1001D22E4();
            uint64_t v149 = v147;
            uint64_t v73 = v146;
            uint64_t v48 = v264;
            sub_100063DCC(v150, v151, v152, v153, v154, v149, v145);
            sub_10015918C(v145, (void (*)(void))type metadata accessor for TimeState);
            uint64_t v155 = sub_100186E64();
            sub_100178110(v155, &qword_100E639E8);
            uint64_t v156 = v71;
            goto LABEL_64;
          }
LABEL_63:
          sub_10018A1B4();
          sub_1001A2A2C(v177 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v178, (void (*)(void))type metadata accessor for TimeState);
          sub_1001D22E4();
          sub_100063DCC(v179, v180, v181, v182, v183, v144, (uint64_t)v142);
          sub_10015918C((uint64_t)v142, (void (*)(void))type metadata accessor for TimeState);
          uint64_t v156 = v71;
LABEL_64:
          sub_100178110(v156, &qword_100E639E8);
          a1 = v289;
LABEL_7:
          if (v75 == v68)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_88;
          }
          break;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_88:
    swift_bridgeObjectRelease();
  }
}

void sub_100115DB4()
{
  sub_1001888D0();
  sub_10020FA74(v0, v1, v2, v3, v4, v5, v6, 0x776569566E69614DLL, v7);
}

void sub_100115E04()
{
  sub_1001870A8();
  sub_10017C720();
  sub_1001CA768(v0, v1, v2, v3, v4, v5, (uint64_t)"LocationViewerInput", v6);
}

void sub_100115E48()
{
  sub_10018AFA0();
  sub_10017C720();
  sub_1001D1500(v0, v1, v2, v3, v4, 0x6E6F697461636F4CLL, v5, v6, v7);
}

void sub_100115E88()
{
  sub_10018469C();
  sub_10017C720();
  sub_1001D135C();
  sub_10020FA74(v0, v1, v2, v3, v4, v5, v6, 0xD00000000000001FLL, v7);
}

unint64_t sub_100115EDC()
{
  unint64_t result = qword_100EA0210;
  if (!qword_100EA0210)
  {
    sub_10018C6DC(&qword_100E75530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0210);
  }
  return result;
}

uint64_t sub_100115F30(void *a1, char a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = &_swiftEmptyArrayStorage;
  uint64_t v11 = sub_100116D04(a1);
  uint64_t v29 = v3;
  uint64_t v30 = (void **)&v35;
  uint64_t v31 = a3;
  char v32 = a2;
  uint64_t v12 = sub_1001162E8((void (*)(void))sub_100116438, (uint64_t)v28, (uint64_t)v11);
  static Logger.geocode.getter();
  swift_bridgeObjectRetain();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v7;
    uint64_t v16 = v15;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v34 = v25;
    *(_DWORD *)uint64_t v16 = 134350339;
    uint64_t v27 = v12;
    swift_beginAccess();
    uint64_t v17 = (uint64_t)v35;
    uint64_t v33 = v35[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2050;
    uint64_t v24 = v8;
    uint64_t v18 = v11[2];
    swift_bridgeObjectRelease();
    uint64_t v33 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2160;
    uint64_t v33 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 32) = 1025;
    LODWORD(v33) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 38) = 2160;
    uint64_t v33 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 48) = 2081;
    uint64_t v33 = v17;
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100EB6220);
    uint64_t v19 = String.init<A>(reflecting:)();
    uint64_t v33 = sub_10016414C(v19, v20, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "About to reverse geocode locations from the sample. ratio=(%{public}ld/%{public}ld, invalidateLocations=%{BOOL,private,mask.hash}d, locations=%{private,mask.hash}s", (uint8_t *)v16, 0x3Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v26);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v21 = (void *)zalgo.getter();
  type metadata accessor for SavedLocation();
  uint64_t v22 = when<A>(on:_:)();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v22;
}

void *sub_1001162E8(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  unint64_t result = &_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v8 = type metadata accessor for SavedLocation();
    sub_100164920(v8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v12 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10017AADC();
      a1();
      if (v3) {
        break;
      }
      if (v13)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v10 += v12;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        return &_swiftEmptyArrayStorage;
      }
    }
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100116438@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10011645C(a1, *(void **)(v2 + 16), *(uint64_t **)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

uint64_t sub_10011645C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  int v64 = a5;
  uint64_t v74 = a4;
  uint64_t v75 = a6;
  uint64_t v68 = a3;
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v61 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for Location();
  uint64_t v62 = *(void *)(v69 - 8);
  uint64_t v10 = __chkstk_darwin(v69);
  uint64_t v63 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v79 = (char *)&v59 - v12;
  uint64_t v65 = sub_10017DF08(&qword_100E97190);
  uint64_t v67 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v66 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for Location.Identifier();
  uint64_t v14 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v78 = (void (**)(char *, uint64_t))type metadata accessor for SavedLocation.Placeholder();
  uint64_t v76 = (uint64_t)*(v78 - 1);
  __chkstk_darwin(v78);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SavedLocation();
  uint64_t v71 = *(void *)(v19 - 8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v72 = v21;
  uint64_t v73 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v59 - v22;
  sub_10016698C(a1, (uint64_t)&v59 - v22, (void (*)(void))&type metadata accessor for SavedLocation);
  uint64_t v70 = v19;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, void (**)(char *, uint64_t)))(v76 + 32))(v18, v23, v78);
    sub_1001B1E64(a2 + 12, a2[15]);
    SavedLocation.Placeholder.identifier.getter();
    char v24 = dispatch thunk of GeocodingSamplerType.canGeocodeLocation(_:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v77);
    uint64_t v25 = v66;
    uint64_t v26 = *(int *)(v65 + 48);
    sub_10016698C(a1, v66, (void (*)(void))&type metadata accessor for SavedLocation);
    *(unsigned char *)(v25 + v26) = v24 & 1;
    uint64_t v27 = v68;
    sub_100116C84();
    uint64_t v28 = *(void *)(*v27 + 16);
    sub_100116C6C(v28);
    uint64_t v29 = *v27;
    *(void *)(v29 + 16) = v28 + 1;
    sub_100116C9C(v25, v29+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v28);
    sub_1001B1E64(a2 + 6, a2[9]);
    dispatch thunk of GeocodeManagerType.reverseGeocode(placeholder:ignoreTimeZoneExpiration:qos:)();
    (*(void (**)(char *, void))(v76 + 8))(v18, v78);
    uint64_t v30 = v75;
    uint64_t v31 = a1;
    uint64_t v32 = (uint64_t)v73;
    uint64_t v33 = v71;
LABEL_10:
    uint64_t v55 = (void *)zalgo.getter();
    Promise.then<A>(on:closure:)();

    sub_10016698C(v31, v32, (void (*)(void))&type metadata accessor for SavedLocation);
    unint64_t v56 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v57 = swift_allocObject();
    sub_100117050(v32, v57 + v56, (void (*)(void))&type metadata accessor for SavedLocation);
    uint64_t v58 = (void *)zalgo.getter();
    uint64_t v47 = Promise.recover(on:closure:)();
    swift_release();
    swift_release();

    uint64_t result = swift_release();
    goto LABEL_11;
  }
  uint64_t v76 = a1;
  uint64_t v34 = v62;
  id v78 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v35 = v79;
  uint64_t v36 = v69;
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v79, v23, v69);
  uint64_t v37 = a2;
  sub_1001B1E64(a2 + 12, a2[15]);
  Location.identifier.getter();
  char v38 = dispatch thunk of GeocodingSamplerType.canGeocodeLocation(_:)();
  (*v78)(v16, v77);
  uint64_t v39 = v63;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v63, v35, v36);
  uint64_t v40 = v36;
  uint64_t v60 = v37;
  if (v38)
  {
    uint64_t v41 = *(void (**)(char *, uint64_t))(v34 + 8);
    v41(v39, v36);
LABEL_8:
    uint64_t v30 = v75;
    uint64_t v31 = v76;
    goto LABEL_9;
  }
  uint64_t v42 = (uint64_t)v61;
  Location.lastRefreshDate.getter();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v43 = v40;
  v41(v39, v40);
  uint64_t v44 = type metadata accessor for Date();
  int v45 = _s7Weather24LocationCompositionStateOwet_0(v42, 1, v44);
  sub_100178160(v42, (uint64_t *)&unk_100E73CA0);
  if (v45 == 1) {
    goto LABEL_8;
  }
  uint64_t v30 = v75;
  uint64_t v31 = v76;
  if (v64)
  {
LABEL_9:
    uint64_t v49 = v67;
    uint64_t v48 = v68;
    uint64_t v50 = v66;
    uint64_t v51 = *(int *)(v65 + 48);
    sub_10016698C(v31, v66, (void (*)(void))&type metadata accessor for SavedLocation);
    *(unsigned char *)(v50 + v51) = v38 & 1;
    sub_100116C84();
    uint64_t v52 = *(void *)(*v48 + 16);
    sub_100116C6C(v52);
    uint64_t v53 = *v48;
    *(void *)(v53 + 16) = v52 + 1;
    sub_100116C9C(v50, v53+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v52);
    sub_1001B1E64(v60 + 6, v60[9]);
    uint64_t v54 = v79;
    dispatch thunk of GeocodeManagerType.reverseGeocode(location:forceUpdate:ignoreTimeZoneExpiration:qos:)();
    v41(v54, v69);
    uint64_t v32 = (uint64_t)v73;
    uint64_t v33 = v71;
    goto LABEL_10;
  }
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v41)(v79, v43);
  uint64_t v47 = 0;
LABEL_11:
  *uint64_t v30 = v47;
  return result;
}

uint64_t sub_100116C6C(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_10012BC94);
}

uint64_t sub_100116C84()
{
  return sub_100129E78((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10012BC94);
}

uint64_t sub_100116C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E97190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100116D04(void *a1)
{
  uint64_t v3 = type metadata accessor for SavedLocation();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 88) == 1)
  {
    static Logger.geocode.getter();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v14 = a1[2];
    if (v14)
    {
      uint64_t v21 = &_swiftEmptyArrayStorage;
      sub_10018D170();
      unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v16 = (uint64_t)a1 + v15;
      a1 = v21;
      uint64_t v17 = *(void *)(v4 + 72);
      do
      {
        sub_100177B4C(v16, (uint64_t)v6);
        uint64_t v21 = a1;
        unint64_t v18 = a1[2];
        if (v18 >= a1[3] >> 1)
        {
          sub_10018D170();
          a1 = v21;
        }
        a1[2] = v18 + 1;
        sub_100117050((uint64_t)v6, (uint64_t)a1 + v15 + v18 * v17, (void (*)(void))&type metadata accessor for SavedLocation);
        v16 += v17;
        --v14;
      }
      while (v14);
    }
    else
    {
      return &_swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100116FA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_100116FFC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100117050(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_1001170B0(char a1)
{
  sub_1001AB3E0();
  uint64_t v2 = (void *)static OS_dispatch_queue.main.getter();
  sub_10017DF08(&qword_100EB6218);
  firstly<A, B>(on:disposeOn:closure:)();

  uint64_t v3 = (void *)static OS_dispatch_queue.geocode.getter();
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  sub_10017DF08(&qword_100E97F18);
  Promise.then<A, B>(on:disposeOn:closure:)();
  swift_release();

  swift_release();
  id v4 = (id)static OS_dispatch_queue.main.getter();
  Promise.then<A, B>(on:disposeOn:closure:)();
  swift_release();
  swift_release();
}

uint64_t type metadata accessor for LocationViewerStoreObserver()
{
  uint64_t result = qword_100EA3500;
  if (!qword_100EA3500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100117298(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for Location.Identifier();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Location();
  uint64_t v30 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v33 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NotificationSubscription.Location();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NotificationsAction();
  __chkstk_darwin(v15);
  uint64_t v17 = (unsigned __int8 *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100166618(a1, (uint64_t)v17, (void (*)(void))type metadata accessor for NotificationsAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v26 = sub_10017DF08((uint64_t *)&unk_100EAC3E0);
      sub_1001781AC((uint64_t)&v17[*(int *)(v26 + 48)], &qword_100E749B0);
      uint64_t v19 = type metadata accessor for NotificationLocation;
      goto LABEL_7;
    case 2:
      uint64_t v20 = &v17[*(int *)(sub_10017DF08(&qword_100E6F630) + 48)];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v12 + 32))(v14, v17, v11);
      uint64_t v21 = v33;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v33 + 32))(v10, v20, v8);
      sub_1006BC908((uint64_t)v14, (uint64_t)v10, (void (*)(void))&type metadata accessor for NotificationSubscription.Location, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of NotificationSubscriptionManagerType.subscribe(to:for:), (uint64_t)&NotificationSubscription.Location.id.getter, (uint64_t)"Failed to subscribe to notifications for location: %{private,mask.hash}s with error: %{public}s %@");
      (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      break;
    case 3:
    case 4:
      uint64_t v19 = type metadata accessor for NotificationsAction;
LABEL_7:
      uint64_t result = sub_100158EDC((uint64_t)v17, (void (*)(void))v19);
      break;
    case 5:
      uint64_t v22 = &v17[*(int *)(sub_10017DF08(&qword_100E6F638) + 48)];
      uint64_t v23 = v30;
      uint64_t v24 = v28;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v30 + 32))(v7, v17, v28);
      uint64_t v25 = v33;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v33 + 32))(v10, v22, v8);
      Location.identifier.getter();
      sub_1006BC908((uint64_t)v5, (uint64_t)v10, (void (*)(void))&type metadata accessor for Location.Identifier, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of NotificationSubscriptionManagerType.unsubscribe(from:for:), (uint64_t)&Location.Identifier.id.getter, (uint64_t)"Failed to unsubscribe from notifications for location: %{private,mask.hash}s with error: %{public}s %@");
      (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v32);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v24);
      break;
    case 6:
    case 7:
      return result;
    default:
      uint64_t result = sub_10021B4C4(*v17, v29);
      break;
  }
  return result;
}

uint64_t sub_1001177B0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EB8();
  sub_100157394(v1, v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  switch(sub_1001D255C())
  {
    case 1u:
      uint64_t v8 = sub_10017DF08(&qword_100E63748);
      uint64_t v9 = v1 + *(int *)(v8 + 48);
      uint64_t v10 = v1 + *(int *)(v8 + 64);
      sub_100178C8C(v1, a1, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v11 = type metadata accessor for WeatherData(0);
      sub_100182118(v11);
      sub_100156908(v10, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t result = sub_100156908(v9, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      break;
    case 3u:
      goto LABEL_3;
    default:
      sub_100156908(v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
LABEL_3:
      uint64_t v4 = type metadata accessor for WeatherData(0);
      uint64_t result = sub_100163050(a1, v5, v6, v4);
      break;
  }
  return result;
}

uint64_t sub_100117910(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

void sub_10011796C()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v5 = sub_1001191B4();
  uint64_t v6 = type metadata accessor for ModalViewState(v5);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v88 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  sub_100128F8C();
  uint64_t v87 = v10;
  uint64_t v11 = sub_100129064();
  uint64_t v12 = type metadata accessor for ViewState(v11);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  uint64_t v90 = (uint64_t)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v15);
  sub_100128F8C();
  uint64_t v89 = v16;
  sub_100129064();
  uint64_t v17 = type metadata accessor for TimeState();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v92 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  sub_100128F8C();
  uint64_t v91 = v21;
  sub_100129064();
  uint64_t v22 = type metadata accessor for NotificationsOptInState();
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_10017EFE0(v24, v86);
  __chkstk_darwin(v25);
  sub_100128F8C();
  uint64_t v93 = v26;
  sub_100129064();
  uint64_t v27 = type metadata accessor for LocationsState();
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  uint64_t v95 = (uint64_t)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v30);
  sub_10011BA50();
  uint64_t v31 = type metadata accessor for EnvironmentState();
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_100158494();
  __chkstk_darwin(v33);
  uint64_t v34 = type metadata accessor for AppConfigurationState();
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100119488();
  __chkstk_darwin(v36);
  char v38 = (char *)&v86 - v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_1001195A8();
  sub_1001191CC(v39, v40);
  char v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v42 & 1) != 0 && *(unsigned __int8 *)(v1 + 24) == *(unsigned __int8 *)(v4 + 24))
  {
    uint64_t v43 = v1;
    sub_10011818C();
    sub_10011818C();
    sub_100127A9C();
    char v44 = static AppConfiguration.== infix(_:_:)();
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for AppConfigurationState);
    sub_1001184F4((uint64_t)v38, (void (*)(void))type metadata accessor for AppConfigurationState);
    if (v44)
    {
      sub_10019AA4C();
      sub_10011818C();
      sub_10019AA4C();
      sub_100181E80();
      sub_10011818C();
      int v45 = (unsigned __int8 *)sub_10011958C();
      char v47 = sub_10011C598(v45, v46);
      sub_1001184F4(v2, (void (*)(void))type metadata accessor for EnvironmentState);
      sub_1001195C8();
      if (v47)
      {
        sub_10011818C();
        uint64_t v48 = v95;
        sub_100128F98();
        uint64_t v49 = sub_10017B204();
        sub_1001266D8(v49, v50, v51, v52, v53, v54, v55, v56, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96,
          v97);
        char v58 = v57;
        sub_1001184F4(v48, (void (*)(void))type metadata accessor for LocationsState);
        sub_10011917C();
        if (v58)
        {
          uint64_t v59 = *(void *)(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
          uint64_t v60 = *(void *)(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
          char v61 = *(unsigned char *)(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 24);
          uint64_t v62 = *(void *)(v4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
          uint64_t v63 = *(void *)(v4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
          char v64 = *(unsigned char *)(v4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 24);
          uint64_t v65 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
          uint64_t v66 = *(unsigned __int8 *)(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v67 = sub_100119604(v66, v59, v60, v61, v65, v62, v63, v64);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v67)
          {
            sub_10011818C();
            uint64_t v68 = v94;
            sub_100128F98();
            uint64_t v69 = (unsigned __int8 *)sub_10017B204();
            char v71 = sub_1001197FC(v69, v70);
            sub_1001184F4(v68, (void (*)(void))type metadata accessor for NotificationsOptInState);
            sub_10011917C();
            if (v71)
            {
              sub_10011818C();
              uint64_t v72 = v92;
              sub_100128F98();
              sub_10017B204();
              char v73 = static Date.== infix(_:_:)();
              sub_1001184F4(v72, (void (*)(void))type metadata accessor for TimeState);
              sub_10011917C();
              if (v73)
              {
                sub_10011818C();
                uint64_t v74 = v90;
                sub_100128F98();
                sub_10017B204();
                sub_10011BAB4();
                char v76 = v75;
                sub_1001184F4(v74, (void (*)(void))type metadata accessor for ViewState);
                sub_10011917C();
                if (v76)
                {
                  sub_10011818C();
                  uint64_t v77 = v88;
                  sub_100128F98();
                  sub_10017B204();
                  sub_10011990C();
                  char v79 = v78;
                  sub_1001184F4(v77, (void (*)(void))type metadata accessor for ModalViewState);
                  sub_10011917C();
                  if (v79)
                  {
                    BOOL v80 = *(void *)(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData) == *(void *)(v4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData)
                       && *(void *)(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8) == *(void *)(v4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
                    if (v80 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      sub_10011AD08();
                      if ((v81 & 1) == 0)
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        goto LABEL_23;
                      }
                      sub_10011A5A0();
                      sub_10011A5D0();
                      char v83 = v82;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v83 & 1) != 0
                        && *(unsigned __int8 *)(v43 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState) == *(unsigned __int8 *)(v4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState))
                      {
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        sub_100127A9C();
                        sub_10011B100();
                        char v85 = v84;
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if (v85)
                        {
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          sub_10017B204();
                          sub_10011B3A8();
LABEL_23:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  sub_100119448();
  sub_100162694();
}

uint64_t sub_10011818C()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  sub_10008B8B4();
  v3();
  return v0;
}

uint64_t sub_1001181E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100118240(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001182A0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100118300(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100118360()
{
  swift_bridgeObjectRelease();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, (void (*)(void))type metadata accessor for AppConfigurationState);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment, (void (*)(void))type metadata accessor for EnvironmentState);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (void (*)(void))type metadata accessor for LocationsState);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, (void (*)(void))type metadata accessor for NotificationsOptInState);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (void (*)(void))type metadata accessor for TimeState);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (void (*)(void))type metadata accessor for ViewState);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (void (*)(void))type metadata accessor for ModalViewState);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1001184F4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

void sub_100118548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 68);

  uint64_t v7 = *(void **)(v6 + 40);
}

uint64_t sub_100118608(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      type metadata accessor for PreviewLocation();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v3 = type metadata accessor for Location();
          goto LABEL_13;
        case 1u:
          uint64_t v3 = type metadata accessor for LocationOfInterest();
LABEL_13:
          (*(void (**)(id *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
          break;
        case 2u:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v6 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
          uint64_t v7 = type metadata accessor for Location();
          if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
          }
          break;
        case 3u:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      a1 = (id *)((char *)a1 + *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20));
      type metadata accessor for LocationPreviewModalViewState(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_25;
        case 1:
          goto LABEL_26;
        case 2:
        case 3:
        case 4:
          goto LABEL_24;
        case 5:
          goto LABEL_30;
        case 6:
          goto LABEL_42;
        case 7:
          goto LABEL_35;
        case 8:
          goto LABEL_37;
        default:
          return result;
      }
    case 2:
    case 3:
      uint64_t result = swift_release();
      break;
    case 4:
      uint64_t v4 = type metadata accessor for ModalViewState.MapViewModal(0);
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4);
      if (!result)
      {
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v5 = type metadata accessor for Location();
            goto LABEL_19;
          case 1u:
            uint64_t v5 = type metadata accessor for LocationOfInterest();
LABEL_19:
            (*(void (**)(id *, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
            break;
          case 2u:

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v8 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
            uint64_t v9 = type metadata accessor for Location();
            if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
            }
            break;
          case 3u:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
        a1 = (id *)((char *)a1 + *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20));
        type metadata accessor for LocationPreviewModalViewState(0);
        uint64_t result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
            goto LABEL_25;
          case 1:
            goto LABEL_26;
          case 2:
          case 3:
          case 4:
            goto LABEL_24;
          case 5:
            goto LABEL_30;
          case 6:
LABEL_42:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v33 = (int *)type metadata accessor for NewsArticle();
            uint64_t v34 = (uint64_t)a1 + v33[6];
            uint64_t v35 = type metadata accessor for URL();
            if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
            }
            uint64_t v36 = (char *)a1 + v33[7];
            uint64_t v37 = type metadata accessor for Date();
            (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
            char v38 = *(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8);
            v38((char *)a1 + v33[8], v35);
            uint64_t v39 = (char *)a1 + v33[9];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v40 = (uint64_t)&v39[*(int *)(type metadata accessor for NewsChannel() + 24)];
            if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v35)) {
              v38((char *)v40, v35);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            break;
          case 7:
            goto LABEL_35;
          case 8:
            goto LABEL_37;
          default:
            return result;
        }
      }
      break;
    case 5:
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
LABEL_26:
          uint64_t v11 = type metadata accessor for DetailCondition();
          (*(void (**)(id *, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
          uint64_t v12 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v13 = (char *)a1 + v12[5];
          uint64_t v14 = type metadata accessor for Location();
          (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
          uint64_t v15 = (uint64_t)a1 + v12[6];
          uint64_t v16 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
          }
          uint64_t v17 = (uint64_t)a1 + v12[8];
          uint64_t v18 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v17, 1, (uint64_t)v18);
          if (!result)
          {
            swift_bridgeObjectRelease();
            char v41 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
            v41(v17 + v18[5], v16);
            v41(v17 + v18[6], v16);
            uint64_t v19 = v17 + v18[7];
            uint64_t v20 = v16;
            uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))v41;
            break;
          }
          return result;
        case 1:
        case 2:
        case 3:
LABEL_24:
          uint64_t v10 = type metadata accessor for Location();
          goto LABEL_38;
        case 4:
LABEL_30:
          uint64_t v22 = type metadata accessor for Location();
          (*(void (**)(id *, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
          uint64_t v23 = type metadata accessor for MoonDetailViewState();
          uint64_t v24 = (uint64_t)a1 + *(int *)(v23 + 20);
          uint64_t v25 = type metadata accessor for MoonDetailSelectedDate();
          if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25)
            && swift_getEnumCaseMultiPayload() <= 2)
          {
            uint64_t v26 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v24, v26);
          }
          uint64_t v27 = (uint64_t)a1 + *(int *)(v23 + 24);
          uint64_t v28 = type metadata accessor for Date();
          uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v27, 1, v28);
          if (result) {
            return result;
          }
          uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);
          uint64_t v19 = v27;
          uint64_t v20 = v28;
          break;
        case 5:
LABEL_35:
          uint64_t v29 = type metadata accessor for Location();
          (*(void (**)(id *, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
          uint64_t v30 = (uint64_t)a1 + *(int *)(type metadata accessor for AveragesDetailViewState() + 24);
          uint64_t v31 = type metadata accessor for DetailHeroChartLollipopPosition(0);
          uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v30, 1, v31);
          if (result) {
            return result;
          }
          a1 = (id *)(v30 + *(int *)(v31 + 20));
          uint64_t v10 = type metadata accessor for Date();
LABEL_38:
          uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
          uint64_t v20 = v10;
          uint64_t v19 = (uint64_t)a1;
          break;
        case 6:
LABEL_25:
          uint64_t v10 = type metadata accessor for URL();
          goto LABEL_38;
        case 7:
LABEL_37:
          uint64_t v32 = type metadata accessor for Location();
          (*(void (**)(id *, uint64_t))(*(void *)(v32 - 8) + 8))(a1, v32);
          a1 = (id *)((char *)a1 + *(int *)(type metadata accessor for HomeAndWorkRefinementViewState() + 20));
          uint64_t v10 = type metadata accessor for LocationOfInterest();
          goto LABEL_38;
        default:
          return result;
      }
      uint64_t result = v21(v19, v20);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100118EE0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_100118F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentLocation();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)
    && swift_getEnumCaseMultiPayload() <= 2)
  {
    uint64_t v5 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10015303C(*(void *)(a1 + *(int *)(a2 + 48)), *(void *)(a1 + *(int *)(a2 + 48) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 48) + 16));

  return swift_bridgeObjectRelease();
}

uint64_t sub_100119070(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppConfiguration();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1001190E0()
{
  return 0;
}

uint64_t sub_100119118()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100119134(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

uint64_t sub_10011917C()
{
  return sub_1001184F4(v1, v0);
}

double sub_100119194()
{
  return v0;
}

uint64_t sub_1001191B4()
{
  return 0;
}

void sub_1001191CC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100214EF8();
    if (v28)
    {
      uint64_t v4 = 0;
      uint64_t v5 = *(void *)(v3 + 56);
      uint64_t v34 = v3 + 56;
      uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
      if (v6 < 64) {
        uint64_t v7 = ~(-1 << v6);
      }
      else {
        uint64_t v7 = -1;
      }
      unint64_t v8 = v7 & v5;
      int64_t v35 = (unint64_t)(v6 + 63) >> 6;
      uint64_t v9 = a2 + 56;
      if ((v7 & v5) == 0) {
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      uint64_t v36 = v4;
      for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = v18 + (v17 << 6))
      {
        uint64_t v19 = v3;
        uint64_t v20 = (uint64_t *)(*(void *)(v3 + 48) + 16 * i);
        uint64_t v22 = *v20;
        uint64_t v21 = v20[1];
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v23 = Hasher._finalize()();
        uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v25 = v23 & ~v24;
        if (((*(void *)(v9 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
          goto LABEL_39;
        }
        uint64_t v26 = *(void *)(a2 + 48);
        uint64_t v27 = (void *)(v26 + 16 * v25);
        BOOL v28 = *v27 == v22 && v27[1] == v21;
        if (!v28 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v29 = ~v24;
          for (unint64_t j = v25 + 1; ; unint64_t j = v31 + 1)
          {
            uint64_t v31 = j & v29;
            if (((*(void *)(v9 + (((j & v29) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v29)) & 1) == 0) {
              break;
            }
            uint64_t v32 = (void *)(v26 + 16 * v31);
            BOOL v33 = *v32 == v22 && v32[1] == v21;
            if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_28;
            }
          }
LABEL_39:
          swift_bridgeObjectRelease();
          return;
        }
LABEL_28:
        swift_bridgeObjectRelease();
        uint64_t v3 = v19;
        uint64_t v4 = v36;
        if (v8) {
          goto LABEL_8;
        }
LABEL_9:
        int64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        if (v12 >= v35) {
          return;
        }
        if (!*(void *)(v34 + 8 * v12))
        {
          if (v4 + 2 >= v35) {
            return;
          }
          if (!*(void *)(v34 + 8 * (v4 + 2)))
          {
            if (v4 + 3 >= v35) {
              return;
            }
            if (!*(void *)(v34 + 8 * (v4 + 3)))
            {
              uint64_t v13 = v4 + 4;
              if (v4 + 4 >= v35) {
                return;
              }
              if (!*(void *)(v34 + 8 * v13)) {
                break;
              }
            }
          }
        }
LABEL_21:
        sub_1002EE8D4();
        unint64_t v8 = v16 & v15;
        uint64_t v36 = v17;
      }
      while (1)
      {
        int64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v14 >= v35) {
          return;
        }
        ++v13;
        if (*(void *)(v34 + 8 * v14)) {
          goto LABEL_21;
        }
      }
LABEL_41:
      __break(1u);
    }
  }
}

uint64_t sub_100119448()
{
  return v0 & 1;
}

uint64_t sub_100119454()
{
  return v0;
}

uint64_t sub_100119464()
{
  return v0;
}

uint64_t sub_100119498()
{
  return swift_release();
}

uint64_t sub_1001194D4()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1001194F4()
{
  return type metadata accessor for WeatherData.WeatherStatisticsState(0);
}

double sub_100119514()
{
  return v0;
}

void sub_100119528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8 = *(_DWORD *)(v6 - 240);
  sub_100B639C4(a1, a2, a3, a4, a5, a6, v8);
}

uint64_t sub_100119564()
{
  return type metadata accessor for NewsDataModel();
}

uint64_t sub_10011958C()
{
  return v0;
}

uint64_t sub_100119598()
{
  return *(void *)(v0 - 88);
}

uint64_t sub_1001195A8()
{
  return v0;
}

uint64_t sub_1001195B4()
{
  return v0;
}

uint64_t sub_1001195C8()
{
  return sub_1001184F4(v1, v0);
}

uint64_t sub_1001195EC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100119604(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (sub_1001197F8(a1, a5) & 1) != 0 && (sub_10011968C(), (v10))
  {
    sub_10011968C();
    char v11 = a4 ^ a8 ^ 1;
    if ((v12 & 1) == 0) {
      char v11 = 0;
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

void sub_10011968C()
{
}

uint64_t sub_1001196D4()
{
  sub_10018AB30();
  uint64_t v4 = "userNotDetermined";
  uint64_t v5 = 0x7265746544746F6ELL;
  unint64_t v6 = 0xED000064656E696DLL;
  switch(v7)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6465776F6C6C61;
      break;
    case 2:
      uint64_t v5 = sub_1001D2588();
      break;
    case 3:
      unint64_t v6 = 0x8000000100C95C50;
      uint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  switch(v2)
  {
    case 1:
      unint64_t v0 = 0xE700000000000000;
      unint64_t v3 = 0x6465776F6C6C61;
      break;
    case 2:
      sub_10019AAD8();
      break;
    case 3:
      unint64_t v0 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000011;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v0) {
    sub_1001894F8();
  }
  else {
    char v1 = sub_1001A0F74();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1001197FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2
    && (sub_1001191CC(*((void *)a1 + 1), *((void *)a2 + 1)), (v4 & 1) != 0)
    && a1[16] == a2[16]
    && a1[17] == a2[17]
    && a1[18] == a2[18]
    && a1[19] == a2[19]
    && (uint64_t v5 = type metadata accessor for NotificationsOptInState(), (static Date.== infix(_:_:)() & 1) != 0)
    && (sub_10011C778(), v6)
    && (sub_10011C778(), v6)
    && (sub_10011C778(), v6)
    && (sub_10011C778(), v6)
    && (sub_10011C778(), v6))
  {
    char v7 = a1[*(int *)(v5 + 64)] ^ a2[*(int *)(v5 + 64)] ^ 1;
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

void sub_10011990C()
{
  sub_100162EA0();
  uint64_t v64 = v5;
  uint64_t v65 = v6;
  uint64_t v7 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v61 = v9;
  uint64_t v10 = sub_100129064();
  uint64_t v62 = type metadata accessor for ModalViewState.MapViewModal(v10);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10017225C(v12, v54);
  uint64_t v59 = sub_10017DF08(&qword_100EA2640);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v63 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E663E8);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v57 = v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  uint64_t v60 = (uint64_t)&v54 - v19;
  uint64_t v20 = sub_100129064();
  uint64_t v56 = type metadata accessor for LocationPreviewViewState(v20);
  sub_100162E4C();
  __chkstk_darwin(v21);
  uint64_t v58 = (uint64_t)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100129064();
  type metadata accessor for ModalViewState(v23);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_10016278C();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  sub_100181E70();
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v54 - v31;
  __chkstk_darwin(v30);
  sub_10017FF4C();
  __chkstk_darwin(v33);
  sub_100164AF0();
  __chkstk_darwin(v34);
  sub_100127588();
  uint64_t v35 = sub_10017DF08(&qword_100EA2648);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100162E88();
  char v38 = (unsigned __int8 **)(v0 + *(int *)(v37 + 56));
  sub_10011A380(v64, v0, (void (*)(void))type metadata accessor for ModalViewState);
  sub_10011A380(v65, (uint64_t)v38, (void (*)(void))type metadata accessor for ModalViewState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10011A380(v0, v4, (void (*)(void))type metadata accessor for ModalViewState);
      if (sub_100166DC0() != 1) {
        goto LABEL_25;
      }
      goto LABEL_34;
    case 2u:
      sub_10011A380(v0, (uint64_t)v1, (void (*)(void))type metadata accessor for ModalViewState);
      char v41 = *v1;
      if (sub_100166DC0() != 2) {
        goto LABEL_21;
      }
      char v42 = *v38;
      type metadata accessor for NotificationsOptInViewState._Storage();
      sub_1002DCF74(v41, v42);
      goto LABEL_10;
    case 3u:
      sub_10011A380(v0, (uint64_t)v32, (void (*)(void))type metadata accessor for ModalViewState);
      if (sub_100166DC0() != 3)
      {
LABEL_21:
        swift_release();
        goto LABEL_25;
      }
      type metadata accessor for ReportWeatherViewState._Storage();
      sub_1002E162C();
LABEL_10:
      swift_release();
      swift_release();
      goto LABEL_34;
    case 4u:
      sub_10011A380(v0, v3, (void (*)(void))type metadata accessor for ModalViewState);
      if (sub_100166DC0() != 4)
      {
        sub_100178110(v3, &qword_100E663E8);
        goto LABEL_25;
      }
      uint64_t v43 = v60;
      sub_100426F98((uint64_t)v38, v60);
      uint64_t v44 = v63;
      uint64_t v45 = v63 + *(int *)(v59 + 48);
      sub_100426F98(v3, v63);
      sub_100948F08(v43, v45);
      uint64_t v46 = v62;
      if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v62) == 1)
      {
        sub_100178110(v43, &qword_100E663E8);
        if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v46) == 1)
        {
          sub_100178110(v44, &qword_100E663E8);
          goto LABEL_34;
        }
        goto LABEL_33;
      }
      uint64_t v49 = v57;
      sub_100948F08(v44, v57);
      if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v46) == 1)
      {
        sub_100178110(v43, &qword_100E663E8);
        sub_10011D54C(v49, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
LABEL_33:
        sub_100178110(v44, &qword_100EA2640);
        goto LABEL_34;
      }
      uint64_t v50 = v55;
      sub_100948F70(v45, v55, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
      uint64_t v51 = sub_100119464();
      sub_100942EB0(v51);
      sub_10011D54C(v50, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
      sub_100178110(v43, &qword_100E663E8);
      sub_10011D54C(v49, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
      uint64_t v52 = sub_100127C2C();
      sub_100178110(v52, v53);
LABEL_34:
      sub_10011D54C(v0, (void (*)(void))type metadata accessor for ModalViewState);
LABEL_26:
      sub_100162694();
      return;
    case 5u:
      sub_10011A380(v0, v27, (void (*)(void))type metadata accessor for ModalViewState);
      if (sub_100166DC0() == 5)
      {
        uint64_t v47 = v61;
        sub_100948F70((uint64_t)v38, v61, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
        sub_100119464();
        sub_100943730();
        sub_10011D54C(v47, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
        sub_10011D54C(v27, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
        goto LABEL_34;
      }
      uint64_t v39 = type metadata accessor for ModalViewState.LocationDetailModal;
      uint64_t v40 = v27;
      goto LABEL_24;
    case 6u:
      if (sub_100166DC0() != 6) {
        goto LABEL_25;
      }
      goto LABEL_34;
    case 7u:
      if (sub_100166DC0() == 7) {
        goto LABEL_34;
      }
      goto LABEL_25;
    default:
      sub_10011A380(v0, v2, (void (*)(void))type metadata accessor for ModalViewState);
      if (!sub_100166DC0())
      {
        uint64_t v48 = v58;
        sub_100948F70((uint64_t)v38, v58, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        if (sub_10081C338(v2, v48)) {
          sub_1004E6C48(v2 + *(int *)(v56 + 20), v48 + *(int *)(v56 + 20));
        }
        sub_10011D54C(v48, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        sub_10011D54C(v2, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        goto LABEL_34;
      }
      uint64_t v39 = type metadata accessor for LocationPreviewViewState;
      uint64_t v40 = v2;
LABEL_24:
      sub_10011D54C(v40, (void (*)(void))v39);
LABEL_25:
      sub_100178110(v0, &qword_100EA2648);
      goto LABEL_26;
  }
}

uint64_t sub_10011A0E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10011A150(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011A1B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t sub_10011A20C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011A26C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011A2CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011A32C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10011A380(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011A3E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011A440(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011A4A0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011A500(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for ModalViewState.MapViewModal(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EA2568);
}

uint64_t type metadata accessor for ModalViewState.LocationDetailModal(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA24C0);
}

uint64_t sub_10011A5A0()
{
  return v0;
}

void sub_10011A5D0()
{
  sub_100162EA0();
  uint64_t v5 = v4;
  sub_1001191B4();
  uint64_t v77 = type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  char v76 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10017DF08(&qword_100E6A460);
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationAvailableDataSetState(0);
  sub_100179C0C();
  uint64_t v85 = v14;
  uint64_t v86 = v13;
  __chkstk_darwin(v13);
  char v79 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v16);
  char v78 = (char *)&v67 - v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  sub_100109770();
  uint64_t v87 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  sub_100152388();
  uint64_t v21 = sub_10017DF08(&qword_100E6A468);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_1001870B8();
  __chkstk_darwin(v23);
  sub_1001EC3C8();
  if (v0 == v5 || *(void *)(v0 + 16) != *(void *)(v5 + 16))
  {
LABEL_49:
    sub_100162694();
    return;
  }
  uint64_t v83 = 0;
  uint64_t v80 = v0;
  sub_1002EE504();
  sub_1002EEE44();
  uint64_t v69 = v0 + 64;
  uint64_t v70 = v7 + 32;
  char v73 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v74 = v25;
  uint64_t v68 = v25 - 1;
  uint64_t v81 = v5;
  uint64_t v71 = v3;
  uint64_t v72 = v12;
  if (!v24) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v84 = (v24 - 1) & v24;
  unint64_t v26 = __clz(__rbit64(v24)) | (v83 << 6);
  while (2)
  {
    uint64_t v27 = (uint64_t *)(*(void *)(v80 + 48) + 16 * v26);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = sub_10017DF08(&qword_100E6A470);
    sub_10011818C();
    *uint64_t v2 = v28;
    v2[1] = v29;
    uint64_t v31 = sub_1002EEBA0();
    sub_1002EF0E0(v31, v32, v33, v30);
    while (1)
    {
      sub_100127928((uint64_t)v2, v1, &qword_100E6A468);
      uint64_t v45 = sub_10017DF08(&qword_100E6A470);
      uint64_t v46 = sub_1001A1520();
      sub_10012B520(v46, v47, v45);
      if (v57) {
        goto LABEL_49;
      }
      sub_10016EAB0();
      sub_100184EBC();
      sub_1001D23B8();
      char v49 = v48;
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0) {
        goto LABEL_48;
      }
      sub_10011818C();
      uint64_t v50 = &v12[*(int *)(v82 + 48)];
      sub_10011958C();
      sub_10011818C();
      sub_10011818C();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
      {
        uint64_t v59 = v78;
        sub_10011818C();
        if (!swift_getEnumCaseMultiPayload())
        {
          uint64_t v61 = v76;
          uint64_t v60 = v77;
          sub_1001190D4();
          v62();
          sub_100127D40((unint64_t *)&qword_100E6A478, 255, (void (*)(uint64_t))&type metadata accessor for AvailableDataSets);
          uint64_t v63 = v59;
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          uint64_t v64 = v88;
          uint64_t v75 = v89;
          uint64_t v65 = *v73;
          (*v73)(v63, v60);
          uint64_t v66 = v61;
          uint64_t v3 = v71;
          uint64_t v12 = v72;
          v65(v66, v60);
          if (v75 == v64) {
            goto LABEL_40;
          }
LABEL_43:
          sub_1001184F4((uint64_t)v12, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
LABEL_47:
          sub_1001184F4(v87, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
LABEL_48:
          sub_1001184F4(v3, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
          goto LABEL_49;
        }
        (*v73)(v59, v77);
LABEL_46:
        sub_100178110((uint64_t)v12, &qword_100E6A460);
        goto LABEL_47;
      }
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v52 = (uint64_t *)v79;
        sub_10011818C();
        uint64_t v53 = *v52;
        uint64_t v54 = v52[1];
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v55 = *(void *)v50;
          uint64_t v56 = *((void *)v50 + 1);
          BOOL v57 = v53 == v55 && v54 == v56;
          if (v57)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v58 & 1) == 0) {
              goto LABEL_43;
            }
          }
          goto LABEL_40;
        }
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_46;
      }
LABEL_40:
      sub_1001184F4((uint64_t)v12, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      sub_1001184F4(v87, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      sub_1001184F4(v3, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      unint64_t v24 = v84;
      if (v84) {
        goto LABEL_4;
      }
LABEL_6:
      uint64_t v34 = v83 + 1;
      if (__OFADD__(v83, 1))
      {
        __break(1u);
        goto LABEL_51;
      }
      if (v34 < v74)
      {
        if (*(void *)(v69 + 8 * v34)) {
          goto LABEL_9;
        }
        uint64_t v39 = v83 + 2;
        ++v83;
        if (v34 + 1 < v74)
        {
          if (*(void *)(v69 + 8 * v39)) {
            goto LABEL_9;
          }
          uint64_t v83 = v34 + 1;
          if (v34 + 2 < v74)
          {
            if (*(void *)(v69 + 8 * (v34 + 2))) {
              goto LABEL_9;
            }
            uint64_t v40 = v34 + 3;
            uint64_t v83 = v34 + 2;
            if (v34 + 3 < v74) {
              break;
            }
          }
        }
      }
LABEL_22:
      uint64_t v42 = sub_10017DF08(&qword_100E6A470);
      sub_100163050((uint64_t)v2, v43, v44, v42);
      uint64_t v84 = 0;
    }
    if (*(void *)(v69 + 8 * v40))
    {
LABEL_9:
      sub_1002EEFF4();
      uint64_t v83 = v35;
      uint64_t v84 = v37 & v36;
      unint64_t v26 = v38 + (v35 << 6);
      continue;
    }
    break;
  }
  while (!__OFADD__(v40, 1))
  {
    if (v40 + 1 >= v74)
    {
      uint64_t v83 = v68;
      goto LABEL_22;
    }
    sub_1001D40DC();
    if (v41) {
      goto LABEL_9;
    }
  }
LABEL_51:
  __break(1u);
}

void sub_10011AD08()
{
  sub_100162EA0();
  uint64_t v5 = sub_1002EEB90();
  uint64_t v6 = type metadata accessor for LocationWeatherDataState(v5);
  uint64_t v7 = sub_100164920(v6);
  __chkstk_darwin(v7);
  sub_100162824();
  __chkstk_darwin(v8);
  sub_10011B090();
  uint64_t v9 = sub_10017DF08(&qword_100E6A480);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100129860();
  __chkstk_darwin(v11);
  sub_10011B0B0();
  if (v12 || (sub_1002EEB50(), !v12))
  {
LABEL_31:
    sub_1001275D0();
    sub_100162694();
    return;
  }
  int64_t v37 = 0;
  uint64_t v35 = v0 + 64;
  sub_1000A9DF4();
  uint64_t v15 = v14 & v13;
  int64_t v36 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      sub_1002EF344();
LABEL_7:
      sub_1002EF338();
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_10017DF08(&qword_100E6A488);
      sub_10011818C();
      *uint64_t v3 = v18;
      v3[1] = v19;
      uint64_t v20 = sub_1002EF460();
      _s7Weather24LocationCompositionStateOwst_0(v20, v21, v22, v23);
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
    int64_t v24 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v24 < v36)
    {
      if (*(void *)(v35 + 8 * v24)) {
        goto LABEL_11;
      }
      int64_t v26 = v37 + 2;
      ++v37;
      if (v24 + 1 < v36)
      {
        if (*(void *)(v35 + 8 * v26)) {
          goto LABEL_11;
        }
        int64_t v37 = v24 + 1;
        if (v24 + 2 < v36)
        {
          if (*(void *)(v35 + 8 * (v24 + 2))) {
            goto LABEL_11;
          }
          int64_t v27 = v24 + 3;
          int64_t v37 = v24 + 2;
          if (v24 + 3 < v36) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v29 = sub_10017DF08(&qword_100E6A488);
    sub_1002EE788(v29);
    uint64_t v15 = 0;
LABEL_25:
    sub_100127928((uint64_t)v3, v4, &qword_100E6A480);
    uint64_t v30 = sub_10017DF08(&qword_100E6A488);
    sub_10012B520(v4, 1, v30);
    if (v12) {
      goto LABEL_31;
    }
    sub_10016EAB0();
    sub_1001D23B8();
    char v32 = v31;
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      sub_1001184F4(v2, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      goto LABEL_31;
    }
    sub_10011818C();
    sub_100866548();
    char v34 = v33;
    sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_1001184F4(v2, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if ((v34 & 1) == 0) {
      goto LABEL_31;
    }
  }
  if (*(void *)(v35 + 8 * v27))
  {
LABEL_11:
    sub_1002EF01C();
    int64_t v37 = v25;
    goto LABEL_7;
  }
  while (!__OFADD__(v27, 1))
  {
    if (v27 + 1 >= v36)
    {
      int64_t v37 = v36 - 1;
      goto LABEL_24;
    }
    sub_1001D40DC();
    if (v28) {
      goto LABEL_11;
    }
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_10011B0A0()
{
  return v0;
}

uint64_t sub_10011B0C4()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_10011B0E8()
{
  return type metadata accessor for Precipitation();
}

void sub_10011B100()
{
  sub_100162EA0();
  sub_100162814();
  type metadata accessor for WeatherCondition();
  sub_100179C0C();
  v42[11] = v4;
  __chkstk_darwin(v5);
  v42[8] = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v7);
  sub_100127588();
  uint64_t v8 = sub_10017DF08(&qword_100E6A448);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100181E70();
  __chkstk_darwin(v10);
  sub_1001275F8();
  if (v11 || (sub_10012BFA4(), !v11))
  {
LABEL_35:
    sub_1001275D0();
    sub_100162694();
    return;
  }
  sub_100189CF0();
  v42[6] = v0;
  while (1)
  {
    if (v1)
    {
      sub_100128A2C();
LABEL_7:
      uint64_t v12 = sub_10018AE90();
      uint64_t v13 = sub_100127A74(v12);
      v14(v13);
      uint64_t v15 = sub_100127CB8();
      sub_1002EF0E0((uint64_t)v15, v16, v17, v18);
      goto LABEL_30;
    }
    sub_10012BF40();
    uint64_t v3 = v42[7];
    if (v19)
    {
      __break(1u);
      goto LABEL_37;
    }
    sub_10012BF6C();
    if (v20 != v19)
    {
      sub_1002EEEE4();
      if (v22) {
        goto LABEL_12;
      }
      sub_1002EE750(v21);
      if (v20 != v19)
      {
        sub_1002EEED8();
        if (v24) {
          goto LABEL_16;
        }
        sub_1002EE73C();
        if (v20 != v19) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v29 = sub_10017DF08(&qword_100E6A450);
    sub_10012BFD0(v2, v30, v31, v29);
LABEL_30:
    uint64_t v32 = sub_100127BB0();
    sub_100127928(v32, v33, &qword_100E6A448);
    char v34 = (void (*)(void))sub_10017DF08(&qword_100E6A450);
    sub_10012B520(v3, 1, (uint64_t)v34);
    if (v11) {
      goto LABEL_35;
    }
    uint64_t v35 = sub_1001A4B10();
    v36(v35);
    sub_100127BD4();
    sub_100127C0C();
    if ((v0 & 1) == 0)
    {
      uint64_t v40 = sub_1002EE4C8();
      v41(v40);
      goto LABEL_35;
    }
    uint64_t v37 = sub_10018A314();
    v38(v37);
    sub_100127D40((unint64_t *)&qword_100E6A458, 255, (void (*)(uint64_t))&type metadata accessor for WeatherCondition);
    sub_100127C68();
    uint64_t v39 = sub_1001279A0();
    ((void (*)(uint64_t))v34)(v39);
    sub_100183838();
    v34();
  }
  sub_1002EEEF0();
  if (v26)
  {
    uint64_t v21 = v25;
    goto LABEL_12;
  }
  sub_1002EE6FC();
  if (v20 == v19) {
    goto LABEL_29;
  }
  sub_1002EEECC();
  if (v27)
  {
LABEL_16:
    uint64_t v21 = v23;
LABEL_12:
    sub_1001EA860(v21);
    goto LABEL_7;
  }
  while (!__OFADD__(v23, 1))
  {
    sub_10012BF6C();
    if (v20 == v19)
    {
      sub_1002EF210();
      goto LABEL_29;
    }
    sub_1001D40DC();
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_37:
  __break(1u);
}

void sub_10011B3A8()
{
  sub_100162EA0();
  uint64_t v6 = v5;
  sub_1001191B4();
  uint64_t v7 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10017225C(v11, v65);
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100182904(v14, v66);
  uint64_t v76 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v75 = sub_1002EEE1C();
  sub_100179C0C();
  __chkstk_darwin(v16);
  sub_100181E70();
  uint64_t v18 = __chkstk_darwin(v17);
  sub_1002EF38C(v18, v19, v20, v21, v22, v23, v24, v25, v67);
  uint64_t v26 = sub_10017DF08(&qword_100E63858);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_1001190EC();
  __chkstk_darwin(v28);
  sub_1001EC3C8();
  if (v0 != v6 && *(void *)(v0 + 16) == *(void *)(v6 + 16))
  {
    uint64_t v74 = 0;
    sub_1002EE6A0();
    uint64_t v31 = v30 & v29;
    sub_1002EEE44();
    uint64_t v69 = v0 + 64;
    uint64_t v70 = (void (**)(void))(v9 + 8);
    uint64_t v71 = v32;
    uint64_t v68 = v32 - 1;
    char v73 = v3;
    uint64_t v77 = v1;
    if (!v31) {
      goto LABEL_6;
    }
LABEL_4:
    sub_1001D17C4();
LABEL_5:
    sub_1002EF338();
    uint64_t v34 = *v33;
    unint64_t v35 = v33[1];
    uint64_t v36 = sub_10017DF08(&qword_100E63860);
    sub_10011818C();
    *uint64_t v4 = v34;
    v4[1] = v35;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v36);
    sub_1000D54E0(v34, v35);
    while (1)
    {
      sub_100127928((uint64_t)v4, v1, &qword_100E63858);
      uint64_t v45 = sub_10017DF08(&qword_100E63860);
      uint64_t v46 = sub_1001A1520();
      sub_10012B520(v46, v47, v45);
      if (v57) {
        goto LABEL_52;
      }
      uint64_t v48 = (uint64_t)v78;
      sub_10016EAB0();
      uint64_t v49 = sub_100214E34();
      sub_1001EB73C(v49, v50);
      char v52 = v51;
      uint64_t v53 = sub_100214E34();
      sub_1001EB5EC(v53, v54);
      if ((v52 & 1) == 0) {
        goto LABEL_51;
      }
      sub_10011818C();
      uint64_t v1 = v77;
      if (*v73 != *v78) {
        goto LABEL_50;
      }
      uint64_t v55 = *((void *)v73 + 2);
      unint64_t v56 = *((void *)v78 + 2);
      if (v55)
      {
        if (v55 == 1)
        {
          if (v56 != 1) {
            goto LABEL_50;
          }
        }
        else
        {
          if (v56 < 2) {
            goto LABEL_50;
          }
          BOOL v57 = *((void *)v73 + 1) == *((void *)v78 + 1) && v55 == v56;
          if (!v57 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_50;
          }
        }
      }
      else if (v56)
      {
        goto LABEL_50;
      }
      uint64_t v58 = v2 + *(int *)(v76 + 48);
      sub_1001B49E8((uint64_t)&v73[*(int *)(v75 + 24)], v2, (uint64_t *)&unk_100E73CA0);
      uint64_t v59 = sub_10012B950();
      sub_1001B49E8(v59, v60, (uint64_t *)&unk_100E73CA0);
      sub_10012B520(v2, 1, v7);
      if (v57)
      {
        sub_10012B520(v58, 1, v7);
        if (!v57) {
          goto LABEL_49;
        }
        sub_100178110(v2, (uint64_t *)&unk_100E73CA0);
      }
      else
      {
        sub_1001B49E8(v2, v72, (uint64_t *)&unk_100E73CA0);
        sub_10012B520(v58, 1, v7);
        if (v61)
        {
          ((void (*)(uint64_t, uint64_t))*v70)(v72, v7);
LABEL_49:
          sub_100178110(v2, &qword_100E64D60);
LABEL_50:
          sub_1001184F4((uint64_t)v73, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_51:
          sub_1001184F4(v48, (void (*)(void))type metadata accessor for ContentStatusBanner);
          goto LABEL_52;
        }
        sub_1001190D4();
        v62();
        sub_100127D40((unint64_t *)&qword_100E63980, 255, (void (*)(uint64_t))&type metadata accessor for Date);
        sub_100184EBC();
        char v63 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v64 = *v70;
        sub_1001D0E38();
        v64();
        uint64_t v48 = (uint64_t)v78;
        sub_1001D0E38();
        v64();
        uint64_t v1 = v77;
        sub_100178110(v2, (uint64_t *)&unk_100E73CA0);
        if ((v63 & 1) == 0) {
          goto LABEL_50;
        }
      }
      sub_1001184F4((uint64_t)v73, (void (*)(void))type metadata accessor for ContentStatusBanner);
      sub_1001184F4(v48, (void (*)(void))type metadata accessor for ContentStatusBanner);
      if (v31) {
        goto LABEL_4;
      }
LABEL_6:
      uint64_t v37 = v74 + 1;
      if (__OFADD__(v74, 1)) {
        break;
      }
      if (v37 < v71)
      {
        if (*(void *)(v69 + 8 * v37)) {
          goto LABEL_9;
        }
        uint64_t v39 = v74 + 2;
        ++v74;
        if (v37 + 1 < v71)
        {
          if (*(void *)(v69 + 8 * v39)) {
            goto LABEL_9;
          }
          uint64_t v74 = v37 + 1;
          if (v37 + 2 < v71)
          {
            if (*(void *)(v69 + 8 * (v37 + 2))) {
              goto LABEL_9;
            }
            uint64_t v40 = v37 + 3;
            uint64_t v74 = v37 + 2;
            if (v37 + 3 < v71)
            {
              if (*(void *)(v69 + 8 * v40))
              {
LABEL_9:
                sub_1002EF004();
                uint64_t v74 = v38;
                goto LABEL_5;
              }
              while (!__OFADD__(v40, 1))
              {
                if (v40 + 1 >= v71)
                {
                  uint64_t v74 = v68;
                  goto LABEL_22;
                }
                sub_1001D40DC();
                if (v41) {
                  goto LABEL_9;
                }
              }
              goto LABEL_54;
            }
          }
        }
      }
LABEL_22:
      uint64_t v42 = sub_10017DF08(&qword_100E63860);
      sub_10012BFD0((uint64_t)v4, v43, v44, v42);
    }
    __break(1u);
LABEL_54:
    __break(1u);
    return;
  }
LABEL_52:
  sub_100162694();
}

uint64_t sub_10011BA28()
{
  return 0;
}

uint64_t sub_10011BA50()
{
  return 0;
}

void sub_10011BA64(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_10011BA80(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10011BA9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return sub_1008C59C8(v3, v1);
}

void sub_10011BAB4()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v40 = type metadata accessor for SearchViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v8 = sub_10017DF08(&qword_100EA4868);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100162E88();
  uint64_t v10 = sub_10017DF08(&qword_100E66408);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10016278C();
  uint64_t v14 = v12 - v13;
  __chkstk_darwin(v15);
  sub_1001190EC();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v19 = v4;
  type metadata accessor for ListViewState._Storage();
  if ((sub_10011D5A0() & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v20 = v2;
  uint64_t v21 = (uint64_t)v18;
  uint64_t v37 = v1;
  uint64_t v38 = v14;
  uint64_t v22 = v40;
  uint64_t v39 = v0;
  uint64_t v23 = (int *)type metadata accessor for ViewState(0);
  sub_10011C19C();
  if ((v24 & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v25 = v19;
  uint64_t v26 = v6;
  if (*(unsigned __int8 *)(v6 + v23[6]) != *(unsigned __int8 *)(v19 + v23[6])
    || *(unsigned __int8 *)(v6 + v23[7]) != *(unsigned __int8 *)(v19 + v23[7]))
  {
    goto LABEL_17;
  }
  uint64_t v27 = v21;
  sub_1001B7204(v6 + v23[8], v21, &qword_100E66408);
  sub_1001B7204(v25 + v23[8], v20, &qword_100E66408);
  uint64_t v28 = v39;
  uint64_t v29 = v39 + *(int *)(v8 + 48);
  sub_1001B7204(v27, v39, &qword_100E66408);
  sub_1001B7204(v20, v29, &qword_100E66408);
  uint64_t v30 = sub_1001A1520();
  sub_10012B520(v30, v31, v22);
  if (!v33)
  {
    uint64_t v32 = v38;
    sub_1001B7204(v28, v38, &qword_100E66408);
    sub_10012B520(v29, 1, v22);
    if (!v33)
    {
      uint64_t v34 = v37;
      sub_10011E6CC();
      uint64_t v35 = v28;
      char v36 = sub_10011CE18(v32, v34);
      sub_10011E4B4(v34, (void (*)(void))type metadata accessor for SearchViewState);
      sub_100178110(v20, &qword_100E66408);
      sub_100178110(v27, &qword_100E66408);
      sub_10011E4B4(v32, (void (*)(void))type metadata accessor for SearchViewState);
      sub_100178110(v35, &qword_100E66408);
      if ((v36 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_15;
    }
    sub_100178110(v20, &qword_100E66408);
    sub_100178110(v27, &qword_100E66408);
    sub_10011E4B4(v32, (void (*)(void))type metadata accessor for SearchViewState);
LABEL_13:
    sub_100178110(v28, &qword_100EA4868);
    goto LABEL_17;
  }
  sub_100178110(v20, &qword_100E66408);
  uint64_t v28 = v39;
  sub_100178110(v27, &qword_100E66408);
  sub_10012B520(v29, 1, v22);
  if (!v33) {
    goto LABEL_13;
  }
  sub_100178110(v28, &qword_100E66408);
LABEL_15:
  if (sub_10011BE7C(v26 + v23[9], v25 + v23[9])) {
    sub_10011D6F4();
  }
LABEL_17:
  sub_100162694();
}

uint64_t sub_10011BE7C(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 0;
  }
  int v2 = *(unsigned __int8 *)(a1 + 16);
  switch(*(unsigned char *)(a2 + 16))
  {
    case 1:
      if (v2 != 1) {
        return 0;
      }
      break;
    case 2:
      if (v2 != 2) {
        return 0;
      }
      break;
    case 3:
      if (v2 != 3) {
        return 0;
      }
      break;
    default:
      if (*(unsigned char *)(a1 + 16)) {
        return 0;
      }
      break;
  }
  if (*(unsigned char *)(a2 + 17) == 1)
  {
    if ((*(unsigned char *)(a1 + 17) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    double v3 = 1024.0;
    if (!*(unsigned char *)(a1 + 17)) {
      double v3 = 0.0;
    }
    if (v3 != 0.0) {
      return 0;
    }
  }
  int v4 = *(unsigned __int8 *)(a1 + 18);
  if (*(unsigned char *)(a2 + 18))
  {
    if (*(unsigned char *)(a2 + 18) == 1)
    {
      if (v4 == 1) {
        goto LABEL_24;
      }
      return 0;
    }
    if (v4 != 2) {
      return 0;
    }
  }
  else if (*(unsigned char *)(a1 + 18))
  {
    return 0;
  }
LABEL_24:
  type metadata accessor for DisplayMetrics();

  return static DynamicTypeSize.== infix(_:_:)();
}

uint64_t sub_10011BFA4()
{
  return v0;
}

void sub_10011BFB8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>, unint64_t a8)
{
  sub_10020FA74(a1, a2, a3, a4, a5, 0xD000000000000011, (a7 - 32) | 0x8000000000000000, a6, a8);
}

uint64_t sub_10011BFF0(uint64_t a1)
{
  *(void *)(v1 - 232) = a1;
  return v1 - 232;
}

uint64_t sub_10011C004()
{
  return v0;
}

uint64_t sub_10011C010@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

uint64_t sub_10011C018(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v1);
}

void sub_10011C044()
{
  *(void *)(v1 - 200) = v0;
}

void *sub_10011C058(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, __src, 0x48uLL);
}

uint64_t sub_10011C08C()
{
  return sub_1001781AC(v1, v0);
}

uint64_t sub_10011C0A4@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 - 112) + a1;
}

uint64_t sub_10011C0C4()
{
  return String.write(to:)();
}

uint64_t sub_10011C108@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

__n128 sub_10011C114(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 160);
  a1[1] = result;
  return result;
}

uint64_t sub_10011C120()
{
  return Hasher.init(_seed:)();
}

uint64_t sub_10011C13C()
{
  return sub_10016EAB0();
}

uint64_t sub_10011C158()
{
  return String.write(to:)();
}

uint64_t type metadata accessor for ListViewState._Storage()
{
  return self;
}

void sub_10011C19C()
{
  sub_100162EA0();
  uint64_t v2 = type metadata accessor for VFXTestViewState();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100164BE0();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_10016278C();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  uint64_t v9 = sub_10017DF08(&qword_100EA4870);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162E88();
  sub_10011E568();
  sub_10011E568();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011E568();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10011E6CC();
      sub_10088B240(v7, v1);
      sub_10011E4B4(v1, (void (*)(void))type metadata accessor for VFXTestViewState);
      sub_10011E4B4(v7, (void (*)(void))type metadata accessor for VFXTestViewState);
LABEL_9:
      sub_10011E4B4(v0, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      goto LABEL_10;
    }
    sub_10011E4B4(v7, (void (*)(void))type metadata accessor for VFXTestViewState);
  }
  else
  {
    sub_10011E568();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for LocationViewerViewState._Storage(0);
      sub_10011C458();
      swift_release();
      swift_release();
      goto LABEL_9;
    }
    swift_release();
  }
  sub_100178110(v0, &qword_100EA4870);
LABEL_10:
  sub_100162694();
}

uint64_t type metadata accessor for LocationViewerViewState._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E690D8);
}

BOOL sub_10011C458()
{
  sub_100162814();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v3 = sub_100109308(active);
  __chkstk_darwin(v3);
  sub_100162758();
  __chkstk_darwin(v4);
  sub_1001EC3C8();
  sub_10011818C();
  sub_1002EF2D4();
  uint64_t v5 = sub_10017B204();
  char v7 = sub_10011CB88(v5, v6);
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  if ((v7 & 1) == 0) {
    return 0;
  }
  sub_10011C778();
  if (!v8) {
    return 0;
  }
  sub_10011C778();
  if (!v8) {
    return 0;
  }
  sub_10011C778();
  if (!v8) {
    return 0;
  }
  sub_10011C778();
  if (!v8) {
    return 0;
  }
  sub_10011C778();
  return v8 != 0;
}

uint64_t sub_10011C598(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    goto LABEL_30;
  }
  char v4 = a2[1];
  unint64_t v5 = LocationAuthorizationState.rawValue.getter(a1[1]);
  uint64_t v7 = v6;
  BOOL v9 = v5 == LocationAuthorizationState.rawValue.getter(v4) && v7 == v8;
  if (v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if ((v10 & 1) == 0) {
      return v11 & 1;
    }
  }
  if (!sub_10011C864(a1[2], a2[2])
    || (uint64_t v12 = (int *)type metadata accessor for EnvironmentState(), (static Locale.== infix(_:_:)() & 1) == 0))
  {
LABEL_30:
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v13 = v12[8];
  uint64_t v14 = *(void *)&a1[v13];
  uint64_t v15 = *(void *)&a1[v13 + 8];
  uint64_t v16 = &a2[v13];
  BOOL v17 = v14 == *(void *)v16 && v15 == *((void *)v16 + 1);
  if (v17 || (char v18 = _stringCompareWithSmolCheck(_:_:expecting:)(), v11 = 0, (v18 & 1) != 0))
  {
    sub_10011C778();
    if (v9)
    {
      sub_10011C778();
      if (v9)
      {
        sub_10011C778();
        if (v9)
        {
          sub_10011C778();
          if (v9 && *(void *)&a1[v12[13]] == *(void *)&a2[v12[13]])
          {
            sub_10011C778();
            if (v9)
            {
              sub_10011C778();
              if (v9)
              {
                sub_10011C778();
                if (v9)
                {
                  uint64_t v20 = v12[17];
                  long long v21 = *(_OWORD *)&a1[v20 + 16];
                  v27[0] = *(_OWORD *)&a1[v20];
                  v27[1] = v21;
                  long long v22 = *(_OWORD *)&a1[v20 + 32];
                  uint64_t v23 = &a2[v20];
                  long long v24 = *(_OWORD *)v23;
                  long long v25 = *((_OWORD *)v23 + 1);
                  void v27[2] = v22;
                  v28[0] = v24;
                  long long v26 = *((_OWORD *)v23 + 2);
                  v28[1] = v25;
                  void v28[2] = v26;
                  char v11 = sub_10011C8A8((uint64_t)v27, (id *)v28);
                  return v11 & 1;
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_30;
  }
  return v11 & 1;
}

uint64_t sub_10011C788()
{
  return type metadata accessor for CloudCoverByAltitude();
}

unint64_t LocationAuthorizationState.rawValue.getter(char a1)
{
  unint64_t result = 0x7265746544746F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6465696E6564;
      break;
    case 4:
      unint64_t result = 0x7463697274736572;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_10011C864(char a1, char a2)
{
  if (a1 == 4) {
    return a2 == 4;
  }
  if (a2 == 4) {
    return 0;
  }
  return a1 == a2;
}

uint64_t sub_10011C8A8(uint64_t a1, id *a2)
{
  char v4 = *(void **)a1;
  id v5 = *a2;
  id v33 = *a2;
  id v34 = v4;
  if (v4)
  {
    if (!v5) {
      return 0;
    }
    sub_10011CB48();
    sub_10011CAF0(&v33);
    sub_10011CAF0(&v34);
    char v6 = sub_10019F568();
    sub_10011CB1C(&v33);
    sub_10011CB1C(&v34);
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  uint64_t v7 = *(void **)(a1 + 8);
  id v8 = a2[1];
  id v31 = v8;
  id v32 = v7;
  if (v7)
  {
    if (!v8) {
      return 0;
    }
    sub_10011CB48();
    sub_10011CAF0(&v31);
    sub_10011CAF0(&v32);
    char v9 = sub_10019F568();
    sub_10011CB1C(&v31);
    sub_10011CB1C(&v32);
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  char v10 = *(void **)(a1 + 16);
  id v11 = a2[2];
  id v29 = v11;
  id v30 = v10;
  if (v10)
  {
    if (!v11) {
      return 0;
    }
    sub_10011CB48();
    sub_10011CAF0(&v29);
    sub_10011CAF0(&v30);
    char v12 = sub_10019F568();
    sub_10011CB1C(&v29);
    sub_10011CB1C(&v30);
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  uint64_t v13 = *(void **)(a1 + 24);
  id v14 = a2[3];
  id v27 = v14;
  id v28 = v13;
  if (v13)
  {
    if (!v14) {
      return 0;
    }
    sub_10011CB48();
    sub_10011CAF0(&v27);
    sub_10011CAF0(&v28);
    char v15 = sub_10019F568();
    sub_10011CB1C(&v27);
    sub_10011CB1C(&v28);
    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  else if (v14)
  {
    return 0;
  }
  uint64_t v16 = *(void **)(a1 + 32);
  id v17 = a2[4];
  id v25 = v17;
  id v26 = v16;
  if (v16)
  {
    if (!v17) {
      return 0;
    }
    sub_10011CB48();
    sub_10011CAF0(&v25);
    sub_10011CAF0(&v26);
    char v18 = sub_10019F568();
    sub_10011CB1C(&v25);
    sub_10011CB1C(&v26);
    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  else if (v17)
  {
    return 0;
  }
  uint64_t v19 = *(void **)(a1 + 40);
  id v20 = a2[5];
  id v23 = v20;
  id v24 = v19;
  if (v19)
  {
    if (v20)
    {
      sub_10011CB48();
      sub_10011CAF0(&v23);
      sub_10011CAF0(&v24);
      char v21 = static NSObject.== infix(_:_:)();
      sub_10011CB1C(&v23);
      sub_10011CB1C(&v24);
      if (v21) {
        return 1;
      }
    }
  }
  else if (!v20)
  {
    return 1;
  }
  return 0;
}

id *sub_10011CAF0(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_10011CB1C(id *a1)
{
  return a1;
}

unint64_t sub_10011CB48()
{
  unint64_t result = qword_100E7F018;
  if (!qword_100E7F018)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E7F018);
  }
  return result;
}

uint64_t sub_10011CB88(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v11 = sub_1001D216C();
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10012B938();
  uint64_t v13 = sub_10017DF08(&qword_100EAB910);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10011BFD8();
  uint64_t v16 = v3 + *(int *)(v15 + 56);
  sub_10016ECAC(a1, v3);
  sub_10016ECAC(a2, v16);
  sub_10017A364(v3);
  if (!v18)
  {
    sub_10016ECAC(v3, v4);
    sub_10017A364(v16);
    if (!v18)
    {
      sub_100181630();
      v19();
      char v17 = static Location.Identifier.== infix(_:_:)();
      id v20 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v20(v2, v7);
      v20(v4, v7);
      sub_10011CD54(v3);
      return v17 & 1;
    }
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v7);
LABEL_9:
    sub_100178200(v3, &qword_100EAB910);
    char v17 = 0;
    return v17 & 1;
  }
  sub_10017A364(v16);
  if (!v18) {
    goto LABEL_9;
  }
  sub_10011CD54(v3);
  char v17 = 1;
  return v17 & 1;
}

uint64_t sub_10011CD54(uint64_t a1)
{
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(active - 8) + 8))(a1, active);
  return a1;
}

uint64_t type metadata accessor for VFXTestViewState()
{
  uint64_t result = qword_100E84E50;
  if (!qword_100E84E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

#error "10011CF78: call analysis failed (funcsize=209)"

void sub_10011D198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = type metadata accessor for CodableError();
  sub_100179C0C();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  sub_10016278C();
  id v32 = (char *)(v30 - v31);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&a9 - v34;
  uint64_t v36 = sub_10017DF08(&qword_100E70968);
  uint64_t v37 = sub_100109308(v36);
  uint64_t v38 = __chkstk_darwin(v37);
  uint64_t v40 = (char *)&a9 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (uint64_t)&v40[*(int *)(v38 + 56)];
  sub_10011D420(v25, (uint64_t)v40, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  sub_10011D420(v23, v41, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  type metadata accessor for SearchViewState.ViewState(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (sub_1001A15E4() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      sub_100BDB41C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 2u:
      if (sub_1001A15E4() != 2) {
        goto LABEL_13;
      }
      break;
    case 3u:
      if (sub_1001A15E4() != 3) {
        goto LABEL_13;
      }
      break;
    case 4u:
      if (sub_1001A15E4() != 4) {
        goto LABEL_13;
      }
      break;
    default:
      if (sub_1001A15E4())
      {
        sub_10017CB40();
        v42();
LABEL_13:
        sub_10038F000(v41, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
      }
      else
      {
        uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
        v43(v35, v40, v26);
        v43(v32, (char *)v41, v26);
        CodableError.errorCode.getter();
        CodableError.errorCode.getter();
        uint64_t v44 = *(void (**)(void))(v28 + 8);
        sub_10017CB40();
        v44();
        sub_10017CB40();
        v44();
      }
      break;
  }
  sub_100162694();
}

uint64_t sub_10011D420(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

void *sub_10011D474(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for CodableError();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10011D54C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10011D5A0()
{
  sub_1001097B4();
  char v4 = *(unsigned char *)(v2 + 24);
  if (*(unsigned char *)(v3 + 24) == 1)
  {
    if ((*(unsigned char *)(v2 + 24) & 1) == 0) {
      goto LABEL_25;
    }
  }
  else
  {
    if (*(void *)(v1 + 16) != *(void *)(v0 + 16)) {
      char v4 = 1;
    }
    if (v4) {
      goto LABEL_25;
    }
  }
  if (*(unsigned __int8 *)(v1 + 25) != *(unsigned __int8 *)(v0 + 25)
    || *(unsigned __int8 *)(v1 + 26) != *(unsigned __int8 *)(v0 + 26)
    || *(unsigned __int8 *)(v1 + 27) != *(unsigned __int8 *)(v0 + 27))
  {
    goto LABEL_25;
  }
  BOOL v5 = *(void *)(v1 + 32) == *(void *)(v0 + 32) && *(void *)(v1 + 40) == *(void *)(v0 + 40);
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), v7 = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = *(void *)(v1 + 56);
    uint64_t v9 = *(void *)(v0 + 56);
    if (v8)
    {
      if (!v9) {
        goto LABEL_25;
      }
      if (*(void *)(v1 + 48) != *(void *)(v0 + 48) || v8 != v9)
      {
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v7 = 0;
        if ((v11 & 1) == 0) {
          return v7 & 1;
        }
      }
    }
    else if (v9)
    {
      goto LABEL_25;
    }
    if (*(unsigned __int8 *)(v1 + 64) == *(unsigned __int8 *)(v0 + 64))
    {
      uint64_t v13 = *(void *)(v1 + 80);
      uint64_t v14 = *(void *)(v0 + 80);
      if (v13)
      {
        if (!v14) {
          goto LABEL_25;
        }
        if (*(void *)(v1 + 72) != *(void *)(v0 + 72) || v13 != v14)
        {
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          char v7 = 0;
          if ((v16 & 1) == 0) {
            return v7 & 1;
          }
        }
      }
      else if (v14)
      {
        goto LABEL_25;
      }
      if (*(unsigned __int8 *)(v1 + 88) == *(unsigned __int8 *)(v0 + 88))
      {
        char v7 = *(unsigned char *)(v1 + 89) ^ *(unsigned char *)(v0 + 89) ^ 1;
        return v7 & 1;
      }
    }
LABEL_25:
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_10011D6F4()
{
  sub_1001097B4();
  int v3 = *v2;
  int v5 = *v4;
  if (v3 == 5)
  {
    if (v5 != 5) {
      goto LABEL_36;
    }
  }
  else if (v3 == 4)
  {
    if (v5 != 4) {
      goto LABEL_36;
    }
  }
  else if (v3 != v5 || (v5 & 0xFE) == 4)
  {
    goto LABEL_36;
  }
  unsigned int v7 = *(unsigned __int8 *)(v1 + 1);
  unsigned int v8 = *(unsigned __int8 *)(v0 + 1);
  if (v7 >> 6)
  {
    if (v7 >> 6 == 1)
    {
      int v9 = v8 & 0xC0;
      int v10 = (v8 ^ v7) & 1;
      if (v9 != 64 || v10 != 0) {
        goto LABEL_36;
      }
    }
    else if (v8 != 128)
    {
      goto LABEL_36;
    }
  }
  else
  {
    int v12 = (v8 ^ v7) & 1;
    if (v8 > 0x3F || v12 != 0) {
      goto LABEL_36;
    }
  }
  uint64_t v14 = type metadata accessor for WeatherMapPresentationState(0);
  if ((static WeatherMapOverlayKind.== infix(_:_:)() & 1) == 0) {
    goto LABEL_36;
  }
  uint64_t v15 = *(int *)(v14 + 28);
  char v16 = (void *)(v1 + v15);
  uint64_t v17 = *(void *)(v1 + v15 + 8);
  char v18 = (void *)(v0 + v15);
  uint64_t v19 = v18[1];
  if (!v17)
  {
    if (v19) {
      goto LABEL_36;
    }
LABEL_34:
    if (sub_10011EBBC())
    {
      char v22 = *(unsigned char *)(v1 + *(int *)(v14 + 36)) ^ *(unsigned char *)(v0 + *(int *)(v14 + 36)) ^ 1;
      return v22 & 1;
    }
LABEL_36:
    char v22 = 0;
    return v22 & 1;
  }
  if (!v19) {
    goto LABEL_36;
  }
  if (*v16 == *v18 && v17 == v19) {
    goto LABEL_34;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  char v22 = 0;
  if (v21) {
    goto LABEL_34;
  }
  return v22 & 1;
}

uint64_t sub_10011D854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationPreviewViewState(0);

  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, v4, sub_100939980);
}

void sub_10011D8AC()
{
  sub_100162EA0();
  int v91 = v2;
  uint64_t v92 = v3;
  uint64_t v88 = v4;
  uint64_t v75 = v5;
  int v82 = v6;
  int v77 = v7;
  uint64_t v79 = v8;
  uint64_t v80 = v9;
  uint64_t v76 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E663F8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10017B2B0(v13, v75);
  uint64_t v90 = type metadata accessor for WeatherMapPresentationState(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100125FF8();
  uint64_t v15 = sub_10017DF08(&qword_100E66400);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v87 = v17;
  uint64_t v86 = type metadata accessor for DisplayMetrics();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_10017EF38(v19, v75);
  uint64_t v20 = sub_10017DF08(&qword_100E66408);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v84 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  uint64_t v93 = (char *)&v75 - v24;
  uint64_t v25 = sub_10017DF08(&qword_100E66410);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  uint64_t v27 = sub_100164BE0();
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v95 = v29;
  uint64_t v30 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v89 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  uint64_t v85 = (char *)&v75 - v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  uint64_t v83 = (char *)&v75 - v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  uint64_t v81 = (char *)&v75 - v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v75 - v40;
  __chkstk_darwin(v42);
  sub_1001190EC();
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v75 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (uint64_t *)((char *)&v75 - v47);
  sub_10011E568();
  uint64_t v49 = v76;
  if (v79)
  {
    uint64_t v78 = v79;
  }
  else
  {
    uint64_t v78 = *v48;
    swift_retain();
  }
  int v50 = v77;
  swift_retain();
  sub_10011E4B4((uint64_t)v48, (void (*)(void))type metadata accessor for ViewState);
  sub_1001B7204(v80, v0, &qword_100E66410);
  sub_10011E568();
  sub_10012B520(v0, 1, v27);
  if (v51)
  {
    sub_10011E568();
    sub_10011E4B4((uint64_t)v45, (void (*)(void))type metadata accessor for ViewState);
    sub_100178110(v0, &qword_100E66410);
  }
  else
  {
    sub_10011E4B4((uint64_t)v45, (void (*)(void))type metadata accessor for ViewState);
    sub_10011E6CC();
  }
  uint64_t v52 = v94;
  int v53 = v82;
  sub_10011E568();
  uint64_t v54 = v84;
  if (v50 == 2) {
    int v55 = *(unsigned __int8 *)(v1 + v30[6]);
  }
  else {
    int v55 = v50 & 1;
  }
  LODWORD(v94) = v55;
  sub_10011E4B4(v1, (void (*)(void))type metadata accessor for ViewState);
  sub_10011E568();
  if (v53 == 2)
  {
    id v56 = [self currentDevice];
    id v57 = [v56 userInterfaceIdiom];

    uint64_t v58 = (uint64_t)v93;
    if (v57)
    {
      unint64_t v59 = *(void *)&v41[v30[9] + 8];
      if (v59 >= 2)
      {
        uint64_t v61 = v75;
        if (v59 == 2) {
          char v60 = 1;
        }
        else {
          char v60 = v41[v30[7]];
        }
        goto LABEL_16;
      }
    }
    char v60 = v41[v30[7]];
  }
  else
  {
    char v60 = v53 & 1;
    uint64_t v58 = (uint64_t)v93;
  }
  uint64_t v61 = v75;
LABEL_16:
  sub_10011E4B4((uint64_t)v41, (void (*)(void))type metadata accessor for ViewState);
  sub_1001B7204(v61, v54, &qword_100E66408);
  uint64_t v62 = (uint64_t)v81;
  sub_10011E568();
  uint64_t v63 = type metadata accessor for SearchViewState(0);
  uint64_t v64 = sub_1001A1520();
  sub_10012B520(v64, v65, v63);
  if (v51)
  {
    sub_1001B7204(v62 + v30[8], v58, &qword_100E66408);
    sub_10011E4B4(v62, (void (*)(void))type metadata accessor for ViewState);
    sub_100178110(v54, &qword_100E66408);
  }
  else
  {
    sub_10011E4B4(v62, (void (*)(void))type metadata accessor for ViewState);
    sub_10011E6CC();
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v66, v67, v68, v63);
  }
  uint64_t v69 = v87;
  sub_1001B7204(v88, v87, &qword_100E66400);
  uint64_t v70 = (uint64_t)v83;
  sub_10011E568();
  sub_10012B520(v69, 1, v86);
  if (v51)
  {
    sub_10011E568();
    sub_10011E4B4(v70, (void (*)(void))type metadata accessor for ViewState);
    sub_100178110(v69, &qword_100E66400);
  }
  else
  {
    sub_10011E4B4(v70, (void (*)(void))type metadata accessor for ViewState);
    sub_10011E6CC();
  }
  int v71 = v91;
  sub_1001B7204(v92, v52, &qword_100E663F8);
  uint64_t v72 = (uint64_t)v85;
  sub_10011E568();
  sub_10012B520(v52, 1, v90);
  if (v51)
  {
    sub_10011E568();
    sub_10011E4B4(v72, (void (*)(void))type metadata accessor for ViewState);
    sub_100178110(v52, &qword_100E663F8);
  }
  else
  {
    sub_10011E4B4(v72, (void (*)(void))type metadata accessor for ViewState);
    sub_10011E6CC();
  }
  uint64_t v73 = v89;
  sub_10011E568();
  if (v71 == 2) {
    char v74 = *(unsigned char *)(v73 + v30[11]);
  }
  else {
    char v74 = v71 & 1;
  }
  sub_10011E4B4(v73, (void (*)(void))type metadata accessor for ViewState);
  *uint64_t v49 = v78;
  sub_10011E6CC();
  *((unsigned char *)v49 + v30[6]) = v94;
  *((unsigned char *)v49 + v30[7]) = v60;
  sub_10011E908(v58, (uint64_t)v49 + v30[8]);
  sub_10011E6CC();
  sub_10011E6CC();
  *((unsigned char *)v49 + v30[11]) = v74;
  sub_100162694();
}

uint64_t sub_10011E1F8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10011E250(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10011E2A4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10011E2F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10011E358(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10011E3B0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162880();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10011E408(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10011E460(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10011E4B4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10011E508(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10011E568()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  sub_10008B8B4();
  v3();
  return v0;
}

void *sub_10011E5BC(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for WeatherCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10011E66C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10011E6CC()
{
  uint64_t v2 = sub_100162814();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_10011E724(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for WeatherCondition();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

_WORD *sub_10011E7B4(_WORD *a1, _WORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  int v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
  int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 3, v18))
  {
    uint64_t v19 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    v10(&v16[*(int *)(v18 + 48)], &v17[*(int *)(v18 + 48)], v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 3, v18);
  }
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_10011E908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_10011E970(uint64_t a1, char a2)
{
  uint64_t v6 = type metadata accessor for DisplayMetrics();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10012907C();
  __chkstk_darwin(v8);
  sub_10018348C();
  sub_10011EED8();
  if (v4)
  {
    sub_10011EED8();
    BOOL v9 = (a2 & 0xC0) == 0x40 && sub_10058BE08();
    sub_10011EF7C(v3, (void (*)(void))type metadata accessor for DisplayMetrics);
  }
  else
  {
    BOOL v9 = 1;
  }
  sub_10011EF7C(v2, (void (*)(void))type metadata accessor for DisplayMetrics);
  return v9;
}

uint64_t sub_10011EA94(uint64_t a1, char a2)
{
  uint64_t v6 = type metadata accessor for DisplayMetrics();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10012907C();
  __chkstk_darwin(v8);
  sub_10018348C();
  sub_10011EED8();
  if (v4 == 1)
  {
    char v9 = 1;
  }
  else
  {
    sub_10011EED8();
    if ((a2 & 0xC0) == 0x40) {
      char v9 = sub_10058BF64();
    }
    else {
      char v9 = 0;
    }
    sub_10011EF7C(v3, (void (*)(void))type metadata accessor for DisplayMetrics);
  }
  sub_10011EF7C(v2, (void (*)(void))type metadata accessor for DisplayMetrics);
  return v9 & 1;
}

uint64_t sub_10011EBBC()
{
  uint64_t v2 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10016278C();
  uint64_t v8 = (char *)(v6 - v7);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = type metadata accessor for WeatherMapTrackingState(0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100125FF8();
  uint64_t v14 = sub_10017DF08(&qword_100E72C88);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100162E88();
  uint64_t v17 = (unsigned __int8 *)(v0 + *(int *)(v16 + 56));
  sub_10011EED8();
  sub_10011EED8();
  uint64_t v18 = sub_10017DF08(&qword_100E66460);
  switch(_s7Weather24LocationCompositionStateOwet_0(v0, 3, v18))
  {
    case 1u:
      if (sub_100181F48() != 1) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 2u:
      if (sub_100181F48() != 2) {
        goto LABEL_9;
      }
      goto LABEL_5;
    case 3u:
      if (sub_100181F48() != 3) {
        goto LABEL_9;
      }
LABEL_5:
      sub_10011EF7C(v0, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
      char v22 = 1;
      return v22 & 1;
    default:
      sub_10011EED8();
      uint64_t v19 = *(int *)(v18 + 48);
      uint64_t v20 = &v1[v19];
      if (sub_100181F48())
      {
        sub_1001829D8();
        v21();
LABEL_9:
        sub_100178110(v0, &qword_100E72C88);
        goto LABEL_10;
      }
      int v30 = *v1;
      int v24 = *v17;
      uint64_t v25 = &v17[v19];
      uint64_t v26 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v4 + 32);
      v26(v11, v20, v2);
      v26(v8, v25, v2);
      if (v30 != v24)
      {
        uint64_t v27 = *(void (**)(void))(v4 + 8);
        sub_1001829D8();
        v27();
        sub_1001829D8();
        v27();
        sub_10011EF7C(v0, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
LABEL_10:
        char v22 = 0;
        return v22 & 1;
      }
      char v22 = static WeatherMapOverlayKind.== infix(_:_:)();
      uint64_t v28 = *(void (**)(void))(v4 + 8);
      sub_1001829D8();
      v28();
      sub_1001829D8();
      v28();
      sub_10011EF7C(v0, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
      return v22 & 1;
  }
}

uint64_t sub_10011EED8()
{
  sub_1001097B4();
  v1(0);
  sub_100162E4C();
  uint64_t v2 = sub_10011BFA4();
  v3(v2);
  return v0;
}

uint64_t sub_10011EF28(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10011EF7C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10011EFD0@<X0>(uint64_t a1@<X8>)
{
  return sub_10011EFF4(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_10011EFF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_10018C568();
  type metadata accessor for Page();
  type metadata accessor for Array();
  sub_10018C568();
  type metadata accessor for PageContainer();
  type metadata accessor for _ConditionalContent();
  v25[6] = &protocol witness table for EmptyView;
  v25[7] = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_10017FE34();
  type metadata accessor for VStack();
  swift_getWitnessTable();
  sub_10018C568();
  type metadata accessor for IDView();
  swift_getWitnessTable();
  v25[5] = a4;
  sub_10018C568();
  type metadata accessor for ForEach();
  v25[0] = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v10 = type metadata accessor for WireframeScrollInterestView();
  sub_10017C83C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_10016278C();
  uint64_t v16 = v14 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v25 - v18;
  v25[1] = a1;
  void v25[2] = a2;
  v25[3] = a3;
  v25[4] = a4;
  uint64_t v20 = type metadata accessor for AnimatableTabView();
  sub_10011F294(v20, v16);
  swift_getWitnessTable();
  sub_100121584(v16, v10, (uint64_t)v19);
  uint64_t v21 = *(void (**)(uint64_t))(v12 + 8);
  sub_100164FC8();
  v21(v22);
  sub_100121584((uint64_t)v19, v10, a5);
  sub_100164FC8();
  return ((uint64_t (*)(uint64_t))v21)(v23);
}

uint64_t sub_10011F294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v41 = v5;
  uint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v7[4];
  uint64_t v10 = v7[5];
  uint64_t v11 = v7[6];
  uint64_t v44 = v7[3];
  uint64_t v8 = v44;
  uint64_t v45 = v9;
  uint64_t v46 = v10;
  uint64_t v47 = v11;
  type metadata accessor for Page();
  uint64_t v12 = type metadata accessor for Array();
  uint64_t v40 = v8;
  uint64_t v44 = v8;
  uint64_t v45 = v9;
  uint64_t v38 = v10;
  uint64_t v46 = v10;
  uint64_t v47 = v11;
  type metadata accessor for PageContainer();
  type metadata accessor for _ConditionalContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v49 = &protocol witness table for EmptyView;
  uint64_t v50 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v14 = type metadata accessor for VStack();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v44 = v14;
  uint64_t v45 = v9;
  uint64_t v46 = v15;
  uint64_t v47 = v11;
  uint64_t v16 = type metadata accessor for IDView();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v44 = v12;
  uint64_t v45 = v9;
  uint64_t v39 = v9;
  uint64_t v46 = v16;
  uint64_t v47 = v17;
  uint64_t v37 = v11;
  uint64_t v48 = v11;
  uint64_t v18 = type metadata accessor for ForEach();
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v35 = swift_getWitnessTable();
  uint64_t v36 = v18;
  uint64_t v19 = type metadata accessor for WireframeScrollInterestView();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = &v33[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v25 = &v33[-v24];
  if (qword_100E62288 != -1) {
    swift_once();
  }
  int v34 = byte_100F51390;
  uint64_t v26 = *(void *)(v2 + *(int *)(a1 + 64));
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  unint64_t v27 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  uint64_t v29 = v39;
  *((void *)v28 + 2) = v40;
  *((void *)v28 + 3) = v29;
  uint64_t v30 = v37;
  *((void *)v28 + 4) = v38;
  *((void *)v28 + 5) = v30;
  (*(void (**)(char *, unsigned char *, uint64_t))(v4 + 32))(&v28[v27], v6, a1);
  swift_retain();
  sub_10011FDD0(6447476, 0xE300000000000000, v34, v26, (void (*)(uint64_t))sub_10012371C, (uint64_t)v23);
  swift_getWitnessTable();
  sub_100121584((uint64_t)v23, v19, (uint64_t)v25);
  uint64_t v31 = *(void (**)(unsigned char *, uint64_t))(v20 + 8);
  v31(v23, v19);
  sub_100121584((uint64_t)v25, v19, v42);
  return ((uint64_t (*)(unsigned char *, uint64_t))v31)(v25, v19);
}

uint64_t sub_10011F6E4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(((a1 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  swift_release();

  return swift_release();
}

uint64_t sub_10011F790@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v50 = a4;
  uint64_t v7 = type metadata accessor for WireframeScrollInterestView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  char v51 = (char *)v38 - v11;
  uint64_t v42 = *(void *)(a2 - 8);
  uint64_t v12 = v42;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v14;
  uint64_t v55 = a2;
  id v56 = &type metadata for Bool;
  uint64_t v57 = a3;
  uint64_t v58 = &protocol witness table for Bool;
  uint64_t v46 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v48 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v52 = (char *)v38 - v15;
  uint64_t v47 = type metadata accessor for ModifiedContent();
  uint64_t v49 = *(void *)(v47 - 8);
  uint64_t v16 = __chkstk_darwin(v47);
  uint64_t v43 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v45 = (uint64_t)v38 - v18;
  uint64_t v19 = *(int *)(v7 + 44);
  uint64_t v41 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1 + v19, a2);
  LOBYTE(v55) = ScrollEventState.isScrolling.getter() & 1;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v20 = v51;
  uint64_t v21 = v7;
  v40(v51, a1, v7);
  uint64_t v22 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v23 = (v22 + 32) & ~v22;
  v38[2] = v23 + v9;
  v38[1] = v22 | 7;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = a3;
  uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v26 = v21;
  v25(v24 + v23, v20, v21);
  variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  unint64_t v27 = v39;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v27, a2);
  uint64_t v28 = v51;
  v40(v51, v41, v26);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a2;
  *(void *)(v29 + 24) = a3;
  v25(v29 + v23, v28, v26);
  uint64_t v55 = a2;
  id v56 = &type metadata for Bool;
  uint64_t v57 = a3;
  uint64_t v58 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = (uint64_t)v43;
  uint64_t v31 = OpaqueTypeMetadata2;
  uint64_t v33 = v52;
  View.onDisappear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v31);
  uint64_t v53 = OpaqueTypeConformance2;
  uint64_t v54 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v34 = v47;
  swift_getWitnessTable();
  uint64_t v35 = v45;
  sub_100121584(v32, v34, v45);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v36(v32, v34);
  sub_100121584(v35, v34, v50);
  return ((uint64_t (*)(uint64_t, uint64_t))v36)(v35, v34);
}

uint64_t sub_10011FCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  unint64_t v9 = (v8 + 32 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  unint64_t v10 = (v8 + 32 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  swift_bridgeObjectRetain();
  swift_retain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  uint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral()
{
  return 0;
}

uint64_t sub_10011FDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  char v11 = a3 & 1;
  uint64_t v12 = (uint64_t *)(a6 + *(int *)(type metadata accessor for WireframeScrollInterestView() + 48));
  *uint64_t v12 = sub_10011FE94();
  v12[1] = v13;
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = v11;
  *(void *)(a6 + 24) = a4;
  uint64_t v14 = swift_retain();
  a5(v14);
  swift_release();

  return swift_release();
}

uint64_t sub_10011FE94()
{
  sub_10017DF08(&qword_100E74130);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t sub_10011FED4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v102 = a1;
  uint64_t v106 = a6;
  uint64_t v10 = type metadata accessor for LazyPageTabViewStyle();
  uint64_t v92 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v91 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = a2;
  uint64_t v119 = a3;
  uint64_t v120 = a4;
  uint64_t v121 = a5;
  type metadata accessor for Page();
  uint64_t v12 = type metadata accessor for Array();
  uint64_t v118 = a2;
  uint64_t v119 = a3;
  uint64_t v120 = a4;
  uint64_t v121 = a5;
  type metadata accessor for PageContainer();
  type metadata accessor for _ConditionalContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v123 = &protocol witness table for EmptyView;
  uint64_t v124 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v14 = type metadata accessor for VStack();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v118 = v14;
  uint64_t v119 = a3;
  uint64_t v120 = v15;
  uint64_t v121 = a5;
  uint64_t v16 = type metadata accessor for IDView();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v118 = v12;
  uint64_t v119 = a3;
  uint64_t v120 = v16;
  uint64_t v121 = (void *)v17;
  uint64_t v122 = a5;
  type metadata accessor for ForEach();
  uint64_t v117 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v18 = type metadata accessor for WireframeScrollInterestView();
  uint64_t v97 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v118 = a3;
  uint64_t v119 = v18;
  uint64_t v20 = a3;
  uint64_t v120 = (uint64_t)a5;
  uint64_t v121 = (void *)v19;
  uint64_t v98 = v19;
  uint64_t v21 = type metadata accessor for TabView();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v118 = v21;
  uint64_t v119 = v10;
  uint64_t v108 = v10;
  uint64_t v120 = v22;
  uint64_t v121 = &protocol witness table for LazyPageTabViewStyle;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v90 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v24 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v89 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v88 = (uint64_t)&v78 - v26;
  uint64_t v87 = type metadata accessor for PageTabViewStyle.IndexDisplayMode();
  uint64_t v86 = *(void *)(v87 - 8);
  uint64_t v27 = __chkstk_darwin(v87);
  uint64_t v84 = (char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v83 = (char *)&v78 - v29;
  uint64_t v30 = type metadata accessor for PageTabViewStyle();
  uint64_t v85 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v81 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for Binding();
  uint64_t v32 = type metadata accessor for Optional();
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)&v78 - v33;
  uint64_t v35 = swift_checkMetadataState();
  uint64_t v96 = *(void *)(v35 - 8);
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v94 = (char *)&v78 - v37;
  uint64_t v109 = v36;
  uint64_t v118 = v36;
  uint64_t v119 = v30;
  uint64_t v103 = v30;
  uint64_t v105 = v22;
  uint64_t v120 = v22;
  uint64_t v121 = &protocol witness table for PageTabViewStyle;
  uint64_t v38 = swift_getOpaqueTypeMetadata2();
  uint64_t v82 = *(void *)(v38 - 8);
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v79 = (char *)&v78 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v80 = (uint64_t)&v78 - v41;
  uint64_t v99 = v42;
  uint64_t v104 = OpaqueTypeMetadata2;
  uint64_t v101 = type metadata accessor for _ConditionalContent();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v107 = (uint64_t)&v78 - v43;
  uint64_t v118 = a2;
  uint64_t v119 = a3;
  uint64_t v44 = v95;
  uint64_t v120 = v95;
  uint64_t v121 = a5;
  uint64_t v45 = a5;
  uint64_t v46 = type metadata accessor for AnimatableTabView();
  uint64_t v47 = v102;
  uint64_t v48 = &v102[*(int *)(v46 + 92)];
  uint64_t v49 = *(void *)v48;
  LOBYTE(v22) = v48[8];
  sub_100195B7C(*(void *)v48, v22);
  sub_100149AE8();
  char v51 = v50;
  sub_10018F6D8(v49, v22);
  sub_1001234E8((void *)v46, (uint64_t)v34);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v93);
  uint64_t v110 = a2;
  uint64_t v111 = v20;
  uint64_t v112 = v44;
  uint64_t v113 = v45;
  uint64_t v114 = v47;
  swift_checkMetadataState();
  if (v51)
  {
    uint64_t v52 = v94;
    TabView.init(selection:content:)();
    uint64_t v53 = v83;
    static PageTabViewStyle.IndexDisplayMode.never.getter();
    uint64_t v54 = v86;
    uint64_t v55 = v87;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v84, v53, v87);
    id v56 = v81;
    PageTabViewStyle.init(indexDisplayMode:)();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
    uint64_t v57 = (uint64_t)v79;
    uint64_t v58 = v109;
    uint64_t v59 = v103;
    uint64_t v60 = v105;
    View.tabViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v56, v59);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v52, v58);
    uint64_t v118 = v58;
    uint64_t v119 = v59;
    uint64_t v120 = v60;
    uint64_t v121 = &protocol witness table for PageTabViewStyle;
    uint64_t v102 = (char *)&opaque type descriptor for <<opaque return type of View.tabViewStyle<A>(_:)>>;
    swift_getOpaqueTypeConformance2();
    uint64_t v61 = v80;
    uint64_t v62 = v99;
    sub_100121584(v57, v99, v80);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
    v63(v57, v62);
    sub_100121584(v61, v62, v57);
    uint64_t v118 = v58;
    uint64_t v119 = v108;
    uint64_t v120 = v60;
    uint64_t v121 = &protocol witness table for LazyPageTabViewStyle;
    swift_getOpaqueTypeConformance2();
    sub_1000E95C0();
    v63(v57, v62);
    v63(v61, v62);
  }
  else
  {
    uint64_t v64 = v94;
    TabView.init(selection:content:)();
    uint64_t v65 = v91;
    static TabViewStyle<>.lazyPage.getter();
    uint64_t v66 = (uint64_t)v89;
    uint64_t v68 = v108;
    uint64_t v67 = v109;
    uint64_t v60 = v105;
    View.tabViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v65, v68);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v64, v67);
    uint64_t v118 = v67;
    uint64_t v119 = v68;
    uint64_t v120 = v60;
    uint64_t v121 = &protocol witness table for LazyPageTabViewStyle;
    swift_getOpaqueTypeConformance2();
    uint64_t v69 = v88;
    uint64_t v70 = v104;
    sub_100121584(v66, v104, v88);
    int v71 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
    v71(v66, v70);
    sub_100121584(v69, v70, v66);
    uint64_t v59 = v103;
    uint64_t v118 = v109;
    uint64_t v119 = v103;
    uint64_t v120 = v60;
    uint64_t v121 = &protocol witness table for PageTabViewStyle;
    swift_getOpaqueTypeConformance2();
    sub_100121F14();
    v71(v66, v70);
    v71(v69, v70);
  }
  uint64_t v72 = v109;
  uint64_t v118 = v109;
  uint64_t v119 = v59;
  uint64_t v120 = v60;
  uint64_t v121 = &protocol witness table for PageTabViewStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v118 = v72;
  uint64_t v119 = v108;
  uint64_t v120 = v60;
  uint64_t v121 = &protocol witness table for LazyPageTabViewStyle;
  uint64_t v74 = swift_getOpaqueTypeConformance2();
  uint64_t v115 = OpaqueTypeConformance2;
  uint64_t v116 = v74;
  uint64_t v75 = v101;
  swift_getWitnessTable();
  uint64_t v76 = v107;
  sub_100121584(v107, v75, v106);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 8))(v76, v75);
}

uint64_t sub_100120B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v28 = a7;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  type metadata accessor for PageContainer();
  uint64_t v11 = type metadata accessor for _ConditionalContent();
  uint64_t v35 = &protocol witness table for EmptyView;
  uint64_t WitnessTable = swift_getWitnessTable();
  void v23[2] = v11;
  v23[1] = swift_getWitnessTable();
  uint64_t v12 = type metadata accessor for VStack();
  uint64_t v25 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v23 - v13;
  v23[0] = swift_getWitnessTable();
  uint64_t v37 = v12;
  uint64_t v38 = a4;
  uint64_t v39 = v23[0];
  uint64_t v40 = a6;
  uint64_t v15 = type metadata accessor for IDView();
  uint64_t v24 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v23 - v19;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v33 = v26;
  uint64_t v34 = v27;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  type metadata accessor for Page();
  View.id<A>(_:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v12);
  swift_getWitnessTable();
  sub_100121584((uint64_t)v18, v15, (uint64_t)v20);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v24 + 8);
  v21(v18, v15);
  sub_100121584((uint64_t)v20, v15, v28);
  return ((uint64_t (*)(char *, uint64_t))v21)(v20, v15);
}

uint64_t sub_100120EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v64 = a1;
  uint64_t v62 = a7;
  type metadata accessor for TransitionContext();
  uint64_t v50 = type metadata accessor for Optional();
  __chkstk_darwin(v50);
  uint64_t v52 = (char *)&v46 - v11;
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v69 = a5;
  uint64_t v70 = a6;
  uint64_t v63 = type metadata accessor for Page();
  uint64_t v47 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v48 = (char *)&v46 - v12;
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v69 = a5;
  uint64_t v70 = a6;
  uint64_t v13 = type metadata accessor for PageContainer();
  uint64_t v53 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v51 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v49 = (uint64_t)&v46 - v16;
  uint64_t v54 = a3;
  uint64_t v55 = a5;
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v69 = a5;
  uint64_t v70 = a6;
  uint64_t v17 = type metadata accessor for AnimatableTabView();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v22 = *(void *)(a4 - 8);
  uint64_t v23 = __chkstk_darwin(v19);
  uint64_t v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v46 - v26;
  uint64_t v58 = v13;
  uint64_t v28 = type metadata accessor for _ConditionalContent();
  uint64_t v60 = *(void *)(v28 - 8);
  uint64_t v61 = v28;
  __chkstk_darwin(v28);
  uint64_t v59 = (char *)&v46 - v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v27, v64 + *(int *)(v63 + 52), a4);
  uint64_t v30 = v57;
  type metadata accessor for State();
  State.wrappedValue.getter();
  uint64_t v56 = a6;
  LOBYTE(a5) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v22 + 8);
  v31(v25, a4);
  v31(v27, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v30, v17);
  if (a5)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
LABEL_5:
    uint64_t v34 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v48, v64, v63);
    uint64_t v35 = (uint64_t *)(v30 + *(int *)(v17 + 60));
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    type metadata accessor for State();
    swift_retain();
    uint64_t v38 = (uint64_t)v52;
    State.wrappedValue.getter();
    uint64_t v39 = v51;
    sub_100121FC0(v34, v36, v37, v38, v51);
    uint64_t v40 = v58;
    swift_getWitnessTable();
    uint64_t v41 = v49;
    sub_100121584(v39, v40, v49);
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v42(v39, v40);
    sub_100121584(v41, v40, v39);
    uint64_t v33 = (uint64_t)v59;
    sub_100121F14();
    v42(v39, v40);
    v42(v41, v40);
    goto LABEL_6;
  }
  char v32 = sub_100122278(v17);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  if ((v32 & 1) == 0) {
    goto LABEL_5;
  }
  swift_getWitnessTable();
  uint64_t v33 = (uint64_t)v59;
  sub_1000E95C0();
LABEL_6:
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v65 = &protocol witness table for EmptyView;
  uint64_t v66 = WitnessTable;
  uint64_t v44 = v61;
  swift_getWitnessTable();
  sub_100121584(v33, v44, v62);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v33, v44);
}

uint64_t sub_10012154C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_100121588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  uint64_t v24 = *(void (**)(_DWORD *, uint64_t))v5;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 8;
  unsigned int v9 = *(_DWORD *)(v7 + 80);
  uint64_t v10 = *(void *)(v5 + 56) + *(_DWORD *)(v7 + 80);
  unint64_t v25 = ~(unint64_t)*(_DWORD *)(v7 + 80);
  uint64_t v23 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v23((v10 + a1) & v25, v6);
  unint64_t v11 = (v10 & v25) + *(void *)(v8 + 56);
  swift_release();
  uint64_t v12 = *(unsigned __int8 *)(v5 + 72) | v9;
  uint64_t v13 = (_DWORD *)((((v11 + 7 + a1) & 0xFFFFFFFFFFFFFFF8) + (v12 | 7) + 16) & ~(v12 | 7));
  unsigned int v14 = *(_DWORD *)(v5 + 76);
  uint64_t v15 = *(unsigned int *)(v8 + 76);
  unint64_t v16 = ((v11 + 7 + ((v11 + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v15 | v14)
  {
    if (v14 >= v15)
    {
      uint64_t v17 = (uint64_t)v13;
      uint64_t v15 = *(unsigned int *)(v5 + 76);
      uint64_t v18 = v4;
    }
    else
    {
      uint64_t v17 = ((unint64_t)v13 + v10) & v25;
      uint64_t v18 = v6;
    }
    if (_s7Weather24LocationCompositionStateOwet_0(v17, v15, v18)) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (!*((unsigned char *)v13 + v16)) {
    goto LABEL_11;
  }
  int v19 = *((unsigned __int8 *)v13 + v16) - 1;
  int v20 = v16 & 0xFFFFFFF8;
  if ((v16 & 0xFFFFFFF8) != 0)
  {
    int v19 = 0;
    int v20 = *v13;
  }
  if ((v20 | v19) == 0xFFFFFFFF)
  {
LABEL_11:
    v24(v13, v4);
    v23(((unint64_t)v13 + v10) & v25, v6);
    unint64_t v21 = ((unint64_t)v13 + v11 + v12) & ~v12;
    v24((_DWORD *)v21, v4);
    v23((v10 + v21) & v25, v6);
  }
LABEL_12:
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1001217EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  uint64_t v45 = v6;
  uint64_t v43 = *(void (**)(void))v7;
  (*(void (**)(void))v7)();
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  unsigned int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = *(void *)(v7 + 48) + *(_DWORD *)(v8 + 80);
  unint64_t v44 = ~(unint64_t)*(_DWORD *)(v8 + 80);
  uint64_t v49 = *(void *)(a3 + 24);
  uint64_t v42 = *(void (**)(unint64_t, unint64_t))(v8 + 16);
  v42((v11 + a1) & v44, (v11 + a2) & v44);
  unint64_t v12 = (v11 & v44) + *(void *)(v9 + 48);
  unint64_t v13 = v12 + 7;
  uint64_t v48 = a1;
  unsigned int v14 = (void *)((v12 + 7 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)((v12 + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v14 = *v15;
  v14[1] = v15[1];
  uint64_t v16 = *(unsigned __int8 *)(v7 + 64) | v10;
  unint64_t v17 = (*(unsigned char *)(v7 + 64) | v10) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = ((unint64_t)v14 + v16 + 16) & v17;
  uint64_t v18 = ((unint64_t)v15 + v16 + 16) & v17;
  uint64_t v19 = *(unsigned int *)(v7 + 68);
  uint64_t v20 = *(unsigned int *)(v9 + 68);
  uint64_t v41 = v12 + v16;
  unint64_t v47 = (v12 + 7 + ((v12 + v16) & ~v16)) & 0xFFFFFFFFFFFFFFF8;
  size_t v21 = v47 + 8;
  swift_retain();
  int v46 = v20 | v19;
  if (v20 | v19)
  {
    if (v19 >= v20)
    {
      uint64_t v22 = v18;
      uint64_t v23 = v19;
      uint64_t v24 = v45;
    }
    else
    {
      uint64_t v22 = (v11 + v18) & v44;
      uint64_t v23 = v20;
      uint64_t v24 = v49;
    }
    size_t v21 = v47 + 8;
    if (_s7Weather24LocationCompositionStateOwet_0(v22, v23, v24))
    {
LABEL_12:
      unint64_t v31 = v47;
      int v32 = v46;
      if (v46) {
        size_t v33 = v21;
      }
      else {
        size_t v33 = v47 + 9;
      }
      memcpy((void *)v50, (const void *)v18, v33);
      uint64_t v30 = v48;
      goto LABEL_16;
    }
  }
  else if (*(unsigned char *)(v18 + v21))
  {
    int v25 = *(unsigned __int8 *)(v18 + v21) - 1;
    int v26 = v21 & 0xFFFFFFF8;
    if ((v21 & 0xFFFFFFF8) != 0)
    {
      int v25 = 0;
      int v26 = *(_DWORD *)v18;
    }
    if ((v26 | v25) != 0xFFFFFFFF) {
      goto LABEL_12;
    }
  }
  unint64_t v40 = v13;
  ((void (*)(uint64_t, uint64_t, uint64_t))v43)(v50, v18, v45);
  ((void (*)(unint64_t, unint64_t, uint64_t))v42)((v11 + v50) & v44, (v11 + v18) & v44, v49);
  uint64_t v27 = (v41 + v50) & ~v16;
  uint64_t v28 = (v41 + v18) & ~v16;
  ((void (*)(uint64_t, uint64_t, uint64_t))v43)(v27, v28, v45);
  ((void (*)(unint64_t, unint64_t, uint64_t))v42)((v11 + v27) & v44, (v11 + v28) & v44, v49);
  unint64_t v29 = v13 + v27;
  uint64_t v30 = v48;
  size_t v21 = v47 + 8;
  *(void *)(v29 & 0xFFFFFFFFFFFFFFF8) = *(void *)((v40 + v28) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = v47;
  int v32 = v46;
  if (!v46) {
    *(unsigned char *)(v50 + v47 + 8) = 0;
  }
LABEL_16:
  size_t v34 = v31 + 9;
  if (v32) {
    size_t v34 = v21;
  }
  unint64_t v35 = ((v50 | 7) + v34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = ((v18 | 7) + v34) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v35 = *(unsigned char *)v36;
  *(void *)(v35 + 8) = *(void *)(v36 + 8);
  uint64_t v37 = (void *)((v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = (void *)((v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_retain();
  swift_retain();
  swift_retain();
  return v30;
}

uint64_t sub_100121B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100121BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 15;
  swift_release();
  unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  uint64_t v9 = v7 + 8;
  int v10 = *(_DWORD *)(v7 + 80);
  unint64_t v43 = ~(unint64_t)v10;
  v8((v5 + v10 + 8) & v43, v6);
  uint64_t v11 = *(void *)(v9 + 56);
  uint64_t v12 = ((v10 | 7) + a1 + v11 + ((v10 + 16) & v43)) & ~(v10 | 7);
  uint64_t v42 = v8;
  v8(v12, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v13 = (((((((((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80) | v10;
  unint64_t v17 = (_DWORD *)((v13 + (v16 | 7) + 16) & ~(v16 | 7));
  unsigned int v18 = *(_DWORD *)(v15 + 84);
  uint64_t v19 = *(unsigned int *)(v9 + 76);
  uint64_t v20 = *(void *)(v15 + 64) + v10;
  uint64_t v21 = (v20 & v43) + v11;
  unint64_t v22 = (v21 + ((v21 + v16) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = v22 + 8;
  int v24 = v19 | v18;
  uint64_t v41 = v21 + v16;
  if (v19 | v18)
  {
    if (v18 >= v19)
    {
      uint64_t v25 = (uint64_t)v17;
      uint64_t v19 = *(unsigned int *)(v15 + 84);
      uint64_t v26 = v14;
      uint64_t v27 = v14;
    }
    else
    {
      uint64_t v25 = ((unint64_t)v17 + v20) & v43;
      uint64_t v26 = v14;
      uint64_t v27 = v6;
    }
    int v30 = _s7Weather24LocationCompositionStateOwet_0(v25, v19, v27);
    uint64_t v14 = v26;
    if (!v30)
    {
LABEL_11:
      unint64_t v31 = *(void (**)(_DWORD *, uint64_t))(v15 + 8);
      int v40 = v24;
      uint64_t v32 = v14;
      v31(v17, v14);
      v42(((unint64_t)v17 + v20) & v43, v6);
      unint64_t v33 = ((unint64_t)v17 + v41) & ~v16;
      uint64_t v34 = v32;
      int v24 = v40;
      v31((_DWORD *)v33, v34);
      v42((v20 + v33) & v43, v6);
    }
  }
  else
  {
    if (!*((unsigned char *)v17 + v23)) {
      goto LABEL_11;
    }
    int v28 = *((unsigned __int8 *)v17 + v23) - 1;
    int v29 = v23 & 0xFFFFFFF8;
    if ((v23 & 0xFFFFFFF8) != 0)
    {
      int v28 = 0;
      int v29 = *v17;
    }
    if ((v29 | v28) == 0xFFFFFFFF) {
      goto LABEL_11;
    }
  }
  if (v24) {
    unint64_t v35 = v22 + 8;
  }
  else {
    unint64_t v35 = v22 + 9;
  }
  swift_release();
  unint64_t v36 = (char *)v17 + ((v35 + 7) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  sub_10018F6D8(*((void *)v36 + 4), v36[40]);
  sub_10018F6D8(*((void *)v36 + 6), v36[56]);
  uint64_t v37 = *((void *)v36 + 8);
  char v38 = v36[72];

  return sub_10018F6D8(v37, v38);
}

void sub_100121F14()
{
  sub_10010977C();
  sub_10012BFF0();
  sub_100162E4C();
  __chkstk_darwin(v0);
  sub_100162880();
  sub_10008B8B4();
  v1();
  swift_storeEnumTagMultiPayload();
  sub_1005EFD90();
  sub_100162714();
}

uint64_t sub_100121FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for Page();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t v11 = (int *)type metadata accessor for PageContainer();
  uint64_t v12 = (void *)(a5 + v11[13]);
  *uint64_t v12 = a2;
  v12[1] = a3;
  uint64_t v13 = a5 + v11[14];
  type metadata accessor for TransitionContext();
  uint64_t v14 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a4, v14);
  uint64_t v15 = a5 + v11[15];
  *(unsigned char *)uint64_t v15 = sub_1001221E4() & 1;
  *(void *)(v15 + 8) = v16;
  unint64_t v17 = (uint64_t *)(a5 + v11[16]);
  type metadata accessor for PageContainerSidebarState();
  *(unsigned char *)(swift_allocObject() + 16) = 0;
  ObservationRegistrar.init()();
  uint64_t result = sub_100122220();
  *unint64_t v17 = result;
  v17[1] = v19;
  return result;
}

uint64_t type metadata accessor for Page()
{
  return swift_getGenericMetadata();
}

{
  return type metadata accessor for Page();
}

uint64_t type metadata accessor for PageContainer()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for PageContainerSidebarState()
{
  uint64_t result = qword_100E98738;
  if (!qword_100E98738) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001221E4()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t sub_100122220()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t sub_100122278(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = __chkstk_darwin(a1);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(unsigned char *)(v6 + *(int *)(v3 + 84));
  (*(void (**)(char *))(v2 + 16))(v5);
  if (v7)
  {
    char v8 = 1;
  }
  else
  {
    uint64_t v9 = &v5[*(int *)(a1 + 88)];
    uint64_t v10 = *(void *)v9;
    char v11 = v9[8];
    sub_100195B7C(*(void *)v9, v11);
    sub_100149AE8();
    char v8 = v12;
    sub_10018F6D8(v10, v11);
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  return v8 & 1;
}

uint64_t sub_1001223A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v127 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  sub_10017C83C();
  uint64_t v126 = v3;
  __chkstk_darwin(v4);
  sub_1001626E0();
  sub_100109338(v6 - v5);
  uint64_t v8 = v7[2];
  uint64_t v9 = v7[4];
  uint64_t v10 = (void *)v7[5];
  uint64_t v120 = v7;
  uint64_t v147 = v8;
  uint64_t v148 = v2;
  uint64_t v11 = v8;
  uint64_t v149 = v9;
  uint64_t v150 = v10;
  uint64_t v12 = v9;
  uint64_t v131 = v9;
  uint64_t v13 = v10;
  sub_100189438();
  uint64_t v101 = type metadata accessor for TransitionContext();
  uint64_t v103 = type metadata accessor for Optional();
  sub_10017C83C();
  uint64_t v102 = v14;
  sub_100165058();
  __chkstk_darwin(v15);
  sub_10018210C();
  sub_100109338(v16);
  sub_10017C83C();
  uint64_t v123 = v17;
  __chkstk_darwin(v18);
  sub_100109338((uint64_t)v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = v20;
  __chkstk_darwin(v21);
  sub_100109338((uint64_t)v100 - v22);
  uint64_t v23 = v11;
  uint64_t v133 = v11;
  uint64_t v147 = v11;
  uint64_t v148 = v2;
  uint64_t v149 = v12;
  uint64_t v150 = v13;
  sub_100189438();
  type metadata accessor for Page();
  uint64_t v24 = type metadata accessor for Array();
  uint64_t v147 = v23;
  uint64_t v148 = v2;
  uint64_t v149 = v12;
  uint64_t v150 = v13;
  sub_100189438();
  type metadata accessor for PageContainer();
  type metadata accessor for _ConditionalContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v152 = &protocol witness table for EmptyView;
  uint64_t v153 = WitnessTable;
  uint64_t v129 = &protocol conformance descriptor for <> _ConditionalContent<A, B>;
  swift_getWitnessTable();
  uint64_t v26 = type metadata accessor for VStack();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v147 = v26;
  uint64_t v148 = v2;
  uint64_t v149 = v27;
  uint64_t v150 = v13;
  sub_100189438();
  uint64_t v28 = type metadata accessor for IDView();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v147 = v24;
  uint64_t v148 = v2;
  uint64_t v149 = v28;
  uint64_t v150 = (void *)v29;
  uint64_t v151 = v13;
  uint64_t v132 = v13;
  sub_100189438();
  type metadata accessor for ForEach();
  uint64_t v146 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v30 = type metadata accessor for WireframeScrollInterestView();
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v147 = v2;
  uint64_t v148 = v30;
  uint64_t v149 = (uint64_t)v13;
  uint64_t v150 = (void *)v31;
  sub_100189438();
  uint64_t v32 = type metadata accessor for TabView();
  uint64_t v33 = type metadata accessor for PageTabViewStyle();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v147 = v32;
  uint64_t v148 = v33;
  uint64_t v149 = v34;
  uint64_t v150 = &protocol witness table for PageTabViewStyle;
  swift_getOpaqueTypeMetadata2();
  uint64_t v35 = type metadata accessor for LazyPageTabViewStyle();
  uint64_t v147 = v32;
  uint64_t v148 = v35;
  uint64_t v149 = v34;
  uint64_t v150 = &protocol witness table for LazyPageTabViewStyle;
  sub_100189438();
  swift_getOpaqueTypeMetadata2();
  sub_10017FE34();
  uint64_t v128 = (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for _ConditionalContent();
  uint64_t v36 = type metadata accessor for Group();
  sub_10017C83C();
  uint64_t v115 = v37;
  sub_100165058();
  __chkstk_darwin(v38);
  sub_10018210C();
  sub_100109338(v39);
  uint64_t v40 = type metadata accessor for ModifiedContent();
  sub_10017C83C();
  uint64_t v113 = v41;
  sub_100165058();
  __chkstk_darwin(v42);
  sub_10018210C();
  sub_100109338(v43);
  uint64_t v44 = type metadata accessor for ModifiedContent();
  sub_10017C83C();
  uint64_t v119 = v45;
  sub_100165058();
  __chkstk_darwin(v46);
  sub_10018210C();
  sub_100109338(v47);
  uint64_t v147 = v32;
  uint64_t v148 = v33;
  uint64_t v149 = v34;
  uint64_t v48 = sub_100166D04((uint64_t)&protocol witness table for PageTabViewStyle);
  uint64_t v147 = v32;
  uint64_t v148 = v35;
  uint64_t v149 = v34;
  uint64_t v49 = sub_100166D04((uint64_t)&protocol witness table for LazyPageTabViewStyle);
  uint64_t v144 = v48;
  uint64_t v145 = v49;
  uint64_t v143 = swift_getWitnessTable();
  uint64_t v112 = v36;
  uint64_t v50 = swift_getWitnessTable();
  unint64_t v51 = sub_100123BE4();
  uint64_t v106 = v50;
  uint64_t v141 = v50;
  unint64_t v142 = v51;
  uint64_t v105 = v40;
  uint64_t v107 = swift_getWitnessTable();
  uint64_t v139 = v107;
  uint64_t v140 = &protocol witness table for _TransactionModifier;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = v132;
  uint64_t v54 = (void *)v132[1];
  uint64_t v147 = v44;
  uint64_t v148 = v2;
  uint64_t v149 = v52;
  uint64_t v150 = v54;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  sub_10017C83C();
  uint64_t v116 = v56;
  sub_100165058();
  __chkstk_darwin(v57);
  sub_10018210C();
  sub_100109338(v58);
  uint64_t v121 = v44;
  uint64_t v147 = v44;
  uint64_t v148 = v2;
  uint64_t v108 = v52;
  uint64_t v149 = v52;
  uint64_t v150 = v54;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v118 = OpaqueTypeMetadata2;
  uint64_t v147 = OpaqueTypeMetadata2;
  uint64_t v148 = v2;
  uint64_t v111 = OpaqueTypeConformance2;
  uint64_t v149 = OpaqueTypeConformance2;
  uint64_t v150 = v54;
  uint64_t v129 = v54;
  uint64_t v117 = swift_getOpaqueTypeMetadata2();
  sub_10017C83C();
  uint64_t v114 = v60;
  __chkstk_darwin(v61);
  sub_10016278C();
  uint64_t v109 = v62 - v63;
  __chkstk_darwin(v64);
  sub_100109338((uint64_t)v100 - v65);
  uint64_t v134 = v133;
  uint64_t v135 = v2;
  uint64_t v136 = v131;
  uint64_t v137 = v53;
  uint64_t v66 = v122;
  uint64_t v67 = v130;
  uint64_t v138 = v130;
  Group<A>.init(content:)();
  uint64_t v68 = (uint64_t)v120;
  uint64_t v69 = v67;
  LOBYTE(v67) = sub_100122278((uint64_t)v120);
  uint64_t v70 = v123;
  uint64_t v71 = v123 + 16;
  uint64_t v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16);
  v128(v66, v69, v68);
  if (v67)
  {
    sub_100127BA4();
    v72();
  }
  else
  {
    uint64_t v73 = v103;
    type metadata accessor for State();
    uint64_t v74 = v100[1];
    State.wrappedValue.getter();
    sub_100127BA4();
    v75();
    _s7Weather24LocationCompositionStateOwet_0(v74, 1, v101);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v74, v73);
  }
  View.allowsHitTesting(_:)();
  sub_100162F0C();
  v76();
  View.transaction(_:)();
  sub_100162F0C();
  v77();
  type metadata accessor for Binding();
  Binding.wrappedValue.getter();
  uint64_t v78 = v125;
  uint64_t v79 = sub_1001D0F04();
  uint64_t v104 = v71;
  ((void (*)(uint64_t))v128)(v79);
  uint64_t v80 = *(unsigned __int8 *)(v70 + 80);
  v124 += (v80 + 48) & ~v80;
  uint64_t v81 = (v80 + 48) & ~v80;
  uint64_t v122 = v81;
  uint64_t v115 = v80 | 7;
  uint64_t v82 = (void *)swift_allocObject();
  uint64_t v83 = sub_1001817AC(v82);
  uint64_t v123 = *(void *)(v70 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v123)((char *)v83 + v81, v78, v68);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  uint64_t v126 = *(void *)(v126 + 8);
  sub_1001869E4();
  sub_100164944();
  v84();
  sub_100162F0C();
  v85();
  type metadata accessor for State();
  State.wrappedValue.getter();
  uint64_t v86 = sub_1001D0F04();
  ((void (*)(uint64_t))v128)(v86);
  uint64_t v87 = (void *)swift_allocObject();
  uint64_t v88 = sub_1001817AC(v87);
  ((void (*)(char *, uint64_t, uint64_t))v123)((char *)v88 + v122, v78, v68);
  uint64_t v89 = v109;
  uint64_t v90 = v118;
  uint64_t v91 = v111;
  uint64_t v92 = v129;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_1001869E4();
  sub_100164944();
  v93();
  sub_100162F0C();
  v94();
  uint64_t v147 = v90;
  uint64_t v148 = v2;
  uint64_t v149 = v91;
  uint64_t v150 = v92;
  swift_getOpaqueTypeConformance2();
  sub_100121584(v89, v117, v110);
  uint64_t v95 = *(void (**)(void))(v114 + 8);
  sub_100183F94();
  v95();
  uint64_t v96 = sub_1001869E4();
  sub_100121584(v96, v97, v98);
  sub_100183F94();
  return ((uint64_t (*)(void))v95)();
}

void *sub_100122FEC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v7 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void (**)(unint64_t, unint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  uint64_t v10 = *(void *)(v8 - 8) + 16;
  int v68 = *(_DWORD *)(*(void *)(v8 - 8) + 80);
  uint64_t v11 = v68 + 8;
  unint64_t v65 = ~(unint64_t)v68;
  unint64_t v12 = ((unint64_t)v6 + v11) & v65;
  unint64_t v13 = ((unint64_t)v7 + v11) & v65;
  swift_retain();
  swift_retain();
  v9(v12, v13, v8);
  uint64_t v14 = *(void *)(v10 + 48);
  uint64_t v15 = ((v68 + 16) & v65) + v14 + (v68 | 7);
  uint64_t v16 = ((unint64_t)a1 + v15) & ~(v68 | 7);
  uint64_t v17 = ((unint64_t)a2 + v15) & ~(v68 | 7);
  uint64_t v66 = v8;
  v9(v16, v17, v8);
  *(void *)((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + 7 + v17) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v19 = (void *)(v16 + v18);
  uint64_t v20 = (void *)(v17 + v18);
  *uint64_t v19 = *v20;
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v21 = *v22;
  v21[1] = v22[1];
  uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  unint64_t v27 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v27 = *(unsigned char *)v28;
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  uint64_t v64 = *(void *)(a3 + 16);
  uint64_t v29 = *(void *)(v64 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80) | v68;
  unint64_t v31 = (*(unsigned char *)(v29 + 80) | v68) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  __dst = (void *)((v30 + 16 + v27) & v31);
  uint64_t v32 = (_DWORD *)((v30 + 16 + v28) & v31);
  uint64_t v61 = v29;
  uint64_t v33 = *(unsigned int *)(v29 + 84);
  uint64_t v34 = *(unsigned int *)(v10 + 68);
  uint64_t v63 = *(void *)(v29 + 64) + v68;
  uint64_t v35 = (v63 & v65) + v14;
  uint64_t v60 = v35 + v30;
  uint64_t v36 = v35 + 7;
  unint64_t v69 = (v35 + 7 + ((v35 + v30) & ~v30)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = v69 + 8;
  int v38 = v34 | v33;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v34 | v33)
  {
    unint64_t v39 = (unint64_t)v32;
    if (v33 >= v34)
    {
      uint64_t v41 = (uint64_t)v32;
      uint64_t v42 = v33;
      uint64_t v40 = v64;
    }
    else
    {
      uint64_t v40 = v66;
      uint64_t v41 = ((unint64_t)v32 + v63) & v65;
      uint64_t v42 = v34;
    }
    unint64_t v43 = (unint64_t)__dst;
    if (_s7Weather24LocationCompositionStateOwet_0(v41, v42, v40))
    {
LABEL_12:
      if (v38) {
        size_t v49 = v69 + 8;
      }
      else {
        size_t v49 = v69 + 9;
      }
      memcpy((void *)v43, (const void *)v39, v49);
      goto LABEL_16;
    }
  }
  else
  {
    unint64_t v43 = (unint64_t)__dst;
    unint64_t v39 = (unint64_t)v32;
    if (*((unsigned char *)v32 + v37))
    {
      int v44 = *((unsigned __int8 *)v32 + v37) - 1;
      int v45 = v37 & 0xFFFFFFF8;
      if ((v37 & 0xFFFFFFF8) != 0)
      {
        int v44 = 0;
        int v45 = *v32;
      }
      if ((v45 | v44) != 0xFFFFFFFF) {
        goto LABEL_12;
      }
    }
  }
  unint64_t v59 = v39;
  uint64_t v62 = *(void (**)(unint64_t, unint64_t, uint64_t))(v61 + 16);
  v62(v43, v39, v64);
  v9((v63 + v43) & v65, (v63 + v39) & v65, v66);
  unint64_t v46 = (v60 + v43) & ~v30;
  unint64_t v47 = (v60 + v39) & ~v30;
  v62(v46, v47, v64);
  v9((v63 + v46) & v65, (v63 + v47) & v65, v66);
  uint64_t v48 = v36 + v47;
  unint64_t v39 = v59;
  *(void *)((v36 + v46) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v48 & 0xFFFFFFFFFFFFFFF8);
  if (!v38) {
    *(unsigned char *)(v43 + v37) = 0;
  }
LABEL_16:
  unint64_t v50 = v69 + 9;
  if (v38) {
    unint64_t v50 = v69 + 8;
  }
  *(void *)(((v43 | 7) + v50) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v39 | 7) + v50) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v51 = ((v50 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v52 = (char *)(v51 + v43);
  uint64_t v53 = (char *)(v51 + v39);
  *(void *)uint64_t v52 = *(void *)v53;
  *((void *)v52 + 1) = *((void *)v53 + 1);
  v52[16] = v53[16];
  uint64_t v54 = *((void *)v53 + 3);
  char v55 = v53[32];
  swift_retain();
  swift_retain();
  sub_100195B7C(v54, v55);
  *((void *)v52 + 3) = v54;
  v52[32] = v55;
  uint64_t v56 = *((void *)v53 + 5);
  LOBYTE(v54) = v53[48];
  sub_100195B7C(v56, v54);
  *((void *)v52 + 5) = v56;
  v52[48] = v54;
  uint64_t v57 = *((void *)v53 + 7);
  LOBYTE(v54) = v53[64];
  sub_100195B7C(v57, v54);
  *((void *)v52 + 7) = v57;
  v52[64] = v54;
  return a1;
}

uint64_t sub_1001234E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = *(a1 - 1);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(a1);
  unint64_t v27 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v19 - v6;
  unint64_t v25 = *(void (**)(char *))(v3 + 16);
  v25((char *)&v19 - v6);
  type metadata accessor for MainActor();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = (v9 + 64) & ~v9;
  uint64_t v23 = v10 + v4;
  uint64_t v24 = v9 | 7;
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = v8;
  *((void *)v11 + 3) = &protocol witness table for MainActor;
  uint64_t v12 = a1[3];
  uint64_t v21 = a1[2];
  *((void *)v11 + 4) = v21;
  *((void *)v11 + 5) = v12;
  uint64_t v13 = a1[5];
  uint64_t v22 = a1[4];
  *((void *)v11 + 6) = v22;
  *((void *)v11 + 7) = v13;
  uint64_t v20 = *(void (**)(char *, char *, void *))(v3 + 32);
  v20(&v11[v10], v7, a1);
  uint64_t v14 = v27;
  ((void (*)(char *, uint64_t, void *))v25)(v27, v26, a1);
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v15;
  uint64_t v17 = v21;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = v17;
  *((void *)v16 + 5) = v12;
  *((void *)v16 + 6) = v22;
  *((void *)v16 + 7) = v13;
  v20(&v16[v10], v14, a1);
  return Binding.init(get:set:)();
}

uint64_t sub_10012371C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = type metadata accessor for AnimatableTabView();
  sub_1001627C0(v7);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1001237A8(v9, v3, v4, v5, v6, a1);
}

uint64_t sub_1001237A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a6;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v40 = a2;
  uint64_t v41 = a4;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v11 = type metadata accessor for AnimatableTabView();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v43 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v42 = (char *)&v35 - v13;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v44 = type metadata accessor for Page();
  uint64_t v14 = type metadata accessor for Array();
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  type metadata accessor for PageContainer();
  type metadata accessor for _ConditionalContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v52 = &protocol witness table for EmptyView;
  uint64_t v53 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v16 = type metadata accessor for VStack();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v47 = v16;
  uint64_t v48 = a3;
  uint64_t v18 = a3;
  uint64_t v49 = v17;
  uint64_t v50 = a5;
  uint64_t v19 = type metadata accessor for IDView();
  uint64_t v35 = v19;
  uint64_t v38 = v14;
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v47 = v14;
  uint64_t v48 = a3;
  uint64_t v49 = v19;
  uint64_t v50 = v37;
  uint64_t v51 = a5;
  uint64_t v20 = type metadata accessor for ForEach();
  uint64_t v39 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v36 = (uint64_t)&v35 - v24;
  uint64_t v25 = v11;
  uint64_t v47 = *(void *)(a1 + *(int *)(v11 + 56));
  uint64_t v26 = v12;
  unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v28 = v42;
  v27(v42, a1, v11);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v40;
  *((void *)v30 + 3) = v18;
  *((void *)v30 + 4) = v41;
  *((void *)v30 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v30[v29], v28, v25);
  swift_bridgeObjectRetain();
  uint64_t v31 = swift_getWitnessTable();
  swift_getWitnessTable();
  ForEach<>.init(_:content:)();
  uint64_t v46 = v31;
  swift_getWitnessTable();
  uint64_t v32 = v36;
  sub_100121584((uint64_t)v23, v20, v36);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v39 + 8);
  v33(v23, v20);
  sub_100121584(v32, v20, v45);
  return ((uint64_t (*)(uint64_t, uint64_t))v33)(v32, v20);
}

unint64_t sub_100123BE4()
{
  unint64_t result = qword_100E93190;
  if (!qword_100E93190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E93190);
  }
  return result;
}

uint64_t sub_100123C30()
{
  uint64_t v3 = sub_1001A4BD0();
  sub_100164920(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for Location();
  sub_100164920(v8);
  unint64_t v10 = (v5 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_100A5B724();
  uint64_t v11 = type metadata accessor for WeatherServiceLocationOptions();
  sub_100164920(v11);
  unint64_t v13 = (v2 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = type metadata accessor for AppConfiguration();
  sub_100164920(v16);
  unint64_t v18 = (v13 + v15 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v20 = (*(void *)(v19 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = type metadata accessor for TimeState();
  sub_100164920(v21);
  sub_10018B2A4();
  return sub_100123DCC(v1, v25, v0 + v5, v0 + v10, *(void *)(v0 + v2), v0 + v13, v0 + v18, *(void *)(v0 + v20), *(void *)(v0 + v20 + 8), *(void *)(v0 + v20 + 16), *(void *)(v0 + v20 + 24), v0 + v24, *(unsigned char *)(v0 + v22), *(void *)(v23 + 8));
}

uint64_t sub_100123DCC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14)
{
  uint64_t v83 = a8;
  uint64_t v74 = a7;
  uint64_t v65 = a6;
  uint64_t v85 = a5;
  uint64_t v60 = a3;
  uint64_t v78 = a14;
  int v62 = a13;
  uint64_t v81 = a11;
  uint64_t v82 = a12;
  uint64_t v79 = a9;
  uint64_t v80 = a10;
  uint64_t v17 = type metadata accessor for WeatherServiceCaching.Options();
  uint64_t v76 = *(void *)(v17 - 8);
  uint64_t v77 = v17;
  __chkstk_darwin(v17);
  uint64_t v75 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for WeatherDataServiceConfiguration();
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v66 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for Location.Identifier();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v61 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100EABE00);
  __chkstk_darwin(v21 - 8);
  uint64_t v73 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100EABE08);
  __chkstk_darwin(v23 - 8);
  uint64_t v72 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v25 - 8);
  uint64_t v84 = (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  uint64_t v69 = *(void *)(Options - 8);
  __chkstk_darwin(Options);
  unint64_t v67 = (unint64_t)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v30 = (uint64_t *)((char *)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = *a1;
  unint64_t v32 = a1[1];
  static os_signpost_type_t.end.getter();
  uint64_t v87 = a2;
  sub_10017DF08(&qword_100E64020);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100C251B0;
  uint64_t v86 = a4;
  uint64_t v34 = Location.name.getter();
  uint64_t v36 = v35;
  *(void *)(v33 + 56) = &type metadata for String;
  *(void *)(v33 + 64) = sub_10012B7C0();
  *(void *)(v33 + 32) = v34;
  *(void *)(v33 + 40) = v36;
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  *uint64_t v30 = v31;
  v30[1] = v32;
  swift_storeEnumTagMultiPayload();
  sub_1000D58E0(v31, v32);
  sub_10015B128((uint64_t)v30);
  sub_1001BC5DC();
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  if (v32 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = v31;
    uint64_t v38 = v32;
  }
  uint64_t v59 = v37;
  uint64_t v60 = v38;
  v62 &= 1u;
  uint64_t v39 = v84;
  Location.timeZone.getter();
  uint64_t v40 = type metadata accessor for TimeZone();
  _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v40);
  uint64_t v41 = type metadata accessor for WeatherServiceLocationOptions();
  uint64_t v42 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v72, v65, v41);
  _s7Weather24LocationCompositionStateOwst_0(v42, 0, 1, v41);
  uint64_t v43 = AppConfiguration.treatmentIDs.getter();
  uint64_t v44 = v87[33];
  uint64_t v45 = v87[34];
  sub_1001B1E64(v87 + 30, v44);
  uint64_t v46 = v61;
  Location.identifier.getter();
  uint64_t v47 = Location.Identifier.id.getter();
  uint64_t v49 = v48;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v46, v64);
  uint64_t v50 = (uint64_t)v73;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8))(v47, v49, v44, v45);
  swift_bridgeObjectRelease();
  uint64_t v51 = v66;
  AppConfiguration.weatherDataService.getter();
  LOBYTE(v44) = WeatherDataServiceConfiguration.needsTwilightData.getter();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v51, v70);
  uint64_t v88 = _swiftEmptyArrayStorage;
  sub_100128EB4((unint64_t *)&qword_100EABE10, (void (*)(uint64_t))&type metadata accessor for WeatherServiceCaching.Options);
  sub_10017DF08(&qword_100EABE18);
  sub_1001246C8((unint64_t *)&qword_100EABE20, &qword_100EABE18);
  uint64_t v52 = (uint64_t)v75;
  uint64_t v53 = v77;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unsigned __int8 v57 = v44 & 1;
  unint64_t v54 = v67;
  uint64_t v55 = v84;
  sub_10012475C(v59, v60, v84, v42, v52, v43, v50, 0, v67, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v52, v53);
  sub_10017DF4C(v50, &qword_100EABE00);
  sub_10017DF4C(v42, &qword_100EABE08);
  sub_10017DF4C(v55, &qword_100E6D1D8);
  sub_100124C80(v86, v83, v79, v80, v81, v82, v54, v62, v85);
  return (*(uint64_t (**)(unint64_t, uint64_t))(v69 + 8))(v54, Options);
}

uint64_t sub_1001245EC()
{
  return sub_100124610();
}

uint64_t sub_100124610()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001246C8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012470C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10012475C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, unsigned __int8 a10)
{
  int v53 = a8;
  uint64_t v44 = a7;
  uint64_t v45 = a2;
  uint64_t v49 = a6;
  uint64_t v50 = a1;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v38 = a3;
  v36[1] = a9;
  int v48 = a10;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  __chkstk_darwin(v10);
  uint64_t v52 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for Calendar.Component();
  uint64_t v47 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v43 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for TimeZone();
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for Calendar();
  uint64_t v42 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100EABE00);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for WeatherServiceCaching.Options();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100EABE08);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v27 - 8);
  sub_1001B7204(v38, (uint64_t)v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100E6D1D8);
  sub_1001B7204(v40, (uint64_t)v26, &qword_100EABE08);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v41, v20);
  sub_1001B7204(v44, (uint64_t)v19, &qword_100EABE00);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  WeatherServiceFetchOptions.init(countryCode:timeZone:locationOptions:cachingOptions:treatmentIdentifiers:networkActivity:needsMarineData:needsTwilightData:)();
  static TimeZone.current.getter();
  static Calendar.currentCalendar(with:)();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v39);
  uint64_t v29 = v47;
  uint64_t v30 = v43;
  uint64_t v31 = v51;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v43, enum case for Calendar.Component.hour(_:), v51);
  unint64_t v32 = v52;
  Date.init()();
  uint64_t v33 = v32;
  uint64_t v34 = Calendar.component(_:from:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v55);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v16, v46);
  if (v34 <= 19) {
    return sub_100129D9C();
  }
  return result;
}

uint64_t sub_100124C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, char a8, uint64_t a9)
{
  uint64_t v10 = v9;
  unint64_t v74 = a7;
  uint64_t v94 = a9;
  int v93 = a8 & 1;
  uint64_t v77 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v80 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for DispatchQoS();
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v75 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  uint64_t v86 = *(void *)(Options - 8);
  unint64_t v73 = *(void *)(v86 + 64);
  __chkstk_darwin(Options);
  uint64_t v91 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for Location();
  uint64_t v81 = *(void *)(v90 - 8);
  uint64_t v71 = *(void *)(v81 + 64);
  __chkstk_darwin(v90);
  uint64_t v89 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for ProductRequirementsFactory.AppRequiredProducts();
  uint64_t v84 = *(void *)(v88 - 8);
  uint64_t v68 = *(void *)(v84 + 64);
  uint64_t v19 = __chkstk_darwin(v88);
  uint64_t v87 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v63 - v21;
  uint64_t v95 = type metadata accessor for OSSignpostID();
  uint64_t v83 = *(void *)(v95 - 8);
  uint64_t v23 = *(void *)(v83 + 64);
  uint64_t v24 = __chkstk_darwin(v95);
  uint64_t v85 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v63 - v25;
  Location.coordinate.getter();
  double v28 = v27;
  uint64_t v29 = a1;
  Location.coordinate.getter();
  id v67 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v28 longitude:v30];
  id v31 = *(id *)(v10 + 448);
  uint64_t v72 = v26;
  OSSignpostID.init(log:)();
  sub_1001B1E64((void *)(v10 + 280), *(void *)(v10 + 304));
  Location.timeZone.getter();
  uint64_t v32 = type metadata accessor for TimeZone();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v32);
  uint64_t v69 = v22;
  dispatch thunk of ProductRequirementsFactoryType.appRequiredProducts(for:)();
  sub_10017DF4C((uint64_t)v18, &qword_100E6D1D8);
  sub_10017DF08(&qword_100EABE28);
  uint64_t v66 = swift_allocBox();
  uint64_t v34 = v33;
  uint64_t Fetched = type metadata accessor for WeatherServiceLastFetched();
  _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, Fetched);
  id v70 = sub_10020F9AC(v93);
  uint64_t v82 = swift_allocObject();
  uint64_t v65 = v10;
  swift_weakInit();
  uint64_t v64 = *(void *)(v10 + 48);
  uint64_t v63 = *(void *)(v10 + 56);
  uint64_t v36 = v10 + 408;
  uint64_t v37 = v83;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v85, v26, v95);
  uint64_t v38 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v89, v29, v90);
  uint64_t v39 = v84;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v87, v22, v88);
  uint64_t v40 = v86;
  (*(void (**)(char *, unint64_t, uint64_t))(v86 + 16))(v91, v74, Options);
  sub_100125F9C(v36, (uint64_t)&v98);
  unint64_t v41 = (*(unsigned __int8 *)(v37 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v42 = (v23 + *(unsigned __int8 *)(v38 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v43 = (v71 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = (*(unsigned __int8 *)(v39 + 80) + v43 + 8) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v45 = (v68 + *(unsigned __int8 *)(v40 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  unint64_t v46 = (v73 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v47 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  uint64_t v50 = v94;
  uint64_t v49 = v95;
  *(void *)(v48 + 16) = v82;
  *(void *)(v48 + 24) = v50;
  *(unsigned char *)(v48 + 32) = v93;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v48 + v41, v85, v49);
  (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v48 + v42, v89, v90);
  uint64_t v51 = v67;
  *(void *)(v48 + v43) = v67;
  unint64_t v52 = v48 + v44;
  uint64_t v53 = v88;
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v52, v87, v88);
  (*(void (**)(unint64_t, char *, uint64_t))(v86 + 32))(v48 + v45, v91, Options);
  uint64_t v54 = (void *)(v48 + v46);
  uint64_t v55 = v63;
  *uint64_t v54 = v64;
  v54[1] = v55;
  sub_1001262E4(&v98, v48 + v47);
  *(void *)(v48 + v74) = v66;
  *(void *)(v48 + v73) = v65;
  aBlock[4] = sub_10010A718;
  aBlock[5] = v48;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E35218;
  uint64_t v56 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v57 = v51;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v58 = v75;
  static DispatchQoS.unspecified.getter();
  uint64_t v96 = _swiftEmptyArrayStorage;
  sub_100128EB4((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  uint64_t v59 = v76;
  uint64_t v60 = v77;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v61 = v70;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v56);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v59, v60);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v58, v79);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v69, v53);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v72, v95);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_100125688(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v75 = a8;
  id v70 = a6;
  unint64_t v71 = a5;
  uint64_t v16 = type metadata accessor for OSSignpostID();
  uint64_t v66 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v64 = v17;
  uint64_t v79 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  uint64_t v65 = *(void *)(Options - 8);
  __chkstk_darwin(Options);
  unint64_t v62 = v18;
  uint64_t v77 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for ProductRequirementsFactory.AppRequiredProducts();
  uint64_t v63 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  unint64_t v60 = v19;
  unint64_t v74 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for Location();
  uint64_t v61 = *(void *)(v73 - 8);
  unint64_t v20 = *(void *)(v61 + 64);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v56 = a13;
    uint64_t v55 = a12;
    unint64_t v52 = a11;
    uint64_t v58 = a10;
    uint64_t v57 = a9;
    unint64_t v50 = a4;
    uint64_t v25 = Strong;
    uint64_t v59 = sub_10010B03C();
    static os_signpost_type_t.begin.getter();
    uint64_t v69 = a7;
    uint64_t v26 = *(void **)(v25 + 448);
    unint64_t v53 = v20;
    uint64_t v27 = v25;
    uint64_t v54 = v25;
    sub_10017DF08(&qword_100E64020);
    uint64_t v28 = swift_allocObject();
    uint64_t v51 = a2;
    uint64_t v29 = (void *)v28;
    *(_OWORD *)(v28 + 16) = xmmword_100C251B0;
    id v30 = v26;
    uint64_t v31 = Location.name.getter();
    uint64_t v68 = v16;
    uint64_t v33 = v32;
    v29[7] = &type metadata for String;
    v29[8] = sub_10012B7C0();
    v29[4] = v31;
    v29[5] = v33;
    unint64_t v34 = v50;
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v23);
    sub_1001BC5DC();
    sub_100125F9C(v27 + 328, (uint64_t)v83);
    uint64_t v67 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    sub_100125F9C(v52, (uint64_t)v82);
    uint64_t v35 = v61;
    (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v72, v71, v73);
    sub_100125F9C((uint64_t)v83, (uint64_t)&v81);
    uint64_t v36 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v74, v69, v76);
    uint64_t v37 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v77, v75, Options);
    sub_100125F9C((uint64_t)v82, (uint64_t)&v80);
    uint64_t v38 = v66;
    (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v79, v34, v68);
    unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    unint64_t v40 = (v53 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = (v41 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v42 = (*(unsigned __int8 *)(v36 + 80) + v49 + 8) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    unint64_t v43 = (v60 + *(unsigned __int8 *)(v37 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    unint64_t v60 = (v62 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v62 = (v60 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = (*(unsigned __int8 *)(v38 + 80) + v62 + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    unint64_t v71 = (v64 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v67;
    (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v44 + v39, v72, v73);
    *(void *)(v44 + v40) = v51;
    sub_1001262E4(&v81, v44 + v41);
    *(void *)(v44 + v52) = v55;
    *(void *)(v44 + v50) = v56;
    *(void *)(v44 + v49) = v70;
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v44 + v42, v74, v76);
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v44 + v43, v77, Options);
    sub_1001262E4(&v80, v44 + v60);
    unint64_t v45 = (void *)(v44 + v62);
    uint64_t v46 = v58;
    *unint64_t v45 = v57;
    v45[1] = v46;
    (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v44 + v53, v79, v68);
    *(void *)(v44 + v71) = v59;
    uint64_t v47 = *(void *)(v54 + 64);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v48 = v70;
    swift_retain();
    swift_retain();
    sub_100A44C28(v47, (uint64_t)v48, v69, v75, (uint64_t)sub_100A5370C, v44);
    swift_release();
    swift_release();
    swift_release();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v82);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v83);
    swift_release();
  }
  else
  {
    sub_1006A7CD8(0xD000000000000022, 0x8000000100CBB2F0);
  }
}

uint64_t sub_100125F9C(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  sub_100162880();
  uint64_t v3 = sub_1001EA9E0();
  v4(v3);
  return a2;
}

uint64_t sub_100126010()
{
  return v0;
}

uint64_t sub_100126024()
{
  return swift_beginAccess();
}

uint64_t sub_10012603C()
{
  return v0;
}

uint64_t sub_100126064@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_10012606C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 1120) = a1;
  *(void *)(v2 + 912) = a2;
  return v3;
}

uint64_t sub_100126084()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10012609C()
{
  return v0;
}

BOOL sub_1001260AC(NSObject *a1)
{
  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1001260C8()
{
  return v0;
}

uint64_t sub_1001260F8()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_10012611C()
{
  uint64_t v3 = *(void *)(v1 - 320);
  return _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v3);
}

uint64_t sub_100126140()
{
  return 1684957559;
}

void *sub_100126164()
{
  sub_10017DF08(&qword_100E78268);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    uint64_t v3 = type metadata accessor for LocationNetworkActivityFlow();
    uint64_t v4 = &off_100E340E8;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 56) = v3;
  *(void *)(inited + 64) = v4;
  swift_retain();
  sub_1001262FC(inited + 32, (uint64_t)v14, &qword_100E78270);
  sub_10020E72C((uint64_t)v14, (uint64_t)&v11, &qword_100E78270);
  if (v12)
  {
    sub_1001262E4(&v11, (uint64_t)v13);
    sub_1001262E4(v13, (uint64_t)&v11);
    unint64_t v5 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100126578(0, _swiftEmptyArrayStorage[2] + 1, 1, (uint64_t)_swiftEmptyArrayStorage);
      unint64_t v5 = v9;
    }
    unint64_t v7 = v5[2];
    unint64_t v6 = v5[3];
    if (v7 >= v6 >> 1)
    {
      sub_100126578(v6 > 1, v7 + 1, 1, (uint64_t)v5);
      unint64_t v5 = v10;
    }
    v5[2] = v7 + 1;
    sub_1001262E4(&v11, (uint64_t)&v5[5 * v7 + 4]);
  }
  else
  {
    sub_1001781AC((uint64_t)&v11, &qword_100E78270);
    unint64_t v5 = _swiftEmptyArrayStorage;
  }
  swift_setDeallocating();
  sub_10012656C();
  return v5;
}

uint64_t sub_1001262E4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1001262FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100126358(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 24, v5, v7);
  uint64_t v9 = *(void *)(v2 + 72);
  *(void *)(a1 + 64) = *(void *)(v2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(v2 + 80);
  uint64_t v11 = *(void *)(v2 + 88);
  LOBYTE(v2) = *(unsigned char *)(v2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100195B88();
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 96) = v2;
  return a1;
}

void sub_100126428(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t a6, void (*a7)(void, uint64_t, char *, uint64_t, uint64_t), void (*a8)(uint64_t, uint64_t, char *))
{
  if (a3)
  {
    sub_10017E9A4();
    if (v14 != v15)
    {
      sub_100183F88();
      if (v14)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (v17)
  {
    sub_10017DF08(a5);
    unint64_t v18 = (char *)swift_allocObject();
    size_t v19 = j__malloc_size(v18);
    sub_10018B308(v19 - 32);
  }
  else
  {
    unint64_t v18 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v20 = v18 + 32;
  if (a1)
  {
    a8(a4 + 32, v16, v20);
    sub_1001855E0();
  }
  else
  {
    a7(0, v16, v20, a4, a6);
  }
}

uint64_t sub_100126518(uint64_t *a1)
{
  sub_10017DF08(a1);
  swift_arrayDestroy();
  sub_100180160();

  return swift_deallocClassInstance();
}

uint64_t sub_10012656C()
{
  return sub_100126518(&qword_100E78270);
}

void sub_100126578(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_1001265B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_100187288();
    sub_1001D1DF8();
    goto LABEL_11;
  }
  unint64_t v6 = a4 + 40 * a1 + 32;
  unint64_t v7 = a3 + 40 * v5;
  if (v6 >= v7 || v6 + 40 * v5 <= a3)
  {
    sub_10017DF08(a5);
    sub_10021036C();
    swift_bridgeObjectRelease();
    return v7;
  }
  sub_100187288();
  sub_100181768();
LABEL_11:
  uint64_t result = sub_100163950();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LocationNetworkActivityFlow()
{
  uint64_t result = qword_100EAB0E8;
  if (!qword_100EAB0E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001266D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v24;
  a20 = v25;
  uint64_t v27 = v26;
  sub_100162708();
  uint64_t v28 = type metadata accessor for CurrentLocation();
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_10016279C();
  uint64_t v30 = sub_10017DF08(&qword_100E7F010);
  uint64_t v31 = v30 - 8;
  __chkstk_darwin(v30);
  sub_10011BFD8();
  uint64_t v32 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100129860();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (char *)&a9 - v36;
  __chkstk_darwin(v35);
  unint64_t v39 = (char *)&a9 - v38;
  sub_10006DF38(v20, (uint64_t)&a9 - v38, (uint64_t *)&unk_100EADD50);
  sub_10006DF38(v27, (uint64_t)v37, (uint64_t *)&unk_100EADD50);
  uint64_t v40 = v21 + *(int *)(v31 + 56);
  sub_10006DF38((uint64_t)v39, v21, (uint64_t *)&unk_100EADD50);
  sub_10006DF38((uint64_t)v37, v40, (uint64_t *)&unk_100EADD50);
  sub_10012B520(v21, 1, v28);
  if (!v41)
  {
    sub_10006DF38(v21, v23, (uint64_t *)&unk_100EADD50);
    sub_10012B520(v40, 1, v28);
    if (!v41)
    {
      sub_1001D113C(v40, v22);
      char v42 = static CurrentLocation.== infix(_:_:)();
      sub_1001D1298(v22, (void (*)(void))&type metadata accessor for CurrentLocation);
      sub_100178110((uint64_t)v37, (uint64_t *)&unk_100EADD50);
      sub_100178110((uint64_t)v39, (uint64_t *)&unk_100EADD50);
      sub_1001D1298(v23, (void (*)(void))&type metadata accessor for CurrentLocation);
      sub_100178110(v21, (uint64_t *)&unk_100EADD50);
      if ((v42 & 1) == 0) {
        goto LABEL_20;
      }
      goto LABEL_11;
    }
    sub_100178110((uint64_t)v37, (uint64_t *)&unk_100EADD50);
    sub_100178110((uint64_t)v39, (uint64_t *)&unk_100EADD50);
    sub_1001D1298(v23, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_9:
    sub_100178110(v21, &qword_100E7F010);
    goto LABEL_20;
  }
  sub_100178110((uint64_t)v37, (uint64_t *)&unk_100EADD50);
  sub_100178110((uint64_t)v39, (uint64_t *)&unk_100EADD50);
  sub_10012B520(v40, 1, v28);
  if (!v41) {
    goto LABEL_9;
  }
  sub_100178110(v21, (uint64_t *)&unk_100EADD50);
LABEL_11:
  unint64_t v43 = (int *)type metadata accessor for LocationsState();
  sub_1001A2F00(v43[5]);
  sub_100126F0C();
  if (v44)
  {
    sub_1001A2F00(v43[6]);
    sub_100126C70();
    if (v45)
    {
      sub_1001A2F00(v43[7]);
      sub_100126FF0();
      if (v46)
      {
        sub_1001A2F00(v43[8]);
        sub_100126FA8();
        if (v47)
        {
          sub_1001A2F00(v43[9]);
          sub_100126F60();
          if (v48)
          {
            sub_1001A2F00(v43[10]);
            sub_100127628();
            if (v49)
            {
              sub_1001A2F00(v43[11]);
              sub_100127038();
              if (v50)
              {
                uint64_t v51 = v43[12];
                sub_1001290FC(*(void *)(v20 + v51), *(void *)(v20 + v51 + 8), *(unsigned char *)(v20 + v51 + 16), *(void *)(v27 + v51), *(void *)(v27 + v51 + 8), *(unsigned char *)(v27 + v51 + 16));
                if (v52)
                {
                  sub_1001A2F00(v43[13]);
                  sub_1001272E0();
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_20:
  sub_100162694();
}

void sub_100126A50()
{
  sub_100162EA0();
  uint64_t v37 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9(0);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_10016278C();
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = *(void *)(v8 + 16);
  if (v17 == *(void *)(v6 + 16) && v17 && v8 != v6)
  {
    unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    uint64_t v19 = v13 + 16;
    uint64_t v34 = v20;
    uint64_t v35 = v14;
    uint64_t v30 = *(void *)(v19 + 56);
    uint64_t v31 = v6;
    uint64_t v36 = v19;
    uint64_t v32 = v8;
    uint64_t v33 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v21 = v17 - 1;
    do
    {
      uint64_t v22 = v34;
      v34(v16, v8 + v18, v10);
      uint64_t v23 = v16;
      uint64_t v24 = v35;
      v22(v35, v6 + v18, v10);
      sub_100126C28(v4, v2);
      char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v26 = *v33;
      uint64_t v27 = v24;
      uint64_t v16 = v23;
      (*v33)(v27, v10);
      v26(v23, v10);
      BOOL v29 = v21-- != 0;
      if ((v25 & 1) == 0) {
        break;
      }
      v18 += v30;
      uint64_t v6 = v31;
      uint64_t v8 = v32;
    }
    while (v29);
  }
  sub_100162694();
}

uint64_t sub_100126C28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100126C70()
{
}

void sub_100126CB8()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  long long v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8(0);
  uint64_t v10 = sub_10018974C(v9);
  __chkstk_darwin(v10);
  sub_1001D1018();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v26 - v16;
  uint64_t v18 = *(void *)(v7 + 16);
  if (v18 == *(void *)(v5 + 16) && v18 && v7 != v5)
  {
    v26[1] = v5;
    uint64_t v19 = v3;
    unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v21 = *(void *)(v15 + 72);
    uint64_t v22 = v18 - 1;
    do
    {
      sub_100126EC0();
      sub_100126EC0();
      char v23 = v19(v17, v13);
      sub_100126E18(v13, v1);
      sub_100126E18((uint64_t)v17, v1);
      BOOL v25 = v22-- != 0;
      if ((v23 & 1) == 0) {
        break;
      }
      v20 += v21;
    }
    while (v25);
  }
  sub_100162694();
}

uint64_t sub_100126E18(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100126E6C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100126EC0()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

void sub_100126F0C()
{
}

void sub_100126F60()
{
}

void sub_100126FA8()
{
}

void sub_100126FF0()
{
}

void sub_100127038()
{
  sub_100162EA0();
  sub_100162814();
  type metadata accessor for Location();
  sub_100179C0C();
  v42[11] = v4;
  __chkstk_darwin(v5);
  v42[8] = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v7);
  sub_100127588();
  uint64_t v8 = sub_10017DF08(&qword_100E6A4A8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100181E70();
  __chkstk_darwin(v10);
  sub_1001275F8();
  if (v11 || (sub_10012BFA4(), !v11))
  {
LABEL_35:
    sub_1001275D0();
    sub_100162694();
    return;
  }
  sub_100189CF0();
  v42[6] = v0;
  while (1)
  {
    if (v1)
    {
      sub_100128A2C();
LABEL_7:
      uint64_t v12 = sub_10018AE90();
      uint64_t v13 = sub_100127A74(v12);
      v14(v13);
      uint64_t v15 = sub_100127CB8();
      sub_1002EF0E0((uint64_t)v15, v16, v17, v18);
      goto LABEL_30;
    }
    sub_10012BF40();
    uint64_t v3 = v42[7];
    if (v19)
    {
      __break(1u);
      goto LABEL_37;
    }
    sub_10012BF6C();
    if (v20 != v19)
    {
      sub_1002EEEE4();
      if (v22) {
        goto LABEL_12;
      }
      sub_1002EE750(v21);
      if (v20 != v19)
      {
        sub_1002EEED8();
        if (v24) {
          goto LABEL_16;
        }
        sub_1002EE73C();
        if (v20 != v19) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v29 = sub_10017DF08(&qword_100E6A4B0);
    sub_10012BFD0(v2, v30, v31, v29);
LABEL_30:
    uint64_t v32 = sub_100127BB0();
    sub_100127928(v32, v33, &qword_100E6A4A8);
    uint64_t v34 = (void (*)(void))sub_10017DF08(&qword_100E6A4B0);
    sub_10012B520(v3, 1, (uint64_t)v34);
    if (v11) {
      goto LABEL_35;
    }
    uint64_t v35 = sub_1001A4B10();
    v36(v35);
    sub_100127BD4();
    sub_100127C0C();
    if ((v0 & 1) == 0)
    {
      uint64_t v40 = sub_1002EE4C8();
      v41(v40);
      goto LABEL_35;
    }
    uint64_t v37 = sub_10018A314();
    v38(v37);
    sub_100127D40((unint64_t *)&qword_100E639A8, 255, (void (*)(uint64_t))&type metadata accessor for Location);
    sub_100127C68();
    uint64_t v39 = sub_1001279A0();
    ((void (*)(uint64_t))v34)(v39);
    sub_100183838();
    v34();
  }
  sub_1002EEEF0();
  if (v26)
  {
    uint64_t v21 = v25;
    goto LABEL_12;
  }
  sub_1002EE6FC();
  if (v20 == v19) {
    goto LABEL_29;
  }
  sub_1002EEECC();
  if (v27)
  {
LABEL_16:
    uint64_t v21 = v23;
LABEL_12:
    sub_1001EA860(v21);
    goto LABEL_7;
  }
  while (!__OFADD__(v23, 1))
  {
    sub_10012BF6C();
    if (v20 == v19)
    {
      sub_1002EF210();
      goto LABEL_29;
    }
    sub_1001D40DC();
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_37:
  __break(1u);
}

void sub_1001272E0()
{
  sub_100162EA0();
  sub_100162814();
  type metadata accessor for LocationDisplayContext();
  sub_100179C0C();
  v42[11] = v4;
  __chkstk_darwin(v5);
  v42[8] = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v7);
  sub_100127588();
  uint64_t v8 = sub_10017DF08(&qword_100E6A490);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100181E70();
  __chkstk_darwin(v10);
  sub_1001275F8();
  if (v11 || (sub_10012BFA4(), !v11))
  {
LABEL_35:
    sub_1001275D0();
    sub_100162694();
    return;
  }
  sub_100189CF0();
  v42[6] = v0;
  while (1)
  {
    if (v1)
    {
      sub_100128A2C();
LABEL_7:
      uint64_t v12 = sub_10018AE90();
      uint64_t v13 = sub_100127A74(v12);
      v14(v13);
      uint64_t v15 = sub_100127CB8();
      sub_1002EF0E0((uint64_t)v15, v16, v17, v18);
      goto LABEL_30;
    }
    sub_10012BF40();
    uint64_t v3 = v42[7];
    if (v19)
    {
      __break(1u);
      goto LABEL_37;
    }
    sub_10012BF6C();
    if (v20 != v19)
    {
      sub_1002EEEE4();
      if (v22) {
        goto LABEL_12;
      }
      sub_1002EE750(v21);
      if (v20 != v19)
      {
        sub_1002EEED8();
        if (v24) {
          goto LABEL_16;
        }
        sub_1002EE73C();
        if (v20 != v19) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v29 = sub_10017DF08(&qword_100E6A498);
    sub_10012BFD0(v2, v30, v31, v29);
LABEL_30:
    uint64_t v32 = sub_100127BB0();
    sub_100127928(v32, v33, &qword_100E6A490);
    uint64_t v34 = (void (*)(void))sub_10017DF08(&qword_100E6A498);
    sub_10012B520(v3, 1, (uint64_t)v34);
    if (v11) {
      goto LABEL_35;
    }
    uint64_t v35 = sub_1001A4B10();
    v36(v35);
    sub_100127BD4();
    sub_100127C0C();
    if ((v0 & 1) == 0)
    {
      uint64_t v40 = sub_1002EE4C8();
      v41(v40);
      goto LABEL_35;
    }
    uint64_t v37 = sub_10018A314();
    v38(v37);
    sub_100127D40(&qword_100E6A4A0, 255, (void (*)(uint64_t))&type metadata accessor for LocationDisplayContext);
    sub_100127C68();
    uint64_t v39 = sub_1001279A0();
    ((void (*)(uint64_t))v34)(v39);
    sub_100183838();
    v34();
  }
  sub_1002EEEF0();
  if (v26)
  {
    uint64_t v21 = v25;
    goto LABEL_12;
  }
  sub_1002EE6FC();
  if (v20 == v19) {
    goto LABEL_29;
  }
  sub_1002EEECC();
  if (v27)
  {
LABEL_16:
    uint64_t v21 = v23;
LABEL_12:
    sub_1001EA860(v21);
    goto LABEL_7;
  }
  while (!__OFADD__(v23, 1))
  {
    sub_10012BF6C();
    if (v20 == v19)
    {
      sub_1002EF210();
      goto LABEL_29;
    }
    sub_1001D40DC();
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_1001275B0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1001275D0()
{
  return v0;
}

uint64_t sub_1001275DC()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_10012760C()
{
  return sub_10018F6E4();
}

void sub_100127628()
{
  sub_100162EA0();
  sub_100162814();
  type metadata accessor for LocationModel();
  sub_100179C0C();
  v42[11] = v4;
  __chkstk_darwin(v5);
  v42[8] = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v7);
  sub_100127588();
  uint64_t v8 = sub_10017DF08(&qword_100E6A4B8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100181E70();
  __chkstk_darwin(v10);
  sub_1001275F8();
  if (v11 || (sub_10012BFA4(), !v11))
  {
LABEL_35:
    sub_1001275D0();
    sub_100162694();
    return;
  }
  sub_100189CF0();
  v42[6] = v0;
  while (1)
  {
    if (v1)
    {
      sub_100128A2C();
LABEL_7:
      uint64_t v12 = sub_10018AE90();
      uint64_t v13 = sub_100127A74(v12);
      v14(v13);
      uint64_t v15 = sub_100127CB8();
      sub_1002EF0E0((uint64_t)v15, v16, v17, v18);
      goto LABEL_30;
    }
    sub_10012BF40();
    uint64_t v3 = v42[7];
    if (v19)
    {
      __break(1u);
      goto LABEL_37;
    }
    sub_10012BF6C();
    if (v20 != v19)
    {
      sub_1002EEEE4();
      if (v22) {
        goto LABEL_12;
      }
      sub_1002EE750(v21);
      if (v20 != v19)
      {
        sub_1002EEED8();
        if (v24) {
          goto LABEL_16;
        }
        sub_1002EE73C();
        if (v20 != v19) {
          break;
        }
      }
    }
LABEL_29:
    uint64_t v29 = sub_10017DF08(&qword_100E6A4C0);
    sub_10012BFD0(v2, v30, v31, v29);
LABEL_30:
    uint64_t v32 = sub_100127BB0();
    sub_100127928(v32, v33, &qword_100E6A4B8);
    uint64_t v34 = (void (*)(void))sub_10017DF08(&qword_100E6A4C0);
    sub_10012B520(v3, 1, (uint64_t)v34);
    if (v11) {
      goto LABEL_35;
    }
    uint64_t v35 = sub_1001A4B10();
    v36(v35);
    sub_100127BD4();
    sub_100127C0C();
    if ((v0 & 1) == 0)
    {
      uint64_t v40 = sub_1002EE4C8();
      v41(v40);
      goto LABEL_35;
    }
    uint64_t v37 = sub_10018A314();
    v38(v37);
    sub_100127D40(&qword_100E6A4C8, 255, (void (*)(uint64_t))&type metadata accessor for LocationModel);
    sub_100127C68();
    uint64_t v39 = sub_1001279A0();
    ((void (*)(uint64_t))v34)(v39);
    sub_100183838();
    v34();
  }
  sub_1002EEEF0();
  if (v26)
  {
    uint64_t v21 = v25;
    goto LABEL_12;
  }
  sub_1002EE6FC();
  if (v20 == v19) {
    goto LABEL_29;
  }
  sub_1002EEECC();
  if (v27)
  {
LABEL_16:
    uint64_t v21 = v23;
LABEL_12:
    sub_1001EA860(v21);
    goto LABEL_7;
  }
  while (!__OFADD__(v23, 1))
  {
    sub_10012BF6C();
    if (v20 == v19)
    {
      sub_1002EF210();
      goto LABEL_29;
    }
    sub_1001D40DC();
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_1001278D0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_100127928(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return v3;
}

uint64_t sub_100127974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s7Weather24LocationCompositionStateOwst_0(*(void *)(v4 - 368), 1, 1, a4);
}

uint64_t sub_1001279A0()
{
  return v0;
}

uint64_t sub_1001279C4()
{
  return v0;
}

double sub_1001279E8()
{
  return v0;
}

void sub_100127A14()
{
  uint64_t v1 = 58;
  unint64_t v2 = 0xE100000000000000;
  String.append(_:)(*(Swift::String *)&v1);
}

uint64_t sub_100127A30()
{
  return *(void *)(v0 - 528);
}

uint64_t sub_100127A44()
{
  return v0;
}

uint64_t sub_100127A74(uint64_t a1)
{
  return v1 + *(int *)(a1 + 48);
}

uint64_t sub_100127A9C()
{
  return v0;
}

void sub_100127AC4()
{
  *(unsigned char *)(v0 - 68) = 1;
}

uint64_t sub_100127AD0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100127AE8()
{
  return swift_allocObject();
}

uint64_t sub_100127B38()
{
  return v0;
}

uint64_t sub_100127B4C()
{
  return sub_1000C13A0(v0);
}

uint64_t sub_100127B8C()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_100127BB0()
{
  return v0;
}

uint64_t sub_100127BBC()
{
  return v0;
}

uint64_t sub_100127BC8()
{
  return v0;
}

unint64_t sub_100127BD4()
{
  return sub_1001D23B8();
}

void sub_100127BF0()
{
  PrecipitationAmountByType.write(to:)();
}

uint64_t sub_100127C0C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100127C2C()
{
  return v0;
}

uint64_t sub_100127C68()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_100127C8C()
{
  return 0;
}

void *sub_100127CB8()
{
  *unint64_t v2 = v0;
  v2[1] = v1;
  return v2;
}

uint64_t sub_100127CD0()
{
  return type metadata accessor for LocationComponentContainerViewModel();
}

uint64_t sub_100127CEC()
{
  return 0;
}

uint64_t sub_100127CF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100127D40(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100127D88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100127DD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100127E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100162EA0();
  *(void *)&long long v145 = v22;
  uint64_t v131 = v23;
  LODWORD(v125) = v24;
  uint64_t v130 = v25;
  uint64_t v140 = v26;
  uint64_t v141 = v27;
  uint64_t v138 = (void (*)(void, void, void))v28;
  uint64_t v139 = v29;
  uint64_t v31 = v30;
  uint64_t v136 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v135 = v32;
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v133 = v34;
  uint64_t v134 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v132 = v35;
  __chkstk_darwin(v36);
  sub_100109314();
  sub_100109328(v37);
  uint64_t v129 = type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v128 = v38;
  __chkstk_darwin(v39);
  uint64_t v127 = v40;
  sub_10018B1EC();
  sub_100109328(v41);
  uint64_t v42 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v44 = v43;
  uint64_t v46 = *(void *)(v45 + 64);
  uint64_t v48 = __chkstk_darwin(v47);
  uint64_t v126 = (char *)v120 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v48);
  unint64_t v142 = (char *)v120 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v143 = (char *)v120 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v55 = (char *)v120 - v54;
  __chkstk_darwin(v53);
  uint64_t v57 = (char *)v120 - v56;
  if (qword_100E62818 != -1) {
    swift_once();
  }
  uint64_t v148 = a22;
  uint64_t v58 = type metadata accessor for Logger();
  uint64_t v59 = sub_1002102B0(v58, (uint64_t)qword_100F51F50);
  unint64_t v60 = *(void (**)(void))(v44 + 16);
  sub_1001A880C();
  v60();
  sub_1001A880C();
  uint64_t v147 = v44 + 16;
  uint64_t v144 = v60;
  v60();
  uint64_t v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.default.getter();
  int v63 = v62;
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v124 = v31;
    uint64_t v65 = v64;
    uint64_t v122 = swift_slowAlloc();
    v149[0] = v122;
    *(_DWORD *)uint64_t v65 = 141558787;
    uint64_t v150 = 1752392040;
    int v121 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v65 + 12) = 2081;
    uint64_t v146 = v44;
    uint64_t v66 = Location.id.getter();
    uint64_t v150 = sub_10019CC20(v66, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v123 = v59;
    uint64_t v68 = *(void (**)(void))(v146 + 8);
    sub_100164FC8();
    v68();
    *(_WORD *)(v65 + 22) = 2160;
    uint64_t v150 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v65 + 32) = 2081;
    sub_100128EB4((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v150 = sub_10019CC20(v69, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v137 = v68;
    sub_100164FC8();
    v68();
    uint64_t v44 = v146;
    _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v121, "About to check whether we need to refresh available data sets for location.id: %{private,mask.hash}s. location=%{private,mask.hash}s", (uint8_t *)v65, 0x2Au);
    swift_arrayDestroy();
    sub_100162EE0();
    uint64_t v31 = v124;
    sub_100162EE0();
  }
  else
  {
    unint64_t v71 = *(void (**)(void))(v44 + 8);
    ((void (*)(char *, uint64_t))v71)(v57, v42);
    uint64_t v137 = v71;
    ((void (*)(char *, uint64_t))v71)(v55, v42);
  }

  char v72 = sub_1001BC388(v31, (uint64_t)v138, v139, v140, v141);
  uint64_t v73 = v143;
  if (v72)
  {
    LODWORD(v141) = v125 & 1;
    uint64_t v140 = a21;
    sub_100162808();
    v74();
    uint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v146 = swift_slowAlloc();
      v149[0] = v146;
      *(_DWORD *)uint64_t v77 = 141558275;
      uint64_t v150 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v77 + 12) = 2081;
      uint64_t v78 = Location.id.getter();
      uint64_t v150 = sub_10019CC20(v78, v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001D3FF0();
      v80();
      sub_10008B8D8((void *)&_mh_execute_header, v81, v82, "We need to refresh available data sets for location.id: %{private,mask.hash}s");
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      ((void (*)(char *, uint64_t))v137)(v73, v42);
    }

    int v93 = v142;
    sub_1001A880C();
    uint64_t v94 = v144;
    sub_100162808();
    v94();
    uint64_t v95 = v44;
    unint64_t v96 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v137 = (void (*)(void))(v96 + v46);
    uint64_t v139 = v96;
    uint64_t v97 = swift_allocObject();
    uint64_t v98 = v145;
    *(void *)(v97 + 16) = v148;
    *(void *)(v97 + 24) = v98;
    uint64_t v99 = *(void (**)(void, void, void))(v95 + 32);
    uint64_t v146 = v95 + 32;
    uint64_t v138 = v99;
    v120[1] = v42;
    v99(v97 + v96, v93, v42);
    swift_retain();
    swift_retain();
    asyncMain(block:)();
    swift_release();
    uint64_t v143 = (char *)sub_10020F9AC(v141);
    uint64_t v100 = swift_allocObject();
    swift_weakInit();
    uint64_t v124 = *(void *)(v98 + 56);
    uint64_t v125 = *(void *)(v98 + 16);
    uint64_t v123 = *(void *)(v98 + 48);
    uint64_t v126 = *(char **)(v98 + 40);
    long long v145 = *(_OWORD *)(v98 + 24);
    sub_100162808();
    v94();
    uint64_t v101 = v128;
    sub_100162808();
    v102();
    uint64_t v103 = v137;
    unint64_t v104 = (v127
          + (((unint64_t)v137 + *(unsigned __int8 *)(v101 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))
          + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v105 = (v104 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v106 = (v105 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v107 = swift_allocObject();
    uint64_t v108 = v148;
    *(void *)(v107 + 16) = v100;
    *(void *)(v107 + 24) = v108;
    sub_1001190D4();
    v109();
    *((unsigned char *)v103 + v107) = v141;
    sub_1001D167C();
    v110();
    uint64_t v111 = (void *)(v107 + v104);
    uint64_t v112 = v140;
    *uint64_t v111 = v131;
    v111[1] = v112;
    uint64_t v113 = (uint64_t *)(v107 + v105);
    uint64_t v114 = v124;
    *uint64_t v113 = v123;
    v113[1] = v114;
    unint64_t v115 = v107 + v106;
    *(void *)unint64_t v115 = v125;
    *(_OWORD *)(v115 + 8) = v145;
    *(void *)(v115 + 24) = v126;
    v149[4] = sub_10010A86C;
    v149[5] = v107;
    v149[0] = _NSConcreteStackBlock;
    v149[1] = 1107296256;
    v149[2] = sub_10010A4D4;
    v149[3] = &unk_100E356F0;
    uint64_t v116 = _Block_copy(v149);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v150 = (uint64_t)&_swiftEmptyArrayStorage;
    sub_100128EB4((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
    sub_10016EF14();
    uint64_t v117 = v143;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v116);

    sub_100162F0C();
    v118();
    sub_100162F0C();
    v119();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1000CA914();
    uint64_t v83 = v126;
    sub_100162808();
    v84();
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = swift_slowAlloc();
      v149[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v87 = 141558275;
      uint64_t v150 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v87 + 12) = 2081;
      uint64_t v88 = Location.id.getter();
      uint64_t v150 = sub_10019CC20(v88, v89);
      sub_1001A880C();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001D3FF0();
      v90();
      sub_10008B8D8((void *)&_mh_execute_header, v91, v92, "We do NOT need to refresh available data sets for location.id: %{private,mask.hash}s");
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      ((void (*)(char *, uint64_t))v137)(v83, v42);
    }
  }
  sub_100162694();
}

uint64_t sub_100128A60()
{
  return type metadata accessor for WeatherAlert.Prominence();
}

uint64_t sub_100128A8C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_100128AC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 1016);
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
}

uint64_t sub_100128AE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100128B0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128B54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128B9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128BE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128C2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128C74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128CBC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128D04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128D4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128D94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128DDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128E24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128E6C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128EB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128EFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128F44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128F98()
{
  return sub_10011818C();
}

unint64_t sub_100128FB0()
{
  return 0xD000000000000026;
}

uint64_t sub_100128FC4()
{
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 76)), *(unsigned char *)(v1 + *(int *)(v0 + 76) + 8));
  return sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 80)), *(unsigned char *)(v1 + *(int *)(v0 + 80) + 8));
}

uint64_t sub_100129018()
{
  return v0;
}

uint64_t sub_100129064()
{
  return 0;
}

uint64_t sub_100129098(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwet_0(v1, 1, a1);
}

double sub_1001290B8()
{
  return 0.0;
}

uint64_t sub_1001290CC()
{
  return v0;
}

uint64_t sub_1001290DC()
{
  return type metadata accessor for OSSignpostID();
}

void sub_1001290FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 == 1) {
        goto LABEL_8;
      }
      break;
    case 2:
      if (a6 == 2)
      {
        sub_100126FF0();
        if (v6) {
          goto LABEL_8;
        }
      }
      break;
    case 3:
      return;
    default:
      if (!a6)
      {
LABEL_8:
        sub_100126FF0();
      }
      break;
  }
}

uint64_t sub_1001291C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v71 = a1;
  uint64_t v62 = a3;
  uint64_t v60 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v60);
  uint64_t v61 = (uint64_t *)((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for AccessibilityTraits();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  __chkstk_darwin(v5);
  uint64_t v68 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EA5F98);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10017DF08(&qword_100EA5FB8);
  uint64_t v13 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10017DF08(&qword_100E7A0E0);
  uint64_t v16 = __chkstk_darwin(v63);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v59 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v59 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E7A0E8);
  __chkstk_darwin(v24 - 8);
  uint64_t v59 = (uint64_t)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static HorizontalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v26 = sub_10017DF08(&qword_100EA5FC0);
  sub_10014A218((uint64_t)a2, v71, (uint64_t)&v12[*(int *)(v26 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v27 = sub_1001246C8(&qword_100EA5FA0, &qword_100EA5F98);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v67);
  sub_100178110((uint64_t)v12, &qword_100EA5F98);
  uint64_t v73 = v10;
  unint64_t v74 = v27;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v64;
  View.accessibilityRespondsToUserInteraction(_:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v28);
  uint64_t v29 = v68;
  static AccessibilityTraits.isButton.getter();
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v29, v70);
  sub_100178110((uint64_t)v18, &qword_100E7A0E0);
  sub_10017DF08(&qword_100E66F98);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100C251B0;
  uint64_t v31 = v71;
  sub_1001CA59C(v30, v32, v33, v34, v35, v36, v37, v38, v59, v60, (uint64_t)v61, v62, v63, v64, (uint64_t)v65, v66, v67, v68);
  *(void *)(v30 + 32) = v39;
  *(void *)(v30 + 40) = v40;
  sub_10014A85C();
  ModifiedContent<>.accessibilityInputLabels<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v21, &qword_100E7A0E0);
  uint64_t v73 = 0x5F72756F68;
  unint64_t v74 = 0xE500000000000000;
  uint64_t v41 = *v65;
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_10014F318(v31, v41);
  LOBYTE(v30) = v43;
  uint64_t result = swift_bridgeObjectRelease();
  if (v30) {
    uint64_t v45 = -1;
  }
  else {
    uint64_t v45 = v42;
  }
  BOOL v46 = __OFADD__(v45, 1);
  uint64_t v47 = v45 + 1;
  if (v46)
  {
    __break(1u);
  }
  else
  {
    uint64_t v72 = v47;
    v48._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v48);
    swift_bridgeObjectRelease();
    unint64_t v49 = v74;
    uint64_t v50 = v61;
    *uint64_t v61 = v73;
    v50[1] = v49;
    type metadata accessor for AutomationCellInfo(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = v59;
    sub_100129CE4((uint64_t)v50, v52, v53, v54, v55, v56, v57, v58, v59, v60, (uint64_t)v61, v62, v63, v64, (uint64_t)v65, v66, v67, v68, v69,
      v70);
    sub_10014CFD0((uint64_t)v50, (void (*)(void))type metadata accessor for AutomationInfo);
    sub_100178110((uint64_t)v23, &qword_100E7A0E0);
    return sub_10020E72C(v51, v62, &qword_100E7A0E8);
  }
  return result;
}

uint64_t sub_1001297C4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for AutomationInfoViewModifier()
{
  uint64_t result = qword_100E81798;
  if (!qword_100E81798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10012987C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_100129898@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1001298B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t *sub_10012990C(uint64_t *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    unsigned __int8 v9 = *((unsigned char *)a2 + 16);
    sub_10018F6EC(v7, v8, v9);
    *a1 = v7;
    a1[1] = v8;
    *((unsigned char *)a1 + 16) = v9;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = type metadata accessor for AutomationCellInfo(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 7u:
      case 0xAu:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 6u:
        uint64_t v13 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_16;
      case 8u:
        uint64_t v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        uint64_t v15 = a2[3];
        a1[2] = a2[2];
        a1[3] = v15;
        uint64_t v16 = a2[4];
        uint64_t v17 = a2[5];
        a1[4] = v16;
        a1[5] = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 9u:
      case 0xBu:
        uint64_t v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        uint64_t v19 = a2[2];
        uint64_t v20 = a2[3];
        a1[2] = v19;
        a1[3] = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        break;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for AutomationViewInfo(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
        uint64_t v11 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void sub_100129CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10048D1D0(a1, (uint64_t)&unk_100E7A0E0, (uint64_t)sub_10006DF38, (uint64_t)&unk_100E7A0E8, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_100129D0C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  swift_retain();
  sub_100129F1C();
  uint64_t v5 = *(void *)(*(void *)(v2 + 16) + 16);
  sub_100129F04(v5);
  uint64_t v6 = *(void *)(v2 + 16);
  *(void *)(v6 + 16) = v5 + 1;
  uint64_t v7 = v6 + 16 * v5;
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  return swift_endAccess();
}

uint64_t sub_100129D9C()
{
  uint64_t v0 = WeatherDataRequest.rawValue.getter();
  uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(uint64_t *, void))WeatherServiceFetchOptions.requestDenyList.modify();
  uint64_t v5 = v4;
  sub_100129EEC();
  uint64_t v6 = *(void *)(*v5 + 16);
  sub_100129ED4(v6);
  uint64_t v7 = *v5;
  *(void *)(v7 + 16) = v6 + 1;
  uint64_t v8 = v7 + 16 * v6;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v2;
  return v3(&v10, 0);
}

uint64_t sub_100129E30(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_100129E78(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_100129ED4(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_10012B78C);
}

uint64_t sub_100129EEC()
{
  return sub_100129E78((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10012B78C);
}

uint64_t sub_100129F04(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_10012A054);
}

uint64_t sub_100129F1C()
{
  return sub_100129E78((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10012A054);
}

void sub_100129F34()
{
  sub_100188DD4();
  if (v4)
  {
    sub_10017E9A4();
    if (v6 != v7)
    {
      sub_100183F88();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  else
  {
    uint64_t v5 = v2;
  }
  uint64_t v8 = *(void *)(v0 + 16);
  if (v5 <= v8) {
    uint64_t v9 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v9 = v5;
  }
  if (v9)
  {
    sub_10017DF08(v3);
    uint64_t v10 = (char *)sub_1001D0EEC();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  if (v1)
  {
    sub_100129FF8((char *)(v0 + 32), v8, v10 + 32);
    sub_1001855E0();
  }
  else
  {
    uint64_t v12 = sub_1007F4E98();
    sub_10012BDA0(v12, v13);
  }
}

char *sub_100129FF8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100187288();
    uint64_t result = (char *)sub_10017A91C();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_1001A0DFC(a3, result);
  }
  return result;
}

void sub_10012A054()
{
}

uint64_t sub_10012A068()
{
  sub_100188DD4();
  if (v5)
  {
    sub_10017E9A4();
    if (v7 != v8)
    {
      sub_100183F88();
      if (v7)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1001A24A0();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (!v10)
  {
    uint64_t v14 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_10017DF08(v4);
  uint64_t v11 = sub_10017DF08(v1);
  sub_100164920(v11);
  uint64_t v13 = *(void *)(v12 + 72);
  uint64_t v14 = (const void *)sub_100127AE8();
  j__malloc_size(v14);
  if (!v13 || ((sub_10018BEF4(), v16) ? (BOOL v16 = v13 == -1) : (BOOL v16 = 0), v16))
  {
LABEL_23:
    sub_100187288();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  sub_10018A284(v15);
LABEL_18:
  uint64_t v17 = sub_10017DF08(v1);
  sub_1001627C0(v17);
  if (v2)
  {
    sub_10012BE5C(v0 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), v9);
    sub_1001855E0();
  }
  else
  {
    uint64_t v19 = sub_1007F4E98();
    sub_10012BCA8(v19, v20, v21, v22, v23);
  }
  return (uint64_t)v14;
}

void sub_10012A1EC()
{
  sub_10016314C();
  uint64_t v26 = v3;
  uint64_t v27 = v2;
  char v5 = v4;
  char v7 = v6;
  sub_10010947C();
  uint64_t v28 = v8;
  uint64_t v10 = v9(0);
  uint64_t v11 = sub_100164920(v10);
  uint64_t v13 = v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = *(void *)(v1 + 16);
  if (v16)
  {
    uint64_t v24 = v7;
    ((void (*)(void, uint64_t, void))v7)(0, v16, 0);
    uint64_t v17 = v5(0);
    sub_100164920(v17);
    uint64_t v19 = v1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v25 = *(void *)(v20 + 72);
    while (1)
    {
      sub_10017AADC();
      v21();
      if (v0) {
        break;
      }
      unint64_t v22 = _swiftEmptyArrayStorage[2];
      if (v22 >= _swiftEmptyArrayStorage[3] >> 1)
      {
        sub_10019AF0C();
        v24();
      }
      _swiftEmptyArrayStorage[2] = v22 + 1;
      sub_100183754((uint64_t)v15, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v22, v26);
      v19 += v25;
      if (!--v16) {
        goto LABEL_9;
      }
    }
    swift_release();
  }
LABEL_9:
  sub_100191138();
  sub_100163164();
}

uint64_t sub_10012A390@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_10012A3B8(a1, v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t sub_10012A3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char *a7@<X8>)
{
  uint64_t v84 = a6;
  uint64_t v77 = a5;
  uint64_t v78 = a4;
  uint64_t v98 = a3;
  uint64_t v89 = a2;
  uint64_t v85 = a7;
  uint64_t v8 = sub_10017DF08(&qword_100E6B8C8);
  __chkstk_darwin(v8 - 8);
  uint64_t v83 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(uint64_t))type metadata accessor for WeatherConditionIcon();
  uint64_t v79 = *((void *)v10 - 1);
  long long v80 = v10;
  __chkstk_darwin(v10);
  os_log_type_t v76 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for TimeZone();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v97 = (uint64_t)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E65250);
  uint64_t v81 = *(void *)(v13 - 8);
  uint64_t v82 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v96 = (uint64_t)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v95 = (uint64_t)v62 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v94 = (char *)v62 - v19;
  __chkstk_darwin(v18);
  int v93 = (char *)v62 - v20;
  uint64_t v21 = type metadata accessor for CurrentWeather();
  uint64_t v87 = *(void *)(v21 - 8);
  uint64_t v88 = v21;
  __chkstk_darwin(v21);
  os_log_type_t v86 = (char *)v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for Precipitation();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v24 = (char *)v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for WeatherCondition();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v26 = (char *)v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v90 = (uint64_t)v62 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)v62 - v31;
  DayWeather.date.getter();
  char v33 = static Date.== infix(_:_:)();
  uint64_t v68 = v28;
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  uint64_t v69 = v27;
  uint64_t v64 = v34;
  v34((uint64_t)v32, v27);
  uint64_t v91 = v26;
  DayWeather.conditionOfRelevance(isToday:)();
  uint64_t v92 = v24;
  DayWeather.precipitationOfRelevance(isToday:)();
  if (v33)
  {
    type metadata accessor for WeatherData(0);
    uint64_t v35 = v86;
    WeatherDataModel.currentWeather.getter();
    int v63 = CurrentWeather.isDaylight.getter();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v35, v88);
  }
  else
  {
    int v63 = 1;
  }
  Double.roundedPrecipitationPercent.getter();
  Swift::Double v37 = v36;
  uint64_t v38 = (uint64_t)v93;
  v62[1] = a1;
  DayWeather.lowTemperature.getter();
  unint64_t v39 = (unint64_t)v94;
  DayWeather.highTemperature.getter();
  DayWeather.date.getter();
  uint64_t v40 = (uint64_t)v32;
  uint64_t v41 = v97;
  Location.timeZone.getter();
  uint64_t v66 = sub_10012ACA8(v37, v40, (uint64_t)v91, (uint64_t)v92, v38, v39, v33 & 1);
  uint64_t v65 = v42;
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v41, v71);
  uint64_t v67 = v40;
  uint64_t v43 = v69;
  v64(v40, v69);
  DayWeather.date.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v90, v77, v43);
  Location.timeZone.getter();
  uint64_t v44 = v81;
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
  uint64_t v46 = v38;
  uint64_t v47 = v82;
  v45(v95, v46, v82);
  Swift::String v48 = v94;
  v45(v96, (uint64_t)v94, v47);
  unint64_t v49 = v76;
  WeatherCondition.conditionIcon(isDaylight:isFilled:forLightBackground:)();
  uint64_t v78 = WeatherConditionIcon.name.getter();
  uint64_t v77 = v50;
  (*(void (**)(char *, void (*)(uint64_t)))(v79 + 8))(v49, v80);
  uint64_t v51 = (void (*)(uint64_t))WeatherCondition.description.getter();
  uint64_t v79 = v52;
  long long v80 = v51;
  LODWORD(v76) = WeatherCondition.isPrecipitation.getter();
  uint64_t v53 = v74;
  uint64_t v54 = (uint64_t)v83;
  uint64_t v55 = (uint64_t)v92;
  uint64_t v56 = v75;
  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v83, v92, v75);
  _s7Weather24LocationCompositionStateOwst_0(v54, 0, 1, v56);
  type metadata accessor for WeatherData(0);
  uint64_t v57 = v86;
  WeatherDataModel.currentWeather.getter();
  LOBYTE(v45) = CurrentWeather.isDaylight.getter();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v57, v88);
  char v58 = *(unsigned char *)(v98 + 96);
  uint64_t v59 = swift_bridgeObjectRetain();
  sub_1001A3A9C(v67, v90, v97, v95, v96, v78, v77, v80, v85, v37, v79, v76 & 1, v54, v45 & 1, v66, v65, v59, v58);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v44 + 8);
  v60(v48, v47);
  v60(v93, v47);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v91, v73);
}

uint64_t sub_10012ACA8(Swift::Double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7)
{
  unint64_t v87 = a6;
  uint64_t v91 = a5;
  uint64_t v9 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v88 = *(void *)(v9 - 8);
  uint64_t v89 = v9;
  __chkstk_darwin(v9);
  uint64_t v85 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v11 - 8);
  uint64_t v84 = (uint64_t)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  uint64_t v90 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  long long v80 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a7)
  {
    id v14 = [self mainBundle];
    v96._uint64_t countAndFlagsBits = 0xD00000000000006DLL;
    v96._object = (void *)0x8000000100C9FE60;
    v15._uint64_t countAndFlagsBits = 0x7961646F54;
    v15._object = (void *)0xE500000000000000;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v96);
    uint64_t countAndFlagsBits = v17._countAndFlagsBits;
    object = v17._object;
  }
  else
  {
    uint64_t countAndFlagsBits = Date.dayOfWeek(timeZone:context:)();
    object = v20;
  }
  sub_10012B78C();
  uint64_t v22 = v21;
  unint64_t v23 = *(void *)(v21 + 16);
  if (v23 >= *(void *)(v21 + 24) >> 1)
  {
    sub_10012B78C();
    uint64_t v22 = v71;
  }
  *(void *)(v22 + 16) = v23 + 1;
  uint64_t v24 = v22;
  uint64_t v25 = v22 + 16 * v23;
  *(void *)(v25 + 32) = countAndFlagsBits;
  *(void *)(v25 + 40) = object;
  if ((WeatherCondition.isPrecipitation.getter() & 1) != 0
    && (Swift::String_optional v26 = Precipitation.accessibilityDescription(with:)(a1), v26.value._object))
  {
    uint64_t v27 = v26.value._object;
    uint64_t v94 = WeatherCondition.description.getter();
    uint64_t v95 = v28;
    uint64_t v92 = Precipitation.accessibilityDescription.getter();
    uint64_t v93 = v29;
    sub_10014A85C();
    uint64_t v30 = StringProtocol.localizedCaseInsensitiveCompare<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30)
    {
      uint64_t v31 = WeatherCondition.description.getter();
      uint64_t v33 = v32;
      uint64_t v34 = v24;
      unint64_t v35 = *(void *)(v24 + 16);
      unint64_t v36 = v35 + 1;
      if (v35 >= *(void *)(v34 + 24) >> 1)
      {
        sub_10012B78C();
        uint64_t v34 = v75;
      }
      *(void *)(v34 + 16) = v36;
      unint64_t v37 = v34 + 16 * v35;
      *(void *)(v37 + 32) = v31;
      *(void *)(v37 + 40) = v33;
    }
    else
    {
      uint64_t v34 = v24;
      unint64_t v36 = *(void *)(v24 + 16);
    }
    if (v36 >= *(void *)(v34 + 24) >> 1)
    {
      sub_10012B78C();
      uint64_t v34 = v74;
    }
    uint64_t v83 = v34;
    *(void *)(v34 + 16) = v36 + 1;
    unint64_t v44 = v34 + 16 * v36;
    *(void *)(v44 + 32) = v26.value._countAndFlagsBits;
    unint64_t v43 = v44 + 32;
  }
  else
  {
    uint64_t v38 = WeatherCondition.description.getter();
    uint64_t v27 = v39;
    uint64_t v40 = v24;
    unint64_t v41 = *(void *)(v24 + 16);
    if (v41 >= *(void *)(v24 + 24) >> 1)
    {
      sub_10012B78C();
      uint64_t v40 = v73;
    }
    uint64_t v83 = v40;
    *(void *)(v40 + 16) = v41 + 1;
    unint64_t v42 = v40 + 16 * v41;
    *(void *)(v42 + 32) = v38;
    unint64_t v43 = v42 + 32;
  }
  *(void *)(v43 + 8) = v27;
  id v45 = [self mainBundle];
  v97._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
  v97._object = (void *)0x8000000100C9FE10;
  v46._object = (void *)0x8000000100C9FDF0;
  v46._uint64_t countAndFlagsBits = 0xD000000000000015;
  v47._uint64_t countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  Swift::String v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v97);
  uint64_t v81 = v48._object;
  uint64_t v82 = v48._countAndFlagsBits;

  sub_10017DF08(&qword_100E64020);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_100C25ED0;
  static Set<>.value.getter();
  uint64_t v79 = type metadata accessor for Locale();
  uint64_t v50 = v84;
  _s7Weather24LocationCompositionStateOwst_0(v84, 1, 1, v79);
  uint64_t v51 = v80;
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v50);
  unsigned int v78 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v52 = v88;
  uint64_t v53 = v89;
  uint64_t v77 = *(void (**)(char *))(v88 + 104);
  uint64_t v54 = v85;
  v77(v85);
  v76[3] = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  v76[2] = sub_10017DF08(&qword_100E65250);
  v76[1] = sub_10012BBE0();
  uint64_t v55 = v86;
  uint64_t v56 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  v76[0] = v57;
  swift_release();
  uint64_t v88 = *(void *)(v52 + 8);
  ((void (*)(char *, uint64_t))v88)(v54, v53);
  uint64_t v90 = *(void *)(v90 + 8);
  ((void (*)(char *, uint64_t))v90)(v51, v55);
  *(void *)(v49 + 56) = &type metadata for String;
  unint64_t v87 = sub_10012B7C0();
  *(void *)(v49 + 64) = v87;
  uint64_t v58 = v76[0];
  *(void *)(v49 + 32) = v56;
  *(void *)(v49 + 40) = v58;
  static Set<>.value.getter();
  _s7Weather24LocationCompositionStateOwst_0(v50, 1, 1, v79);
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v50);
  ((void (*)(char *, void, uint64_t))v77)(v54, v78, v53);
  static UnitManager.standard.getter();
  uint64_t v59 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v61 = v60;
  swift_release();
  ((void (*)(char *, uint64_t))v88)(v54, v53);
  ((void (*)(char *, uint64_t))v90)(v51, v55);
  unint64_t v62 = v87;
  *(void *)(v49 + 96) = &type metadata for String;
  *(void *)(v49 + 104) = v62;
  *(void *)(v49 + 72) = v59;
  *(void *)(v49 + 80) = v61;
  uint64_t v63 = String.init(format:_:)();
  uint64_t v65 = v64;
  swift_bridgeObjectRelease();
  uint64_t v66 = v83;
  unint64_t v67 = *(void *)(v83 + 16);
  if (v67 >= *(void *)(v83 + 24) >> 1)
  {
    sub_10012B78C();
    uint64_t v66 = v72;
  }
  *(void *)(v66 + 16) = v67 + 1;
  uint64_t v68 = v66 + 16 * v67;
  *(void *)(v68 + 32) = v63;
  *(void *)(v68 + 40) = v65;
  uint64_t v94 = v66;
  sub_10017DF08(&qword_100E91BC0);
  sub_10012BB8C();
  uint64_t v69 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v69;
}

void sub_10012B468()
{
  sub_100162BC8();
  if (v4)
  {
    sub_10017E9A4();
    if (v5 != v6)
    {
      sub_100183F88();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_100185C7C();
  if (v3)
  {
    sub_10017DF08(v7);
    uint64_t v8 = (const void *)sub_1001D0EEC();
    size_t v9 = j__malloc_size(v8);
    sub_10012B654(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = sub_100176DD8();
    v1(v10);
    sub_1001855E0();
  }
  else
  {
    uint64_t v11 = sub_100109410();
    v0(v11);
  }
}

uint64_t sub_10012B520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, a3);
}

uint64_t sub_10012B538()
{
  *uint64_t v1 = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10012B550()
{
  return *(void *)v0;
}

uint64_t sub_10012B56C()
{
  return *(void *)(v0 - 464);
}

uint64_t sub_10012B594(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 1208) = result;
  *(void *)(v2 + 1200) = a2;
  return result;
}

uint64_t sub_10012B5A0(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v1);
}

uint64_t sub_10012B5BC()
{
  return v0;
}

uint64_t sub_10012B5D4()
{
  return v0;
}

uint64_t sub_10012B5E8()
{
  return v0;
}

uint64_t sub_10012B5F4()
{
  return static TimeZone.== infix(_:_:)();
}

uint64_t sub_10012B630(uint64_t result)
{
  *(unsigned char *)(result + 16) = 4;
  return result;
}

uint64_t sub_10012B640()
{
  return v0 - 72;
}

void sub_10012B654(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_10012B664()
{
  return swift_release();
}

void sub_10012B67C()
{
  Hasher._combine(_:)(0);
}

uint64_t sub_10012B694(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 - 264);
  uint64_t v6 = *(void *)(v3 - 200);
  return sub_100886FF8(v5, v6, a3);
}

uint64_t sub_10012B6B8()
{
  return 0x72656874616577;
}

uint64_t sub_10012B6D0(uint64_t a1)
{
  return v1 + *(int *)(a1 + 48);
}

uint64_t sub_10012B6F0()
{
  uint64_t v4 = *(void *)(v2 - 152);
  return sub_10006DF38(v1, v4, v0);
}

uint64_t sub_10012B710()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10012B72C()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_10012B75C()
{
  return v0;
}

uint64_t sub_10012B774()
{
  return sub_100126EC0();
}

void sub_10012B78C()
{
}

unint64_t sub_10012B7C0()
{
  unint64_t result = qword_100E6F4A0;
  if (!qword_100E6F4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F4A0);
  }
  return result;
}

char *sub_10012B80C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

uint64_t sub_10012B8A0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63730);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10012B900(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>, unint64_t a8)
{
  sub_10020FA74(a1, a2, a3, a4, a5, 0xD000000000000014, (a7 - 32) | 0x8000000000000000, a6, a8);
}

void sub_10012B92C()
{
  *(unsigned char *)(v0 - 82) = 1;
}

uint64_t sub_10012B950()
{
  return v0;
}

uint64_t sub_10012B978()
{
  return sub_100178110(v1, v0);
}

uint64_t sub_10012B990()
{
  return swift_getAtKeyPath();
}

void sub_10012B9AC()
{
  sub_1001520F8();
}

char *sub_10012B9CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1007F3B50(0, a1 + 1, 1);
}

uint64_t sub_10012B9EC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 368) = a1;
  return 0;
}

uint64_t sub_10012BA14()
{
  return String.write(to:)();
}

uint64_t sub_10012BA78()
{
  return v0;
}

uint64_t sub_10012BA84()
{
  return v0;
}

uint64_t sub_10012BA94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10012BB8C()
{
  unint64_t result = qword_100E73CB0;
  if (!qword_100E73CB0)
  {
    sub_10018C6DC(&qword_100E91BC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E73CB0);
  }
  return result;
}

unint64_t sub_10012BBE0()
{
  unint64_t result = qword_100E6BF60;
  if (!qword_100E6BF60)
  {
    type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6BF60);
  }
  return result;
}

void sub_10012BC30()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

uint64_t sub_10012BC94()
{
  return sub_10012A068();
}

uint64_t sub_10012BCA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_100187288();
    sub_1001D1DF8();
    goto LABEL_11;
  }
  sub_10017DF08(a5);
  sub_100179EF0();
  sub_1001D3FCC();
  if (v8) {
    BOOL v9 = 0;
  }
  else {
    BOOL v9 = v7 > a3;
  }
  if (!v9)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return a1;
  }
  sub_100187288();
  sub_100181768();
LABEL_11:
  uint64_t result = sub_100163950();
  __break(1u);
  return result;
}

uint64_t sub_10012BDA0(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_100187288();
    sub_1001D1DF8();
    goto LABEL_11;
  }
  sub_100184790();
  if (v6) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = v5 > v3;
  }
  if (!v7)
  {
    sub_10017DF08(v4);
    sub_10021036C();
    swift_bridgeObjectRelease();
    return v2;
  }
  sub_100187288();
  sub_100181768();
LABEL_11:
  uint64_t result = sub_100163950();
  __break(1u);
  return result;
}

void sub_10012BE5C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100187288();
    sub_10017A91C();
    __break(1u);
  }
  else
  {
    sub_10018B4C0();
    if (v6 && (sub_10017DF08(v5), sub_100162E4C(), v3 + *(void *)(v7 + 72) * v2 > v4))
    {
      if (v4 != v3)
      {
        sub_10017F580();
        swift_arrayInitWithTakeBackToFront();
      }
    }
    else
    {
      sub_10017DF08(v5);
      sub_10017F580();
      swift_arrayInitWithTakeFrontToBack();
    }
  }
}

uint64_t sub_10012BF4C()
{
  return type metadata accessor for Location();
}

uint64_t sub_10012BF78(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_10012BF8C()
{
  return v0;
}

uint64_t sub_10012BFB4()
{
  return swift_arrayDestroy();
}

uint64_t sub_10012BFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, a4);
}

uint64_t sub_10012BFF0()
{
  return type metadata accessor for _ConditionalContent.Storage(0);
}

uint64_t sub_10012C01C()
{
  return String.write(to:)();
}

void sub_10012C034()
{
}

void sub_10012C040()
{
  sub_10018C55C();
  if (v2)
  {
    sub_10017E9A4();
    if (v3 != v4)
    {
      sub_100183F88();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_1001A2E3C();
  if (v1)
  {
    sub_10017DF08(v5);
    char v6 = (const void *)sub_1001D0EEC();
    size_t v7 = j__malloc_size(v6);
    sub_1001D1410(v7 - 32);
  }
  if (v0)
  {
    char v8 = (char *)sub_10018A3F8();
    sub_100129FF8(v8, v9, v10);
    sub_1001855E0();
  }
  else
  {
    uint64_t v11 = sub_10019DF5C();
    sub_10012C1E8(v11, v12);
  }
}

void sub_10012C0E8()
{
  sub_100162BC8();
  if (v4)
  {
    sub_10017E9A4();
    if (v5 != v6)
    {
      sub_100183F88();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_100185C7C();
  if (v3)
  {
    sub_10017DF08(v7);
    char v8 = (const void *)sub_1001D0EEC();
    size_t v9 = j__malloc_size(v8);
    sub_10012B654(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = sub_100176DD8();
    v1(v10);
    sub_1001855E0();
  }
  else
  {
    uint64_t v11 = sub_100109410();
    v0(v11);
  }
}

void sub_10012C1A0()
{
}

void sub_10012C1D4()
{
}

uint64_t sub_10012C1E8(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_100187288();
    sub_1001D1DF8();
    goto LABEL_11;
  }
  sub_100184790();
  if (v5) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v4 > v3;
  }
  if (!v6)
  {
    sub_10017DF08(&qword_100E970C8);
    sub_10021036C();
    swift_bridgeObjectRelease();
    return v2;
  }
  sub_100187288();
  sub_100181768();
LABEL_11:
  uint64_t result = sub_100163950();
  __break(1u);
  return result;
}

char *sub_10012C2A8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_10012C33C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100187288();
    uint64_t result = (char *)sub_10017A91C();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_1001A0DFC(a3, result);
  }
  return result;
}

uint64_t sub_10012C39C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v184 = a1;
  uint64_t v161 = type metadata accessor for LocationContentView(0);
  sub_10017C83C();
  uint64_t v158 = v3;
  __chkstk_darwin(v4);
  uint64_t v178 = v5;
  uint64_t v163 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EA14A8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v159 = v8;
  uint64_t v179 = sub_10017DF08(&qword_100EA14B0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v160 = v10;
  uint64_t v166 = sub_10017DF08(&qword_100EA14B8);
  sub_10017C83C();
  uint64_t v164 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v162 = v13;
  sub_10017DF08(&qword_100EA14C0);
  sub_10017C83C();
  uint64_t v167 = v15;
  uint64_t v168 = v14;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v165 = v16;
  uint64_t v169 = sub_10017DF08(&qword_100EA14C8);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v170 = v18;
  uint64_t v171 = sub_10017DF08(&qword_100EA14D0);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v172 = v20;
  uint64_t v183 = sub_10017DF08(&qword_100EA14D8);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v174 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100128F8C();
  uint64_t v173 = v24;
  sub_100129064();
  uint64_t v155 = type metadata accessor for Location.Identifier();
  sub_10017C83C();
  uint64_t v153 = v25;
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v152 = v27;
  sub_100129064();
  uint64_t v28 = type metadata accessor for WeatherActivity();
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v157 = v30;
  sub_100129064();
  uint64_t v31 = type metadata accessor for AutomationInfoViewModifier();
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v151 = v33;
  uint64_t v34 = sub_100129064();
  uint64_t v148 = type metadata accessor for AutomationInfo(v34);
  sub_100162E4C();
  __chkstk_darwin(v35);
  sub_100162EF8();
  uint64_t v149 = v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  uint64_t v147 = (char *)&v145 - v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100128F8C();
  uint64_t v150 = v40;
  uint64_t v41 = sub_10017DF08(&qword_100EA14E0);
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v175 = (char *)v43;
  uint64_t v180 = sub_10017DF08(&qword_100EA14E8);
  sub_100162E4C();
  __chkstk_darwin(v44);
  sub_100162EF8();
  uint64_t v154 = v45;
  sub_1001626D4();
  __chkstk_darwin(v46);
  sub_100128F8C();
  uint64_t v156 = v47;
  uint64_t v182 = sub_10017DF08(&qword_100EA14F0);
  sub_100162E4C();
  __chkstk_darwin(v48);
  sub_100109314();
  uint64_t v181 = v49;
  sub_100129064();
  uint64_t v50 = type metadata accessor for LocationViewModel();
  sub_100162E4C();
  __chkstk_darwin(v51);
  sub_10016278C();
  uint64_t v54 = v52 - v53;
  __chkstk_darwin(v55);
  uint64_t v146 = (char *)&v145 - v56;
  sub_1001626D4();
  uint64_t v58 = __chkstk_darwin(v57);
  uint64_t v60 = (char *)&v145 - v59;
  __chkstk_darwin(v58);
  unint64_t v62 = (char *)&v145 - v61;
  uint64_t v63 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  uint64_t v64 = sub_100109308(v63);
  __chkstk_darwin(v64);
  sub_10011C760();
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v65._uint64_t countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v65);
  sub_10019B258();
  sub_100133E68();
  swift_release();
  uint64_t v66 = &v62[*(int *)(v50 + 24)];
  uint64_t v67 = *((void *)v66 + 9);
  uint64_t v68 = (void *)*((void *)v66 + 10);
  swift_bridgeObjectRetain();
  sub_1001338DC((uint64_t)v62, (void (*)(void))type metadata accessor for LocationViewModel);
  v69._uint64_t countAndFlagsBits = v67;
  v69._object = v68;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v69);
  swift_bridgeObjectRelease();
  v70._uint64_t countAndFlagsBits = 0;
  v70._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v70);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v193 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v194 = v71;
  LODWORD(v177) = v72;
  uint64_t v185 = v73;
  sub_10019B258();
  sub_100133E68();
  swift_release();
  uint64_t v74 = (uint64_t *)&v62[*(int *)(v50 + 24)];
  uint64_t v76 = *v74;
  uint64_t v75 = (void *)v74[1];
  swift_bridgeObjectRetain();
  sub_1001338DC((uint64_t)v62, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t KeyPath = v76;
  uint64_t v196 = v75;
  sub_10014A85C();
  uint64_t v186 = Text.init<A>(_:)();
  uint64_t v187 = v77;
  int v176 = v78;
  uint64_t v189 = v79;
  uint64_t v188 = sub_10012D544();
  uint64_t v190 = v80;
  uint64_t v191 = v81;
  uint64_t v192 = v82;
  sub_10019B258();
  sub_100133E68();
  swift_release();
  LODWORD(v76) = v60[*(int *)(v50 + 56)];
  uint64_t v83 = (uint64_t)v60;
  uint64_t v84 = v2;
  sub_1001338DC(v83, (void (*)(void))type metadata accessor for LocationViewModel);
  sub_10019B258();
  if (v76 == 2)
  {
    sub_100133E68();
    swift_release();
    uint64_t v85 = &v62[*(int *)(v50 + 24)];
    uint64_t v87 = *(void *)v85;
    uint64_t v86 = *((void *)v85 + 1);
    swift_bridgeObjectRetain();
    sub_1001338DC((uint64_t)v62, (void (*)(void))type metadata accessor for LocationViewModel);
    uint64_t v88 = (uint64_t)v150;
    *uint64_t v150 = v87;
    *(void *)(v88 + 8) = v86;
    type metadata accessor for AutomationViewInfo(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1001300BC();
    sub_100130070();
    uint64_t v89 = (uint64_t)v151;
    void *v151 = 0;
    *(void *)(v89 + 8) = 0xE000000000000000;
    *(void *)(v89 + 16) = swift_getKeyPath();
    *(unsigned char *)(v89 + 24) = 0;
    type metadata accessor for AutomationInfoProperty();
    sub_100130070();
    sub_1001300BC();
    sub_1001338DC(v89, (void (*)(void))type metadata accessor for AutomationInfoViewModifier);
    sub_1001338DC(v88, (void (*)(void))type metadata accessor for AutomationInfo);
    swift_retain();
    uint64_t v90 = (uint64_t)v146;
    sub_100133E68();
    swift_release();
    uint64_t v91 = v152;
    uint64_t v92 = v153;
    uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 16);
    uint64_t v94 = v155;
    v93(v152, v90, v155);
    sub_1001338DC(v90, (void (*)(void))type metadata accessor for LocationViewModel);
    Location.Identifier.kind.getter();
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v91, v94);
    uint64_t v95 = Location.Identifier.Kind.rawValue.getter();
    uint64_t v97 = v96;
    if (v95 == Location.Identifier.Kind.rawValue.getter() && v97 == v98)
    {
      uint64_t v101 = 2;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_100183094();
      char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v100 & 1) == 0)
      {
        swift_retain();
        sub_100133E68();
        swift_release();
        uint64_t v104 = v157;
        v93(v157, (uint64_t)v62, v94);
        sub_1001338DC((uint64_t)v62, (void (*)(void))type metadata accessor for LocationViewModel);
        uint64_t v101 = 0;
        goto LABEL_12;
      }
      uint64_t v101 = 2;
    }
    uint64_t v104 = v157;
LABEL_12:
    _s7Weather24LocationCompositionStateOwst_0(v104, v101, 2, v94);
    uint64_t v105 = v154;
    sub_1001300BC();
    uint64_t v106 = (uint64_t)v175;
    sub_10006DF38((uint64_t)v175, v105, &qword_100EA14E0);
    sub_1001338DC(v104, (void (*)(void))type metadata accessor for WeatherActivity);
    sub_100178110(v106, &qword_100EA14E0);
    uint64_t v107 = &qword_100EA14E8;
    uint64_t v108 = v156;
    sub_10024D364(v105, v156, &qword_100EA14E8);
    sub_100137B80();
    sub_1001378A0();
    uint64_t v109 = v181;
    sub_1000E95C0();
    sub_100191924(v193, v194, v177 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(v186, v187, v176 & 1);
    swift_bridgeObjectRelease();
    sub_100147E60(v188, v190, v191, v192);
    uint64_t v110 = v108;
    goto LABEL_15;
  }
  uint64_t v175 = v62;
  sub_100133E68();
  swift_release();
  uint64_t v102 = *(unsigned __int8 *)(v54 + *(int *)(v50 + 56));
  sub_1001338DC(v54, (void (*)(void))type metadata accessor for LocationViewModel);
  char v103 = 1;
  uint64_t v157 = v50;
  switch(v102)
  {
    case 3:
      break;
    default:
      char v103 = _stringCompareWithSmolCheck(_:_:expecting:)();
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v111 = static HorizontalAlignment.center.getter();
  uint64_t v112 = (uint64_t)v159;
  *uint64_t v159 = v111;
  *(void *)(v112 + 8) = 0;
  *(unsigned char *)(v112 + 16) = 0;
  uint64_t v113 = v112 + *(int *)(sub_10017DF08(&qword_100EA14F8) + 44);
  LODWORD(v156) = v177 & 1;
  v176 &= 1u;
  sub_100132120(v84, v193, v194, v156, v185, v186, v187, v176, v113, v189, v188, v190, v191, v192);
  uint64_t v177 = type metadata accessor for LocationContentView;
  sub_1001300BC();
  uint64_t v114 = *(unsigned __int8 *)(v158 + 80);
  uint64_t v158 = v114 | 7;
  uint64_t v115 = swift_allocObject();
  uint64_t v145 = v84;
  char v116 = v103 & 1;
  *(unsigned char *)(v115 + 16) = v103 & 1;
  uint64_t v155 = (uint64_t)type metadata accessor for LocationContentView;
  sub_100130070();
  uint64_t v117 = v160;
  sub_10006DF38(v112, v160, &qword_100EA14A8);
  uint64_t v118 = (uint64_t (**)())(v117 + *(int *)(v179 + 36));
  *uint64_t v118 = sub_10021FCB0;
  v118[1] = (uint64_t (*)())v115;
  v118[2] = 0;
  v118[3] = 0;
  sub_100178110(v112, &qword_100EA14A8);
  LOBYTE(KeyPath) = v116;
  uint64_t v119 = v145;
  sub_1001300BC();
  v178 += (v114 + 16) & ~v114;
  swift_allocObject();
  sub_100130070();
  unint64_t v120 = sub_100137C2C();
  uint64_t v121 = v179;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178110(v117, &qword_100EA14B0);
  uint64_t v122 = v119 + *(int *)(v161 + 76);
  long long v123 = *(_OWORD *)(v122 + 16);
  v208[0] = *(_OWORD *)v122;
  v208[1] = v123;
  v208[2] = *(_OWORD *)(v122 + 32);
  char v209 = *(unsigned char *)(v122 + 48);
  sub_10024D364((uint64_t)v208, (uint64_t)v210, &qword_100E63DB0);
  sub_1000FDD1C((uint64_t)v210, (void (*)(void, void, void, void, void, void, void))sub_100193D54);
  sub_1000FDD60();
  sub_1000FDD1C((uint64_t)v208, (void (*)(void, void, void, void, void, void, void))sub_10014DC00);
  uint64_t v203 = v207;
  sub_1001300BC();
  swift_allocObject();
  sub_100130070();
  uint64_t KeyPath = v121;
  uint64_t v196 = &type metadata for Bool;
  *(void *)&long long v197 = v120;
  *((void *)&v197 + 1) = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v125 = sub_1001364A8();
  uint64_t v126 = v166;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100162F0C();
  v127();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001A0120();
  uint64_t v203 = v126;
  uint64_t v204 = &type metadata for CGFloat;
  uint64_t v205 = OpaqueTypeConformance2;
  unint64_t v206 = v125;
  swift_getOpaqueTypeConformance2();
  uint64_t v128 = v170;
  View.modifier<A>(_:)();
  swift_release();
  sub_100162F0C();
  v129();
  uint64_t v130 = swift_getKeyPath();
  uint64_t v131 = swift_getKeyPath();
  uint64_t KeyPath = v130;
  sub_1001A0120();
  uint64_t v201 = v132;
  char v202 = 0;
  sub_100137E1C();
  uint64_t v133 = v172;
  View.modifier<A>(_:)();
  sub_10018CCC4(v130, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  sub_10018F6D8(v131, 0);
  sub_100178110(v128, &qword_100EA14C8);
  swift_retain();
  uint64_t v134 = (uint64_t)v175;
  sub_100133E68();
  swift_release();
  LOBYTE(v117) = *(unsigned char *)(v134 + *(int *)(v157 + 68));
  sub_1001338DC(v134, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v135 = swift_getKeyPath();
  LOBYTE(KeyPath) = v117;
  uint64_t v196 = (void *)v135;
  sub_100137A64();
  long long v197 = 0u;
  long long v198 = 0u;
  long long v199 = 0u;
  long long v200 = 0u;
  LOBYTE(v201) = 0;
  uint64_t v136 = v174;
  View.modifier<A>(_:)();
  swift_release();
  sub_100178110(v133, &qword_100EA14D0);
  sub_1001378A0();
  uint64_t v137 = v173;
  sub_100188C14();
  sub_100121584(v138, v139, v140);
  uint64_t v107 = &qword_100EA14D8;
  sub_100178110(v136, &qword_100EA14D8);
  sub_100188C14();
  sub_100121584(v141, v142, v143);
  sub_100137B80();
  uint64_t v109 = v181;
  sub_100121F14();
  sub_100191924(v193, v194, v156);
  swift_bridgeObjectRelease();
  sub_100191924(v186, v187, v176);
  swift_bridgeObjectRelease();
  sub_100147E60(v188, v190, v191, v192);
  sub_100178110(v136, &qword_100EA14D8);
  uint64_t v110 = v137;
LABEL_15:
  sub_100178110(v110, v107);
  sub_100137824();
  sub_100121584(v109, v182, v184);
  return sub_100178110(v109, &qword_100EA14F0);
}

uint64_t sub_10012D544()
{
  uint64_t v0 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocationViewModel();
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_100133E68();
  swift_release();
  uint64_t v5 = &v4[*(int *)(v2 + 32)];
  uint64_t v6 = *((void *)v5 + 2);
  uint64_t v7 = *((void *)v5 + 3);
  uint64_t v9 = *((void *)v5 + 4);
  char v8 = (void *)*((void *)v5 + 5);
  int v10 = v5[48];
  sub_100193004(v6, v7, v9, (uint64_t)v8, v5[48]);
  sub_1001338DC((uint64_t)v4, (void (*)(void))type metadata accessor for LocationViewModel);
  if (v10)
  {
    if (v10 == 1)
    {
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v11._uint64_t countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
      Image.init(systemName:)();
      LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
      swift_release();
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v12);
      LocalizedStringKey.init(stringInterpolation:)();
      uint64_t v13 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v15 = v14;
      uint64_t v29 = v16;
      HIDWORD(v28) = v17 & 1;
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v18);
      v19._uint64_t countAndFlagsBits = v9;
      v19._object = v8;
      LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v19);
      swift_bridgeObjectRelease();
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v20);
      LocalizedStringKey.init(stringInterpolation:)();
      uint64_t v21 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v23 = v22;
      char v25 = v24 & 1;
      uint64_t v26 = static Text.+ infix(_:_:)();
      sub_100191924(v21, v23, v25);
      swift_bridgeObjectRelease();
      sub_100191924(v13, v15, SBYTE4(v28));
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    uint64_t v30 = v6;
    uint64_t v31 = v7;
    sub_10014A85C();
    return Text.init<A>(_:)();
  }
  return v26;
}

uint64_t sub_10012D84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, long long a11, long long a12, uint64_t a13)
{
  int v119 = a8;
  unint64_t v125 = (char *)a7;
  uint64_t v122 = a5;
  long long v123 = (char *)a6;
  int v117 = a4;
  uint64_t v120 = a2;
  uint64_t v121 = a3;
  uint64_t v114 = a9;
  long long v118 = a11;
  long long v116 = a12;
  uint64_t v115 = a13;
  uint64_t v105 = sub_10017DF08(&qword_100EA1670);
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v102 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10017DF08(&qword_100EA1678);
  uint64_t v16 = __chkstk_darwin(v112);
  uint64_t v101 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v104 = (uint64_t)&v94 - v18;
  uint64_t v124 = sub_10017DF08(&qword_100EA1680);
  __chkstk_darwin(v124);
  uint64_t v111 = (uint64_t)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10017DF08(&qword_100EA1688);
  __chkstk_darwin(v106);
  uint64_t v99 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10017DF08(&qword_100EA1690);
  __chkstk_darwin(v94);
  uint64_t v98 = (char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10017DF08(&qword_100EA1698);
  __chkstk_darwin(v108);
  uint64_t v95 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10017DF08(&qword_100EA16A0);
  __chkstk_darwin(v107);
  uint64_t v100 = (uint64_t)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_10017DF08(&qword_100EA16A8);
  uint64_t v24 = __chkstk_darwin(v97);
  uint64_t v96 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v94 - v26;
  uint64_t v109 = sub_10017DF08(&qword_100EA16B0);
  __chkstk_darwin(v109);
  uint64_t v29 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100EA16B8);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v113 = (char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v110 = (char *)&v94 - v33;
  uint64_t v34 = sub_10017DF08(&qword_100EA16C0);
  __chkstk_darwin(v34 - 8);
  uint64_t v36 = (uint64_t *)((char *)&v94 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = sub_10017DF08(&qword_100EA16C8);
  uint64_t v38 = v37 - 8;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v126 = (uint64_t)&v94 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v94 - v42;
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v94 - v44;
  *uint64_t v36 = static Alignment.top.getter();
  v36[1] = v46;
  uint64_t v47 = sub_10017DF08(&qword_100EA16D0);
  sub_10012F9D8(a1, v120, v121, v117 & 1, v122, (uint64_t)v123, (uint64_t)v125, v119 & 1, (uint64_t)v36 + *(int *)(v47 + 44), v118, *((uint64_t *)&v118 + 1), v116, *((uint64_t *)&v116 + 1), v115);
  sub_10006DF38((uint64_t)v36, (uint64_t)v43, &qword_100EA16C0);
  *(void *)&v43[*(int *)(v38 + 44)] = 0x3FF0000000000000;
  sub_100178110((uint64_t)v36, &qword_100EA16C0);
  unint64_t v125 = v45;
  sub_10024D364((uint64_t)v43, (uint64_t)v45, &qword_100EA16C8);
  sub_10012E48C((uint64_t)v129, a10);
  sub_10024D364((uint64_t)v129, (uint64_t)v133, &qword_100EA16D8);
  uint64_t v48 = *(void *)(a1 + 144);
  LOBYTE(v43) = *(unsigned char *)(a1 + 152);
  sub_100195B7C(v48, (char)v43);
  sub_100149AE8();
  char v50 = v49;
  sub_10018F6D8(v48, (char)v43);
  if (v50)
  {
    uint64_t v51 = (uint64_t)v96;
    uint64_t v52 = v97;
    uint64_t v53 = (uint64_t)v98;
    uint64_t v54 = (uint64_t)v99;
    long long v123 = v29;
    char v55 = sub_10092067C();
    uint64_t v56 = v100;
    sub_100920A64(v100, a10);
    uint64_t v57 = v111;
    if (v55)
    {
      uint64_t KeyPath = swift_getKeyPath();
      sub_10006DF38(v56, v51, &qword_100EA16A0);
      uint64_t v59 = v51 + *(int *)(v52 + 36);
      *(void *)uint64_t v59 = KeyPath;
      *(_OWORD *)(v59 + 8) = 0u;
      *(_OWORD *)(v59 + 24) = 0u;
      *(_OWORD *)(v59 + 40) = 0u;
      *(_OWORD *)(v59 + 56) = 0u;
      *(unsigned char *)(v59 + 72) = 0;
      sub_100178110(v56, &qword_100EA16A0);
      sub_10024D364(v51, (uint64_t)v27, &qword_100EA16A8);
      sub_10006DF38((uint64_t)v27, v53, &qword_100EA16A8);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100EA1710);
      sub_10022D03C();
      sub_10022CF9C();
      uint64_t v60 = (uint64_t)v95;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v60, v54, &qword_100EA1698);
      swift_storeEnumTagMultiPayload();
      sub_100228600();
      sub_10024D5E4((uint64_t)&unk_100EA16F8);
      uint64_t v61 = (uint64_t)v123;
      _ConditionalContent<>.init(storage:)();
      sub_100178110(v60, &qword_100EA1698);
      uint64_t v62 = (uint64_t)v27;
      uint64_t v63 = &qword_100EA16A8;
    }
    else
    {
      sub_10006DF38(v56, v54, &qword_100EA16A0);
      swift_storeEnumTagMultiPayload();
      sub_100228600();
      sub_10024D5E4((uint64_t)&unk_100EA16F8);
      uint64_t v61 = (uint64_t)v123;
      _ConditionalContent<>.init(storage:)();
      uint64_t v62 = v56;
      uint64_t v63 = &qword_100EA16A0;
    }
    sub_100178110(v62, v63);
    uint64_t v80 = &qword_100EA16B0;
    sub_10006DF38(v61, v57, &qword_100EA16B0);
    swift_storeEnumTagMultiPayload();
    sub_1001376E4();
    sub_100137CCC();
    uint64_t v82 = (uint64_t)v110;
    _ConditionalContent<>.init(storage:)();
    uint64_t v83 = v61;
  }
  else
  {
    uint64_t v64 = v102;
    sub_10012E98C(v102, a10);
    char v65 = static Edge.Set.bottom.getter();
    uint64_t v66 = a1 + *(int *)(type metadata accessor for LocationContentView(0) + 64);
    long long v67 = *(_OWORD *)(v66 + 16);
    v130[0] = *(_OWORD *)v66;
    v130[1] = v67;
    char v131 = *(unsigned char *)(v66 + 32);
    sub_10024D364((uint64_t)v130, (uint64_t)v132, &qword_100E63F98);
    sub_1000FA648((uint64_t)v132, (void (*)(void, void, void, void, void))sub_100190CD4);
    sub_1000FA688();
    sub_1000FA648((uint64_t)v130, (void (*)(void, void, void, void, void))sub_100191934);
    EdgeInsets.init(_all:)();
    uint64_t v69 = v68;
    uint64_t v71 = v70;
    uint64_t v73 = v72;
    uint64_t v75 = v74;
    uint64_t v76 = v103;
    uint64_t v77 = (uint64_t)v101;
    uint64_t v78 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v101, v64, v105);
    uint64_t v79 = v77 + *(int *)(v112 + 36);
    *(unsigned char *)uint64_t v79 = v65;
    *(void *)(v79 + 8) = v69;
    *(void *)(v79 + 16) = v71;
    *(void *)(v79 + 24) = v73;
    *(void *)(v79 + 32) = v75;
    *(unsigned char *)(v79 + 40) = 0;
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v64, v78);
    uint64_t v80 = &qword_100EA1678;
    uint64_t v81 = v104;
    sub_10024D364(v77, v104, &qword_100EA1678);
    sub_10006DF38(v81, v111, &qword_100EA1678);
    swift_storeEnumTagMultiPayload();
    sub_1001376E4();
    sub_100137CCC();
    uint64_t v82 = (uint64_t)v110;
    _ConditionalContent<>.init(storage:)();
    uint64_t v83 = v81;
  }
  sub_100178110(v83, v80);
  uint64_t v85 = (uint64_t)v113;
  uint64_t v84 = v114;
  uint64_t v86 = swift_getKeyPath();
  uint64_t v87 = (uint64_t)v125;
  uint64_t v88 = v126;
  sub_10006DF38((uint64_t)v125, v126, &qword_100EA16C8);
  sub_10024D364((uint64_t)v133, (uint64_t)v127, &qword_100EA16D8);
  sub_10006DF38(v82, v85, &qword_100EA16B8);
  sub_10006DF38(v88, v84, &qword_100EA16C8);
  uint64_t v89 = v84;
  uint64_t v90 = (int *)sub_10017DF08(&qword_100EA1778);
  uint64_t v91 = v89 + v90[12];
  sub_10024D364((uint64_t)v127, (uint64_t)v128, &qword_100EA16D8);
  sub_10024D364((uint64_t)v128, v91, &qword_100EA16D8);
  sub_10006DF38(v85, v89 + v90[16], &qword_100EA16B8);
  uint64_t v92 = v89 + v90[20];
  *(void *)uint64_t v92 = v86;
  *(_OWORD *)(v92 + 8) = 0u;
  *(_OWORD *)(v92 + 24) = 0u;
  *(_OWORD *)(v92 + 40) = 0u;
  *(_OWORD *)(v92 + 56) = 0u;
  *(unsigned char *)(v92 + 72) = 0;
  sub_10012E43C((uint64_t)v128);
  sub_1001910C8(v86, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  sub_100178110(v82, &qword_100EA16B8);
  sub_100178110(v87, &qword_100EA16C8);
  sub_10018CCC4(v86, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  sub_100178110(v85, &qword_100EA16B8);
  sub_10024D364((uint64_t)v127, (uint64_t)v129, &qword_100EA16D8);
  sub_10012E43C((uint64_t)v129);
  return sub_100178110(v88, &qword_100EA16C8);
}

uint64_t sub_10012E43C(uint64_t a1)
{
  uint64_t v2 = sub_10017F62C(a1);
  v3(v2);
  return v1;
}

uint64_t sub_10012E48C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v45 = type metadata accessor for Location.Identifier();
  uint64_t v4 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E628E8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1002102B0(v10, (uint64_t)qword_100EA12F0);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:), v10);
  LOBYTE(v14) = sub_10012F990(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v44 = a1;
    uint64_t v43 = static Color.clear.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v39 = v76;
    uint64_t v40 = v78;
    int v37 = v79;
    int v38 = v77;
    uint64_t v41 = v81;
    uint64_t v42 = v80;
    uint64_t v15 = *(int *)(type metadata accessor for LocationContentView(0) + 68);
    uint64_t v34 = v7;
    uint64_t v16 = v46;
    uint64_t v17 = v46 + v15;
    uint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    sub_100195B7C(*(void *)v17, v19);
    sub_100149AE8();
    int v35 = v20;
    sub_10018F6D8(v18, v19);
    uint64_t v36 = *(void *)(v16 + 40);
    uint64_t v82 = 0x6F6973696C6C6F63;
    unint64_t v83 = 0xEA00000000002D6ELL;
    swift_retain();
    sub_100133E68();
    swift_release();
    uint64_t v21 = v6;
    uint64_t v22 = v6;
    uint64_t v23 = v45;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v22, v9, v45);
    sub_1001338DC((uint64_t)v9, (void (*)(void))type metadata accessor for LocationViewModel);
    uint64_t v24 = Location.Identifier.id.getter();
    uint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v21, v23);
    v27._uint64_t countAndFlagsBits = v24;
    v27._object = v26;
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    uint64_t v28 = v82;
    unint64_t v29 = v83;
    swift_retain();
    sub_100133E68();
    swift_release();
    char v30 = v9[*(int *)(v34 + 68)];
    sub_1001338DC((uint64_t)v9, (void (*)(void))type metadata accessor for LocationViewModel);
    uint64_t KeyPath = swift_getKeyPath();
    v55[0] = 0;
    State.init(wrappedValue:)();
    char v54 = v38;
    char v52 = v37;
    char v48 = 0;
    v55[0] = v43;
    v55[1] = v39;
    char v56 = v38;
    *(_DWORD *)uint64_t v57 = *(_DWORD *)v53;
    *(_DWORD *)&v57[3] = *(_DWORD *)&v53[3];
    uint64_t v58 = v40;
    char v59 = v37;
    *(_DWORD *)&v60[3] = *(_DWORD *)&v51[3];
    *(_DWORD *)uint64_t v60 = *(_DWORD *)v51;
    uint64_t v61 = v42;
    uint64_t v62 = v41;
    char v63 = v35 & 1;
    *(_DWORD *)&v64[3] = *(_DWORD *)&v50[3];
    *(_DWORD *)uint64_t v64 = *(_DWORD *)v50;
    uint64_t v65 = v36;
    uint64_t v66 = v28;
    unint64_t v67 = v29;
    double v68 = a2;
    char v69 = v30;
    *(_DWORD *)&_OWORD v70[3] = *(_DWORD *)&v49[3];
    *(_DWORD *)uint64_t v70 = *(_DWORD *)v49;
    uint64_t v71 = KeyPath;
    char v72 = 0;
    *(_DWORD *)&v73[3] = *(_DWORD *)&v47[3];
    *(_DWORD *)uint64_t v73 = *(_DWORD *)v47;
    uint64_t v74 = v82;
    unint64_t v75 = v83;
    a1 = v44;
    LocationSearchEntityFromStringResolver.init()();
  }
  else
  {
    sub_1008DFE24(v55);
  }
  sub_10024D364((uint64_t)v55, (uint64_t)&v82, &qword_100EA16D8);
  return sub_10024D364((uint64_t)&v82, a1, &qword_100EA16D8);
}

uint64_t sub_10012E98C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v54 = a1;
  uint64_t v68 = type metadata accessor for LocationViewModel() - 8;
  __chkstk_darwin(v68);
  unint64_t v67 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PinnedScrollableViews();
  uint64_t v66 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationContentView(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v69 = v7 - 8;
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (int *)sub_10017DF08(&qword_100EA1750);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = sub_10017DF08(&qword_100EA17C8);
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v60 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EA1748);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  char v59 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100EA1730);
  __chkstk_darwin(v57);
  uint64_t v61 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10017DF08(&qword_100EA1728);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  char v56 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for LocationContentView;
  char v55 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001300BC();
  uint64_t v19 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v20 = (v19 + 16) & ~v19;
  uint64_t v70 = v20 + v9;
  uint64_t v71 = v19 | 7;
  unint64_t v21 = (v20 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  uint64_t v62 = type metadata accessor for LocationContentView;
  sub_100130070();
  *(double *)(v22 + v21) = a2;
  uint64_t v23 = static HorizontalAlignment.center.getter();
  LODWORD(v72) = 0;
  sub_100135128((uint64_t)&qword_100E82070);
  uint64_t v24 = v4;
  dispatch thunk of OptionSet.init(rawValue:)();
  uint64_t v25 = (char *)v12 + v10[11];
  *(void *)uint64_t v25 = swift_getKeyPath();
  void v25[8] = 0;
  uint64_t v26 = (char *)v12 + v10[12];
  *(void *)uint64_t v26 = swift_getKeyPath();
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(_OWORD *)(v26 + 40) = 0u;
  *(_OWORD *)(v26 + 56) = 0u;
  v26[72] = 0;
  *uint64_t v12 = v23;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))((char *)v12 + v10[9], v6, v24);
  Swift::String v27 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v12 + v10[10]);
  *Swift::String v27 = sub_1000235B0;
  v27[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v22;
  sub_10024D5E4((uint64_t)&unk_100EA1758);
  uint64_t v28 = v60;
  uint64_t v29 = v57;
  View.navigationDestinationScope()();
  uint64_t v30 = v20;
  sub_100178110((uint64_t)v12, &qword_100EA1750);
  uint64_t v31 = v56;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v63;
  uint64_t v34 = (uint64_t)v59;
  uint64_t v35 = v65;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v59, v28, v65);
  uint64_t v36 = v34 + *(int *)(v15 + 44);
  *(void *)uint64_t v36 = KeyPath;
  *(_OWORD *)(v36 + 8) = 0u;
  *(_OWORD *)(v36 + 24) = 0u;
  *(_OWORD *)(v36 + 40) = 0u;
  *(_OWORD *)(v36 + 56) = 0u;
  *(unsigned char *)(v36 + 72) = 0;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v35);
  uint64_t v37 = static Alignment.center.getter();
  uint64_t v39 = v38;
  uint64_t v40 = (uint64_t)v61;
  uint64_t v41 = (uint64_t)&v61[*(int *)(v29 + 36)];
  uint64_t v42 = v58;
  sub_10012F340(v41);
  uint64_t v43 = (uint64_t *)(v41 + *(int *)(sub_10017DF08(&qword_100EA1770) + 36));
  *uint64_t v43 = v37;
  v43[1] = v39;
  sub_10024D364(v34, v40, &qword_100EA1748);
  swift_retain();
  uint64_t v44 = (uint64_t)v67;
  sub_100133E68();
  swift_release();
  uint64_t v45 = *(void *)(v44 + *(int *)(v68 + 36));
  swift_bridgeObjectRetain();
  sub_1001338DC(v44, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v72 = v45;
  sub_1001300BC();
  swift_allocObject();
  uint64_t v68 = v30;
  sub_100130070();
  uint64_t v46 = sub_10017DF08(&qword_100E9B330);
  unint64_t v47 = sub_100137AE0();
  unint64_t v48 = sub_10012F2D8((uint64_t)&qword_100E9B650);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100178110(v40, &qword_100EA1730);
  if (*(void *)(v42 + *(int *)(v69 + 92)))
  {
    type metadata accessor for TipCoordinator();
    swift_retain();
    ObservableResolver.resolve<A>(_:)();
    swift_release();
    if (v72)
    {
      char v49 = sub_1001357F8();
      swift_release();
      char v76 = v49 & 1;
      sub_1001300BC();
      swift_allocObject();
      sub_100130070();
      uint64_t v72 = v29;
      uint64_t v73 = v46;
      unint64_t v74 = v47;
      unint64_t v75 = v48;
      swift_getOpaqueTypeConformance2();
      uint64_t v50 = v53;
      View.onChange<A>(of:initial:_:)();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v31, v50);
    }
    __break(1u);
  }
  type metadata accessor for ObservableResolver();
  sub_100135128((uint64_t)&qword_100E70FD0);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

unint64_t sub_10012F2D8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10012F340@<X0>(uint64_t a1@<X8>)
{
  sub_10017DF08(&qword_100E9B788);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = &off_100E081A0;
  sub_10017DF08(&qword_100E8F948);
  uint64_t v3 = Dictionary.init(dictionaryLiteral:)();
  sub_10012F3E0(v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10012F3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v2 = sub_10017DF08(&qword_100E63BF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v42 = (uint64_t *)&v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for LocationViewModel();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v37[-v11];
  uint64_t v13 = (int *)type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  __chkstk_darwin(v13);
  uint64_t v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = &v37[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100E628E8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1002102B0(v16, (uint64_t)qword_100EA12F0);
  (*(void (**)(unsigned char *, void, uint64_t))(v17 + 104))(v19, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:), v16);
  LOBYTE(v20) = sub_10012F990(v20, (uint64_t)v19);
  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    uint64_t v39 = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100133E68();
    swift_release();
    uint64_t v21 = v40;
    uint64_t v22 = v41;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v40 + 16))(v6, v12, v41);
    sub_1001338DC((uint64_t)v12, (void (*)(void))type metadata accessor for LocationViewModel);
    swift_retain();
    sub_100133E68();
    swift_release();
    int v38 = v10[*(int *)(v7 + 68)];
    sub_1001338DC((uint64_t)v10, (void (*)(void))type metadata accessor for LocationViewModel);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v24 = (uint64_t)v42;
    *uint64_t v42 = KeyPath;
    sub_10017DF08(&qword_100E62CB8);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for LocationViewCollisionOptions();
    sub_100135128((uint64_t)&qword_100E6D0B8);
    swift_retain();
    uint64_t v25 = EnvironmentObject.init()();
    uint64_t v27 = v26;
    *(void *)uint64_t v15 = swift_getKeyPath();
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 56) = 0u;
    v15[72] = 0;
    *(_OWORD *)(v15 + 8) = 0u;
    *((void *)v15 + 10) = v43;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(&v15[v13[6]], v39, v22);
    v15[v13[7]] = v38;
    uint64_t v28 = (uint64_t *)&v15[v13[8]];
    sub_10017DF08((uint64_t *)&unk_100EAAA90);
    sub_10024D5E4((uint64_t)&qword_100E64A08);
    *uint64_t v28 = ObservedObject.init(wrappedValue:)();
    v28[1] = v29;
    uint64_t v30 = &v15[v13[9]];
    type metadata accessor for LocationViewCollisionOptionsUpdatingViewState(0);
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = 0;
    ObservationRegistrar.init()();
    uint64_t v45 = v31;
    State.init(wrappedValue:)();
    uint64_t v32 = v47;
    *uint64_t v30 = v46;
    v30[1] = v32;
    sub_10024D364(v24, (uint64_t)&v15[v13[10]], &qword_100E63BF0);
    uint64_t v33 = (uint64_t *)&v15[v13[11]];
    *uint64_t v33 = v25;
    v33[1] = v27;
    uint64_t v34 = v44;
    sub_100130070();
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v35 = 1;
    uint64_t v34 = v44;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v34, v35, 1, (uint64_t)v13);
}

uint64_t sub_10012F95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10070B378);
}

uint64_t type metadata accessor for LocationViewCollisionOptionsUpdatingViewState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8F7D8);
}

uint64_t sub_10012F990(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind, &qword_100E80578, (void (*)(uint64_t))&type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind);
}

uint64_t sub_10012F9D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  LODWORD(v81) = a8;
  int v73 = a4;
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v85 = a9;
  uint64_t v79 = a7;
  uint64_t v80 = a14;
  uint64_t v77 = a6;
  uint64_t v78 = a13;
  uint64_t v76 = a12;
  uint64_t v74 = a5;
  uint64_t v75 = a11;
  uint64_t v72 = a10;
  uint64_t v68 = type metadata accessor for LocationContentScrollingHeaderView(0) - 8;
  uint64_t v15 = __chkstk_darwin(v68);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v84 = (char *)&v66 - v18;
  uint64_t v19 = type metadata accessor for LocationViewAppEntityView();
  uint64_t v20 = v19 - 8;
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v83 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v86 = (char *)&v66 - v23;
  uint64_t v24 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v24 - 8);
  uint64_t v25 = type metadata accessor for LocationViewObserverView();
  uint64_t v26 = (int *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v82 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t *)((char *)&v66 - v29);
  swift_retain();
  sub_100133E68();
  swift_release();
  uint64_t v31 = *(void *)(a1 + 136);
  *uint64_t v30 = swift_getKeyPath();
  sub_10017DF08(&qword_100EAA740);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (char *)v30 + v26[7];
  *(void *)uint64_t v32 = sub_100226AB4;
  *((void *)v32 + 1) = 0;
  v32[16] = 0;
  sub_100130070();
  *(_OWORD *)((char *)v30 + v26[9]) = *(_OWORD *)(a1 + 24);
  uint64_t v33 = (uint64_t *)((char *)v30 + v26[10]);
  uint64_t v69 = v30;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  sub_10024D5E4((uint64_t)&qword_100E64A08);
  *uint64_t v33 = ObservedObject.init(wrappedValue:)();
  v33[1] = v34;
  *(uint64_t *)((char *)v30 + v26[11]) = v31;
  swift_retain();
  uint64_t v35 = v86;
  sub_100133E68();
  swift_release();
  uint64_t v36 = (uint64_t *)&v35[*(int *)(v20 + 28)];
  swift_retain();
  *uint64_t v36 = ObservedObject.init(wrappedValue:)();
  v36[1] = v37;
  swift_retain();
  sub_100133E68();
  swift_release();
  int v38 = (int *)v68;
  uint64_t v39 = *(int *)(v68 + 28);
  unint64_t v67 = v17;
  uint64_t v40 = &v17[v39];
  uint64_t v41 = v70;
  uint64_t v42 = v71;
  *(void *)uint64_t v40 = v70;
  *((void *)v40 + 1) = v42;
  char v43 = v73 & 1;
  v40[16] = v73 & 1;
  uint64_t v44 = v75;
  *((void *)v40 + 3) = v74;
  uint64_t v45 = &v17[v38[8]];
  uint64_t v46 = v76;
  uint64_t v47 = v77;
  uint64_t v48 = v78;
  uint64_t v49 = v79;
  *(void *)uint64_t v45 = v77;
  *((void *)v45 + 1) = v49;
  char v50 = v81 & 1;
  v45[16] = v81 & 1;
  *((void *)v45 + 3) = v72;
  uint64_t v51 = (uint64_t *)&v17[v38[9]];
  *uint64_t v51 = v44;
  v51[1] = v46;
  uint64_t v52 = v80;
  v51[2] = v48;
  v51[3] = v52;
  uint64_t v81 = &v17[v38[10]];
  sub_100190CC4(v41, v42, v43);
  swift_bridgeObjectRetain();
  sub_100190CC4(v47, v49, v50);
  swift_bridgeObjectRetain();
  sub_100147E1C(v44, v46, v48, v52);
  Text.Measurements.init()();
  uint64_t v53 = (uint64_t)v67;
  uint64_t v54 = (uint64_t *)&v67[v38[11]];
  *uint64_t v54 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = v53 + v38[12];
  *(void *)uint64_t v55 = swift_getKeyPath();
  *(_OWORD *)(v55 + 8) = 0u;
  *(_OWORD *)(v55 + 24) = 0u;
  *(_OWORD *)(v55 + 40) = 0u;
  *(_OWORD *)(v55 + 56) = 0u;
  *(unsigned char *)(v55 + 72) = 0;
  uint64_t v56 = v53 + v38[13];
  *(void *)uint64_t v56 = swift_getKeyPath();
  *(unsigned char *)(v56 + 8) = 0;
  uint64_t v57 = v53 + v38[14];
  *(void *)uint64_t v57 = swift_getKeyPath();
  *(void *)(v57 + 8) = 0;
  *(void *)(v57 + 16) = 0;
  *(void *)(v57 + 24) = 0;
  *(unsigned char *)(v57 + 32) = 0;
  uint64_t v58 = (uint64_t *)(v53 + v38[15]);
  *uint64_t v58 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = v53 + v38[16];
  *(void *)uint64_t v59 = swift_getKeyPath();
  *(unsigned char *)(v59 + 8) = 0;
  uint64_t v60 = (uint64_t)v84;
  sub_100130070();
  uint64_t v61 = (uint64_t)v69;
  uint64_t v62 = (uint64_t)v82;
  sub_1001300BC();
  uint64_t v63 = (uint64_t)v86;
  uint64_t v64 = (uint64_t)v83;
  sub_1001300BC();
  sub_1001300BC();
  sub_1001300BC();
  sub_10017DF08(&qword_100EA18D8);
  sub_1001300BC();
  sub_1001300BC();
  sub_1001338DC(v60, (void (*)(void))type metadata accessor for LocationContentScrollingHeaderView);
  sub_1001338DC(v63, (void (*)(void))type metadata accessor for LocationViewAppEntityView);
  sub_1001338DC(v61, (void (*)(void))type metadata accessor for LocationViewObserverView);
  sub_1001338DC(v53, (void (*)(void))type metadata accessor for LocationContentScrollingHeaderView);
  sub_1001338DC(v64, (void (*)(void))type metadata accessor for LocationViewAppEntityView);
  return sub_1001338DC(v62, (void (*)(void))type metadata accessor for LocationViewObserverView);
}

uint64_t sub_100130070()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_100126010();
  v4(v3);
  return v0;
}

uint64_t sub_1001300BC()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t type metadata accessor for LocationContentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA1420);
}

uint64_t sub_100130128(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  uint64_t v7 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v8, 1, v5))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v6((uint64_t)v9, (uint64_t)v10, v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v5);
  }
  uint64_t v12 = v7[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(a2 + v12 + 16);
  uint64_t v17 = *(void *)(a2 + v12 + 24);
  uint64_t v18 = *(void *)(a2 + v12 + 32);
  uint64_t v19 = *(void *)(a2 + v12 + 40);
  char v20 = *(unsigned char *)(a2 + v12 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v16, v17, v18, v19, v20);
  *(void *)(v13 + 16) = v16;
  *(void *)(v13 + 24) = v17;
  *(void *)(v13 + 32) = v18;
  *(void *)(v13 + 40) = v19;
  *(unsigned char *)(v13 + 48) = v20;
  uint64_t v21 = *(void *)(v14 + 64);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(void *)(v13 + 64) = v21;
  uint64_t v22 = *(void *)(v14 + 80);
  *(void *)(v13 + 72) = *(void *)(v14 + 72);
  *(void *)(v13 + 80) = v22;
  uint64_t v24 = a1;
  uint64_t v23 = *(void *)(v14 + 96);
  *(void *)(v13 + 88) = *(void *)(v14 + 88);
  *(void *)(v13 + 96) = v23;
  uint64_t v25 = *(void *)(v14 + 112);
  *(void *)(v13 + 104) = *(void *)(v14 + 104);
  *(void *)(v13 + 112) = v25;
  uint64_t v26 = *(void *)(v14 + 128);
  *(void *)(v13 + 120) = *(void *)(v14 + 120);
  *(void *)(v13 + 128) = v26;
  *(unsigned char *)(v13 + 136) = *(unsigned char *)(v14 + 136);
  *(_WORD *)(v13 + 137) = *(_WORD *)(v14 + 137);
  uint64_t v27 = *(void *)(v14 + 152);
  *(void *)(v13 + 144) = *(void *)(v14 + 144);
  *(void *)(v13 + 152) = v27;
  *(unsigned char *)(v13 + 160) = *(unsigned char *)(v14 + 160);
  *(unsigned char *)(v13 + 161) = *(unsigned char *)(v14 + 161);
  *(void *)(v24 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(v24 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v28 = v7;
  uint64_t v29 = v7[9];
  uint64_t v148 = a2;
  uint64_t v149 = v24;
  uint64_t v30 = (unsigned char *)(v24 + v29);
  uint64_t v31 = (unsigned char *)(a2 + v29);
  uint64_t v32 = type metadata accessor for LocationFooterViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = (int *)v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v34 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    uint64_t v35 = v148;
    uint64_t v36 = v149;
    uint64_t v37 = v28;
  }
  else
  {
    *uint64_t v30 = *v31;
    *(_WORD *)(v30 + 1) = *(_WORD *)(v31 + 1);
    uint64_t v38 = *((void *)v31 + 2);
    *((void *)v30 + 1) = *((void *)v31 + 1);
    *((void *)v30 + 2) = v38;
    uint64_t v39 = *(int *)(v32 + 32);
    uint64_t v40 = v30;
    uint64_t v41 = &v30[v39];
    uint64_t v42 = &v31[v39];
    uint64_t v43 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
    {
      uint64_t v44 = sub_10017DF08(&qword_100E749B0);
      memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
    }
    uint64_t v37 = v28;
    uint64_t v145 = v33;
    uint64_t v45 = v33[9];
    uint64_t v46 = (uint64_t)v40;
    uint64_t v47 = &v40[v45];
    uint64_t v48 = &v31[v45];
    *uint64_t v47 = v31[v45];
    *((void *)v47 + 1) = *(void *)&v31[v45 + 8];
    uint64_t v49 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v50 = v49[6];
    uint64_t v51 = &v47[v50];
    uint64_t v52 = &v48[v50];
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v43))
    {
      uint64_t v53 = sub_10017DF08(&qword_100E749B0);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v51, v52, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v43);
    }
    uint64_t v54 = v49[7];
    uint64_t v55 = &v47[v54];
    uint64_t v56 = &v48[v54];
    uint64_t v57 = v56[1];
    *uint64_t v55 = *v56;
    v55[1] = v57;
    *(void *)&v47[v49[8]] = *(void *)&v48[v49[8]];
    v40[v145[10]] = v31[v145[10]];
    uint64_t v58 = v145[11];
    uint64_t v59 = &v40[v58];
    uint64_t v60 = &v31[v58];
    uint64_t v61 = type metadata accessor for LocationOfInterest();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
    {
      uint64_t v62 = sub_10017DF08(&qword_100E63508);
      memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
    }
    v40[v145[12]] = v31[v145[12]];
    v40[v145[13]] = v31[v145[13]];
    uint64_t v63 = v145[14];
    uint64_t v64 = &v40[v63];
    uint64_t v65 = &v31[v63];
    uint64_t v66 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, (uint64_t)v66))
    {
      uint64_t v67 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      *uint64_t v64 = *v65;
      uint64_t v68 = v66[5];
      uint64_t v69 = &v64[v68];
      uint64_t v70 = &v65[v68];
      uint64_t v71 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v61 - 8) + 16))(&v64[v66[6]], &v65[v66[6]], v61);
      v64[v66[7]] = v65[v66[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, (uint64_t)v66);
    }
    uint64_t v35 = v148;
    _s7Weather24LocationCompositionStateOwst_0(v46, 0, 1, (uint64_t)v145);
    uint64_t v36 = v149;
  }
  *(unsigned char *)(v36 + v37[10]) = *(unsigned char *)(v35 + v37[10]);
  *(unsigned char *)(v36 + v37[11]) = *(unsigned char *)(v35 + v37[11]);
  *(unsigned char *)(v36 + v37[12]) = *(unsigned char *)(v35 + v37[12]);
  *(unsigned char *)(v36 + v37[13]) = *(unsigned char *)(v35 + v37[13]);
  *(unsigned char *)(v36 + v37[14]) = *(unsigned char *)(v35 + v37[14]);
  uint64_t v72 = v37[15];
  int v73 = *(void **)(v35 + v72);
  *(void *)(v36 + v72) = v73;
  *(unsigned char *)(v36 + v37[16]) = *(unsigned char *)(v35 + v37[16]);
  *(unsigned char *)(v36 + v37[17]) = *(unsigned char *)(v35 + v37[17]);
  *(unsigned char *)(v36 + v37[18]) = *(unsigned char *)(v35 + v37[18]);
  uint64_t v74 = v37[19];
  uint64_t v75 = v36 + v74;
  uint64_t v76 = v35 + v74;
  uint64_t v77 = type metadata accessor for Date();
  uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16);
  id v79 = v73;
  v78(v75, v76, v77);
  uint64_t v80 = v37[20];
  uint64_t v81 = (void *)(v36 + v80);
  uint64_t v82 = (const void *)(v35 + v80);
  uint64_t v83 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
  {
    uint64_t v84 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  }
  *(unsigned char *)(v36 + v37[21]) = *(unsigned char *)(v35 + v37[21]);
  *(void *)(v36 + v37[22]) = *(void *)(v35 + v37[22]);
  *(unsigned char *)(v36 + v37[23]) = *(unsigned char *)(v35 + v37[23]);
  uint64_t v85 = v37[24];
  uint64_t v86 = v36 + v85;
  uint64_t v87 = v35 + v85;
  uint64_t v88 = type metadata accessor for LocationEntity();
  uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 16);
  swift_bridgeObjectRetain();
  v89(v86, v87, v88);
  uint64_t v90 = a3[5];
  uint64_t v91 = v36 + v90;
  uint64_t v92 = v35 + v90;
  uint64_t v93 = *(void *)(v35 + v90);
  uint64_t v94 = *(void *)(v35 + v90 + 8);
  LOBYTE(v87) = *(unsigned char *)(v35 + v90 + 16);
  sub_100190CC4(v93, v94, v87);
  *(void *)uint64_t v91 = v93;
  *(void *)(v91 + 8) = v94;
  *(unsigned char *)(v91 + 16) = v87;
  *(void *)(v91 + 24) = *(void *)(v92 + 24);
  uint64_t v95 = a3[6];
  uint64_t v96 = v36 + v95;
  uint64_t v97 = v35 + v95;
  uint64_t v98 = *(void *)(v35 + v95);
  uint64_t v99 = *(void *)(v35 + v95 + 8);
  LOBYTE(v87) = *(unsigned char *)(v35 + v95 + 16);
  swift_bridgeObjectRetain();
  sub_100190CC4(v98, v99, v87);
  *(void *)uint64_t v96 = v98;
  *(void *)(v96 + 8) = v99;
  *(unsigned char *)(v96 + 16) = v87;
  *(void *)(v96 + 24) = *(void *)(v97 + 24);
  uint64_t v100 = a3[7];
  uint64_t v101 = v36 + v100;
  uint64_t v102 = v35 + v100;
  uint64_t v103 = *(void *)(v35 + v100 + 24);
  swift_bridgeObjectRetain();
  if (v103)
  {
    uint64_t v104 = *(void *)v102;
    uint64_t v105 = *(void *)(v102 + 8);
    char v106 = *(unsigned char *)(v102 + 16);
    sub_100190CC4(*(void *)v102, v105, v106);
    *(void *)uint64_t v101 = v104;
    *(void *)(v101 + 8) = v105;
    *(unsigned char *)(v101 + 16) = v106;
    *(void *)(v101 + 24) = *(void *)(v102 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v107 = *(_OWORD *)(v102 + 16);
    *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
    *(_OWORD *)(v101 + 16) = v107;
  }
  uint64_t v108 = a3[8];
  uint64_t v109 = v36 + v108;
  uint64_t v110 = v35 + v108;
  uint64_t v111 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
  uint64_t v112 = a3[9];
  uint64_t v113 = v36 + v112;
  uint64_t v114 = v35 + v112;
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
    *(unsigned char *)(v113 + 16) = *(unsigned char *)(v114 + 16);
    *(unsigned char *)(v113 + 17) = *(unsigned char *)(v114 + 17);
    *(unsigned char *)(v113 + 18) = *(unsigned char *)(v114 + 18);
    uint64_t v115 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v116 = v113 + v115;
    uint64_t v117 = v114 + v115;
    uint64_t v118 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
  }
  else
  {
    *(void *)uint64_t v113 = *(void *)v114;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v119 = a3[10];
  uint64_t v120 = v36 + v119;
  uint64_t v121 = v35 + v119;
  uint64_t v122 = *(void *)v121;
  uint64_t v123 = *(void *)(v121 + 8);
  uint64_t v124 = *(void *)(v121 + 16);
  uint64_t v125 = *(void *)(v121 + 24);
  uint64_t v126 = *(void *)(v121 + 32);
  uint64_t v127 = *(void *)(v121 + 40);
  uint64_t v128 = *(void *)(v121 + 48);
  uint64_t v129 = *(void *)(v121 + 56);
  uint64_t v130 = *(void *)(v121 + 64);
  char v146 = *(unsigned char *)(v121 + 72);
  sub_1001910C8(*(void *)v121, v123, v124, v125, v126, v127, v128, v129, v130, v146);
  *(void *)uint64_t v120 = v122;
  *(void *)(v120 + 8) = v123;
  *(void *)(v120 + 16) = v124;
  *(void *)(v120 + 24) = v125;
  *(void *)(v120 + 32) = v126;
  *(void *)(v120 + 40) = v127;
  *(void *)(v120 + 48) = v128;
  *(void *)(v120 + 56) = v129;
  *(void *)(v120 + 64) = v130;
  *(unsigned char *)(v120 + 72) = v146;
  uint64_t v131 = a3[11];
  uint64_t v132 = v149 + v131;
  uint64_t v133 = v148 + v131;
  uint64_t v134 = *(void *)v133;
  LOBYTE(v123) = *(unsigned char *)(v133 + 8);
  sub_100195B7C(*(void *)v133, v123);
  *(void *)uint64_t v132 = v134;
  *(unsigned char *)(v132 + 8) = v123;
  uint64_t v135 = a3[12];
  uint64_t v136 = (void *)(v149 + v135);
  uint64_t v137 = (void *)(v148 + v135);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v138 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
  }
  else
  {
    *uint64_t v136 = *v137;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v139 = a3[13];
  uint64_t v140 = v149 + v139;
  uint64_t v141 = v148 + v139;
  uint64_t v142 = *(void *)v141;
  char v143 = *(unsigned char *)(v141 + 8);
  sub_100195B7C(*(void *)v141, v143);
  *(void *)uint64_t v140 = v142;
  *(unsigned char *)(v140 + 8) = v143;
  return v149;
}

uint64_t sub_100130C74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a2 + 56;
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  uint64_t v10 = v9;
  uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v11(a1 + 56, v8, v10);
  long long v12 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, a2 + 96);
  uint64_t v13 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  LOBYTE(v7) = *(unsigned char *)(a2 + 152);
  swift_retain();
  sub_100195B7C(v13, v7);
  *(void *)(a1 + 144) = v13;
  *(unsigned char *)(a1 + 152) = v7;
  uint64_t v14 = a3[13];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
    *(unsigned char *)(v15 + 17) = *(unsigned char *)(v16 + 17);
    *(unsigned char *)(v15 + 18) = *(unsigned char *)(v16 + 18);
    uint64_t v17 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v18 = v15 + v17;
    uint64_t v19 = v16 + v17;
    uint64_t v20 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *(void *)uint64_t v15 = *(void *)v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3[14];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_100195B7C(*(void *)v23, v25);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v25;
  uint64_t v26 = a3[15];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *uint64_t v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = a3[16];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)v32;
  uint64_t v34 = *(void *)(v32 + 8);
  uint64_t v35 = *(void *)(v32 + 16);
  uint64_t v36 = *(void *)(v32 + 24);
  char v37 = *(unsigned char *)(v32 + 32);
  sub_100190CD4(*(void *)v32, v34, v35, v36, v37);
  *(void *)uint64_t v31 = v33;
  *(void *)(v31 + 8) = v34;
  *(void *)(v31 + 16) = v35;
  *(void *)(v31 + 24) = v36;
  *(unsigned char *)(v31 + 32) = v37;
  uint64_t v38 = a3[17];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)v40;
  LOBYTE(v34) = *(unsigned char *)(v40 + 8);
  sub_100195B7C(*(void *)v40, v34);
  *(void *)uint64_t v39 = v41;
  *(unsigned char *)(v39 + 8) = v34;
  uint64_t v42 = a3[18];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = *(void *)v44;
  LOBYTE(v34) = *(unsigned char *)(v44 + 8);
  sub_100195B7C(*(void *)v44, v34);
  *(void *)uint64_t v43 = v45;
  *(unsigned char *)(v43 + 8) = v34;
  uint64_t v46 = a3[19];
  uint64_t v72 = a3;
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = *(void *)v48;
  uint64_t v50 = *(void *)(v48 + 8);
  uint64_t v51 = *(void *)(v48 + 16);
  uint64_t v52 = *(void *)(v48 + 24);
  uint64_t v53 = *(void *)(v48 + 32);
  uint64_t v54 = *(void *)(v48 + 40);
  char v55 = *(unsigned char *)(v48 + 48);
  sub_100193D54(*(void *)v48, v50, v51, v52, v53, v54, v55);
  *(void *)uint64_t v47 = v49;
  *(void *)(v47 + 8) = v50;
  *(void *)(v47 + 16) = v51;
  *(void *)(v47 + 24) = v52;
  *(void *)(v47 + 32) = v53;
  *(void *)(v47 + 40) = v54;
  *(unsigned char *)(v47 + 48) = v55;
  uint64_t v56 = v72[20];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = (uint64_t *)(a2 + v56);
  uint64_t v59 = *v58;
  uint64_t v60 = v58[1];
  LOBYTE(v51) = *((unsigned char *)v58 + 16);
  sub_100195B88();
  *(void *)uint64_t v57 = v59;
  *(void *)(v57 + 8) = v60;
  *(unsigned char *)(v57 + 16) = v51;
  uint64_t v61 = v72[21];
  uint64_t v62 = v72[22];
  uint64_t v63 = (void *)(a1 + v61);
  uint64_t v64 = (uint64_t *)(a2 + v61);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  *uint64_t v63 = v66;
  v63[1] = v65;
  uint64_t v67 = a1 + v62;
  uint64_t v68 = a2 + v62;
  uint64_t v69 = type metadata accessor for Text.Measurements();
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16);
  swift_retain();
  v70(v67, v68, v69);
  return a1;
}

uint64_t type metadata accessor for LocationContentTopHeaderView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA1D20);
}

uint64_t sub_1001310D4(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 32))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_100131108()
{
  sub_100164BBC();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for LocationStackView();
  sub_1001627C0(v2);
  sub_1001912A4();

  return sub_100131184(v1, v3);
}

uint64_t sub_100131184@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v9 = (char *)&v17 - v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v11, v12, v13, v14);
  sub_100121584((uint64_t)v7, a1, (uint64_t)v9);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v7, a1);
  sub_100121584((uint64_t)v9, a1, a2);
  return ((uint64_t (*)(char *, uint64_t))v15)(v9, a1);
}

uint64_t sub_1001312CC()
{
  sub_100164BBC();
  sub_1001D2014();
  uint64_t v0 = sub_1001912A4();
  return sub_100131344(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100131344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v141 = a5;
  uint64_t v130 = a4;
  uint64_t v132 = a2;
  uint64_t v133 = a3;
  uint64_t v114 = sub_10017DF08(&qword_100EA17E0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100109314();
  sub_100109338(v11);
  uint64_t v115 = sub_10017DF08(&qword_100EA17E8);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  sub_100109338(v13);
  uint64_t v117 = sub_10017DF08(&qword_100EA17F0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109314();
  sub_100109338(v15);
  uint64_t v118 = sub_10017DF08(&qword_100EA17F8);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109338(v17);
  uint64_t v140 = sub_10017DF08(&qword_100EA1800);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v119 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  sub_100128F8C();
  uint64_t v123 = v21;
  uint64_t v22 = sub_100129064();
  uint64_t v128 = type metadata accessor for LocationContentView(v22);
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109338(v24);
  uint64_t v138 = sub_10017DF08(&qword_100EA1808);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v139 = v26;
  uint64_t v134 = sub_10017DF08(&qword_100EA1810);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v135 = v28;
  uint64_t v136 = sub_10017DF08(&qword_100EA1818);
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v137 = v30;
  uint64_t v31 = sub_100129064();
  uint64_t v129 = type metadata accessor for LocationContentRowHeightModifier(v31);
  sub_100162E4C();
  __chkstk_darwin(v32);
  sub_10011C760();
  uint64_t v33 = sub_10017DF08(&qword_100EA1820);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_10012B938();
  uint64_t v35 = sub_10017DF08(&qword_100EA1828);
  sub_100162E4C();
  __chkstk_darwin(v36);
  sub_1001626E0();
  uint64_t v39 = v38 - v37;
  uint64_t v125 = sub_10017DF08(&qword_100EA1830);
  sub_100162E4C();
  __chkstk_darwin(v40);
  sub_1001626E0();
  uint64_t v43 = v42 - v41;
  uint64_t v126 = sub_10017DF08(&qword_100EA1838);
  sub_100162E4C();
  __chkstk_darwin(v44);
  sub_1001626E0();
  uint64_t v47 = v46 - v45;
  uint64_t v127 = sub_10017DF08(&qword_100EA1840);
  sub_100162E4C();
  __chkstk_darwin(v48);
  sub_1001626E0();
  uint64_t v51 = v50 - v49;
  uint64_t v131 = sub_10017DF08(&qword_100EA1848);
  sub_100162E4C();
  __chkstk_darwin(v52);
  sub_10016278C();
  uint64_t v55 = v53 - v54;
  __chkstk_darwin(v56);
  uint64_t v58 = *(void *)(a1 + 16);
  if (v58 == 2)
  {
    if (*(void *)(v142 + *(int *)(v128 + 84)))
    {
      type metadata accessor for TipCoordinator();
      swift_retain();
      ObservableResolver.resolve<A>(_:)();
      swift_release();
      if (v143)
      {
        uint64_t v59 = a1;
        uint64_t v60 = type metadata accessor for LocationComponentContainerViewModel();
        sub_100162F30();
        uint64_t v62 = v61;
        unint64_t v63 = a1 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
        char v65 = sub_10013542C(v63 + *(int *)(v64 + 20));
        swift_release();
        sub_1001300BC();
        if (v65)
        {
          char v66 = 1;
LABEL_10:
          sub_1001338DC(v124, (void (*)(void))type metadata accessor for LocationContentView);
          sub_100189CC8();
          uint64_t v90 = v116;
          uint64_t v92 = v116 + v91;
          *(void *)uint64_t v92 = swift_getKeyPath();
          *(_OWORD *)(v92 + 8) = 0u;
          *(_OWORD *)(v92 + 24) = 0u;
          *(_OWORD *)(v92 + 40) = 0u;
          *(_OWORD *)(v92 + 56) = 0u;
          *(unsigned char *)(v92 + 72) = 0;
          uint64_t v94 = v132;
          uint64_t v93 = v133;
          sub_10092156C(v59, v130, v90, a6);
          if (v66) {
            double v95 = 1.0;
          }
          else {
            double v95 = 0.0;
          }
          uint64_t v96 = v120;
          sub_10006DF38(v90, v120, &qword_100EA17E0);
          sub_100189CC8();
          *(double *)(v120 + v97) = v95;
          sub_100178110(v90, &qword_100EA17E0);
          uint64_t v143 = v94;
          uint64_t v144 = v93;
          swift_bridgeObjectRetain();
          if (v66) {
            uint64_t v98 = 12589;
          }
          else {
            uint64_t v98 = 12333;
          }
          unint64_t v99 = 0xE200000000000000;
          String.append(_:)(*(Swift::String *)&v98);
          uint64_t v100 = v144;
          uint64_t v101 = v121;
          sub_10006DF38(v96, v121, &qword_100EA17E8);
          uint64_t v102 = (void *)(v121 + *(int *)(v117 + 52));
          *uint64_t v102 = v143;
          v102[1] = v100;
          sub_100178110(v96, &qword_100EA17E8);
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v104 = v122;
          sub_10006DF38(v101, v122, &qword_100EA17F0);
          sub_100189CC8();
          uint64_t v106 = v122 + v105;
          *(void *)uint64_t v106 = KeyPath;
          *(unsigned char *)(v106 + 8) = 0;
          sub_100178110(v101, &qword_100EA17F0);
          uint64_t v107 = swift_getKeyPath();
          uint64_t v108 = v119;
          sub_10006DF38(v104, v119, &qword_100EA17F8);
          uint64_t v109 = (uint64_t *)(v119 + *(int *)(v140 + 36));
          *uint64_t v109 = v107;
          uint64_t v110 = sub_10018AB64((uint64_t)v109);
          sub_100178110(v110, &qword_100EA17F8);
          uint64_t v86 = &qword_100EA1800;
          sub_10024D364(v108, v123, &qword_100EA1800);
          sub_10006DF38(v123, v135, &qword_100EA1800);
          swift_storeEnumTagMultiPayload();
          sub_100132004();
          sub_1001320A4();
          _ConditionalContent<>.init(storage:)();
          sub_10012B6F0();
          swift_storeEnumTagMultiPayload();
          sub_100131F88();
          _ConditionalContent<>.init(storage:)();
          sub_100178110(v137, &qword_100EA1818);
          uint64_t v89 = v123;
          return sub_100178110(v89, v86);
        }
        if (*(void *)(v124 + *(int *)(v128 + 84)))
        {
          swift_retain();
          ObservableResolver.resolve<A>(_:)();
          swift_release();
          char v66 = sub_10013542C(v63 + *(void *)(v62 + 72) + *(int *)(v60 + 20));
          swift_release();
          goto LABEL_10;
        }
      }
      else
      {
        __break(1u);
        __break(1u);
      }
    }
    type metadata accessor for ObservableResolver();
    sub_100135128((uint64_t)&qword_100E70FD0);
    EnvironmentObject.error()();
    __break(1u);
  }
  else
  {
    uint64_t v128 = (uint64_t)&v112 - v57;
    if (v58 == 1)
    {
      uint64_t v67 = type metadata accessor for LocationComponentContainerViewModel();
      sub_1001627C0(v67);
      unint64_t v69 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      uint64_t v113 = a1;
      sub_10013317C(a1 + v69, 0, v130, v6, a6);
      uint64_t v70 = swift_getKeyPath();
      sub_10006DF38(v6, v39, &qword_100EA1820);
      uint64_t v71 = (uint64_t *)(v39 + *(int *)(v35 + 36));
      *uint64_t v71 = v70;
      uint64_t v72 = sub_10018AB64((uint64_t)v71);
      sub_100178110(v72, &qword_100EA1820);
      uint64_t v73 = swift_getKeyPath();
      sub_10006DF38(v39, v43, &qword_100EA1828);
      sub_100189CC8();
      uint64_t v75 = v43 + v74;
      *(void *)uint64_t v75 = v73;
      *(unsigned char *)(v75 + 8) = 1;
      sub_100178110(v39, &qword_100EA1828);
      uint64_t v76 = swift_getKeyPath();
      sub_10006DF38(v43, v47, &qword_100EA1830);
      uint64_t v77 = v47 + *(int *)(v126 + 36);
      *(void *)uint64_t v77 = v76;
      *(_OWORD *)(v77 + 8) = 0u;
      *(_OWORD *)(v77 + 24) = 0u;
      *(_OWORD *)(v77 + 40) = 0u;
      *(_OWORD *)(v77 + 56) = 0u;
      *(unsigned char *)(v77 + 72) = 0;
      sub_100178110(v43, &qword_100EA1830);
      uint64_t v78 = v132;
      uint64_t v79 = v133;
      *(void *)uint64_t v7 = v113;
      *(void *)(v7 + 8) = v78;
      *(void *)(v7 + 16) = v79;
      *(void *)(v7 + 24) = swift_getKeyPath();
      *(_OWORD *)(v7 + 32) = 0u;
      *(_OWORD *)(v7 + 48) = 0u;
      *(_OWORD *)(v7 + 64) = 0u;
      *(_OWORD *)(v7 + 80) = 0u;
      *(unsigned char *)(v7 + 96) = 0;
      uint64_t v80 = (uint64_t *)(v7 + *(int *)(v129 + 24));
      *uint64_t v80 = swift_getKeyPath();
      sub_10017DF08(&qword_100E63BC8);
      sub_10018C5D8();
      sub_10006DF38(v47, v51, &qword_100EA1838);
      sub_100130070();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100178110(v47, &qword_100EA1838);
      uint64_t v81 = swift_getKeyPath();
      uint64_t v82 = static Alignment.bottom.getter();
      uint64_t v84 = v83;
      sub_10006DF38(v51, v55, &qword_100EA1840);
      uint64_t v85 = (uint64_t *)(v55 + *(int *)(v131 + 36));
      *uint64_t v85 = v81;
      v85[1] = v82;
      v85[2] = v84;
      sub_100178110(v51, &qword_100EA1840);
      uint64_t v86 = &qword_100EA1848;
      uint64_t v87 = v128;
      sub_10024D364(v55, v128, &qword_100EA1848);
      sub_10006DF38(v87, v135, &qword_100EA1848);
      swift_storeEnumTagMultiPayload();
      sub_100132004();
      sub_1001320A4();
      uint64_t v88 = v137;
      _ConditionalContent<>.init(storage:)();
      sub_10012B6F0();
      swift_storeEnumTagMultiPayload();
      sub_100131F88();
      _ConditionalContent<>.init(storage:)();
      sub_100178110(v88, &qword_100EA1818);
      uint64_t v89 = v87;
      return sub_100178110(v89, v86);
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LocationContentRowHeightModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA1A50);
}

unint64_t sub_100131F88()
{
  unint64_t result = qword_100EA18B8;
  if (!qword_100EA18B8)
  {
    sub_10018C6DC(&qword_100EA1818);
    sub_100132004();
    sub_1001320A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA18B8);
  }
  return result;
}

unint64_t sub_100132004()
{
  unint64_t result = qword_100EA1850;
  if (!qword_100EA1850)
  {
    sub_10018C6DC(&qword_100EA1848);
    sub_1002298E4();
    sub_10024D5E4((uint64_t)&unk_100E9B750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1850);
  }
  return result;
}

unint64_t sub_1001320A4()
{
  unint64_t result = qword_100EA1898;
  if (!qword_100EA1898)
  {
    sub_10018C6DC(&qword_100EA1800);
    sub_100006214();
    sub_100217564();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1898);
  }
  return result;
}

uint64_t sub_100132120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  LODWORD(v161) = a8;
  uint64_t v135 = a7;
  int v132 = a4;
  uint64_t v129 = a1;
  uint64_t v165 = a9;
  uint64_t v136 = a14;
  uint64_t v134 = a13;
  uint64_t v133 = a12;
  uint64_t v18 = sub_10017DF08(&qword_100E65FA8);
  __chkstk_darwin(v18 - 8);
  uint64_t v123 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for Location.Identifier();
  uint64_t v151 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v150 = (char *)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for WeatherActivity();
  __chkstk_darwin(v21 - 8);
  uint64_t v159 = (uint64_t (*)())((char *)&v123 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v145 = type metadata accessor for LocationViewModel();
  uint64_t v23 = __chkstk_darwin(v145);
  uint64_t v147 = (char *)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v167 = (char *)&v123 - v25;
  uint64_t v146 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v146);
  uint64_t v144 = (char **)((char *)&v123 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v140 = type metadata accessor for PrimaryDividerStyle();
  uint64_t v141 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v137 = (char *)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_10017DF08(&qword_100EA1570);
  __chkstk_darwin(v138);
  uint64_t v130 = (uint64_t)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_10017DF08(&qword_100E79670);
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v131 = (char *)&v123 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100E79678);
  __chkstk_darwin(v30 - 8);
  uint64_t v139 = (uint64_t)&v123 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_10017DF08(&qword_100EA1578);
  __chkstk_darwin(v149);
  uint64_t v153 = (char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_10017DF08(&qword_100EA1580);
  __chkstk_darwin(v152);
  uint64_t v155 = (uint64_t)&v123 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_10017DF08(&qword_100EA1588);
  __chkstk_darwin(v154);
  uint64_t v158 = (char *)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_10017DF08(&qword_100EA1590);
  __chkstk_darwin(v156);
  uint64_t v162 = (uint64_t)&v123 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_10017DF08(&qword_100EA1598);
  uint64_t v36 = __chkstk_darwin(v157);
  uint64_t v164 = (uint64_t)&v123 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v160 = (char *)&v123 - v39;
  __chkstk_darwin(v38);
  uint64_t v163 = (uint64_t)&v123 - v40;
  uint64_t v41 = type metadata accessor for LocationContentTopHeaderView(0);
  uint64_t v42 = (int *)(v41 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v123 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v166 = (char *)&v123 - v46;
  swift_retain();
  sub_100133E68();
  swift_release();
  uint64_t v47 = &v45[v42[7]];
  uint64_t v48 = a2;
  uint64_t v127 = a2;
  *(void *)uint64_t v47 = a2;
  *((void *)v47 + 1) = a3;
  uint64_t v128 = a3;
  int v49 = v132 & 1;
  v47[16] = v49;
  int v132 = v49;
  uint64_t v126 = a5;
  *((void *)v47 + 3) = a5;
  uint64_t v50 = &v45[v42[8]];
  uint64_t v51 = a6;
  uint64_t v125 = a6;
  *(void *)uint64_t v50 = a6;
  uint64_t v52 = v135;
  *((void *)v50 + 1) = v135;
  int v124 = v161 & 1;
  v50[16] = v161 & 1;
  *((void *)v50 + 3) = a10;
  uint64_t v53 = (uint64_t *)&v45[v42[9]];
  uint64_t v54 = v133;
  *uint64_t v53 = a11;
  v53[1] = v54;
  uint64_t v55 = v134;
  uint64_t v56 = v136;
  uint64_t v53[2] = v134;
  v53[3] = v56;
  uint64_t v161 = (uint64_t)&v45[v42[10]];
  sub_100190CC4(v48, a3, v49);
  swift_bridgeObjectRetain();
  uint64_t v57 = v51;
  LODWORD(v51) = v124;
  sub_100190CC4(v57, v52, v124);
  swift_bridgeObjectRetain();
  sub_100147E1C(a11, v54, v55, v56);
  Text.Measurements.init()();
  uint64_t v58 = (uint64_t *)&v45[v42[11]];
  *uint64_t v58 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = &v45[v42[12]];
  *(void *)uint64_t v59 = swift_getKeyPath();
  *(_OWORD *)(v59 + 8) = 0u;
  *(_OWORD *)(v59 + 24) = 0u;
  *(_OWORD *)(v59 + 40) = 0u;
  *(_OWORD *)(v59 + 56) = 0u;
  v59[72] = 0;
  uint64_t v60 = &v45[v42[13]];
  *(void *)uint64_t v60 = swift_getKeyPath();
  v60[8] = 0;
  uint64_t v61 = (uint64_t *)&v45[v42[14]];
  *uint64_t v61 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = &v45[v42[15]];
  *(void *)uint64_t v62 = swift_getKeyPath();
  v62[8] = 0;
  uint64_t v161 = (uint64_t)v45;
  sub_100130070();
  uint64_t v122 = v54;
  uint64_t v63 = v130;
  uint64_t v64 = v52;
  uint64_t v65 = v129;
  sub_1000CE90C(v127, v128, v132, v126, v125, v64, v51, a10, v130, a11, v122, v55, v56);
  char v66 = v137;
  static DividerStyle<>.primary.getter();
  sub_100137784();
  sub_100135128((uint64_t)&qword_100E66F40);
  uint64_t v67 = v131;
  uint64_t v68 = v140;
  View.dividerStyle<A>(_:)();
  unint64_t v69 = (int *)v145;
  (*(void (**)(char *, uint64_t))(v141 + 8))(v66, v68);
  sub_100178110(v63, &qword_100EA1570);
  swift_retain();
  uint64_t v70 = (uint64_t)v167;
  sub_100133E68();
  swift_release();
  uint64_t v71 = (uint64_t *)(v70 + v69[6]);
  uint64_t v73 = *v71;
  uint64_t v72 = v71[1];
  swift_bridgeObjectRetain();
  uint64_t v74 = v148;
  sub_1001338DC(v70, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v75 = (uint64_t)v144;
  void *v144 = v73;
  *(void *)(v75 + 8) = v72;
  type metadata accessor for AutomationViewInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v76 = v139;
  sub_1001376D0(v75, v139);
  sub_1001338DC(v75, (void (*)(void))type metadata accessor for AutomationInfo);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v67, v143);
  swift_retain();
  uint64_t v77 = (uint64_t)v147;
  sub_100133E68();
  swift_release();
  uint64_t v78 = v150;
  uint64_t v79 = v151;
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v151 + 16);
  v80(v150, v77, v74);
  sub_1001338DC(v77, (void (*)(void))type metadata accessor for LocationViewModel);
  Location.Identifier.kind.getter();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v74);
  uint64_t v81 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v83 = v82;
  if (v81 == Location.Identifier.Kind.rawValue.getter() && v83 == v84)
  {
    uint64_t v88 = 2;
    swift_bridgeObjectRelease_n();
    uint64_t v87 = (uint64_t)v123;
  }
  else
  {
    char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v87 = (uint64_t)v123;
    if ((v86 & 1) == 0)
    {
      swift_retain();
      uint64_t v90 = (uint64_t)v167;
      sub_100133E68();
      swift_release();
      uint64_t v89 = v159;
      v80((char *)v159, v90, v74);
      sub_1001338DC(v90, (void (*)(void))type metadata accessor for LocationViewModel);
      uint64_t v88 = 0;
      goto LABEL_10;
    }
    uint64_t v88 = 2;
  }
  uint64_t v89 = v159;
LABEL_10:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, v88, 2, v74);
  uint64_t v91 = (uint64_t)v153;
  sub_1001300BC();
  sub_10006DF38(v76, v91, &qword_100E79678);
  sub_1001338DC((uint64_t)v89, (void (*)(void))type metadata accessor for WeatherActivity);
  sub_100178110(v76, &qword_100E79678);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v93 = *(void *)(v65 + 144);
  char v94 = *(unsigned char *)(v65 + 152);
  sub_100195B7C(v93, v94);
  sub_100149AE8();
  char v96 = v95;
  sub_10018F6D8(v93, v94);
  uint64_t v97 = v155;
  sub_10006DF38(v91, v155, &qword_100EA1578);
  uint64_t v98 = v97 + *(int *)(v152 + 36);
  *(void *)uint64_t v98 = KeyPath;
  *(unsigned char *)(v98 + 8) = v96 & 1;
  sub_100178110(v91, &qword_100EA1578);
  uint64_t v99 = swift_getKeyPath();
  swift_retain();
  uint64_t v100 = (uint64_t)v167;
  sub_100133E68();
  swift_release();
  sub_10006DF38(v100 + v69[20], v87, &qword_100E65FA8);
  uint64_t v159 = type metadata accessor for LocationViewModel;
  sub_1001338DC(v100, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v101 = (uint64_t)v158;
  uint64_t v102 = (uint64_t *)&v158[*(int *)(v154 + 36)];
  uint64_t v103 = sub_10017DF08(&qword_100EA15F8);
  sub_10006DF38(v87, (uint64_t)v102 + *(int *)(v103 + 28), &qword_100E65FA8);
  *uint64_t v102 = v99;
  sub_10006DF38(v97, v101, &qword_100EA1580);
  sub_100178110(v87, &qword_100E65FA8);
  sub_100178110(v97, &qword_100EA1580);
  uint64_t v104 = swift_getKeyPath();
  swift_retain();
  sub_100133E68();
  swift_release();
  LOBYTE(v102) = *(unsigned char *)(v100 + v69[21]);
  sub_1001338DC(v100, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v105 = v162;
  sub_10006DF38(v101, v162, &qword_100EA1588);
  uint64_t v106 = v105 + *(int *)(v156 + 36);
  *(void *)uint64_t v106 = v104;
  *(unsigned char *)(v106 + 8) = (_BYTE)v102;
  sub_100178110(v101, &qword_100EA1588);
  swift_retain();
  sub_100133E68();
  swift_release();
  uint64_t v107 = static Alignment.center.getter();
  uint64_t v109 = v108;
  uint64_t v110 = (uint64_t)v160;
  uint64_t v111 = &v160[*(int *)(v157 + 36)];
  sub_1001300BC();
  uint64_t v112 = (uint64_t *)&v111[*(int *)(type metadata accessor for ForegroundEffectConfigurationView() + 20)];
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  sub_10024D5E4((uint64_t)&qword_100E64A08);
  uint64_t *v112 = ObservedObject.init(wrappedValue:)();
  v112[1] = v113;
  uint64_t v114 = (uint64_t *)&v111[*(int *)(sub_10017DF08(&qword_100EA1600) + 36)];
  *uint64_t v114 = v107;
  v114[1] = v109;
  sub_10006DF38(v105, v110, &qword_100EA1590);
  sub_1001338DC(v100, (void (*)(void))v159);
  sub_100178110(v105, &qword_100EA1590);
  uint64_t v115 = v163;
  sub_10024D364(v110, v163, &qword_100EA1598);
  uint64_t v116 = (uint64_t)v166;
  uint64_t v117 = v161;
  sub_1001300BC();
  uint64_t v118 = v164;
  sub_10006DF38(v115, v164, &qword_100EA1598);
  uint64_t v119 = v165;
  sub_1001300BC();
  uint64_t v120 = sub_10017DF08(&qword_100EA1608);
  sub_10006DF38(v118, v119 + *(int *)(v120 + 48), &qword_100EA1598);
  sub_100178110(v115, &qword_100EA1598);
  sub_1001338DC(v116, (void (*)(void))type metadata accessor for LocationContentTopHeaderView);
  sub_100178110(v118, &qword_100EA1598);
  return sub_1001338DC(v117, (void (*)(void))type metadata accessor for LocationContentTopHeaderView);
}

uint64_t sub_10013317C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v6 = v5;
  uint64_t v68 = a3;
  uint64_t v69 = a2;
  uint64_t v74 = a1;
  uint64_t v9 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v9);
  uint64_t v75 = &v55[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for LocationComponentContainerView(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v67 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v66 = sub_10017DF08(&qword_100EA18C0);
  __chkstk_darwin(v66);
  uint64_t v14 = &v55[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_10017DF08(&qword_100EA1820);
  __chkstk_darwin(v15);
  uint64_t v17 = &v55[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v64 = type metadata accessor for Location.Identifier();
  uint64_t v18 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v20 = &v55[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v65 = type metadata accessor for LocationViewModel();
  uint64_t v21 = __chkstk_darwin(v65);
  uint64_t v63 = &v55[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v62 = &v55[-v24];
  __chkstk_darwin(v23);
  uint64_t v26 = &v55[-v25];
  if (!*(void *)((char *)v5 + *(int *)(type metadata accessor for LocationContentView(0) + 84))) {
    goto LABEL_11;
  }
  uint64_t v70 = v17;
  uint64_t v71 = v15;
  uint64_t v72 = v14;
  uint64_t v73 = a4;
  type metadata accessor for TipCoordinator();
  swift_retain();
  ObservableResolver.resolve<A>(_:)();
  swift_release();
  if (!v76)
  {
    __break(1u);
LABEL_11:
    type metadata accessor for ObservableResolver();
    sub_100135128((uint64_t)&qword_100E70FD0);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  int v61 = sub_10013542C(v74 + *(int *)(v9 + 20));
  swift_release();
  uint64_t v76 = 0;
  unint64_t v77 = 0xE000000000000000;
  swift_retain();
  sub_100133E68();
  swift_release();
  uint64_t v58 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 16);
  uint64_t v27 = v64;
  v58(v20, v26, v64);
  sub_1001338DC((uint64_t)v26, (void (*)(void))type metadata accessor for LocationViewModel);
  sub_100135128((uint64_t)&qword_100E63880);
  uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v76 = v28;
  unint64_t v77 = v30;
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v27);
  v31._uint64_t countAndFlagsBits = 45;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  v32._uint64_t countAndFlagsBits = sub_1001F26C0();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  uint64_t v59 = v76;
  unint64_t v60 = v77;
  sub_1001300BC();
  uint64_t v57 = v6[3];
  uint64_t v74 = v6[4];
  uint64_t v33 = v6[6];
  uint64_t v34 = v6[17];
  sub_1001E9994((uint64_t)(v6 + 7), (uint64_t)&v76);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100133E68();
  swift_release();
  uint64_t v35 = (uint64_t)v20;
  uint64_t v36 = v65;
  int v56 = v26[*(int *)(v65 + 68)];
  sub_1001338DC((uint64_t)v26, (void (*)(void))type metadata accessor for LocationViewModel);
  swift_retain();
  uint64_t v37 = (uint64_t)v62;
  sub_100133E68();
  swift_release();
  v58((unsigned char *)v35, (unsigned char *)v37, v27);
  sub_1001338DC(v37, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v38 = v6[2];
  swift_retain();
  swift_retain();
  uint64_t v39 = (uint64_t)v63;
  sub_100133E68();
  swift_release();
  char v40 = *(unsigned char *)(v39 + *(int *)(v36 + 92));
  sub_1001338DC(v39, (void (*)(void))type metadata accessor for LocationViewModel);
  char v54 = v40;
  uint64_t v41 = v67;
  sub_100134B58(v57, v74, v33, v34, (uint64_t)&v76, v56, v35, (uint64_t)v67, a5, v38, v69, v68, v54);
  char v42 = v61;
  if (v61) {
    double v43 = 1.0;
  }
  else {
    double v43 = 0.0;
  }
  uint64_t v44 = (uint64_t)v72;
  sub_1001300BC();
  *(double *)(v44 + *(int *)(v66 + 36)) = v43;
  sub_1001338DC((uint64_t)v41, (void (*)(void))type metadata accessor for LocationComponentContainerView);
  uint64_t v76 = v59;
  unint64_t v77 = v60;
  if (v42) {
    uint64_t v45 = 12589;
  }
  else {
    uint64_t v45 = 12333;
  }
  unint64_t v46 = 0xE200000000000000;
  String.append(_:)(*(Swift::String *)&v45);
  uint64_t v47 = v76;
  unint64_t v48 = v77;
  uint64_t v49 = v73;
  uint64_t v51 = (uint64_t)v70;
  uint64_t v50 = v71;
  sub_10006DF38(v44, (uint64_t)v70, &qword_100EA18C0);
  uint64_t v52 = (uint64_t *)(v51 + *(int *)(v50 + 52));
  *uint64_t v52 = v47;
  v52[1] = v48;
  sub_100178110(v44, &qword_100EA18C0);
  return sub_10024D364(v51, v49, &qword_100EA1820);
}

uint64_t sub_100133888(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001338DC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100133930(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_10018F6E4();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v5 + v8[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v6)) {
    v7(v9, v6);
  }
  uint64_t v10 = v5 + v8[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(unsigned char *)(v10 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = v5 + v8[9];
  uint64_t v12 = (int *)type metadata accessor for LocationFooterViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, (uint64_t)v12))
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = v11 + v12[8];
    uint64_t v14 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    uint64_t v15 = v11 + v12[9];
    swift_bridgeObjectRelease();
    uint64_t v16 = v15 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v16, v14);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v11 + v12[11];
    uint64_t v18 = type metadata accessor for LocationOfInterest();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    }
    uint64_t v19 = v11 + v12[14];
    uint64_t v20 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
    {
      uint64_t v21 = v19 + *(int *)(v20 + 20);
      uint64_t v22 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v19 + *(int *)(v20 + 24), v18);
    }
  }

  uint64_t v23 = v5 + v8[19];
  uint64_t v24 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = v5 + v8[20];
  uint64_t v26 = type metadata accessor for ForegroundEffect();
  if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v5 + v8[24];
  uint64_t v28 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  swift_unknownObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for LocationViewAppEntityView()
{
  uint64_t result = qword_100EA9020;
  if (!qword_100EA9020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LocationContentScrollingHeaderView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA1C68);
}

void sub_100133E68()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v2 = type metadata accessor for LocationInput();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64A10);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162758();
  __chkstk_darwin(v5);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v6 = sub_10019D144();
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E64A30);
      sub_10018868C(v7);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for LocationInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v8();
    uint64_t v9 = sub_1001A3054();
    v1(v9);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64A30);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v10 = sub_1001858D8();
    sub_100164908(v10, v11, &qword_100E64A10);
    swift_endAccess();
  }
  sub_100162694();
}

uint64_t sub_100134024(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v4)) {
    v5(v6, v4);
  }
  uint64_t v7 = a1 + a2[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(unsigned char *)(v7 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = (int *)type metadata accessor for LocationFooterViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, (uint64_t)v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + v9[8];
    uint64_t v11 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
    uint64_t v12 = v8 + v9[9];
    swift_bridgeObjectRelease();
    uint64_t v13 = v12 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v13, v11);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v14 = v8 + v9[11];
    uint64_t v15 = type metadata accessor for LocationOfInterest();
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    }
    uint64_t v16 = v8 + v9[14];
    uint64_t v17 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
    {
      uint64_t v18 = v16 + *(int *)(v17 + 20);
      uint64_t v19 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v16 + *(int *)(v17 + 24), v15);
    }
  }

  uint64_t v20 = a1 + a2[19];
  uint64_t v21 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = a1 + a2[20];
  uint64_t v23 = type metadata accessor for ForegroundEffect();
  if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = a1 + a2[24];
  uint64_t v25 = type metadata accessor for LocationEntity();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);

  return v26(v24, v25);
}

uint64_t sub_100134438(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v7 = a1 + v6[5];
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v4)) {
    v5(v7, v4);
  }
  uint64_t v8 = a1 + v6[6];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(unsigned char *)(v8 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = a1 + v6[9];
  uint64_t v10 = (int *)type metadata accessor for LocationFooterViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, (uint64_t)v10))
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v9 + v10[8];
    uint64_t v12 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = v9 + v10[9];
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v14, v12);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v15 = v9 + v10[11];
    uint64_t v16 = type metadata accessor for LocationOfInterest();
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    }
    uint64_t v17 = v9 + v10[14];
    uint64_t v18 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
    {
      uint64_t v19 = v17 + *(int *)(v18 + 20);
      uint64_t v20 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v17 + *(int *)(v18 + 24), v16);
    }
  }

  uint64_t v21 = a1 + v6[19];
  uint64_t v22 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + v6[20];
  uint64_t v24 = type metadata accessor for ForegroundEffect();
  if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = a1 + v6[24];
  uint64_t v26 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  sub_100191924(*(void *)(a1 + a2[5]), *(void *)(a1 + a2[5] + 8), *(unsigned char *)(a1 + a2[5] + 16));
  swift_bridgeObjectRelease();
  sub_100191924(*(void *)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8), *(unsigned char *)(a1 + a2[6] + 16));
  swift_bridgeObjectRelease();
  uint64_t v27 = a1 + a2[7];
  if (*(void *)(v27 + 24))
  {
    sub_100191924(*(void *)v27, *(void *)(v27 + 8), *(unsigned char *)(v27 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = a1 + a2[8];
  uint64_t v29 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = a1 + a2[9];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = v30 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v32 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  }
  else
  {
    swift_release();
  }
  uint64_t v33 = a1 + a2[10];
  sub_10018CCC4(*(void *)v33, *(void *)(v33 + 8), *(void *)(v33 + 16), *(void *)(v33 + 24), *(void *)(v33 + 32), *(void *)(v33 + 40), *(void *)(v33 + 48), *(void *)(v33 + 56), *(void *)(v33 + 64), *(unsigned char *)(v33 + 72));
  sub_10018F6D8(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v34 = a1 + a2[12];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
  }
  else
  {
    swift_release();
  }
  uint64_t v36 = a1 + a2[13];
  uint64_t v37 = *(void *)v36;
  char v38 = *(unsigned char *)(v36 + 8);

  return sub_10018F6D8(v37, v38);
}

uint64_t sub_100134A40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

uint64_t type metadata accessor for TipCoordinator()
{
  uint64_t result = qword_100E9CE90;
  if (!qword_100E9CE90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for WeatherActivity()
{
  uint64_t result = qword_100E74D10;
  if (!qword_100E74D10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100134B58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, double a9@<D0>, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t v19 = (int *)type metadata accessor for LocationComponentContainerView(0);
  uint64_t v20 = a8 + v19[13];
  sub_10017DF08(&qword_100E827E8);
  State.init(wrappedValue:)();
  *(_OWORD *)uint64_t v20 = v53;
  *(unsigned char *)(v20 + 16) = v54;
  *(void *)(v20 + 24) = v55;
  uint64_t v21 = a8 + v19[14];
  *(void *)uint64_t v21 = sub_100030604;
  *(void *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 16) = 0;
  uint64_t v22 = a8 + v19[15];
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = 0;
  *(void *)uint64_t v22 = sub_100213BD4;
  *(void *)(v22 + 8) = v23;
  *(unsigned char *)(v22 + 16) = 0;
  uint64_t v24 = a8 + v19[16];
  *(void *)uint64_t v24 = sub_1000316F4;
  *(void *)(v24 + 8) = 0;
  *(unsigned char *)(v24 + 16) = 0;
  uint64_t v25 = a8 + v19[17];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v25 = v53;
  *(void *)(v25 + 8) = *((void *)&v53 + 1);
  uint64_t v26 = (uint64_t *)(a8 + v19[18]);
  *uint64_t v26 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  sub_1001092B4();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001D40E8(KeyPath);
  uint64_t v28 = swift_getKeyPath();
  sub_1001D40E8(v28);
  uint64_t v29 = (uint64_t *)(a8 + v19[21]);
  *uint64_t v29 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  sub_1001092B4();
  uint64_t v30 = swift_getKeyPath();
  sub_1001D40E8(v30);
  uint64_t v31 = swift_getKeyPath();
  sub_1001D40E8(v31);
  uint64_t v32 = swift_getKeyPath();
  sub_1001D40E8(v32);
  uint64_t v33 = swift_getKeyPath();
  sub_1001D40E8(v33);
  uint64_t v34 = swift_getKeyPath();
  sub_1001D40E8(v34);
  uint64_t v35 = swift_getKeyPath();
  sub_1001D40E8(v35);
  uint64_t v36 = (uint64_t *)(a8 + v19[28]);
  *uint64_t v36 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  sub_1001092B4();
  uint64_t v37 = (uint64_t *)(a8 + v19[29]);
  type metadata accessor for ObservableResolver();
  sub_10013509C((uint64_t)&qword_100E70FD0);
  *uint64_t v37 = EnvironmentObject.init()();
  v37[1] = v38;
  sub_1001EC0BC();
  uint64_t v39 = (void *)(a8 + v19[5]);
  *uint64_t v39 = a1;
  v39[1] = a2;
  sub_10020D948(a5, a8 + v19[6]);
  *(unsigned char *)(a8 + v19[7]) = a6;
  uint64_t v40 = a8 + v19[8];
  uint64_t v41 = type metadata accessor for Location.Identifier();
  sub_100162F30();
  uint64_t v43 = v42;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v40, a7, v41);
  *(void *)(a8 + v19[9]) = a10;
  *(double *)(a8 + v19[10]) = a9;
  *(unsigned char *)(a8 + v19[11]) = a13;
  uint64_t v44 = (uint64_t *)(a8 + v19[12]);
  *uint64_t v44 = a11;
  v44[1] = a12;
  uint64_t v45 = *(void *)(a3 + 56);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v46 = 0;
  if ((DeviceIsVerySlow() & 1) == 0) {
    uint64_t v46 = static Animation.linear(duration:)();
  }
  if (qword_100E62288 != -1) {
    swift_once();
  }
  char v47 = byte_100F51390 | byte_100F51391 | byte_100F51392;
  type metadata accessor for WireframeContentManager();
  swift_allocObject();
  swift_retain();
  uint64_t v48 = sub_10013521C(v45, a4, v46, a11, a12, (v47 & 1) == 0);
  type metadata accessor for WireframeContentManagerReference();
  *(void *)(swift_allocObject() + 16) = v48;
  State.init(wrappedValue:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(a7, v41);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a5);
  uint64_t result = sub_1001F75CC();
  *(_OWORD *)(a8 + v19[30]) = v53;
  return result;
}

unint64_t sub_10013509C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1001350E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100135128(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10013516C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t type metadata accessor for WireframeContentManager()
{
  uint64_t result = qword_100E909F8;
  if (!qword_100E909F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for WireframeContentManagerReference()
{
  return self;
}

uint64_t sub_10013521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  *(void *)(v7 + 24) = 0x3FF0000000000000;
  swift_weakInit();
  ObservationRegistrar.init()();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a3;
  *(void *)(v7 + 48) = a4;
  *(void *)(v7 + 56) = a5;
  *(unsigned char *)(v7 + 17) = a6;
  if (a6) {
    char v13 = 2;
  }
  else {
    char v13 = 0;
  }
  *(unsigned char *)(v7 + 16) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1001352FC();
  if ((a6 & 1) == 0) {
    sub_100BC53C0();
  }
  swift_release();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1001352FC()
{
  return swift_release();
}

uint64_t sub_100135370()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_10013542C(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  uint64_t v8 = type metadata accessor for MapComponentViewModel();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_10011BFD8();
  type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001356AC(a1, (uint64_t)v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 0:
      sub_1001EC4DC((uint64_t)v12, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      char v15 = sub_10088DEB4();
      return v15 & 1;
    case 18:
      char v14 = sub_10088E0F4();
      break;
    case 5:
      sub_100891044((uint64_t)v12, v1);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v1, v4);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v2, v4) != enum case for WeatherMapOverlayKind.wind(_:))
      {
        char v15 = sub_10088DF44();
        sub_1001EC4DC(v1, (void (*)(void))type metadata accessor for MapComponentViewModel);
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
        return v15 & 1;
      }
      if (sub_10088DFD4()) {
        char v15 = 1;
      }
      else {
        char v15 = sub_10088DF44();
      }
      uint64_t v16 = type metadata accessor for MapComponentViewModel;
      uint64_t v17 = v1;
      goto LABEL_10;
    case 16:
      char v14 = sub_10088E064();
      break;
    case 1:
      char v14 = sub_100135888();
      break;
    default:
      sub_1001EC4DC((uint64_t)v12, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      char v15 = 0;
      return v15 & 1;
  }
  char v15 = v14;
  uint64_t v16 = type metadata accessor for LocationComponentViewModel;
  uint64_t v17 = (uint64_t)v12;
LABEL_10:
  sub_1001EC4DC(v17, (void (*)(void))v16);
  return v15 & 1;
}

uint64_t sub_1001356AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100135710()
{
  swift_getKeyPath();
  sub_1001357B0(&qword_100E83B40, (void (*)(uint64_t))type metadata accessor for WireframeContentManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1001357B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001357F8()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_100135888()
{
  swift_getKeyPath();
  sub_1001A0074();
  sub_100135A24(&qword_100E9CFC8, (void (*)(uint64_t))type metadata accessor for TipCoordinator);
  sub_1001A25B4();
  swift_release();
  return *(unsigned __int8 *)(v0 + 35);
}

uint64_t sub_100135918(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  a3(0);
  sub_100135A24(a4, a5);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v11 == v9 && v12 == v10) {
    sub_10017D70C();
  }
  else {
    LOBYTE(a4) = sub_1001881C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4 & 1;
}

uint64_t sub_1001359E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Settings.TappableModulesTipStore();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100135A24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100135A6C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

uint64_t sub_100135B2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  sub_100109314();
  uint64_t v43 = v3;
  uint64_t v44 = sub_10017DF08(&qword_100E6DC08);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E8F910);
  uint64_t v12 = sub_10017C81C(v11, (uint64_t)&v57);
  uint64_t v46 = v13;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v50 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E8F918);
  uint64_t v16 = sub_10017C81C(v15, (uint64_t)&v58);
  uint64_t v47 = v17;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v49 = v18;
  uint64_t v19 = static Color.clear.getter();
  sub_10017E848();
  uint64_t v20 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v21 = ((v20 + 16) & ~v20) + v9;
  uint64_t v22 = (v20 + 16) & ~v20;
  uint64_t v23 = swift_allocObject();
  sub_100136240((uint64_t)v10, v23 + v22);
  sub_10017E848();
  uint64_t v42 = v21;
  uint64_t v24 = swift_allocObject();
  uint64_t v41 = v22;
  sub_100136240((uint64_t)v10, v24 + v22);
  __dst[0] = v19;
  __dst[1] = sub_100226754;
  __dst[2] = v23;
  memset(&__dst[3], 0, 32);
  __dst[7] = sub_10070B42C;
  __dst[8] = v24;
  swift_retain();
  uint64_t v25 = v43;
  sub_1001362A4();
  swift_release();
  sub_1001373E4(v25, (uint64_t)v6);
  sub_10017E848();
  uint64_t v26 = swift_allocObject();
  sub_100136240((uint64_t)v10, v26 + v22);
  uint64_t v43 = sub_10017DF08(&qword_100E8F920);
  unint64_t v27 = sub_10013791C();
  unint64_t v28 = sub_10013744C();
  uint64_t v29 = (void *)v44;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178110((uint64_t)v6, &qword_100E6DC08);
  swift_release();
  sub_1001361AC(__dst[1]);
  sub_1001361AC(__dst[3]);
  sub_1001361AC(__dst[5]);
  sub_1001361AC(__dst[7]);
  uint64_t v40 = v1;
  memcpy(__dst, v1, 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  double v55 = sub_1000E0B50();
  sub_10017E848();
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v41;
  sub_100136240((uint64_t)v10, v30 + v41);
  uint64_t v51 = v43;
  uint64_t v52 = v29;
  unint64_t v53 = v27;
  unint64_t v54 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v33 = sub_1001364A8();
  uint64_t v34 = v45;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100162F0C();
  v35();
  double v55 = v40[10];
  sub_1001361BC((uint64_t)v40, (uint64_t)v10);
  uint64_t v36 = swift_allocObject();
  sub_100136240((uint64_t)v10, v36 + v31);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E8F930);
  uint64_t v51 = v34;
  uint64_t v52 = &type metadata for CGFloat;
  unint64_t v53 = OpaqueTypeConformance2;
  unint64_t v54 = v33;
  swift_getOpaqueTypeConformance2();
  sub_1001364F4(&qword_100E8F938, &qword_100E8F930, (void (*)(void))sub_10021611C);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100162F0C();
  return v37();
}

uint64_t sub_1001361AC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1001361BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LocationViewCollisionOptionsUpdatingView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8F8C0);
}

uint64_t sub_100136240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001362A4()
{
  sub_100162EA0();
  uint64_t v2 = sub_10008B8A8();
  uint64_t active = type metadata accessor for ActiveLocationInput(v2);
  uint64_t v4 = sub_100109308(active);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E649E0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v7 = sub_10019D144();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = sub_10017DF08(&qword_100E64A00);
      sub_10018868C(v8);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for ActiveLocationInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v9();
    uint64_t v10 = sub_1001A3054();
    v1(v10);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64A00);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v11 = sub_1001858D8();
    sub_100164908(v11, v12, &qword_100E649E0);
    swift_endAccess();
  }
  sub_100162694();
}

uint64_t sub_100136460()
{
  uint64_t v1 = sub_100152360();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

unint64_t sub_1001364A8()
{
  unint64_t result = qword_100E65EF0;
  if (!qword_100E65EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65EF0);
  }
  return result;
}

uint64_t sub_1001364F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100136560()
{
  return sub_10013656C(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_10013656C(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_100138028(a1, a2, *a3);
}

uint64_t sub_10013657C(uint64_t a1)
{
  return sub_100136584(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100136584(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E649E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, active) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E649E8);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._uint64_t countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C97020;
  v10._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v10);
  v11._uint64_t countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C97040;
  v12._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10013673C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100353990);
}

uint64_t sub_100136750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100353948);
}

uint64_t sub_100136764(uint64_t a1)
{
  return sub_10013676C(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_10013676C(uint64_t a1, void (*a2)(void))
{
  a2();
  type metadata accessor for ActiveLocationModel(0);
  uint64_t v2 = sub_10017A7C4();

  return _s7Weather24LocationCompositionStateOwst_0(v2, v3, v4, v5);
}

void sub_1001367B4(uint64_t a1)
{
  sub_10013B870(a1, (void *)(v1 + 16));
}

uint64_t sub_1001367BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v96 = a1;
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  sub_100109314();
  sub_100109338(v4);
  uint64_t v93 = sub_10017DF08(&qword_100E6DC08);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  sub_100109338(v6);
  uint64_t v107 = type metadata accessor for NSNotificationCenter.Publisher();
  sub_100179C0C();
  uint64_t v111 = v7;
  __chkstk_darwin(v8);
  Swift::String v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for LocationViewObserverView() - 8;
  sub_1001810D8();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v15);
  uint64_t v16 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10017DF08(&qword_100E6DCD0) - 8;
  __chkstk_darwin(v106);
  uint64_t v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10017DF08(&qword_100E6DCD8);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v100 = v20;
  uint64_t v92 = sub_10017DF08(&qword_100E6DCE0);
  sub_100179C0C();
  uint64_t v91 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109338(v23);
  uint64_t v90 = sub_10017DF08(&qword_100E6DCE8) - 8;
  __chkstk_darwin(v90);
  sub_100109314();
  uint64_t v102 = v24;
  uint64_t v95 = sub_10017DF08(&qword_100E6DCF0);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109338(v26);
  uint64_t v87 = static Color.clear.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v86 = v113;
  int v85 = v114;
  uint64_t v84 = v115;
  int v83 = v116;
  uint64_t v82 = v117;
  uint64_t v81 = v118;
  sub_1001372AC();
  uint64_t v27 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v28 = ((v27 + 16) & ~v27) + v14;
  uint64_t v29 = (v27 + 16) & ~v27;
  uint64_t v30 = v27 | 7;
  uint64_t v79 = swift_allocObject();
  sub_1001372F4();
  uint64_t v105 = v2;
  sub_1001372AC();
  uint64_t v110 = v28;
  uint64_t v78 = swift_allocObject();
  uint64_t v98 = v29;
  sub_1001372F4();
  uint64_t v31 = self;
  id v99 = v31;
  id v32 = [v31 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v97 = type metadata accessor for LocationViewObserverView;
  sub_1001372AC();
  uint64_t v104 = v30;
  uint64_t v33 = swift_allocObject();
  sub_1001372F4();
  uint64_t v34 = v106;
  uint64_t v35 = v107;
  uint64_t v36 = v111;
  uint64_t v108 = *(void *)(v111 + 16);
  uint64_t v109 = v111 + 16;
  sub_100162808();
  v37();
  uint64_t v38 = v86;
  *(void *)uint64_t v18 = v87;
  *((void *)v18 + 1) = v38;
  v18[16] = v85;
  *((void *)v18 + 3) = v84;
  v18[32] = v83;
  uint64_t v39 = v81;
  *((void *)v18 + 5) = v82;
  *((void *)v18 + 6) = v39;
  uint64_t v40 = v79;
  *((void *)v18 + 7) = sub_100226B34;
  *((void *)v18 + 8) = v40;
  *(_OWORD *)(v18 + 72) = 0u;
  *(_OWORD *)(v18 + 88) = 0u;
  uint64_t v41 = v78;
  *((void *)v18 + 13) = sub_100340184;
  *((void *)v18 + 14) = v41;
  uint64_t v42 = (uint64_t (**)(uint64_t))&v18[*(int *)(v34 + 64)];
  *uint64_t v42 = sub_1003401A0;
  v42[1] = (uint64_t (*)(uint64_t))v33;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v111 = v36 + 8;
  uint64_t v106 = (uint64_t)v43;
  v43(v10, v35);
  id v44 = [v31 defaultCenter];
  uint64_t v80 = v10;
  NSNotificationCenter.publisher(for:object:)();

  sub_1001372AC();
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = v16;
  sub_1001372F4();
  uint64_t v47 = v100;
  sub_10006DF38((uint64_t)v18, v100, &qword_100E6DCD0);
  uint64_t v48 = v101;
  sub_100162808();
  v49();
  uint64_t v50 = (uint64_t (**)(uint64_t))(v47 + *(int *)(v48 + 56));
  *uint64_t v50 = sub_1003401BC;
  v50[1] = (uint64_t (*)(uint64_t))v45;
  sub_100162F0C();
  v51();
  sub_100178110((uint64_t)v18, &qword_100E6DCD0);
  swift_retain();
  uint64_t v52 = (uint64_t)v89;
  sub_1001362A4();
  swift_release();
  uint64_t v53 = v88;
  sub_1001373E4(v52, v88);
  sub_1001372AC();
  swift_allocObject();
  sub_1001372F4();
  uint64_t v89 = &protocol conformance descriptor for SubscriptionView<A, B>;
  sub_1001246C8(&qword_100E6DCF8, &qword_100E6DCD8);
  sub_10013744C();
  uint64_t v54 = v100;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178110(v53, &qword_100E6DC08);
  sub_100178110(v54, &qword_100E6DCD8);
  id v55 = [v99 defaultCenter];
  NSString v56 = sub_1001868C0();
  NSNotificationCenter.publisher(for:object:)();

  unint64_t v77 = v46;
  sub_1001372AC();
  uint64_t v57 = swift_allocObject();
  sub_1001372F4();
  uint64_t v58 = v102;
  sub_100162808();
  v59();
  uint64_t v60 = v90;
  sub_100162808();
  v61();
  uint64_t v62 = (uint64_t (**)())(v58 + *(int *)(v60 + 64));
  *uint64_t v62 = sub_100340284;
  v62[1] = (uint64_t (*)())v57;
  sub_100185234();
  v63();
  sub_100162F0C();
  v64();
  id v65 = [v99 defaultCenter];
  NSString v66 = sub_1001868C0();
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v67 = v105;
  sub_1001372AC();
  uint64_t v68 = swift_allocObject();
  sub_1001372F4();
  uint64_t v69 = v102;
  uint64_t v70 = v94;
  sub_10006DF38(v102, v94, &qword_100E6DCE8);
  uint64_t v71 = v95;
  sub_100162808();
  v72();
  uint64_t v73 = (uint64_t (**)())(v70 + *(int *)(v71 + 56));
  *uint64_t v73 = sub_1003402E8;
  v73[1] = (uint64_t (*)())v68;
  sub_100185234();
  v74();
  sub_100178110(v69, &qword_100E6DCE8);
  uint64_t v75 = v67 + *(int *)(v103 + 32);
  char v112 = *(unsigned char *)(v75 + *(int *)(type metadata accessor for LocationViewModel() + 56));
  sub_1001372AC();
  swift_allocObject();
  sub_1001372F4();
  sub_1001246C8(&qword_100E6DD08, &qword_100E6DCF0);
  sub_1001374F0();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return sub_100178110(v70, &qword_100E6DCF0);
}

uint64_t sub_1001372AC()
{
  uint64_t v1 = sub_1001A45D0();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_1001372F4()
{
  uint64_t v2 = sub_1001A45D0();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_100137348(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for LocationViewObserverView()
{
  uint64_t result = qword_100E6DC80;
  if (!qword_100E6DC80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001373E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6DC08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10013744C()
{
  unint64_t result = qword_100E6DD00;
  if (!qword_100E6DD00)
  {
    sub_10018C6DC(&qword_100E6DC08);
    sub_100128B54((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DD00);
  }
  return result;
}

unint64_t sub_1001374F0()
{
  unint64_t result = qword_100E6DD10;
  if (!qword_100E6DD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DD10);
  }
  return result;
}

uint64_t sub_10013753C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v10 = type metadata accessor for AutomationInfo(0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100129860();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = type metadata accessor for AutomationInfoViewModifier();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_10016279C();
  sub_1001298B8(a1, (uint64_t)v14, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_1001297C4((uint64_t)v14, v5, (void (*)(void))type metadata accessor for AutomationInfo);
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0xE000000000000000;
  *(void *)(v4 + 16) = swift_getKeyPath();
  *(unsigned char *)(v4 + 24) = 0;
  uint64_t v17 = type metadata accessor for AutomationInfoProperty();
  sub_1001297C4(v5, v4 + *(int *)(v17 + 24), (void (*)(void))type metadata accessor for AutomationInfo);
  sub_10017DF08(a2);
  sub_100162E4C();
  uint64_t v18 = sub_10011BFA4();
  v19(v18);
  uint64_t v20 = sub_10017DF08(a3);
  return sub_1001297C4(v4, a4 + *(int *)(v20 + 36), (void (*)(void))type metadata accessor for AutomationInfoViewModifier);
}

uint64_t sub_1001376D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10013753C(a1, &qword_100E79670, &qword_100E79678, a2);
}

unint64_t sub_1001376E4()
{
  unint64_t result = qword_100EA16E0;
  if (!qword_100EA16E0)
  {
    sub_10018C6DC(&qword_100EA16B0);
    sub_100228600();
    sub_10024D5E4((uint64_t)&unk_100EA16F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA16E0);
  }
  return result;
}

unint64_t sub_100137784()
{
  unint64_t result = qword_100EA15A0;
  if (!qword_100EA15A0)
  {
    sub_10018C6DC(&qword_100EA1570);
    sub_10024D5E4((uint64_t)&unk_100EA15A8);
    sub_1000CFCF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA15A0);
  }
  return result;
}

unint64_t sub_100137824()
{
  unint64_t result = qword_100EA1560;
  if (!qword_100EA1560)
  {
    sub_10018C6DC(&qword_100EA14F0);
    sub_100137B80();
    sub_1001378A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1560);
  }
  return result;
}

unint64_t sub_1001378A0()
{
  unint64_t result = qword_100EA1530;
  if (!qword_100EA1530)
  {
    sub_10018C6DC(&qword_100EA14D8);
    sub_100137A64();
    sub_100217384();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1530);
  }
  return result;
}

unint64_t sub_10013791C()
{
  unint64_t result = qword_100E8F928;
  if (!qword_100E8F928)
  {
    sub_10018C6DC(&qword_100E8F920);
    sub_10022F258();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F928);
  }
  return result;
}

uint64_t sub_100137998(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100195B7C(a14, a15 & 1);
    return swift_retain();
  }
  return result;
}

uint64_t sub_100137A00(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_10018F6D8(a14, a15 & 1);
    return swift_release();
  }
  return result;
}

unint64_t sub_100137A64()
{
  unint64_t result = qword_100EA1520;
  if (!qword_100EA1520)
  {
    sub_10018C6DC(&qword_100EA14D0);
    sub_100137E1C();
    sub_100218A18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1520);
  }
  return result;
}

unint64_t sub_100137AE0()
{
  unint64_t result = qword_100EA1738;
  if (!qword_100EA1738)
  {
    sub_10018C6DC(&qword_100EA1730);
    sub_10001FA60();
    sub_10024D5E4((uint64_t)&unk_100EA1768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1738);
  }
  return result;
}

unint64_t sub_100137B80()
{
  unint64_t result = qword_100EA1540;
  if (!qword_100EA1540)
  {
    sub_10018C6DC(&qword_100EA14E8);
    sub_100230644();
    sub_100135128((uint64_t)&unk_100EA1558);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1540);
  }
  return result;
}

unint64_t sub_100137C2C()
{
  unint64_t result = qword_100EA1500;
  if (!qword_100EA1500)
  {
    sub_10018C6DC(&qword_100EA14B0);
    sub_10024D5E4((uint64_t)&unk_100EA1508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1500);
  }
  return result;
}

unint64_t sub_100137CCC()
{
  unint64_t result = qword_100EA1720;
  if (!qword_100EA1720)
  {
    sub_10018C6DC(&qword_100EA1678);
    sub_10018C6DC(&qword_100EA1728);
    sub_10018C6DC(&qword_100EA1730);
    sub_10018C6DC(&qword_100E9B330);
    sub_100137AE0();
    sub_10012F2D8((uint64_t)&qword_100E9B650);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1720);
  }
  return result;
}

unint64_t sub_100137E1C()
{
  unint64_t result = qword_100EA1510;
  if (!qword_100EA1510)
  {
    sub_10018C6DC(&qword_100EA14C8);
    sub_10018C6DC(&qword_100EA14B8);
    sub_10018C6DC(&qword_100EA14B0);
    sub_100137C2C();
    swift_getOpaqueTypeConformance2();
    sub_1001364A8();
    swift_getOpaqueTypeConformance2();
    sub_1002175B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1510);
  }
  return result;
}

uint64_t sub_100137F24(void *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_100137F50(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100137F7C(uint64_t a1)
{
  return sub_100137F84(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_100137F84(uint64_t a1, void (*a2)(void))
{
  a2();
  type metadata accessor for ActiveLocationInput(0);
  uint64_t v2 = sub_10017A7C4();

  return _s7Weather24LocationCompositionStateOwst_0(v2, v3, v4, v5);
}

uint64_t sub_100137FCC@<X0>(uint64_t a1@<X8>)
{
  return sub_100137FD4(*(void (**)(void))(v1 + 16), a1);
}

uint64_t sub_100137FD4@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  a1();
  uint64_t v3 = type metadata accessor for MainViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v3);
}

uint64_t sub_100138028(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E649F8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t active = type metadata accessor for ActiveLocationInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, active) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E649F8);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._uint64_t countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C97020;
  v12._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._object = (void *)0x8000000100C97040;
  v14._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100138204(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v58 = a6;
  uint64_t v59 = a5;
  uint64_t v62 = a4;
  uint64_t v63 = a2;
  uint64_t v64 = a1;
  uint64_t v60 = sub_10017DF08(&qword_100E649E0);
  __chkstk_darwin(v60);
  int v61 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E649E8);
  __chkstk_darwin(v8 - 8);
  uint64_t v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  uint64_t v10 = __chkstk_darwin(active);
  uint64_t v54 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v55 = (char *)&v53 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E649F0);
  __chkstk_darwin(v13);
  Swift::String v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E649F8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v53 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v53 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v53 - v26;
  uint64_t v28 = type metadata accessor for ActiveLocationInput(0);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (void (*)(uint64_t))((char *)&v53 - v32);
  v64(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E649F8);
  }
  sub_1001522B4();
  uint64_t v64 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v62;
  sub_100138B74((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E649F8);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E649F8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E649F8);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      sub_10013B8BC();
      char v46 = v45;
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for ActiveLocationInput);
      sub_1001781AC((uint64_t)v22, &qword_100E649F8);
      sub_1001781AC((uint64_t)v25, &qword_100E649F8);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for ActiveLocationInput);
      sub_1001781AC((uint64_t)v15, &qword_100E649F8);
      uint64_t v37 = (uint64_t)v64;
      if (v46) {
        return sub_1001524C8(v37, (void (*)(void))type metadata accessor for ActiveLocationInput);
      }
LABEL_9:
      uint64_t v38 = (uint64_t)v57;
      v59(v37);
      if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, active) == 1)
      {
        sub_1001781AC(v38, &qword_100E649E8);
      }
      else
      {
        uint64_t v39 = (uint64_t)v55;
        sub_1001522B4();
        uint64_t v40 = (uint64_t)v54;
        sub_1001362A4();
        sub_1003530F8();
        char v42 = v41;
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for ActiveLocationModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v47 = type metadata accessor for Logger();
          sub_1002102B0(v47, (uint64_t)qword_100F51F80);
          uint64_t v48 = Logger.logObject.getter();
          os_log_type_t v49 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v48, v49))
          {
            uint64_t v50 = swift_slowAlloc();
            v66[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v50 = 136446466;
            uint64_t v65 = sub_10016414C(0xD000000000000013, 0x8000000100C97020, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v50 + 12) = 2082;
            uint64_t v65 = sub_10016414C(0xD000000000000013, 0x8000000100C97040, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v48, v49, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v50,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64A00);
          uint64_t v51 = (uint64_t)v61;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v52 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v51, v52, &qword_100E649E0);
          swift_endAccess();
          sub_10017DF08((uint64_t *)&unk_100EAAA90);
          sub_1001246C8(&qword_100E64A08, (uint64_t *)&unk_100EAAA90);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v39, (void (*)(void))type metadata accessor for ActiveLocationModel);
          return sub_1001524C8(v37, (void (*)(void))type metadata accessor for ActiveLocationInput);
        }
        sub_1001524C8(v39, (void (*)(void))type metadata accessor for ActiveLocationModel);
      }
      sub_10017DF08(&qword_100E64A00);
      uint64_t v43 = (uint64_t)v61;
      sub_100136460();
      sub_1001362A4();
      sub_1001524C8(v37, (void (*)(void))type metadata accessor for ActiveLocationInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E649E0);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E649F8);
    sub_1001781AC((uint64_t)v25, &qword_100E649F8);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for ActiveLocationInput);
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E649F0);
    uint64_t v37 = (uint64_t)v64;
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E649F8);
  sub_1001781AC((uint64_t)v25, &qword_100E649F8);
  if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E649F8);
  uint64_t v37 = (uint64_t)v64;
  return sub_1001524C8(v37, (void (*)(void))type metadata accessor for ActiveLocationInput);
}

uint64_t sub_100138B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100354218);
}

uint64_t sub_100138B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003542A8);
}

uint64_t sub_100138B74@<X0>(uint64_t a1@<X8>)
{
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v4 = type metadata accessor for ActiveLocationInput(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E649E0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E649E0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64A00) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for ActiveLocationModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E649E0);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64A00);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E649E0);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_100138EA4(uint64_t a1)
{
  return sub_100138ED4(a1, (void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_100138F28);
}

uint64_t sub_100138ED4(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  return a3(a1);
}

uint64_t sub_100138F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v184 = a2;
  uint64_t v4 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v174 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v175 = v7;
  sub_100129064();
  uint64_t v8 = type metadata accessor for TimeState();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v173 = v10;
  uint64_t v11 = sub_100129064();
  uint64_t v171 = type metadata accessor for ModalViewState(v11);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v13);
  sub_100128F8C();
  uint64_t v170 = v14;
  sub_100129064();
  uint64_t v15 = type metadata accessor for LocationsState();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v161 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v160 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v159 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E63850);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v177 = v25;
  uint64_t v26 = sub_100129064();
  uint64_t v176 = type metadata accessor for WeatherData(v26);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v158 = v28;
  uint64_t v29 = sub_10017DF08(&qword_100E63770);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100128F8C();
  uint64_t v182 = v32;
  sub_100129064();
  uint64_t v33 = type metadata accessor for ContentStatusBanner();
  uint64_t v190 = *(void *)(v33 - 8);
  __chkstk_darwin(v33 - 8);
  sub_100162EF8();
  uint64_t v192 = v34;
  __chkstk_darwin(v35);
  sub_100128F8C();
  uint64_t v194 = v36;
  uint64_t v37 = sub_10017DF08(&qword_100E63858);
  uint64_t v38 = sub_100109308(v37);
  uint64_t v39 = __chkstk_darwin(v38);
  char v41 = (uint64_t *)((char *)&v152 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v39);
  sub_100128F8C();
  uint64_t v195 = v42;
  sub_100129064();
  uint64_t v180 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v169 = v43;
  __chkstk_darwin(v44);
  sub_100162EF8();
  uint64_t v181 = v45;
  __chkstk_darwin(v46);
  sub_100128F8C();
  uint64_t v186 = v47;
  sub_100129064();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v49 = sub_100109308(active);
  __chkstk_darwin(v49);
  sub_100162EF8();
  uint64_t v179 = v50;
  __chkstk_darwin(v51);
  sub_100119550();
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v152 - v53;
  uint64_t v183 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v178 = v55;
  __chkstk_darwin(v56);
  sub_100109314();
  uint64_t v185 = v57;
  uint64_t v58 = sub_100129064();
  uint64_t v59 = type metadata accessor for ViewState.SecondaryViewState(v58);
  sub_100162E4C();
  __chkstk_darwin(v60);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v61);
  sub_100179C90();
  __chkstk_darwin(v62);
  uint64_t v64 = (uint64_t *)((char *)&v152 - v63);
  type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v65);
  sub_100162EF8();
  sub_100179C90();
  uint64_t v67 = __chkstk_darwin(v66);
  uint64_t v69 = (char *)&v152 - v68;
  uint64_t v187 = a1;
  uint64_t v70 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  uint64_t v71 = (int *)v67;
  uint64_t v164 = v70;
  sub_1001136D8(v70, (uint64_t)&v152 - v68, (void (*)(void))type metadata accessor for ViewState);
  sub_1001136D8((uint64_t)&v69[v71[5]], (uint64_t)v64, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  uint64_t v168 = v59;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1001D1194((uint64_t)v64, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_3:
    sub_1001D1194((uint64_t)v69, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v72 = 1;
    uint64_t v73 = v184;
LABEL_54:
    uint64_t v149 = type metadata accessor for LocationViewerInput();
    return _s7Weather24LocationCompositionStateOwst_0(v73, v72, 1, v149);
  }
  uint64_t v157 = v4;
  uint64_t v74 = *v64;
  if (*(void *)&v69[v71[9] + 8] == 1)
  {
    uint64_t v75 = *v64;
    id v76 = [self currentDevice];
    [v76 userInterfaceIdiom];

    uint64_t v74 = v75;
    if ((v69[v71[7]] & 1) == 0)
    {
      swift_release();
      goto LABEL_3;
    }
  }
  sub_1001D1194((uint64_t)v69, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v155 = v74;
  uint64_t v154 = v74 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState;
  sub_1001136D8(v74 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v54, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  sub_1001136D8((uint64_t)v54, v2, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v77 = v183;
  sub_10012B520(v2, 1, v183);
  uint64_t v162 = v19;
  uint64_t v156 = v71;
  uint64_t v78 = v185;
  if (v128) {
    static CurrentLocation.placeholderIdentifier.getter();
  }
  else {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v178 + 32))(v185, v2, v77);
  }
  uint64_t v79 = v190;
  uint64_t v80 = v194;
  sub_1001D1194((uint64_t)v54, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v81 = v187;
  sub_10013A058(v187, v78, v186);
  uint64_t v82 = *(void *)(v81 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
  uint64_t v83 = *(void *)(v82 + 64);
  uint64_t v188 = v82 + 64;
  uint64_t v84 = 1 << *(unsigned char *)(v82 + 32);
  uint64_t v85 = -1;
  if (v84 < 64) {
    uint64_t v85 = ~(-1 << v84);
  }
  unint64_t v86 = v85 & v83;
  int64_t v189 = (unint64_t)(v84 + 63) >> 6;
  int64_t v153 = v189 - 1;
  uint64_t v191 = v82;
  swift_bridgeObjectRetain();
  int64_t v193 = 0;
  uint64_t v87 = &_swiftEmptyDictionarySingleton;
  uint64_t v88 = &qword_100E63860;
  uint64_t v89 = v195;
  if (!v86) {
    goto LABEL_14;
  }
LABEL_12:
  unint64_t v90 = __clz(__rbit64(v86));
  v86 &= v86 - 1;
  unint64_t v91 = v90 | (v193 << 6);
LABEL_13:
  uint64_t v92 = *(void *)(v191 + 56);
  uint64_t v93 = (uint64_t *)(*(void *)(v191 + 48) + 16 * v91);
  uint64_t v94 = *v93;
  unint64_t v95 = v93[1];
  *char v41 = *v93;
  v41[1] = v95;
  uint64_t v96 = v92 + *(void *)(v79 + 72) * v91;
  uint64_t v97 = sub_10017DF08(v88);
  sub_1001136D8(v96, (uint64_t)v41 + *(int *)(v97 + 48), (void (*)(void))type metadata accessor for ContentStatusBanner);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v97);
  sub_1000D54E0(v94, v95);
  uint64_t v80 = v194;
  uint64_t v89 = v195;
  while (1)
  {
    sub_1001278D0((uint64_t)v41, (uint64_t)v89, &qword_100E63858);
    uint64_t v102 = sub_10017DF08(v88);
    sub_10012B520((uint64_t)v89, 1, v102);
    if (v128)
    {
      swift_release();
      uint64_t v121 = *(void *)(v187 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
      swift_bridgeObjectRetain();
      uint64_t v122 = Location.Identifier.id.getter();
      uint64_t v123 = v182;
      sub_1001BBE9C(v122, v124, v121);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v125 = v163;
      sub_100141778(v123, v163);
      uint64_t v126 = type metadata accessor for LocationWeatherDataState(0);
      sub_10012B520(v125, 1, v126);
      if (v128)
      {
        sub_100178110(v125, &qword_100E63770);
        uint64_t v127 = v177;
        _s7Weather24LocationCompositionStateOwst_0(v177, 1, 1, v176);
      }
      else
      {
        uint64_t v127 = v177;
        sub_1001177B0(v177);
        sub_1001D1194(v125, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_10012B520(v127, 1, v176);
        if (!v128)
        {
          uint64_t v129 = v158;
          sub_1001E0F88(v127, v158, (void (*)(void))type metadata accessor for WeatherData);
          WeatherDataModel.currentWeather.getter();
          LODWORD(v195) = CurrentWeather.requiresAdditionalContrast.getter();
          sub_100162F0C();
          v130();
          sub_1001D1194(v129, (void (*)(void))type metadata accessor for WeatherData);
LABEL_53:
          uint64_t v131 = v155;
          LODWORD(v194) = *(unsigned __int8 *)(v155
                                             + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_listToLocationViewTransitionState);
          sub_1001136D8(v154, v179, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
          uint64_t v132 = v169;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v169 + 16))(v181, v186, v180);
          uint64_t v133 = v187;
          LODWORD(v193) = *(unsigned __int8 *)(v131
                                             + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState);
          sub_1001136D8(v187 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v162, (void (*)(void))type metadata accessor for LocationsState);
          uint64_t v134 = v133 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
          swift_beginAccess();
          LODWORD(v192) = *(unsigned __int8 *)(v134 + 1);
          uint64_t v135 = v170;
          sub_1001136D8(v133 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v170, (void (*)(void))type metadata accessor for ModalViewState);
          uint64_t v136 = type metadata accessor for ModalViewState.MapViewModal(0);
          uint64_t v137 = v172;
          _s7Weather24LocationCompositionStateOwst_0(v172, 1, 1, v136);
          swift_storeEnumTagMultiPayload();
          sub_10011990C();
          LODWORD(v191) = v138;
          sub_1001D1194(v137, (void (*)(void))type metadata accessor for ModalViewState);
          sub_1001D1194(v135, (void (*)(void))type metadata accessor for ModalViewState);
          LODWORD(v190) = *(unsigned __int8 *)(v133 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
          uint64_t v139 = *(void *)(v133 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
          sub_1001136D8(v133 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v173, (void (*)(void))type metadata accessor for TimeState);
          uint64_t v140 = v175;
          sub_1001190D4();
          v141();
          LODWORD(v189) = *(unsigned __int8 *)(v134 + *(int *)(type metadata accessor for EnvironmentState() + 36));
          uint64_t v142 = v164;
          uint64_t v143 = v165;
          sub_1001136D8(v164, v165, (void (*)(void))type metadata accessor for ViewState);
          uint64_t v144 = v156;
          uint64_t v145 = *(void *)(v143 + v156[9]);
          swift_bridgeObjectRetain();
          sub_1001D1194(v143, (void (*)(void))type metadata accessor for ViewState);
          uint64_t v146 = v167;
          sub_1001136D8(v142 + v144[5], v167, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
          uint64_t v147 = v166;
          sub_1001136D8(v146, v166, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
          LOBYTE(v135) = swift_getEnumCaseMultiPayload() != 1;
          sub_1001D1194(v147, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
          swift_release();
          sub_1001D1194(v146, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v186, v180);
          sub_100162F0C();
          v148();
          uint64_t v151 = v140;
          uint64_t v73 = v184;
          sub_1001E0DA0(v179, v193, v162, v192, v191 & 1, v190, v139, v184, v151, v189, v145, v194 & 1, v135, (uint64_t)v87, v195 & 1, v182);
          uint64_t v72 = 0;
          goto LABEL_54;
        }
      }
      sub_100178110(v127, &qword_100E63850);
      LODWORD(v195) = 0;
      goto LABEL_53;
    }
    uint64_t v103 = v88;
    uint64_t v104 = *v89;
    unint64_t v105 = v89[1];
    sub_1001E0F88((uint64_t)v89 + *(int *)(v102 + 48), v80, (void (*)(void))type metadata accessor for ContentStatusBanner);
    if (v105 < 2)
    {
      sub_1001EB5EC(v104, v105);
      goto LABEL_44;
    }
    sub_1001136D8(v80, v192, (void (*)(void))type metadata accessor for ContentStatusBanner);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v196 = v87;
    unint64_t v107 = sub_1001D23B8();
    uint64_t v109 = v87[2];
    BOOL v110 = (v108 & 1) == 0;
    Swift::Int v111 = v109 + v110;
    if (__OFADD__(v109, v110)) {
      break;
    }
    unint64_t v112 = v107;
    char v113 = v108;
    sub_10017DF08(&qword_100E63868);
    Swift::Bool v114 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v111);
    uint64_t v79 = v190;
    if (v114)
    {
      unint64_t v115 = sub_1001D23B8();
      if ((v113 & 1) != (v116 & 1)) {
        goto LABEL_59;
      }
      unint64_t v112 = v115;
    }
    uint64_t v87 = v196;
    if (v113)
    {
      sub_100244488(v192, v196[7] + *(void *)(v79 + 72) * v112);
      uint64_t v89 = v195;
    }
    else
    {
      v196[(v112 >> 6) + 8] |= 1 << v112;
      uint64_t v117 = (uint64_t *)(v87[6] + 16 * v112);
      *uint64_t v117 = v104;
      v117[1] = v105;
      sub_1001E0F88(v192, v87[7] + *(void *)(v79 + 72) * v112, (void (*)(void))type metadata accessor for ContentStatusBanner);
      uint64_t v118 = v87[2];
      BOOL v119 = __OFADD__(v118, 1);
      uint64_t v120 = v118 + 1;
      uint64_t v89 = v195;
      if (v119) {
        goto LABEL_57;
      }
      v87[2] = v120;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_1001EB5EC(v104, v105);
    uint64_t v80 = v194;
LABEL_44:
    sub_1001D1194(v80, (void (*)(void))type metadata accessor for ContentStatusBanner);
    uint64_t v88 = v103;
    if (v86) {
      goto LABEL_12;
    }
LABEL_14:
    int64_t v98 = v193 + 1;
    if (__OFADD__(v193, 1)) {
      goto LABEL_56;
    }
    if (v98 < v189)
    {
      unint64_t v99 = *(void *)(v188 + 8 * v98);
      if (v99) {
        goto LABEL_17;
      }
      int64_t v100 = v193 + 2;
      ++v193;
      if (v98 + 1 < v189)
      {
        unint64_t v99 = *(void *)(v188 + 8 * v100);
        if (v99) {
          goto LABEL_20;
        }
        int64_t v193 = v98 + 1;
        if (v98 + 2 < v189)
        {
          unint64_t v99 = *(void *)(v188 + 8 * (v98 + 2));
          if (v99)
          {
            v98 += 2;
            goto LABEL_17;
          }
          int64_t v100 = v98 + 3;
          int64_t v193 = v98 + 2;
          if (v98 + 3 < v189)
          {
            unint64_t v99 = *(void *)(v188 + 8 * v100);
            if (!v99)
            {
              while (1)
              {
                int64_t v98 = v100 + 1;
                if (__OFADD__(v100, 1)) {
                  goto LABEL_58;
                }
                if (v98 >= v189)
                {
                  int64_t v193 = v153;
                  goto LABEL_31;
                }
                unint64_t v99 = *(void *)(v188 + 8 * v98);
                ++v100;
                if (v99) {
                  goto LABEL_17;
                }
              }
            }
LABEL_20:
            int64_t v98 = v100;
LABEL_17:
            unint64_t v86 = (v99 - 1) & v99;
            unint64_t v91 = __clz(__rbit64(v99)) + (v98 << 6);
            int64_t v193 = v98;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_31:
    uint64_t v101 = sub_10017DF08(v88);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 1, 1, v101);
    unint64_t v86 = 0;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10013A044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100244368);
}

uint64_t sub_10013A058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a3;
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v69 = (char *)v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v64 - v9;
  uint64_t v11 = type metadata accessor for LocationsState();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LocationModel();
  uint64_t v71 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v68 = (char *)v64 - v21;
  sub_1001136D8(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationsState);
  static CurrentLocation.placeholderIdentifier.getter();
  uint64_t v76 = a2;
  LOBYTE(a1) = static Location.Identifier.== infix(_:_:)();
  uint64_t v22 = v6;
  uint64_t v23 = *(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v6 + 8);
  uint64_t v73 = v10;
  uint64_t v74 = v23;
  uint64_t v75 = v6 + 8;
  v23(v10, (void (*)(char *, uint64_t, uint64_t))v5);
  if (a1)
  {
    uint64_t v24 = (uint64_t)&v16[*(int *)(sub_10017DF08(&qword_100E63878) + 48)];
    type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = type metadata accessor for LocationOfInterest();
    _s7Weather24LocationCompositionStateOwst_0(v24, 1, 1, v25);
    uint64_t v26 = v71;
    (*(void (**)(char *, void, uint64_t))(v71 + 104))(v16, enum case for LocationModel.current(_:), v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v17);
    uint64_t v27 = (uint64_t)v13;
    uint64_t v28 = v22;
  }
  else
  {
    uint64_t v66 = v16;
    uint64_t v67 = v6;
    uint64_t v72 = (void (*)(char *, uint64_t, uint64_t))v5;
    uint64_t v29 = *(void *)&v13[*(int *)(v11 + 24)];
    uint64_t v30 = *(void *)(v29 + 16);
    v64[1] = v29;
    uint64_t v65 = v13;
    if (v30)
    {
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 16);
      uint64_t v32 = v29 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
      uint64_t v33 = (void (**)(char *, uint64_t))(v71 + 8);
      uint64_t v34 = *(void *)(v71 + 72);
      swift_bridgeObjectRetain();
      uint64_t v35 = v73;
      while (1)
      {
        v31(v20, v32, v17);
        LocationModel.identifier.getter();
        char v36 = static Location.Identifier.== infix(_:_:)();
        v74(v35, v72);
        if (v36) {
          break;
        }
        (*v33)(v20, v17);
        v32 += v34;
        if (!--v30) {
          goto LABEL_9;
        }
      }
      uint64_t v26 = v71;
      uint64_t v16 = v66;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v66, v20, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_9:
      uint64_t v16 = v66;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 1, 1, v17);
      swift_bridgeObjectRelease();
      uint64_t v26 = v71;
    }
    uint64_t v5 = (uint64_t)v72;
    uint64_t v28 = v67;
    uint64_t v27 = (uint64_t)v65;
  }
  sub_1001D1194(v27, (void (*)(void))type metadata accessor for LocationsState);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  uint64_t v38 = v69;
  if (v37 != 1)
  {
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    uint64_t v48 = v68;
    v47(v68, v16, v17);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v47)(v70, v48, v17);
  }
  sub_100178110((uint64_t)v16, &qword_100EAC4A0);
  if (qword_100E62798 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  sub_1002102B0(v39, (uint64_t)qword_100F51DE0);
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v72(v38, v76, v5);
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v40, v41))
  {
    char v42 = v38;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v68 = (char *)v44;
    *(_DWORD *)uint64_t v43 = 141558275;
    uint64_t v77 = 1752392040;
    uint64_t v78 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v43 + 12) = 2081;
    uint64_t v67 = v43 + 14;
    sub_100210468();
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v77 = sub_10016414C(v45, v46, &v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v74(v42, (void (*)(char *, uint64_t, uint64_t))v5);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Location identifier: %{private,mask.hash}s, was not found in LocationsState", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v74(v38, (void (*)(char *, uint64_t, uint64_t))v5);
  }

  Location.Identifier.kind.getter();
  uint64_t v50 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v52 = v51;
  if (v50 == Location.Identifier.Kind.rawValue.getter() && v52 == v53)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v55 & 1) == 0)
    {
      uint64_t v56 = sub_10017DF08(&qword_100E63870);
      uint64_t v57 = v70;
      uint64_t v58 = v70 + *(int *)(v56 + 48);
      v72(v73, v76, v5);
      SavedLocation.Placeholder.init(identifier:searchTitle:searchSubtitle:)();
      type metadata accessor for SavedLocation();
      swift_storeEnumTagMultiPayload();
      uint64_t v59 = type metadata accessor for LocationOfInterest();
      _s7Weather24LocationCompositionStateOwst_0(v58, 1, 1, v59);
      return (*(uint64_t (**)(uint64_t, void, uint64_t))(v71 + 104))(v57, enum case for LocationModel.saved(_:), v17);
    }
  }
  uint64_t v60 = sub_10017DF08(&qword_100E63878);
  uint64_t v61 = v70;
  uint64_t v62 = v70 + *(int *)(v60 + 48);
  type metadata accessor for CurrentLocation();
  swift_storeEnumTagMultiPayload();
  uint64_t v63 = type metadata accessor for LocationOfInterest();
  _s7Weather24LocationCompositionStateOwst_0(v62, 1, 1, v63);
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(v71 + 104))(v61, enum case for LocationModel.current(_:), v17);
}

uint64_t sub_10013A888(uint64_t a1)
{
  return sub_100138ED4(a1, (void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_10013F500);
}

uint64_t sub_10013A8B8(uint64_t a1)
{
  return sub_10013A8E8(a1, (void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_10013A93C);
}

uint64_t sub_10013A8E8(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  return a3(a1);
}

uint64_t sub_10013A93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v3 = type metadata accessor for TimeState();
  __chkstk_darwin(v3 - 8);
  sub_1001626E0();
  uint64_t v83 = v5 - v4;
  uint64_t v87 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v7);
  uint64_t v78 = (uint64_t)&v70 - v8;
  uint64_t v89 = type metadata accessor for Date();
  uint64_t v96 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v9);
  sub_100179C90();
  __chkstk_darwin(v10);
  sub_100179C90();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v70 - v12;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v14 - 8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v70 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v70 - v19;
  __chkstk_darwin(v21);
  uint64_t v22 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v95 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v24 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v23 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  uint64_t v86 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v97 = (uint64_t)&v70 - v25;
  sub_10013B3F0(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)&v70 - v25);
  uint64_t v26 = qword_100E62418;
  uint64_t v94 = v22;
  swift_bridgeObjectRetain();
  uint64_t v93 = v24;
  swift_bridgeObjectRetain();
  uint64_t v92 = v23;
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  sub_10013B824();
  Configurable.setting<A>(_:)();
  Date.init(timeIntervalSince1970:)();
  if (qword_100E62420 != -1) {
    swift_once();
  }
  uint64_t v88 = v13;
  Configurable.setting<A>(_:)();
  int v80 = LOBYTE(v98[0]);
  uint64_t v27 = (unsigned __int8 *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
  uint64_t v28 = (int *)type metadata accessor for NotificationsOptInState();
  char v29 = v27[v28[14]];
  sub_10013B3F0(v97, (uint64_t)v20);
  uint64_t v30 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v30) == 1)
  {
    sub_1001781AC((uint64_t)v20, (uint64_t *)&unk_100EADD50);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_1001D12EC((uint64_t)v20, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  sub_10017AC6C();
  sub_10013F4E8();
  char v32 = v31;
  swift_bridgeObjectRelease();
  sub_10013B3F0(v97, (uint64_t)v17);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v30) == 1)
  {
    sub_1001781AC((uint64_t)v17, (uint64_t *)&unk_100EADD50);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_1001D12EC((uint64_t)v17, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  sub_10017AC6C();
  sub_10013F4D0();
  char v34 = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  uint64_t v36 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications;
  int v79 = sub_10013D94C(v29, v32 & 1, v34 & 1, *(unsigned char *)(v35 + 1), *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications));
  uint64_t v73 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  uint64_t v37 = v78;
  sub_100113A88(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v78, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v38 = *(void *)(v37 + *(int *)(v87 + 36) + 8);
  sub_1001D12EC(v37, (void (*)(void))type metadata accessor for ViewState);
  if (v38 == 1)
  {
    if (LocationAuthorizationState.rawValue.getter(*(unsigned char *)(v35 + 1)) == 0xD000000000000010
      && v39 == 0x8000000100C95500)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      int v41 = 0;
      if ((v40 & 1) == 0) {
        goto LABEL_22;
      }
    }
    switch(*(unsigned char *)(a1 + v36))
    {
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_19;
      default:
        char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        int v41 = 0;
        if ((v42 & 1) == 0) {
          break;
        }
LABEL_19:
        if (v27[18] != 1) {
          goto LABEL_21;
        }
        int v41 = v27[19] ^ 1;
        break;
    }
  }
  else
  {
LABEL_21:
    int v41 = 0;
  }
LABEL_22:
  LODWORD(v78) = v41;
  uint64_t v71 = type metadata accessor for LocationsState();
  uint64_t v43 = a1;
  uint64_t v44 = *(void *)(v86 + *(int *)(v71 + 52));
  int v72 = *(unsigned __int8 *)(v35 + 2);
  int v77 = *v27;
  uint64_t v45 = *((void *)v27 + 1);
  unint64_t v46 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v96 + 16);
  uint64_t v47 = v89;
  v46(v90, &v27[v28[10]], v89);
  uint64_t v48 = v28[12];
  int v74 = v27[v28[11]];
  int v76 = v27[v48];
  int v75 = *(unsigned __int8 *)(v35 + 1);
  char v49 = *(unsigned char *)(v43 + v36);
  uint64_t v50 = v43;
  uint64_t v51 = v44;
  v46(v91, (unsigned __int8 *)v88, v47);
  uint64_t v52 = v82;
  sub_10013B3F0(v97, v82);
  uint64_t v53 = v81;
  sub_100113A88(v73, v81, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v73 = *(void *)(v53 + *(int *)(v87 + 36) + 8);
  swift_bridgeObjectRetain();
  uint64_t v87 = v45;
  swift_bridgeObjectRetain();
  sub_1001D12EC(v53, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v54 = (_OWORD *)(v35 + *(int *)(type metadata accessor for EnvironmentState() + 68));
  long long v55 = v54[1];
  v98[0] = *v54;
  v98[1] = v55;
  long long v99 = v54[2];
  long long v100 = v98[0];
  long long v101 = v55;
  long long v102 = v99;
  sub_10011CAF0((id *)&v100);
  sub_10011CAF0((id *)&v100 + 1);
  sub_10011CAF0((id *)&v101);
  sub_10011CAF0((id *)&v101 + 1);
  sub_10011CAF0((id *)&v102);
  sub_10011CAF0((id *)&v102 + 1);
  uint64_t v56 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_10013B6EC(v56);
  swift_bridgeObjectRelease();
  uint64_t v58 = v83;
  sub_100113A88(v50 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v83, (void (*)(void))type metadata accessor for TimeState);
  uint64_t v59 = v84;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 32))(v84, v58, v47);
  uint64_t v60 = v50 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState;
  char v61 = *(unsigned char *)(v50 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
  uint64_t v62 = *(void *)(v60 + 8);
  swift_bridgeObjectRetain();
  if (static Settings.Features.homeAndWorkEnabled.getter()) {
    char v63 = static Settings.HomeAndWork.homeAndWorkLabelEnabled.getter();
  }
  else {
    char v63 = 0;
  }
  char v64 = v72 == 4;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v88, v89);
  sub_1001781AC(v97, (uint64_t *)&unk_100EADD50);
  uint64_t v69 = (uint64_t)v57;
  *((void *)&v68 + 1) = v94;
  *(void *)&long long v68 = v95;
  uint64_t v65 = v85;
  sub_1009B0EDC(v64, v77, v87, v74, v79, v76, v75, v85, v49, v78 & 1, v91, v80, v68, v93, v92, v52, v73, v98, v69,
    v59,
    v61,
    v62,
    v63 & 1,
    v51);
  uint64_t v66 = type metadata accessor for LocationInput();
  return _s7Weather24LocationCompositionStateOwst_0(v65, 0, 1, v66);
}

uint64_t sub_10013B3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10013B458()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_10017DF08(&qword_100E63A40);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100152344();
  type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100158494();
  __chkstk_darwin(v12);
  if (v6)
  {
    if (*(void *)(v4 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_1001D23B8();
      if (v14)
      {
        unint64_t v15 = v13;
        uint64_t v16 = *(void *)(v4 + 56);
        uint64_t v17 = type metadata accessor for LocationAvailableDataSetState(0);
        sub_100162E4C();
        sub_100157394(v16 + *(void *)(v18 + 72) * v15, v0, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
        uint64_t v19 = v0;
        uint64_t v20 = 0;
      }
      else
      {
        uint64_t v17 = type metadata accessor for LocationAvailableDataSetState(0);
        uint64_t v19 = v0;
        uint64_t v20 = 1;
      }
      _s7Weather24LocationCompositionStateOwst_0(v19, v20, 1, v17);
      swift_bridgeObjectRelease();
      type metadata accessor for LocationAvailableDataSetState(0);
      sub_10012B520(v0, 1, v17);
      if (!v24)
      {
        if (swift_getEnumCaseMultiPayload())
        {
          sub_100156908(v0, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
        }
        else
        {
          sub_1001627D4();
          uint64_t v27 = v26();
          v2(v27);
          sub_100869C00(&qword_100E9BB68, (void (*)(uint64_t))&type metadata accessor for AvailableDataSets);
          dispatch thunk of SetAlgebra.isSuperset(of:)();
          uint64_t v28 = *(void (**)(void))(v10 + 8);
          sub_100164F40();
          v28();
          sub_100164F40();
          v28();
        }
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v21 = type metadata accessor for LocationAvailableDataSetState(0);
      sub_100163050(v0, v22, v23, v21);
    }
    sub_100178110(v0, &qword_100E63A40);
  }
LABEL_12:
  sub_100162694();
}

uint64_t sub_10013B6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009B23DC);
}

void *sub_10013B6EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1001EA6A0(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for Location.Identifier() - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = Location.Identifier.id.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1001EA6A0(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

unint64_t sub_10013B824()
{
  unint64_t result = qword_100EA5E80;
  if (!qword_100EA5E80)
  {
    type metadata accessor for LocationInputFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5E80);
  }
  return result;
}

void sub_10013B870(uint64_t a1, void *a2)
{
}

void sub_10013B8BC()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v9 = sub_10017DF08(&qword_100E6EB98);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10011BFD8();
  uint64_t v11 = sub_10017DF08(&qword_100E663D0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100129860();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v24 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v24 - v17;
  if (*v6 != *v4) {
    goto LABEL_13;
  }
  uint64_t v19 = type metadata accessor for ActiveLocationInput(0);
  uint64_t v20 = *(int *)(v19 + 20);
  v24[0] = v6;
  sub_10006DF38((uint64_t)&v6[v20], (uint64_t)v18, &qword_100E663D0);
  v24[1] = v19;
  sub_10006DF38((uint64_t)&v4[*(int *)(v19 + 20)], (uint64_t)v16, &qword_100E663D0);
  uint64_t v21 = v0 + *(int *)(v9 + 48);
  sub_10006DF38((uint64_t)v18, v0, &qword_100E663D0);
  sub_10006DF38((uint64_t)v16, v21, &qword_100E663D0);
  sub_10012B520(v0, 1, active);
  if (v22)
  {
    sub_1001781AC((uint64_t)v16, &qword_100E663D0);
    sub_10018397C();
    sub_10012B520(v21, 1, active);
    if (v22)
    {
      sub_1001781AC(v0, &qword_100E663D0);
LABEL_12:
      sub_100126F60();
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  sub_10006DF38(v0, v2, &qword_100E663D0);
  sub_10012B520(v21, 1, active);
  if (v22)
  {
    sub_1001781AC((uint64_t)v16, &qword_100E663D0);
    sub_1001781AC((uint64_t)v18, &qword_100E663D0);
    sub_10013C290(v2, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
LABEL_10:
    sub_1001781AC(v0, &qword_100E6EB98);
    goto LABEL_13;
  }
  sub_1001CCE94(v21, v1);
  char v23 = sub_10011CB88(v2, v1);
  sub_10013C290(v1, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  sub_1001781AC((uint64_t)v16, &qword_100E663D0);
  sub_10018397C();
  sub_10013C290(v2, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  sub_1001781AC(v0, &qword_100E663D0);
  if (v23) {
    goto LABEL_12;
  }
LABEL_13:
  sub_100162694();
}

void sub_10013BBAC()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10017DF08(&qword_100E663D0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10011C760();
  uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v12 = sub_100109308(v11);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v30[-v16];
  uint64_t v18 = type metadata accessor for ActiveLocationInput(0);
  sub_10006DF38(v2 + *(int *)(v18 + 20), v0, &qword_100E663D0);
  sub_10012B520(v0, 1, active);
  if (v23)
  {
    sub_1001781AC(v0, &qword_100E663D0);
    uint64_t v19 = type metadata accessor for Location.Identifier();
    uint64_t v20 = (uint64_t)v17;
    uint64_t v21 = 1;
  }
  else
  {
    sub_10013C1E0(v0, (uint64_t)v8, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    uint64_t v22 = type metadata accessor for Location.Identifier();
    sub_10012B520((uint64_t)v8, 1, v22);
    if (v23) {
      static CurrentLocation.placeholderIdentifier.getter();
    }
    else {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(v17, v8, v22);
    }
    sub_10013C290(v0, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    uint64_t v20 = (uint64_t)v17;
    uint64_t v21 = 0;
    uint64_t v19 = v22;
  }
  _s7Weather24LocationCompositionStateOwst_0(v20, v21, 1, v19);
  uint64_t v24 = sub_10006DF38((uint64_t)v17, (uint64_t)v15, &qword_100E6DC08);
  uint64_t v25 = *(void *)(v2 + *(int *)(v18 + 24));
  __chkstk_darwin(v24);
  *(void *)&v30[-16] = v17;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_10013C338((uint64_t (*)(void))sub_10013D5E0, (uint64_t)&v30[-32], v25);
  char v28 = v27;
  swift_bridgeObjectRelease();
  sub_10020E72C((uint64_t)v15, v4, &qword_100E6DC08);
  uint64_t v29 = v4 + *(int *)(type metadata accessor for ActiveLocationModel(0) + 20);
  *(void *)uint64_t v29 = v26;
  *(unsigned char *)(v29 + 8) = v28 & 1;
  sub_1001781AC((uint64_t)v17, &qword_100E6DC08);
  sub_100162694();
}

void sub_10013BE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v23;
  a20 = v24;
  uint64_t v26 = v25;
  char v28 = v27;
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_10011C760();
  uint64_t v30 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_10012B938();
  uint64_t v32 = sub_10017DF08(&qword_100E663D0);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_10011BFD8();
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&a9 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10013C1E0(v26 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v36, (void (*)(void))type metadata accessor for ModalViewState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_10013C290((uint64_t)v36, (void (*)(void))type metadata accessor for ModalViewState);
  sub_10013C1E0(v26 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v21, (void (*)(void))type metadata accessor for ViewState);
  sub_10013C1E0(v21 + v30[5], (uint64_t)v22, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10013C290((uint64_t)v22, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_7:
    sub_10013C290(v21, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v40 = 1;
    goto LABEL_8;
  }
  uint64_t v38 = *v22;
  if (*(void *)(v21 + v30[9] + 8) == 1)
  {
    id v39 = [self currentDevice];
    [v39 userInterfaceIdiom];

    if ((*(unsigned char *)(v21 + v30[7]) & 1) == 0)
    {
      swift_release();
      goto LABEL_7;
    }
  }
  sub_10013C290(v21, (void (*)(void))type metadata accessor for ViewState);
  sub_10013C1E0(v38 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v20, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  swift_release();
  uint64_t v40 = 0;
LABEL_8:
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  _s7Weather24LocationCompositionStateOwst_0(v20, v40, 1, active);
  uint64_t v42 = v26 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v43 = *(void *)(v42 + *(int *)(type metadata accessor for LocationsState() + 36));
  *char v28 = EnumCaseMultiPayload == 0;
  uint64_t v44 = type metadata accessor for ActiveLocationInput(0);
  sub_10020E72C(v20, (uint64_t)&v28[*(int *)(v44 + 20)], &qword_100E663D0);
  *(void *)&v28[*(int *)(v44 + 24)] = v43;
  swift_bridgeObjectRetain();
  sub_100162694();
}

uint64_t sub_10013C1E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10013C234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100162708();
  v5(v4);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

uint64_t sub_10013C290(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013C2E8()
{
  uint64_t v1 = sub_100127C8C();
  v2(v1);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return v0;
}

uint64_t sub_10013C338(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_10013CB74(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Location.Identifier);
}

uint64_t sub_10013C364(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v46 = type metadata accessor for CurrentLocation();
  sub_100162E4C();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v47 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v48 = (uint64_t)&v46 - v7;
  uint64_t v8 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v14 = v13;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v49 = (char *)&v46 - v19;
  sub_10017DF08(&qword_100E8D8D0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  sub_10017DF08(&qword_100E8D978);
  UIViewRepresentableContext.coordinator.getter();
  uint64_t v24 = v50;
  *(void *)(v50 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_pages) = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for LocationViewerPageControl(0);
  Binding.projectedValue.getter();
  uint64_t v25 = v24 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_selection;
  swift_beginAccess();
  uint64_t v26 = v23;
  char v27 = a1;
  sub_10013D578(v26, v25);
  swift_endAccess();
  id v28 = [a1 numberOfPages:v46];
  uint64_t v29 = *v2;
  if (v28 != *(id *)(*v2 + 16)) {
    [a1 setNumberOfPages:];
  }
  sub_10013C9C4(v29, v11);
  if (_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12) != 1)
  {
    uint64_t v32 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v49, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v32, v12);
    if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v18, v12) != enum case for LocationModel.current(_:))
    {
      [a1 setIndicatorImage:0 forPage:0];
      uint64_t v36 = *(void (**)(void))(v14 + 8);
      sub_10017FC60();
      v36();
      sub_10017FC60();
      uint64_t v37 = ((uint64_t (*)(void))v36)();
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v14 + 96))(v18, v12);
    uint64_t v33 = v48;
    sub_10013CA40((uint64_t)v18, v48);
    uint64_t v34 = v47;
    sub_10013C9DC(v33, v47);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (!EnumCaseMultiPayload)
      {
        sub_10013CAA4();
        id v38 = sub_10013CAE4();
        [v27 setIndicatorImage:v38 forPage:0];

        sub_10013C8C4(v33);
        sub_10017FC60();
        v39();
        sub_10013C8C4(v34);
LABEL_12:
        uint64_t v31 = (uint64_t)&v18[*(int *)(sub_10017DF08(&qword_100E63878) + 48)];
        uint64_t v30 = &qword_100E63508;
        goto LABEL_13;
      }
    }
    else
    {
      sub_10013C8C4(v34);
    }
    sub_10013CAA4();
    id v40 = sub_10013CAE4();
    [v27 setIndicatorImage:v40 forPage:0];

    sub_10013C8C4(v33);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v12);
    goto LABEL_12;
  }
  uint64_t v30 = &qword_100EAC4A0;
  uint64_t v31 = v11;
LABEL_13:
  uint64_t v37 = sub_1001781AC(v31, v30);
LABEL_14:
  uint64_t v41 = *v2;
  __chkstk_darwin(v37);
  *(&v46 - 2) = (uint64_t)v2;
  swift_bridgeObjectRetain();
  id v42 = (id)sub_10013CB48(sub_10013D40C, (uint64_t)(&v46 - 4), v41);
  char v44 = v43;
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0)
  {
    if (v42 != [v27 currentPage]) {
      [v27 setCurrentPage:v42];
    }
    sub_10013CC48((char *)v27, (uint64_t)v42);
  }
  return swift_release();
}

uint64_t sub_10013C8C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CurrentLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10013C920@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a2(0);
  if (v5) {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)), v6);
  }
  uint64_t v7 = sub_1001A1650();

  return _s7Weather24LocationCompositionStateOwst_0(v7, v8, v9, v10);
}

uint64_t sub_10013C9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10013C920(a1, (uint64_t (*)(void))&type metadata accessor for LocationModel, a2);
}

uint64_t sub_10013C9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013CA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10013CAA4()
{
  unint64_t result = qword_100E727F0;
  if (!qword_100E727F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E727F0);
  }
  return result;
}

id sub_10013CAE4()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() systemImageNamed:v0];

  return v1;
}

uint64_t sub_10013CB48(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_10013CB74(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for LocationModel);
}

uint64_t sub_10013CB74(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return 0;
  }
  uint64_t v8 = a4(0);
  uint64_t v9 = 0;
  sub_100164920(v8);
  uint64_t v11 = a3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v13 = *(void *)(v12 + 72);
  while (1)
  {
    sub_1001826B4();
    char v14 = a1();
    if (v4 || (v14 & 1) != 0) {
      break;
    }
    ++v9;
    v11 += v13;
    if (v5 == v9) {
      return 0;
    }
  }
  return v9;
}

void sub_10013CC48(char *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CurrentLocation();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v69 - v9;
  uint64_t v11 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationModel();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v17 = __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v69 - v18;
  uint64_t v22 = *(void *)v2;
  if (*(void *)(*(void *)v2 + 16) <= a2) {
    return;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v69[1] = v5;
    uint64_t v70 = v10;
    uint64_t v71 = v8;
    uint64_t v74 = v19;
    int v75 = v20;
    int v76 = a1;
    int v77 = (uint64_t *)v2;
    uint64_t v23 = v22 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v24 = *(void *)(v15 + 72);
    uint64_t v78 = a2;
    uint64_t v25 = v23 + v24 * a2;
    a2 = *(void *)(v15 + 16);
    ((void (*)(char *, uint64_t, uint64_t))a2)((char *)v69 - v18, v25, v14);
    uint64_t v2 = LocationModel.name.getter();
    uint64_t v10 = v26;
    int v72 = *(void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v73 = v15 + 8;
    v72(v21, v14);
    sub_10012B78C();
    uint64_t v28 = v27;
    a1 = *(char **)(v27 + 16);
    uint64_t v8 = a1 + 1;
    if ((unint64_t)a1 < *(void *)(v27 + 24) >> 1) {
      goto LABEL_4;
    }
  }
  sub_10012B78C();
  uint64_t v28 = v65;
LABEL_4:
  *(void *)(v28 + 16) = v8;
  uint64_t v29 = v28 + 16 * (void)a1;
  *(void *)(v29 + 32) = v2;
  *(void *)(v29 + 40) = v10;
  if (!v78)
  {
    sub_10013C9C4(*v77, (uint64_t)v13);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) == 1)
    {
      uint64_t v30 = &qword_100EAC4A0;
      uint64_t v31 = (uint64_t)v13;
LABEL_19:
      sub_1001781AC(v31, v30);
      goto LABEL_20;
    }
    uint64_t v32 = v75;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v75, v13, v14);
    uint64_t v33 = v74;
    ((void (*)(uint64_t, char *, uint64_t))a2)(v74, v32, v14);
    uint64_t v34 = v33;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v15 + 88))(v33, v14) == enum case for LocationModel.current(_:))
    {
      (*(void (**)(uint64_t, uint64_t))(v15 + 96))(v33, v14);
      uint64_t v35 = (uint64_t)v70;
      sub_10013CA40(v33, (uint64_t)v70);
      uint64_t v36 = (uint64_t)v71;
      sub_10013C9DC(v35, (uint64_t)v71);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 1) >= 2)
      {
        if (!EnumCaseMultiPayload)
        {
          id v40 = [self mainBundle];
          v80._uint64_t countAndFlagsBits = 0xD000000000000029;
          v80._object = (void *)0x8000000100CAEDD0;
          v41._object = (void *)0x8000000100CAEDB0;
          v41._uint64_t countAndFlagsBits = 0xD000000000000010;
          v42._uint64_t countAndFlagsBits = 0;
          v42._object = (void *)0xE000000000000000;
          Swift::String v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v80);

          unint64_t v44 = *(void *)(v28 + 16);
          if (v44 >= *(void *)(v28 + 24) >> 1)
          {
            sub_10012B78C();
            uint64_t v28 = v68;
          }
          *(void *)(v28 + 16) = v44 + 1;
          *(Swift::String *)(v28 + 16 * v44 + 32) = v43;
          sub_10013C8C4(v35);
          v72(v75, v14);
          sub_10013C8C4((uint64_t)v71);
          goto LABEL_18;
        }
      }
      else
      {
        sub_10013C8C4(v36);
      }
      id v45 = [self mainBundle];
      v46._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
      v81._uint64_t countAndFlagsBits = 0xD000000000000047;
      v81._object = (void *)0x8000000100CAED60;
      v46._object = (void *)0x8000000100CAED40;
      v47._uint64_t countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      Swift::String v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, (NSBundle)v45, v47, v81);

      unint64_t v49 = *(void *)(v28 + 16);
      if (v49 >= *(void *)(v28 + 24) >> 1)
      {
        sub_10012B78C();
        uint64_t v28 = v67;
      }
      *(void *)(v28 + 16) = v49 + 1;
      *(Swift::String *)(v28 + 16 * v49 + 32) = v48;
      sub_10013C8C4(v35);
      v72(v75, v14);
LABEL_18:
      uint64_t v31 = v34 + *(int *)(sub_10017DF08(&qword_100E63878) + 48);
      uint64_t v30 = &qword_100E63508;
      goto LABEL_19;
    }
    id v38 = v32;
    id v39 = (void (*)(uint64_t, uint64_t))v72;
    v72(v38, v14);
    v39(v33, v14);
  }
LABEL_20:
  uint64_t v50 = v78;
  id v51 = [self mainBundle];
  v82._uint64_t countAndFlagsBits = 0xD000000000000036;
  v82._object = (void *)0x8000000100CAED00;
  v52._uint64_t countAndFlagsBits = 0x2064252079746963;
  v52._object = (void *)0xED0000642520666FLL;
  v53._uint64_t countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)v51, v53, v82);

  sub_10017DF08(&qword_100E64020);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_100C25ED0;
  *(void *)(v54 + 56) = &type metadata for Int;
  *(void *)(v54 + 64) = &protocol witness table for Int;
  *(void *)(v54 + 32) = v50 + 1;
  uint64_t v55 = *(void *)(*v77 + 16);
  *(void *)(v54 + 96) = &type metadata for Int;
  *(void *)(v54 + 104) = &protocol witness table for Int;
  *(void *)(v54 + 72) = v55;
  uint64_t v56 = String.init(format:_:)();
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  unint64_t v59 = *(void *)(v28 + 16);
  if (v59 >= *(void *)(v28 + 24) >> 1)
  {
    sub_10012B78C();
    uint64_t v28 = v66;
  }
  uint64_t v60 = v76;
  *(void *)(v28 + 16) = v59 + 1;
  uint64_t v61 = v28 + 16 * v59;
  *(void *)(v61 + 32) = v56;
  *(void *)(v61 + 40) = v58;
  uint64_t v79 = v28;
  sub_10017DF08(&qword_100E91BC0);
  sub_10012BB8C();
  uint64_t v62 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v64 = v63;
  swift_bridgeObjectRelease();
  sub_10013D3A0(v62, v64, v60, (SEL *)&selRef_setAccessibilityValue_);
}

void sub_10013D3A0(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 *a4:v6];
}

uint64_t sub_10013D40C()
{
  return sub_10013D42C() & 1;
}

uint64_t sub_10013D42C()
{
  uint64_t v0 = type metadata accessor for Location.Identifier();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  NSString v6 = (char *)v10 - v5;
  LocationModel.identifier.getter();
  type metadata accessor for LocationViewerPageControl(0);
  sub_10017DF08(&qword_100E8D8D0);
  Binding.wrappedValue.getter();
  char v7 = static Location.Identifier.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t sub_10013D578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E8D8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10013D5E0(uint64_t a1)
{
  return sub_10013D600(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10013D600(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v3 = type metadata accessor for Location.Identifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v23 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v23 - v15, a1, v3);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v3);
  uint64_t v17 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10006DF38((uint64_t)v16, (uint64_t)v10, &qword_100E6DC08);
  sub_10006DF38(v24, v17, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v3) == 1)
  {
    sub_1001781AC((uint64_t)v16, &qword_100E6DC08);
    int v18 = _s7Weather24LocationCompositionStateOwet_0(v17, 1, v3);
    if (v18 == 1) {
      uint64_t v19 = &qword_100E6DC08;
    }
    else {
      uint64_t v19 = &qword_100E6DD18;
    }
    if (v18 == 1) {
      char v20 = -1;
    }
    else {
      char v20 = 0;
    }
  }
  else
  {
    sub_10006DF38((uint64_t)v10, (uint64_t)v14, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v3) == 1)
    {
      sub_1001781AC((uint64_t)v16, &qword_100E6DC08);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
      char v20 = 0;
      uint64_t v19 = &qword_100E6DD18;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v17, v3);
      sub_1001CF7B8();
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v4 + 8);
      v21(v6, v3);
      uint64_t v19 = &qword_100E6DC08;
      sub_1001781AC((uint64_t)v16, &qword_100E6DC08);
      v21(v14, v3);
    }
  }
  sub_1001781AC((uint64_t)v10, v19);
  return v20 & 1;
}

uint64_t sub_10013D91C(uint64_t a1)
{
  return sub_10013A8E8(a1, (void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_10013BE98);
}

uint64_t sub_10013D94C(char a1, char a2, char a3, char a4, char a5)
{
  if (qword_100E627B8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1002102B0(v10, (uint64_t)qword_100F51E40);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67110146;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 14) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 20) = 2082;
    sub_10013DE58();
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10016414C(v14, v15, &v31);
    sub_10017A6F8();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 30) = 2082;
    sub_10013DD84();
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10016414C(v16, v17, &v31);
    sub_10017A6F8();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Determining user opt-in status, requestedLocationPermission=%{BOOL}d, nhpAvailable=%{BOOL}d, severeAvailable=%{BOOL}d, locationAuthorization=%{public}s, notificationsAuthorization=%{public}s, ", (uint8_t *)v13, 0x28u);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }

  if (a4 == 2 && a5 == 1)
  {
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v23 = 2;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "User opt-in status is .optedIn", v26, 2u);
      sub_100162EE0();
    }
    else
    {

      return 2;
    }
  }
  else if ((a1 & 1) != 0 && a4 && a5 != 3 && a5)
  {
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "User opt-in status is .declined", v29, 2u);
      sub_100162EE0();
    }

    return 3;
  }
  else
  {
    char v19 = (a2 ^ 1) & a3;
    char v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 67109120;
      LODWORD(v31) = v19 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "User opt-in status is .newUser(newCoverage: %{BOOL}d)", v22, 8u);
      sub_100162EE0();
    }

    return v19 & 1;
  }
  return v23;
}

uint64_t sub_10013DD48()
{
  sub_10013DDD0();

  return ShortDescribable.description.getter();
}

unint64_t sub_10013DD84()
{
  unint64_t result = qword_100E7DFF8;
  if (!qword_100E7DFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DFF8);
  }
  return result;
}

unint64_t sub_10013DDD0()
{
  unint64_t result = qword_100E7E000;
  if (!qword_100E7E000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E000);
  }
  return result;
}

uint64_t sub_10013DE1C()
{
  sub_10013DEA4();

  return ShortDescribable.description.getter();
}

unint64_t sub_10013DE58()
{
  unint64_t result = qword_100E6F050;
  if (!qword_100E6F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F050);
  }
  return result;
}

unint64_t sub_10013DEA4()
{
  unint64_t result = qword_100E6F058;
  if (!qword_100E6F058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F058);
  }
  return result;
}

uint64_t sub_10013DEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationPreviewViewState(0);

  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, v6, sub_1009399FC);
}

uint64_t sub_10013DF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A1A9A8);
}

uint64_t sub_10013DF6C(uint64_t a1)
{
  return sub_10013DFCC(a1, (void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_10013BE98);
}

uint64_t sub_10013DF9C(uint64_t a1)
{
  return sub_10013DFCC(a1, (void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_10013E020);
}

uint64_t sub_10013DFCC(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  return a3(a1);
}

uint64_t sub_10013E020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v140 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v3 - 8);
  sub_100109314();
  uint64_t v139 = v4;
  uint64_t v5 = sub_100129064();
  uint64_t v130 = type metadata accessor for SearchViewState.ViewState(v5);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v131 = v7;
  sub_100129064();
  uint64_t v127 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v126 = v9;
  sub_100129064();
  uint64_t v125 = type metadata accessor for AveragesDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v124 = v11;
  sub_100129064();
  v123[17] = type metadata accessor for MoonDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  v123[16] = v13;
  sub_100129064();
  v123[15] = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109314();
  v123[14] = v15;
  sub_100129064();
  v123[13] = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100109314();
  v123[12] = v17;
  sub_100129064();
  v123[11] = type metadata accessor for AirQualityDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  v123[10] = v19;
  sub_100129064();
  v123[9] = type metadata accessor for ConditionDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100109314();
  v123[8] = v21;
  uint64_t v22 = sub_100129064();
  uint64_t v128 = type metadata accessor for ModalViewState.LocationDetailModal(v22);
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v129 = v24;
  uint64_t v25 = sub_10017DF08(&qword_100E663E8);
  __chkstk_darwin(v25 - 8);
  sub_100109314();
  uint64_t v135 = v26;
  uint64_t v27 = sub_100129064();
  uint64_t v133 = type metadata accessor for ModalViewState(v27);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v134 = v29;
  uint64_t v30 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v30 - 8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v32);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v33);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v34);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v35);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v36);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v37);
  int v138 = (char *)v123 - v38;
  uint64_t v39 = sub_10017DF08(&qword_100E94AF0);
  sub_100162E4C();
  __chkstk_darwin(v40);
  Swift::String v42 = (void *)((char *)v123 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v43 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v44);
  sub_100162EF8();
  uint64_t v132 = v45;
  __chkstk_darwin(v46);
  Swift::String v48 = (char *)v123 - v47;
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v49);
  id v51 = (char *)v123 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = a1;
  Swift::String v52 = (void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
  uint64_t v53 = *v52;
  sub_10011E508((uint64_t)v52 + v43[5], (uint64_t)v51, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  uint64_t v137 = v52;
  sub_10011E508((uint64_t)v52, (uint64_t)v48, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v54 = self;
  swift_retain();
  id v55 = [v54 currentDevice];
  id v56 = [v55 userInterfaceIdiom];

  if (v56 && *(void *)&v48[v43[9] + 8] == 2)
  {
    uint64_t v57 = v43;
    char v58 = 1;
  }
  else
  {
    uint64_t v57 = v43;
    char v58 = v48[v43[7]];
  }
  sub_10013F068((uint64_t)v48, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v59 = (uint64_t)v42 + *(int *)(v39 + 48);
  uint64_t v60 = *(int *)(v39 + 64);
  *Swift::String v42 = v53;
  sub_10013F1C8((uint64_t)v51, v59, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  swift_release();
  *((unsigned char *)v42 + v60) = v58;
  if ((v58 & 1) == 0)
  {
    sub_10013F068(v59, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    char v65 = 1;
    uint64_t v66 = _swiftEmptyArrayStorage;
    uint64_t v63 = (uint64_t)v137;
    uint64_t v62 = v138;
    uint64_t v64 = v57;
    goto LABEL_9;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v63 = (uint64_t)v137;
  uint64_t v62 = v138;
  uint64_t v64 = v57;
  if (EnumCaseMultiPayload == 1)
  {
    sub_10013F068(v59, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    char v65 = 2;
    uint64_t v66 = _swiftEmptyArrayStorage;
LABEL_9:
    uint64_t v67 = v135;
    goto LABEL_15;
  }
  swift_release();
  uint64_t v67 = v135;
  if (qword_100E62668 != -1) {
    swift_once();
  }
  char v65 = byte_100F51C48;
  if (byte_100F51C48) {
    uint64_t v66 = &off_100E07E70;
  }
  else {
    uint64_t v66 = _swiftEmptyArrayStorage;
  }
LABEL_15:
  uint64_t v68 = v134;
  sub_10011E508(v136 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v134, (void (*)(void))type metadata accessor for ModalViewState);
  int v69 = swift_getEnumCaseMultiPayload();
  uint64_t v70 = v139;
  switch(v69)
  {
    case 1:
    case 7:
      type metadata accessor for MainViewModel.ModalModule(0);
      sub_10017E8B4();
      goto LABEL_26;
    case 2:
    case 3:
      swift_release();
      type metadata accessor for MainViewModel.ModalModule(0);
      sub_10017E8B4();
      goto LABEL_26;
    case 4:
      sub_10024D364(v68, v67, &qword_100E663E8);
      uint64_t v71 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v67, 1, v71) == 1)
      {
        *uint64_t v62 = 1;
        type metadata accessor for MainViewModel.ModalModule(0);
        sub_10019D8C4();
LABEL_26:
        swift_storeEnumTagMultiPayload();
        uint64_t v79 = sub_10019FFA8();
LABEL_27:
        _s7Weather24LocationCompositionStateOwst_0(v79, v80, v81, v78);
      }
      else
      {
        *uint64_t v62 = 0;
        type metadata accessor for MainViewModel.ModalModule(0);
        sub_10019D8C4();
        swift_storeEnumTagMultiPayload();
        uint64_t v93 = sub_10019FFA8();
        _s7Weather24LocationCompositionStateOwst_0(v93, v94, v95, v96);
        sub_1001781AC(v67, &qword_100E663E8);
      }
LABEL_28:
      if (*(unsigned char *)(*(void *)v63 + 64) != 1) {
        goto LABEL_31;
      }
      uint64_t v82 = v132;
      sub_10011E508(v63, v132, (void (*)(void))type metadata accessor for ViewState);
      sub_10052E3A0(v82 + v64[8], v70);
      sub_10013F068(v82, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v83 = type metadata accessor for SearchViewState(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v70, 1, v83) == 1)
      {
        sub_1001781AC(v70, &qword_100E66408);
LABEL_31:
        char v84 = 1;
      }
      else
      {
        uint64_t v91 = v70 + *(int *)(v83 + 20);
        uint64_t v92 = v131;
        sub_10011E508(v91, v131, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
        sub_10013F068(v70, (void (*)(void))type metadata accessor for SearchViewState);
        char v84 = 0;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            swift_bridgeObjectRelease();
            goto LABEL_37;
          case 2u:
          case 3u:
            break;
          case 4u:
            goto LABEL_31;
          default:
            sub_10013F068(v92, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
LABEL_37:
            char v84 = 0;
            break;
        }
      }
      char v85 = *(unsigned char *)(v63 + v64[11]);
      uint64_t v86 = v63 + v64[10];
      uint64_t v87 = (int *)type metadata accessor for MainViewModel(0);
      uint64_t v88 = v140;
      sub_10011E508(v86, v140 + v87[9], (void (*)(void))type metadata accessor for WeatherMapPresentationState);
      uint64_t v89 = v63 + v64[9];
      *(unsigned char *)uint64_t v88 = v65;
      *(void *)(v88 + 8) = v66;
      sub_10024D364((uint64_t)v62, v88 + v87[6], &qword_100E94AE8);
      *(unsigned char *)(v88 + v87[7]) = v84;
      *(unsigned char *)(v88 + v87[8]) = v85;
      return sub_10011E508(v89, v88 + v87[10], (void (*)(void))type metadata accessor for DisplayMetrics);
    case 5:
      uint64_t v72 = v68;
      char v73 = v129;
      sub_10013F1C8(v72, v129, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_100183EF8(v129, (void (*)(void))type metadata accessor for AirQualityDetailViewState, (uint64_t)&v147);
          sub_10017A8C0();
          sub_10013F068(v67, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
          double v97 = sub_1001290B8();
          if ((v73 & 1) == 0) {
            double v97 = sub_10019F11C();
          }
          sub_1001A0D84((uint64_t)&v140, v97, v98, v99, v100);
          sub_10017E6B0();
          break;
        case 2u:
          sub_100183EF8(v129, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState, (uint64_t)&v148);
          sub_10017A8C0();
          sub_10013F068(v67, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
          double v101 = sub_1001290B8();
          if ((v73 & 1) == 0) {
            double v101 = sub_10019F11C();
          }
          sub_1001A0D84((uint64_t)v141, v101, v102, v103, v104);
          sub_10017E6B0();
          break;
        case 3u:
          sub_100183EF8(v129, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState, (uint64_t)&v149);
          sub_10017A8C0();
          sub_10013F068(v67, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
          double v105 = sub_1001290B8();
          if ((v73 & 1) == 0) {
            double v105 = sub_10019F11C();
          }
          sub_1001A0D84((uint64_t)&v142, v105, v106, v107, v108);
          sub_10017E6B0();
          break;
        case 4u:
          sub_100183EF8(v129, (void (*)(void))type metadata accessor for MoonDetailViewState, (uint64_t)&v150);
          sub_10017A8C0();
          sub_10013F068(v67, (void (*)(void))type metadata accessor for MoonDetailViewState);
          double v109 = sub_1001290B8();
          if ((v73 & 1) == 0) {
            double v109 = sub_10019F11C();
          }
          sub_1001A0D84((uint64_t)&v143, v109, v110, v111, v112);
          sub_10017E6B0();
          break;
        case 5u:
          uint64_t v67 = v124;
          sub_10013F1C8(v129, v124, (void (*)(void))type metadata accessor for AveragesDetailViewState);
          sub_10017A8C0();
          sub_10013F068(v67, (void (*)(void))type metadata accessor for AveragesDetailViewState);
          double v113 = sub_1001290B8();
          if ((v73 & 1) == 0) {
            double v113 = sub_10019F11C();
          }
          sub_1001A0D84((uint64_t)&v144, v113, v114, v115, v116);
          sub_10017E6B0();
          break;
        case 6u:
          type metadata accessor for URL();
          sub_100162E4C();
          (*(void (**)(unsigned char *, uint64_t))(v117 + 32))(v62, v129);
          type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
          swift_storeEnumTagMultiPayload();
          type metadata accessor for MainViewModel.ModalModule(0);
          sub_10017E8B4();
          goto LABEL_26;
        case 7u:
          uint64_t v67 = v126;
          sub_10013F1C8(v129, v126, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewState);
          sub_10017A8C0();
          sub_10013F068(v67, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewState);
          double v118 = sub_1001290B8();
          if ((v73 & 1) == 0) {
            double v118 = sub_10019F11C();
          }
          sub_1001A0D84((uint64_t)&v145, v118, v119, v120, v121);
          sub_10017E6B0();
          break;
        default:
          sub_100183EF8(v129, (void (*)(void))type metadata accessor for ConditionDetailViewState, (uint64_t)&v146);
          sub_10017A8C0();
          sub_10013F068(v67, (void (*)(void))type metadata accessor for ConditionDetailViewState);
          double v74 = sub_1001290B8();
          if ((v73 & 1) == 0) {
            double v74 = sub_10019F11C();
          }
          sub_1001A0D84((uint64_t)&v139, v74, v75, v76, v77);
          sub_10017E6B0();
          break;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v122 = type metadata accessor for MainViewModel.ModalModule(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v67, 0, 1, v122);
      sub_10024D364(v67, (uint64_t)v62, &qword_100E94AE8);
      goto LABEL_28;
    case 6:
      uint64_t v78 = type metadata accessor for MainViewModel.ModalModule(0);
      uint64_t v79 = (uint64_t)v62;
      uint64_t v80 = 1;
      uint64_t v81 = 1;
      goto LABEL_27;
    default:
      sub_10013F068(v68, (void (*)(void))type metadata accessor for ModalViewState);
      type metadata accessor for MainViewModel.ModalModule(0);
      sub_10017E8B4();
      goto LABEL_26;
  }
}

uint64_t sub_10013EEB8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10013EF0C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013EF64(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10013EFB8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013F010(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013F068(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013F0C0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013F118(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013F170(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10013F1C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10013F21C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162880();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t type metadata accessor for NextHourPrecipitationDetailViewState()
{
  uint64_t result = qword_100EB79B8;
  if (!qword_100EB79B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for HomeAndWorkRefinementViewState()
{
  uint64_t result = qword_100E90410;
  if (!qword_100E90410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetDetailViewState()
{
  uint64_t result = qword_100EB6478;
  if (!qword_100EB6478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AirQualityDetailViewState()
{
  uint64_t result = qword_100E74DE0;
  if (!qword_100E74DE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ConditionDetailViewState()
{
  uint64_t result = qword_100E7BC68;
  if (!qword_100E7BC68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AveragesDetailViewState()
{
  uint64_t result = qword_100E6F968;
  if (!qword_100E6F968) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MoonDetailViewState()
{
  uint64_t result = qword_100E74F68;
  if (!qword_100E74F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContentStatusBanner.Placement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

void sub_10013F4D0()
{
}

void sub_10013F4E8()
{
}

uint64_t sub_10013F500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = (uint64_t *)(v11 - v10);
  uint64_t v13 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  sub_10014FEA8(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v16 - v15, (void (*)(void))type metadata accessor for ViewState);
  sub_10014FEA8(v17 + v13[5], (uint64_t)v12, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10014148C((uint64_t)v12, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  }
  else
  {
    uint64_t v18 = *v12;
    if (*(void *)(v17 + v13[9] + 8) != 1
      || (id v19 = [self currentDevice],
          [v19 userInterfaceIdiom],
          v19,
          (*(unsigned char *)(v17 + v13[7]) & 1) != 0))
    {
      sub_10014148C(v17, (void (*)(void))type metadata accessor for ViewState);
      sub_10013F768(v18, a1, v8);
      sub_10013FD00(a1, v8, a2);
      swift_release();
      return sub_1001781AC(v8, &qword_100E639E8);
    }
    swift_release();
  }
  sub_10014148C(v17, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v21 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v21);
}

uint64_t sub_10013F768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v48 = a3;
  uint64_t v4 = type metadata accessor for LocationModel();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocationsState();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Location.Identifier();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10014FEA8(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v23, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v14) == 1)
  {
    uint64_t v24 = type metadata accessor for Location();
    uint64_t v25 = v48;
    return _s7Weather24LocationCompositionStateOwst_0(v25, 1, 1, v24);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v23, v14);
  sub_10014FEA8(v52 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v10, (void (*)(void))type metadata accessor for LocationsState);
  static CurrentLocation.placeholderIdentifier.getter();
  id v51 = v20;
  char v26 = static Location.Identifier.== infix(_:_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v52 = v15 + 8;
  uint64_t v50 = v27;
  v27(v18, v14);
  uint64_t v45 = v10;
  if (v26)
  {
    uint64_t v28 = (uint64_t)&v13[*(int *)(sub_10017DF08(&qword_100E63878) + 48)];
    type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = type metadata accessor for LocationOfInterest();
    _s7Weather24LocationCompositionStateOwst_0(v28, 1, 1, v29);
    uint64_t v31 = v46;
    uint64_t v30 = v47;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v13, enum case for LocationModel.current(_:), v46);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v31);
    uint64_t v32 = v48;
  }
  else
  {
    uint64_t v33 = *(void *)&v10[*(int *)(v8 + 24)];
    uint64_t v34 = *(void *)(v33 + 16);
    uint64_t v31 = v46;
    uint64_t v43 = v33;
    uint64_t v44 = v13;
    uint64_t v49 = v14;
    if (v34)
    {
      uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
      uint64_t v36 = v33 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
      uint64_t v37 = (void (**)(char *, uint64_t))(v47 + 8);
      uint64_t v38 = *(void *)(v47 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        v35(v7, v36, v31);
        LocationModel.identifier.getter();
        char v39 = static Location.Identifier.== infix(_:_:)();
        v50(v18, v49);
        if (v39) {
          break;
        }
        (*v37)(v7, v31);
        v36 += v38;
        if (!--v34) {
          goto LABEL_11;
        }
      }
      uint64_t v30 = v47;
      uint64_t v13 = v44;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v7, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v31);
      swift_bridgeObjectRelease();
      uint64_t v32 = v48;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_11:
      uint64_t v13 = v44;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 1, 1, v31);
      swift_bridgeObjectRelease();
      uint64_t v30 = v47;
      uint64_t v32 = v48;
    }
    uint64_t v14 = v49;
  }
  sub_10014148C((uint64_t)v45, (void (*)(void))type metadata accessor for LocationsState);
  int v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v31);
  uint64_t v41 = v51;
  if (v40 == 1)
  {
    v50(v51, v14);
    sub_1001781AC((uint64_t)v13, &qword_100EAC4A0);
    uint64_t v24 = type metadata accessor for Location();
    uint64_t v25 = v32;
    return _s7Weather24LocationCompositionStateOwst_0(v25, 1, 1, v24);
  }
  LocationModel.location.getter();
  v50(v41, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v31);
}

uint64_t sub_10013FD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v175 = a3;
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E71950);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E63768);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v139 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E63760);
  __chkstk_darwin(v14 - 8);
  uint64_t v195 = (uint64_t)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for Date();
  uint64_t v170 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  uint64_t v178 = (char *)&v139 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v168 = *(void *)(v169 - 8);
  uint64_t v17 = __chkstk_darwin(v169);
  uint64_t v191 = (char *)&v139 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int64_t v153 = (char *)&v139 - v19;
  uint64_t v193 = type metadata accessor for WeatherConditionGradientModel.PresentationContext();
  uint64_t v192 = *(void *)(v193 - 8);
  uint64_t v20 = __chkstk_darwin(v193);
  uint64_t v171 = (char *)&v139 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v190 = (char *)&v139 - v22;
  uint64_t v23 = type metadata accessor for TimeState();
  __chkstk_darwin(v23 - 8);
  uint64_t v152 = (void (*)(void))((char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_10017DF08(&qword_100E63850);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v145 = (uint64_t)&v139 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v151 = (uint64_t)&v139 - v28;
  uint64_t v29 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  __chkstk_darwin(v29 - 8);
  uint64_t v141 = (uint64_t)&v139 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v31 = __chkstk_darwin(v188);
  uint64_t v144 = (uint64_t)&v139 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v150 = (uint64_t)&v139 - v33;
  uint64_t v34 = sub_10017DF08(&qword_100E92848);
  __chkstk_darwin(v34 - 8);
  uint64_t v165 = (char *)&v139 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = type metadata accessor for PreprocessedWeatherData();
  __chkstk_darwin(v177);
  uint64_t v140 = (uint64_t)&v139 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v37 = __chkstk_darwin(v167);
  uint64_t v166 = (uint64_t)&v139 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v189 = (uint64_t)&v139 - v39;
  uint64_t v40 = sub_10017DF08(&qword_100E639E8);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  uint64_t v176 = (uint64_t)&v139 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v163 = (uint64_t)&v139 - v43;
  uint64_t v164 = type metadata accessor for Location();
  uint64_t v149 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v148 = (char *)&v139 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100E63A50);
  uint64_t v46 = __chkstk_darwin(v45 - 8);
  uint64_t v187 = (uint64_t)&v139 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v198 = (uint64_t)&v139 - v48;
  uint64_t v49 = sub_10017DF08(&qword_100E63770);
  uint64_t v50 = __chkstk_darwin(v49 - 8);
  uint64_t v146 = (char *)&v139 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v196 = (uint64_t)&v139 - v52;
  uint64_t v162 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v162);
  uint64_t v161 = (uint64_t)&v139 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = type metadata accessor for Location.Identifier();
  uint64_t v54 = *(void *)(v202 - 8);
  __chkstk_darwin(v202);
  uint64_t v201 = (char *)&v139 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation();
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v160 = (char *)&v139 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType();
  uint64_t v156 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v182 = (char *)&v139 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for VFXEffectViewID();
  uint64_t v154 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v181 = (char *)&v139 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v185 = *(void *)(v186 - 8);
  uint64_t v59 = __chkstk_darwin(v186);
  uint64_t v184 = (char *)&v139 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  long long v197 = (char *)&v139 - v61;
  id v62 = [self sharedApplication];
  id v183 = (id)UIApplication.maybeWindow.getter();

  uint64_t v63 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v64 = *(void *)(v63 + *(int *)(type metadata accessor for LocationsState() + 36));
  uint64_t v65 = *(void *)(v64 + 16);
  uint64_t v147 = v54;
  uint64_t v174 = v7;
  uint64_t v173 = v10;
  uint64_t v172 = v13;
  uint64_t v179 = a2;
  if (v65)
  {
    uint64_t v143 = a1;
    v203[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001EA6A0(0, v65, 0);
    uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    uint64_t v66 = v54 + 16;
    long long v200 = v67;
    unint64_t v68 = (*(unsigned __int8 *)(v66 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 64);
    uint64_t v142 = v64;
    uint64_t v69 = v64 + v68;
    uint64_t v199 = *(void *)(v66 + 56);
    do
    {
      uint64_t v70 = v201;
      uint64_t v71 = v202;
      v200(v201, v69, v202);
      uint64_t v72 = Location.Identifier.uniqueID.getter();
      uint64_t v74 = v73;
      (*(void (**)(char *, uint64_t))(v66 - 8))(v70, v71);
      uint64_t v75 = v203[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001EA6A0(0, *(void *)(v75 + 16) + 1, 1);
        uint64_t v75 = v203[0];
      }
      unint64_t v77 = *(void *)(v75 + 16);
      unint64_t v76 = *(void *)(v75 + 24);
      if (v77 >= v76 >> 1)
      {
        sub_1001EA6A0(v76 > 1, v77 + 1, 1);
        uint64_t v75 = v203[0];
      }
      *(void *)(v75 + 16) = v77 + 1;
      uint64_t v78 = v75 + 16 * v77;
      *(void *)(v78 + 32) = v72;
      *(void *)(v78 + 40) = v74;
      v69 += v199;
      --v65;
    }
    while (v65);
    swift_bridgeObjectRelease();
    a2 = v179;
    a1 = v143;
  }
  uint64_t v79 = v196;
  (*(void (**)(char *, void, uint64_t))(v154 + 104))(v181, enum case for VFXEffectViewID.locationViewer(_:), v155);
  (*(void (**)(char *, void, uint64_t))(v156 + 104))(v182, enum case for WeatherConditionBackgroundConfig.CameraPositionType.default(_:), v157);
  (*(void (**)(char *, void, uint64_t))(v158 + 104))(v160, enum case for WeatherConditionBackgroundOptions.DisplayLocation.locationViewer(_:), v159);
  uint64_t v80 = v170;
  id v81 = v183;
  if (v183)
  {
    [v183 bounds];
    id v82 = v81;
    UIWindow.displayScale.getter();
  }
  uint64_t v83 = v161;
  sub_10014FEA8(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v161, (void (*)(void))type metadata accessor for ViewState);
  sub_10014148C(v83, (void (*)(void))type metadata accessor for ViewState);
  WeatherConditionBackgroundOptions.init(locationIDs:applyMask:applyLegibilityScrim:effectViewID:canShowCollisionLayer:cameraPositionType:displayLocation:windowBounds:displayScale:locationViewerOrientation:)();
  uint64_t v84 = v163;
  sub_10006DF38(a2, v163, &qword_100E639E8);
  uint64_t v85 = v164;
  if (_s7Weather24LocationCompositionStateOwet_0(v84, 1, v164) == 1)
  {
    sub_1001781AC(v84, &qword_100E639E8);
    uint64_t v86 = v188;
    _s7Weather24LocationCompositionStateOwst_0(v79, 1, 1, v188);
    uint64_t v87 = type metadata accessor for WeatherCondition();
    _s7Weather24LocationCompositionStateOwst_0(v198, 1, 1, v87);
  }
  else
  {
    uint64_t v88 = a2;
    uint64_t v89 = v149;
    uint64_t v90 = v80;
    uint64_t v91 = a1;
    uint64_t v92 = v148;
    (*(void (**)(char *, uint64_t, uint64_t))(v149 + 32))(v148, v84, v85);
    uint64_t v93 = *(void *)(v91 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    uint64_t v94 = Location.id.getter();
    uint64_t v95 = (uint64_t)v146;
    sub_1001BBE9C(v94, v96, v93);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001417E0(v95, v79);
    uint64_t v97 = *(void *)(v91 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
    swift_bridgeObjectRetain();
    double v98 = v201;
    Location.identifier.getter();
    uint64_t v99 = Location.Identifier.id.getter();
    sub_100141760(v99, v100, v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v98, v202);
    double v101 = v92;
    a1 = v91;
    uint64_t v80 = v90;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v101, v85);
    a2 = v88;
    uint64_t v86 = v188;
  }
  uint64_t v102 = (uint64_t)v165;
  uint64_t v103 = v177;
  if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v86))
  {
    _s7Weather24LocationCompositionStateOwst_0(v102, 1, 1, v103);
LABEL_17:
    sub_1001781AC(v102, &qword_100E92848);
    sub_10020D948(v180+ OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_weatherConditionBackgroundTimeDataFactory, (uint64_t)v203);
    sub_1001B1E64(v203, v203[3]);
    if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v86))
    {
      uint64_t v107 = type metadata accessor for WeatherData(0);
      uint64_t v108 = v151;
      _s7Weather24LocationCompositionStateOwst_0(v151, 1, 1, v107);
    }
    else
    {
      uint64_t v109 = v150;
      sub_10014FEA8(v79, v150, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v108 = v151;
      sub_1001177B0(v151);
      sub_10014148C(v109, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    }
    double v110 = v153;
    double v111 = v152;
    sub_10014FEA8(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (uint64_t)v152, (void (*)(void))type metadata accessor for TimeState);
    uint64_t v112 = v166;
    sub_10020D9C0(a2, v108, v111, v166);
    sub_1001781AC(v108, &qword_100E63850);
    uint64_t v113 = v194;
    (*(void (**)(void (*)(void), uint64_t))(v80 + 8))(v111, v194);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v203);
    uint64_t v114 = v80;
    goto LABEL_21;
  }
  uint64_t v104 = v150;
  sub_10014FEA8(v79, v150, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_10006D6DC(v102);
  uint64_t v105 = v104;
  uint64_t v106 = v177;
  sub_10014148C(v105, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  if (_s7Weather24LocationCompositionStateOwet_0(v102, 1, v106) == 1) {
    goto LABEL_17;
  }
  uint64_t v134 = v140;
  sub_100150408(v102, v140, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  uint64_t v135 = v141;
  sub_10014FEA8(v134 + *(int *)(v106 + 56), v141, (void (*)(void))type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel);
  sub_10014148C(v134, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  uint64_t v136 = v135;
  uint64_t v112 = v166;
  sub_100150408(v136, v166, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
  uint64_t v114 = v80;
  double v110 = v153;
  uint64_t v113 = v194;
LABEL_21:
  uint64_t v115 = v189;
  sub_100150408(v112, v189, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
  int v116 = *(unsigned __int8 *)(v180
                            + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_forceTileGradientPresentationContext);
  sub_1001414E4(v110);
  uint64_t v117 = v190;
  BackgroundAnimationKind.gradientContext.getter();
  (*(void (**)(unsigned char *, uint64_t))(v168 + 8))(v110, v169);
  uint64_t v118 = v192;
  double v119 = (unsigned int *)&enum case for WeatherConditionGradientModel.PresentationContext.tile(_:);
  if (!v116) {
    double v119 = (unsigned int *)&enum case for WeatherConditionGradientModel.PresentationContext.fullScreen(_:);
  }
  uint64_t v120 = v193;
  (*(void (**)(char *, void, uint64_t))(v192 + 104))(v117, *v119, v193);
  sub_1001414E4(v191);
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v178, v115, v113);
  uint64_t v121 = v167;
  sub_10006DF38(v115 + *(int *)(v167 + 20), v195, &qword_100E63760);
  sub_10006DF38(v115 + *(int *)(v121 + 24), (uint64_t)v172, &qword_100E63768);
  sub_10006DF38(v198, v187, &qword_100E63A50);
  swift_beginAccess();
  type metadata accessor for EnvironmentState();
  sub_10006DF38(v179, v176, &qword_100E639E8);
  (*(void (**)(char *, char *, uint64_t))(v185 + 16))(v184, v197, v186);
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v171, v117, v120);
  uint64_t v122 = v196;
  int v123 = _s7Weather24LocationCompositionStateOwet_0(v196, 1, v188);
  uint64_t v124 = v175;
  uint64_t v125 = (uint64_t)v174;
  uint64_t v126 = (uint64_t)v173;
  if (!v123)
  {
    uint64_t v127 = v144;
    sub_10014FEA8(v122, v144, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v128 = v145;
    sub_1001177B0(v145);
    sub_10014148C(v127, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v129 = type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v128, 1, v129) != 1)
    {
      uint64_t v137 = v128 + *(int *)(v129 + 24);
      uint64_t v138 = type metadata accessor for WeatherDataModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 16))(v126, v137, v138);
      sub_10014148C(v128, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v131 = v194;
      _s7Weather24LocationCompositionStateOwst_0(v126, 0, 1, v138);
      uint64_t v122 = v196;
      goto LABEL_27;
    }
    sub_1001781AC(v128, &qword_100E63850);
    uint64_t v122 = v196;
  }
  uint64_t v130 = type metadata accessor for WeatherDataModel();
  _s7Weather24LocationCompositionStateOwst_0(v126, 1, 1, v130);
  uint64_t v131 = v194;
LABEL_27:
  _s7Weather24LocationCompositionStateOwst_0(v125, 1, 1, v131);
  WeatherConditionBackgroundModelFactoryInput.init(animationKind:currentTime:elevation:moonData:debugConditionOverride:isReduceMotionEnabled:location:options:presentationContext:weatherData:conditionBackgroundDateOverride:)();

  (*(void (**)(char *, uint64_t))(v192 + 8))(v190, v193);
  sub_10014148C(v189, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
  sub_1001781AC(v198, &qword_100E63A50);
  (*(void (**)(char *, uint64_t))(v185 + 8))(v197, v186);
  uint64_t v132 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  _s7Weather24LocationCompositionStateOwst_0(v124, 0, 1, v132);
  return sub_1001781AC(v122, &qword_100E63770);
}

uint64_t sub_10014148C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001414E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100EAC0B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v12[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory____lazy_storage___animationKind;
  swift_beginAccess();
  sub_10006DF38(v9, (uint64_t)v8, &qword_100EAC0B0);
  uint64_t v10 = type metadata accessor for BackgroundAnimationKind();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10) != 1) {
    return (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v8, v10);
  }
  sub_1001781AC((uint64_t)v8, &qword_100EAC0B0);
  sub_100016A28(a1);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 16))(v6, a1, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  sub_1001DF004((uint64_t)v6, v9, &qword_100EAC0B0);
  return swift_endAccess();
}

uint64_t sub_1001416B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_100189638();
  if (v5 && (sub_1001D23B8(), (v6 & 1) != 0))
  {
    a4(0);
    sub_100162E4C();
    sub_10008B8B4();
    v7();
    uint64_t v8 = sub_100180994();
  }
  else
  {
    a4(0);
    uint64_t v8 = sub_100162E38();
  }

  return _s7Weather24LocationCompositionStateOwst_0(v8, v9, v10, v11);
}

uint64_t sub_100141760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001416B0(a1, a2, a3, (void (*)(void))&type metadata accessor for WeatherCondition);
}

uint64_t sub_100141778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001417E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100141848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001418B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_10017DF08(&qword_100E6B8D0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  sub_100109328(v9);
  uint64_t v167 = type metadata accessor for WeatherFormatPlaceholder();
  sub_10017C83C();
  uint64_t v153 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  uint64_t v151 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_10017C83C();
  uint64_t v150 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v149 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  uint64_t v18 = sub_100109328((uint64_t)&v144 - v17);
  uint64_t v19 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(v18);
  sub_10017C83C();
  uint64_t v166 = v20;
  __chkstk_darwin(v21);
  uint64_t v165 = (char *)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100109770();
  uint64_t v156 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100109770();
  uint64_t v175 = v26;
  sub_1001626D4();
  __chkstk_darwin(v27);
  sub_100109770();
  uint64_t v160 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  sub_100109770();
  uint64_t v146 = v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  sub_100164AF0();
  __chkstk_darwin(v32);
  sub_100109770();
  uint64_t v163 = v33;
  sub_1001626D4();
  __chkstk_darwin(v34);
  sub_100109770();
  uint64_t v147 = v35;
  sub_1001626D4();
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v144 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v42 = (char *)&v144 - v41;
  __chkstk_darwin(v40);
  uint64_t v148 = (uint64_t)&v144 - v43;
  uint64_t v44 = sub_10017DF08(qword_100E65268);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_100162EF8();
  uint64_t v159 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v144 - v48;
  uint64_t v50 = sub_10017DF08(&qword_100E65250);
  sub_10017C83C();
  uint64_t v52 = v51;
  __chkstk_darwin(v53);
  sub_100162EF8();
  uint64_t v164 = v54;
  sub_1001626D4();
  __chkstk_darwin(v55);
  sub_100109770();
  uint64_t v155 = v56;
  sub_1001626D4();
  __chkstk_darwin(v57);
  sub_100109770();
  uint64_t v158 = v58;
  sub_1001626D4();
  __chkstk_darwin(v59);
  sub_100109770();
  uint64_t v157 = v60;
  sub_1001626D4();
  __chkstk_darwin(v61);
  sub_100109770();
  uint64_t v161 = v62;
  sub_1001626D4();
  uint64_t v64 = __chkstk_darwin(v63);
  sub_10018B11C(v64, v65, v66, v67, v68, v69, v70, v71, v144);
  *a3 = a1;
  uint64_t v173 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v174 = a3;
  uint64_t v72 = (char *)a3 + v173[5];
  uint64_t v168 = v52;
  uint64_t v171 = *(void (**)(void))(v52 + 16);
  uint64_t v172 = v52 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v171)(v72, a2, v50);
  uint64_t v73 = *(void *)(a1 + 16);
  uint64_t v169 = v50;
  uint64_t v170 = a2;
  uint64_t v177 = a1;
  if (v73)
  {
    uint64_t v145 = v49;
    uint64_t v74 = v166;
    uint64_t v75 = a1 + ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80));
    sub_10014334C(v75, (uint64_t)v42, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v73 != 1)
    {
      unint64_t v77 = 1;
      while (v77 < *(void *)(v177 + 16))
      {
        sub_10014334C(v75 + *(void *)(v74 + 72) * v77, (uint64_t)v39, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        sub_1001433AC();
        if (static Measurement.< infix<A, B>(_:_:)())
        {
          sub_100142930((uint64_t)v42, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
          uint64_t result = sub_1001C28EC((uint64_t)v39, (uint64_t)v42);
        }
        else
        {
          uint64_t result = sub_100142930((uint64_t)v39, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        }
        if (v73 == ++v77) {
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_61;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v78 = v148;
    sub_1001C28EC((uint64_t)v42, v148);
    uint64_t v79 = (uint64_t)v145;
    uint64_t v50 = v169;
    id v81 = v171;
    uint64_t v80 = v172;
    sub_100163E30();
    v81();
    sub_100142930(v78, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    _s7Weather24LocationCompositionStateOwst_0(v79, 0, 1, v50);
  }
  else
  {
    uint64_t v74 = v166;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 1, 1, v50);
    swift_bridgeObjectRetain();
    id v81 = v171;
    uint64_t v80 = v172;
    uint64_t v79 = (uint64_t)v49;
  }
  uint64_t v82 = v161;
  sub_100163E30();
  v81();
  uint64_t v83 = v50;
  if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v50) == 1)
  {
    uint64_t v84 = *(void (**)(void))(v168 + 32);
    sub_10017B3D0();
    sub_1001627D4();
    v84();
    sub_100178110(v79, qword_100E65268);
  }
  else
  {
    uint64_t v80 = v168;
    sub_100127BA4();
    v85();
    uint64_t v84 = *(void (**)(void))(v80 + 32);
    uint64_t v86 = sub_10017B3D0();
    ((void (*)(uint64_t, uint64_t, uint64_t))v84)(v86, v79, v83);
  }
  uint64_t v87 = v177;
  uint64_t v88 = (uint64_t)v163;
  uint64_t v89 = (char *)v174 + v173[6];
  uint64_t v162 = v82;
  uint64_t v163 = v84;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v84)(v89, v80, v83);
  uint64_t v176 = v19;
  if (v73)
  {
    if (!*(void *)(v87 + 16))
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    sub_100184504();
    sub_10014334C(v80, v88, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t result = swift_bridgeObjectRetain();
    if (v73 != 1)
    {
      unint64_t v90 = 1;
      while (v90 < *(void *)(v87 + 16))
      {
        sub_10014334C(v80 + *(void *)(v74 + 72) * v90, v3, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        sub_1001433AC();
        if (static Measurement.< infix<A, B>(_:_:)())
        {
          sub_100142930(v88, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
          uint64_t result = sub_1001C28EC(v3, v88);
        }
        else
        {
          uint64_t result = sub_100142930(v3, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        }
        ++v90;
        uint64_t v87 = v177;
        if (v73 == v90) {
          goto LABEL_23;
        }
      }
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v91 = v147;
    sub_1001C28EC(v88, v147);
    uint64_t v92 = v159;
    uint64_t v83 = v169;
    uint64_t v93 = v171;
    ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v159, v91 + *(int *)(v19 + 32), v169);
    sub_100142930(v91, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t v94 = 0;
  }
  else
  {
    uint64_t v94 = 1;
    uint64_t v93 = v171;
    uint64_t v92 = v159;
  }
  _s7Weather24LocationCompositionStateOwst_0(v92, v94, 1, v83);
  uint64_t v95 = v158;
  ((void (*)(uint64_t, uint64_t, uint64_t))v93)(v158, v170, v83);
  int v96 = _s7Weather24LocationCompositionStateOwet_0(v92, 1, v83);
  uint64_t v97 = (uint64_t)v174;
  uint64_t v98 = v92;
  uint64_t v99 = v160;
  if (v96 == 1)
  {
    uint64_t v100 = v157;
    double v101 = v163;
    ((void (*)(uint64_t, uint64_t, uint64_t))v163)(v157, v95, v83);
    sub_100178110(v98, qword_100E65268);
  }
  else
  {
    sub_100127BA4();
    v102();
    uint64_t v100 = v157;
    uint64_t v103 = v92;
    double v101 = v163;
    ((void (*)(uint64_t, uint64_t, uint64_t))v163)(v157, v103, v83);
  }
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v101)(v97 + v173[7], v100, v83);
  if (v73)
  {
    uint64_t v104 = (uint64_t)v165;
    if (!*(void *)(v87 + 16))
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    uint64_t v105 = v74;
    sub_100184504();
    sub_10014334C(v97, v99, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v106 = v73;
    BOOL v107 = v73 == 1;
    uint64_t v108 = v175;
    if (!v107)
    {
      unint64_t v109 = 1;
      while (v109 < *(void *)(v87 + 16))
      {
        sub_10014334C(v97 + *(void *)(v74 + 72) * v109, v108, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        uint64_t v110 = String.count.getter();
        if (v110 >= String.count.getter())
        {
          uint64_t result = sub_100142930(v108, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        }
        else
        {
          sub_100142930(v99, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
          uint64_t result = sub_1001C28EC(v108, v99);
        }
        ++v109;
        uint64_t v108 = v175;
        if (v106 == v109) {
          goto LABEL_37;
        }
      }
      goto LABEL_62;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    uint64_t v111 = v146;
    sub_1001C28EC(v99, v146);
    uint64_t v112 = (uint64_t *)(v111 + *(int *)(v176 + 72));
    uint64_t v113 = *v112;
    uint64_t v114 = v112[1];
    swift_bridgeObjectRetain();
    sub_100142930(v111, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t v115 = v155;
    uint64_t v73 = v106;
    uint64_t v83 = v169;
    uint64_t v116 = v170;
  }
  else
  {
    uint64_t v113 = 0;
    uint64_t v114 = 0;
    uint64_t v116 = v170;
    uint64_t v105 = v74;
    uint64_t v104 = (uint64_t)v165;
    uint64_t v115 = v155;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v115, v116, v83);
  if (v114)
  {
    uint64_t v117 = *(void (**)(void))(v168 + 8);
    sub_100127BA4();
    uint64_t result = v118();
    uint64_t v119 = v176;
    uint64_t v120 = v156;
  }
  else
  {
    static WeatherFormatStyle<>.weather.getter();
    NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
    uint64_t v175 = *(void *)(v150 + 8);
    sub_10016285C();
    v121();
    (*(void (**)(uint64_t, void, uint64_t))(v153 + 104))(v152, enum case for WeatherFormatPlaceholder.none(_:), v167);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1001A4CBC((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v113 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v114 = v122;
    swift_release();
    uint64_t v120 = v156;
    uint64_t v105 = v166;
    sub_100127BA4();
    v123();
    uint64_t v87 = v177;
    sub_10016285C();
    v124();
    uint64_t v104 = (uint64_t)v165;
    uint64_t v117 = *(void (**)(void))(v168 + 8);
    sub_100127BA4();
    uint64_t result = v125();
    uint64_t v119 = v176;
  }
  uint64_t v126 = (void *)((char *)v174 + v173[8]);
  *uint64_t v126 = v113;
  v126[1] = v114;
  if (v73)
  {
    if (!*(void *)(v87 + 16))
    {
LABEL_66:
      __break(1u);
      return result;
    }
    uint64_t v127 = v105;
    sub_100184504();
    sub_10014334C(v113, v120, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t result = swift_bridgeObjectRetain();
    if (v73 != 1)
    {
      unint64_t v128 = 1;
      while (v128 < *(void *)(v87 + 16))
      {
        sub_10014334C(v113 + *(void *)(v127 + 72) * v128, v104, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        uint64_t v129 = String.count.getter();
        if (v129 >= String.count.getter())
        {
          uint64_t result = sub_100142930(v104, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        }
        else
        {
          sub_100142930(v120, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
          uint64_t result = sub_1001C28EC(v104, v120);
        }
        ++v128;
        uint64_t v127 = v105;
        if (v73 == v128) {
          goto LABEL_51;
        }
      }
      goto LABEL_63;
    }
LABEL_51:
    swift_bridgeObjectRelease();
    uint64_t v130 = v154;
    sub_1001C28EC(v120, v154);
    uint64_t v131 = 0;
  }
  else
  {
    uint64_t v131 = 1;
    uint64_t v130 = v154;
  }
  _s7Weather24LocationCompositionStateOwst_0(v130, v131, 1, v119);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v130, 1, v119) == 1)
  {
    sub_100178110(v130, &qword_100E6B8D0);
    uint64_t v132 = 0;
    uint64_t v133 = 0;
  }
  else
  {
    uint64_t v134 = (uint64_t *)(v130 + *(int *)(v119 + 68));
    uint64_t v132 = *v134;
    uint64_t v133 = v134[1];
    swift_bridgeObjectRetain();
    sub_100142930(v130, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  }
  uint64_t v135 = v169;
  ((void (*)(uint64_t, uint64_t, uint64_t))v171)(v164, v170, v169);
  if (v133)
  {
    sub_100183838();
    v117();
    sub_100183838();
    uint64_t result = ((uint64_t (*)(void))v117)();
  }
  else
  {
    static WeatherFormatStyle<>.weather.getter();
    NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
    uint64_t v177 = *(void *)(v150 + 8);
    sub_100164938();
    v136();
    uint64_t v137 = v153;
    uint64_t v138 = *(void (**)(uint64_t, void, uint64_t))(v153 + 104);
    uint64_t v176 = (uint64_t)v117;
    uint64_t v139 = v152;
    v138(v152, enum case for WeatherFormatPlaceholder.none(_:), v167);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1001A4CBC((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v132 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v133 = v140;
    swift_release();
    uint64_t v141 = (void (*)(void))v176;
    sub_100183838();
    v141();
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v139, v167);
    sub_100164938();
    v142();
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v141)(v164, v135);
  }
  uint64_t v143 = (void *)((char *)v174 + v173[9]);
  *uint64_t v143 = v132;
  v143[1] = v133;
  return result;
}

uint64_t sub_100142888(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001428DC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100142930(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100142984(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  uint64_t v28 = v4;
  ((void (*)(uint64_t))v27)(a1);
  uint64_t v5 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + v5[7];
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v8 = (void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  uint64_t v26 = *v8;
  (*v8)(v6, v7);
  uint64_t v9 = a1 + v5[8];
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(a1 + v5[9], v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + v5[15];
  uint64_t v13 = type metadata accessor for Precipitation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11(a1 + a2[5], v10);
  v11(a1 + a2[6], v10);
  uint64_t v14 = a1 + a2[7];
  if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v10)) {
    v11(v14, v10);
  }
  swift_release();
  uint64_t v15 = a1 + a2[14];
  swift_release();
  swift_release();
  uint64_t v16 = v15 + *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, (uint64_t)v5))
  {
    v27(v16, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26(v16 + v5[7], v7);
    v11(v16 + v5[8], v10);
    v11(v16 + v5[9], v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v16 + v5[15];
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v17, v13);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = a1 + a2[15];
  uint64_t v19 = sub_10017DF08(&qword_100E73A80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = a1 + a2[16];
  uint64_t v21 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  sub_10018F6D8(*(void *)(a1 + a2[17]), *(unsigned char *)(a1 + a2[17] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[18]), *(unsigned char *)(a1 + a2[18] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[19]), *(unsigned char *)(a1 + a2[19] + 8));
  uint64_t v22 = a1 + a2[20];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v24 = a1 + a2[22];
  if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v28)) {
    v27(v24, v28);
  }
  sub_10017DF08(&qword_100E7DDF8);

  return swift_release();
}

uint64_t sub_100142F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, (uint64_t)v6))
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + v6[7];
    uint64_t v9 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = v5 + v6[8];
    uint64_t v11 = sub_10017DF08(&qword_100E65250);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    v12(v10, v11);
    v12(v5 + v6[9], v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v5 + v6[15];
    uint64_t v14 = type metadata accessor for Precipitation();
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = a1 + *(int *)(a2 + 24);
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v15 + v6[7];
  uint64_t v18 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v15 + v6[8];
  uint64_t v20 = sub_10017DF08(&qword_100E65250);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
  v21(v19, v20);
  v21(v15 + v6[9], v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v15 + v6[15];
  uint64_t v23 = type metadata accessor for Precipitation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10014334C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_1001433AC()
{
  unint64_t result = qword_100E659A0;
  if (!qword_100E659A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E659A0);
  }
  return result;
}

uint64_t type metadata accessor for DailyForecastRowViewButtonStyle()
{
  uint64_t result = qword_100E6B930;
  if (!qword_100E6B930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100143434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>)
{
  uint64_t v129 = a1;
  uint64_t v114 = a3;
  uint64_t v112 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v112);
  uint64_t v113 = (uint64_t *)((char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10017DF08(&qword_100E6D908);
  __chkstk_darwin(v15 - 8);
  uint64_t v127 = (uint64_t *)((char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v126 = sub_10017DF08(&qword_100E6B8C0);
  __chkstk_darwin(v126);
  unint64_t v128 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_10017DF08(&qword_100E6B9A0);
  uint64_t v18 = __chkstk_darwin(v132);
  uint64_t v125 = (uint64_t)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v117 = (char *)&v105 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6B8D0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v121 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v130 = (uint64_t)&v105 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v131 = (uint64_t)&v105 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v108 = (uint64_t)&v105 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v116 = (uint64_t)&v105 - v31;
  __chkstk_darwin(v30);
  uint64_t v115 = (uint64_t)&v105 - v32;
  uint64_t v33 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v33 - 8);
  uint64_t v133 = (uint64_t)&v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10017DF08(&qword_100E65250);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v105 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v105 - v40;
  uint64_t v42 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v43 = __chkstk_darwin(v42);
  uint64_t v109 = (uint64_t)&v105 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v105 - v45;
  uint64_t v47 = type metadata accessor for DailyComponentForecastRowView();
  __chkstk_darwin(v47 - 8);
  uint64_t v124 = (uint64_t)&v105 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10017DF08(&qword_100E79AB0);
  __chkstk_darwin(v110);
  uint64_t v111 = (uint64_t)&v105 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v46;
  sub_100145458(a2, (uint64_t)v46, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  uint64_t v50 = type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v51 = (uint64_t)v134;
  uint64_t v52 = (char *)v134 + *(int *)(v50 + 24);
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  uint64_t v122 = v41;
  v53(v41, v52, v35);
  uint64_t v106 = v50;
  uint64_t v54 = v42;
  uint64_t v55 = v51 + *(int *)(v50 + 28);
  uint64_t v56 = (uint64_t *)v51;
  int v123 = v39;
  uint64_t v118 = v35;
  uint64_t v57 = (uint64_t)v117;
  BOOL v107 = (void (*)(uint64_t, char *, uint64_t))v53;
  v53(v39, (char *)v55, v35);
  uint64_t v58 = v115;
  uint64_t v59 = a2;
  uint64_t v60 = v116;
  uint64_t v119 = v59;
  sub_100145458(v59, v115, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, v42);
  sub_1001465CC(*v56, v60);
  uint64_t v61 = v57 + *(int *)(v132 + 48);
  sub_10006DF38(v58, v57, &qword_100E6B8D0);
  sub_10006DF38(v60, v61, &qword_100E6B8D0);
  if (_s7Weather24LocationCompositionStateOwet_0(v57, 1, v42) == 1)
  {
    sub_100178110(v60, &qword_100E6B8D0);
    sub_100178110(v58, &qword_100E6B8D0);
    int v62 = _s7Weather24LocationCompositionStateOwet_0(v61, 1, v42);
    uint64_t v63 = v130;
    if (v62 == 1)
    {
      sub_100178110(v57, &qword_100E6B8D0);
      uint64_t v64 = (uint64_t)v121;
      uint64_t v65 = v131;
LABEL_8:
      uint64_t v69 = v133;
      uint64_t v68 = v134;
      uint64_t v72 = v118;
      v107(v133, (char *)v134 + *(int *)(v106 + 20), v118);
      uint64_t v67 = 0;
      goto LABEL_11;
    }
    goto LABEL_6;
  }
  uint64_t v66 = v108;
  sub_10006DF38(v57, v108, &qword_100E6B8D0);
  if (_s7Weather24LocationCompositionStateOwet_0(v61, 1, v42) == 1)
  {
    sub_100178110(v60, &qword_100E6B8D0);
    sub_100178110(v58, &qword_100E6B8D0);
    sub_1001440E4(v66, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t v63 = v130;
LABEL_6:
    sub_100178110(v57, &qword_100E6B9A0);
    uint64_t v67 = 1;
    uint64_t v69 = v133;
    uint64_t v68 = v134;
    uint64_t v64 = (uint64_t)v121;
    uint64_t v65 = v131;
    goto LABEL_10;
  }
  uint64_t v70 = v109;
  sub_100144A28(v61, v109, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  char v71 = sub_1001444F4(v66, v70);
  sub_1001440E4(v70, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  sub_100178110(v60, &qword_100E6B8D0);
  sub_100178110(v58, &qword_100E6B8D0);
  sub_1001440E4(v66, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  sub_100178110(v57, &qword_100E6B8D0);
  uint64_t v64 = (uint64_t)v121;
  uint64_t v63 = v130;
  uint64_t v65 = v131;
  if (v71) {
    goto LABEL_8;
  }
  uint64_t v67 = 1;
  uint64_t v69 = v133;
  uint64_t v68 = v134;
LABEL_10:
  uint64_t v72 = v118;
LABEL_11:
  _s7Weather24LocationCompositionStateOwst_0(v69, v67, 1, v72);
  uint64_t v73 = type metadata accessor for DailyComponentRowView(0);
  uint64_t v74 = *(int *)(v73 + 24);
  uint64_t v75 = (uint64_t *)((char *)v68 + *(int *)(v73 + 20));
  uint64_t v76 = v75[1];
  uint64_t v134 = (uint64_t *)*v75;
  double v77 = *(double *)((char *)v68 + v74);
  sub_100145458(v119, v65, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  _s7Weather24LocationCompositionStateOwst_0(v65, 0, 1, v54);
  sub_1001465F8(*v68, v63);
  uint64_t v78 = v125;
  uint64_t v79 = v125 + *(int *)(v132 + 48);
  sub_10006DF38(v65, v125, &qword_100E6B8D0);
  sub_10006DF38(v63, v79, &qword_100E6B8D0);
  if (_s7Weather24LocationCompositionStateOwet_0(v78, 1, v54) == 1)
  {
    swift_retain();
    sub_100178110(v63, &qword_100E6B8D0);
    sub_100178110(v65, &qword_100E6B8D0);
    int v80 = _s7Weather24LocationCompositionStateOwet_0(v79, 1, v54);
    if (v80 == 1) {
      id v81 = &qword_100E6B8D0;
    }
    else {
      id v81 = &qword_100E6B9A0;
    }
    if (v80 == 1) {
      char v82 = -1;
    }
    else {
      char v82 = 0;
    }
  }
  else
  {
    sub_10006DF38(v78, v64, &qword_100E6B8D0);
    if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v54) == 1)
    {
      swift_retain();
      sub_100178110(v130, &qword_100E6B8D0);
      sub_100178110(v131, &qword_100E6B8D0);
      sub_1001440E4(v64, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      char v82 = 0;
      id v81 = &qword_100E6B9A0;
    }
    else
    {
      uint64_t v83 = v109;
      sub_100144A28(v79, v109, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      swift_retain();
      char v82 = sub_1001444F4(v64, v83);
      sub_1001440E4(v83, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      id v81 = &qword_100E6B8D0;
      sub_100178110(v130, &qword_100E6B8D0);
      sub_100178110(v131, &qword_100E6B8D0);
      sub_1001440E4(v64, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    }
  }
  sub_100178110(v78, v81);
  uint64_t v84 = (uint64_t)v128;
  Binding.projectedValue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v86 = (uint64_t)v127;
  *uint64_t v127 = KeyPath;
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  int v87 = v82 & 1;
  uint64_t v88 = v124;
  uint64_t result = sub_1001466E8((uint64_t)v120, (uint64_t)v122, (uint64_t)v123, v133, (uint64_t)v134, v76, v87, v84, v124, a5, a6, a7, a8, a4, v77, 4.0, v86);
  v136._uint64_t countAndFlagsBits = 1601790308;
  v136._object = (void *)0xE400000000000000;
  if (__OFADD__(v129, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v135 = v129 + 1;
    v90._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v90);
    swift_bridgeObjectRelease();
    object = v136._object;
    uint64_t v92 = v113;
    *uint64_t v113 = v136._countAndFlagsBits;
    v92[1] = (uint64_t)object;
    type metadata accessor for AutomationCellInfo(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v93 = v111;
    sub_10014EE84((uint64_t)v92, v94, v95, v96, v97, v98, v99, v100, v105, v106, (uint64_t)v107, v108, v109, v110, v111, v112, (uint64_t)v113, v114, v115,
      v116);
    sub_1001440E4((uint64_t)v92, (void (*)(void))type metadata accessor for AutomationInfo);
    sub_1001440E4(v88, (void (*)(void))type metadata accessor for DailyComponentForecastRowView);
    id v101 = [self mainBundle];
    v137._uint64_t countAndFlagsBits = 0xD00000000000004FLL;
    v137._object = (void *)0x8000000100CA4000;
    v102._object = (void *)0x8000000100CA3FE0;
    v102._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v103._uint64_t countAndFlagsBits = 0;
    v103._object = (void *)0xE000000000000000;
    Swift::String v104 = NSLocalizedString(_:tableName:bundle:value:comment:)(v102, (Swift::String_optional)0, (NSBundle)v101, v103, v137);

    Swift::String v136 = v104;
    sub_10014EF64();
    sub_10014A85C();
    View.accessibilityHint<A>(_:)();
    swift_bridgeObjectRelease();
    return sub_100178110(v93, &qword_100E79AB0);
  }
  return result;
}

uint64_t sub_1001440D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007E51B0);
}

uint64_t sub_1001440E4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100144138(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + v4[6], v6);
  v7(a1 + v4[7], v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v8 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  uint64_t v10 = a1 + a2[11];
  uint64_t v11 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, (uint64_t)v13))
  {
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v12 + v13[7];
    uint64_t v16 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    v7(v12 + v13[8], v6);
    v7(v12 + v13[9], v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v12 + v13[15];
    uint64_t v18 = type metadata accessor for Precipitation();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10017DF08(&qword_100E7E838);
  swift_release();

  return swift_release();
}

uint64_t sub_1001444F4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for Precipitation();
  sub_10017C83C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E96D90);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10016279C();
  uint64_t v15 = sub_10017DF08(&qword_100E6B8C8);
  uint64_t v16 = sub_100109308(v15);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  sub_100164AF0();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v70 - v21;
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_51;
  }
  uint64_t v72 = v12;
  uint64_t v73 = v8;
  uint64_t v23 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  sub_10017FC4C();
  BOOL v26 = v26 && v24 == v25;
  if (!v26)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    char v27 = sub_1001190E0();
    if ((v28 & 1) == 0) {
      return v27 & 1;
    }
  }
  sub_10017FC4C();
  if (!v26 || v29 != v30)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    char v27 = sub_1001190E0();
    if ((v32 & 1) == 0) {
      return v27 & 1;
    }
  }
  if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
    goto LABEL_51;
  }
  uint64_t v70 = v6;
  uint64_t v71 = v2;
  sub_1001433AC();
  if ((sub_1001A3400() & 1) == 0 || (sub_1001A3400() & 1) == 0) {
    goto LABEL_51;
  }
  uint64_t v33 = (int *)v23;
  sub_10019DF48();
  if (v34)
  {
    uint64_t v38 = v70;
    uint64_t v39 = v71;
    if (!v35) {
      goto LABEL_51;
    }
    if (*v36 != *v37 || v34 != v35)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      char v27 = sub_1001190E0();
      if ((v41 & 1) == 0) {
        return v27 & 1;
      }
    }
  }
  else
  {
    uint64_t v38 = v70;
    uint64_t v39 = v71;
    if (v35) {
      goto LABEL_51;
    }
  }
  sub_10019DF48();
  if (!v42)
  {
    if (!v43) {
      goto LABEL_33;
    }
LABEL_51:
    char v27 = 0;
    return v27 & 1;
  }
  if (!v43) {
    goto LABEL_51;
  }
  if (*v44 != *v45 || v42 != v43)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    char v27 = sub_1001190E0();
    if ((v47 & 1) == 0) {
      return v27 & 1;
    }
  }
LABEL_33:
  if (*(double *)(a1 + v33[12]) != *(double *)(a2 + v33[12])
    || *(unsigned __int8 *)(a1 + v33[13]) != *(unsigned __int8 *)(a2 + v33[13]))
  {
    goto LABEL_51;
  }
  sub_10017FC4C();
  if (!v26 || v48 != v49)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    char v27 = sub_1001190E0();
    if ((v51 & 1) == 0) {
      return v27 & 1;
    }
  }
  sub_1001A4C54(a1 + v33[15], (uint64_t)v22);
  sub_1001A4C54(a2 + v33[15], v3);
  uint64_t v52 = v39 + *(int *)(v13 + 48);
  sub_1001A4C54((uint64_t)v22, v39);
  sub_1001A4C54(v3, v52);
  sub_1001630A0(v39);
  if (!v26)
  {
    sub_1001A4C54(v39, (uint64_t)v19);
    sub_1001630A0(v52);
    if (!v53)
    {
      sub_1001627D4();
      v54();
      sub_1001A4CBC(&qword_100E6ED00, (void (*)(uint64_t))&type metadata accessor for Precipitation);
      LODWORD(v70) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v55 = v33;
      uint64_t v56 = *(void (**)(void))(v73 + 8);
      sub_1001629F8();
      v56();
      sub_100178110(v3, &qword_100E6B8C8);
      sub_100178110((uint64_t)v22, &qword_100E6B8C8);
      sub_1001629F8();
      v56();
      uint64_t v33 = v55;
      sub_100178110(v71, &qword_100E6B8C8);
      if ((v70 & 1) == 0) {
        goto LABEL_51;
      }
      goto LABEL_50;
    }
    sub_100178110(v3, &qword_100E6B8C8);
    sub_100178110((uint64_t)v22, &qword_100E6B8C8);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v19, v38);
    goto LABEL_48;
  }
  sub_100178110(v3, &qword_100E6B8C8);
  sub_100178110((uint64_t)v22, &qword_100E6B8C8);
  sub_1001630A0(v52);
  if (!v26)
  {
LABEL_48:
    sub_100178110(v39, &qword_100E96D90);
    goto LABEL_51;
  }
  sub_100178110(v39, &qword_100E6B8C8);
LABEL_50:
  if (*(unsigned __int8 *)(a1 + v33[16]) != *(unsigned __int8 *)(a2 + v33[16])) {
    goto LABEL_51;
  }
  sub_10017FC4C();
  BOOL v60 = v26 && v58 == v59;
  if (v60 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v27 = sub_1001190E0(), (v61 & 1) != 0))
  {
    sub_10017FC4C();
    BOOL v64 = v26 && v62 == v63;
    if (v64 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v27 = sub_1001190E0(), (v65 & 1) != 0))
    {
      sub_10017FC4C();
      BOOL v68 = v26 && v66 == v67;
      if (v68 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v27 = sub_1001190E0(), (v69 & 1) != 0)) {
        char v27 = sub_1001D4180(*(void *)(a1 + v33[20]), *(void *)(a2 + v33[20]));
      }
    }
  }
  return v27 & 1;
}

uint64_t sub_100144A28(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100144A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, void (**a6)(char *, uint64_t)@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>)
{
  uint64_t v102 = a2;
  uint64_t v103 = a5;
  int v104 = a4;
  uint64_t v98 = a3;
  uint64_t v107 = a1;
  uint64_t v93 = a6;
  uint64_t v101 = type metadata accessor for DailyComponentView(0);
  __chkstk_darwin(v101);
  uint64_t v100 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DailyComponentRowView(0);
  uint64_t v18 = (int *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v99 = (uint64_t)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10017DF08(&qword_100E7E930);
  __chkstk_darwin(v87);
  uint64_t v89 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E7E938);
  __chkstk_darwin(v21 - 8);
  Swift::String v90 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10017DF08(&qword_100E7E940);
  uint64_t v23 = __chkstk_darwin(v88);
  uint64_t v92 = (uint64_t)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v86 = (uint64_t)&v85 - v26;
  __chkstk_darwin(v25);
  uint64_t v91 = (uint64_t)&v85 - v27;
  uint64_t v28 = type metadata accessor for PrimaryDividerStyle();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for Divider();
  uint64_t v95 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v85 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10017DF08(&qword_100E66F20);
  uint64_t v97 = *(void (***)(char *, uint64_t))(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v36 = (char *)&v85 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10017DF08(&qword_100E7E948);
  uint64_t v94 = *(void **)(v106 - 8);
  uint64_t v37 = __chkstk_darwin(v106);
  uint64_t v39 = (void (**)(char *, uint64_t))((char *)&v85 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v37);
  uint64_t v105 = (char *)&v85 - v40;
  Divider.init()();
  static DividerStyle<>.primary.getter();
  uint64_t v41 = sub_100145810(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
  uint64_t v42 = sub_100145810(&qword_100E66F40, (void (*)(uint64_t))&type metadata accessor for PrimaryDividerStyle);
  View.dividerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v34, v32);
  uint64_t v43 = v98;
  sub_100145F2C(v107);
  uint64_t v108 = v32;
  uint64_t v109 = v28;
  uint64_t v110 = v41;
  uint64_t v111 = v42;
  uint64_t v44 = v94;
  swift_getOpaqueTypeConformance2();
  uint64_t v45 = v96;
  View.isHidden(_:defaultAccessibilityHidden:)();
  uint64_t v46 = v36;
  uint64_t v47 = (uint64_t)v100;
  v97[1](v46, v45);
  uint64_t v48 = (void (*)(char *, void (**)(char *, uint64_t), uint64_t))v44[4];
  uint64_t v97 = v39;
  uint64_t v49 = v39;
  uint64_t v50 = (int *)v101;
  v48(v105, v49, v106);
  uint64_t v51 = v99;
  sub_100145458(v43, v99, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel);
  uint64_t v52 = (uint64_t *)(v43 + v50[6]);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  uint64_t v55 = *(void *)(v43 + v50[7]);
  uint64_t v56 = v43;
  uint64_t v57 = v51;
  sub_100145458(v102, v51 + v18[9], (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  swift_retain();
  sub_10017DF08(&qword_100E7E838);
  uint64_t v58 = v103;
  State.projectedValue.getter();
  uint64_t v59 = (void *)(v51 + v18[7]);
  *uint64_t v59 = v54;
  v59[1] = v53;
  uint64_t v60 = v107;
  *(void *)(v51 + v18[8]) = v55;
  *(void *)(v51 + v18[10]) = v60;
  char v61 = (double *)(v51 + v18[11]);
  *char v61 = a7;
  v61[1] = a8;
  uint64_t v62 = (double *)(v51 + v18[12]);
  *uint64_t v62 = a9;
  v62[1] = a10;
  *(double *)(v51 + v18[13]) = a11;
  *(unsigned char *)(v51 + v18[14]) = v104;
  sub_100145458(v56, v47, (void (*)(void))type metadata accessor for DailyComponentView);
  if (v60 == v58)
  {
    if (*(void *)(v47 + v50[13]))
    {
      type metadata accessor for TipCoordinator();
      swift_retain();
      ObservableResolver.resolve<A>(_:)();
      swift_release();
      if (v108)
      {
        char v63 = sub_100135888();
        swift_release();
        sub_1001440E4(v47, (void (*)(void))type metadata accessor for DailyComponentView);
        double v64 = 10.0;
        if (v63) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      __break(1u);
    }
    type metadata accessor for ObservableResolver();
    sub_100145810((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  sub_1001440E4(v47, (void (*)(void))type metadata accessor for DailyComponentView);
LABEL_7:
  double v64 = 0.0;
LABEL_8:
  uint64_t v65 = v89;
  sub_100145458(v57, v89, (void (*)(void))type metadata accessor for DailyComponentRowView);
  *(double *)(v65 + *(int *)(v87 + 36)) = v64;
  sub_1001440E4(v57, (void (*)(void))type metadata accessor for DailyComponentRowView);
  if (v60 == v58) {
    unsigned __int8 v66 = 0;
  }
  else {
    unsigned __int8 v66 = 6;
  }
  uint64_t v67 = (uint64_t)v90;
  sub_1001460DC(v66);
  sub_100178110(v65, &qword_100E7E930);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v69 = static Alignment.bottom.getter();
  uint64_t v71 = v70;
  uint64_t v72 = v86;
  sub_10006DF38(v67, v86, &qword_100E7E938);
  uint64_t v73 = (uint64_t *)(v72 + *(int *)(v88 + 36));
  *uint64_t v73 = KeyPath;
  v73[1] = v69;
  v73[2] = v71;
  sub_100178110(v67, &qword_100E7E938);
  uint64_t v74 = v72;
  uint64_t v75 = v91;
  sub_10024D364(v74, v91, &qword_100E7E940);
  uint64_t v76 = (void (*)(void (**)(char *, uint64_t), char *, uint64_t))v44[2];
  double v77 = v97;
  uint64_t v79 = v105;
  uint64_t v78 = v106;
  v76(v97, v105, v106);
  uint64_t v80 = v92;
  sub_10006DF38(v75, v92, &qword_100E7E940);
  id v81 = v93;
  v76(v93, (char *)v77, v78);
  uint64_t v82 = sub_10017DF08(&qword_100E7E950);
  sub_10006DF38(v80, (uint64_t)v81 + *(int *)(v82 + 48), &qword_100E7E940);
  sub_100178110(v75, &qword_100E7E940);
  uint64_t v83 = (void (*)(char *, uint64_t))v44[1];
  v83(v79, v78);
  sub_100178110(v80, &qword_100E7E940);
  return ((uint64_t (*)(void, uint64_t))v83)(v77, v78);
}

uint64_t sub_100145458(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001454AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for TimeZone();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_10017DF08(&qword_100E65250);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  v24(a1 + a3[9], a2 + a3[9], v23);
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = (void *)(a1 + v26);
  uint64_t v31 = (void *)(a2 + v26);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[14];
  uint64_t v35 = a3[15];
  uint64_t v36 = (void *)(a1 + v34);
  uint64_t v37 = (void *)(a2 + v34);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  uint64_t v39 = (void *)(a1 + v35);
  uint64_t v40 = (const void *)(a2 + v35);
  uint64_t v41 = type metadata accessor for Precipitation();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
  {
    uint64_t v42 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
  }
  uint64_t v43 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  uint64_t v47 = a3[18];
  uint64_t v48 = a3[19];
  uint64_t v49 = (void *)(a1 + v47);
  uint64_t v50 = (void *)(a2 + v47);
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  uint64_t v52 = (void *)(a1 + v48);
  uint64_t v53 = (void *)(a2 + v48);
  uint64_t v54 = v53[1];
  *uint64_t v52 = *v53;
  v52[1] = v54;
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for DailyComponentView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E7E898);
}

uint64_t type metadata accessor for DailyComponentRowView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7E9E0);
}

uint64_t sub_1001457CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Date();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100145810(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_100145858(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  uint64_t v12 = v6[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = v6[9];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  uint64_t v20 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  uint64_t v24 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  else
  {
    *(void *)uint64_t v25 = *(void *)v26;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = *(void *)v30;
  char v32 = v30[8];
  sub_100195B7C(*(void *)v30, v32);
  *(void *)uint64_t v29 = v31;
  v29[8] = v32;
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = *(void *)v35;
  char v37 = v35[8];
  sub_100195B7C(*(void *)v35, v37);
  *(void *)uint64_t v34 = v36;
  v34[8] = v37;
  uint64_t v38 = a3[11];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  uint64_t v42 = a3[12];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, (uint64_t)v45))
  {
    uint64_t v46 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v47 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v43, v44, v47);
    uint64_t v48 = v45[5];
    uint64_t v49 = &v43[v48];
    uint64_t v50 = &v44[v48];
    uint64_t v51 = *((void *)v50 + 1);
    *(void *)uint64_t v49 = *(void *)v50;
    *((void *)v49 + 1) = v51;
    uint64_t v52 = v45[6];
    uint64_t v53 = &v43[v52];
    uint64_t v54 = &v44[v52];
    char __dsta = v11;
    uint64_t v55 = *((void *)v54 + 1);
    *(void *)uint64_t v53 = *(void *)v54;
    *((void *)v53 + 1) = v55;
    uint64_t v56 = v45[7];
    uint64_t v93 = &v44[v56];
    uint64_t v94 = &v43[v56];
    uint64_t v57 = type metadata accessor for TimeZone();
    uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v92(v94, v93, v57);
    __dsta(&v43[v45[8]], &v44[v45[8]], v10);
    __dsta(&v43[v45[9]], &v44[v45[9]], v10);
    uint64_t v58 = v45[10];
    uint64_t v59 = &v43[v58];
    uint64_t v60 = &v44[v58];
    uint64_t v61 = *((void *)v60 + 1);
    *(void *)uint64_t v59 = *(void *)v60;
    *((void *)v59 + 1) = v61;
    uint64_t v62 = v45[11];
    char v63 = &v43[v62];
    double v64 = &v44[v62];
    uint64_t v65 = *((void *)v64 + 1);
    *(void *)char v63 = *(void *)v64;
    *((void *)v63 + 1) = v65;
    *(void *)&v43[v45[12]] = *(void *)&v44[v45[12]];
    v43[v45[13]] = v44[v45[13]];
    uint64_t v66 = v45[14];
    uint64_t v67 = &v43[v66];
    BOOL v68 = &v44[v66];
    uint64_t v69 = *((void *)v68 + 1);
    *(void *)uint64_t v67 = *(void *)v68;
    *((void *)v67 + 1) = v69;
    uint64_t v70 = v45[15];
    uint64_t v95 = &v44[v70];
    __dst = &v43[v70];
    uint64_t v71 = type metadata accessor for Precipitation();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v71))
    {
      uint64_t v72 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(__dst, v95, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(__dst, v95, v71);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v71);
    }
    v43[v45[16]] = v44[v45[16]];
    uint64_t v73 = v45[17];
    uint64_t v74 = &v43[v73];
    uint64_t v75 = &v44[v73];
    uint64_t v76 = *((void *)v75 + 1);
    *(void *)uint64_t v74 = *(void *)v75;
    *((void *)v74 + 1) = v76;
    uint64_t v77 = v45[18];
    uint64_t v78 = &v43[v77];
    uint64_t v79 = &v44[v77];
    uint64_t v80 = *((void *)v79 + 1);
    *(void *)uint64_t v78 = *(void *)v79;
    *((void *)v78 + 1) = v80;
    uint64_t v81 = v45[19];
    uint64_t v82 = &v43[v81];
    uint64_t v83 = &v44[v81];
    uint64_t v84 = *((void *)v83 + 1);
    *(void *)uint64_t v82 = *(void *)v83;
    *((void *)v82 + 1) = v84;
    *(void *)&v43[v45[20]] = *(void *)&v44[v45[20]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, (uint64_t)v45);
  }
  uint64_t v85 = sub_10017DF08(&qword_100E7E838);
  *(void *)&v43[*(int *)(v85 + 28)] = *(void *)&v44[*(int *)(v85 + 28)];
  uint64_t v86 = a3[13];
  uint64_t v87 = &a1[v86];
  uint64_t v88 = (uint64_t *)&a2[v86];
  uint64_t v90 = *v88;
  uint64_t v89 = v88[1];
  *(void *)uint64_t v87 = v90;
  *((void *)v87 + 1) = v89;
  swift_retain();
  swift_retain();
  return a1;
}

char *sub_100145E24(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10017DF08(&qword_100E65250);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = a3[9];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = &a1[v12];
  uint64_t v17 = &a2[v12];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100145F2C(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6B8D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DailyComponentView(0);
  sub_10017DF08(&qword_100E7E838);
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    sub_100178110((uint64_t)v5, &qword_100E6B8D0);
    return 0;
  }
  sub_100144A28((uint64_t)v5, (uint64_t)v8, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  uint64_t v9 = *v1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100635DD4((uint64_t)v8, v9);
  char v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t result = sub_1001440E4((uint64_t)v8, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  if (v12) {
    return 0;
  }
  if (v10 == a1) {
    return 1;
  }
  if (!__OFSUB__(a1, 1)) {
    return v10 == a1 - 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001460DC(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E7E930);
  __chkstk_darwin(v3);
  uint64_t v5 = &__src[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = sub_10017DF08(&qword_100E7E958);
  __chkstk_darwin(v6);
  uint64_t v8 = &__src[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = sub_10017DF08(&qword_100E7E960);
  __chkstk_darwin(v9);
  char v11 = &__src[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (v2 == 6)
  {
    sub_10006DF38(v1, (uint64_t)v5, &qword_100E7E930);
    sub_10006DF38((uint64_t)v5, (uint64_t)v8, &qword_100E7E930);
    swift_storeEnumTagMultiPayload();
    sub_100146368(&qword_100E7E968, &qword_100E7E960, (void (*)(void))sub_1001463E8);
    sub_1001463E8();
    _ConditionalContent<>.init(storage:)();
    uint64_t v12 = (uint64_t)v5;
    uint64_t v13 = &qword_100E7E930;
  }
  else
  {
    sub_1001D5750();
    sub_10006DF38(v1, (uint64_t)v11, &qword_100E7E930);
    memcpy(&v11[*(int *)(v9 + 36)], __src, 0x62uLL);
    sub_10006DF38((uint64_t)v11, (uint64_t)v8, &qword_100E7E960);
    swift_storeEnumTagMultiPayload();
    sub_100146368(&qword_100E7E968, &qword_100E7E960, (void (*)(void))sub_1001463E8);
    sub_1001463E8();
    _ConditionalContent<>.init(storage:)();
    uint64_t v12 = (uint64_t)v11;
    uint64_t v13 = &qword_100E7E960;
  }
  return sub_100178110(v12, v13);
}

uint64_t sub_100146368(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    sub_10021BEB8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001463E8()
{
  unint64_t result = qword_100E7E970;
  if (!qword_100E7E970)
  {
    sub_10018C6DC(&qword_100E7E930);
    sub_100145810(&qword_100E7E978, (void (*)(uint64_t))type metadata accessor for DailyComponentRowView);
    sub_1001246C8((unint64_t *)&unk_100EAAEC0, &qword_100E745B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E970);
  }
  return result;
}

uint64_t sub_1001464B8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = a2(0);
  if (v7) {
    sub_10014656C(a1+ ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80)), a4, a3);
  }
  uint64_t v9 = sub_1001A1650();

  return _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
}

uint64_t sub_10014656C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001465CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001464B8(a1, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel, a2);
}

uint64_t sub_1001465F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100146624(a1, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel, a2);
}

uint64_t sub_100146624@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v8 = v5 - 1;
    uint64_t v9 = a2(0);
    sub_100179EF0();
    sub_10014EBB0(a1+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v11 + 72) * v8, a4, a3);
    uint64_t v12 = a4;
    uint64_t v13 = 0;
    uint64_t v14 = 1;
    uint64_t v15 = v9;
  }
  else
  {
    a2(0);
    uint64_t v12 = sub_100162E38();
  }

  return _s7Weather24LocationCompositionStateOwst_0(v12, v13, v14, v15);
}

uint64_t sub_1001466E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, uint64_t a17)
{
  int v53 = a7;
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  uint64_t v54 = a8;
  uint64_t v55 = a17;
  uint64_t v57 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_100162EF8();
  uint64_t v56 = v30;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v51 - v32;
  sub_1001470EC(a1, a9, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  uint64_t v34 = (int *)type metadata accessor for DailyComponentForecastRowView();
  uint64_t v35 = a9 + v34[5];
  uint64_t v36 = sub_10017DF08(&qword_100E65250);
  sub_100162E4C();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32);
  v38(v35, a2, v36);
  v38(a9 + v34[6], a3, v36);
  sub_10024D364(a4, a9 + v34[7], qword_100E65268);
  uint64_t v39 = (double *)(a9 + v34[8]);
  *uint64_t v39 = a10;
  v39[1] = a11;
  uint64_t v40 = (double *)(a9 + v34[9]);
  *uint64_t v40 = a12;
  v40[1] = a13;
  *(double *)(a9 + v34[10]) = a14;
  uint64_t v41 = (void *)(a9 + v34[11]);
  uint64_t v42 = v52;
  *uint64_t v41 = v51;
  v41[1] = v42;
  *(double *)(a9 + v34[12]) = a15;
  *(unsigned char *)(a9 + v34[13]) = v53;
  sub_10024D364(v54, a9 + v34[14], &qword_100E6B8C0);
  double v58 = 50.0;
  sub_10014F1B0();
  ScaledMetric.init(wrappedValue:)();
  double v58 = a16;
  uint64_t v60 = 0x3FF0000000000000;
  sub_100146A70();
  ScaledValue.init(wrappedValue:step:)();
  uint64_t v43 = a9 + v34[17];
  *(void *)uint64_t v43 = swift_getKeyPath();
  *(unsigned char *)(v43 + 8) = 0;
  uint64_t v44 = a9 + v34[18];
  *(void *)uint64_t v44 = swift_getKeyPath();
  *(unsigned char *)(v44 + 8) = 0;
  uint64_t v45 = a9 + v34[19];
  *(void *)uint64_t v45 = swift_getKeyPath();
  *(unsigned char *)(v45 + 8) = 0;
  sub_10024D364(v55, a9 + v34[20], &qword_100E6D908);
  uint64_t v46 = (double *)(a9 + v34[21]);
  type metadata accessor for FrameContainer();
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = 0u;
  *(_OWORD *)(v47 + 32) = 0u;
  ObservationRegistrar.init()();
  uint64_t v60 = v47;
  State.init(wrappedValue:)();
  uint64_t v48 = v59;
  *uint64_t v46 = v58;
  *((void *)v46 + 1) = v48;
  uint64_t v49 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 1, 1, v49);
  sub_10006DF38((uint64_t)v33, v56, (uint64_t *)&unk_100E73CA0);
  State.init(wrappedValue:)();
  return sub_100178110((uint64_t)v33, (uint64_t *)&unk_100E73CA0);
}

unint64_t sub_100146A70()
{
  unint64_t result = qword_100E63BE0;
  if (!qword_100E63BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63BE0);
  }
  return result;
}

uint64_t sub_100146ABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v56 = v4;
  uint64_t v57 = v3;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v55 = v5;
  uint64_t v6 = type metadata accessor for DailyForecastRowViewButtonStyle();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10012B938();
  uint64_t v8 = type metadata accessor for DailyComponentForecastRowView();
  uint64_t v9 = v8 - 8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v8);
  uint64_t v12 = sub_10017DF08(&qword_100E7DEF8);
  sub_100179C0C();
  uint64_t v48 = v13;
  __chkstk_darwin(v14);
  uint64_t v49 = sub_10017DF08(&qword_100E7DF00);
  sub_100179C0C();
  uint64_t v51 = v15;
  __chkstk_darwin(v16);
  sub_10017DF08(&qword_100E7DF08);
  sub_100179C0C();
  uint64_t v52 = v17;
  uint64_t v53 = v18;
  __chkstk_darwin(v17);
  sub_100109314();
  v46[1] = v19;
  uint64_t v54 = sub_10017DF08(&qword_100E7DF10);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100162EF8();
  uint64_t v47 = v21;
  __chkstk_darwin(v22);
  uint64_t v50 = (char *)v46 - v23;
  sub_100149BFC(v1, (uint64_t)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for DailyComponentForecastRowView);
  unint64_t v24 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v25 = swift_allocObject();
  sub_1001470EC((uint64_t)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, (void (*)(void))type metadata accessor for DailyComponentForecastRowView);
  uint64_t v59 = v1;
  sub_10017DF08(&qword_100E7DF18);
  sub_1001246C8(&qword_100E7DF20, &qword_100E7DF18);
  Button.init(action:label:)();
  char v26 = *(unsigned char *)(v1 + *(int *)(v9 + 60));
  v46[0] = v1;
  sub_10017DF08(&qword_100E6B8C0);
  Binding.projectedValue.getter();
  sub_100149BFC(v1, (uint64_t)&v2[*(int *)(v6 + 24)], (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  *int v2 = v26;
  uint64_t v27 = sub_1001246C8(&qword_100E7DF28, &qword_100E7DEF8);
  uint64_t v28 = sub_100147140(&qword_100E7DF30, (void (*)(uint64_t))type metadata accessor for DailyForecastRowViewButtonStyle);
  View.buttonStyle<A>(_:)();
  sub_100142888((uint64_t)v2, (void (*)(void))type metadata accessor for DailyForecastRowViewButtonStyle);
  sub_100162F0C();
  v29();
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v60 = v12;
  uint64_t v61 = v6;
  uint64_t v62 = v27;
  uint64_t v63 = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v49;
  View.accessibilityElement(children:)();
  sub_100162F0C();
  v32();
  sub_100162F0C();
  v33();
  uint64_t v60 = v31;
  uint64_t v61 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = v47;
  View.accessibilityRespondsToUserInteraction(_:)();
  sub_100162F0C();
  v35();
  uint64_t v36 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v37 = v46[0];
  uint64_t v38 = (uint64_t *)(v46[0] + *(int *)(v36 + 76));
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  uint64_t v60 = v40;
  uint64_t v61 = v39;
  sub_10014A85C();
  uint64_t v41 = (uint64_t)v50;
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  sub_100178110(v34, &qword_100E7DF10);
  sub_10017DF08(&qword_100E66F98);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_100C251B0;
  uint64_t v43 = (void *)(v37 + *(int *)(v36 + 24));
  uint64_t v44 = v43[1];
  *(void *)(v42 + 32) = *v43;
  *(void *)(v42 + 40) = v44;
  swift_bridgeObjectRetain();
  ModifiedContent<>.accessibilityInputLabels<A>(_:)();
  swift_bridgeObjectRelease();
  return sub_100178110(v41, &qword_100E7DF10);
}

uint64_t sub_1001470EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100147140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100147188(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001471D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v130 = *(void *)(v4 - 8);
  uint64_t v131 = v4;
  __chkstk_darwin(v4);
  uint64_t v119 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for Font.TextStyle();
  uint64_t v6 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v117 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for FontWithSmallVariantModifier();
  __chkstk_darwin(v124);
  uint64_t v9 = (uint64_t *)((char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v10 - 8);
  int v123 = (char *)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for ColorSchemeContrast();
  uint64_t v135 = *(void *)(v129 - 8);
  uint64_t v12 = __chkstk_darwin(v129);
  unint64_t v128 = (char *)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v127 = (char *)&v105 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E7DFA0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10017DF08(&qword_100E7DFA8);
  uint64_t v18 = __chkstk_darwin(v121);
  uint64_t v126 = (uint64_t)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v122 = (uint64_t *)((char *)&v105 - v21);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v105 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E7DFB0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v133 = (uint64_t)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v105 - v27;
  uint64_t v29 = (int *)type metadata accessor for DailyComponentForecastRowView();
  uint64_t v30 = a1 + v29[18];
  uint64_t v31 = *(void *)v30;
  uint64_t v125 = v30;
  char v32 = *(unsigned char *)(v30 + 8);
  sub_100195B7C(v31, v32);
  sub_100147CF4();
  int v132 = v33;
  sub_10018F6D8(v31, v32);
  uint64_t v34 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v35 = *(int *)(v34 + 40);
  uint64_t v134 = a1;
  if (*(void *)(a1 + v35 + 8))
  {
    uint64_t v113 = v6;
    uint64_t v115 = v28;
    uint64_t v116 = a2;
    uint64_t v114 = v34;
    swift_bridgeObjectRetain();
    Image.init(systemName:)();
    uint64_t v36 = v127;
    uint64_t v112 = v134 + v29[20];
    sub_10014BB38();
    uint64_t v37 = v135;
    uint64_t v38 = *(void (**)(void))(v135 + 104);
    uint64_t v39 = v128;
    unsigned int v109 = enum case for ColorSchemeContrast.increased(_:);
    uint64_t v40 = v129;
    uint64_t v110 = v135 + 104;
    uint64_t v108 = (void (*)(char *, void, uint64_t))v38;
    v38(v128);
    char v41 = static ColorSchemeContrast.== infix(_:_:)();
    uint64_t v120 = v23;
    uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
    v42(v39, v40);
    uint64_t v135 = v37 + 8;
    uint64_t v111 = v42;
    v42(v36, v40);
    uint64_t v43 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v44 = (unsigned int *)&enum case for Image.TemplateRenderingMode.template(_:);
    if ((v41 & 1) == 0) {
      uint64_t v44 = (unsigned int *)&enum case for Image.TemplateRenderingMode.original(_:);
    }
    (*(void (**)(char *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v17, *v44, v43);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v43);
    uint64_t v45 = Image.renderingMode(_:)();
    swift_release();
    sub_100178110((uint64_t)v17, &qword_100E7DFA0);
    uint64_t v46 = static Font.title3.getter();
    uint64_t v47 = static Font.body.getter();
    uint64_t v48 = v134;
    uint64_t v49 = v134 + v29[17];
    uint64_t v50 = *(void *)v49;
    char v51 = *(unsigned char *)(v49 + 8);
    sub_100195B7C(*(void *)v49, v51);
    sub_100149AE8();
    char v53 = v52;
    sub_10018F6D8(v50, v51);
    uint64_t v54 = *(void (**)(void))(v130 + 104);
    uint64_t v55 = (uint64_t)v123;
    unsigned int v107 = enum case for Font.Leading.tight(_:);
    uint64_t v56 = v131;
    uint64_t v106 = (void (*)(char *, void, uint64_t))v54;
    v54(v123);
    _s7Weather24LocationCompositionStateOwst_0(v55, 0, 1, v56);
    uint64_t v57 = v124;
    sub_10006DF38(v55, (uint64_t)v9 + *(int *)(v124 + 24), &qword_100E6D330);
    uint64_t *v9 = v46;
    v9[1] = v47;
    *((unsigned char *)v9 + *(int *)(v57 + 28)) = v53 & 1;
    uint64_t v58 = v122;
    sub_100149BFC((uint64_t)v9, (uint64_t)v122 + *(int *)(v121 + 36), (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
    *uint64_t v58 = v45;
    swift_retain();
    sub_100142888((uint64_t)v9, (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
    sub_100178110(v55, &qword_100E6D330);
    swift_release();
    uint64_t v59 = (uint64_t)v120;
    sub_10024D364((uint64_t)v58, (uint64_t)v120, &qword_100E7DFA8);
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    char v64 = *(unsigned char *)(v48 + *(int *)(v114 + 52));
    uint64_t v65 = v59;
    if (v64)
    {
      uint64_t v66 = (uint64_t *)(v134 + *(int *)(v114 + 56));
      uint64_t v67 = v66[1];
      uint64_t v136 = *v66;
      uint64_t v137 = v67;
      sub_10014A85C();
      swift_bridgeObjectRetain();
      uint64_t v68 = Text.init<A>(_:)();
      uint64_t v70 = v69;
      char v72 = v71 & 1;
      uint64_t v73 = v113;
      uint64_t v74 = v117;
      uint64_t v75 = v118;
      (*(void (**)(char *, void, uint64_t))(v113 + 104))(v117, enum case for Font.TextStyle.caption(_:), v118);
      static Font.Weight.bold.getter();
      static Font.system(_:weight:)();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
      uint64_t v76 = v119;
      uint64_t v77 = v131;
      v106(v119, v107, v131);
      Font.leading(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v130 + 8))(v76, v77);
      uint64_t v78 = Text.font(_:)();
      uint64_t v80 = v79;
      char v82 = v81;
      swift_release();
      sub_100191924(v68, v70, v72);
      swift_bridgeObjectRelease();
      uint64_t v83 = v127;
      sub_10014BB38();
      uint64_t v85 = v128;
      uint64_t v84 = v129;
      v108(v128, v109, v129);
      LOBYTE(v77) = static ColorSchemeContrast.== infix(_:_:)();
      uint64_t v86 = v111;
      v111(v85, v84);
      v86(v83, v84);
      if (v77) {
        static Color.white.getter();
      }
      else {
        static Color.cyan.getter();
      }
      char v90 = v82 & 1;
      uint64_t v60 = Text.foregroundColor(_:)();
      uint64_t v61 = v91;
      char v93 = v92;
      uint64_t v63 = v94;
      swift_release();
      uint64_t v62 = v93 & 1;
      sub_100191924(v78, v80, v90);
      swift_bridgeObjectRelease();
      uint64_t v65 = (uint64_t)v120;
    }
    uint64_t v95 = v126;
    sub_10006DF38(v65, v126, &qword_100E7DFA8);
    uint64_t v88 = v133;
    sub_10006DF38(v95, v133, &qword_100E7DFA8);
    uint64_t v96 = (uint64_t *)(v88 + *(int *)(sub_10017DF08(&qword_100E7DFC8) + 48));
    *uint64_t v96 = v60;
    v96[1] = v61;
    v96[2] = v62;
    v96[3] = v63;
    sub_100147E1C(v60, v61, v62, v63);
    sub_100178110(v65, &qword_100E7DFA8);
    sub_100147E60(v60, v61, v62, v63);
    sub_100178110(v95, &qword_100E7DFA8);
    uint64_t v97 = sub_10017DF08(&qword_100E7DFB8);
    _s7Weather24LocationCompositionStateOwst_0(v88, 0, 1, v97);
    uint64_t v89 = (uint64_t)v115;
    sub_10024D364(v88, (uint64_t)v115, &qword_100E7DFB0);
    uint64_t v31 = *(void *)v125;
    char v32 = *(unsigned char *)(v125 + 8);
    a2 = v116;
  }
  else
  {
    uint64_t v87 = sub_10017DF08(&qword_100E7DFB8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 1, 1, v87);
    uint64_t v88 = v133;
    uint64_t v89 = (uint64_t)v28;
  }
  if (v132) {
    uint64_t v98 = 0;
  }
  else {
    uint64_t v98 = 0x4020000000000000;
  }
  sub_100195B7C(v31, v32);
  sub_100147CF4();
  char v100 = v99;
  sub_10018F6D8(v31, v32);
  if (v100) {
    uint64_t v101 = 0;
  }
  else {
    uint64_t v101 = 0x4020000000000000;
  }
  sub_10006DF38(v89, v88, &qword_100E7DFB0);
  *(void *)a2 = v98;
  *(unsigned char *)(a2 + 8) = 0;
  uint64_t v102 = sub_10017DF08(&qword_100E7DFC0);
  sub_10006DF38(v88, a2 + *(int *)(v102 + 48), &qword_100E7DFB0);
  uint64_t v103 = a2 + *(int *)(v102 + 64);
  *(void *)uint64_t v103 = v101;
  *(unsigned char *)(v103 + 8) = 0;
  sub_100178110(v89, &qword_100E7DFB0);
  return sub_100178110(v88, &qword_100E7DFB0);
}

void sub_100147CF4()
{
  sub_100162EA0();
  sub_100214D8C();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  if ((v0 & 1) == 0)
  {
    swift_retain();
    static os_log_type_t.fault.getter();
    int v2 = static Log.runtimeIssuesLog.getter();
    if (sub_1001260AC(v2))
    {
      sub_10017E670();
      uint64_t v3 = sub_100184468();
      sub_1005EFDB8(v3);
      sub_1001D404C(4.8149e-34);
      uint64_t v5 = sub_10016414C(0x6542676E697A6953, 0xEE00726F69766168, v4);
      sub_1001853DC(v5);
      sub_10019DEAC((void *)&_mh_execute_header, v6, v7, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      sub_1001EA978();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    sub_10012B990();
    uint64_t v8 = sub_100185B08();
    v9(v8);
  }
  sub_100162694();
}

uint64_t sub_100147E1C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100190CC4(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100147E60(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100191924(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100147EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v234 = a2;
  uint64_t v232 = sub_10017DF08(&qword_100E7B588);
  uint64_t v3 = __chkstk_darwin(v232);
  uint64_t v235 = (uint64_t)&v190 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v233 = (uint64_t)&v190 - v5;
  uint64_t v6 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v6 - 8);
  uint64_t v226 = (uint64_t)&v190 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65250);
  uint64_t v224 = *(void *)(v8 - 8);
  uint64_t v225 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v190 = (char *)&v190 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v220 = (char *)&v190 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v219 = (char *)&v190 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v218 = (char *)&v190 - v16;
  __chkstk_darwin(v15);
  uint64_t v216 = (char *)&v190 - v17;
  uint64_t v18 = type metadata accessor for WeatherDayVarianceView();
  uint64_t v227 = *(void *)(v18 - 8);
  uint64_t v228 = v18;
  __chkstk_darwin(v18);
  uint64_t v223 = (char *)&v190 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_10017DF08(&qword_100E7DF40);
  __chkstk_darwin(v222);
  uint64_t v230 = (char *)&v190 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E7B580);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v231 = (uint64_t)&v190 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v229 = (char *)&v190 - v25;
  __chkstk_darwin(v24);
  uint64_t v262 = (uint64_t)&v190 - v26;
  uint64_t v270 = type metadata accessor for DailyComponentForecastRowView();
  __chkstk_darwin(v270);
  uint64_t v195 = (char *)&v190 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for ColorSchemeContrast();
  uint64_t v201 = *(void *)(v204 - 8);
  uint64_t v28 = __chkstk_darwin(v204);
  uint64_t v199 = (char *)&v190 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v198 = (char *)&v190 - v30;
  uint64_t v31 = type metadata accessor for BlendMode();
  uint64_t v196 = *(void *)(v31 - 8);
  uint64_t v197 = v31;
  __chkstk_darwin(v31);
  uint64_t v194 = (char *)&v190 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = type metadata accessor for FontWithSmallVariantModifier();
  __chkstk_darwin(v253);
  uint64_t v255 = (uint64_t *)((char *)&v190 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v258 = sub_10017DF08(&qword_100E7DF48);
  __chkstk_darwin(v258);
  uint64_t v257 = (char *)&v190 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = sub_10017DF08(&qword_100E7DF50);
  uint64_t v265 = *(void *)(v259 - 8);
  __chkstk_darwin(v259);
  uint64_t v256 = (char *)&v190 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = sub_10017DF08(&qword_100E7DF58);
  __chkstk_darwin(v254);
  uint64_t v260 = (char *)&v190 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_10017DF08(&qword_100E7DF60) - 8;
  __chkstk_darwin(v192);
  uint64_t v236 = (uint64_t)&v190 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_10017DF08(&qword_100E7DF68);
  __chkstk_darwin(v200);
  uint64_t v206 = (uint64_t)&v190 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = sub_10017DF08(&qword_100E7B578);
  uint64_t v39 = __chkstk_darwin(v203);
  uint64_t v261 = (uint64_t)&v190 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v202 = (uint64_t)&v190 - v42;
  __chkstk_darwin(v41);
  uint64_t v268 = (uint64_t)&v190 - v43;
  uint64_t v44 = sub_10017DF08(&qword_100E7DF70);
  __chkstk_darwin(v44 - 8);
  uint64_t v217 = (char *)&v190 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_10017DF08(&qword_100E7B570) - 8;
  uint64_t v46 = __chkstk_darwin(v209);
  uint64_t v267 = (uint64_t)&v190 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v266 = (uint64_t)&v190 - v48;
  uint64_t v49 = sub_10017DF08(&qword_100E6D330);
  uint64_t v50 = __chkstk_darwin(v49 - 8);
  uint64_t v252 = (uint64_t)&v190 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v250 = (char *)&v190 - v52;
  uint64_t v53 = type metadata accessor for Font.TextStyle();
  uint64_t v54 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v56 = (char *)&v190 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v57 = v269[5];
  uint64_t v58 = a1;
  uint64_t v263 = a1;
  uint64_t v59 = (uint64_t *)(a1 + v57);
  uint64_t v60 = v59[1];
  uint64_t v291 = *v59;
  uint64_t v292 = v60;
  unint64_t v243 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v61 = Text.init<A>(_:)();
  uint64_t v214 = v62;
  uint64_t v215 = v61;
  uint64_t KeyPath = v63;
  LODWORD(v213) = v64 & 1;
  LODWORD(v242) = enum case for Font.TextStyle.title3(_:);
  uint64_t v65 = *(void (**)(char *))(v54 + 104);
  v65(v56);
  uint64_t v245 = v65;
  uint64_t v246 = v54 + 104;
  uint64_t v66 = v65;
  static Font.Weight.medium.getter();
  uint64_t v67 = static Font.system(_:weight:)();
  uint64_t v68 = *(void (**)(char *, uint64_t))(v54 + 8);
  v68(v56, v53);
  uint64_t v244 = v68;
  uint64_t v247 = v54 + 8;
  unsigned int v241 = enum case for Font.TextStyle.body(_:);
  uint64_t v248 = v53;
  v66(v56);
  static Font.Weight.medium.getter();
  uint64_t v69 = static Font.system(_:weight:)();
  v68(v56, v53);
  uint64_t v264 = v58 + *(int *)(v270 + 68);
  uint64_t v70 = *(void *)v264;
  LOBYTE(v60) = *(unsigned char *)(v264 + 8);
  sub_100195B7C(*(void *)v264, v60);
  sub_100149AE8();
  LOBYTE(v58) = v71;
  sub_10018F6D8(v70, v60);
  uint64_t v72 = enum case for Font.Leading.tight(_:);
  unsigned int v239 = enum case for Font.Leading.tight(_:);
  uint64_t v73 = type metadata accessor for Font.Leading();
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v75 = *(void (**)(uint64_t, void, uint64_t))(v74 + 104);
  uint64_t v237 = v74 + 104;
  uint64_t v238 = v75;
  uint64_t v76 = (uint64_t)v250;
  uint64_t v77 = v72;
  uint64_t v78 = v73;
  uint64_t v240 = v73;
  ((void (*)(char *, uint64_t))v75)(v250, v77);
  _s7Weather24LocationCompositionStateOwst_0(v76, 0, 1, v78);
  uint64_t v79 = v252;
  sub_10006DF38(v76, v252, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v67, v69, v58 & 1, v79);
  uint64_t v80 = v214;
  uint64_t v81 = v215;
  LOBYTE(v67) = v213;
  uint64_t v221 = Text.font(_:)();
  uint64_t v251 = v82;
  uint64_t v252 = v83;
  int v193 = v84;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v81, v80, v67);
  swift_bridgeObjectRelease();
  sub_100178110(v76, &qword_100E6D330);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v85 = v263;
  static Alignment.topLeading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v215 = v305[10];
  LODWORD(v214) = v306;
  uint64_t v213 = v307;
  int v212 = v308;
  uint64_t v210 = v310;
  uint64_t v211 = v309;
  uint64_t v86 = (uint64_t)v217;
  sub_10014E958((uint64_t)v217);
  uint64_t v87 = v267;
  sub_10006DF38(v86, v267, &qword_100E7DF70);
  *(void *)(v87 + *(int *)(v209 + 44)) = 0x3FF0000000000000;
  sub_100178110(v86, &qword_100E7DF70);
  sub_10024D364(v87, v266, &qword_100E7B570);
  uint64_t v88 = (uint64_t *)(v85 + v269[17]);
  uint64_t v89 = v88[1];
  uint64_t v291 = *v88;
  uint64_t v292 = v89;
  swift_bridgeObjectRetain();
  uint64_t v90 = Text.init<A>(_:)();
  unint64_t v208 = v91;
  uint64_t v209 = v90;
  uint64_t v207 = v92;
  LODWORD(v205) = v93 & 1;
  uint64_t v94 = swift_getKeyPath();
  uint64_t v95 = v248;
  uint64_t v96 = v245;
  ((void (*)(char *, void, uint64_t))v245)(v56, v242, v248);
  static Font.Weight.medium.getter();
  uint64_t v191 = static Font.system(_:weight:)();
  uint64_t v97 = v244;
  v244(v56, v95);
  ((void (*)(char *, void, uint64_t))v96)(v56, v241, v95);
  static Font.Weight.medium.getter();
  uint64_t v98 = static Font.system(_:weight:)();
  uint64_t v217 = v56;
  v97(v56, v95);
  uint64_t v99 = *(void *)v264;
  LOBYTE(v69) = *(unsigned char *)(v264 + 8);
  sub_100195B7C(*(void *)v264, v69);
  sub_100149AE8();
  LOBYTE(v53) = v100;
  sub_10018F6D8(v99, v69);
  uint64_t v101 = v76;
  uint64_t v102 = v240;
  v238(v76, v239, v240);
  _s7Weather24LocationCompositionStateOwst_0(v76, 0, 1, v102);
  uint64_t v103 = v253;
  int v104 = v255;
  sub_10006DF38(v101, (uint64_t)v255 + *(int *)(v253 + 24), &qword_100E6D330);
  *int v104 = v191;
  v104[1] = v98;
  *((unsigned char *)v104 + *(int *)(v103 + 28)) = v53 & 1;
  uint64_t v105 = (uint64_t)v257;
  uint64_t v106 = (uint64_t)v104;
  sub_100149BFC((uint64_t)v104, (uint64_t)&v257[*(int *)(v258 + 36)], (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  unint64_t v107 = v208;
  uint64_t v108 = v209;
  uint64_t v109 = (uint64_t)v207;
  *(void *)uint64_t v105 = v209;
  *(void *)(v105 + 8) = v109;
  LOBYTE(v95) = (_BYTE)v205;
  *(unsigned char *)(v105 + 16) = (_BYTE)v205;
  *(void *)(v105 + 24) = v107;
  *(void *)(v105 + 32) = v94;
  *(void *)(v105 + 40) = 1;
  *(unsigned char *)(v105 + 48) = 0;
  sub_100190CC4(v108, v109, v95);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100142888(v106, (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  sub_100178110(v101, &qword_100E6D330);
  uint64_t v110 = v108;
  uint64_t v111 = v263;
  sub_100191924(v110, v109, v95);
  uint64_t v112 = (uint64_t)v195;
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v113 = sub_10014EEB8();
  uint64_t v114 = v256;
  unint64_t v208 = v113;
  View.monospacedDigit()();
  sub_100178110(v105, &qword_100E7DF48);
  uint64_t v115 = v265;
  uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v265 + 16);
  uint64_t v117 = (uint64_t)v260;
  uint64_t v118 = v259;
  uint64_t v209 = v265 + 16;
  uint64_t v207 = v116;
  v116(v260, v114, v259);
  *(_WORD *)(v117 + *(int *)(v254 + 36)) = 257;
  uint64_t v119 = *(void (**)(char *, uint64_t))(v115 + 8);
  uint64_t v265 = v115 + 8;
  uint64_t v205 = v119;
  v119(v114, v118);
  uint64_t v121 = v196;
  uint64_t v120 = v197;
  uint64_t v122 = v194;
  (*(void (**)(char *, void, uint64_t))(v196 + 104))(v194, enum case for BlendMode.plusLighter(_:), v197);
  uint64_t v123 = v236;
  (*(void (**)(uint64_t, char *, uint64_t))(v121 + 16))(v236 + *(int *)(v192 + 44), v122, v120);
  sub_10006DF38(v117, v123, &qword_100E7DF58);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v120);
  sub_100178110(v117, &qword_100E7DF58);
  uint64_t v124 = v198;
  sub_10014BB38();
  uint64_t v125 = v201;
  uint64_t v126 = v199;
  uint64_t v127 = v204;
  (*(void (**)(char *, void, uint64_t))(v201 + 104))(v199, enum case for ColorSchemeContrast.increased(_:), v204);
  LOBYTE(v120) = static ColorSchemeContrast.== infix(_:_:)();
  unint64_t v128 = *(void (**)(char *, uint64_t))(v125 + 8);
  v128(v126, v127);
  v128(v124, v127);
  sub_100149BFC(v111, v112, (void (*)(void))type metadata accessor for DailyComponentForecastRowView);
  if (v120)
  {
    sub_100142888(v112, (void (*)(void))type metadata accessor for DailyComponentForecastRowView);
    double v129 = 1.0;
  }
  else
  {
    uint64_t v130 = v112 + *(int *)(v270 + 76);
    uint64_t v131 = *(void *)v130;
    char v132 = *(unsigned char *)(v130 + 8);
    sub_100195B7C(*(void *)v130, v132);
    sub_100149AE8();
    char v134 = v133;
    sub_10018F6D8(v131, v132);
    sub_100142888(v112, (void (*)(void))type metadata accessor for DailyComponentForecastRowView);
    if (v134) {
      double v129 = 1.0;
    }
    else {
      double v129 = 0.27;
    }
  }
  uint64_t v135 = v236;
  uint64_t v136 = v206;
  sub_10006DF38(v236, v206, &qword_100E7DF60);
  *(double *)(v136 + *(int *)(v200 + 36)) = v129;
  sub_100178110(v135, &qword_100E7DF60);
  uint64_t v137 = v270;
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v138 = v202;
  sub_10006DF38(v136, v202, &qword_100E7DF68);
  uint64_t v139 = (_OWORD *)(v138 + *(int *)(v203 + 36));
  long long v140 = v312;
  *uint64_t v139 = v311;
  v139[1] = v140;
  v139[2] = v313;
  sub_100178110(v136, &qword_100E7DF68);
  sub_10024D364(v138, v268, &qword_100E7B578);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v236 = v314;
  LODWORD(v206) = v315;
  uint64_t v204 = v316;
  LODWORD(v203) = v317;
  uint64_t v201 = v319;
  uint64_t v202 = v318;
  uint64_t v141 = v216;
  Measurement<>.converted(rounded:)();
  uint64_t v142 = v225;
  Measurement.value.getter();
  uint64_t v143 = *(void (**)(char *, uint64_t))(v224 + 8);
  v143(v141, v142);
  uint64_t v144 = v218;
  Measurement<>.converted(rounded:)();
  Measurement.value.getter();
  v143(v144, v142);
  uint64_t v145 = v219;
  Measurement<>.converted(rounded:)();
  Measurement.value.getter();
  v143(v145, v142);
  uint64_t v146 = v220;
  Measurement<>.converted(rounded:)();
  Measurement.value.getter();
  v143(v146, v142);
  uint64_t v147 = v226;
  sub_10006DF38(v111 + *(int *)(v137 + 28), v226, qword_100E65268);
  if (_s7Weather24LocationCompositionStateOwet_0(v147, 1, v142) == 1)
  {
    sub_100178110(v147, qword_100E65268);
  }
  else
  {
    uint64_t v148 = v190;
    Measurement<>.converted(rounded:)();
    v143((char *)v147, v142);
    Measurement.value.getter();
    v143(v148, v142);
  }
  LODWORD(v226) = v193 & 1;
  uint64_t v149 = swift_bridgeObjectRetain();
  sub_10014EC54(v149);
  uint64_t v150 = v223;
  WeatherDayVarianceView.init(weekMaxTemp:weekMinTemp:dayHighTemp:dayLowTemp:currentTemp:isDaylight:temperatureGradient:)();
  uint64_t v152 = v227;
  uint64_t v151 = v228;
  uint64_t v153 = (uint64_t)v230;
  (*(void (**)(char *, char *, uint64_t))(v227 + 16))(v230, v150, v228);
  *(unsigned char *)(v153 + *(int *)(v222 + 36)) = 1;
  (*(void (**)(char *, uint64_t))(v152 + 8))(v150, v151);
  uint64_t v154 = *(void *)v264;
  LOBYTE(v150) = *(unsigned char *)(v264 + 8);
  sub_100195B7C(*(void *)v264, (char)v150);
  sub_100149AE8();
  sub_10018F6D8(v154, (char)v150);
  sub_100195B7C(v154, (char)v150);
  sub_100149AE8();
  sub_10018F6D8(v154, (char)v150);
  sub_100195B7C(v154, (char)v150);
  sub_100149AE8();
  sub_10018F6D8(v154, (char)v150);
  sub_10017DF08(&qword_100E7DDF0);
  ScaledValue.wrappedValue.getter();
  ScaledValue.wrappedValue.getter();
  ScaledValue.wrappedValue.getter();
  static Alignment.center.getter();
  uint64_t v155 = (uint64_t)v229;
  sub_10014EE4C();
  sub_100178110(v153, &qword_100E7DF40);
  sub_10024D364(v155, v262, &qword_100E7B580);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v230 = v320;
  LODWORD(v229) = v321;
  uint64_t v228 = v322;
  LODWORD(v227) = v323;
  uint64_t v224 = v325;
  uint64_t v225 = v324;
  uint64_t v156 = (uint64_t *)(v111 + v269[18]);
  uint64_t v157 = v156[1];
  uint64_t v291 = *v156;
  uint64_t v292 = v157;
  swift_bridgeObjectRetain();
  unint64_t v243 = Text.init<A>(_:)();
  uint64_t v159 = v158;
  uint64_t v269 = v160;
  LOBYTE(v150) = v161 & 1;
  uint64_t v162 = swift_getKeyPath();
  uint64_t v163 = (uint64_t)v217;
  uint64_t v164 = v248;
  uint64_t v165 = v245;
  ((void (*)(char *, void, uint64_t))v245)(v217, v242, v248);
  static Font.Weight.medium.getter();
  uint64_t v242 = static Font.system(_:weight:)();
  uint64_t v166 = (void (*)(uint64_t, uint64_t))v244;
  v244((char *)v163, v164);
  ((void (*)(uint64_t, void, uint64_t))v165)(v163, v241, v164);
  static Font.Weight.medium.getter();
  uint64_t v167 = static Font.system(_:weight:)();
  v166(v163, v164);
  uint64_t v168 = *(void *)v264;
  LOBYTE(v155) = *(unsigned char *)(v264 + 8);
  sub_100195B7C(*(void *)v264, v155);
  sub_100149AE8();
  LOBYTE(v165) = v169;
  sub_10018F6D8(v168, v155);
  uint64_t v170 = (uint64_t)v250;
  uint64_t v171 = v240;
  v238((uint64_t)v250, v239, v240);
  _s7Weather24LocationCompositionStateOwst_0(v170, 0, 1, v171);
  uint64_t v172 = v253;
  uint64_t v173 = v255;
  sub_10006DF38(v170, (uint64_t)v255 + *(int *)(v253 + 24), &qword_100E6D330);
  *uint64_t v173 = v242;
  v173[1] = v167;
  *((unsigned char *)v173 + *(int *)(v172 + 28)) = v165 & 1;
  uint64_t v174 = (uint64_t)v257;
  sub_100149BFC((uint64_t)v173, (uint64_t)&v257[*(int *)(v258 + 36)], (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  uint64_t v175 = v243;
  *(void *)uint64_t v174 = v243;
  *(void *)(v174 + 8) = v159;
  *(unsigned char *)(v174 + 16) = (_BYTE)v150;
  *(void *)(v174 + 24) = v269;
  *(void *)(v174 + 32) = v162;
  *(void *)(v174 + 40) = 1;
  *(unsigned char *)(v174 + 48) = 0;
  sub_100190CC4(v175, v159, (char)v150);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100142888((uint64_t)v173, (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
  sub_100178110(v170, &qword_100E6D330);
  sub_100191924(v175, v159, (char)v150);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v176 = v256;
  View.monospacedDigit()();
  sub_100178110(v174, &qword_100E7DF48);
  uint64_t v177 = (uint64_t)v260;
  uint64_t v178 = v259;
  v207(v260, v176, v259);
  *(_WORD *)(v177 + *(int *)(v254 + 36)) = 257;
  v205(v176, v178);
  static Alignment.trailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v179 = v235;
  sub_10006DF38(v177, v235, &qword_100E7DF58);
  uint64_t v180 = (_OWORD *)(v179 + *(int *)(v232 + 36));
  long long v181 = v327;
  *uint64_t v180 = v326;
  v180[1] = v181;
  v180[2] = v328;
  sub_100178110(v177, &qword_100E7DF58);
  uint64_t v182 = v233;
  sub_10024D364(v179, v233, &qword_100E7B588);
  uint64_t v183 = v221;
  uint64_t v291 = v221;
  uint64_t v184 = v251;
  uint64_t v292 = v251;
  LOBYTE(v173) = v226;
  char v293 = v226;
  uint64_t v294 = v252;
  uint64_t v295 = KeyPath;
  uint64_t v296 = 1;
  char v297 = 0;
  uint64_t v298 = v215;
  char v299 = v214;
  uint64_t v300 = v213;
  char v301 = v212;
  uint64_t v302 = v211;
  uint64_t v303 = v210;
  __int16 v304 = 257;
  uint64_t v289 = 0;
  char v290 = 1;
  v305[0] = &v291;
  v305[1] = &v289;
  uint64_t v185 = v267;
  sub_10006DF38(v266, v267, &qword_100E7B570);
  uint64_t v287 = 0;
  char v288 = 1;
  v305[2] = v185;
  v305[3] = &v287;
  uint64_t v186 = v261;
  sub_10006DF38(v268, v261, &qword_100E7B578);
  uint64_t v279 = 0;
  char v280 = 1;
  uint64_t v281 = v236;
  char v282 = v206;
  uint64_t v283 = v204;
  char v284 = v203;
  uint64_t v285 = v202;
  uint64_t v286 = v201;
  v305[4] = v186;
  v305[5] = &v279;
  uint64_t v187 = v262;
  uint64_t v188 = v231;
  sub_10006DF38(v262, v231, &qword_100E7B580);
  uint64_t v271 = 0;
  char v272 = 1;
  uint64_t v273 = v230;
  char v274 = (char)v229;
  uint64_t v275 = v228;
  char v276 = v227;
  uint64_t v277 = v225;
  uint64_t v278 = v224;
  v305[6] = v188;
  v305[7] = &v271;
  sub_10006DF38(v182, v179, &qword_100E7B588);
  v305[8] = v179;
  sub_10014F040((uint64_t)v305, v234);
  sub_100190CC4(v183, v184, (char)v173);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110(v182, &qword_100E7B588);
  sub_100178110(v187, &qword_100E7B580);
  sub_100178110(v268, &qword_100E7B578);
  sub_100178110(v266, &qword_100E7B570);
  sub_100191924(v183, v251, (char)v173);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100178110(v179, &qword_100E7B588);
  sub_100178110(v188, &qword_100E7B580);
  sub_100178110(v261, &qword_100E7B578);
  sub_100178110(v267, &qword_100E7B570);
  sub_100191924(v291, v292, v293);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_100149AE8()
{
  sub_100162EA0();
  sub_100214D8C();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  if ((v0 & 1) == 0)
  {
    swift_retain();
    static os_log_type_t.fault.getter();
    int v2 = static Log.runtimeIssuesLog.getter();
    if (sub_1001260AC(v2))
    {
      sub_10017E670();
      uint64_t v3 = sub_100184468();
      sub_1005EFDB8(v3);
      sub_1001D404C(4.8149e-34);
      uint64_t v5 = sub_10016414C(1819242306, 0xE400000000000000, v4);
      sub_1001853DC(v5);
      sub_10019DEAC((void *)&_mh_execute_header, v6, v7, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      sub_1001EA978();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    sub_10012B990();
    uint64_t v8 = sub_100185B08();
    v9(v8);
  }
  sub_100162694();
}

uint64_t sub_100149BFC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

void *sub_100149C50(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Font.Leading();
  swift_retain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6D330);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t type metadata accessor for DailyComponentForecastRowView()
{
  uint64_t result = qword_100E7DE58;
  if (!qword_100E7DE58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100149DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E6D330);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = type metadata accessor for Font.Leading();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = sub_10017DF08(&qword_100E81320);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FontWithSmallVariantModifier();
  if (*(unsigned char *)(v2 + *(int *)(v20 + 28)) == 1)
  {
    sub_10014A148(v2 + *(int *)(v20 + 24), (uint64_t)v9);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v11 + 104))(v16, enum case for Font.Leading.standard(_:), v10);
      sub_10014AB44((uint64_t)v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    }
    uint64_t v21 = Font.leading(_:)();
  }
  else
  {
    sub_10014A148(v2 + *(int *)(v20 + 24), (uint64_t)v7);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v10) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for Font.Leading.standard(_:), v10);
      sub_10014AB44((uint64_t)v7);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v7, v10);
    }
    uint64_t v21 = Font.leading(_:)();
    uint64_t v16 = v14;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = sub_10017DF08(&qword_100E81328);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v19, a1, v23);
  uint64_t v24 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  *uint64_t v24 = KeyPath;
  v24[1] = v21;
  return sub_10014A1B0((uint64_t)v19, v27);
}

uint64_t type metadata accessor for FontWithSmallVariantModifier()
{
  uint64_t result = qword_100E812D8;
  if (!qword_100E812D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10014A148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6D330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014A1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E81320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014A218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v69 = a3;
  uint64_t v5 = sub_10017DF08(&qword_100E6D330);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v68 = (uint64_t)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v67 = (char *)v61 - v8;
  uint64_t v9 = type metadata accessor for Font.TextStyle();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EA5FC8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EA5FD0);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v61 - v21;
  uint64_t v63 = (uint64_t)v61 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100EA5FD8);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v66 = (uint64_t)v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v65 = (uint64_t)v61 - v26;
  v61[0] = a1;
  sub_10014BFE0(a2, (uint64_t)v61 - v26);
  *(void *)uint64_t v15 = static HorizontalAlignment.center.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v27 = sub_10017DF08(&qword_100EA5FE0);
  sub_10014AD84(a2, a1, &v15[*(int *)(v27 + 44)]);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006DF38((uint64_t)v15, (uint64_t)v20, &qword_100EA5FC8);
  uint64_t v28 = &v20[*(int *)(v17 + 44)];
  char v64 = v20;
  long long v29 = v73;
  *(_OWORD *)uint64_t v28 = v72;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v74;
  sub_100178110((uint64_t)v15, &qword_100EA5FC8);
  sub_10020E72C((uint64_t)v20, (uint64_t)v22, &qword_100EA5FD0);
  uint64_t v70 = sub_10014ABA4();
  uint64_t v71 = v30;
  sub_10014A85C();
  uint64_t v31 = Text.init<A>(_:)();
  v61[1] = v33;
  uint64_t v62 = v32;
  LOBYTE(v20) = v34 & 1;
  uint64_t v35 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  v35(v12, enum case for Font.TextStyle.title3(_:), v9);
  static Font.Weight.medium.getter();
  uint64_t v36 = static Font.system(_:weight:)();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v10 + 8);
  v37(v12, v9);
  v35(v12, enum case for Font.TextStyle.body(_:), v9);
  static Font.Weight.bold.getter();
  uint64_t v38 = static Font.system(_:weight:)();
  v37(v12, v9);
  uint64_t v39 = *(void *)(v61[0] + 8);
  LOBYTE(v12) = *(unsigned char *)(v61[0] + 16);
  sub_100195B7C(v39, (char)v12);
  sub_100149AE8();
  LOBYTE(v37) = v40;
  sub_10018F6D8(v39, (char)v12);
  uint64_t v41 = enum case for Font.Leading.tight(_:);
  uint64_t v42 = type metadata accessor for Font.Leading();
  uint64_t v43 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v67, v41, v42);
  _s7Weather24LocationCompositionStateOwst_0(v43, 0, 1, v42);
  uint64_t v44 = v68;
  sub_10006DF38(v43, v68, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v36, v38, v37 & 1, v44);
  uint64_t v45 = v62;
  v61[0] = Text.font(_:)();
  uint64_t v47 = v46;
  LOBYTE(v44) = v48;
  uint64_t v68 = v49;
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v38) = v44 & 1;
  sub_100191924(v31, v45, (char)v20);
  swift_bridgeObjectRelease();
  sub_100178110(v43, &qword_100E6D330);
  uint64_t v50 = v65;
  uint64_t v51 = v66;
  sub_10006DF38(v65, v66, &qword_100EA5FD8);
  uint64_t v53 = v63;
  uint64_t v52 = (uint64_t)v64;
  sub_10006DF38(v63, (uint64_t)v64, &qword_100EA5FD0);
  uint64_t v54 = v69;
  sub_10006DF38(v51, v69, &qword_100EA5FD8);
  uint64_t v55 = (int *)sub_10017DF08(&qword_100EA5FE8);
  uint64_t v56 = v54 + v55[12];
  *(void *)uint64_t v56 = 0;
  *(unsigned char *)(v56 + 8) = 0;
  sub_10006DF38(v52, v54 + v55[16], &qword_100EA5FD0);
  uint64_t v57 = v54 + v55[20];
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 0;
  uint64_t v58 = v54 + v55[24];
  uint64_t v59 = v61[0];
  *(void *)uint64_t v58 = v61[0];
  *(void *)(v58 + 8) = v47;
  *(unsigned char *)(v58 + 16) = v38;
  *(void *)(v58 + 24) = v68;
  *(_WORD *)(v58 + 32) = 257;
  sub_100190CC4(v59, v47, v38);
  swift_bridgeObjectRetain();
  sub_100178110(v53, &qword_100EA5FD0);
  sub_100178110(v50, &qword_100EA5FD8);
  sub_100191924(v59, v47, v38);
  swift_bridgeObjectRelease();
  sub_100178110(v52, &qword_100EA5FD0);
  return sub_100178110(v51, &qword_100EA5FD8);
}

unint64_t sub_10014A85C()
{
  unint64_t result = qword_100EAACB0;
  if (!qword_100EAACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAACB0);
  }
  return result;
}

uint64_t sub_10014A8A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6D330);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = type metadata accessor for Font.Leading();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v21 - v17;
  if (a3)
  {
    sub_10014A148(a4, (uint64_t)v11);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v13 + 104))(v18, enum case for Font.Leading.standard(_:), v12);
      sub_10014AB44((uint64_t)v11);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    }
    uint64_t v19 = Font.leading(_:)();
  }
  else
  {
    sub_10014A148(a4, (uint64_t)v9);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v12) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for Font.Leading.standard(_:), v12);
      sub_10014AB44((uint64_t)v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v9, v12);
    }
    uint64_t v19 = Font.leading(_:)();
    uint64_t v18 = v16;
  }
  swift_release();
  swift_release();
  sub_10014AB44(a4);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  return v19;
}

uint64_t sub_10014AB44(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6D330);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10014ABA4()
{
  uint64_t countAndFlagsBits = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001831C0();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162E88();
  sub_100181D48(v1, v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v17 = sub_10012B950();
      sub_1001827D0(v17, v18, v19);
      sub_1001844D0();
      uint64_t v15 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
      uint64_t v16 = v1;
      goto LABEL_7;
    }
    id v6 = [self mainBundle];
    sub_10019AE78();
    sub_10019EE1C();
    unint64_t v14 = 0xD00000000000001ALL;
  }
  else
  {
    id v6 = [self mainBundle];
    sub_10019AE78();
    sub_10019EE1C();
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, *(Swift::String_optional *)&v9, v11, *(Swift::String *)&v12, *(Swift::String *)(&v21 - 1))._countAndFlagsBits;

  uint64_t v15 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem;
  uint64_t v16 = v0;
LABEL_7:
  sub_100184648(v16, (void (*)(void))v15);
  return countAndFlagsBits;
}

uint64_t sub_10014AD84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v138 = a3;
  uint64_t v139 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100EA5FF0);
  __chkstk_darwin(v4 - 8);
  uint64_t v131 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10017DF08(&qword_100EA5FF8);
  uint64_t v6 = __chkstk_darwin(v136);
  uint64_t v130 = (uint64_t)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v129 = (uint64_t)&v114 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100EA6000);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v137 = (uint64_t)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v143 = (uint64_t)&v114 - v12;
  uint64_t v133 = sub_10017DF08(&qword_100EA6008);
  __chkstk_darwin(v133);
  unint64_t v14 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v125 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for FontWithSmallVariantModifier();
  __chkstk_darwin(v124);
  uint64_t v17 = (uint64_t *)((char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v18 - 8);
  uint64_t v123 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ColorSchemeContrast();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v141 = (char *)&v114 - v25;
  uint64_t v26 = sub_10017DF08(&qword_100E7DFA0);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_10017DF08(&qword_100E7DFA8);
  __chkstk_darwin(v117);
  uint64_t v118 = (uint64_t *)((char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = sub_10017DF08(&qword_100EA6010);
  uint64_t v120 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v119 = (char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_10017DF08(&qword_100EA6018);
  uint64_t v31 = __chkstk_darwin(v132);
  uint64_t v116 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v121 = (uint64_t)&v114 - v33;
  uint64_t v34 = sub_10017DF08(&qword_100EA6020);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v135 = (uint64_t)&v114 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v114 - v37;
  uint64_t v39 = sub_10014BB6C();
  unint64_t v41 = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = HIBYTE(v41) & 0xF;
  if ((v41 & 0x2000000000000000) == 0) {
    uint64_t v42 = v39 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v140 = a1;
  uint64_t v142 = v38;
  uint64_t v128 = v20;
  uint64_t v134 = v21;
  if (v42)
  {
    sub_10014BB6C();
    uint64_t v114 = Image.init(systemName:)();
    type metadata accessor for HourlyForecastComponentView();
    uint64_t v115 = v14;
    uint64_t v43 = (uint64_t)v28;
    uint64_t v44 = v24;
    uint64_t v45 = v139;
    uint64_t v46 = v17;
    uint64_t v47 = v141;
    sub_10014BB38();
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v44, enum case for ColorSchemeContrast.increased(_:), v20);
    char v48 = static ColorSchemeContrast.== infix(_:_:)();
    uint64_t v49 = *(void (**)(char *, uint64_t))(v21 + 8);
    v49(v44, v20);
    v49(v47, v20);
    uint64_t v50 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v51 = (unsigned int *)&enum case for Image.TemplateRenderingMode.template(_:);
    if ((v48 & 1) == 0) {
      uint64_t v51 = (unsigned int *)&enum case for Image.TemplateRenderingMode.original(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v50 - 8) + 104))(v43, *v51, v50);
    _s7Weather24LocationCompositionStateOwst_0(v43, 0, 1, v50);
    uint64_t v52 = Image.renderingMode(_:)();
    swift_release();
    sub_100178110(v43, &qword_100E7DFA0);
    uint64_t v53 = static Font.title3.getter();
    uint64_t v54 = static Font.body.getter();
    uint64_t v55 = *(void *)(v45 + 8);
    char v56 = *(unsigned char *)(v45 + 16);
    sub_100195B7C(v55, v56);
    sub_100149AE8();
    char v58 = v57;
    sub_10018F6D8(v55, v56);
    uint64_t v59 = enum case for Font.Leading.tight(_:);
    uint64_t v60 = type metadata accessor for Font.Leading();
    uint64_t v61 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 104))(v123, v59, v60);
    uint64_t v62 = v60;
    uint64_t v24 = v44;
    _s7Weather24LocationCompositionStateOwst_0(v61, 0, 1, v62);
    uint64_t v63 = v124;
    sub_10006DF38(v61, (uint64_t)v46 + *(int *)(v124 + 24), &qword_100E6D330);
    *uint64_t v46 = v53;
    v46[1] = v54;
    *((unsigned char *)v46 + *(int *)(v63 + 28)) = v58 & 1;
    char v64 = v118;
    sub_10014BF8C((uint64_t)v46, (uint64_t)v118 + *(int *)(v117 + 36), (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
    *char v64 = v52;
    swift_retain();
    sub_10014CFD0((uint64_t)v46, (void (*)(void))type metadata accessor for FontWithSmallVariantModifier);
    sub_100178110(v61, &qword_100E6D330);
    swift_release();
    uint64_t v65 = v125;
    static TypesettingLanguageAwareLineHeightRatio.disable.getter();
    sub_10014C998();
    uint64_t v66 = v119;
    View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
    (*(void (**)(char *, uint64_t))(v126 + 8))(v65, v127);
    sub_100178110((uint64_t)v64, &qword_100E7DFA8);
    uint64_t v67 = sub_10014BD18();
    uint64_t v69 = v68;
    uint64_t v70 = v120;
    uint64_t v71 = (uint64_t)v116;
    uint64_t v72 = v122;
    (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v116, v66, v122);
    long long v73 = (uint64_t *)(v71 + *(int *)(v132 + 36));
    *long long v73 = v67;
    v73[1] = v69;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v66, v72);
    uint64_t v74 = v121;
    sub_10020E72C(v71, v121, &qword_100EA6018);
    sub_10006DF38(v74, (uint64_t)v115, &qword_100EA6018);
    swift_storeEnumTagMultiPayload();
    sub_10014CA44();
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v74, &qword_100EA6018);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_10014CA44();
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t v75 = v141;
  char v76 = sub_10014BE58();
  uint64_t v77 = v134;
  if (v76) {
    goto LABEL_12;
  }
  if (qword_100E62960 != -1) {
    swift_once();
  }
  if (byte_100EA5E88 == 1)
  {
LABEL_12:
    sub_100702DF0();
    Swift::String v78 = Double.formattedPercent(roundToNearestPercent:)(1);
    uint64_t v79 = sub_10004EF14(v78._countAndFlagsBits, (uint64_t)v78._object);
    uint64_t v81 = v80;
    char v83 = v82;
    swift_bridgeObjectRelease();
    type metadata accessor for HourlyForecastComponentView();
    sub_10014BB38();
    uint64_t v84 = v128;
    (*(void (**)(char *, void, uint64_t))(v77 + 104))(v24, enum case for ColorSchemeContrast.increased(_:), v128);
    char v85 = static ColorSchemeContrast.== infix(_:_:)();
    uint64_t v86 = *(void (**)(char *, uint64_t))(v77 + 8);
    v86(v24, v84);
    v86(v75, v84);
    if (v85) {
      static Color.white.getter();
    }
    else {
      static Color.cyan.getter();
    }
    char v87 = v83 & 1;
    uint64_t v88 = Text.foregroundColor(_:)();
    uint64_t v90 = v89;
    char v92 = v91;
    uint64_t v94 = v93;
    uint64_t v141 = v93;
    swift_release();
    v92 &= 1u;
    sub_100191924(v79, v81, v87);
    swift_bridgeObjectRelease();
    uint64_t v146 = v88;
    uint64_t v147 = v90;
    char v148 = v92;
    uint64_t v149 = v94;
    __int16 v150 = 257;
    uint64_t v144 = sub_100702F68();
    uint64_t v145 = v95;
    sub_10014A85C();
    uint64_t v96 = Text.init<A>(_:)();
    uint64_t v98 = v97;
    char v100 = v99 & 1;
    sub_10017DF08(&qword_100E7A000);
    sub_1005F9F5C();
    uint64_t v101 = (uint64_t)v131;
    View.accessibilityLabel(_:)();
    sub_100191924(v96, v98, v100);
    swift_bridgeObjectRelease();
    sub_100191924(v88, v90, v92);
    swift_bridgeObjectRelease();
    uint64_t v102 = v130;
    sub_10006DF38(v101, v130, &qword_100EA5FF0);
    uint64_t v103 = v136;
    *(unsigned char *)(v102 + *(int *)(v136 + 36)) = 1;
    sub_100178110(v101, &qword_100EA5FF0);
    uint64_t v104 = v129;
    sub_10020E72C(v102, v129, &qword_100EA5FF8);
    sub_10020E72C(v104, v143, &qword_100EA5FF8);
    uint64_t v105 = 0;
  }
  else
  {
    uint64_t v105 = 1;
    uint64_t v103 = v136;
  }
  uint64_t v106 = v143;
  _s7Weather24LocationCompositionStateOwst_0(v143, v105, 1, v103);
  uint64_t v107 = (uint64_t)v142;
  uint64_t v108 = v135;
  sub_10006DF38((uint64_t)v142, v135, &qword_100EA6020);
  uint64_t v109 = v137;
  sub_10006DF38(v106, v137, &qword_100EA6000);
  uint64_t v110 = v138;
  *uint64_t v138 = 0;
  *((unsigned char *)v110 + 8) = 1;
  uint64_t v111 = (int *)sub_10017DF08(&qword_100EA6040);
  sub_10006DF38(v108, (uint64_t)v110 + v111[12], &qword_100EA6020);
  sub_10006DF38(v109, (uint64_t)v110 + v111[16], &qword_100EA6000);
  uint64_t v112 = (char *)v110 + v111[20];
  *(void *)uint64_t v112 = 0;
  v112[8] = 1;
  sub_100178110(v106, &qword_100EA6000);
  sub_100178110(v107, &qword_100EA6020);
  sub_100178110(v109, &qword_100EA6000);
  return sub_100178110(v108, &qword_100EA6020);
}

void sub_10014BB38()
{
}

uint64_t sub_10014BB6C()
{
  uint64_t v1 = sub_100183E44();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162EB8();
  sub_100181D48(v0, v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100184648(v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      return 0x662E7465736E7573;
    }
    else
    {
      sub_1001827D0(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
      if (*((void *)v3 + 2)) {
        uint64_t v6 = *((void *)v3 + 1);
      }
      else {
        uint64_t v6 = 0;
      }
      swift_bridgeObjectRetain();
      sub_100184648((uint64_t)v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    }
  }
  else
  {
    sub_100184648(v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    return 0x2E657369726E7573;
  }
  return v6;
}

uint64_t sub_10014BD18()
{
  uint64_t v1 = sub_100183E44();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162EB8();
  sub_100181D48(v0, v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1001827D0(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    swift_bridgeObjectRetain();
    sub_100184648((uint64_t)v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
  }
  else
  {
    sub_100184648(v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  }
  return sub_100163738();
}

uint64_t sub_10014BE58()
{
  uint64_t v1 = sub_100183E44();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162EB8();
  sub_100181D48(v0, v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1001827D0(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    uint64_t v5 = v3[48];
    sub_100184648((uint64_t)v3, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
  }
  else
  {
    sub_100184648(v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    return 0;
  }
  return v5;
}

uint64_t sub_10014BF8C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10014BFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v59 = type metadata accessor for Text.Sizing();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100EA6048);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v54 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EA6050);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10017DF08(&qword_100EA6058);
  uint64_t v10 = __chkstk_darwin(v56);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001CA59C(v10, v13, v14, v15, v16, v17, v18, v19, v54, a1, v56, v57, v58, v59, v60, v61, v62, v63);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  sub_10014C51C(v20, v22, v24, v25, v26, v27, v28, v29, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63);
  uint64_t v31 = sub_10014C6C0(v21, v23, v30);
  uint64_t v33 = v32;
  char v35 = v34;
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = v31;
  uint64_t v63 = v33;
  char v64 = v35 & 1;
  uint64_t v65 = v37;
  static Text.Sizing.adjustsForOversizedCharacters.getter();
  uint64_t v38 = v54;
  View.textSizing(_:)();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v4, v59);
  sub_100191924(v62, v63, v64);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = v58;
  uint64_t v41 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v9, v38, v60);
  uint64_t v42 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v42 = KeyPath;
  *((void *)v42 + 1) = 1;
  v42[16] = 0;
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v41);
  sub_10006DF38((uint64_t)v9, (uint64_t)v12, &qword_100EA6050);
  *(_WORD *)&v12[*(int *)(v56 + 36)] = 257;
  uint64_t v43 = sub_100178110((uint64_t)v9, &qword_100EA6050);
  sub_10014C370(v43, v44, v45, v46, v47, v48, v49, v50, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63);
  uint64_t v62 = v51;
  uint64_t v63 = v52;
  sub_10014C91C();
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  return sub_100178110((uint64_t)v12, &qword_100EA6058);
}

void sub_10014C370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10010977C();
  a17 = v19;
  a18 = v20;
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100125FF8();
  sub_100184760(v28, v29, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  uint64_t v30 = sub_100182544();
  if (v30 > 1)
  {
    sub_1001CA894(v30, v31, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    sub_1001844D0();
    uint64_t v32 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
    uint64_t v33 = (uint64_t)v23;
  }
  else
  {
    sub_1001827D0(v18, (uint64_t)v26, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    swift_bridgeObjectRetain();
    uint64_t v32 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
    uint64_t v33 = (uint64_t)v26;
  }
  sub_100184648(v33, (void (*)(void))v32);
  sub_100162714();
}

void sub_10014C51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10010977C();
  a17 = v18;
  a18 = v19;
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  sub_100162E4C();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100125FF8();
  sub_100184760(v27, v28, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  uint64_t v29 = sub_100182544();
  if (v29 > 1)
  {
    sub_1001CA894(v29, v30, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    swift_bridgeObjectRetain();
    uint64_t v31 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
    uint64_t v32 = (uint64_t)v22;
  }
  else
  {
    sub_10018355C(v29, v30, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    swift_bridgeObjectRetain();
    uint64_t v31 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
    uint64_t v32 = (uint64_t)v25;
  }
  sub_100184648(v32, (void (*)(void))v31);
  sub_100162714();
}

uint64_t sub_10014C6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v17[1] = a3;
  uint64_t v18 = type metadata accessor for TimeStyle();
  uint64_t v4 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.Leading();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 8);
  char v12 = *(unsigned char *)(v3 + 16);
  sub_100195B7C(v11, v12);
  sub_100149AE8();
  char v14 = v13;
  sub_10018F6D8(v11, v12);
  if (v14) {
    static Font.footnote.getter();
  }
  else {
    static Font.subheadline.getter();
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.Leading.tight(_:), v7);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  Font.bold()();
  swift_release();
  type metadata accessor for Style();
  static Style.componentTime.getter();
  uint64_t v15 = TimeStyle.formatTime(_:periodSymbols:font:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  return v15;
}

unint64_t sub_10014C91C()
{
  unint64_t result = qword_100EA6060;
  if (!qword_100EA6060)
  {
    sub_10018C6DC(&qword_100EA6058);
    sub_100012EC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6060);
  }
  return result;
}

unint64_t sub_10014C998()
{
  unint64_t result = qword_100EA6028;
  if (!qword_100EA6028)
  {
    sub_10018C6DC(&qword_100E7DFA8);
    sub_1000116FC(&qword_100E7DF80, (void (*)(uint64_t))type metadata accessor for FontWithSmallVariantModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6028);
  }
  return result;
}

unint64_t sub_10014CA44()
{
  unint64_t result = qword_100EA6030;
  if (!qword_100EA6030)
  {
    sub_10018C6DC(&qword_100EA6018);
    sub_10018C6DC(&qword_100E7DFA8);
    sub_10014C998();
    swift_getOpaqueTypeConformance2();
    sub_100217794();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6030);
  }
  return result;
}

uint64_t sub_10014CAF4()
{
  uint64_t v1 = type metadata accessor for LocationHeaderView(0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - v5;
  char v7 = sub_10014DFC0();
  sub_10014D0EC(v0, (uint64_t)v6, (void (*)(void))type metadata accessor for LocationHeaderView);
  if (v7)
  {
    char v8 = v6[*(int *)(v1 + 64) + 138];
    sub_10014D0EC((uint64_t)v6, (uint64_t)v4, (void (*)(void))type metadata accessor for LocationHeaderView);
    if (v8)
    {
      char v9 = 1;
    }
    else
    {
      uint64_t v10 = &v4[*(int *)(v1 + 44)];
      uint64_t v11 = *(void *)v10;
      char v12 = v10[8];
      sub_100195B7C(*(void *)v10, v12);
      sub_100149AE8();
      char v14 = v13;
      sub_10018F6D8(v11, v12);
      char v9 = v14 ^ 1;
    }
    sub_10014CC74((uint64_t)v4, (void (*)(void))type metadata accessor for LocationHeaderView);
  }
  else
  {
    char v9 = 0;
  }
  sub_10014CC74((uint64_t)v6, (void (*)(void))type metadata accessor for LocationHeaderView);
  return v9 & 1;
}

uint64_t sub_10014CC74(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10014CCC8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

uint64_t sub_10014CD18(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10014CD6C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10014CDC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10014CE24(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10014CE78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10014CED8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10014CF28(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10014CF7C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10014CFD0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10014D024(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10014D078(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t type metadata accessor for LocationHeaderView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E63C60);
}

uint64_t sub_10014D0EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10014D144(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10014D15C(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[6];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10014D82C(*(void *)(a1 + a2[7]), *(unsigned __int8 *)(a1 + a2[7] + 8), *(unsigned char *)(a1 + a2[7] + 9));
  uint64_t v7 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[9];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[12]), *(unsigned char *)(a1 + a2[12] + 8));
  uint64_t v11 = a1 + a2[13];
  sub_100191934(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(void *)(v11 + 24), *(unsigned char *)(v11 + 32));
  sub_10018F6D8(*(void *)(a1 + a2[14]), *(unsigned char *)(a1 + a2[14] + 8));
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[17]);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[20]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[21]);
  uint64_t v12 = a1 + a2[22];
  uint64_t v13 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  uint64_t v14 = a1 + a2[24];
  sub_10014DC00(*(void *)v14, *(void *)(v14 + 8), *(void *)(v14 + 16), *(void *)(v14 + 24), *(void *)(v14 + 32), *(void *)(v14 + 40), *(unsigned char *)(v14 + 48));
  swift_release();
  sub_10018F6E4();

  return swift_release();
}

uint64_t sub_10014D478(uint64_t a1, int *a2)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
      uint64_t v4 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_10018F6D8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[7];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  uint64_t v9 = a1 + a2[11];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  sub_10014D838(*(void *)(a1 + a2[12]), *(unsigned __int8 *)(a1 + a2[12] + 8), *(unsigned char *)(a1 + a2[12] + 9));
  uint64_t v11 = a1 + a2[13];
  uint64_t v12 = sub_10017DF08(&qword_100E63BE8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v15)((void *)(v12 - 8), v11, v12);
  uint64_t v13 = a1 + a2[14];

  return v15(v13, v12);
}

uint64_t sub_10014D82C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10014D83C(uint64_t a1, int *a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + a2[6];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[7];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v8 = a1 + a2[10];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = v8 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v11 = a1 + a2[12];
  sub_10017DF08(&qword_100E63BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for Font.Context();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[13]), *(unsigned char *)(a1 + a2[13] + 8));
  uint64_t v13 = a1 + a2[14];
  sub_100191934(*(void *)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(void *)(v13 + 24), *(unsigned char *)(v13 + 32));
  uint64_t v14 = a1 + a2[15];
  sub_10014DC00(*(void *)v14, *(void *)(v14 + 8), *(void *)(v14 + 16), *(void *)(v14 + 24), *(void *)(v14 + 32), *(void *)(v14 + 40), *(unsigned char *)(v14 + 48));
  uint64_t v15 = a1 + a2[16];
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v15 + 16), *(void *)(v15 + 24), *(void *)(v15 + 32), *(void *)(v15 + 40), *(unsigned char *)(v15 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100191924(*(void *)(a1 + a2[17]), *(void *)(a1 + a2[17] + 8), *(unsigned char *)(a1 + a2[17] + 16));
  swift_bridgeObjectRelease();
  sub_100191924(*(void *)(a1 + a2[18]), *(void *)(a1 + a2[18] + 8), *(unsigned char *)(a1 + a2[18] + 16));
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + a2[19];
  if (*(void *)(v16 + 24))
  {
    sub_100191924(*(void *)v16, *(void *)(v16 + 8), *(unsigned char *)(v16 + 16));
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = a1 + a2[21];
  uint64_t v18 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[23];
  uint64_t v20 = sub_10017DF08(&qword_100E63BE8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

uint64_t sub_10014DC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10014DC0C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      unsigned __int8 v5 = *(unsigned char *)(a1 + 16);
      return sub_10014D144(v3, v4, v5);
    case 1:
      type metadata accessor for AutomationCellInfo(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 7:
        case 10:
          goto LABEL_9;
        case 6:
LABEL_13:
          uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
          return v7(a1, v6);
        case 8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_9;
        case 9:
        case 11:
          swift_bridgeObjectRelease();
LABEL_9:
          uint64_t result = swift_bridgeObjectRelease();
          break;
        default:
          return result;
      }
      break;
    case 0:
      type metadata accessor for AutomationViewInfo(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 3:
          goto LABEL_9;
        case 2:
          goto LABEL_13;
        default:
          return result;
      }
  }
  return result;
}

uint64_t sub_10014DD80(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  swift_retain();
  sub_10017DF08(&qword_100E63D98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v10 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v10;
    long long v11 = v9[3];
    _OWORD v8[2] = v9[2];
    v8[3] = v11;
    uint64_t v12 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
    uint64_t v13 = (char *)v8 + v12;
    uint64_t v14 = (char *)v9 + v12;
    *(_OWORD *)uint64_t v13 = *(_OWORD *)((char *)v9 + v12);
    v13[16] = *((unsigned char *)v9 + v12 + 16);
    v13[17] = *((unsigned char *)v9 + v12 + 17);
    v13[18] = *((unsigned char *)v9 + v12 + 18);
    uint64_t v15 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v16 = &v13[v15];
    uint64_t v17 = &v14[v15];
    uint64_t v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  swift_retain();
  return a1;
}

uint64_t sub_10014DEEC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for ConditionModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E64278);
}

uint64_t type metadata accessor for TemperatureModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E643C8);
}

uint64_t type metadata accessor for ConditionSummaryModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E641D0);
}

uint64_t type metadata accessor for TranslationModifier(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E64128);
}

uint64_t sub_10014DFC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale.Language();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  __chkstk_darwin(v2);
  uint64_t v56 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin(v4);
  char v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E63DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ContentSizeCategory();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = *(void *)(v0 + 16);
  char v18 = *(unsigned char *)(v1 + 24);
  sub_100195B7C(v17, v18);
  sub_10014E71C();
  char v20 = v19;
  sub_10018F6D8(v17, v18);
  if ((v20 & 1) == 0) {
    goto LABEL_57;
  }
  uint64_t v21 = type metadata accessor for LocationHeaderView(0);
  sub_10014E6E8();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v22 == enum case for ContentSizeCategory.extraSmall(_:)
    || v22 == enum case for ContentSizeCategory.small(_:)
    || v22 == enum case for ContentSizeCategory.medium(_:)
    || v22 == enum case for ContentSizeCategory.large(_:)
    || v22 == enum case for ContentSizeCategory.extraLarge(_:)
    || v22 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v22 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    if (v22 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v22 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v22 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v22 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v22 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v29(v16, v10);
LABEL_57:
      char v51 = 0;
      return v51 & 1;
    }
    v29(v14, v10);
    v29(v16, v10);
  }
  uint64_t v34 = v1 + *(int *)(v21 + 32);
  uint64_t v35 = *(void *)v34;
  char v36 = *(unsigned char *)(v34 + 8);
  sub_100195B7C(*(void *)v34, v36);
  sub_100149AE8();
  char v38 = v37;
  sub_10018F6D8(v35, v36);
  if (v38) {
    goto LABEL_57;
  }
  static Locale.current.getter();
  uint64_t v39 = v56;
  Locale.language.getter();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v6, v55);
  Locale.Language.languageCode.getter();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v58);
  uint64_t v40 = type metadata accessor for Locale.LanguageCode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v40) == 1)
  {
    sub_100178110((uint64_t)v9, &qword_100E63DC0);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v41 = Locale.LanguageCode.identifier.getter();
    uint64_t v42 = v43;
    (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v9, v40);
  }
  uint64_t v44 = *(void *)v1;
  char v45 = *(unsigned char *)(v1 + 8);
  sub_100195B7C(v44, v45);
  sub_100149AE8();
  char v47 = v46;
  sub_10018F6D8(v44, v45);
  if ((v47 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  if (!v42)
  {
LABEL_55:
    char v51 = 1;
    return v51 & 1;
  }
  BOOL v48 = v41 == 29281 && v42 == 0xE200000000000000;
  if (v48
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || (v41 == 26984 ? (BOOL v49 = v42 == 0xE200000000000000) : (BOOL v49 = 0), v49))
  {
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  char v51 = v50 ^ 1;
  return v51 & 1;
}

void sub_10014E554()
{
  sub_100162EA0();
  uint64_t v6 = sub_10018A394(v3, v4, v5);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001523E8();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100188708(v11, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v1(0);
    sub_100162E4C();
    sub_1001723EC();
    v12();
  }
  else
  {
    static os_log_type_t.fault.getter();
    uint64_t v13 = static Log.runtimeIssuesLog.getter();
    if (sub_1005EFF24(v13))
    {
      sub_10017E670();
      sub_100184468();
      uint64_t v14 = sub_1001A3874(4.8149e-34);
      sub_1001EC3FC(v14);
      sub_1005EFCB0((void *)&_mh_execute_header, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      sub_10012BFB4();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    sub_1005EFDEC();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  }
  sub_100162694();
}

void sub_10014E6E8()
{
}

void sub_10014E71C()
{
  sub_100162EA0();
  sub_100214D8C();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  if ((v0 & 1) == 0)
  {
    swift_retain();
    uint64_t v2 = (_DWORD *)static os_log_type_t.fault.getter();
    uint64_t v3 = static Log.runtimeIssuesLog.getter();
    if (sub_1001260AC(v3))
    {
      sub_10017E670();
      uint64_t v4 = sub_100184468();
      sub_1005EFDB8(v4);
      *uint64_t v2 = 136315138;
      sub_1005EFED4();
      uint64_t v7 = sub_10016414C(0xD000000000000017, v5, v6);
      sub_1001853DC(v7);
      sub_10019DEAC((void *)&_mh_execute_header, v8, v9, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      sub_1001EA978();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    sub_10012B990();
    uint64_t v10 = sub_100185B08();
    v11(v10);
  }
  sub_100162694();
}

uint64_t sub_10014E888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for HourlyForecastComponentView();
  sub_100164920(v5);
  uint64_t v7 = (uint64_t *)(v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));

  return sub_1001291C0(a1, v7, a2);
}

uint64_t type metadata accessor for HourlyForecastComponentView()
{
  uint64_t result = qword_100EA5EF0;
  if (!qword_100EA5EF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10014E958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E7DF88);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E7DF90);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v8 = sub_10017DF08(&qword_100E7DF98);
  sub_1001471D0(v1, (uint64_t)&v4[*(int *)(v8 + 44)]);
  uint64_t v9 = v1 + *(int *)(type metadata accessor for DailyComponentForecastRowView() + 72);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_100195B7C(*(void *)v9, v11);
  sub_100147CF4();
  char v13 = v12;
  sub_10018F6D8(v10, v11);
  if ((v13 & 1) == 0)
  {
    sub_10017DF08(&qword_100E73A80);
    ScaledMetric.wrappedValue.getter();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006DF38((uint64_t)v4, (uint64_t)v7, &qword_100E7DF88);
  uint64_t v14 = &v7[*(int *)(v5 + 36)];
  long long v15 = v26;
  *(_OWORD *)uint64_t v14 = v25;
  *((_OWORD *)v14 + 1) = v15;
  *((_OWORD *)v14 + 2) = v27;
  sub_100178110((uint64_t)v4, &qword_100E7DF88);
  uint64_t v16 = *(void *)v9;
  char v17 = *(unsigned char *)(v9 + 8);
  sub_100195B7C(*(void *)v9, v17);
  sub_100147CF4();
  char v19 = v18;
  sub_10018F6D8(v16, v17);
  uint64_t v20 = v24;
  sub_10006DF38((uint64_t)v7, v24, &qword_100E7DF90);
  uint64_t v21 = (unsigned char *)(v20 + *(int *)(sub_10017DF08(&qword_100E7DF70) + 36));
  unsigned char *v21 = 1;
  v21[1] = (v19 & 1) == 0;
  return sub_100178110((uint64_t)v7, &qword_100E7DF90);
}

uint64_t sub_10014EBB0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t type metadata accessor for FrameContainer()
{
  uint64_t result = qword_100E9EDA0;
  if (!qword_100E9EDA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10014EC54(uint64_t a1)
{
  uint64_t v17 = type metadata accessor for Color.RGBColorSpace();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10012B938();
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_10014EDFC(0, v6, 0);
    uint64_t v7 = enum case for Color.RGBColorSpace.sRGB(_:);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
    uint64_t v9 = a1 + 64;
    do
    {
      v8(v1, v7, v17);
      Color.init(_:red:green:blue:opacity:)();
      uint64_t v10 = Gradient.Stop.init(color:location:)();
      uint64_t v12 = v11;
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_10014EDFC(v13 > 1, v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      long long v15 = &_swiftEmptyArrayStorage[2 * v14];
      void v15[4] = v10;
      v15[5] = v12;
      v9 += 40;
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease();
  return Gradient.init(stops:)();
}

void sub_10014EDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001EA6F0(a1, a2, a3, *v3, (uint64_t)&unk_100E6BEE8, (void (*)(uint64_t))sub_10012B80C, (void (*)(uint64_t))sub_1001EAA1C);
  *uint64_t v3 = v4;
}

uint64_t sub_10014EE4C()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

void sub_10014EE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10048D1D0(a1, (uint64_t)type metadata accessor for DailyComponentForecastRowView, (uint64_t)sub_1001298B8, (uint64_t)&qword_100E79AB0, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

unint64_t sub_10014EEB8()
{
  unint64_t result = qword_100E7DF78;
  if (!qword_100E7DF78)
  {
    sub_10018C6DC(&qword_100E7DF48);
    sub_10022F2CC();
    sub_100147140(&qword_100E7DF80, (void (*)(uint64_t))type metadata accessor for FontWithSmallVariantModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DF78);
  }
  return result;
}

unint64_t sub_10014EF64()
{
  unint64_t result = qword_100E7EAA8;
  if (!qword_100E7EAA8)
  {
    sub_10018C6DC(&qword_100E79AB0);
    sub_100145810(&qword_100E7EAB0, (void (*)(uint64_t))type metadata accessor for DailyComponentForecastRowView);
    sub_100145810((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EAA8);
  }
  return result;
}

uint64_t sub_10014F040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  uint64_t v6 = **(void **)a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  char v7 = *(unsigned char *)(*(void *)a1 + 16);
  uint64_t v9 = *(void *)(*(void *)a1 + 24);
  uint64_t v8 = *(void *)(*(void *)a1 + 32);
  uint64_t v10 = *(void *)(*(void *)a1 + 40);
  char v11 = *(unsigned char *)(*(void *)a1 + 48);
  uint64_t v12 = *(void *)(*(void *)a1 + 56);
  char v13 = *(unsigned char *)(*(void *)a1 + 64);
  uint64_t v14 = *(void *)(*(void *)a1 + 72);
  char v15 = *(unsigned char *)(*(void *)a1 + 80);
  char v16 = *(unsigned char *)(*(void *)a1 + 104);
  long long v17 = *(_OWORD *)(*(void *)a1 + 88);
  char v18 = *(unsigned char *)(*(void *)a1 + 105);
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v10;
  *(unsigned char *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v12;
  *(unsigned char *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v14;
  *(unsigned char *)(a2 + 80) = v15;
  *(_OWORD *)(a2 + 88) = v17;
  *(unsigned char *)(a2 + 104) = v16;
  *(unsigned char *)(a2 + 105) = v18;
  uint64_t v19 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)(a2 + 112) = v19;
  *(unsigned char *)(a2 + 120) = (_BYTE)v4;
  uint64_t v20 = (int *)sub_10017DF08(&qword_100E7B568);
  sub_1001B7204(*(void *)(a1 + 16), a2 + v20[16], &qword_100E7B570);
  sub_10017F074(a2 + v20[20]);
  sub_1001B7204(v21, a2 + v20[24], &qword_100E7B578);
  sub_10017FD48((__n128 *)(a2 + v20[28]));
  sub_1001B7204(v22, a2 + v20[32], &qword_100E7B580);
  sub_1001A08B4((__n128 *)(a2 + v20[36]));
  sub_1001B7204(v23, a2 + v20[40], &qword_100E7B588);
  sub_100190CC4(v6, v5, v7);
  swift_bridgeObjectRetain();

  return swift_retain();
}

unint64_t sub_10014F1B0()
{
  unint64_t result = qword_100E657D8;
  if (!qword_100E657D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E657D8);
  }
  return result;
}

void sub_10014F1FC(uint64_t *a1)
{
  uint64_t v3 = v1;
  sub_10017DF08(a1);
  uint64_t v4 = *v1;
  uint64_t v5 = static _SetStorage.copy(original:)();
  if (*(void *)(v4 + 16))
  {
    uint64_t v6 = (void *)sub_100164B20();
    if (v9) {
      BOOL v10 = (unint64_t)v6 >= v8;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10) {
      memmove(v6, v2, 8 * v7);
    }
    sub_1001A341C();
    if (!v13) {
      goto LABEL_10;
    }
LABEL_9:
    sub_1001502B8();
    while (1)
    {
      *(unsigned char *)(*(void *)(v5 + 48) + v15) = *(unsigned char *)(*(void *)(v4 + 48) + v15);
      if (v14) {
        goto LABEL_9;
      }
LABEL_10:
      uint64_t v16 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v16 >= v11) {
        goto LABEL_25;
      }
      if (!*((void *)v2 + v16))
      {
        if (v12 + 2 >= v11) {
          goto LABEL_25;
        }
        if (!*((void *)v2 + v12 + 2))
        {
          if (v12 + 3 >= v11) {
            goto LABEL_25;
          }
          if (!*((void *)v2 + v12 + 3))
          {
            uint64_t v17 = v12 + 4;
            if (v12 + 4 >= v11) {
              goto LABEL_25;
            }
            if (!*((void *)v2 + v17)) {
              break;
            }
          }
        }
      }
LABEL_22:
      sub_1001194BC();
    }
    while (1)
    {
      uint64_t v18 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        break;
      }
      if (v18 >= v11) {
        goto LABEL_25;
      }
      ++v17;
      if (*((void *)v2 + v18)) {
        goto LABEL_22;
      }
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_release();
    *uint64_t v3 = v5;
  }
}

uint64_t sub_10014F318(uint64_t a1, uint64_t a2)
{
  uint64_t v90 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v92 = (uint64_t)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100129064();
  uint64_t v96 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(v8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100162A94();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E85FA8);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10016279C();
  unint64_t v15 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v88 - v19;
  __chkstk_darwin(v18);
  long long v25 = (char *)&v88 - v24;
  uint64_t v102 = *(void *)(a2 + 16);
  if (!v102) {
    return 0;
  }
  char v91 = v12;
  uint64_t v98 = (void *)v22;
  char v99 = (char *)v23;
  uint64_t v26 = 0;
  uint64_t v27 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v100 = *(void *)(v21 + 72);
  uint64_t v101 = a2 + ((v27 + 32) & ~v27);
  uint64_t v94 = v13;
  uint64_t v95 = a1;
  uint64_t v93 = v3;
  uint64_t v97 = v20;
  while (1)
  {
    sub_10014FDF0(v101 + v100 * v26, (uint64_t)v25);
    uint64_t v28 = v2 + *(int *)(v13 + 48);
    sub_10014FDF0((uint64_t)v25, v2);
    sub_10019DECC();
    sub_10014FDF0(v29, v30);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload) {
      break;
    }
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v43 = v98;
      sub_10014FDF0(v2, (uint64_t)v98);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v44 = v28;
        uint64_t v45 = v92;
        sub_100150350(v44, v92);
        uint64_t v33 = (uint64_t)v43;
        if (*v43 == *(void *)v45)
        {
          uint64_t v46 = v43[2];
          uint64_t v47 = *(void *)(v45 + 16);
          if (v46)
          {
            if (!v47) {
              goto LABEL_128;
            }
            if (v43[1] != *(void *)(v45 + 8) || v46 != v47)
            {
              char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v33 = (uint64_t)v98;
              if ((v49 & 1) == 0) {
                goto LABEL_128;
              }
            }
LABEL_63:
            BOOL v57 = *(void *)(v33 + 24) == *(void *)(v45 + 24) && *(void *)(v33 + 32) == *(void *)(v45 + 32);
            if (v57 || (v58 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v33 = (uint64_t)v98, (v58 & 1) != 0))
            {
              if (*(double *)(v33 + 40) == *(double *)(v45 + 40)
                && *(unsigned __int8 *)(v33 + 48) == *(unsigned __int8 *)(v45 + 48))
              {
                uint64_t v89 = v45 + v90[9];
                type metadata accessor for Precipitation();
                uint64_t v88 = sub_100186EA0(&qword_100E6ED08, (void (*)(uint64_t))&type metadata accessor for Precipitation);
                dispatch thunk of RawRepresentable.rawValue.getter();
                dispatch thunk of RawRepresentable.rawValue.getter();
                if (v105 == v103 && v106 == v104)
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v45 = v92;
                }
                else
                {
                  LODWORD(v89) = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v45 = v92;
                  uint64_t v33 = (uint64_t)v98;
                  if ((v89 & 1) == 0) {
                    goto LABEL_128;
                  }
                }
                sub_10018548C(v90[10]);
                BOOL v68 = v34 && v66 == v67;
                if (v68 || (v69 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v33 = (uint64_t)v98, (v69 & 1) != 0))
                {
                  sub_10018548C(v90[11]);
                  BOOL v72 = v34 && v70 == v71;
                  if (v72 || (v73 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v33 = (uint64_t)v98, (v73 & 1) != 0))
                  {
                    sub_10018548C(v90[12]);
                    BOOL v76 = v34 && v74 == v75;
                    if (v76
                      || (v77 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v33 = (uint64_t)v98, (v77 & 1) != 0))
                    {
                      char v78 = static Date.== infix(_:_:)();
                      uint64_t v33 = (uint64_t)v98;
                      if (v78)
                      {
                        char v79 = static TimeZone.== infix(_:_:)();
                        uint64_t v33 = (uint64_t)v98;
                        if ((v79 & 1) != 0
                          && *((unsigned __int8 *)v98 + v90[15]) == *(unsigned __int8 *)(v45 + v90[15]))
                        {
                          char v80 = sub_1001508B0(*(void **)((char *)v98 + v90[16]), *(void **)(v45 + v90[16]));
                          uint64_t v33 = (uint64_t)v98;
                          if (v80) {
                            goto LABEL_136;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else if (!v47)
          {
            goto LABEL_63;
          }
        }
LABEL_128:
        uint64_t v81 = v45;
        uint64_t v82 = v33;
        sub_10014FFB0(v81, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
        sub_10014FFB0(v82, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
        sub_10014FFB0(v2, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
        goto LABEL_129;
      }
      uint64_t v41 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
      uint64_t v42 = (uint64_t)v43;
      goto LABEL_40;
    }
    uint64_t v20 = v99;
    sub_10014FDF0(v2, (uint64_t)v99);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10014FFB0((uint64_t)v20, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
      uint64_t v20 = v97;
LABEL_41:
      sub_100178110(v2, &qword_100E85FA8);
      goto LABEL_129;
    }
    sub_100150350(v28, v3);
    uint64_t v32 = v3;
    if (static Date.== infix(_:_:)() & 1) != 0 && (sub_10012B5F4())
    {
      sub_100165130();
      if (v34)
      {
        if (v15) {
          BOOL v34 = v3 == v28;
        }
        else {
          BOOL v34 = 1;
        }
        if (v34) {
          goto LABEL_15;
        }
        BOOL v60 = *(void *)(v3 + 32) == *(void *)(v28 + 32) && *(void *)(v3 + 40) == *(void *)(v28 + 40);
        uint64_t v32 = v93;
        uint64_t v20 = v99;
        if (v60 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          if (v15 != 1)
          {
            uint64_t v45 = v28 + 56;
            uint64_t v61 = (void *)(v3 + 56);
            while (v15 > 1)
            {
              BOOL v62 = *(v61 - 1) == *(void *)(v45 - 8) && *v61 == *(void *)v45;
              uint64_t v32 = v93;
              uint64_t v20 = v99;
              if (!v62 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                goto LABEL_25;
              }
              sub_100188738();
              if (v34) {
                goto LABEL_15;
              }
            }
            __break(1u);
            goto LABEL_135;
          }
LABEL_15:
          uint64_t v20 = v99;
          uint64_t v32 = v93;
          sub_100189F64();
          BOOL v37 = v34 && v35 == v36;
          if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            sub_100189F64();
            BOOL v40 = v34 && v38 == v39;
            if (v40 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_132;
            }
          }
        }
      }
    }
LABEL_25:
    sub_10014FFB0(v32, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    sub_10014FFB0((uint64_t)v20, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    sub_10014FFB0(v2, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    uint64_t v3 = v32;
    uint64_t v13 = v94;
    uint64_t v20 = v97;
LABEL_129:
    sub_10014FFB0((uint64_t)v25, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    if (++v26 == v102) {
      return 0;
    }
  }
  sub_10014FDF0(v2, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v41 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
    uint64_t v42 = (uint64_t)v20;
LABEL_40:
    sub_10014FFB0(v42, (void (*)(void))v41);
    goto LABEL_41;
  }
  uint64_t v32 = (uint64_t)v91;
  sub_100150350(v28, (uint64_t)v91);
  if ((static Date.== infix(_:_:)() & 1) == 0 || (sub_10012B5F4() & 1) == 0 || (sub_100165130(), !v34))
  {
LABEL_61:
    sub_10014FFB0(v32, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    sub_10014FFB0((uint64_t)v20, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    sub_10014FFB0(v2, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    uint64_t v13 = v94;
    uint64_t v3 = v93;
    goto LABEL_129;
  }
  if (type metadata accessor for HourlyForecastComponentViewModel.HourlyItem) {
    BOOL v50 = v3 == v28;
  }
  else {
    BOOL v50 = 1;
  }
  if (v50) {
    goto LABEL_51;
  }
  BOOL v63 = *(void *)(v3 + 32) == *(void *)(v28 + 32) && *(void *)(v3 + 40) == *(void *)(v28 + 40);
  uint64_t v32 = (uint64_t)v91;
  if (!v63 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_61;
  }
  if (type metadata accessor for HourlyForecastComponentViewModel.HourlyItem == (uint64_t (*)(uint64_t))1)
  {
LABEL_51:
    uint64_t v32 = (uint64_t)v91;
    sub_100189F64();
    BOOL v53 = v34 && v51 == v52;
    if (v53 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      sub_100189F64();
      BOOL v56 = v34 && v54 == v55;
      if (v56 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_132:
        uint64_t v84 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
        sub_10014FFB0(v32, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        uint64_t v85 = (uint64_t)v20;
        goto LABEL_133;
      }
    }
    goto LABEL_61;
  }
  uint64_t v45 = v28 + 56;
  char v64 = (void *)(v3 + 56);
  while ((unint64_t)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem > 1)
  {
    BOOL v65 = *(v64 - 1) == *(void *)(v45 - 8) && *v64 == *(void *)v45;
    uint64_t v32 = (uint64_t)v91;
    if (!v65 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_61;
    }
    sub_100188738();
    if (v34) {
      goto LABEL_51;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  uint64_t v84 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
  uint64_t v86 = v45;
  uint64_t v87 = v33;
  sub_10014FFB0(v86, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
  uint64_t v85 = v87;
LABEL_133:
  sub_10014FFB0(v85, (void (*)(void))v84);
  sub_10014FFB0(v2, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  sub_10014FFB0((uint64_t)v25, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  return v26;
}

uint64_t sub_10014FD30(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10014FD90(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10014FDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  sub_10008B8B4();
  v5();
  return a2;
}

uint64_t sub_10014FE48(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10014FEA8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10014FEFC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10014FF5C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10014FFB0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100150004@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100150040();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100150040()
{
  uint64_t v3 = sub_100183E44();
  __chkstk_darwin(v3);
  sub_10017C704();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100125FF8();
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162E88();
  sub_100181D48(v1, v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  sub_10012B950();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_1001827D0(v0, v2, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
      v20._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      uint64_t v18 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
      uint64_t v19 = v2;
      goto LABEL_7;
    }
    uint64_t v7 = (unsigned __int16)sub_1001D13E4() | 0x2D7465736E0000;
    unint64_t v8 = 0xE700000000000000;
  }
  else
  {
    uint64_t v7 = (unsigned __int16)sub_1001D13E4() | 0x2D657369726E0000;
    unint64_t v8 = 0xE800000000000000;
  }
  String.append(_:)(*(Swift::String *)&v7);
  sub_100180D60(v9, v10, v11, v12, v13, v14, v15, v16, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  Date.timeIntervalSinceReferenceDate.getter();
  sub_1001802C0();
  v17();
  Double.write<A>(to:)();
  uint64_t v18 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem;
  uint64_t v19 = v0;
LABEL_7:
  sub_100184648(v19, (void (*)(void))v18);
  return sub_100163738();
}

uint64_t sub_10015029C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001502D0()
{
  return String.write(to:)();
}

uint64_t sub_1001502EC()
{
  return type metadata accessor for WeatherDataModel();
}

uint64_t sub_10015030C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_100150320()
{
  return *(void *)(v0 - 200);
}

uint64_t sub_100150350(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  uint64_t v5 = sub_100126010();
  v6(v5);
  return a2;
}

uint64_t sub_1001503A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100150408(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void *sub_100150468(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E63730);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v17, v18, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v28 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v23, v24, v28);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v27 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v27;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_13:
  uint64_t v29 = a3[9];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = sub_10017DF08(&qword_100E63740);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v34))
    {
      uint64_t v35 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v30, v31, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v34);
    }
    uint64_t v36 = *(int *)(v32 + 20);
    BOOL v37 = &v30[v36];
    uint64_t v38 = &v31[v36];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v34))
    {
      uint64_t v39 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v37, v38, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v34);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  return a1;
}

uint64_t sub_1001508B0(void *a1, void *a2)
{
  unint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v7 & 1) == 0) {
      return result;
    }
  }
  if (v2 == 1) {
    return 1;
  }
  unint64_t v8 = a2 + 7;
  uint64_t v9 = a1 + 7;
  unint64_t v10 = 1;
  while (v10 < v2)
  {
    uint64_t result = *(v9 - 1);
    if (result != *(v8 - 1) || *v9 != *v8)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0) {
        return 0;
      }
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10) {
      return 1;
    }
  }
  __break(1u);
  return result;
}

void *sub_10015097C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v16 = a2;
  uint64_t v15 = sub_10017DF08(&qword_100E8E538);
  uint64_t v4 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v13 = v2;
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_100150CA0();
    unint64_t v8 = v17;
    uint64_t v9 = *(void *)(type metadata accessor for MeasuredLocationViewerView.LocationTabPageModel(0) - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v14 = *(void *)(v9 + 72);
    do
    {
      v16(v10);
      LocationModel.identifier.getter();
      uint64_t v17 = v8;
      unint64_t v11 = v8[2];
      if (v11 >= v8[3] >> 1)
      {
        sub_100150CA0();
        unint64_t v8 = v17;
      }
      _OWORD v8[2] = v11 + 1;
      sub_10024D364((uint64_t)v6, (uint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11, &qword_100E8E538);
      v10 += v14;
      --v7;
    }
    while (v7);
    swift_release();
  }
  else
  {
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  return v8;
}

uint64_t sub_100150BA8()
{
  uint64_t v2 = sub_10018C470();
  uint64_t v3 = type metadata accessor for ContentStatusBannerPresentationMetrics(v2);
  sub_100164920(v3);
  uint64_t v4 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001627C0(v4);

  return sub_100150C40(v0, v1);
}

uint64_t sub_100150C40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = static Alignment.center.getter();
  a2[1] = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E8E540);
  return sub_100151360(a1, (uint64_t)a2 + *(int *)(v5 + 44));
}

void sub_100150CA0()
{
  sub_100150CD0();
  *uint64_t v0 = v1;
}

void sub_100150CD0()
{
  sub_100188DD4();
  if (v5)
  {
    sub_10017E9A4();
    if (v7 != v8)
    {
      sub_100183F88();
      if (v7)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  else
  {
    uint64_t v6 = v3;
  }
  uint64_t v9 = *(void *)(v0 + 16);
  if (v6 <= v9) {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v10 = v6;
  }
  if (!v10) {
    goto LABEL_17;
  }
  sub_10017DF08(v4);
  uint64_t v11 = sub_10017DF08(v1);
  sub_100164920(v11);
  uint64_t v13 = *(void *)(v12 + 72);
  uint64_t v14 = (const void *)sub_100127AE8();
  j__malloc_size(v14);
  if (!v13)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_10018BEF4();
  BOOL v16 = v16 && v13 == -1;
  if (v16) {
    goto LABEL_22;
  }
  sub_10018A284(v15);
LABEL_17:
  uint64_t v17 = sub_10017DF08(v1);
  sub_1001627C0(v17);
  uint64_t v19 = v0 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  if (v2)
  {
    sub_10012BE5C(v19, v9);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_100150DEC(v19, v9);
  }
  swift_release();
}

uint64_t sub_100150DEC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = sub_100163950();
    __break(1u);
    return result;
  }
  sub_100188B9C();
  sub_10017DF08(v3);
  sub_100162E4C();
  sub_10019C9C4();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }
  sub_100182C00();

  return swift_arrayInitWithCopy();
}

uint64_t sub_100150EAC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  char v6 = (double *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (double *)((char *)&v12 - v8);
  a2(v7);
  sub_10015176C();
  BOOL v10 = sub_100151004(v6, v9);
  sub_100151660();
  if (v10) {
    return sub_100151660();
  }
  sub_100151660();
  return sub_1001516CC();
}

BOOL sub_100151004(double *a1, double *a2)
{
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  __chkstk_darwin(v4);
  char v6 = (unsigned __int8 *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64F30);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E63A10);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (unsigned __int8 *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  BOOL v16 = (char *)&v24 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v24 - v17;
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  sub_10006DF38((uint64_t)a1 + *(int *)(v20 + 20), (uint64_t)v18, &qword_100E63A10);
  sub_10006DF38((uint64_t)a2 + *(int *)(v20 + 20), (uint64_t)v16, &qword_100E63A10);
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10006DF38((uint64_t)v18, (uint64_t)v9, &qword_100E63A10);
  sub_10006DF38((uint64_t)v16, v21, &qword_100E63A10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v4) == 1)
  {
    sub_10017DF4C((uint64_t)v16, &qword_100E63A10);
    sub_10017DF4C((uint64_t)v18, &qword_100E63A10);
    if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v4) == 1)
    {
      sub_10017DF4C((uint64_t)v9, &qword_100E63A10);
      return 1;
    }
    goto LABEL_11;
  }
  sub_10006DF38((uint64_t)v9, (uint64_t)v13, &qword_100E63A10);
  if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v4) == 1)
  {
    sub_10017DF4C((uint64_t)v16, &qword_100E63A10);
    sub_10017DF4C((uint64_t)v18, &qword_100E63A10);
    sub_100151660();
LABEL_11:
    sub_10017DF4C((uint64_t)v9, &qword_100E64F30);
    return 0;
  }
  sub_1001516CC();
  BOOL v22 = sub_1001C6EF8(v13, v6);
  sub_100151660();
  sub_10017DF4C((uint64_t)v16, &qword_100E63A10);
  sub_10017DF4C((uint64_t)v18, &qword_100E63A10);
  sub_100151660();
  sub_10017DF4C((uint64_t)v9, &qword_100E63A10);
  return v22;
}

uint64_t sub_100151360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationViewerViewModel();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocationModel();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  sub_10015176C();
  uint64_t v13 = Namespace.wrappedValue.getter();
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  LOBYTE(v5) = v7[*(int *)(v5 + 36)];
  sub_100151660();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v12, v9);
  uint64_t v14 = (int *)type metadata accessor for LocationViewPage(0);
  sub_1001516CC();
  *(void *)(a2 + v14[6]) = v13;
  *(unsigned char *)(a2 + v14[7]) = v5;
  *(void *)(a2 + v14[8]) = 0x4046000000000000;
  uint64_t v15 = (uint64_t *)(a2 + v14[9]);
  *uint64_t v15 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a2 + v14[10];
  type metadata accessor for PageControlDisplayState(0);
  sub_10015180C((uint64_t)&unk_100E8E1B0);
  uint64_t result = Environment.init<A>(_:)();
  *(void *)uint64_t v16 = result;
  *(unsigned char *)(v16 + 8) = v18 & 1;
  return result;
}

uint64_t type metadata accessor for MeasuredLocationViewerView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8E0F0);
}

uint64_t sub_100151660()
{
  uint64_t v1 = sub_100127C8C();
  v2(v1);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return v0;
}

uint64_t type metadata accessor for LocationViewPage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8EA60);
}

uint64_t sub_1001516CC()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_100126010();
  v4(v3);
  return v0;
}

uint64_t sub_100151718(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10015176C()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_1001517B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

unint64_t sub_10015180C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_100151850(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for ContentStatusBanner();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v2, 1, v3);
  if (!result)
  {
    if (*(void *)(v2 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v2 + *(int *)(v3 + 24);
    uint64_t v6 = type metadata accessor for Date();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v6);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      return v7(v5, v6);
    }
  }
  return result;
}

_OWORD *sub_100151914(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08(&qword_100E63A10);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    *(unsigned char *)uint64_t v5 = *(unsigned char *)v6;
    uint64_t v9 = v6 + 1;
    unint64_t v10 = v6[2];
    if (v10 >= 2)
    {
      v5[1] = *v9;
      v5[2] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v5 + 1) = *(_OWORD *)v9;
    }
    uint64_t v11 = *(int *)(v7 + 24);
    uint64_t v12 = (char *)v5 + v11;
    uint64_t v13 = (char *)v6 + v11;
    uint64_t v14 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_100151A98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (void *)(v9 + v10);
  uint64_t v13 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E63A10);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
    uint64_t v15 = v12 + 1;
    unint64_t v16 = v12[2];
    if (v16 >= 2)
    {
      v11[1] = *v15;
      void v11[2] = v16;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v11 + 1) = *(_OWORD *)v15;
    }
    uint64_t v17 = *(int *)(v13 + 24);
    char v18 = (char *)v11 + v17;
    uint64_t v19 = (char *)v12 + v17;
    uint64_t v20 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v22 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v23 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
    }
  }
  else
  {
    *uint64_t v24 = *v25;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  LOBYTE(v30) = *((unsigned char *)v30 + 8);
  *(void *)uint64_t v29 = v31;
  *(unsigned char *)(v29 + 8) = (_BYTE)v30;
  swift_retain();
  return a1;
}

uint64_t sub_100151DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = v5 + *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v7 = type metadata accessor for ContentStatusBanner();
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
  {
    if (*(void *)(v6 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v8 = v6 + *(int *)(v7 + 24);
    uint64_t v9 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
  }
  uint64_t v10 = a1 + *(int *)(a2 + 36);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100151F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100816B14);
}

uint64_t type metadata accessor for ContentStatusBanner()
{
  uint64_t result = qword_100E98FA0;
  if (!qword_100E98FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ContentStatusBannerPresentationMetrics(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8E808);
}

uint64_t sub_100151FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for ConditionPickerMenuViewModel(0) + 20);
  uint64_t v7 = type metadata accessor for WeatherCondition();
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_1001520F8()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v2 = type metadata accessor for LocationViewerInput();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64A48);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162758();
  __chkstk_darwin(v5);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v6 = sub_10019D144();
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E64A50);
      sub_10018868C(v7);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for LocationViewerInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v8();
    uint64_t v9 = sub_1001A3054();
    v1(v9);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64A50);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v10 = sub_1001858D8();
    sub_100164908(v10, v11, &qword_100E64A48);
    swift_endAccess();
  }
  sub_100162694();
}

uint64_t sub_1001522B4()
{
  uint64_t v1 = sub_100152360();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_100126010();
  v4(v3);
  return v0;
}

uint64_t type metadata accessor for LocationViewerViewModel()
{
  uint64_t result = qword_100EA50A8;
  if (!qword_100EA50A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100152344()
{
  return 0;
}

uint64_t sub_100152360()
{
  return 0;
}

uint64_t sub_1001523B4()
{
  return ChartAreaStyle.init(gradient:opacity:)();
}

uint64_t sub_1001523D0()
{
  return sub_100359948(v1, v0);
}

uint64_t sub_1001523E8()
{
  return sub_10017DF08(v0);
}

uint64_t sub_10015241C()
{
  return Hasher.init(_seed:)();
}

void sub_100152444(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_100152474()
{
  return v0;
}

uint64_t sub_100152480()
{
  return *(void *)(v0 - 472);
}

uint64_t sub_100152498()
{
  return v0;
}

uint64_t type metadata accessor for MainViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EA9B70);
}

uint64_t sub_1001524C8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100152520(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t type metadata accessor for LocationViewerInput()
{
  uint64_t result = qword_100E637D0;
  if (!qword_100E637D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1001525B8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = type metadata accessor for CurrentLocation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)
    && swift_getEnumCaseMultiPayload() <= 2)
  {
    uint64_t v9 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  }
  uint64_t v10 = type metadata accessor for LocationsState();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10015303C(*(void *)(v7 + *(int *)(v10 + 48)), *(void *)(v7 + *(int *)(v10 + 48) + 8), *(unsigned char *)(v7 + *(int *)(v10 + 48) + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[11];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[18];
  uint64_t v15 = type metadata accessor for LocationWeatherDataState(0);
  unint64_t result = _s7Weather24LocationCompositionStateOwet_0(v14, 1, v15);
  if (!result)
  {
    unint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      swift_bridgeObjectRelease();
      unint64_t result = *(void *)(v14 + 24);
      if (result < 0xE) {
        return result;
      }
    }
    else
    {
      if (result == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v18 = v14 + v17[5];
        uint64_t v19 = type metadata accessor for Locale();
        if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        }
        uint64_t v20 = v14 + v17[6];
        uint64_t v21 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
        uint64_t v22 = v14 + v17[7];
        uint64_t v23 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23)) {
          v13(v22, v12);
        }
        uint64_t v24 = v14 + v17[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v26 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v24, v26);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v27 = v14 + v17[9];
        uint64_t v28 = type metadata accessor for WeatherDataOverrides();
        if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
        {
          if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v12)) {
            v13(v27, v12);
          }
          uint64_t v29 = v27 + *(int *)(v28 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v12)) {
            v13(v29, v12);
          }
        }
        uint64_t v56 = sub_10017DF08(&qword_100E63748);
        uint64_t v30 = v14 + *(int *)(v56 + 48);
        uint64_t v31 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
        uint64_t v32 = (int *)type metadata accessor for PreprocessedWeatherData();
        swift_bridgeObjectRelease();
        uint64_t v33 = v30 + v32[6];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v34 = v33 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
        uint64_t v35 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35))
        {
          swift_bridgeObjectRelease();
          uint64_t v36 = v34 + *(int *)(v35 + 20);
          uint64_t v37 = type metadata accessor for TemperatureScaleConfiguration();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
          type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v38 = v30 + v32[7];
        swift_bridgeObjectRelease();
        uint64_t v39 = v38 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v40 = type metadata accessor for WeatherDescription();
        if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
        }
        uint64_t v41 = v30 + v32[8];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v42 = v41 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
        uint64_t v43 = v13;
        v13(v42, v12);
        uint64_t v44 = type metadata accessor for WeatherConditionBackgroundTimeData();
        uint64_t v45 = v42 + *(int *)(v44 + 20);
        uint64_t v46 = type metadata accessor for Elevation();
        if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v46)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
        }
        uint64_t v47 = v42 + *(int *)(v44 + 24);
        uint64_t v48 = type metadata accessor for BackgroundMoonData();
        if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v48)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v30 + v32[10], v40);
        type metadata accessor for UVIndexComponentPreprocessedDataModel();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v49 = v30 + v32[12];
        uint64_t v50 = type metadata accessor for PressureTrend();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
        type metadata accessor for PressureComponentPreprocessedDataModel();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v51 = v30 + v32[14];
        v43(v51, v12);
        uint64_t v52 = v51 + *(int *)(v44 + 20);
        if (!_s7Weather24LocationCompositionStateOwet_0(v52, 1, v46)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v52, v46);
        }
        uint64_t v53 = v51 + *(int *)(v44 + 24);
        if (!_s7Weather24LocationCompositionStateOwet_0(v53, 1, v48)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v53, v48);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 += *(int *)(v56 + 64);
      }
      else if (result)
      {
        return result;
      }
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v54 = type metadata accessor for News();
        uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8);
        return v55(v14, v54);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10015303C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

char *sub_100153098(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
    memcpy(a1, a2, *(void *)(*(void *)(active - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for CurrentLocation();
  uint64_t v246 = a1;
  unint64_t v243 = a3;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v18 = (int *)type metadata accessor for LocationsState();
  *(void *)&v13[v18[5]] = *(void *)&v14[v18[5]];
  *(void *)&v13[v18[6]] = *(void *)&v14[v18[6]];
  *(void *)&v13[v18[7]] = *(void *)&v14[v18[7]];
  *(void *)&v13[v18[8]] = *(void *)&v14[v18[8]];
  *(void *)&v13[v18[9]] = *(void *)&v14[v18[9]];
  *(void *)&v13[v18[10]] = *(void *)&v14[v18[10]];
  *(void *)&v13[v18[11]] = *(void *)&v14[v18[11]];
  uint64_t v19 = v18[12];
  uint64_t v20 = &v13[v19];
  uint64_t v21 = &v14[v19];
  uint64_t v240 = *(void *)v21;
  unsigned int v241 = v13;
  uint64_t v22 = *((void *)v21 + 1);
  unsigned __int8 v238 = v21[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10015458C(v240, v22, v238);
  *(void *)uint64_t v20 = v240;
  *((void *)v20 + 1) = v22;
  v20[16] = v238;
  *(void *)&v241[v18[13]] = *(void *)&v14[v18[13]];
  uint64_t v23 = v243[9];
  uint64_t v24 = a1;
  a1[v243[8]] = a2[v243[8]];
  a1[v23] = a2[v23];
  uint64_t v25 = v243[10];
  uint64_t v26 = v243[11];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  *uint64_t v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  uint64_t v29 = &a1[v26];
  uint64_t v30 = &a2[v26];
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32(v29, v30, v31);
  uint64_t v33 = v243[13];
  a1[v243[12]] = a2[v243[12]];
  *(void *)&a1[v33] = *(void *)&a2[v33];
  uint64_t v34 = v243[15];
  a1[v243[14]] = a2[v243[14]];
  a1[v34] = a2[v34];
  uint64_t v35 = v243[17];
  *(void *)&a1[v243[16]] = *(void *)&a2[v243[16]];
  a1[v35] = a2[v35];
  uint64_t v36 = v243[18];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for LocationWeatherDataState(0);
  swift_bridgeObjectRetain();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v42 = *((void *)v38 + 1);
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = v42;
      uint64_t v43 = v38 + 16;
      unint64_t v44 = *((void *)v38 + 3);
      swift_bridgeObjectRetain();
      if (v44 >= 0xE)
      {
        *((void *)v37 + 2) = *v43;
        *((void *)v37 + 3) = v44;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v37 + 1) = *(_OWORD *)v43;
      }
      goto LABEL_66;
    }
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_67:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
        return v24;
      }
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v37 = *(void *)v38;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v52 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v37, v38, v52);
      }
      swift_storeEnumTagMultiPayload();
LABEL_66:
      swift_storeEnumTagMultiPayload();
      goto LABEL_67;
    }
    uint64_t v45 = *((void *)v38 + 1);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v45;
    uint64_t v46 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v47 = v46[5];
    uint64_t v48 = &v37[v47];
    uint64_t v49 = &v38[v47];
    uint64_t v50 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
    {
      uint64_t v51 = sub_10017DF08(&qword_100E63730);
      memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
    }
    uint64_t v53 = v46[6];
    uint64_t v54 = &v37[v53];
    uint64_t v55 = &v38[v53];
    uint64_t v56 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    uint64_t v57 = v46[7];
    char v58 = &v37[v57];
    uint64_t v59 = &v38[v57];
    uint64_t v60 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
    {
      uint64_t v61 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      v32(v58, v59, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
    }
    uint64_t v62 = v46[8];
    BOOL v63 = &v37[v62];
    char v64 = &v38[v62];
    uint64_t v65 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v66 = swift_getEnumCaseMultiPayload();
    unsigned int v239 = v32;
    uint64_t v235 = v39;
    if (v66 == 1)
    {
      uint64_t v68 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v63, v64, v68);
    }
    else
    {
      if (v66)
      {
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
        goto LABEL_35;
      }
      uint64_t v67 = *((void *)v64 + 1);
      *(void *)BOOL v63 = *(void *)v64;
      *((void *)v63 + 1) = v67;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_35:
    uint64_t v69 = v46[9];
    uint64_t v70 = &v37[v69];
    uint64_t v71 = &v38[v69];
    uint64_t v72 = type metadata accessor for WeatherDataOverrides();
    uint64_t v236 = v31;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
    {
      uint64_t v73 = sub_10017DF08(&qword_100E63740);
      memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v31))
      {
        uint64_t v74 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        v239(v70, v71, v31);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v31);
      }
      uint64_t v75 = *(int *)(v72 + 20);
      BOOL v76 = &v70[v75];
      char v77 = &v71[v75];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v71[v75], 1, v31))
      {
        uint64_t v78 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        v239(v76, v77, v31);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v31);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
    }
    uint64_t v234 = sub_10017DF08(&qword_100E63748);
    uint64_t v79 = *(int *)(v234 + 48);
    uint64_t v237 = v37;
    char v80 = &v37[v79];
    uint64_t v81 = &v38[v79];
    uint64_t v82 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
    uint64_t v83 = type metadata accessor for PreprocessedWeatherData();
    *(void *)&v80[*(int *)(v83 + 20)] = *(void *)&v81[*(int *)(v83 + 20)];
    uint64_t v242 = (int *)v83;
    uint64_t v244 = v81;
    uint64_t v84 = *(int *)(v83 + 24);
    uint64_t v245 = v80;
    uint64_t v85 = &v80[v84];
    uint64_t v86 = &v81[v84];
    uint64_t v87 = *(void *)&v81[v84];
    uint64_t v88 = *((void *)v86 + 1);
    *(void *)uint64_t v85 = v87;
    *((void *)v85 + 1) = v88;
    uint64_t v89 = *((void *)v86 + 3);
    *((void *)v85 + 2) = *((void *)v86 + 2);
    *((void *)v85 + 3) = v89;
    uint64_t v90 = *((void *)v86 + 5);
    *((void *)v85 + 4) = *((void *)v86 + 4);
    *((void *)v85 + 5) = v90;
    uint64_t v232 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v91 = *(int *)(v232 + 28);
    uint64_t v92 = &v85[v91];
    uint64_t v93 = &v86[v91];
    uint64_t v94 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
    {
      uint64_t v95 = sub_10017DF08(&qword_100E63750);
      memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
    }
    else
    {
      uint64_t v96 = *((void *)v93 + 1);
      *(void *)uint64_t v92 = *(void *)v93;
      *((void *)v92 + 1) = v96;
      uint64_t v97 = *(int *)(v94 + 20);
      uint64_t v98 = &v92[v97];
      char v99 = &v93[v97];
      uint64_t v100 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
      swift_bridgeObjectRetain();
      v230(v98, v99, v100);
      uint64_t v101 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v98[v101[5]] = *(void *)&v99[v101[5]];
      *(void *)&v98[v101[6]] = *(void *)&v99[v101[6]];
      *(void *)&v98[v101[7]] = *(void *)&v99[v101[7]];
      uint64_t v102 = v101[8];
      uint64_t v103 = &v98[v102];
      uint64_t v104 = &v99[v102];
      uint64_t v106 = *(void *)v104;
      uint64_t v105 = *((void *)v104 + 1);
      *(void *)uint64_t v103 = v106;
      *((void *)v103 + 1) = v105;
      v98[v101[9]] = v99[v101[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
    }
    uint64_t v107 = *(int *)(v232 + 32);
    uint64_t v108 = &v85[v107];
    uint64_t v109 = &v86[v107];
    uint64_t v110 = *((void *)v109 + 1);
    *(void *)uint64_t v108 = *(void *)v109;
    *((void *)v108 + 1) = v110;
    uint64_t v111 = v242[7];
    uint64_t v112 = &v245[v111];
    unint64_t v113 = &v244[v111];
    *(void *)&v245[v111] = *(void *)&v244[v111];
    uint64_t v114 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v115 = &v112[v114];
    uint64_t v116 = &v113[v114];
    uint64_t v117 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v228 = v117;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v117))
    {
      uint64_t v118 = sub_10017DF08(&qword_100E63758);
      memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v117);
    }
    uint64_t v119 = v242[8];
    uint64_t v120 = &v245[v119];
    uint64_t v121 = &v244[v119];
    uint64_t v122 = *(void *)&v244[v119 + 8];
    *(void *)uint64_t v120 = *(void *)&v244[v119];
    *((void *)v120 + 1) = v122;
    uint64_t v123 = *(void *)&v244[v119 + 24];
    *((void *)v120 + 2) = *(void *)&v244[v119 + 16];
    *((void *)v120 + 3) = v123;
    uint64_t v124 = *(void *)&v244[v119 + 40];
    *((void *)v120 + 4) = *(void *)&v244[v119 + 32];
    *((void *)v120 + 5) = v124;
    uint64_t v125 = *(void *)&v244[v119 + 56];
    *((void *)v120 + 6) = *(void *)&v244[v119 + 48];
    *((void *)v120 + 7) = v125;
    uint64_t v126 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v127 = &v120[v126];
    uint64_t v128 = &v121[v126];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v239(v127, v128, v236);
    uint64_t v129 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v130 = *(int *)(v129 + 20);
    uint64_t v131 = &v127[v130];
    uint64_t v132 = &v128[v130];
    uint64_t v133 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v133))
    {
      uint64_t v134 = sub_10017DF08(&qword_100E63760);
      memcpy(v131, v132, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v131, v132, v133);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v133);
    }
    uint64_t v135 = *(int *)(v129 + 24);
    uint64_t v136 = &v127[v135];
    uint64_t v137 = &v128[v135];
    uint64_t v138 = type metadata accessor for BackgroundMoonData();
    uint64_t v231 = v133;
    uint64_t v233 = v129;
    uint64_t v224 = v138;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138))
    {
      uint64_t v139 = sub_10017DF08(&qword_100E63768);
      memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v138);
    }
    uint64_t v140 = v242[9];
    uint64_t v141 = &v245[v140];
    uint64_t v142 = &v244[v140];
    uint64_t v143 = *((void *)v142 + 1);
    *(void *)uint64_t v141 = *(void *)v142;
    *((void *)v141 + 1) = v143;
    uint64_t v144 = *((void *)v142 + 3);
    *((void *)v141 + 2) = *((void *)v142 + 2);
    *((void *)v141 + 3) = v144;
    uint64_t v145 = *((void *)v142 + 5);
    *((void *)v141 + 4) = *((void *)v142 + 4);
    *((void *)v141 + 5) = v145;
    uint64_t v146 = *((void *)v142 + 7);
    *((void *)v141 + 6) = *((void *)v142 + 6);
    *((void *)v141 + 7) = v146;
    uint64_t v147 = *((void *)v142 + 9);
    *((void *)v141 + 8) = *((void *)v142 + 8);
    *((void *)v141 + 9) = v147;
    uint64_t v148 = *((void *)v142 + 11);
    *((void *)v141 + 10) = *((void *)v142 + 10);
    *((void *)v141 + 11) = v148;
    uint64_t v149 = *((void *)v142 + 13);
    *((void *)v141 + 12) = *((void *)v142 + 12);
    *((void *)v141 + 13) = v149;
    uint64_t v150 = v242[10];
    uint64_t v151 = &v245[v150];
    uint64_t v152 = &v244[v150];
    uint64_t v226 = *(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v226(v151, v152, v228);
    uint64_t v153 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
    uint64_t v154 = &v151[v153];
    uint64_t v155 = &v152[v153];
    uint64_t v156 = *((void *)v155 + 1);
    *(void *)uint64_t v154 = *(void *)v155;
    *((void *)v154 + 1) = v156;
    uint64_t v157 = v242[11];
    uint64_t v158 = &v245[v157];
    uint64_t v159 = &v244[v157];
    uint64_t v160 = *((void *)v159 + 1);
    *(void *)uint64_t v158 = *(void *)v159;
    *((void *)v158 + 1) = v160;
    uint64_t v161 = *((void *)v159 + 3);
    *((void *)v158 + 2) = *((void *)v159 + 2);
    *((void *)v158 + 3) = v161;
    uint64_t v162 = *((void *)v159 + 5);
    *((void *)v158 + 4) = *((void *)v159 + 4);
    *((void *)v158 + 5) = v162;
    uint64_t v163 = v242[12];
    uint64_t v164 = &v245[v163];
    uint64_t v165 = &v244[v163];
    uint64_t v166 = type metadata accessor for PressureTrend();
    uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v167(v164, v165, v166);
    uint64_t v168 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v169 = v168[5];
    uint64_t v170 = &v164[v169];
    uint64_t v171 = &v165[v169];
    uint64_t v172 = *((void *)v171 + 1);
    *(void *)uint64_t v170 = *(void *)v171;
    *((void *)v170 + 1) = v172;
    uint64_t v173 = v168[6];
    uint64_t v174 = &v164[v173];
    uint64_t v175 = &v165[v173];
    uint64_t v229 = *((void *)v175 + 1);
    *(void *)uint64_t v174 = *(void *)v175;
    *((void *)v174 + 1) = v229;
    uint64_t v176 = v168[7];
    uint64_t v177 = &v164[v176];
    uint64_t v178 = &v165[v176];
    uint64_t v227 = *((void *)v178 + 1);
    *(void *)uint64_t v177 = *(void *)v178;
    *((void *)v177 + 1) = v227;
    *(void *)&v164[v168[8]] = *(void *)&v165[v168[8]];
    uint64_t v179 = v168[9];
    uint64_t v180 = &v164[v179];
    long long v181 = &v165[v179];
    uint64_t v225 = *((void *)v181 + 1);
    *(void *)uint64_t v180 = *(void *)v181;
    *((void *)v180 + 1) = v225;
    uint64_t v182 = v242[13];
    uint64_t v183 = &v245[v182];
    uint64_t v184 = &v244[v182];
    uint64_t v185 = *((void *)v184 + 1);
    *(void *)uint64_t v183 = *(void *)v184;
    *((void *)v183 + 1) = v185;
    uint64_t v186 = *((void *)v184 + 3);
    *((void *)v183 + 2) = *((void *)v184 + 2);
    *((void *)v183 + 3) = v186;
    uint64_t v187 = *((void *)v184 + 5);
    *((void *)v183 + 4) = *((void *)v184 + 4);
    *((void *)v183 + 5) = v187;
    uint64_t v188 = *((void *)v184 + 7);
    *((void *)v183 + 6) = *((void *)v184 + 6);
    *((void *)v183 + 7) = v188;
    uint64_t v189 = *((void *)v184 + 9);
    *((void *)v183 + 8) = *((void *)v184 + 8);
    *((void *)v183 + 9) = v189;
    uint64_t v190 = *((void *)v184 + 11);
    *((void *)v183 + 10) = *((void *)v184 + 10);
    *((void *)v183 + 11) = v190;
    uint64_t v191 = *((void *)v184 + 13);
    *((void *)v183 + 12) = *((void *)v184 + 12);
    *((void *)v183 + 13) = v191;
    uint64_t v192 = *((void *)v184 + 15);
    *((void *)v183 + 14) = *((void *)v184 + 14);
    *((void *)v183 + 15) = v192;
    uint64_t v193 = *((void *)v184 + 17);
    *((void *)v183 + 16) = *((void *)v184 + 16);
    *((void *)v183 + 17) = v193;
    uint64_t v194 = *((void *)v184 + 19);
    *((void *)v183 + 18) = *((void *)v184 + 18);
    *((void *)v183 + 19) = v194;
    uint64_t v195 = *((void *)v184 + 21);
    *((void *)v183 + 20) = *((void *)v184 + 20);
    *((void *)v183 + 21) = v195;
    uint64_t v196 = *((void *)v184 + 23);
    *((void *)v183 + 22) = *((void *)v184 + 22);
    *((void *)v183 + 23) = v196;
    uint64_t v197 = *((void *)v184 + 25);
    *((void *)v183 + 24) = *((void *)v184 + 24);
    *((void *)v183 + 25) = v197;
    *((_OWORD *)v183 + 13) = *((_OWORD *)v184 + 13);
    *((void *)v183 + 28) = *((void *)v184 + 28);
    uint64_t v198 = v242[14];
    uint64_t v199 = &v245[v198];
    uint64_t v200 = &v244[v198];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v239(v199, v200, v236);
    uint64_t v201 = *(int *)(v233 + 20);
    uint64_t v202 = &v199[v201];
    uint64_t v203 = &v200[v201];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v200[v201], 1, v231))
    {
      uint64_t v204 = sub_10017DF08(&qword_100E63760);
      memcpy(v202, v203, *(void *)(*(void *)(v204 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v202, v203, v231);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v231);
    }
    uint64_t v205 = *(int *)(v233 + 24);
    uint64_t v206 = &v199[v205];
    uint64_t v207 = &v200[v205];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v200[v205], 1, v224))
    {
      uint64_t v208 = sub_10017DF08(&qword_100E63768);
      memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v206, v207, v224);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v224);
    }
    uint64_t v209 = v242[15];
    uint64_t v210 = &v245[v209];
    uint64_t v211 = &v244[v209];
    uint64_t v212 = *((void *)v211 + 1);
    *(void *)uint64_t v210 = *(void *)v211;
    *((void *)v210 + 1) = v212;
    uint64_t v213 = *((void *)v211 + 3);
    *((void *)v210 + 2) = *((void *)v211 + 2);
    *((void *)v210 + 3) = v213;
    uint64_t v214 = *((void *)v211 + 5);
    *((void *)v210 + 4) = *((void *)v211 + 4);
    *((void *)v210 + 5) = v214;
    uint64_t v215 = *((void *)v211 + 7);
    *((void *)v210 + 6) = *((void *)v211 + 6);
    *((void *)v210 + 7) = v215;
    uint64_t v216 = *((void *)v211 + 9);
    *((void *)v210 + 8) = *((void *)v211 + 8);
    *((void *)v210 + 9) = v216;
    uint64_t v217 = *((void *)v211 + 11);
    *((void *)v210 + 10) = *((void *)v211 + 10);
    *((void *)v210 + 11) = v217;
    uint64_t v218 = *((void *)v211 + 13);
    *((void *)v210 + 12) = *((void *)v211 + 12);
    *((void *)v210 + 13) = v218;
    uint64_t v219 = *(int *)(v234 + 64);
    uint64_t v220 = &v237[v219];
    uint64_t v221 = &v38[v219];
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v220 = *(void *)v221;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v222 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v222 - 8) + 16))(v220, v221, v222);
    }
    uint64_t v24 = v246;
    uint64_t v39 = v235;
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = v237;
    goto LABEL_66;
  }
  uint64_t v40 = sub_10017DF08(&qword_100E63770);
  memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  return v24;
}

uint64_t type metadata accessor for LocationsState()
{
  uint64_t result = qword_100EA0418;
  if (!qword_100EA0418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for LocationWeatherDataState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9BB00);
}

uint64_t sub_10015458C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >= 2u)
  {
    if (a3 != 2) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001545E8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v5 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_100154718(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  swift_bridgeObjectRetain();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  LOBYTE(v18) = v18[8];
  *(void *)uint64_t v17 = v19;
  v17[8] = (char)v18;
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for LocationInput()
{
  uint64_t result = qword_100EA5DF8;
  if (!qword_100EA5DF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10015492C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = a2 + v4;
  uint64_t v7 = *(void *)(a2 + v4 + 8);
  *uint64_t v5 = *(void *)(a2 + v4);
  v5[1] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v9 = (char *)v5 + v8;
  uint64_t v10 = v6 + v8;
  uint64_t v11 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_1001549EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_release();
  swift_release();
  uint64_t v5 = v4 + *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t type metadata accessor for PageControl(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8E9C8);
}

uint64_t type metadata accessor for MeasuredLocationViewerView.LocationTabPageModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8E650);
}

uint64_t type metadata accessor for PageControlDisplayState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8DFF8);
}

uint64_t type metadata accessor for ActiveLocationInput(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E6EB50);
}

uint64_t sub_100154B08(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[14], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[17];
  uint64_t v8 = type metadata accessor for CurrentLocation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)
    && swift_getEnumCaseMultiPayload() <= 2)
  {
    uint64_t v9 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  }
  uint64_t v10 = (id *)(a1 + a2[19]);

  swift_bridgeObjectRelease();
  v6(a1 + a2[21], v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ActiveLocationModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E6EAB8);
}

uint64_t sub_100154CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100154E54(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t sub_100154F34(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    if (*(void *)(a1 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[5]);
  uint64_t v7 = a1 + a2[6];
  sub_100191934(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(unsigned char *)(v7 + 32));
  uint64_t v8 = a1 + a2[7];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = v8 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[8];
  if (*(void *)(v11 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v11 + *(int *)(v4 + 24);
  uint64_t v13 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  sub_10017DF08(&qword_100E8EAB0);

  return swift_release();
}

void *sub_100155124(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E63A10);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v8 = a2 + 1;
    unint64_t v9 = a2[2];
    if (v9 >= 2)
    {
      a1[1] = *v8;
      a1[2] = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 1) = *(_OWORD *)v8;
    }
    uint64_t v10 = *(int *)(v6 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v15 = a3[5];
  long long v16 = *(_OWORD *)((char *)a2 + v15 + 24);
  *(_OWORD *)((char *)a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  uint64_t v21 = *((void *)v19 + 1);
  uint64_t v22 = *((void *)v19 + 2);
  uint64_t v23 = *((void *)v19 + 3);
  char v24 = v19[32];
  sub_100190CD4(*(void *)v19, v21, v22, v23, v24);
  *(void *)uint64_t v18 = v20;
  *((void *)v18 + 1) = v21;
  *((void *)v18 + 2) = v22;
  *((void *)v18 + 3) = v23;
  v18[32] = v24;
  uint64_t v25 = a3[7];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    v26[16] = v27[16];
    v26[17] = v27[17];
    v26[18] = v27[18];
    uint64_t v28 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v29 = &v26[v28];
    uint64_t v30 = &v27[v28];
    uint64_t v31 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  else
  {
    *(void *)uint64_t v26 = *(void *)v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = a3[8];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  char v35 = *((unsigned char *)a2 + v32);
  uint64_t v36 = (char *)a1 + v32;
  *uint64_t v36 = v35;
  uint64_t v37 = v36 + 8;
  uint64_t v38 = v34 + 8;
  unint64_t v39 = *((void *)v34 + 2);
  if (v39 >= 2)
  {
    *((void *)v33 + 1) = *v38;
    *((void *)v33 + 2) = v39;
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v37 = *(_OWORD *)v38;
  }
  uint64_t v40 = *(int *)(v6 + 24);
  uint64_t v41 = &v33[v40];
  uint64_t v42 = &v34[v40];
  uint64_t v43 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  uint64_t v45 = sub_10017DF08(&qword_100E8EAB0);
  *(void *)&v33[*(int *)(v45 + 28)] = *(void *)&v34[*(int *)(v45 + 28)];
  swift_retain();
  return a1;
}

uint64_t sub_1001554EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100155600(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  unint64_t v9 = a2 + 6;
  unint64_t v10 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 >= 2)
  {
    a1[6] = *v9;
    a1[7] = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)v9;
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  uint64_t v20 = *((void *)v18 + 3);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = v20;
  v17[32] = v18[32];
  *((void *)v17 + 5) = *((void *)v18 + 5);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for LocationViewerPageControl(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8D930);
}

uint64_t type metadata accessor for LocationViewBannerContainer(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E8EB10);
}

uint64_t type metadata accessor for ContentStatusBannerView()
{
  uint64_t result = qword_100E9C5C0;
  if (!qword_100E9C5C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10015586C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100190CD4(*(void *)a2, v7, v8, v9, v10);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v18 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v19 = (void *)(v16 + v18);
  uint64_t v20 = (void *)(v17 + v18);
  uint64_t v21 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_10017DF08(&qword_100E63A10);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
    uint64_t v23 = v20 + 1;
    unint64_t v24 = v20[2];
    if (v24 >= 2)
    {
      v19[1] = *v23;
      long long v19[2] = v24;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v19 + 1) = *(_OWORD *)v23;
    }
    uint64_t v25 = *(int *)(v21 + 24);
    uint64_t v26 = (char *)v19 + v25;
    uint64_t v27 = (char *)v20 + v25;
    uint64_t v28 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v30 = sub_10017DF08(&qword_100E8EF18);
  *(void *)(v16 + *(int *)(v30 + 28)) = *(void *)(v17 + *(int *)(v30 + 28));
  swift_retain();
  return a1;
}

uint64_t sub_100155AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v7 = (void *)(a2 + 8);
  unint64_t v8 = *(void *)(a2 + 16);
  if (v8 >= 2)
  {
    *(void *)(a1 + 8) = *v7;
    *(void *)(a1 + 16) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v6 = *(_OWORD *)v7;
  }
  uint64_t v9 = *(int *)(a3 + 24);
  char v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  return a1;
}

uint64_t type metadata accessor for PageControlDisplayStateModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8E6E0);
}

uint64_t sub_100155C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  if (!_s7Weather24LocationCompositionStateOwet_0(v2, 1, active))
  {
    uint64_t v4 = type metadata accessor for Location.Identifier();
    if (!_s7Weather24LocationCompositionStateOwet_0(v2, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
    }
  }

  return swift_bridgeObjectRelease();
}

void sub_100155CD4()
{
  sub_100162EA0();
  uint64_t v123 = v3;
  uint64_t v124 = v2;
  uint64_t v5 = v4;
  uint64_t v125 = v6;
  uint64_t v8 = v7;
  type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v121 = v10;
  uint64_t v122 = v9;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v120 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100E670F0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10011BA64(v14, v101);
  uint64_t v15 = sub_10017DF08(&qword_100E63850);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v109 = v17;
  uint64_t v18 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100162EF8();
  uint64_t v105 = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v106 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E9BB70);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v113 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E63770);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100162EF8();
  uint64_t v119 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  sub_100128F8C();
  uint64_t v115 = v30;
  uint64_t v114 = type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v107 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100109770();
  uint64_t v110 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100109770();
  uint64_t v111 = v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  sub_100109770();
  uint64_t v116 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100128F8C();
  uint64_t v117 = v40;
  uint64_t v41 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  uint64_t v44 = sub_1001635A4(v43, v101);
  uint64_t v45 = type metadata accessor for WeatherData(v44);
  sub_100162E4C();
  __chkstk_darwin(v46);
  sub_10016278C();
  uint64_t v49 = (void *)(v47 - v48);
  __chkstk_darwin(v50);
  uint64_t v52 = (char *)&v101 - v51;
  __chkstk_darwin(v53);
  uint64_t v55 = (char *)&v101 - v54;
  uint64_t v56 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v57);
  sub_100158494();
  __chkstk_darwin(v58);
  sub_100164A00();
  __chkstk_darwin(v59);
  uint64_t v60 = v5;
  uint64_t v126 = (uint64_t)&v101 - v61;
  uint64_t v127 = v5;
  sub_100157394(v8, (uint64_t)&v101 - v61, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_100157394(v8, v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v104 = v0;
    uint64_t v103 = v49;
    uint64_t v108 = (uint64_t *)v52;
    uint64_t v62 = sub_10017DF08(&qword_100E63748);
    uint64_t v63 = v1 + *(int *)(v62 + 48);
    uint64_t v64 = v1 + *(int *)(v62 + 64);
    sub_100178C8C(v1, (uint64_t)v55, (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v65 = v118;
    sub_100178C8C(v63, v118, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    uint64_t v66 = v64;
    uint64_t v67 = v117;
    sub_100178C8C(v66, v117, (void (*)(void))type metadata accessor for NewsDataModel);
    swift_bridgeObjectRetain();
    uint64_t v68 = v125;
    swift_bridgeObjectRetain();
    uint64_t v69 = (uint64_t)v115;
    sub_1001BBE9C(v124, v68, v60);
    swift_bridgeObjectRelease();
    sub_10012B520(v69, 1, v56);
    if (!v70)
    {
      uint64_t v101 = v62;
      uint64_t v102 = v56;
      uint64_t v76 = v104;
      sub_100178C8C(v69, v104, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      char v77 = v108;
      sub_100157394((uint64_t)v55, (uint64_t)v108, (void (*)(void))type metadata accessor for WeatherData);
      sub_100157394(v67, v116, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v78 = v45;
      uint64_t v79 = v113;
      sub_10000D64C(v113);
      uint64_t v80 = type metadata accessor for WeatherStatisticsModel();
      int v81 = _s7Weather24LocationCompositionStateOwet_0(v79, 1, v80);
      sub_100178110(v79, &qword_100E9BB70);
      uint64_t v82 = v112;
      if (v81 == 1)
      {
        uint64_t v115 = v55;
        uint64_t v83 = v109;
        sub_1001177B0(v109);
        sub_10012B520(v83, 1, v78);
        if (v70)
        {
          sub_100178110(v83, &qword_100E63850);
        }
        else
        {
          uint64_t v84 = (int *)v78;
          uint64_t v85 = v105;
          sub_100157394(v83 + *(int *)(v78 + 32), v105, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
          sub_100156908(v83, (void (*)(void))type metadata accessor for WeatherData);
          uint64_t v86 = v85;
          uint64_t v87 = v106;
          sub_100178C8C(v86, v106, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
          uint64_t v88 = *v77;
          uint64_t v113 = v77[1];
          uint64_t v89 = v103;
          sub_1001B7204((uint64_t)v77 + v84[5], (uint64_t)v103 + v84[5], &qword_100E63730);
          type metadata accessor for WeatherDataModel();
          sub_100162E4C();
          uint64_t v90 = (uint64_t)v108;
          sub_10008B8B4();
          v91();
          sub_100157394(v87, (uint64_t)v89 + *(int *)(v78 + 32), (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
          sub_100157394(v90 + v84[7], (uint64_t)v89 + v84[7], (void (*)(void))type metadata accessor for WeatherData.CachingState);
          sub_1001B7204(v90 + v84[9], (uint64_t)v89 + v84[9], &qword_100E63740);
          *uint64_t v89 = v88;
          uint64_t v67 = v117;
          v89[1] = v113;
          swift_bridgeObjectRetain();
          sub_100156908(v87, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
          sub_100156908(v90, (void (*)(void))type metadata accessor for WeatherData);
          uint64_t v92 = (uint64_t)v89;
          uint64_t v76 = v104;
          sub_100178C8C(v92, v90, (void (*)(void))type metadata accessor for WeatherData);
        }
        uint64_t v55 = v115;
      }
      sub_1000547E4(v82);
      sub_100156908(v76, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_100156908((uint64_t)v55, (void (*)(void))type metadata accessor for WeatherData);
      sub_100156908(v126, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_10012B520(v82, 1, v114);
      if (v70)
      {
        sub_100156908(v67, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100178110(v82, &qword_100E670F0);
      }
      else
      {
        uint64_t v93 = v111;
        sub_100178C8C(v82, v111, (void (*)(void))type metadata accessor for NewsDataModel);
        uint64_t v94 = v110;
        sub_100157394(v93, v110, (void (*)(void))type metadata accessor for NewsDataModel);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v96 = v107;
          sub_100178C8C(v67, v107, (void (*)(void))type metadata accessor for NewsDataModel);
          int v97 = sub_1001D255C();
          uint64_t v71 = v122;
          uint64_t v73 = v120;
          uint64_t v72 = v121;
          uint64_t v74 = v119;
          uint64_t v75 = v126;
          if (v97 == 1)
          {
            sub_100156908(v111, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_100156908(v96, (void (*)(void))type metadata accessor for NewsDataModel);
          }
          else
          {
            uint64_t v100 = v116;
            sub_100156908(v116, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_100156908(v107, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_100178C8C(v111, v100, (void (*)(void))type metadata accessor for NewsDataModel);
          }
          goto LABEL_20;
        }
        sub_100156908(v93, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100156908(v67, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100156908(v94, (void (*)(void))type metadata accessor for NewsDataModel);
      }
      uint64_t v71 = v122;
      uint64_t v73 = v120;
      uint64_t v72 = v121;
      uint64_t v74 = v119;
      uint64_t v75 = v126;
LABEL_20:
      uint64_t v98 = v75 + *(int *)(v101 + 48);
      uint64_t v99 = v75 + *(int *)(v101 + 64);
      sub_100178C8C((uint64_t)v108, v75, (void (*)(void))type metadata accessor for WeatherData);
      sub_100178C8C(v118, v98, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      sub_100178C8C(v116, v99, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v56 = v102;
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
    }
    sub_100156908(v67, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_100156908(v65, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_100156908((uint64_t)v55, (void (*)(void))type metadata accessor for WeatherData);
    sub_100178110(v69, &qword_100E63770);
    uint64_t v71 = v122;
    uint64_t v72 = v121;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100156908(v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v71 = v122;
    uint64_t v72 = v121;
  }
  uint64_t v74 = v119;
  uint64_t v73 = v120;
  uint64_t v75 = v126;
LABEL_21:
  sub_100157394(v75, v74, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  _s7Weather24LocationCompositionStateOwst_0(v74, 0, 1, v56);
  swift_bridgeObjectRetain();
  sub_100176B1C();
  swift_bridgeObjectRetain();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v71);
  sub_100156908(v75, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_100162694();
}

uint64_t sub_10015685C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001568B4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100156908(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10015695C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

uint64_t sub_1001569A8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001569FC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100156A50(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_100156AA4(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    unint64_t result = *(void *)(a1 + 24);
    if (result < 0xE) {
      return result;
    }
    goto LABEL_34;
  }
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v4 = a1 + v3[5];
    uint64_t v5 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
    uint64_t v6 = a1 + v3[6];
    uint64_t v7 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = a1 + v3[7];
    uint64_t v9 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
    {
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    }
    uint64_t v11 = a1 + v3[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v14 = a1 + v3[9];
    uint64_t v15 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
    {
      uint64_t v16 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
      }
      uint64_t v17 = v14 + *(int *)(v15 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v17, v16);
      }
    }
    uint64_t v46 = sub_10017DF08(&qword_100E63748);
    uint64_t v18 = a1 + *(int *)(v46 + 48);
    uint64_t v19 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    uint64_t v20 = (int *)type metadata accessor for PreprocessedWeatherData();
    swift_bridgeObjectRelease();
    uint64_t v21 = v18 + v20[6];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v21 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
    uint64_t v23 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23))
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = v22 + *(int *)(v23 + 20);
      uint64_t v25 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = v18 + v20[7];
    swift_bridgeObjectRelease();
    uint64_t v27 = v26 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v28 = type metadata accessor for WeatherDescription();
    if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    }
    uint64_t v29 = v18 + v20[8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v29 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v31 = type metadata accessor for Date();
    uint64_t v32 = (void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
    uint64_t v45 = *v32;
    (*v32)(v30, v31);
    uint64_t v33 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v34 = v30 + *(int *)(v33 + 20);
    uint64_t v35 = type metadata accessor for Elevation();
    if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
    }
    uint64_t v36 = v30 + *(int *)(v33 + 24);
    uint64_t v37 = type metadata accessor for BackgroundMoonData();
    if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v18 + v20[10], v28);
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = v18 + v20[12];
    uint64_t v39 = type metadata accessor for PressureTrend();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
    type metadata accessor for PressureComponentPreprocessedDataModel();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = v18 + v20[14];
    v45(v40, v31);
    uint64_t v41 = v40 + *(int *)(v33 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v35)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v41, v35);
    }
    uint64_t v42 = v40 + *(int *)(v33 + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v42, v37);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 += *(int *)(v46 + 64);
  }
  else if (result)
  {
    return result;
  }
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
LABEL_34:
    return swift_bridgeObjectRelease();
  }
  uint64_t v43 = type metadata accessor for News();
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8);

  return v44(a1, v43);
}

uint64_t sub_100157394(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t sub_1001573F0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void *sub_100157450(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2 + 2;
      unint64_t v9 = a2[3];
      swift_bridgeObjectRetain();
      if (v9 >= 0xE)
      {
        a1[2] = *v8;
        a1[3] = v9;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 1) = *(_OWORD *)v8;
      }
LABEL_56:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E63730);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v18 = v11[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      uint64_t v22 = v11[7];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        uint64_t v27 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v23, v24, v27);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      uint64_t v28 = v11[8];
      uint64_t v29 = (void *)((char *)a1 + v28);
      uint64_t v30 = (void *)((char *)a2 + v28);
      uint64_t v31 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 1)
      {
        uint64_t v34 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
      }
      else
      {
        if (v32)
        {
          memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
          goto LABEL_25;
        }
        uint64_t v33 = v30[1];
        *uint64_t v29 = *v30;
        v29[1] = v33;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_25:
      uint64_t v35 = v11[9];
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      uint64_t v38 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
      {
        uint64_t v39 = sub_10017DF08(&qword_100E63740);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v40 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v40))
        {
          uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v36, v37, v40);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v40);
        }
        uint64_t v42 = *(int *)(v38 + 20);
        uint64_t v43 = &v36[v42];
        uint64_t v44 = &v37[v42];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v37[v42], 1, v40))
        {
          uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v43, v44, v40);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v40);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
      }
      uint64_t v203 = sub_10017DF08(&qword_100E63748);
      uint64_t v46 = *(int *)(v203 + 48);
      uint64_t v205 = a1;
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v204 = a2;
      uint64_t v48 = (char *)a2 + v46;
      uint64_t v49 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      uint64_t v50 = type metadata accessor for PreprocessedWeatherData();
      *(void *)&v47[*(int *)(v50 + 20)] = *(void *)&v48[*(int *)(v50 + 20)];
      uint64_t v206 = v47;
      uint64_t v207 = (int *)v50;
      uint64_t v51 = *(int *)(v50 + 24);
      uint64_t v52 = &v47[v51];
      uint64_t v208 = v48;
      uint64_t v53 = &v48[v51];
      uint64_t v54 = *(void *)&v48[v51 + 8];
      *(void *)uint64_t v52 = *(void *)&v48[v51];
      *((void *)v52 + 1) = v54;
      uint64_t v55 = *(void *)&v48[v51 + 24];
      *((void *)v52 + 2) = *(void *)&v48[v51 + 16];
      *((void *)v52 + 3) = v55;
      uint64_t v56 = *(void *)&v48[v51 + 40];
      *((void *)v52 + 4) = *(void *)&v48[v51 + 32];
      *((void *)v52 + 5) = v56;
      uint64_t v57 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v58 = *(int *)(v57 + 28);
      uint64_t v59 = &v52[v58];
      uint64_t v60 = &v53[v58];
      uint64_t v61 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
      {
        uint64_t v62 = sub_10017DF08(&qword_100E63750);
        memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        uint64_t v63 = *((void *)v60 + 1);
        *(void *)uint64_t v59 = *(void *)v60;
        *((void *)v59 + 1) = v63;
        uint64_t v64 = *(int *)(v61 + 20);
        uint64_t v65 = &v59[v64];
        uint64_t v66 = &v60[v64];
        uint64_t v67 = type metadata accessor for TemperatureScaleConfiguration();
        uint64_t v201 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v201(v65, v66, v67);
        uint64_t v68 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v65[v68[5]] = *(void *)&v66[v68[5]];
        *(void *)&v65[v68[6]] = *(void *)&v66[v68[6]];
        *(void *)&v65[v68[7]] = *(void *)&v66[v68[7]];
        uint64_t v69 = v68[8];
        char v70 = &v65[v69];
        uint64_t v71 = &v66[v69];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        *(void *)char v70 = v73;
        *((void *)v70 + 1) = v72;
        v65[v68[9]] = v66[v68[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
      }
      uint64_t v74 = *(int *)(v57 + 32);
      uint64_t v75 = &v52[v74];
      uint64_t v76 = &v53[v74];
      uint64_t v77 = *((void *)v76 + 1);
      *(void *)uint64_t v75 = *(void *)v76;
      *((void *)v75 + 1) = v77;
      uint64_t v78 = v207[7];
      uint64_t v79 = &v206[v78];
      uint64_t v80 = &v208[v78];
      *(void *)&v206[v78] = *(void *)&v208[v78];
      uint64_t v81 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v82 = &v79[v81];
      uint64_t v83 = &v80[v81];
      uint64_t v84 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
      {
        uint64_t v85 = sub_10017DF08(&qword_100E63758);
        memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
      }
      uint64_t v86 = v207[8];
      uint64_t v87 = &v206[v86];
      uint64_t v88 = &v208[v86];
      uint64_t v89 = *(void *)&v208[v86 + 8];
      *(void *)uint64_t v87 = *(void *)&v208[v86];
      *((void *)v87 + 1) = v89;
      uint64_t v90 = *(void *)&v208[v86 + 24];
      *((void *)v87 + 2) = *(void *)&v208[v86 + 16];
      *((void *)v87 + 3) = v90;
      uint64_t v91 = *(void *)&v208[v86 + 40];
      *((void *)v87 + 4) = *(void *)&v208[v86 + 32];
      *((void *)v87 + 5) = v91;
      uint64_t v92 = *(void *)&v208[v86 + 56];
      *((void *)v87 + 6) = *(void *)&v208[v86 + 48];
      *((void *)v87 + 7) = v92;
      uint64_t v93 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v94 = &v87[v93];
      uint64_t v95 = &v88[v93];
      uint64_t v96 = type metadata accessor for Date();
      int v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v199 = v97;
      uint64_t v200 = v96;
      v97(v94, v95, v96);
      uint64_t v98 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v99 = *(int *)(v98 + 20);
      uint64_t v100 = &v94[v99];
      uint64_t v101 = &v95[v99];
      uint64_t v102 = type metadata accessor for Elevation();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
      {
        uint64_t v103 = sub_10017DF08(&qword_100E63760);
        memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
      }
      uint64_t v104 = *(int *)(v98 + 24);
      uint64_t v105 = &v94[v104];
      uint64_t v106 = &v95[v104];
      uint64_t v107 = type metadata accessor for BackgroundMoonData();
      uint64_t v202 = v98;
      uint64_t v197 = v107;
      uint64_t v198 = v102;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
      {
        uint64_t v108 = sub_10017DF08(&qword_100E63768);
        memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
      }
      uint64_t v109 = v207[9];
      uint64_t v110 = &v206[v109];
      uint64_t v111 = &v208[v109];
      uint64_t v112 = *((void *)v111 + 1);
      *(void *)uint64_t v110 = *(void *)v111;
      *((void *)v110 + 1) = v112;
      uint64_t v113 = *((void *)v111 + 3);
      *((void *)v110 + 2) = *((void *)v111 + 2);
      *((void *)v110 + 3) = v113;
      uint64_t v114 = *((void *)v111 + 5);
      *((void *)v110 + 4) = *((void *)v111 + 4);
      *((void *)v110 + 5) = v114;
      uint64_t v115 = *((void *)v111 + 7);
      *((void *)v110 + 6) = *((void *)v111 + 6);
      *((void *)v110 + 7) = v115;
      uint64_t v116 = *((void *)v111 + 9);
      *((void *)v110 + 8) = *((void *)v111 + 8);
      *((void *)v110 + 9) = v116;
      uint64_t v117 = *((void *)v111 + 11);
      *((void *)v110 + 10) = *((void *)v111 + 10);
      *((void *)v110 + 11) = v117;
      uint64_t v118 = *((void *)v111 + 13);
      *((void *)v110 + 12) = *((void *)v111 + 12);
      *((void *)v110 + 13) = v118;
      uint64_t v119 = v207[10];
      uint64_t v120 = &v206[v119];
      uint64_t v121 = &v208[v119];
      uint64_t v195 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v195(v120, v121, v84);
      uint64_t v122 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
      uint64_t v123 = &v120[v122];
      uint64_t v124 = &v121[v122];
      uint64_t v125 = *((void *)v124 + 1);
      *(void *)uint64_t v123 = *(void *)v124;
      *((void *)v123 + 1) = v125;
      uint64_t v126 = v207[11];
      uint64_t v127 = &v206[v126];
      uint64_t v128 = &v208[v126];
      uint64_t v129 = *((void *)v128 + 1);
      *(void *)uint64_t v127 = *(void *)v128;
      *((void *)v127 + 1) = v129;
      uint64_t v130 = *((void *)v128 + 3);
      *((void *)v127 + 2) = *((void *)v128 + 2);
      *((void *)v127 + 3) = v130;
      uint64_t v131 = *((void *)v128 + 5);
      *((void *)v127 + 4) = *((void *)v128 + 4);
      *((void *)v127 + 5) = v131;
      uint64_t v132 = v207[12];
      uint64_t v133 = &v206[v132];
      uint64_t v134 = &v208[v132];
      uint64_t v135 = type metadata accessor for PressureTrend();
      uint64_t v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v136(v133, v134, v135);
      uint64_t v137 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      uint64_t v138 = v137[5];
      uint64_t v139 = &v133[v138];
      uint64_t v140 = &v134[v138];
      uint64_t v141 = *((void *)v140 + 1);
      *(void *)uint64_t v139 = *(void *)v140;
      *((void *)v139 + 1) = v141;
      uint64_t v142 = v137[6];
      uint64_t v143 = &v133[v142];
      uint64_t v144 = &v134[v142];
      uint64_t v196 = *((void *)v144 + 1);
      *(void *)uint64_t v143 = *(void *)v144;
      *((void *)v143 + 1) = v196;
      uint64_t v145 = v137[7];
      uint64_t v146 = &v133[v145];
      uint64_t v147 = &v134[v145];
      uint64_t v194 = *((void *)v147 + 1);
      *(void *)uint64_t v146 = *(void *)v147;
      *((void *)v146 + 1) = v194;
      *(void *)&v133[v137[8]] = *(void *)&v134[v137[8]];
      uint64_t v148 = v137[9];
      uint64_t v149 = &v133[v148];
      uint64_t v150 = &v134[v148];
      uint64_t v193 = *((void *)v150 + 1);
      *(void *)uint64_t v149 = *(void *)v150;
      *((void *)v149 + 1) = v193;
      uint64_t v151 = v207[13];
      uint64_t v152 = &v206[v151];
      uint64_t v153 = &v208[v151];
      uint64_t v154 = *((void *)v153 + 1);
      *(void *)uint64_t v152 = *(void *)v153;
      *((void *)v152 + 1) = v154;
      uint64_t v155 = *((void *)v153 + 3);
      *((void *)v152 + 2) = *((void *)v153 + 2);
      *((void *)v152 + 3) = v155;
      uint64_t v156 = *((void *)v153 + 5);
      *((void *)v152 + 4) = *((void *)v153 + 4);
      *((void *)v152 + 5) = v156;
      uint64_t v157 = *((void *)v153 + 7);
      *((void *)v152 + 6) = *((void *)v153 + 6);
      *((void *)v152 + 7) = v157;
      uint64_t v158 = *((void *)v153 + 9);
      *((void *)v152 + 8) = *((void *)v153 + 8);
      *((void *)v152 + 9) = v158;
      uint64_t v159 = *((void *)v153 + 11);
      *((void *)v152 + 10) = *((void *)v153 + 10);
      *((void *)v152 + 11) = v159;
      uint64_t v160 = *((void *)v153 + 13);
      *((void *)v152 + 12) = *((void *)v153 + 12);
      *((void *)v152 + 13) = v160;
      uint64_t v161 = *((void *)v153 + 15);
      *((void *)v152 + 14) = *((void *)v153 + 14);
      *((void *)v152 + 15) = v161;
      uint64_t v162 = *((void *)v153 + 17);
      *((void *)v152 + 16) = *((void *)v153 + 16);
      *((void *)v152 + 17) = v162;
      uint64_t v163 = *((void *)v153 + 19);
      *((void *)v152 + 18) = *((void *)v153 + 18);
      *((void *)v152 + 19) = v163;
      uint64_t v164 = *((void *)v153 + 21);
      *((void *)v152 + 20) = *((void *)v153 + 20);
      *((void *)v152 + 21) = v164;
      uint64_t v165 = *((void *)v153 + 23);
      *((void *)v152 + 22) = *((void *)v153 + 22);
      *((void *)v152 + 23) = v165;
      uint64_t v166 = *((void *)v153 + 25);
      *((void *)v152 + 24) = *((void *)v153 + 24);
      *((void *)v152 + 25) = v166;
      *((_OWORD *)v152 + 13) = *((_OWORD *)v153 + 13);
      *((void *)v152 + 28) = *((void *)v153 + 28);
      uint64_t v167 = v207[14];
      uint64_t v168 = &v206[v167];
      uint64_t v169 = &v208[v167];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v199(v168, v169, v200);
      uint64_t v170 = *(int *)(v202 + 20);
      uint64_t v171 = &v168[v170];
      uint64_t v172 = &v169[v170];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v169[v170], 1, v198))
      {
        uint64_t v173 = sub_10017DF08(&qword_100E63760);
        memcpy(v171, v172, *(void *)(*(void *)(v173 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v171, v172, v198);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v198);
      }
      uint64_t v174 = *(int *)(v202 + 24);
      uint64_t v175 = &v168[v174];
      uint64_t v176 = &v169[v174];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v169[v174], 1, v197))
      {
        uint64_t v177 = sub_10017DF08(&qword_100E63768);
        memcpy(v175, v176, *(void *)(*(void *)(v177 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v175, v176, v197);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v197);
      }
      uint64_t v178 = v207[15];
      uint64_t v179 = &v206[v178];
      uint64_t v180 = &v208[v178];
      uint64_t v181 = *((void *)v180 + 1);
      *(void *)uint64_t v179 = *(void *)v180;
      *((void *)v179 + 1) = v181;
      uint64_t v182 = *((void *)v180 + 3);
      *((void *)v179 + 2) = *((void *)v180 + 2);
      *((void *)v179 + 3) = v182;
      uint64_t v183 = *((void *)v180 + 5);
      *((void *)v179 + 4) = *((void *)v180 + 4);
      *((void *)v179 + 5) = v183;
      uint64_t v184 = *((void *)v180 + 7);
      *((void *)v179 + 6) = *((void *)v180 + 6);
      *((void *)v179 + 7) = v184;
      uint64_t v185 = *((void *)v180 + 9);
      *((void *)v179 + 8) = *((void *)v180 + 8);
      *((void *)v179 + 9) = v185;
      uint64_t v186 = *((void *)v180 + 11);
      *((void *)v179 + 10) = *((void *)v180 + 10);
      *((void *)v179 + 11) = v186;
      uint64_t v187 = *((void *)v180 + 13);
      *((void *)v179 + 12) = *((void *)v180 + 12);
      *((void *)v179 + 13) = v187;
      uint64_t v188 = *(int *)(v203 + 64);
      uint64_t v189 = (void *)((char *)v205 + v188);
      uint64_t v190 = (void *)((char *)v204 + v188);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v189 = *v190;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v191 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v191 - 8) + 16))(v189, v190, v191);
      }
      swift_storeEnumTagMultiPayload();
      a1 = v205;
      goto LABEL_56;
    case 0:
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v17 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_56;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1001584B0()
{
  sub_10018F6D8(*(void *)(v1 + *(int *)(v0 + 20)), *(unsigned char *)(v1 + *(int *)(v0 + 20) + 8));
  return swift_release();
}

uint64_t sub_100158504()
{
  return type metadata accessor for Date();
}

uint64_t sub_10015852C()
{
  return type metadata accessor for OSSignpostID();
}

double sub_100158574@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for WeatherDataAction();
  __chkstk_darwin(v6 - 8);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for MainAction();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - v15;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v40 - v20;
  if (*(unsigned char *)(a1 + 48) == 1)
  {
    *(unsigned char *)(a2 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  else
  {
    uint64_t v50 = v19;
    uint64_t v23 = *(void *)(a1 + 40);
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v43 = v9;
      uint64_t v40 = v23;
      uint64_t v41 = a2;
      uint64_t v46 = v3 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_signpostID;
      uint64_t v47 = OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_logger;
      unint64_t v45 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      uint64_t v25 = v23 + v45;
      uint64_t v26 = *(void *)(v18 + 72);
      swift_bridgeObjectRetain();
      uint64_t v27 = _swiftEmptyArrayStorage;
      long long v44 = xmmword_100C251B0;
      unint64_t v42 = (unint64_t)"actions %{private}s";
      uint64_t v48 = v12;
      uint64_t v49 = v3;
      uint64_t v53 = v26;
      do
      {
        sub_10015B0C4(v25, (uint64_t)v21);
        sub_10015B0C4((uint64_t)v21, (uint64_t)v16);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        sub_100158CCC((uint64_t)v16, (void (*)(void))type metadata accessor for MainAction);
        if (EnumCaseMultiPayload == 9)
        {
          int v51 = static os_signpost_type_t.event.getter();
          uint64_t v52 = *(void *)(v3 + v47);
          sub_10017DF08(&qword_100E64020);
          uint64_t v29 = swift_allocObject();
          *(_OWORD *)(v29 + 16) = v44;
          uint64_t v30 = v50;
          sub_10015B0C4((uint64_t)v21, v50);
          uint64_t v31 = v10;
          if (swift_getEnumCaseMultiPayload() == 9)
          {
            uint64_t v32 = v30;
            uint64_t v33 = v43;
            sub_100164D60(v32, v43, (uint64_t (*)(void))type metadata accessor for WeatherDataAction);
            uint64_t v34 = sub_10016552C();
            unint64_t v36 = v35;
            sub_100158CCC(v33, (void (*)(void))type metadata accessor for WeatherDataAction);
          }
          else
          {
            sub_100158CCC(v30, (void (*)(void))type metadata accessor for MainAction);
            unint64_t v36 = v42 | 0x8000000000000000;
            uint64_t v34 = 0xD000000000000016;
          }
          *(void *)(v29 + 56) = &type metadata for String;
          *(void *)(v29 + 64) = sub_10012B7C0();
          *(void *)(v29 + 32) = v34;
          *(void *)(v29 + 40) = v36;
          os_signpost(_:dso:log:name:signpostID:_:_:)();
          swift_bridgeObjectRelease();
          uint64_t v3 = v49;
          PassthroughSubject.send(_:)();
          uint64_t v10 = v31;
          uint64_t v12 = v48;
          uint64_t v39 = v53;
        }
        else
        {
          sub_10015B0C4((uint64_t)v21, (uint64_t)v12);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v27 = (void *)sub_1001A6D34(0, v27[2] + 1, 1, (uint64_t)v27);
          }
          unint64_t v38 = v27[2];
          unint64_t v37 = v27[3];
          if (v38 >= v37 >> 1) {
            uint64_t v27 = (void *)sub_1001A6D34(v37 > 1, v38 + 1, 1, (uint64_t)v27);
          }
          void v27[2] = v38 + 1;
          uint64_t v39 = v53;
          sub_100164D60((uint64_t)v12, (uint64_t)v27 + v45 + v38 * v53, (uint64_t (*)(void))type metadata accessor for MainAction);
        }
        sub_100158CCC((uint64_t)v21, (void (*)(void))type metadata accessor for MainAction);
        v25 += v39;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease();
      a2 = v41;
    }
    else
    {
      uint64_t v27 = _swiftEmptyArrayStorage;
    }
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = v27;
    *(unsigned char *)(a2 + 48) = 1;
  }
  return result;
}

uint64_t sub_100158A14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100158A74(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

uint64_t sub_100158AC4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158B1C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100158B70(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158BC8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158C20(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158C78(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158CCC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100158D1C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100158D70(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162880();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158DCC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158E24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100158E84(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158EDC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158F34(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158F8C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100158FE4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100159038(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

uint64_t sub_100159088(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001590E0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100159138(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10015918C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1001591E0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100159238(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100159290(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001592F0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

uint64_t sub_100159340(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100159398(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

id sub_1001593E8(uint64_t a1)
{
  id result = (id)swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v3 = type metadata accessor for AppConfiguration();
      goto LABEL_82;
    case 2:
      type metadata accessor for EnvironmentAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 2:
          uint64_t v3 = type metadata accessor for Locale();
          goto LABEL_82;
        case 3:
          type metadata accessor for ActivityAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 1)
          {
            type metadata accessor for PreviewLocation();
            id result = (id)swift_getEnumCaseMultiPayload();
            switch((int)result)
            {
              case 0:
                goto LABEL_81;
              case 1:
                goto LABEL_52;
              case 2:
                goto LABEL_102;
              case 3:
                goto LABEL_132;
              default:
                return result;
            }
            return result;
          }
          if (result) {
            return result;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v3 = type metadata accessor for SavedLocation.Placeholder();
            goto LABEL_82;
          }
          goto LABEL_81;
        case 4:
          goto LABEL_132;
        case 9:
          id result = *(id *)(a1 + 8);
          if ((unint64_t)result >= 2) {
            goto LABEL_132;
          }
          return result;
        case 11:
          type metadata accessor for ConfiguredUnitsAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 1)
          {
            uint64_t v5 = type metadata accessor for UnitConfiguration.Temperature();
            goto LABEL_109;
          }
          if (result) {
            return result;
          }
          uint64_t v3 = type metadata accessor for ConfiguredUnit();
          break;
        default:
          return result;
      }
      goto LABEL_82;
    case 3:
      type metadata accessor for LocationsAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          type metadata accessor for CurrentLocation();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 2 || result == 1) {
            goto LABEL_81;
          }
          goto LABEL_26;
        case 1:
          goto LABEL_81;
        case 2:
          goto LABEL_29;
        case 5:
          goto LABEL_132;
        case 6:
          id v15 = *(id *)a1;
          uint64_t v16 = *(void *)(a1 + 8);
          unsigned __int8 v17 = *(unsigned char *)(a1 + 16);
          id result = (id)sub_10015303C((uint64_t)v15, v16, v17);
          break;
        default:
          return result;
      }
      return result;
    case 4:
      type metadata accessor for NotificationsAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 1:
          uint64_t v4 = type metadata accessor for LocationModel();
          if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          }
          a1 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
          uint64_t v5 = type metadata accessor for URL();
          goto LABEL_109;
        case 2:
          uint64_t v18 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
          uint64_t v19 = &qword_100E6F630;
          goto LABEL_73;
        case 3:
        case 4:
          goto LABEL_132;
        case 5:
          uint64_t v20 = type metadata accessor for Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a1, v20);
          uint64_t v19 = &qword_100E6F638;
LABEL_73:
          a1 += *(int *)(sub_10017DF08(v19) + 48);
          uint64_t v3 = type metadata accessor for NotificationSubscription.Kind();
          goto LABEL_82;
        default:
          return result;
      }
    case 5:
      type metadata accessor for NotificationsOptInAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 4) {
        goto LABEL_46;
      }
      if (result == 3) {
        goto LABEL_132;
      }
      if (result != 2) {
        return result;
      }
      goto LABEL_81;
    case 6:
      type metadata accessor for ViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          type metadata accessor for ListViewAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 2) {
            goto LABEL_87;
          }
          goto LABEL_76;
        case 1:
          type metadata accessor for LocationViewerViewAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 2)
          {
LABEL_87:
            uint64_t v3 = type metadata accessor for Location.Identifier();
            goto LABEL_82;
          }
          if (result == 1) {
            goto LABEL_57;
          }
LABEL_76:
          if (!result)
          {
            uint64_t v3 = type metadata accessor for LocationModel();
            goto LABEL_82;
          }
          break;
        case 3:
          type metadata accessor for SearchViewAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          switch((int)result)
          {
            case 0:
              uint64_t v3 = type metadata accessor for CodableError();
              goto LABEL_82;
            case 1:
            case 2:
              goto LABEL_132;
            case 3:
            case 6:
              goto LABEL_81;
            case 4:
              goto LABEL_52;
            case 5:
LABEL_102:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a1 += *(int *)(type metadata accessor for SearchLocation() + 32);
              uint64_t v5 = type metadata accessor for Location();
              goto LABEL_109;
            default:
              return result;
          }
          return result;
        case 4:
          type metadata accessor for InteractiveMapViewAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          switch((int)result)
          {
            case 0:
            case 1:
            case 2:
            case 4:
              goto LABEL_81;
            case 3:
              goto LABEL_57;
            default:
              return result;
          }
          return result;
        case 5:
          a1 += *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v3 = type metadata accessor for DynamicTypeSize();
          goto LABEL_82;
        default:
          return result;
      }
      return result;
    case 7:
      type metadata accessor for ModalViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 3)
      {
        id result = *(id *)a1;
        if ((~*(void *)a1 & 0xF000000000000006) != 0) {
          return (id)sub_100274E38((uint64_t)result);
        }
      }
      else if (!result)
      {
        type metadata accessor for LocationPreviewViewAction();
        id result = (id)swift_getEnumCaseMultiPayload();
        if (result == 1) {
          goto LABEL_81;
        }
      }
      return result;
    case 8:
      type metadata accessor for LocationViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
        a1 += *(int *)(sub_10017DF08(&qword_100E66450) + 48);
LABEL_52:
        uint64_t v3 = type metadata accessor for LocationOfInterest();
        goto LABEL_82;
      }
      if (result != 1)
      {
LABEL_26:
        if (result) {
          return result;
        }
LABEL_81:
        uint64_t v3 = type metadata accessor for Location();
        goto LABEL_82;
      }
      type metadata accessor for LocationComponentAction(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = type metadata accessor for URL();
          goto LABEL_106;
        case 1u:
          uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
          goto LABEL_106;
        case 2u:
          uint64_t v8 = type metadata accessor for DetailCondition();
LABEL_106:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
          break;
        case 4u:
          uint64_t v34 = a1 + *(int *)(sub_10017DF08(&qword_100E66480) + 48);
          uint64_t v35 = type metadata accessor for Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
          break;
        default:
          break;
      }
      a1 += *(int *)(sub_10017DF08(&qword_100E66458) + 64);
      uint64_t v5 = type metadata accessor for Date();
LABEL_109:
      uint64_t v36 = v5;
      id result = (id)_s7Weather24LocationCompositionStateOwet_0(a1, 1, v5);
      if (!result)
      {
        uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8);
        uint64_t v12 = a1;
        uint64_t v13 = v36;
        goto LABEL_83;
      }
      return result;
    case 9:
      type metadata accessor for WeatherDataAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 7:
          goto LABEL_132;
        case 2:
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 24) >= 0xEuLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_132;
        case 3:
        case 9:
LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_132;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v21 = sub_10017DF08(&qword_100E6BBC0);
          uint64_t v22 = a1 + *(int *)(v21 + 48);
          swift_bridgeObjectRelease();
          uint64_t v23 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v24 = v22 + v23[5];
          uint64_t v25 = type metadata accessor for Locale();
          if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
          }
          uint64_t v26 = v22 + v23[6];
          uint64_t v27 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
          uint64_t v28 = v22 + v23[7];
          uint64_t v29 = sub_10017DF08(&qword_100E63738);
          if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29))
          {
            uint64_t v30 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);
          }
          uint64_t v31 = v22 + v23[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v37 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v31, v37);
          }
          else if (!EnumCaseMultiPayload)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v38 = v22 + v23[9];
          uint64_t v39 = type metadata accessor for WeatherDataOverrides();
          if (!_s7Weather24LocationCompositionStateOwet_0(v38, 1, v39))
          {
            uint64_t v40 = type metadata accessor for Date();
            if (!_s7Weather24LocationCompositionStateOwet_0(v38, 1, v40)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v38, v40);
            }
            uint64_t v41 = v38 + *(int *)(v39 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v40)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v41, v40);
            }
          }
          uint64_t v69 = v21;
          uint64_t v42 = a1 + *(int *)(v21 + 64);
          uint64_t v43 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
          long long v44 = (int *)type metadata accessor for PreprocessedWeatherData();
          swift_bridgeObjectRelease();
          uint64_t v45 = v42 + v44[6];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v45 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
          uint64_t v47 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v47))
          {
            swift_bridgeObjectRelease();
            uint64_t v48 = v46 + *(int *)(v47 + 20);
            uint64_t v49 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
            type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v50 = v42 + v44[7];
          swift_bridgeObjectRelease();
          uint64_t v51 = v50 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v52 = type metadata accessor for WeatherDescription();
          if (!_s7Weather24LocationCompositionStateOwet_0(v51, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
          }
          uint64_t v53 = v42 + v44[8];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v54 = v53 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v55 = type metadata accessor for Date();
          uint64_t v56 = (void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8);
          uint64_t v67 = *v56;
          (*v56)(v54, v55);
          uint64_t v57 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v58 = v54 + *(int *)(v57 + 20);
          uint64_t v59 = type metadata accessor for Elevation();
          if (!_s7Weather24LocationCompositionStateOwet_0(v58, 1, v59)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
          }
          uint64_t v60 = v54 + *(int *)(v57 + 24);
          uint64_t v61 = type metadata accessor for BackgroundMoonData();
          if (!_s7Weather24LocationCompositionStateOwet_0(v60, 1, v61)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v42 + v44[10], v52);
          type metadata accessor for UVIndexComponentPreprocessedDataModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v62 = v42 + v44[12];
          uint64_t v63 = type metadata accessor for PressureTrend();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
          type metadata accessor for PressureComponentPreprocessedDataModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v42 + v44[14];
          v67(v64, v55);
          uint64_t v65 = v64 + *(int *)(v57 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v59)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v65, v59);
          }
          uint64_t v66 = v64 + *(int *)(v57 + 24);
          if (!_s7Weather24LocationCompositionStateOwet_0(v66, 1, v61)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v66, v61);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v33 = *(int *)(v69 + 80);
          goto LABEL_131;
        case 5:
          swift_bridgeObjectRelease();
          uint64_t v33 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
LABEL_131:
          a1 += v33;
          type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload() == 1) {
            goto LABEL_132;
          }
          uint64_t v3 = type metadata accessor for News();
          break;
        case 6:
          swift_bridgeObjectRelease();
          a1 += *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v3 = type metadata accessor for AvailableDataSets();
          goto LABEL_82;
        case 8:
          swift_bridgeObjectRelease();
          a1 += *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v3 = type metadata accessor for WeatherStatisticsModel();
          goto LABEL_82;
        default:
          return result;
      }
      goto LABEL_82;
    case 10:
      type metadata accessor for DebugAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 1) {
        goto LABEL_81;
      }
      if (result) {
        return result;
      }
      uint64_t v6 = type metadata accessor for WeatherCondition();
      if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      }
      sub_10017DF08(&qword_100E6F648);
LABEL_132:
      return (id)swift_bridgeObjectRelease();
    case 11:
      type metadata accessor for ConditionDetailViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = (int *)type metadata accessor for DetailChartSelection();
        uint64_t v10 = a1 + v9[5];
        uint64_t v11 = type metadata accessor for Date();
        uint64_t v68 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
        ((void (*)(void *__return_ptr, uint64_t, uint64_t))v68)((void *)(v11 - 8), v10, v11);
        v68(a1 + v9[6], v11);
        uint64_t v12 = a1 + v9[7];
        uint64_t v13 = v11;
        uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))v68;
      }
      else
      {
        if (result == 1)
        {
LABEL_48:
          uint64_t v3 = type metadata accessor for DetailCondition();
        }
        else
        {
LABEL_42:
          if (result) {
            return result;
          }
LABEL_46:
          uint64_t v3 = type metadata accessor for Date();
        }
LABEL_82:
        uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
        uint64_t v13 = v3;
        uint64_t v12 = a1;
      }
LABEL_83:
      return (id)v14(v12, v13);
    case 13:
      type metadata accessor for MoonDetailViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 1) {
        goto LABEL_46;
      }
      if (result) {
        return result;
      }
      type metadata accessor for MoonDetailSelectedDate();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result != 2 && result != 1) {
        goto LABEL_42;
      }
      goto LABEL_46;
    case 14:
      type metadata accessor for AveragesDetailViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result != 1) {
        return result;
      }
      a1 += *(int *)(type metadata accessor for DetailHeroChartLollipopPosition(0) + 20);
      goto LABEL_46;
    case 16:
      goto LABEL_132;
    case 17:
      type metadata accessor for PerformanceTestAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_48;
        case 2:
          goto LABEL_81;
        case 3:
          a1 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 48);
LABEL_57:
          uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
          goto LABEL_82;
        case 4:
          uint64_t v3 = type metadata accessor for WeatherCondition();
          goto LABEL_82;
        default:
          return result;
      }
      return result;
    default:
      return result;
  }
}

uint64_t sub_10015A71C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 7:
      goto LABEL_36;
    case 2:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 24) >= 0xEuLL) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_36;
    case 3:
    case 9:
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v3 = sub_10017DF08(&qword_100E6BBC0);
      uint64_t v4 = a1 + *(int *)(v3 + 48);
      swift_bridgeObjectRelease();
      uint64_t v5 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v6 = v4 + v5[5];
      uint64_t v7 = type metadata accessor for Locale();
      if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      }
      uint64_t v8 = v4 + v5[6];
      uint64_t v9 = type metadata accessor for WeatherDataModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      uint64_t v10 = v4 + v5[7];
      uint64_t v11 = sub_10017DF08(&qword_100E63738);
      if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11))
      {
        uint64_t v12 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
      }
      uint64_t v13 = v4 + v5[8];
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v13, v18);
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v19 = v4 + v5[9];
      uint64_t v20 = type metadata accessor for WeatherDataOverrides();
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
      {
        uint64_t v21 = type metadata accessor for Date();
        if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v21)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
        }
        uint64_t v22 = v19 + *(int *)(v20 + 20);
        if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v21)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v22, v21);
        }
      }
      uint64_t v50 = v3;
      uint64_t v23 = a1 + *(int *)(v3 + 64);
      uint64_t v24 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      uint64_t v25 = (int *)type metadata accessor for PreprocessedWeatherData();
      swift_bridgeObjectRelease();
      uint64_t v26 = v23 + v25[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v26 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
      uint64_t v28 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = v27 + *(int *)(v28 + 20);
        uint64_t v30 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = v23 + v25[7];
      swift_bridgeObjectRelease();
      uint64_t v32 = v31 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v33 = type metadata accessor for WeatherDescription();
      if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      }
      uint64_t v34 = v23 + v25[8];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v34 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v36 = type metadata accessor for Date();
      uint64_t v37 = (void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8);
      uint64_t v49 = *v37;
      (*v37)(v35, v36);
      uint64_t v38 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v39 = v35 + *(int *)(v38 + 20);
      uint64_t v40 = type metadata accessor for Elevation();
      if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      }
      uint64_t v41 = v35 + *(int *)(v38 + 24);
      uint64_t v42 = type metadata accessor for BackgroundMoonData();
      if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v23 + v25[10], v33);
      type metadata accessor for UVIndexComponentPreprocessedDataModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v43 = v23 + v25[12];
      uint64_t v44 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
      type metadata accessor for PressureComponentPreprocessedDataModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v45 = v23 + v25[14];
      v49(v45, v36);
      uint64_t v46 = v45 + *(int *)(v38 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v40)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v46, v40);
      }
      uint64_t v47 = v45 + *(int *)(v38 + 24);
      if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v42)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v47, v42);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = *(int *)(v50 + 80);
      goto LABEL_35;
    case 5:
      swift_bridgeObjectRelease();
      uint64_t v15 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
LABEL_35:
      uint64_t v16 = a1 + v15;
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_36:
        return swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = type metadata accessor for News();
LABEL_40:
        uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
        return v48(v16, v17);
      }
    case 6:
      swift_bridgeObjectRelease();
      uint64_t v16 = a1 + *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
      uint64_t v17 = type metadata accessor for AvailableDataSets();
      goto LABEL_40;
    case 8:
      swift_bridgeObjectRelease();
      uint64_t v16 = a1 + *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
      uint64_t v17 = type metadata accessor for WeatherStatisticsModel();
      goto LABEL_40;
    default:
      return result;
  }
}

uint64_t sub_10015B0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10015B128(uint64_t a1)
{
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v577 = v3;
  v578 = v4;
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v3);
  v575 = (uint8_t *)&v558 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v7);
  v574 = (uint8_t *)&v558 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v558 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v558 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  v576 = ((char *)&v558 - v17);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (uint8_t *)&v558 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v558 - v22;
  __chkstk_darwin(v21);
  type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v558 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100164478(a1, (uint64_t)v26);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100182514();
      uint64_t v157 = sub_10017A740();
      sub_1001790A8(v157);
      uint64_t v49 = Logger.logObject.getter();
      int v158 = static os_log_type_t.default.getter();
      uint64_t v159 = sub_10017A740();
      *(unsigned char *)(v159 + 16) = 0;
      uint64_t v160 = sub_10017A740();
      sub_10012B630(v160);
      uint64_t v161 = sub_100162774();
      *(void *)(v161 + 16) = sub_1001B1A50;
      *(void *)(v161 + 24) = v26;
      uint64_t v162 = sub_100162774();
      *(void *)(v162 + 16) = sub_100179408;
      *(void *)(v162 + 24) = v161;
      uint64_t v163 = sub_100162774();
      *(void *)(v163 + 16) = sub_1001793D4;
      *(void *)(v163 + 24) = v162;
      uint64_t v164 = sub_100162774();
      *(void *)(v164 + 16) = sub_100179398;
      *(void *)(v164 + 24) = v163;
      uint64_t v165 = sub_10017A740();
      sub_10019FF3C(v165);
      uint64_t v166 = sub_10017A740();
      sub_1001A478C(v166);
      uint64_t v167 = sub_100162774();
      *(void *)(v167 + 16) = sub_1001648B8;
      *(void *)(v167 + 24) = v23;
      uint64_t v168 = sub_100162774();
      *(void *)(v168 + 16) = sub_100164424;
      *(void *)(v168 + 24) = v167;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v169 = sub_10017F508();
      *(_OWORD *)(v169 + 16) = xmmword_100C349B0;
      *(void *)(v169 + 32) = sub_100162D68;
      *(void *)(v169 + 40) = v159;
      *(void *)(v169 + 48) = sub_100162D68;
      *(void *)(v169 + 56) = a1;
      *(void *)(v169 + 64) = sub_10017932C;
      *(void *)(v169 + 72) = v164;
      *(void *)(v169 + 80) = sub_100162D68;
      *(void *)(v169 + 88) = v165;
      *(void *)(v169 + 96) = sub_100162D68;
      *(void *)(v169 + 104) = v166;
      *(void *)(v169 + 112) = sub_100164458;
      *(void *)(v169 + 120) = v168;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v49, (os_log_type_t)v158)) {
        goto LABEL_71;
      }
      LODWORD(v578) = v158;
      uint64_t v153 = sub_100164464();
      uint64_t v170 = sub_10016EEA8();
      sub_10019D76C(v170);
      v579 = sub_100162D68;
      uint64_t v580 = v159;
      sub_1001A2384();
      if (v162) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_10017932C;
      uint64_t v580 = v164;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v165;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v166;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v168;
      sub_10019EF9C();
      swift_release();
      sub_100188D84();
      uint64_t v156 = "Finished fetching Weather Data from Service. Using cached response=%{BOOL}d. uuid=%{public}s";
      goto LABEL_70;
    case 2u:
      Class isa = (void (*)(void))v578[4].isa;
      sub_1001723F8();
      isa();
      sub_10011C044();
      sub_1001C86B4();
      sub_1001D0EA8();
      v172();
      sub_100186AD4();
      uint64_t v173 = swift_allocObject();
      sub_1001723F8();
      isa();
      swift_retain();
      v576 = Logger.logObject.getter();
      LODWORD(v575) = static os_log_type_t.default.getter();
      uint64_t v174 = sub_10017A740();
      sub_10019DEF8(v174);
      v572 = sub_10017A740();
      sub_1001A478C((uint64_t)v572);
      uint64_t v175 = sub_100181E00();
      sub_100182B10(v175);
      uint64_t v176 = sub_100162774();
      *(void *)(v176 + 16) = sub_10017931C;
      *(void *)(v176 + 24) = v175;
      uint64_t v177 = sub_10017A740();
      sub_100162AE4(v177);
      uint64_t v178 = sub_10017A740();
      *(unsigned char *)(v178 + 16) = 8;
      uint64_t v179 = sub_100162774();
      *(void *)(v179 + 16) = sub_100179304;
      *(void *)(v179 + 24) = v173;
      uint64_t v180 = (uint8_t *)sub_100162774();
      *((void *)v180 + 2) = sub_100164424;
      *((void *)v180 + 3) = v179;
      uint64_t v181 = sub_10017A740();
      sub_10019FF3C(v181);
      uint64_t v182 = sub_10017A740();
      *(unsigned char *)(v182 + 16) = 8;
      uint64_t v183 = sub_100162774();
      uint64_t v184 = v573;
      *(void *)(v183 + 16) = sub_1001648B8;
      *(void *)(v183 + 24) = v184;
      uint64_t v185 = sub_100162774();
      *(void *)(v185 + 16) = sub_100164424;
      *(void *)(v185 + 24) = v183;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v186 = sub_100163F4C();
      *(_OWORD *)(v186 + 16) = xmmword_100C367B0;
      *(void *)(v186 + 32) = sub_100162D68;
      *(void *)(v186 + 40) = v174;
      uint64_t v187 = v572;
      *(void *)(v186 + 48) = sub_100162D68;
      *(void *)(v186 + 56) = v187;
      *(void *)(v186 + 64) = sub_100178DA4;
      *(void *)(v186 + 72) = v176;
      *(void *)(v186 + 80) = sub_100162D68;
      *(void *)(v186 + 88) = v177;
      *(void *)(v186 + 96) = sub_100162D68;
      *(void *)(v186 + 104) = v178;
      *(void *)(v186 + 112) = sub_100164458;
      *(void *)(v186 + 120) = v180;
      *(void *)(v186 + 128) = sub_100162D68;
      *(void *)(v186 + 136) = v181;
      *(void *)(v186 + 144) = sub_100162D68;
      *(void *)(v186 + 152) = v182;
      *(void *)(v186 + 160) = sub_100164458;
      *(void *)(v186 + 168) = v185;
      sub_100183530();
      swift_retain();
      v574 = (uint8_t *)v176;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (sub_100191198())
      {
        v570 = v180;
        uint64_t v571 = v182;
        sub_100164464();
        uint64_t v188 = sub_10018A9FC();
        sub_100184ABC(v188);
        v579 = sub_100162D68;
        uint64_t v580 = (uint64_t)v573;
        sub_1001A2384();
        if (v182) {
          goto LABEL_137;
        }
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = v174;
        sub_10019EF9C();
        swift_release();
        v579 = (uint64_t (*)())sub_100178DA4;
        uint64_t v580 = (uint64_t)v574;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = v177;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = v178;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100164458;
        uint64_t v580 = (uint64_t)v570;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = v181;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = v571;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100164458;
        uint64_t v580 = v185;
        sub_10019EF9C();
        swift_release();
        uint64_t v189 = v576;
        _os_log_impl((void *)&_mh_execute_header, v576, (os_log_type_t)v575, "Start loading News Articles. location=%{private,mask.hash}s uuid=%{public}s", v569, 0x20u);
        sub_100188AC8();
        sub_100162EE0();
        sub_10016446C();
      }
      else
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
      }
      sub_1001844B8();
      goto LABEL_136;
    case 3u:
      v576 = *(NSObject **)&v26[*(int *)(sub_10017DF08(&qword_100E8AC28) + 48)];
      uint64_t v190 = v577;
      uint64_t v191 = v578;
      uint64_t v192 = (void (*)(void))v578[4].isa;
      sub_1001191A8();
      v192();
      sub_100176D88();
      ((void (*)(char *, uint8_t *, uint64_t))v191[2].isa)(v23, v20, v190);
      sub_100186AD4();
      uint64_t v193 = swift_allocObject();
      sub_1001191A8();
      v192();
      uint64_t v194 = sub_100181E00();
      *(void *)(v194 + 16) = v576;
      swift_retain();
      v572 = Logger.logObject.getter();
      LODWORD(v571) = static os_log_type_t.default.getter();
      uint64_t v195 = sub_10017A740();
      uint64_t v196 = sub_10019DEF8(v195);
      v576 = sub_10017A740();
      LOBYTE(v576[2].isa) = 8;
      uint64_t v197 = sub_100181E00();
      sub_100182B10(v197);
      uint64_t v198 = sub_100162774();
      *(void *)(v198 + 16) = sub_10017931C;
      *(void *)(v198 + 24) = v197;
      uint64_t v199 = v198;
      v569 = (uint8_t *)sub_10017A740();
      sub_100162AE4((uint64_t)v569);
      v575 = (uint8_t *)sub_10017A740();
      v575[16] = 8;
      uint64_t v200 = sub_100162774();
      *(void *)(v200 + 16) = sub_100179304;
      *(void *)(v200 + 24) = v193;
      uint64_t v201 = sub_100162774();
      *(void *)(v201 + 16) = sub_100164424;
      *(void *)(v201 + 24) = v200;
      v574 = (uint8_t *)sub_10017A740();
      sub_100166C54((uint64_t)v574);
      uint64_t v567 = sub_10017A740();
      *(unsigned char *)(v567 + 16) = 8;
      uint64_t v202 = sub_100162774();
      *(void *)(v202 + 16) = sub_1001B1A48;
      *(void *)(v202 + 24) = v194;
      uint64_t v203 = sub_100162774();
      *(void *)(v203 + 16) = sub_1001D417C;
      *(void *)(v203 + 24) = v202;
      uint64_t v204 = v203;
      uint64_t v205 = sub_10017A740();
      sub_1001D13D4(v205);
      v570 = (uint8_t *)sub_10017A740();
      v570[16] = 8;
      uint64_t v206 = sub_100162774();
      *(void *)(v206 + 16) = sub_1001648B8;
      *(void *)(v206 + 24) = &unk_100E8A000;
      uint64_t v207 = sub_100162774();
      *(void *)(v207 + 16) = sub_100164424;
      *(void *)(v207 + 24) = v206;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v208 = swift_allocObject();
      *(_OWORD *)(v208 + 16) = xmmword_100C4F040;
      *(void *)(v208 + 32) = sub_100162D68;
      uint64_t v209 = (uint8_t *)v196;
      *(void *)(v208 + 40) = v196;
      *(void *)(v208 + 48) = sub_100162D68;
      *(void *)(v208 + 56) = v576;
      *(void *)(v208 + 64) = sub_100178DA4;
      *(void *)(v208 + 72) = v199;
      *(void *)(v208 + 80) = sub_100162D68;
      *(void *)(v208 + 88) = v569;
      *(void *)(v208 + 96) = sub_100162D68;
      *(void *)(v208 + 104) = v575;
      *(void *)(v208 + 112) = sub_100164458;
      *(void *)(v208 + 120) = v201;
      *(void *)(v208 + 128) = sub_100162D68;
      *(void *)(v208 + 136) = v574;
      *(void *)(v208 + 144) = sub_100162D68;
      uint64_t v210 = (uint8_t *)v567;
      *(void *)(v208 + 152) = v567;
      *(void *)(v208 + 160) = sub_100178DA4;
      uint64_t v211 = (uint8_t *)v204;
      *(void *)(v208 + 168) = v204;
      *(void *)(v208 + 176) = sub_100162D68;
      uint64_t v212 = (uint8_t *)v202;
      *(void *)(v208 + 184) = v202;
      *(void *)(v208 + 192) = sub_100162D68;
      uint64_t v213 = v570;
      *(void *)(v208 + 200) = v570;
      *(void *)(v208 + 208) = sub_100164458;
      *(void *)(v208 + 216) = v207;
      v573 = v209;
      swift_retain();
      swift_retain();
      v568 = (uint8_t *)v199;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v572, (os_log_type_t)v571))
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1001844B8();
        goto LABEL_136;
      }
      uint64_t v214 = v568;
      uint64_t v215 = v576;
      uint64_t v565 = v201;
      v566 = (uint8_t *)v207;
      uint64_t v216 = (uint64_t)v574;
      uint64_t v217 = (uint64_t)v575;
      sub_100164464();
      v581 = (uint8_t *)sub_10018A9FC();
      uint64_t v582 = 0;
      v563 = v581;
      v564 = v213;
      sub_10019B5B0(1027);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v573;
      sub_1001A2384();
      if (v213) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v215;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = (uint64_t)v214;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v569;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v217;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v565;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v216;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v210;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = (uint64_t)v211;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v212;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v570;
      sub_10019EF9C();
      uint64_t v219 = v577;
      uint64_t v218 = v578;
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v566;
      sub_10019EF9C();
      swift_release();
      uint64_t v220 = v572;
      _os_log_impl((void *)&_mh_execute_header, v572, (os_log_type_t)v571, "Did receive News Placements. location=%{private,mask.hash}s count=%{public}ld, uuid=%{public}s", v564, 0x2Au);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_10016446C();

      ((void (*)(uint8_t *, uint64_t))v218[1].isa)(v20, v219);
      return;
    case 4u:
      uint64_t v221 = sub_10017DF08(&qword_100E8AC20);
      uint64_t v222 = *(void *)&v26[*(int *)(v221 + 64)];
      v574 = *(uint8_t **)&v26[*(int *)(v221 + 48)];
      v575 = (uint8_t *)v222;
      uint64_t v223 = v577;
      uint64_t v224 = v578;
      uint64_t v225 = (void (*)(NSObject *, char *, uint64_t))v578[4].isa;
      v225(v576, v26, v577);
      sub_100176D88();
      uint64_t v226 = v224 + 2;
      sub_1001D0EA8();
      v227();
      sub_100186AD4();
      uint64_t v228 = swift_allocObject();
      v225(((char *)v226 + v228), v23, v223);
      uint64_t v229 = sub_100181E00();
      *(void *)(v229 + 16) = v574;
      uint64_t v230 = sub_100181E00();
      *(void *)(v230 + 16) = v575;
      swift_retain();
      v570 = (uint8_t *)Logger.logObject.getter();
      LODWORD(v568) = static os_log_type_t.default.getter();
      uint64_t v231 = sub_10017A740();
      *(unsigned char *)(v231 + 16) = 112;
      uint64_t v232 = v231;
      uint64_t v233 = sub_10017A740();
      *(unsigned char *)(v233 + 16) = 8;
      uint64_t v234 = v233;
      uint64_t v235 = sub_100181E00();
      sub_100182B10(v235);
      uint64_t v236 = sub_100162774();
      v574 = (uint8_t *)v236;
      *(void *)(v236 + 16) = sub_10017931C;
      *(void *)(v236 + 24) = v235;
      v569 = (uint8_t *)sub_10017A740();
      sub_100162AE4((uint64_t)v569);
      v572 = sub_10017A740();
      LOBYTE(v572[2].isa) = 8;
      uint64_t v237 = sub_100162774();
      *(void *)(v237 + 16) = sub_100179304;
      *(void *)(v237 + 24) = v228;
      uint64_t v238 = sub_100162774();
      *(void *)(v238 + 16) = sub_100164424;
      *(void *)(v238 + 24) = v237;
      uint64_t v239 = v238;
      uint64_t v571 = sub_10017A740();
      *(unsigned char *)(v571 + 16) = 2;
      v564 = (uint8_t *)sub_10017A740();
      v564[16] = 8;
      uint64_t v240 = sub_100162774();
      *(void *)(v240 + 16) = sub_1001B1A44;
      *(void *)(v240 + 24) = v229;
      uint64_t v241 = sub_100162774();
      v575 = (uint8_t *)v241;
      *(void *)(v241 + 16) = sub_1001AEDB8;
      *(void *)(v241 + 24) = v240;
      v563 = (uint8_t *)sub_10017A740();
      v563[16] = 2;
      uint64_t v562 = sub_10017A740();
      *(unsigned char *)(v562 + 16) = 8;
      uint64_t v242 = sub_100162774();
      *(void *)(v242 + 16) = sub_1001B1A44;
      *(void *)(v242 + 24) = v230;
      uint64_t v243 = sub_100162774();
      uint64_t v567 = v243;
      *(void *)(v243 + 16) = sub_1001D417C;
      *(void *)(v243 + 24) = v242;
      uint64_t v244 = (uint8_t *)sub_10017A740();
      sub_10019FF3C((uint64_t)v244);
      uint64_t v245 = (uint8_t *)sub_10017A740();
      v245[16] = 8;
      uint64_t v246 = sub_100162774();
      *(void *)(v246 + 16) = sub_1001648B8;
      *(void *)(v246 + 24) = &unk_100E8A000;
      uint64_t v247 = sub_100162774();
      *(void *)(v247 + 16) = sub_100164424;
      *(void *)(v247 + 24) = v246;
      v573 = (uint8_t *)v247;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v248 = swift_allocObject();
      *(_OWORD *)(v248 + 16) = xmmword_100C45510;
      *(void *)(v248 + 32) = sub_100162D68;
      *(void *)(v248 + 40) = v232;
      *(void *)(v248 + 48) = sub_100162D68;
      uint64_t v249 = v234;
      *(void *)(v248 + 56) = v234;
      *(void *)(v248 + 64) = sub_100178DA4;
      *(void *)(v248 + 72) = v574;
      *(void *)(v248 + 80) = sub_100162D68;
      *(void *)(v248 + 88) = v569;
      *(void *)(v248 + 96) = sub_100162D68;
      *(void *)(v248 + 104) = v572;
      *(void *)(v248 + 112) = sub_100164458;
      uint64_t v250 = (uint8_t *)v239;
      *(void *)(v248 + 120) = v239;
      *(void *)(v248 + 128) = sub_100162D68;
      *(void *)(v248 + 136) = v571;
      *(void *)(v248 + 144) = sub_100162D68;
      uint64_t v251 = v564;
      *(void *)(v248 + 152) = v564;
      *(void *)(v248 + 160) = sub_100178AC0;
      *(void *)(v248 + 168) = v575;
      *(void *)(v248 + 176) = sub_100162D68;
      uint64_t v252 = v563;
      *(void *)(v248 + 184) = v563;
      *(void *)(v248 + 192) = sub_100162D68;
      uint64_t v253 = (uint8_t *)v562;
      *(void *)(v248 + 200) = v562;
      *(void *)(v248 + 208) = sub_100178DA4;
      *(void *)(v248 + 216) = v567;
      *(void *)(v248 + 224) = sub_100162D68;
      *(void *)(v248 + 232) = v244;
      *(void *)(v248 + 240) = sub_100162D68;
      *(void *)(v248 + 248) = v245;
      *(void *)(v248 + 256) = sub_100164458;
      *(void *)(v248 + 264) = v247;
      v566 = (uint8_t *)v232;
      uint64_t v254 = v249;
      swift_retain();
      uint64_t v565 = v254;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v255 = v251;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v256 = v252;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled((os_log_t)v570, (os_log_type_t)v568))
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1001844B8();
        goto LABEL_136;
      }
      uint64_t v257 = (uint8_t *)v565;
      v560 = v250;
      uint64_t v259 = (uint8_t *)v571;
      uint64_t v258 = v572;
      v561 = v245;
      sub_100164464();
      v581 = (uint8_t *)sub_10018A9FC();
      uint64_t v582 = 0;
      v558 = v581;
      v559 = v244;
      sub_10019B5B0(1283);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v566;
      sub_1001A2384();
      if (v244) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v257;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = (uint64_t)v574;
      sub_10019EF9C();
      uint64_t v260 = v569;
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v260;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v258;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v560;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v259;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v255;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178AC0;
      uint64_t v580 = (uint64_t)v575;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v256;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v253;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = v567;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = 0;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v561;
      sub_10019EF9C();
      uint64_t v262 = v577;
      uint64_t v261 = v578;
      uint64_t v263 = v576;
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v573;
      sub_10019EF9C();
      swift_release();
      uint64_t v264 = v570;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v570, (os_log_type_t)v568, "Did load News Articles. location=%{private,mask.hash}s placement count=%{public}ld, article count=%{public}ld, uuid=%{public}s", v559, 0x34u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_10016446C();

      ((void (*)(NSObject *, uint64_t))v261[1].isa)(v263, v262);
      return;
    case 5u:
      uint64_t v374 = *(void *)v26;
      uint64_t v375 = *((void *)v26 + 1);
      uint64_t v376 = v1;
      uint64_t v377 = sub_100162774();
      *(void *)(v377 + 16) = v374;
      *(void *)(v377 + 24) = v375;
      swift_retain();
      v578 = Logger.logObject.getter();
      uint64_t v49 = static os_log_type_t.default.getter();
      uint64_t v378 = sub_10017A740();
      *(unsigned char *)(v378 + 16) = 32;
      uint64_t v379 = sub_10017A740();
      sub_100164B04(v379);
      uint64_t v380 = sub_100162774();
      *(void *)(v380 + 16) = sub_10016EF84;
      *(void *)(v380 + 24) = v377;
      uint64_t v381 = sub_100162774();
      *(void *)(v381 + 16) = sub_100164424;
      *(void *)(v381 + 24) = v380;
      uint64_t v382 = sub_10017A740();
      sub_1001D1C30(v382);
      uint64_t v383 = sub_10017A740();
      sub_1001D2514(v383);
      uint64_t v384 = sub_100162774();
      *(void *)(v384 + 16) = sub_1001648B8;
      *(void *)(v384 + 24) = v376;
      uint64_t v385 = sub_100162774();
      *(void *)(v385 + 16) = sub_100164424;
      *(void *)(v385 + 24) = v384;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v386 = sub_10017F508();
      *(_OWORD *)(v386 + 16) = xmmword_100C349B0;
      *(void *)(v386 + 32) = sub_100162D68;
      *(void *)(v386 + 40) = v378;
      *(void *)(v386 + 48) = sub_100162D68;
      *(void *)(v386 + 56) = v20;
      *(void *)(v386 + 64) = sub_100164458;
      *(void *)(v386 + 72) = v381;
      *(void *)(v386 + 80) = sub_100162D68;
      *(void *)(v386 + 88) = v23;
      *(void *)(v386 + 96) = sub_100162D68;
      *(void *)(v386 + 104) = 32;
      *(void *)(v386 + 112) = sub_100164458;
      *(void *)(v386 + 120) = v385;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_10016519C()) {
        goto LABEL_71;
      }
      v387 = (uint8_t *)sub_100164464();
      uint64_t v388 = sub_100189F84();
      sub_10019D76C(v388);
      v579 = sub_100162D68;
      uint64_t v580 = v378;
      sub_1001A2384();
      if (v377) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v20;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v381;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = 32;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v385;
      sub_10019EF9C();
      swift_release();
      sub_10018B0E4();
      _os_log_impl((void *)&_mh_execute_header, v49, v389, "Finished resolving country code. countryCode=%s, uuid=%{public}s", v387, 0x16u);
      goto LABEL_127;
    case 6u:
      uint64_t v390 = *(void *)v26;
      uint64_t v391 = v1;
      uint64_t v392 = sub_100181E00();
      *(void *)(v392 + 16) = v390;
      swift_retain();
      uint64_t v577 = v390;
      swift_errorRetain();
      v576 = Logger.logObject.getter();
      LODWORD(v578) = static os_log_type_t.default.getter();
      uint64_t v393 = sub_10017A740();
      *(unsigned char *)(v393 + 16) = 34;
      uint64_t v394 = sub_10017A740();
      *(unsigned char *)(v394 + 16) = 8;
      uint64_t v395 = sub_100162774();
      *(void *)(v395 + 16) = sub_1006A8398;
      *(void *)(v395 + 24) = v392;
      uint64_t v396 = sub_100162774();
      *(void *)(v396 + 16) = sub_100164424;
      *(void *)(v396 + 24) = v395;
      uint64_t v397 = sub_10017A740();
      *(unsigned char *)(v397 + 16) = 34;
      uint64_t v398 = sub_10017A740();
      *(unsigned char *)(v398 + 16) = 8;
      uint64_t v399 = sub_100162774();
      *(void *)(v399 + 16) = sub_1001648B8;
      *(void *)(v399 + 24) = v391;
      uint64_t v400 = v576;
      uint64_t v401 = sub_100162774();
      *(void *)(v401 + 16) = sub_100164424;
      *(void *)(v401 + 24) = v399;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v402 = sub_10017F508();
      *(_OWORD *)(v402 + 16) = xmmword_100C349B0;
      *(void *)(v402 + 32) = sub_100162D68;
      *(void *)(v402 + 40) = v393;
      *(void *)(v402 + 48) = sub_100162D68;
      *(void *)(v402 + 56) = v394;
      *(void *)(v402 + 64) = sub_100164458;
      *(void *)(v402 + 72) = v396;
      *(void *)(v402 + 80) = sub_100162D68;
      *(void *)(v402 + 88) = v397;
      *(void *)(v402 + 96) = sub_100162D68;
      *(void *)(v402 + 104) = v398;
      *(void *)(v402 + 112) = sub_100164458;
      *(void *)(v402 + 120) = v401;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v400, (os_log_type_t)v578))
      {
        uint64_t v403 = (_WORD *)sub_100164464();
        v581 = (uint8_t *)sub_100189F84();
        uint64_t v582 = 0;
        *uint64_t v403 = 514;
        v583 = (uint8_t *)(v403 + 1);
        v579 = sub_100162D68;
        uint64_t v580 = v393;
        sub_1001A2384();
        goto LABEL_137;
      }
      swift_errorRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      return;
    case 7u:
      uint64_t v265 = *(NSObject **)v26;
      uint64_t v266 = v1;
      uint64_t v267 = sub_100181E00();
      *(void *)(v267 + 16) = v265;
      swift_retain();
      v576 = v265;
      swift_errorRetain();
      v578 = Logger.logObject.getter();
      LODWORD(v577) = static os_log_type_t.error.getter();
      uint64_t v268 = sub_10017A740();
      sub_10019DEF8(v268);
      v574 = (uint8_t *)sub_10017A740();
      sub_1001A478C((uint64_t)v574);
      uint64_t v269 = sub_100181E00();
      sub_100182B10(v269);
      uint64_t v270 = sub_100162774();
      *(void *)(v270 + 16) = sub_10017931C;
      *(void *)(v270 + 24) = v269;
      uint64_t v271 = sub_10017A740();
      sub_100162AE4(v271);
      uint64_t v272 = sub_10017A740();
      *(unsigned char *)(v272 + 16) = 8;
      uint64_t v273 = sub_100162774();
      *(void *)(v273 + 16) = sub_1006A97EC;
      *(void *)(v273 + 24) = v267;
      uint64_t v274 = sub_100162774();
      *(void *)(v274 + 16) = sub_100164424;
      *(void *)(v274 + 24) = v273;
      uint64_t v275 = sub_10017A740();
      sub_10019FF3C(v275);
      uint64_t v276 = sub_10017A740();
      sub_1001A478C(v276);
      uint64_t v277 = sub_100162774();
      *(void *)(v277 + 16) = sub_1001648B8;
      *(void *)(v277 + 24) = v266;
      uint64_t v278 = sub_100162774();
      *(void *)(v278 + 16) = sub_100164424;
      *(void *)(v278 + 24) = v277;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v279 = sub_100163F4C();
      *(_OWORD *)(v279 + 16) = xmmword_100C367B0;
      *(void *)(v279 + 32) = sub_100162D68;
      *(void *)(v279 + 40) = v268;
      uint64_t v280 = (uint64_t)v574;
      *(void *)(v279 + 48) = sub_100162D68;
      *(void *)(v279 + 56) = v280;
      *(void *)(v279 + 64) = sub_100178DA4;
      *(void *)(v279 + 72) = v270;
      *(void *)(v279 + 80) = sub_100162D68;
      *(void *)(v279 + 88) = v271;
      *(void *)(v279 + 96) = sub_100162D68;
      *(void *)(v279 + 104) = v272;
      *(void *)(v279 + 112) = sub_100164458;
      *(void *)(v279 + 120) = v274;
      *(void *)(v279 + 128) = sub_100162D68;
      *(void *)(v279 + 136) = v275;
      *(void *)(v279 + 144) = sub_100162D68;
      *(void *)(v279 + 152) = v276;
      *(void *)(v279 + 160) = sub_100164458;
      *(void *)(v279 + 168) = v278;
      v575 = (uint8_t *)v268;
      uint64_t v281 = (uint8_t *)v280;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_1001D15BC())
      {
        swift_errorRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_132;
      }
      uint64_t v571 = v271;
      sub_100164464();
      v581 = (uint8_t *)sub_10018A9FC();
      uint64_t v582 = 0;
      v572 = v581;
      v573 = (uint8_t *)v279;
      sub_10019B5B0(771);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v575;
      sub_1001A2384();
      if (v279) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v281;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = v270;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v571;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v272;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v274;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v275;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v276;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v278;
      sub_10019EF9C();
      swift_release();
      sub_10018B0E4();
      char v282 = v578;
      _os_log_impl((void *)&_mh_execute_header, v578, v283, "Failed loading weather statistics. error=%{private,mask.hash}s uuid=%{public}s", v573, 0x20u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_10016446C();
      swift_errorRelease();

      return;
    case 8u:
      uint64_t v404 = v1;
      uint64_t v405 = sub_100181E00();
      sub_10019AE5C(v405);
      v578 = Logger.logObject.getter();
      uint64_t v49 = static os_log_type_t.default.getter();
      uint64_t v406 = sub_10017A740();
      sub_100166C54(v406);
      uint64_t v407 = sub_10017A740();
      sub_100164B04(v407);
      uint64_t v408 = sub_100162774();
      *(void *)(v408 + 16) = sub_10017720C;
      *(void *)(v408 + 24) = v26;
      uint64_t v409 = sub_100162774();
      *(void *)(v409 + 16) = sub_1001771D8;
      *(void *)(v409 + 24) = v408;
      uint64_t v410 = sub_10017A740();
      sub_1001D1C30(v410);
      uint64_t v411 = sub_10017A740();
      sub_1001D2514(v411);
      uint64_t v412 = sub_100162774();
      *(void *)(v412 + 16) = sub_1001648B8;
      *(void *)(v412 + 24) = v404;
      uint64_t v413 = sub_100162774();
      *(void *)(v413 + 16) = sub_100164424;
      *(void *)(v413 + 24) = v412;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v414 = sub_10017F508();
      *(_OWORD *)(v414 + 16) = xmmword_100C349B0;
      *(void *)(v414 + 32) = sub_100162D68;
      *(void *)(v414 + 40) = v406;
      *(void *)(v414 + 48) = sub_100162D68;
      *(void *)(v414 + 56) = v20;
      *(void *)(v414 + 64) = sub_100177174;
      *(void *)(v414 + 72) = v409;
      *(void *)(v414 + 80) = sub_100162D68;
      *(void *)(v414 + 88) = v23;
      *(void *)(v414 + 96) = sub_100162D68;
      *(void *)(v414 + 104) = &unk_100E8A000;
      *(void *)(v414 + 112) = sub_100164458;
      *(void *)(v414 + 120) = v413;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_10016519C()) {
        goto LABEL_71;
      }
      uint64_t v295 = sub_100164464();
      uint64_t v415 = sub_10016EEA8();
      sub_10019D76C(v415);
      v579 = sub_100162D68;
      uint64_t v580 = v406;
      sub_1001A2384();
      if (v26) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v20;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100177174;
      uint64_t v580 = v409;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)&unk_100E8A000;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v413;
      sub_10019EF9C();
      swift_release();
      sub_10018B0E4();
      uint64_t v156 = "About to determine if weather data should be updated. minimumInterval=%{public}f, uuid=%{public}s";
      goto LABEL_125;
    case 9u:
      uint64_t v284 = v1;
      if (*v26 == 1)
      {
        uint64_t v285 = sub_100181E00();
        sub_10019AE5C(v285);
        v578 = Logger.logObject.getter();
        uint64_t v49 = static os_log_type_t.default.getter();
        uint64_t v286 = sub_10017A740();
        sub_100166C54(v286);
        uint64_t v287 = sub_10017A740();
        sub_100164B04(v287);
        uint64_t v288 = sub_100162774();
        *(void *)(v288 + 16) = sub_1006A95B8;
        *(void *)(v288 + 24) = v26;
        uint64_t v289 = sub_100162774();
        *(void *)(v289 + 16) = sub_1001771D8;
        *(void *)(v289 + 24) = v288;
        uint64_t v290 = sub_10017A740();
        sub_1001D1C30(v290);
        uint64_t v291 = sub_10017A740();
        sub_1001D2514(v291);
        uint64_t v292 = sub_100162774();
        *(void *)(v292 + 16) = sub_1001648B8;
        *(void *)(v292 + 24) = v284;
        uint64_t v293 = sub_100162774();
        *(void *)(v293 + 16) = sub_100164424;
        *(void *)(v293 + 24) = v292;
        sub_10017DF08(&qword_100E8AC18);
        uint64_t v294 = sub_10017F508();
        *(_OWORD *)(v294 + 16) = xmmword_100C349B0;
        *(void *)(v294 + 32) = sub_100162D68;
        *(void *)(v294 + 40) = v286;
        *(void *)(v294 + 48) = sub_100162D68;
        *(void *)(v294 + 56) = v20;
        *(void *)(v294 + 64) = sub_100177174;
        *(void *)(v294 + 72) = v289;
        *(void *)(v294 + 80) = sub_100162D68;
        *(void *)(v294 + 88) = v23;
        *(void *)(v294 + 96) = sub_100162D68;
        *(void *)(v294 + 104) = &unk_100E8A000;
        *(void *)(v294 + 112) = sub_100164458;
        *(void *)(v294 + 120) = v293;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (sub_10016519C())
        {
          uint64_t v295 = sub_100164464();
          uint64_t v296 = sub_10016EEA8();
          sub_10019D76C(v296);
          v579 = sub_100162D68;
          uint64_t v580 = v286;
          sub_1001A2384();
          if (v26) {
            goto LABEL_137;
          }
          swift_release();
          v579 = sub_100162D68;
          uint64_t v580 = (uint64_t)v20;
          sub_10019EF9C();
          swift_release();
          v579 = sub_100177174;
          uint64_t v580 = v289;
          sub_10019EF9C();
          swift_release();
          v579 = sub_100162D68;
          uint64_t v580 = (uint64_t)v23;
          sub_10019EF9C();
          swift_release();
          v579 = sub_100162D68;
          uint64_t v580 = (uint64_t)&unk_100E8A000;
          sub_10019EF9C();
          swift_release();
          v579 = sub_100164458;
          uint64_t v580 = v293;
          sub_10019EF9C();
          swift_release();
          sub_10018B0E4();
          uint64_t v156 = "Weather data in app state is expired and we're past the threshold time between updates. We will update."
                 " timeIntervalSinceLastRefresh=%{public}f, uuid=%{public}s";
          goto LABEL_125;
        }
LABEL_71:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_113;
      }
      uint64_t v546 = sub_100181E00();
      sub_10019AE5C(v546);
      v578 = Logger.logObject.getter();
      uint64_t v49 = static os_log_type_t.default.getter();
      uint64_t v547 = sub_10017A740();
      sub_100166C54(v547);
      uint64_t v548 = sub_10017A740();
      sub_100164B04(v548);
      uint64_t v549 = sub_100162774();
      *(void *)(v549 + 16) = sub_1006A95B8;
      *(void *)(v549 + 24) = v26;
      uint64_t v550 = sub_100162774();
      *(void *)(v550 + 16) = sub_1001771DC;
      *(void *)(v550 + 24) = v549;
      uint64_t v551 = sub_10017A740();
      sub_1001D1C30(v551);
      uint64_t v552 = sub_10017A740();
      sub_1001D2514(v552);
      uint64_t v553 = sub_100162774();
      *(void *)(v553 + 16) = sub_1001648B8;
      *(void *)(v553 + 24) = v284;
      uint64_t v554 = sub_100162774();
      *(void *)(v554 + 16) = sub_100164424;
      *(void *)(v554 + 24) = v553;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v555 = sub_10017F508();
      *(_OWORD *)(v555 + 16) = xmmword_100C349B0;
      *(void *)(v555 + 32) = sub_100162D68;
      *(void *)(v555 + 40) = v547;
      *(void *)(v555 + 48) = sub_100162D68;
      *(void *)(v555 + 56) = v20;
      *(void *)(v555 + 64) = sub_100177178;
      *(void *)(v555 + 72) = v550;
      *(void *)(v555 + 80) = sub_100162D68;
      *(void *)(v555 + 88) = v23;
      *(void *)(v555 + 96) = sub_100162D68;
      *(void *)(v555 + 104) = &unk_100E8A000;
      *(void *)(v555 + 112) = sub_100164458;
      *(void *)(v555 + 120) = v554;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_10016519C()) {
        goto LABEL_71;
      }
      uint64_t v295 = sub_100164464();
      uint64_t v556 = sub_10016EEA8();
      sub_10019D76C(v556);
      v579 = sub_100162D68;
      uint64_t v580 = v547;
      sub_1001A2384();
      if (v26)
      {
LABEL_137:
        swift_errorRelease();
        __break(1u);
        return;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v20;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100177178;
      uint64_t v580 = v550;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)&unk_100E8A000;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v554;
      sub_10019EF9C();
      swift_release();
      sub_10018B0E4();
      uint64_t v156 = "Weather data in app state is expired but we're NOT past the threshold. We will NOT update. timeIntervalSinc"
             "eLastRefresh=%{public}f, uuid=%{public}s";
LABEL_125:
      v452 = v49;
      v453 = (uint8_t *)v295;
      uint32_t v454 = 22;
LABEL_126:
      _os_log_impl((void *)&_mh_execute_header, v452, v155, v156, v453, v454);
LABEL_127:
      swift_arrayDestroy();
      sub_100162EE0();
LABEL_128:
      sub_10016446C();
LABEL_129:

      return;
    case 0xAu:
      char v416 = (char)v578;
      v417 = (void (*)(void))v578[4].isa;
      sub_1001723F8();
      v417();
      sub_10017F0C8();
      sub_1001D0EA8();
      v418();
      sub_100186AD4();
      uint64_t v419 = swift_allocObject();
      sub_1001723F8();
      v417();
      swift_retain();
      v576 = Logger.logObject.getter();
      LODWORD(v575) = static os_log_type_t.default.getter();
      uint64_t v420 = sub_10017A740();
      sub_10019DEF8(v420);
      uint64_t v421 = sub_10017A740();
      sub_1001A6904(v421);
      uint64_t v422 = sub_100181E00();
      sub_100182B10(v422);
      uint64_t v423 = sub_100162774();
      *(void *)(v423 + 16) = sub_10017931C;
      *(void *)(v423 + 24) = v422;
      uint64_t v424 = sub_10017A740();
      sub_100162AE4(v424);
      uint64_t v425 = sub_10017A740();
      *(unsigned char *)(v425 + 16) = v416;
      uint64_t v426 = sub_100162774();
      *(void *)(v426 + 16) = sub_1006A82F0;
      *(void *)(v426 + 24) = v419;
      uint64_t v427 = (uint8_t *)sub_100162774();
      *((void *)v427 + 2) = sub_100164424;
      *((void *)v427 + 3) = v426;
      uint64_t v428 = sub_10017A740();
      sub_10019FF3C(v428);
      uint64_t v429 = sub_10017A740();
      *(unsigned char *)(v429 + 16) = v416;
      uint64_t v430 = sub_100162774();
      v431 = v573;
      *(void *)(v430 + 16) = sub_1001648B8;
      *(void *)(v430 + 24) = v431;
      uint64_t v432 = sub_100162774();
      *(void *)(v432 + 16) = sub_100164424;
      *(void *)(v432 + 24) = v430;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v433 = sub_100163F4C();
      *(_OWORD *)(v433 + 16) = xmmword_100C367B0;
      *(void *)(v433 + 32) = sub_100162D68;
      *(void *)(v433 + 40) = v420;
      v434 = v572;
      *(void *)(v433 + 48) = sub_100162D68;
      *(void *)(v433 + 56) = v434;
      *(void *)(v433 + 64) = sub_100178DA4;
      *(void *)(v433 + 72) = v423;
      *(void *)(v433 + 80) = sub_100162D68;
      *(void *)(v433 + 88) = v424;
      *(void *)(v433 + 96) = sub_100162D68;
      *(void *)(v433 + 104) = v425;
      *(void *)(v433 + 112) = sub_100164458;
      *(void *)(v433 + 120) = v427;
      *(void *)(v433 + 128) = sub_100162D68;
      *(void *)(v433 + 136) = v428;
      *(void *)(v433 + 144) = sub_100162D68;
      *(void *)(v433 + 152) = v429;
      *(void *)(v433 + 160) = sub_100164458;
      *(void *)(v433 + 168) = v432;
      sub_100183530();
      swift_retain();
      v574 = (uint8_t *)v423;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100191198()) {
        goto LABEL_135;
      }
      v570 = v427;
      uint64_t v571 = v429;
      sub_100164464();
      uint64_t v435 = sub_10018A9FC();
      sub_100184ABC(v435);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v573;
      sub_1001A2384();
      if (v429) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v420;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = (uint64_t)v574;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v424;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v425;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v570;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v428;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v571;
      sub_10019EF9C();
      uint64_t v89 = v577;
      v436 = v578;
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v432;
      sub_10019EF9C();
      swift_release();
      sub_10019D204((void *)&_mh_execute_header, v437, (os_log_type_t)v575, "Received a weather data update for the previous current location. Discarding so as not to override any data for the current location. newCurrentLocation=%{private,mask.hash}s, uuid=%{public}s");
      sub_100188AC8();
      sub_100162EE0();
      sub_10016446C();

      uint64_t v91 = (void (*)(char *, uint64_t))v436[1].isa;
      uint64_t v92 = v15;
      goto LABEL_66;
    case 0xBu:
      sub_100182514();
      uint64_t v140 = sub_10017A740();
      sub_1001790A8(v140);
      uint64_t v49 = Logger.logObject.getter();
      int v141 = static os_log_type_t.default.getter();
      uint64_t v142 = sub_10017A740();
      sub_100166C54(v142);
      uint64_t v143 = sub_10017A740();
      sub_10012B630(v143);
      uint64_t v144 = sub_100162774();
      *(void *)(v144 + 16) = sub_100179440;
      *(void *)(v144 + 24) = v26;
      uint64_t v145 = sub_100162774();
      *(void *)(v145 + 16) = sub_100179408;
      *(void *)(v145 + 24) = v144;
      uint64_t v146 = sub_100162774();
      *(void *)(v146 + 16) = sub_1001793D4;
      *(void *)(v146 + 24) = v145;
      uint64_t v147 = sub_100162774();
      *(void *)(v147 + 16) = sub_100179398;
      *(void *)(v147 + 24) = v146;
      uint64_t v148 = sub_10017A740();
      sub_10019FF3C(v148);
      uint64_t v149 = sub_10017A740();
      sub_1001A478C(v149);
      uint64_t v150 = sub_100162774();
      *(void *)(v150 + 16) = sub_1001648B8;
      *(void *)(v150 + 24) = v23;
      uint64_t v151 = sub_100162774();
      *(void *)(v151 + 16) = sub_100164424;
      *(void *)(v151 + 24) = v150;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v152 = sub_10017F508();
      *(_OWORD *)(v152 + 16) = xmmword_100C349B0;
      *(void *)(v152 + 32) = sub_100162D68;
      *(void *)(v152 + 40) = v142;
      *(void *)(v152 + 48) = sub_100162D68;
      *(void *)(v152 + 56) = a1;
      *(void *)(v152 + 64) = sub_10017932C;
      *(void *)(v152 + 72) = v147;
      *(void *)(v152 + 80) = sub_100162D68;
      *(void *)(v152 + 88) = v148;
      *(void *)(v152 + 96) = sub_100162D68;
      *(void *)(v152 + 104) = v149;
      *(void *)(v152 + 112) = sub_100164458;
      *(void *)(v152 + 120) = v151;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v49, (os_log_type_t)v141)) {
        goto LABEL_71;
      }
      LODWORD(v578) = v141;
      uint64_t v153 = sub_100164464();
      uint64_t v154 = sub_10016EEA8();
      sub_10019D76C(v154);
      v579 = sub_100162D68;
      uint64_t v580 = v142;
      sub_1001A2384();
      if (v145) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_10017932C;
      uint64_t v580 = v147;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v148;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v149;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v151;
      sub_10019EF9C();
      swift_release();
      sub_100188D84();
      uint64_t v156 = "Dispatch event that Weather data has been updated. animated=%{BOOL,public}d, uuid=%{public}s";
      goto LABEL_70;
    case 0xCu:
      uint64_t v297 = *(void *)v26;
      uint64_t v298 = *((void *)v26 + 1);
      char v299 = v26[16];
      uint64_t v300 = v1;
      uint64_t v301 = sub_100162774();
      *(void *)(v301 + 16) = v297;
      *(void *)(v301 + 24) = v298;
      uint64_t v302 = sub_10017A740();
      *(unsigned char *)(v302 + 16) = v299;
      swift_retain();
      v578 = Logger.logObject.getter();
      LODWORD(v577) = static os_log_type_t.default.getter();
      uint64_t v303 = sub_10017A740();
      LOBYTE(v303[2].isa) = 32;
      v575 = (uint8_t *)sub_10017A740();
      sub_1001A478C((uint64_t)v575);
      uint64_t v304 = sub_100162774();
      *(void *)(v304 + 16) = sub_1006A97F0;
      *(void *)(v304 + 24) = v301;
      uint64_t v305 = sub_100162774();
      *(void *)(v305 + 16) = sub_100164424;
      *(void *)(v305 + 24) = v304;
      uint64_t v306 = sub_10017A740();
      sub_100166C54(v306);
      uint64_t v307 = sub_10017A740();
      *(unsigned char *)(v307 + 16) = 4;
      uint64_t v308 = sub_100162774();
      *(void *)(v308 + 16) = sub_1001B1A50;
      *(void *)(v308 + 24) = v302;
      uint64_t v309 = sub_100162774();
      *(void *)(v309 + 16) = sub_100179408;
      *(void *)(v309 + 24) = v308;
      uint64_t v310 = sub_100162774();
      *(void *)(v310 + 16) = sub_1001793D4;
      *(void *)(v310 + 24) = v309;
      uint64_t v311 = sub_100162774();
      *(void *)(v311 + 16) = sub_100179398;
      *(void *)(v311 + 24) = v310;
      uint64_t v312 = sub_10017A740();
      sub_10019FF3C(v312);
      uint64_t v313 = sub_10017A740();
      sub_1001637D8(v313);
      uint64_t v314 = sub_100162774();
      *(void *)(v314 + 16) = sub_1001648B8;
      *(void *)(v314 + 24) = v300;
      uint64_t v315 = sub_100162774();
      *(void *)(v315 + 16) = sub_100164424;
      *(void *)(v315 + 24) = v314;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v316 = sub_100163F4C();
      *(_OWORD *)(v316 + 16) = xmmword_100C367B0;
      *(void *)(v316 + 32) = sub_100162D68;
      *(void *)(v316 + 40) = v303;
      uint64_t v317 = (uint64_t)v575;
      *(void *)(v316 + 48) = sub_100162D68;
      *(void *)(v316 + 56) = v317;
      *(void *)(v316 + 64) = sub_100164458;
      *(void *)(v316 + 72) = v305;
      *(void *)(v316 + 80) = sub_100162D68;
      *(void *)(v316 + 88) = v306;
      *(void *)(v316 + 96) = sub_100162D68;
      *(void *)(v316 + 104) = v307;
      *(void *)(v316 + 112) = sub_10017932C;
      *(void *)(v316 + 120) = v311;
      *(void *)(v316 + 128) = sub_100162D68;
      *(void *)(v316 + 136) = v312;
      *(void *)(v316 + 144) = sub_100162D68;
      *(void *)(v316 + 152) = v301;
      *(void *)(v316 + 160) = sub_100164458;
      *(void *)(v316 + 168) = v315;
      v576 = v303;
      uint64_t v318 = (uint8_t *)v305;
      uint64_t v319 = v317;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_1001D15BC()) {
        goto LABEL_131;
      }
      v320 = (uint8_t *)v319;
      unsigned __int8 v321 = (uint8_t *)sub_100164464();
      v581 = (uint8_t *)sub_100189F84();
      uint64_t v582 = 0;
      v574 = v581;
      *(_WORD *)unsigned __int8 v321 = 770;
      v583 = v321 + 2;
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v576;
      sub_1001A2384();
      if (v316) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v320;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v318;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v306;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v307;
      sub_10019EF9C();
      swift_release();
      v579 = sub_10017932C;
      uint64_t v580 = v311;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v312;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v301;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v315;
      sub_10019EF9C();
      swift_release();
      sub_10018B0E4();
      uint64_t v49 = v578;
      _os_log_impl((void *)&_mh_execute_header, v578, v322, "Dispatch event that Weather statistics has been updated. description=%s, animated=%{BOOL,public}d, uuid=%{public}s", v321, 0x1Cu);
      goto LABEL_127;
    case 0xDu:
      sub_100182514();
      uint64_t v438 = sub_10017A740();
      sub_1001790A8(v438);
      uint64_t v49 = Logger.logObject.getter();
      int v439 = static os_log_type_t.default.getter();
      uint64_t v440 = sub_10017A740();
      sub_100166C54(v440);
      uint64_t v441 = sub_10017A740();
      sub_10012B630(v441);
      uint64_t v442 = sub_100162774();
      *(void *)(v442 + 16) = sub_1001B1A50;
      *(void *)(v442 + 24) = v26;
      uint64_t v443 = sub_100162774();
      *(void *)(v443 + 16) = sub_10017940C;
      *(void *)(v443 + 24) = v442;
      uint64_t v444 = sub_100162774();
      *(void *)(v444 + 16) = sub_1001793D8;
      *(void *)(v444 + 24) = v443;
      uint64_t v445 = sub_100162774();
      *(void *)(v445 + 16) = sub_10017939C;
      *(void *)(v445 + 24) = v444;
      uint64_t v446 = sub_10017A740();
      sub_10019FF3C(v446);
      uint64_t v447 = sub_10017A740();
      sub_1001A478C(v447);
      uint64_t v448 = sub_100162774();
      *(void *)(v448 + 16) = sub_1001648B8;
      *(void *)(v448 + 24) = v23;
      uint64_t v449 = sub_100162774();
      *(void *)(v449 + 16) = sub_100164424;
      *(void *)(v449 + 24) = v448;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v450 = sub_10017F508();
      *(_OWORD *)(v450 + 16) = xmmword_100C349B0;
      *(void *)(v450 + 32) = sub_100162D68;
      *(void *)(v450 + 40) = v440;
      *(void *)(v450 + 48) = sub_100162D68;
      *(void *)(v450 + 56) = a1;
      *(void *)(v450 + 64) = sub_100179330;
      *(void *)(v450 + 72) = v445;
      *(void *)(v450 + 80) = sub_100162D68;
      *(void *)(v450 + 88) = v446;
      *(void *)(v450 + 96) = sub_100162D68;
      *(void *)(v450 + 104) = v447;
      *(void *)(v450 + 112) = sub_100164458;
      *(void *)(v450 + 120) = v449;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v49, (os_log_type_t)v439)) {
        goto LABEL_71;
      }
      LODWORD(v578) = v439;
      uint64_t v153 = sub_100164464();
      uint64_t v451 = sub_10016EEA8();
      sub_10019D76C(v451);
      v579 = sub_100162D68;
      uint64_t v580 = v440;
      sub_1001A2384();
      if (v443) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100179330;
      uint64_t v580 = v445;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v446;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v447;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v449;
      sub_10019EF9C();
      swift_release();
      sub_100188D84();
      uint64_t v156 = "Dispatch event that Weather news data has been updated. animated=%{BOOL,public}d, uuid=%{public}s";
LABEL_70:
      v452 = v49;
      v453 = (uint8_t *)v153;
      uint32_t v454 = 18;
      goto LABEL_126;
    case 0xEu:
      uint64_t v67 = v577;
      char v68 = (char)v578;
      uint64_t v69 = (void (*)(char *, char *, uint64_t))v578[4].isa;
      v69(v12, v26, v577);
      sub_10017F0C8();
      sub_1001D0EA8();
      v70();
      sub_100186AD4();
      uint64_t v71 = swift_allocObject();
      v69(&v26[v71], v23, v67);
      swift_retain();
      v576 = Logger.logObject.getter();
      LODWORD(v575) = static os_log_type_t.default.getter();
      uint64_t v72 = sub_10017A740();
      sub_10019DEF8(v72);
      uint64_t v73 = sub_10017A740();
      sub_1001A6904(v73);
      uint64_t v74 = sub_100181E00();
      sub_100182B10(v74);
      uint64_t v75 = sub_100162774();
      *(void *)(v75 + 16) = sub_10017931C;
      *(void *)(v75 + 24) = v74;
      uint64_t v76 = sub_10017A740();
      sub_100162AE4(v76);
      uint64_t v77 = sub_10017A740();
      *(unsigned char *)(v77 + 16) = v68;
      uint64_t v78 = sub_100162774();
      *(void *)(v78 + 16) = sub_100179304;
      *(void *)(v78 + 24) = v71;
      uint64_t v79 = (uint8_t *)sub_100162774();
      *((void *)v79 + 2) = sub_100164424;
      *((void *)v79 + 3) = v78;
      uint64_t v80 = sub_10017A740();
      sub_10019FF3C(v80);
      uint64_t v81 = sub_10017A740();
      *(unsigned char *)(v81 + 16) = v68;
      uint64_t v82 = sub_100162774();
      uint64_t v83 = v573;
      *(void *)(v82 + 16) = sub_1001648B8;
      *(void *)(v82 + 24) = v83;
      uint64_t v84 = sub_100162774();
      *(void *)(v84 + 16) = sub_100164424;
      *(void *)(v84 + 24) = v82;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v85 = sub_100163F4C();
      *(_OWORD *)(v85 + 16) = xmmword_100C367B0;
      *(void *)(v85 + 32) = sub_100162D68;
      *(void *)(v85 + 40) = v72;
      uint64_t v86 = v572;
      *(void *)(v85 + 48) = sub_100162D68;
      *(void *)(v85 + 56) = v86;
      *(void *)(v85 + 64) = sub_100178DA4;
      *(void *)(v85 + 72) = v75;
      *(void *)(v85 + 80) = sub_100162D68;
      *(void *)(v85 + 88) = v76;
      *(void *)(v85 + 96) = sub_100162D68;
      *(void *)(v85 + 104) = v77;
      *(void *)(v85 + 112) = sub_100164458;
      *(void *)(v85 + 120) = v79;
      *(void *)(v85 + 128) = sub_100162D68;
      *(void *)(v85 + 136) = v80;
      *(void *)(v85 + 144) = sub_100162D68;
      *(void *)(v85 + 152) = v81;
      *(void *)(v85 + 160) = sub_100164458;
      *(void *)(v85 + 168) = v84;
      sub_100183530();
      swift_retain();
      v574 = (uint8_t *)v75;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100191198())
      {
LABEL_135:

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1001844B8();
        goto LABEL_136;
      }
      v570 = v79;
      uint64_t v571 = v81;
      sub_100164464();
      uint64_t v87 = sub_10018A9FC();
      sub_100184ABC(v87);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v573;
      sub_1001A2384();
      if (v81) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v72;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = (uint64_t)v574;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v76;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v77;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v570;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v80;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v571;
      sub_10019EF9C();
      uint64_t v89 = v577;
      uint64_t v88 = v578;
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v84;
      sub_10019EF9C();
      swift_release();
      sub_10019D204((void *)&_mh_execute_header, v90, (os_log_type_t)v575, "Checking whether a statistics refresh is needed. location=%{private,mask.hash}s uuid=%{public}s");
      sub_100188AC8();
      sub_100162EE0();
      sub_10016446C();

      uint64_t v91 = (void (*)(char *, uint64_t))v88[1].isa;
      uint64_t v92 = v12;
LABEL_66:
      v91(v92, v89);
      return;
    case 0xFu:
      unsigned __int8 v323 = &v26[*(int *)(sub_10017DF08(&qword_100E8AC10) + 48)];
      uint64_t v324 = *(NSObject **)v323;
      v575 = (uint8_t *)*((void *)v323 + 1);
      v576 = v324;
      uint64_t v325 = v577;
      long long v326 = v578;
      long long v327 = (void (*)(void))v578[4].isa;
      uint64_t v328 = (uint64_t)v574;
      sub_1001191A8();
      v327();
      sub_10011C044();
      ((void (*)(char *, uint64_t, uint64_t))v326[2].isa)(v23, v328, v325);
      sub_100186AD4();
      uint64_t v329 = swift_allocObject();
      sub_1001191A8();
      v327();
      uint64_t v330 = sub_100162774();
      uint64_t v331 = (uint64_t)v575;
      *(void *)(v330 + 16) = v576;
      *(void *)(v330 + 24) = v331;
      swift_retain();
      v576 = Logger.logObject.getter();
      LODWORD(v571) = static os_log_type_t.default.getter();
      uint64_t v332 = sub_10017A740();
      *(unsigned char *)(v332 + 16) = 112;
      uint64_t v333 = (uint8_t *)v332;
      uint64_t v334 = sub_10017A740();
      *(unsigned char *)(v334 + 16) = 8;
      uint64_t v335 = v334;
      uint64_t v336 = sub_100181E00();
      sub_100182B10(v336);
      uint64_t v337 = sub_100162774();
      v566 = (uint8_t *)v337;
      *(void *)(v337 + 16) = sub_10017931C;
      *(void *)(v337 + 24) = v336;
      uint64_t v338 = sub_10017A740();
      uint64_t v339 = sub_100162AE4(v338);
      v572 = sub_10017A740();
      LOBYTE(v572[2].isa) = 8;
      uint64_t v340 = sub_100162774();
      *(void *)(v340 + 16) = sub_100179304;
      *(void *)(v340 + 24) = v329;
      uint64_t v341 = sub_100162774();
      *(void *)(v341 + 16) = sub_100164424;
      *(void *)(v341 + 24) = v340;
      uint64_t v342 = v341;
      v575 = (uint8_t *)v341;
      uint64_t v565 = sub_10017A740();
      *(unsigned char *)(v565 + 16) = 32;
      v564 = (uint8_t *)sub_10017A740();
      v564[16] = 8;
      uint64_t v343 = sub_100162774();
      *(void *)(v343 + 16) = sub_1006A97F0;
      *(void *)(v343 + 24) = v330;
      uint64_t v344 = sub_100162774();
      *(void *)(v344 + 16) = sub_100164424;
      *(void *)(v344 + 24) = v343;
      v569 = (uint8_t *)v344;
      uint64_t v345 = sub_10017A740();
      sub_1001D13D4(v345);
      v570 = (uint8_t *)sub_10017A740();
      v570[16] = 8;
      uint64_t v346 = sub_100162774();
      uint64_t v347 = v573;
      *(void *)(v346 + 16) = sub_1001648B8;
      *(void *)(v346 + 24) = v347;
      uint64_t v348 = sub_100162774();
      *(void *)(v348 + 16) = sub_100164424;
      *(void *)(v348 + 24) = v346;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v349 = swift_allocObject();
      *(_OWORD *)(v349 + 16) = xmmword_100C4F040;
      *(void *)(v349 + 32) = sub_100162D68;
      *(void *)(v349 + 40) = v333;
      *(void *)(v349 + 48) = sub_100162D68;
      *(void *)(v349 + 56) = v335;
      *(void *)(v349 + 64) = sub_100178DA4;
      v350 = v566;
      *(void *)(v349 + 72) = v566;
      *(void *)(v349 + 80) = sub_100162D68;
      uint64_t v351 = v339;
      *(void *)(v349 + 88) = v339;
      *(void *)(v349 + 96) = sub_100162D68;
      *(void *)(v349 + 104) = v572;
      *(void *)(v349 + 112) = sub_100164458;
      *(void *)(v349 + 120) = v342;
      *(void *)(v349 + 128) = sub_100162D68;
      uint64_t v352 = (uint8_t *)v565;
      *(void *)(v349 + 136) = v565;
      *(void *)(v349 + 144) = sub_100162D68;
      uint64_t v353 = v564;
      *(void *)(v349 + 152) = v564;
      *(void *)(v349 + 160) = sub_100164458;
      *(void *)(v349 + 168) = v344;
      *(void *)(v349 + 176) = sub_100162D68;
      *(void *)(v349 + 184) = v343;
      *(void *)(v349 + 192) = sub_100162D68;
      *(void *)(v349 + 200) = v570;
      *(void *)(v349 + 208) = sub_100164458;
      *(void *)(v349 + 216) = v348;
      v573 = v333;
      swift_retain();
      v568 = (uint8_t *)v335;
      swift_retain();
      swift_retain();
      uint64_t v567 = v351;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v354 = v353;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v576, (os_log_type_t)v571)) {
        goto LABEL_115;
      }
      v355 = v350;
      uint64_t v356 = (uint8_t *)v567;
      uint64_t v357 = v568;
      v563 = (uint8_t *)v348;
      uint64_t v358 = v572;
      uint64_t v562 = v343;
      uint64_t v359 = (uint8_t *)sub_100164464();
      v581 = (uint8_t *)swift_slowAlloc();
      uint64_t v582 = 0;
      v560 = v581;
      v561 = v359;
      sub_10019B5B0(1027);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v573;
      sub_1001A2384();
      if (v359) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v357;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = (uint64_t)v355;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v356;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v358;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v575;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v352;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v354;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v569;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v562;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v570;
      sub_10019EF9C();
      uint64_t v130 = v577;
      uint64_t v129 = v578;
      uint64_t v131 = (uint64_t)v574;
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v563;
      sub_10019EF9C();
      swift_release();
      uint64_t v132 = v576;
      _os_log_impl((void *)&_mh_execute_header, v576, (os_log_type_t)v571, "Statistics refresh required. location=%{private,mask.hash}s reason=%s uuid=%{public}s", v561, 0x2Au);
      goto LABEL_48;
    case 0x10u:
      uint64_t v93 = &v26[*(int *)(sub_10017DF08(&qword_100E8AC10) + 48)];
      uint64_t v95 = *(NSObject **)v93;
      uint64_t v94 = *((void *)v93 + 1);
      v576 = v95;
      v574 = (uint8_t *)v94;
      uint64_t v96 = v577;
      int v97 = (void (*)(uint8_t *, char *, uint64_t))v578[4].isa;
      v97(v575, v26, v577);
      sub_100176D88();
      sub_1001C86B4();
      sub_1001D0EA8();
      v98();
      unint64_t v99 = (v26[64] + 16) & ~(unint64_t)v26[64];
      uint64_t v100 = swift_allocObject();
      v97((uint8_t *)(v100 + v99), v23, v96);
      uint64_t v101 = sub_100162774();
      uint64_t v102 = (uint64_t)v574;
      *(void *)(v101 + 16) = v576;
      *(void *)(v101 + 24) = v102;
      swift_retain();
      v576 = Logger.logObject.getter();
      LODWORD(v570) = static os_log_type_t.default.getter();
      v574 = (uint8_t *)sub_10017A740();
      sub_10019DEF8((uint64_t)v574);
      uint64_t v103 = sub_10017A740();
      sub_1001A478C(v103);
      uint64_t v104 = sub_100181E00();
      sub_100182B10(v104);
      uint64_t v105 = sub_100162774();
      *(void *)(v105 + 16) = sub_100179320;
      *(void *)(v105 + 24) = v104;
      uint64_t v106 = v105;
      uint64_t v107 = sub_10017A740();
      sub_100162AE4(v107);
      v572 = sub_10017A740();
      LOBYTE(v572[2].isa) = 8;
      uint64_t v108 = sub_100162774();
      *(void *)(v108 + 16) = sub_100179304;
      *(void *)(v108 + 24) = v100;
      uint64_t v109 = sub_100162774();
      v569 = (uint8_t *)v109;
      *(void *)(v109 + 16) = sub_100164428;
      *(void *)(v109 + 24) = v108;
      uint64_t v571 = sub_10017A740();
      *(unsigned char *)(v571 + 16) = 32;
      uint64_t v565 = sub_10017A740();
      *(unsigned char *)(v565 + 16) = 8;
      uint64_t v110 = sub_100162774();
      *(void *)(v110 + 16) = sub_1006A97F0;
      *(void *)(v110 + 24) = v101;
      uint64_t v111 = sub_100162774();
      *(void *)(v111 + 16) = sub_100164424;
      *(void *)(v111 + 24) = v110;
      uint64_t v112 = v111;
      v568 = (uint8_t *)v111;
      uint64_t v113 = sub_10017A740();
      sub_1001D13D4(v113);
      uint64_t v114 = sub_10017A740();
      *(unsigned char *)(v114 + 16) = 8;
      uint64_t v115 = (uint8_t *)v114;
      uint64_t v116 = sub_100162774();
      *(void *)(v116 + 16) = sub_1001648B8;
      *(void *)(v116 + 24) = &unk_100E8A000;
      uint64_t v117 = sub_100162774();
      v573 = (uint8_t *)v117;
      *(void *)(v117 + 16) = sub_100164424;
      *(void *)(v117 + 24) = v116;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v118 = swift_allocObject();
      *(_OWORD *)(v118 + 16) = xmmword_100C4F040;
      *(void *)(v118 + 32) = sub_100162D6C;
      *(void *)(v118 + 40) = v574;
      *(void *)(v118 + 48) = sub_100162D68;
      *(void *)(v118 + 56) = v103;
      *(void *)(v118 + 64) = sub_100178AC0;
      uint64_t v119 = (uint8_t *)v106;
      *(void *)(v118 + 72) = v106;
      *(void *)(v118 + 80) = sub_100162D68;
      *(void *)(v118 + 88) = v107;
      *(void *)(v118 + 96) = sub_100162D68;
      uint64_t v120 = v571;
      *(void *)(v118 + 104) = v572;
      *(void *)(v118 + 112) = sub_10016445C;
      *(void *)(v118 + 120) = v569;
      *(void *)(v118 + 128) = sub_100162D68;
      *(void *)(v118 + 136) = v120;
      *(void *)(v118 + 144) = sub_100162D68;
      uint64_t v121 = (uint8_t *)v565;
      *(void *)(v118 + 152) = v565;
      *(void *)(v118 + 160) = sub_100164458;
      *(void *)(v118 + 168) = v112;
      *(void *)(v118 + 176) = sub_100162D68;
      uint64_t v122 = (uint8_t *)v110;
      *(void *)(v118 + 184) = v110;
      *(void *)(v118 + 192) = sub_100162D68;
      uint64_t v123 = v115;
      *(void *)(v118 + 200) = v115;
      *(void *)(v118 + 208) = sub_100164458;
      *(void *)(v118 + 216) = v573;
      swift_retain();
      uint64_t v567 = v103;
      swift_retain();
      swift_retain();
      v566 = (uint8_t *)v107;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v124 = (uint8_t *)v571;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v576, (os_log_type_t)v570))
      {
        uint64_t v125 = v566;
        uint64_t v126 = (uint8_t *)v567;
        uint64_t v127 = v572;
        v564 = v123;
        uint64_t v128 = (uint8_t *)sub_100164464();
        v581 = (uint8_t *)swift_slowAlloc();
        uint64_t v582 = 0;
        uint64_t v562 = (uint64_t)v581;
        v563 = v128;
        sub_10019B5B0(1027);
        v579 = (uint64_t (*)())sub_100162D6C;
        uint64_t v580 = (uint64_t)v574;
        sub_1001A2384();
        if (v128) {
          goto LABEL_137;
        }
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = (uint64_t)v126;
        sub_10019EF9C();
        swift_release();
        v579 = (uint64_t (*)())sub_100178AC0;
        uint64_t v580 = (uint64_t)v119;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = (uint64_t)v125;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = (uint64_t)v127;
        sub_10019EF9C();
        swift_release();
        v579 = (uint64_t (*)())sub_10016445C;
        uint64_t v580 = (uint64_t)v569;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = (uint64_t)v124;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = (uint64_t)v121;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100164458;
        uint64_t v580 = (uint64_t)v568;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = (uint64_t)v122;
        sub_10019EF9C();
        swift_release();
        v579 = sub_100162D68;
        uint64_t v580 = (uint64_t)v564;
        sub_10019EF9C();
        uint64_t v130 = v577;
        uint64_t v129 = v578;
        uint64_t v131 = (uint64_t)v575;
        swift_release();
        v579 = sub_100164458;
        uint64_t v580 = (uint64_t)v573;
        sub_10019EF9C();
        swift_release();
        uint64_t v132 = v576;
        _os_log_impl((void *)&_mh_execute_header, v576, (os_log_type_t)v570, "Statistics refresh is not required. location=%{private,mask.hash}s reason=%s uuid=%{public}s", v563, 0x2Au);
LABEL_48:
        swift_arrayDestroy();
        sub_100162EE0();
        sub_10016446C();

        ((void (*)(uint64_t, uint64_t))v129[1].isa)(v131, v130);
      }
      else
      {
LABEL_115:

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        sub_1001844B8();
LABEL_136:
        sub_100162F0C();
        v557();
      }
      return;
    case 0x11u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v455 = static os_log_type_t.default.getter();
      uint64_t v456 = sub_10017A740();
      sub_1001D1C30(v456);
      uint64_t v457 = sub_10017A740();
      sub_1001637D8(v457);
      uint64_t v458 = sub_100162774();
      *(void *)(v458 + 16) = sub_1001648B8;
      *(void *)(v458 + 24) = &unk_100E8A000;
      uint64_t v459 = sub_100162774();
      *(void *)(v459 + 16) = sub_100164424;
      *(void *)(v459 + 24) = v458;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v460 = sub_100163ED0();
      *(_OWORD *)(v460 + 16) = xmmword_100C33BA0;
      *(void *)(v460 + 32) = sub_100162D68;
      *(void *)(v460 + 40) = v23;
      *(void *)(v460 + 48) = sub_100162D68;
      *(void *)(v460 + 56) = a1;
      *(void *)(v460 + 64) = sub_100164458;
      *(void *)(v460 + 72) = v459;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v461 = sub_100183DC4();
      sub_10017E7BC(v461);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v460) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v459;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v455;
      uint64_t v59 = "Available data or data sets for the location are already being fetched. No need to update. uuid=%{public}s";
      goto LABEL_111;
    case 0x12u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v462 = static os_log_type_t.default.getter();
      uint64_t v463 = sub_10017A740();
      sub_1001D1C30(v463);
      uint64_t v464 = sub_10017A740();
      sub_1001637D8(v464);
      uint64_t v465 = sub_100162774();
      *(void *)(v465 + 16) = sub_1001648B8;
      *(void *)(v465 + 24) = &unk_100E8A000;
      uint64_t v466 = sub_100162774();
      *(void *)(v466 + 16) = sub_100164424;
      *(void *)(v466 + 24) = v465;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v467 = sub_100163ED0();
      *(_OWORD *)(v467 + 16) = xmmword_100C33BA0;
      *(void *)(v467 + 32) = sub_100162D68;
      *(void *)(v467 + 40) = v23;
      *(void *)(v467 + 48) = sub_100162D68;
      *(void *)(v467 + 56) = a1;
      *(void *)(v467 + 64) = sub_100164458;
      *(void *)(v467 + 72) = v466;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v468 = sub_100183DC4();
      sub_10017E7BC(v468);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v467) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v466;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v462;
      uint64_t v59 = "Available data or data sets were found for location in app state. No need to update. uuid=%{public}s";
      goto LABEL_111;
    case 0x13u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v504 = static os_log_type_t.default.getter();
      uint64_t v505 = sub_10017A740();
      sub_1001D1C30(v505);
      uint64_t v506 = sub_10017A740();
      sub_1001637D8(v506);
      uint64_t v507 = sub_100162774();
      *(void *)(v507 + 16) = sub_1001648B8;
      *(void *)(v507 + 24) = &unk_100E8A000;
      uint64_t v508 = sub_100162774();
      *(void *)(v508 + 16) = sub_100164424;
      *(void *)(v508 + 24) = v507;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v509 = sub_100163ED0();
      *(_OWORD *)(v509 + 16) = xmmword_100C33BA0;
      *(void *)(v509 + 32) = sub_100162D68;
      *(void *)(v509 + 40) = v23;
      *(void *)(v509 + 48) = sub_100162D68;
      *(void *)(v509 + 56) = a1;
      *(void *)(v509 + 64) = sub_100164458;
      *(void *)(v509 + 72) = v508;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v510 = sub_100183DC4();
      sub_10017E7BC(v510);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v509) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v508;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v504;
      uint64_t v59 = "Found no data or available data sets for location in app state. We will update. uuid=%{public}s";
      goto LABEL_111;
    case 0x14u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v469 = static os_log_type_t.default.getter();
      uint64_t v470 = sub_10017A740();
      sub_1001D1C30(v470);
      uint64_t v471 = sub_10017A740();
      sub_1001637D8(v471);
      uint64_t v472 = sub_100162774();
      *(void *)(v472 + 16) = sub_1001648B8;
      *(void *)(v472 + 24) = &unk_100E8A000;
      uint64_t v473 = sub_100162774();
      *(void *)(v473 + 16) = sub_100164424;
      *(void *)(v473 + 24) = v472;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v474 = sub_100163ED0();
      *(_OWORD *)(v474 + 16) = xmmword_100C33BA0;
      *(void *)(v474 + 32) = sub_100162D68;
      *(void *)(v474 + 40) = v23;
      *(void *)(v474 + 48) = sub_100162D68;
      *(void *)(v474 + 56) = a1;
      *(void *)(v474 + 64) = sub_100164458;
      *(void *)(v474 + 72) = v473;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v475 = sub_100183DC4();
      sub_10017E7BC(v475);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v474) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v473;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v469;
      uint64_t v59 = "About to fetch weather data for location. uuid=%{public}s";
      goto LABEL_111;
    case 0x15u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v476 = static os_log_type_t.default.getter();
      uint64_t v477 = sub_10017A740();
      sub_1001D1C30(v477);
      uint64_t v478 = sub_10017A740();
      sub_1001637D8(v478);
      uint64_t v479 = sub_100162774();
      *(void *)(v479 + 16) = sub_1001648B8;
      *(void *)(v479 + 24) = &unk_100E8A000;
      uint64_t v480 = sub_100162774();
      *(void *)(v480 + 16) = sub_100164424;
      *(void *)(v480 + 24) = v479;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v481 = sub_100163ED0();
      *(_OWORD *)(v481 + 16) = xmmword_100C33BA0;
      *(void *)(v481 + 32) = sub_100162D68;
      *(void *)(v481 + 40) = v23;
      *(void *)(v481 + 48) = sub_100162D68;
      *(void *)(v481 + 56) = a1;
      *(void *)(v481 + 64) = sub_100164458;
      *(void *)(v481 + 72) = v480;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v482 = sub_100183DC4();
      sub_10017E7BC(v482);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v481) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v480;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v476;
      uint64_t v59 = "Received Weather Data from Service. uuid=%{public}s";
      goto LABEL_111;
    case 0x16u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v511 = static os_log_type_t.default.getter();
      uint64_t v512 = sub_10017A740();
      sub_1001D1C30(v512);
      uint64_t v513 = sub_10017A740();
      sub_1001637D8(v513);
      uint64_t v514 = sub_100162774();
      *(void *)(v514 + 16) = sub_1001648B8;
      *(void *)(v514 + 24) = &unk_100E8A000;
      uint64_t v515 = sub_100162774();
      *(void *)(v515 + 16) = sub_100164424;
      *(void *)(v515 + 24) = v514;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v516 = sub_100163ED0();
      *(_OWORD *)(v516 + 16) = xmmword_100C33BA0;
      *(void *)(v516 + 32) = sub_100162D68;
      *(void *)(v516 + 40) = v23;
      *(void *)(v516 + 48) = sub_100162D68;
      *(void *)(v516 + 56) = a1;
      *(void *)(v516 + 64) = sub_100164458;
      *(void *)(v516 + 72) = v515;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v517 = sub_100183DC4();
      sub_10017E7BC(v517);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v516) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v515;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v511;
      uint64_t v59 = "Weather available data sets should be refreshed ... fetching available weather dataset. uuid=%{public}s";
      goto LABEL_111;
    case 0x17u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v518 = static os_log_type_t.default.getter();
      uint64_t v519 = sub_10017A740();
      sub_1001D1C30(v519);
      uint64_t v520 = sub_10017A740();
      sub_1001637D8(v520);
      uint64_t v521 = sub_100162774();
      *(void *)(v521 + 16) = sub_1001648B8;
      *(void *)(v521 + 24) = &unk_100E8A000;
      uint64_t v522 = sub_100162774();
      *(void *)(v522 + 16) = sub_100164424;
      *(void *)(v522 + 24) = v521;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v523 = sub_100163ED0();
      *(_OWORD *)(v523 + 16) = xmmword_100C33BA0;
      *(void *)(v523 + 32) = sub_100162D68;
      *(void *)(v523 + 40) = v23;
      *(void *)(v523 + 48) = sub_100162D68;
      *(void *)(v523 + 56) = a1;
      *(void *)(v523 + 64) = sub_100164458;
      *(void *)(v523 + 72) = v522;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v524 = sub_100183DC4();
      sub_10017E7BC(v524);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v523) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v522;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v518;
      uint64_t v59 = "Finished fetching available data sets. uuid=%{public}s";
      goto LABEL_111;
    case 0x18u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v360 = static os_log_type_t.default.getter();
      uint64_t v361 = sub_10017A740();
      sub_1001D1C30(v361);
      uint64_t v362 = sub_10017A740();
      sub_1001637D8(v362);
      uint64_t v363 = sub_100162774();
      *(void *)(v363 + 16) = sub_1001648B8;
      *(void *)(v363 + 24) = &unk_100E8A000;
      uint64_t v364 = sub_100162774();
      *(void *)(v364 + 16) = sub_100164424;
      *(void *)(v364 + 24) = v363;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v365 = sub_100163ED0();
      *(_OWORD *)(v365 + 16) = xmmword_100C33BA0;
      *(void *)(v365 + 32) = sub_100162D68;
      *(void *)(v365 + 40) = v23;
      *(void *)(v365 + 48) = sub_100162D68;
      *(void *)(v365 + 56) = a1;
      *(void *)(v365 + 64) = sub_100164458;
      *(void *)(v365 + 72) = v364;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v366 = sub_100183DC4();
      sub_10017E7BC(v366);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v365) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v364;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v360;
      uint64_t v59 = "Start to resolve country code. uuid=%{public}s";
      goto LABEL_111;
    case 0x19u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v367 = static os_log_type_t.default.getter();
      uint64_t v368 = sub_10017A740();
      sub_1001D1C30(v368);
      uint64_t v369 = sub_10017A740();
      sub_1001637D8(v369);
      uint64_t v370 = sub_100162774();
      *(void *)(v370 + 16) = sub_1001648B8;
      *(void *)(v370 + 24) = &unk_100E8A000;
      uint64_t v371 = sub_100162774();
      *(void *)(v371 + 16) = sub_100164424;
      *(void *)(v371 + 24) = v370;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v372 = sub_100163ED0();
      *(_OWORD *)(v372 + 16) = xmmword_100C33BA0;
      *(void *)(v372 + 32) = sub_100162D68;
      *(void *)(v372 + 40) = v23;
      *(void *)(v372 + 48) = sub_100162D68;
      *(void *)(v372 + 56) = a1;
      *(void *)(v372 + 64) = sub_100164458;
      *(void *)(v372 + 72) = v371;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v373 = sub_100183DC4();
      sub_10017E7BC(v373);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v372) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v371;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v367;
      uint64_t v59 = "Start to load weather statistics. uuid=%{public}s";
      goto LABEL_111;
    case 0x1Au:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v539 = static os_log_type_t.default.getter();
      uint64_t v540 = sub_10017A740();
      sub_1001D1C30(v540);
      uint64_t v541 = sub_10017A740();
      sub_1001637D8(v541);
      uint64_t v542 = sub_100162774();
      *(void *)(v542 + 16) = sub_1001648B8;
      *(void *)(v542 + 24) = &unk_100E8A000;
      uint64_t v543 = sub_100162774();
      *(void *)(v543 + 16) = sub_100164424;
      *(void *)(v543 + 24) = v542;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v544 = sub_100163ED0();
      *(_OWORD *)(v544 + 16) = xmmword_100C33BA0;
      *(void *)(v544 + 32) = sub_100162D68;
      *(void *)(v544 + 40) = v23;
      *(void *)(v544 + 48) = sub_100162D68;
      *(void *)(v544 + 56) = a1;
      *(void *)(v544 + 64) = sub_100164458;
      *(void *)(v544 + 72) = v543;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v545 = sub_100183DC4();
      sub_10017E7BC(v545);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v544) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v543;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v539;
      uint64_t v59 = "Finished loading weather statistics. uuid=%{public}s";
      goto LABEL_111;
    case 0x1Bu:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      uint64_t v52 = sub_10017A740();
      sub_1001D1C30(v52);
      uint64_t v53 = sub_10017A740();
      sub_1001637D8(v53);
      uint64_t v54 = sub_100162774();
      *(void *)(v54 + 16) = sub_1001648B8;
      *(void *)(v54 + 24) = &unk_100E8A000;
      uint64_t v55 = sub_100162774();
      *(void *)(v55 + 16) = sub_100164424;
      *(void *)(v55 + 24) = v54;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v56 = sub_100163ED0();
      *(_OWORD *)(v56 + 16) = xmmword_100C33BA0;
      *(void *)(v56 + 32) = sub_100162D68;
      *(void *)(v56 + 40) = v23;
      *(void *)(v56 + 48) = sub_100162D68;
      *(void *)(v56 + 56) = a1;
      *(void *)(v56 + 64) = sub_100164458;
      *(void *)(v56 + 72) = v55;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v57 = sub_100183DC4();
      sub_10017E7BC(v57);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v56) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v55;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v51;
      uint64_t v59 = "Weather data in app state is not expired. We will not update. uuid=%{public}s";
      goto LABEL_111;
    case 0x1Cu:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v525 = static os_log_type_t.default.getter();
      uint64_t v526 = sub_10017A740();
      sub_1001D1C30(v526);
      uint64_t v527 = sub_10017A740();
      sub_1001637D8(v527);
      uint64_t v528 = sub_100162774();
      *(void *)(v528 + 16) = sub_1001648B8;
      *(void *)(v528 + 24) = &unk_100E8A000;
      uint64_t v529 = sub_100162774();
      *(void *)(v529 + 16) = sub_100164424;
      *(void *)(v529 + 24) = v528;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v530 = sub_100163ED0();
      *(_OWORD *)(v530 + 16) = xmmword_100C33BA0;
      *(void *)(v530 + 32) = sub_100162D68;
      *(void *)(v530 + 40) = v23;
      *(void *)(v530 + 48) = sub_100162D68;
      *(void *)(v530 + 56) = a1;
      *(void *)(v530 + 64) = sub_100164458;
      *(void *)(v530 + 72) = v529;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v531 = sub_100183DC4();
      sub_10017E7BC(v531);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v530) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v529;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v525;
      uint64_t v59 = "Preprocessing data. uuid=%{public}s";
      goto LABEL_111;
    case 0x1Du:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v532 = static os_log_type_t.default.getter();
      uint64_t v533 = sub_10017A740();
      sub_1001D1C30(v533);
      uint64_t v534 = sub_10017A740();
      sub_1001637D8(v534);
      uint64_t v535 = sub_100162774();
      *(void *)(v535 + 16) = sub_1001648B8;
      *(void *)(v535 + 24) = &unk_100E8A000;
      uint64_t v536 = sub_100162774();
      *(void *)(v536 + 16) = sub_100164424;
      *(void *)(v536 + 24) = v535;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v537 = sub_100163ED0();
      *(_OWORD *)(v537 + 16) = xmmword_100C33BA0;
      *(void *)(v537 + 32) = sub_100162D68;
      *(void *)(v537 + 40) = v23;
      *(void *)(v537 + 48) = sub_100162D68;
      *(void *)(v537 + 56) = a1;
      *(void *)(v537 + 64) = sub_100164458;
      *(void *)(v537 + 72) = v536;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v538 = sub_100183DC4();
      sub_10017E7BC(v538);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v537) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v536;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v532;
      uint64_t v59 = "Propagate new WeatherData to the rest of the app. uuid=%{public}s";
      goto LABEL_111;
    case 0x1Eu:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v483 = static os_log_type_t.default.getter();
      uint64_t v484 = sub_10017A740();
      sub_1001D1C30(v484);
      uint64_t v485 = sub_10017A740();
      sub_1001637D8(v485);
      uint64_t v486 = sub_100162774();
      *(void *)(v486 + 16) = sub_1001648B8;
      *(void *)(v486 + 24) = &unk_100E8A000;
      uint64_t v487 = sub_100162774();
      *(void *)(v487 + 16) = sub_100164424;
      *(void *)(v487 + 24) = v486;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v488 = sub_100163ED0();
      *(_OWORD *)(v488 + 16) = xmmword_100C33BA0;
      *(void *)(v488 + 32) = sub_100162D68;
      *(void *)(v488 + 40) = v23;
      *(void *)(v488 + 48) = sub_100162D68;
      *(void *)(v488 + 56) = a1;
      *(void *)(v488 + 64) = sub_100164458;
      *(void *)(v488 + 72) = v487;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v489 = sub_100183DC4();
      sub_10017E7BC(v489);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v488) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v487;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v483;
      uint64_t v59 = "Dispatch event that Weather data has failed to update. uuid=%{public}s";
      goto LABEL_111;
    case 0x1Fu:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v490 = static os_log_type_t.default.getter();
      uint64_t v491 = sub_10017A740();
      sub_1001D1C30(v491);
      uint64_t v492 = sub_10017A740();
      sub_1001637D8(v492);
      uint64_t v493 = sub_100162774();
      *(void *)(v493 + 16) = sub_1001648B8;
      *(void *)(v493 + 24) = &unk_100E8A000;
      uint64_t v494 = sub_100162774();
      *(void *)(v494 + 16) = sub_100164424;
      *(void *)(v494 + 24) = v493;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v495 = sub_100163ED0();
      *(_OWORD *)(v495 + 16) = xmmword_100C33BA0;
      *(void *)(v495 + 32) = sub_100162D68;
      *(void *)(v495 + 40) = v23;
      *(void *)(v495 + 48) = sub_100162D68;
      *(void *)(v495 + 56) = a1;
      *(void *)(v495 + 64) = sub_100164458;
      *(void *)(v495 + 72) = v494;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v496 = sub_100183DC4();
      sub_10017E7BC(v496);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v495) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v494;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v490;
      uint64_t v59 = "About to determine if available data sets should be updated. uuid=%{public}s";
      goto LABEL_111;
    case 0x20u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v497 = static os_log_type_t.default.getter();
      uint64_t v498 = sub_10017A740();
      sub_1001D1C30(v498);
      uint64_t v499 = sub_10017A740();
      sub_1001637D8(v499);
      uint64_t v500 = sub_100162774();
      *(void *)(v500 + 16) = sub_1001648B8;
      *(void *)(v500 + 24) = &unk_100E8A000;
      uint64_t v501 = sub_100162774();
      *(void *)(v501 + 16) = sub_100164424;
      *(void *)(v501 + 24) = v500;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v502 = sub_100163ED0();
      *(_OWORD *)(v502 + 16) = xmmword_100C33BA0;
      *(void *)(v502 + 32) = sub_100162D68;
      *(void *)(v502 + 40) = v23;
      *(void *)(v502 + 48) = sub_100162D68;
      *(void *)(v502 + 56) = a1;
      *(void *)(v502 + 64) = sub_100164458;
      *(void *)(v502 + 72) = v501;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v503 = sub_100183DC4();
      sub_10017E7BC(v503);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v502) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v501;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v497;
      uint64_t v59 = "Dispatch event that new data sets will be loaded. uuid=%{public}s";
      goto LABEL_111;
    case 0x21u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v133 = static os_log_type_t.default.getter();
      uint64_t v134 = sub_10017A740();
      sub_1001D1C30(v134);
      uint64_t v135 = sub_10017A740();
      sub_1001637D8(v135);
      uint64_t v136 = sub_100162774();
      *(void *)(v136 + 16) = sub_1001648B8;
      *(void *)(v136 + 24) = &unk_100E8A000;
      uint64_t v137 = sub_100162774();
      *(void *)(v137 + 16) = sub_100164424;
      *(void *)(v137 + 24) = v136;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v138 = sub_100163ED0();
      *(_OWORD *)(v138 + 16) = xmmword_100C33BA0;
      *(void *)(v138 + 32) = sub_100162D68;
      *(void *)(v138 + 40) = v23;
      *(void *)(v138 + 48) = sub_100162D68;
      *(void *)(v138 + 56) = a1;
      *(void *)(v138 + 64) = sub_100164458;
      *(void *)(v138 + 72) = v137;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8()) {
        goto LABEL_112;
      }
      sub_100164464();
      uint64_t v139 = sub_100183DC4();
      sub_10017E7BC(v139);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v138) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v137;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v133;
      uint64_t v59 = "Dispatch event that new data sets have failed to load. uuid=%{public}s";
      goto LABEL_111;
    case 0x22u:
      sub_100181640();
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.default.getter();
      uint64_t v61 = sub_10017A740();
      sub_1001D1C30(v61);
      uint64_t v62 = sub_10017A740();
      sub_1001637D8(v62);
      uint64_t v63 = sub_100162774();
      *(void *)(v63 + 16) = sub_1001648B8;
      *(void *)(v63 + 24) = &unk_100E8A000;
      uint64_t v64 = sub_100162774();
      *(void *)(v64 + 16) = sub_100164424;
      *(void *)(v64 + 24) = v63;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v65 = sub_100163ED0();
      *(_OWORD *)(v65 + 16) = xmmword_100C33BA0;
      *(void *)(v65 + 32) = sub_100162D68;
      *(void *)(v65 + 40) = v23;
      *(void *)(v65 + 48) = sub_100162D68;
      *(void *)(v65 + 56) = a1;
      *(void *)(v65 + 64) = sub_100164458;
      *(void *)(v65 + 72) = v64;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_100185BB8())
      {
LABEL_112:
        swift_release();
        swift_release();
LABEL_113:
        swift_release();
        goto LABEL_129;
      }
      sub_100164464();
      uint64_t v66 = sub_100183DC4();
      sub_10017E7BC(v66);
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v23;
      sub_1001A2384();
      if (v65) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = a1;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = v64;
      sub_10019EF9C();
      swift_release();
      os_log_type_t v58 = v60;
      uint64_t v59 = "Dispatch event that new data sets have finished loading. uuid=%{public}s";
LABEL_111:
      _os_log_impl((void *)&_mh_execute_header, v49, v58, v59, v20, 0xCu);
      swift_arrayDestroy();
      sub_100162EE0();
      goto LABEL_128;
    default:
      uint64_t v27 = *(void *)v26;
      uint64_t v28 = *((void *)v26 + 1);
      uint64_t v29 = v1;
      uint64_t v30 = sub_100162774();
      *(void *)(v30 + 16) = v27;
      *(void *)(v30 + 24) = v28;
      swift_retain();
      v578 = Logger.logObject.getter();
      LODWORD(v577) = static os_log_type_t.default.getter();
      uint64_t v31 = sub_10017A740();
      sub_10019DEF8((uint64_t)v31);
      v575 = (uint8_t *)sub_10017A740();
      sub_1001A478C((uint64_t)v575);
      uint64_t v32 = sub_100181E00();
      sub_100182B10(v32);
      uint64_t v33 = sub_100162774();
      *(void *)(v33 + 16) = sub_10017931C;
      *(void *)(v33 + 24) = v32;
      uint64_t v34 = sub_10017A740();
      sub_100162AE4(v34);
      uint64_t v35 = sub_10017A740();
      *(unsigned char *)(v35 + 16) = 8;
      uint64_t v36 = sub_100162774();
      *(void *)(v36 + 16) = sub_1006A852C;
      *(void *)(v36 + 24) = v30;
      uint64_t v37 = sub_100162774();
      *(void *)(v37 + 16) = sub_100164424;
      *(void *)(v37 + 24) = v36;
      uint64_t v38 = sub_10017A740();
      sub_10019FF3C(v38);
      uint64_t v39 = sub_10017A740();
      sub_1001A478C(v39);
      uint64_t v40 = sub_100162774();
      *(void *)(v40 + 16) = sub_1001648B8;
      *(void *)(v40 + 24) = v29;
      uint64_t v41 = sub_100162774();
      *(void *)(v41 + 16) = sub_100164424;
      *(void *)(v41 + 24) = v40;
      sub_10017DF08(&qword_100E8AC18);
      uint64_t v42 = sub_100163F4C();
      *(_OWORD *)(v42 + 16) = xmmword_100C367B0;
      *(void *)(v42 + 32) = sub_100162D68;
      *(void *)(v42 + 40) = v31;
      uint64_t v43 = (uint64_t)v575;
      *(void *)(v42 + 48) = sub_100162D68;
      *(void *)(v42 + 56) = v43;
      *(void *)(v42 + 64) = sub_100178DA4;
      *(void *)(v42 + 72) = v33;
      *(void *)(v42 + 80) = sub_100162D68;
      *(void *)(v42 + 88) = v34;
      *(void *)(v42 + 96) = sub_100162D68;
      *(void *)(v42 + 104) = v35;
      *(void *)(v42 + 112) = sub_100164458;
      *(void *)(v42 + 120) = v37;
      *(void *)(v42 + 128) = sub_100162D68;
      *(void *)(v42 + 136) = v38;
      *(void *)(v42 + 144) = sub_100162D68;
      *(void *)(v42 + 152) = v39;
      *(void *)(v42 + 160) = sub_100164458;
      *(void *)(v42 + 168) = v41;
      v576 = v31;
      uint64_t v44 = v43;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v45 = (uint8_t *)v34;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!sub_1001D15BC())
      {
LABEL_131:
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
LABEL_132:
        swift_release();

        return;
      }
      uint64_t v46 = (uint8_t *)v37;
      v574 = (uint8_t *)v41;
      uint64_t v47 = (uint8_t *)v44;
      uint64_t v48 = (uint8_t *)sub_100164464();
      v581 = (uint8_t *)sub_100189F84();
      uint64_t v582 = 0;
      v572 = v581;
      v573 = v48;
      *(_WORD *)uint64_t v48 = 771;
      v583 = v48 + 2;
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v576;
      sub_1001A2384();
      if (v42) {
        goto LABEL_137;
      }
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v47;
      sub_10019EF9C();
      swift_release();
      v579 = (uint64_t (*)())sub_100178DA4;
      uint64_t v580 = v33;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = (uint64_t)v45;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v35;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v46;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v38;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100162D68;
      uint64_t v580 = v39;
      sub_10019EF9C();
      swift_release();
      v579 = sub_100164458;
      uint64_t v580 = (uint64_t)v574;
      sub_10019EF9C();
      swift_release();
      sub_10018B0E4();
      uint64_t v49 = v578;
      _os_log_impl((void *)&_mh_execute_header, v578, v50, "Found no data or available data sets for location in app state because of previous error. We will update. error=%{private,mask.hash}s, uuid=%{public}s", v573, 0x20u);
      swift_arrayDestroy();
      sub_100162EE0();
      goto LABEL_128;
  }
}