uint64_t sub_100AB19F0(uint64_t a1, uint64_t a2)
{
  int *v4;
  char v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  BOOL v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  char v35;
  BOOL v36;
  char v37;
  BOOL v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  void v46[14];
  void v47[14];
  unsigned char v48[232];
  unsigned char v49[232];
  void __dst[14];
  void v51[15];

  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_32;
  }
  v4 = (int *)type metadata accessor for PreprocessedWeatherData();
  sub_100BDC6A0();
  if ((v5 & 1) == 0) {
    goto LABEL_32;
  }
  v6 = (void *)sub_10017E1E8(v4[6]);
  if ((sub_10088060C(v6, v7) & 1) == 0) {
    goto LABEL_32;
  }
  v8 = sub_10017E1E8(v4[7]);
  if (!sub_100489A5C(v8, v9)) {
    goto LABEL_32;
  }
  v10 = (void *)sub_10017E1E8(v4[8]);
  if (!sub_1006DAC0C(v10, v11)) {
    goto LABEL_32;
  }
  memcpy(__dst, (const void *)(a1 + v4[9]), sizeof(__dst));
  memcpy(v51, (const void *)(a2 + v4[9]), 0x70uLL);
  if ((sub_1004B53F0(__dst, v51) & 1) == 0) {
    goto LABEL_32;
  }
  v12 = v4[10];
  v13 = a1 + v12;
  v14 = a2 + v12;
  if ((static WeatherDescription.== infix(_:_:)() & 1) == 0) {
    goto LABEL_32;
  }
  v15 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  v16 = *(void *)(v13 + v15);
  v17 = *(void *)(v13 + v15 + 8);
  v18 = (void *)(v14 + v15);
  v19 = v16 == *v18 && v17 == v18[1];
  if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(), v20 = sub_1001190E0(), (v21 & 1) != 0))
  {
    v22 = v4[11];
    v23 = *(void *)(a1 + v22);
    v24 = *(void *)(a1 + v22 + 8);
    v26 = *(void *)(a1 + v22 + 16);
    v25 = *(void *)(a1 + v22 + 24);
    v27 = *(void *)(a1 + v22 + 32);
    v28 = *(void *)(a1 + v22 + 40);
    v29 = (void *)(a2 + v22);
    v30 = v29[2];
    v31 = v29[3];
    v32 = v29[4];
    v33 = v29[5];
    v34 = v23 == *v29 && v24 == v29[1];
    if (v34
      || (v45 = v29[5], _stringCompareWithSmolCheck(_:_:expecting:)(), v33 = v45, v20 = sub_1001190E0(), (v35 & 1) != 0))
    {
      v36 = v26 == v30 && v25 == v31;
      if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(), v20 = sub_1001190E0(), (v37 & 1) != 0))
      {
        v38 = v27 == v32 && v28 == v33;
        if (v38 || (_stringCompareWithSmolCheck(_:_:expecting:)(), v20 = sub_1001190E0(), (v39 & 1) != 0))
        {
          v40 = sub_10017E1E8(v4[12]);
          if (sub_10040905C(v40, v41))
          {
            memcpy(v48, (const void *)(a1 + v4[13]), sizeof(v48));
            memcpy(v49, (const void *)(a2 + v4[13]), sizeof(v49));
            if (sub_100A3DD38((uint64_t)v48, (uint64_t)v49))
            {
              v42 = sub_10017E1E8(v4[14]);
              if (sub_10065A3FC(v42, v43))
              {
                memcpy(v46, (const void *)(a1 + v4[15]), sizeof(v46));
                memcpy(v47, (const void *)(a2 + v4[15]), sizeof(v47));
                v20 = sub_1006511E0(v46, v47);
                return v20 & 1;
              }
            }
          }
LABEL_32:
          v20 = 0;
        }
      }
    }
  }
  return v20 & 1;
}

uint64_t sub_100AB1C78()
{
  return sub_100AB0748(*v0);
}

uint64_t sub_100AB1C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB024C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AB1CA8(uint64_t a1)
{
  unint64_t v2 = sub_100AB1D54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AB1CE4(uint64_t a1)
{
  unint64_t v2 = sub_100AB1D54();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AB1D20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100AB0E18(a1, a2);
}

uint64_t sub_100AB1D38(void *a1)
{
  return sub_100AB08E0(a1);
}

unint64_t sub_100AB1D54()
{
  unint64_t result = qword_100EAE868;
  if (!qword_100EAE868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE868);
  }
  return result;
}

unint64_t sub_100AB1DA0()
{
  unint64_t result = qword_100EAE880;
  if (!qword_100EAE880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE880);
  }
  return result;
}

unint64_t sub_100AB1DEC()
{
  unint64_t result = qword_100EAE888;
  if (!qword_100EAE888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE888);
  }
  return result;
}

uint64_t sub_100AB1E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreprocessedWeatherData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AB1E9C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_100AB1EF0()
{
  unint64_t result = qword_100EAE8A8;
  if (!qword_100EAE8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE8A8);
  }
  return result;
}

uint64_t sub_100AB1F3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100AB1F84()
{
  unint64_t result = qword_100EAE8B0;
  if (!qword_100EAE8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE8B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PreprocessedWeatherData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB209CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PreprocessedWeatherData.CodingKeys()
{
  return &type metadata for PreprocessedWeatherData.CodingKeys;
}

unint64_t sub_100AB20D8()
{
  unint64_t result = qword_100EAE8B8;
  if (!qword_100EAE8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE8B8);
  }
  return result;
}

unint64_t sub_100AB2128()
{
  unint64_t result = qword_100EAE8C0;
  if (!qword_100EAE8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE8C0);
  }
  return result;
}

unint64_t sub_100AB2178()
{
  unint64_t result = qword_100EAE8C8;
  if (!qword_100EAE8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE8C8);
  }
  return result;
}

uint64_t sub_100AB21C4@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C33BA0;
  *(void *)(inited + 32) = 1684957547;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(unsigned char *)(inited + 48) = *v1;
  *(void *)(inited + 72) = &type metadata for DetailKind;
  *(void *)(inited + 80) = 0x4F79616C70736964;
  *(void *)(inited + 88) = 0xE90000000000006ELL;
  *(unsigned char *)(inited + 96) = v1[1];
  *(void *)(inited + 120) = &type metadata for DisplayLocation;
  *(void *)(inited + 128) = 1702125924;
  *(void *)(inited + 136) = 0xE400000000000000;
  uint64_t v4 = (uint64_t)&v1[*(int *)(type metadata accessor for OpenL2Descriptor(0) + 36)];
  *(void *)(inited + 168) = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_10023C310((uint64_t *)(inited + 144));
  sub_1001262FC(v4, (uint64_t)v5, (uint64_t *)&unk_100E73CA0);
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E70748);
  a1[4] = sub_100AB52A0();
  sub_10023C310(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100AB2334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100E63850);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011BFD8();
  uint64_t v7 = sub_10017DF08(&qword_100E885C0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for LocationComponentAction(0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  v15 = (unsigned char *)(v14 - v13);
  uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_10017DF08(&qword_100E66680);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = type metadata accessor for OpenL2Descriptor(0);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_1001626E0();
  v30 = (unsigned char *)(v29 - v28);
  sub_1001262FC(a1, v25, &qword_100E66680);
  if (_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26) != 1)
  {
    uint64_t v57 = v3;
    sub_100AB51F0(v25, (uint64_t)v30, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    uint64_t v58 = (uint64_t)&v30[*(int *)(v26 + 36)];
    sub_1001262FC(v58, v20, (uint64_t *)&unk_100E73CA0);
    uint64_t v34 = type metadata accessor for Date();
    char v35 = _s7Weather24LocationCompositionStateOwet_0(v20, 1, v34);
    sub_100178160(v20, (uint64_t *)&unk_100E73CA0);
    v36 = v15;
    uint64_t v37 = (uint64_t)v30;
    switch(*v30)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 0xA:
      case 0xB:
      case 0xC:
        sub_10017AF58();
        uint64_t v38 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
        type metadata accessor for TemperatureChartKind();
        sub_100162E4C();
        uint64_t v39 = sub_100184274();
        v40(v39);
        goto LABEL_6;
      case 5:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
        sub_10017AF58();
        uint64_t v38 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
LABEL_6:
        type metadata accessor for DetailCondition();
        sub_100162E4C();
        uint64_t v41 = sub_100184274();
        v42(v41);
        v36[v38] = v35;
        goto LABEL_7;
      case 6:
      case 9:
      case 0x10:
        goto LABEL_7;
      default:
        sub_1001262FC(a2, v57, &qword_100E63850);
        type metadata accessor for WeatherData(0);
        sub_100162F8C(v57);
        if (v55)
        {
          sub_100178160(v57, &qword_100E63850);
          uint64_t v48 = type metadata accessor for AirQuality();
          _s7Weather24LocationCompositionStateOwst_0(v11, 1, 1, v48);
LABEL_14:
          sub_100178160(v11, &qword_100E885C0);
          sub_100AB5250((uint64_t)v30, (void (*)(void))type metadata accessor for OpenL2Descriptor);
          uint64_t v31 = type metadata accessor for LocationViewAction();
          uint64_t v32 = a3;
          goto LABEL_3;
        }
        WeatherDataModel.airQuality.getter();
        sub_100AB5250(v57, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v49 = type metadata accessor for AirQuality();
        int v50 = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v49);
        if (v50 == 1) {
          goto LABEL_14;
        }
        sub_100178160(v11, &qword_100E885C0);
        uint64_t v51 = swift_bridgeObjectRetain();
        uint64_t v52 = sub_100A03844(v51);
        uint64_t v54 = v53;
        swift_bridgeObjectRelease();
        if (!v54) {
          goto LABEL_21;
        }
        BOOL v55 = v52 == 0x736C6961746564 && v54 == 0xE700000000000000;
        if (v55)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v56 & 1) == 0)
          {
LABEL_21:
            unsigned char *v36 = 0;
LABEL_7:
            swift_storeEnumTagMultiPayload();
            uint64_t v43 = sub_10017DF08(&qword_100E66458);
            uint64_t v44 = a3 + *(int *)(v43 + 48);
            uint64_t v45 = a3 + *(int *)(v43 + 64);
            sub_100AB51F0((uint64_t)v36, a3, (void (*)(void))type metadata accessor for LocationComponentAction);
            *(_OWORD *)uint64_t v44 = 0u;
            *(_OWORD *)(v44 + 16) = 0u;
            *(unsigned char *)(v44 + 32) = 1;
            sub_1001262FC(v58, v45, (uint64_t *)&unk_100E73CA0);
            sub_100AB5250(v37, (void (*)(void))type metadata accessor for OpenL2Descriptor);
            uint64_t v46 = type metadata accessor for LocationViewAction();
            swift_storeEnumTagMultiPayload();
            uint64_t v32 = a3;
            uint64_t v33 = 0;
            uint64_t v31 = v46;
            return _s7Weather24LocationCompositionStateOwst_0(v32, v33, 1, v31);
          }
        }
        unsigned char *v36 = 1;
        goto LABEL_7;
    }
  }
  sub_100178160(v25, &qword_100E66680);
  uint64_t v31 = type metadata accessor for LocationViewAction();
  uint64_t v32 = a3;
LABEL_3:
  uint64_t v33 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v32, v33, 1, v31);
}

uint64_t sub_100AB29EC(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08C70, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100AB2A40()
{
  return 0x6E6F697461636F6CLL;
}

BOOL sub_100AB2A7C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08CC0, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t sub_100AB2AC4(char *a1, char *a2)
{
  return sub_10088B288(*a1, *a2);
}

Swift::Int sub_100AB2AD0()
{
  return sub_100652770();
}

uint64_t sub_100AB2AD8()
{
  return sub_1002C2E50();
}

Swift::Int sub_100AB2AE0()
{
  return sub_1002C43B4();
}

uint64_t sub_100AB2AE8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100AB29EC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100AB2B18@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100AB2A40();
  *a1 = 0x6E6F697461636F6CLL;
  a1[1] = v3;
  return result;
}

BOOL sub_100AB2B60@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_100AB2A7C(*a1);
  *a2 = result;
  return result;
}

void sub_100AB2B98(void *a1@<X8>)
{
  *a1 = 0x6E6F697469736F70;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_100AB2BB8()
{
  sub_100AB52F4(&qword_100EAEB78, (void (*)(uint64_t))type metadata accessor for OpenL2Descriptor);

  return ShortDescribable.description.getter();
}

BOOL sub_100AB2C24(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v72 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v71 = v7;
  uint64_t v74 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v76 = v9;
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  uint64_t v73 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v80 = (char *)&v70 - v14;
  __chkstk_darwin(v15);
  uint64_t v75 = (uint64_t)&v70 - v16;
  uint64_t v17 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v81 = v18;
  __chkstk_darwin(v19);
  sub_10011BFD8();
  uint64_t v20 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v70 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v70 - v33;
  uint64_t v78 = a1;
  sub_1001262FC(a1, (uint64_t)&v70 - v33, &qword_100E6DC08);
  uint64_t v79 = a2;
  sub_1001262FC(a2, (uint64_t)v31, &qword_100E6DC08);
  uint64_t v35 = v24 + *(int *)(v21 + 56);
  sub_1001262FC((uint64_t)v34, v24, &qword_100E6DC08);
  sub_1001262FC((uint64_t)v31, v35, &qword_100E6DC08);
  sub_100162F8C(v24);
  if (v37)
  {
    sub_100178160((uint64_t)v31, &qword_100E6DC08);
    sub_100178160((uint64_t)v34, &qword_100E6DC08);
    sub_100162F8C(v35);
    if (v37)
    {
      sub_100178160(v24, &qword_100E6DC08);
      goto LABEL_14;
    }
LABEL_9:
    uint64_t v38 = &qword_100E6DD18;
    uint64_t v39 = v24;
LABEL_10:
    sub_100178160(v39, v38);
    return 0;
  }
  uint64_t v36 = v81;
  sub_1001262FC(v24, (uint64_t)v28, &qword_100E6DC08);
  sub_100162F8C(v35);
  if (v37)
  {
    sub_100178160((uint64_t)v31, &qword_100E6DC08);
    sub_100178160((uint64_t)v34, &qword_100E6DC08);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v28, v17);
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v2, v35, v17);
  sub_100AB52F4((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  v42 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v42(v2, v17);
  sub_100178160((uint64_t)v31, &qword_100E6DC08);
  sub_100178160((uint64_t)v34, &qword_100E6DC08);
  v42((uint64_t)v28, v17);
  sub_100178160(v24, &qword_100E6DC08);
  if ((v41 & 1) == 0) {
    return 0;
  }
LABEL_14:
  uint64_t v43 = (int *)type metadata accessor for OpenL2Action.PublishedValue(0);
  uint64_t v44 = v43[5];
  uint64_t v45 = v78;
  uint64_t v46 = v79;
  v47 = (void *)(v78 + v44);
  uint64_t v48 = *(void *)(v78 + v44 + 8);
  uint64_t v49 = (void *)(v79 + v44);
  uint64_t v50 = v49[1];
  if (v48)
  {
    uint64_t v51 = (uint64_t)v80;
    if (!v50) {
      return 0;
    }
    if (*v47 != *v49 || v48 != v50)
    {
      char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
      BOOL result = 0;
      if ((v53 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    uint64_t v51 = (uint64_t)v80;
    if (v50) {
      return 0;
    }
  }
  uint64_t v54 = v43[6];
  int v55 = *(unsigned __int8 *)(v45 + v54);
  int v56 = *(unsigned __int8 *)(v46 + v54);
  if (v55 == 2)
  {
    if (v56 != 2) {
      return 0;
    }
  }
  else if (v56 == 2 || (sub_10088B288(v55 & 1, v56 & 1) & 1) == 0)
  {
    return 0;
  }
  uint64_t v57 = v43[7];
  int v58 = *(unsigned __int8 *)(v45 + v57);
  int v59 = *(unsigned __int8 *)(v46 + v57);
  if (v58 == 2)
  {
    if (v59 != 2) {
      return 0;
    }
    goto LABEL_33;
  }
  BOOL result = 0;
  BOOL v60 = (v58 & 1) == 0;
  if (v59 != 2 && ((v60 ^ v59) & 1) != 0)
  {
LABEL_33:
    uint64_t v61 = v75;
    sub_1001262FC(v45 + v43[8], v75, (uint64_t *)&unk_100E73CA0);
    sub_1001262FC(v46 + v43[8], v51, (uint64_t *)&unk_100E73CA0);
    uint64_t v62 = v76;
    uint64_t v63 = v76 + *(int *)(v74 + 48);
    sub_1001262FC(v61, v76, (uint64_t *)&unk_100E73CA0);
    sub_1001262FC(v51, v63, (uint64_t *)&unk_100E73CA0);
    uint64_t v64 = v77;
    if (_s7Weather24LocationCompositionStateOwet_0(v62, 1, v77) == 1)
    {
      sub_100178160(v51, (uint64_t *)&unk_100E73CA0);
      sub_100178160(v61, (uint64_t *)&unk_100E73CA0);
      if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v64) == 1)
      {
        sub_100178160(v62, (uint64_t *)&unk_100E73CA0);
        return 1;
      }
    }
    else
    {
      uint64_t v65 = v73;
      sub_1001262FC(v62, v73, (uint64_t *)&unk_100E73CA0);
      if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v64) != 1)
      {
        uint64_t v67 = v71;
        uint64_t v66 = v72;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v71, v63, v64);
        sub_100AB52F4((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
        char v68 = dispatch thunk of static Equatable.== infix(_:_:)();
        v69 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
        v69(v67, v64);
        sub_100178160(v51, (uint64_t *)&unk_100E73CA0);
        sub_100178160(v61, (uint64_t *)&unk_100E73CA0);
        v69(v65, v64);
        sub_100178160(v62, (uint64_t *)&unk_100E73CA0);
        return (v68 & 1) != 0;
      }
      sub_100178160(v51, (uint64_t *)&unk_100E73CA0);
      sub_100178160(v61, (uint64_t *)&unk_100E73CA0);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v65, v64);
    }
    uint64_t v38 = &qword_100E64D60;
    uint64_t v39 = v62;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100AB335C()
{
  sub_10017DF08(&qword_100EAEB80);
  sub_100162E4C();
  uint64_t v0 = sub_100162728();
  v1(v0);

  return swift_deallocClassInstance();
}

uint64_t sub_100AB33F0()
{
  return type metadata accessor for OpenL2Action(0);
}

uint64_t type metadata accessor for OpenL2Action(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EAE900);
}

void sub_100AB3418()
{
  sub_100214410(319, (unint64_t *)&unk_100EAE910, type metadata accessor for OpenL2Action.PublishedValue, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for OpenL2Action.PublishedValue(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAEA80);
}

uint64_t type metadata accessor for OpenL2ActionHandler()
{
  return self;
}

uint64_t *sub_100AB351C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E6DC08);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[5];
    uint64_t v11 = a3[6];
    uint64_t v12 = (uint64_t *)((char *)a1 + v10);
    uint64_t v13 = (uint64_t *)((char *)a2 + v10);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
    uint64_t v15 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
  }
  return a1;
}

uint64_t sub_100AB3710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v8(v5, v6);
  }
  return result;
}

char *sub_100AB3810(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  a1[v9] = a2[v9];
  uint64_t v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  return a1;
}

char *sub_100AB39B4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for Date();
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  return a1;
}

char *sub_100AB3C70(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  a1[v8] = a2[v8];
  uint64_t v9 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  return a1;
}

char *sub_100AB3DFC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[8];
  int v18 = &a1[v17];
  int v19 = &a2[v17];
  uint64_t v20 = type metadata accessor for Date();
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20);
  if (!v21)
  {
    uint64_t v23 = *(void *)(v20 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v24 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  return a1;
}

uint64_t sub_100AB40A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AB40B8);
}

uint64_t sub_100AB40B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E6DC08);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
LABEL_10:
    return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
  }
  if (v3 != 2147483646)
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v9 = v4 + *(int *)(a3 + 32);
    goto LABEL_10;
  }
  unint64_t v10 = *(void *)(v4 + *(int *)(a3 + 20) + 8);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  int v11 = v10 - 1;
  if (v11 < 0) {
    int v11 = -1;
  }
  return (v11 + 1);
}

uint64_t sub_100AB417C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AB4190);
}

void sub_100AB4190(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E6DC08);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(void *)(v5 + *(int *)(a4 + 20) + 8) = v4;
      return;
    }
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v11 = v5 + *(int *)(a4 + 32);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

void sub_100AB4244()
{
  sub_100214410(319, (unint64_t *)&qword_100E6EAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_100214410(319, (unint64_t *)&qword_100E638F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_100AB4380(unsigned char *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    a1[1] = *((unsigned char *)a2 + 1);
    uint64_t v7 = a3[6];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Location();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E639E8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (char *)v4 + v13;
    uint64_t v16 = (uint64_t)a2 + v13;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    v15[16] = *(unsigned char *)(v16 + 16);
    uint64_t v17 = (void *)((char *)v4 + v14);
    int v18 = (uint64_t *)((char *)a2 + v14);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[9];
    int v21 = (char *)v4 + v20;
    int v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    *(void *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100AB45B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Location();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }

  return swift_bridgeObjectRelease();
}

unsigned char *sub_100AB46B4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E639E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  uint64_t v15 = &a1[v12];
  uint64_t v16 = &a2[v12];
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[9];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_100AB4894(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E639E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  long long v17 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_OWORD *)uint64_t v15 = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for Date();
  int v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v24);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24);
  if (!v25)
  {
    uint64_t v27 = *(void *)(v24 - 8);
    if (!v26)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 24))(v22, v23, v24);
      goto LABEL_13;
    }
    (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v28 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
LABEL_13:
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_100AB4B94(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E639E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  long long v15 = *(_OWORD *)&a2[v12];
  v13[16] = v14[16];
  *(_OWORD *)&a1[v12] = v15;
  uint64_t v16 = a3[9];
  long long v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
  }
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  return a1;
}

unsigned char *sub_100AB4D58(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E639E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v14];
  long long v17 = &a2[v14];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  uint64_t v18 = &a1[v15];
  uint64_t v19 = (uint64_t *)&a2[v15];
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for Date();
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v25);
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25);
  if (!v26)
  {
    uint64_t v28 = *(void *)(v25 - 8);
    if (!v27)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 40))(v23, v24, v25);
      goto LABEL_13;
    }
    (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    uint64_t v29 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
LABEL_13:
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100AB503C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E639E8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[6];
LABEL_5:
    return _s7Weather24LocationCompositionStateOwet_0(v4 + v9, v3, v8);
  }
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == v3)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a3[9];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(v4 + a3[10]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

void sub_100AB50F4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E639E8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[6];
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100E73CA0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(v5 + a4[10]) = (v4 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a4[9];
  }

  _s7Weather24LocationCompositionStateOwst_0(v5 + v11, v4, v4, v10);
}

uint64_t sub_100AB51A8()
{
  return sub_100AB52F4(&qword_100EAEB70, (void (*)(uint64_t))type metadata accessor for OpenL2Descriptor);
}

uint64_t sub_100AB51F0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100AB5250(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

unint64_t sub_100AB52A0()
{
  unint64_t result = qword_100E70758;
  if (!qword_100E70758)
  {
    sub_10018C6DC(&qword_100E70748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70758);
  }
  return result;
}

uint64_t sub_100AB52F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OpenL2DescriptorParamKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100AB53D8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenL2DescriptorParamKeys()
{
  return &type metadata for OpenL2DescriptorParamKeys;
}

unsigned char *storeEnumTagSinglePayload for DisplayLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB54DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayLocation()
{
  return &type metadata for DisplayLocation;
}

unint64_t sub_100AB5518()
{
  unint64_t result = qword_100EAEB88;
  if (!qword_100EAEB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAEB88);
  }
  return result;
}

unint64_t sub_100AB5568()
{
  unint64_t result = qword_100EAEB90;
  if (!qword_100EAEB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAEB90);
  }
  return result;
}

double sub_100AB55B4()
{
  uint64_t v1 = *v0;
  if (*v0 == 1)
  {
    uint64_t *v0 = 0;
    v0[1] = 0;
    v0[2] = 0x4010000000000000;
    double v2 = 4.0;
  }
  else
  {
    double v2 = *((double *)v0 + 2);
  }
  sub_100AB5978(v1);
  return v2;
}

uint64_t sub_100AB5628()
{
  if (*v0)
  {
    uint64_t v1 = *v0;
  }
  else
  {
    uint64_t v1 = sub_100AB56B8();
    uint64_t *v0 = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100AB5670()
{
  if (*(void *)(v0 + 8))
  {
    uint64_t v1 = *(void *)(v0 + 8);
  }
  else
  {
    uint64_t v1 = static Color.primary.getter();
    *(void *)(v0 + 8) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100AB56B8()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.largeTitle(_:), v7);
  uint64_t v11 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v11);
  static Font.system(_:design:weight:)();
  sub_100AB5918((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  static Font.Weight.bold.getter();
  uint64_t v12 = Font.weight(_:)();
  swift_release();
  return v12;
}

uint64_t sub_100AB5918(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63F80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100AB5978(uint64_t result)
{
  if (result != 1)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100AB59C0()
{
  uint64_t v1 = v0 + qword_100EAEBB0;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100AB5A24()
{
  sub_100AB59C0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NoAqiNhpNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_100AB5A94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100AB5AD8@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &unk_100E72018;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &unk_100E723E8;
      goto LABEL_11;
    }
    uint64_t v21 = &unk_100E72200;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &unk_100E71C48;
  }
  else {
    uint64_t v21 = &unk_100E71E30;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  char v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100AB5FA4@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v17);
  v104(v17, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v17);
  v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_newsArticle, (uint64_t)v17);
  v104(v17, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  v100 = (void (*)(uint64_t, uint64_t))v45;
  v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 20), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[4], a3[5], a3[6], a3[7]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  v69 = v90;
  v65((uint64_t)v90, v101, a4);
  v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_100AB6A10@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[25], a3[26], a3[27], a3[28]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = *a3;
  uint64_t v65 = a3[1];
  uint64_t v66 = a3[2];
  uint64_t v67 = a3[3];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100AB7458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100AB5AD8(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100AB7484()
{
  return sub_100AB74B4((uint64_t (*)(void, void, void, void, void, void, void))sub_100AB5FA4);
}

uint64_t sub_100AB749C()
{
  return sub_100AB74B4((uint64_t (*)(void, void, void, void, void, void, void))sub_100AB6A10);
}

uint64_t sub_100AB74B4(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t *sub_100AB74E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      a1[2] = a2[2];
      uint64_t v10 = v7[6];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      uint64_t v15 = v7[7];
      uint64_t v16 = (uint64_t *)((char *)a1 + v15);
      uint64_t v17 = (uint64_t *)((char *)a2 + v15);
      uint64_t v18 = (int *)type metadata accessor for DetailChartSelection();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, (uint64_t)v18))
      {
        uint64_t v19 = sub_10017DF08(&qword_100E711F8);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = v17[1];
        *uint64_t v16 = *v17;
        v16[1] = v20;
        uint64_t v21 = v18[5];
        uint64_t v22 = (char *)v16 + v21;
        uint64_t v44 = (char *)v17 + v21;
        swift_bridgeObjectRetain();
        v14(v22, v44, v13);
        v14((char *)v16 + v18[6], (char *)v17 + v18[6], v13);
        v14((char *)v16 + v18[7], (char *)v17 + v18[7], v13);
        *(void *)((char *)v16 + v18[8]) = *(void *)((char *)v17 + v18[8]);
        uint64_t v23 = v18[9];
        uint64_t v24 = (char *)v16 + v23;
        uint64_t v25 = (char *)v17 + v23;
        v24[8] = v25[8];
        *(void *)uint64_t v24 = *(void *)v25;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
      }
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      uint64_t v26 = v7[9];
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = type metadata accessor for DetailCondition();
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v27, v28, v29);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      uint64_t v31 = v7[11];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = *((void *)v33 + 1);
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = v34;
      *((void *)v32 + 2) = *((void *)v33 + 2);
      v32[24] = v33[24];
      uint64_t v35 = v7[12];
      uint64_t v45 = (char *)a1 + v35;
      uint64_t v36 = (char *)a2 + v35;
      uint64_t v37 = type metadata accessor for Location();
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v45, v36, v37);
      uint64_t v39 = v7[13];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      uint64_t v42 = type metadata accessor for LocationDetailEntity();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for ConditionDetailViewModel.Model(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAED90);
}

uint64_t sub_100AB78A0(uint64_t a1)
{
  int v2 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[6];
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v6(v4, v5);
    uint64_t v7 = a1 + v2[7];
    uint64_t v8 = (int *)type metadata accessor for DetailChartSelection();
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, (uint64_t)v8))
    {
      swift_bridgeObjectRelease();
      v6(v7 + v8[5], v5);
      v6(v7 + v8[6], v5);
      v6(v7 + v8[7], v5);
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = a1 + v2[9];
    uint64_t v10 = type metadata accessor for DetailCondition();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = a1 + v2[12];
    uint64_t v12 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    uint64_t v13 = a1 + v2[13];
    uint64_t v14 = type metadata accessor for LocationDetailEntity();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  return result;
}

void *sub_100AB7AD8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = v6[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = v6[7];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = (int *)type metadata accessor for DetailChartSelection();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v16))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E711F8);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v18;
      uint64_t v19 = v16[5];
      uint64_t v20 = (char *)v14 + v19;
      uint64_t v42 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v12(v20, v42, v11);
      v12((char *)v14 + v16[6], (char *)v15 + v16[6], v11);
      v12((char *)v14 + v16[7], (char *)v15 + v16[7], v11);
      *(void *)((char *)v14 + v16[8]) = *(void *)((char *)v15 + v16[8]);
      uint64_t v21 = v16[9];
      uint64_t v22 = (char *)v14 + v21;
      uint64_t v23 = (char *)v15 + v21;
      v22[8] = v23[8];
      *(void *)uint64_t v22 = *(void *)v23;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v16);
    }
    *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
    uint64_t v24 = v6[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = type metadata accessor for DetailCondition();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
    uint64_t v29 = v6[11];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    *((void *)v30 + 2) = *((void *)v31 + 2);
    v30[24] = v31[24];
    uint64_t v33 = v6[12];
    uint64_t v43 = (char *)a1 + v33;
    uint64_t v34 = (char *)a2 + v33;
    uint64_t v35 = type metadata accessor for Location();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v43, v34, v35);
    uint64_t v37 = v6[13];
    uint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = type metadata accessor for LocationDetailEntity();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

void *sub_100AB7E34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_100AB85C8((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
      goto LABEL_7;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = v6[6];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for Date();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = *(void (**)(char *, char *))(v23 + 24);
    uint64_t v82 = v22;
    v24(v20, v21);
    uint64_t v25 = v6[7];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = (int *)type metadata accessor for DetailChartSelection();
    int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v28);
    int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28);
    if (v29)
    {
      if (!v30)
      {
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = *((void *)v27 + 1);
        uint64_t v31 = v28[5];
        uint64_t v32 = &v26[v31];
        uint64_t v33 = &v27[v31];
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
        swift_bridgeObjectRetain();
        v34(v32, v33, v82);
        v34(&v26[v28[6]], &v27[v28[6]], v82);
        v34(&v26[v28[7]], &v27[v28[7]], v82);
        *(void *)&v26[v28[8]] = *(void *)&v27[v28[8]];
        uint64_t v35 = v28[9];
        uint64_t v36 = &v26[v35];
        uint64_t v37 = &v27[v35];
        char v38 = v37[8];
        *(void *)uint64_t v36 = *(void *)v37;
        v36[8] = v38;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
LABEL_16:
        *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v62 = v6[9];
        uint64_t v63 = (char *)a1 + v62;
        uint64_t v64 = (char *)a2 + v62;
        uint64_t v65 = type metadata accessor for DetailCondition();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
        *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v66 = v6[11];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        *(void *)((char *)a1 + v66) = *(void *)((char *)a2 + v66);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v67 + 1) = *((void *)v68 + 1);
        *((void *)v67 + 2) = *((void *)v68 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v67[24] = v68[24];
        uint64_t v69 = v6[12];
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        uint64_t v72 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 24))(v70, v71, v72);
        uint64_t v73 = v6[13];
        uint64_t v74 = (char *)a1 + v73;
        uint64_t v75 = (char *)a2 + v73;
        uint64_t v76 = type metadata accessor for LocationDetailEntity();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 24))(v74, v75, v76);
        return a1;
      }
    }
    else
    {
      if (!v30)
      {
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = *((void *)v27 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        ((void (*)(char *, char *, uint64_t))v24)(&v26[v28[5]], &v27[v28[5]], v82);
        ((void (*)(char *, char *, uint64_t))v24)(&v26[v28[6]], &v27[v28[6]], v82);
        ((void (*)(char *, char *, uint64_t))v24)(&v26[v28[7]], &v27[v28[7]], v82);
        *(void *)&v26[v28[8]] = *(void *)&v27[v28[8]];
        uint64_t v78 = v28[9];
        uint64_t v79 = &v26[v78];
        uint64_t v80 = &v27[v78];
        char v81 = v80[8];
        *(void *)uint64_t v79 = *(void *)v80;
        v79[8] = v81;
        goto LABEL_16;
      }
      sub_100AB85C8((uint64_t)v26, (void (*)(void))type metadata accessor for DetailChartSelection);
    }
    uint64_t v61 = sub_10017DF08(&qword_100E711F8);
    memcpy(v26, v27, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v9 = v6[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = v6[7];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E711F8);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    void *v15 = *v16;
    v15[1] = v16[1];
    uint64_t v39 = v17[5];
    uint64_t v40 = (char *)v15 + v39;
    uint64_t v83 = (char *)v16 + v39;
    swift_bridgeObjectRetain();
    v13(v40, v83, v12);
    v13((char *)v15 + v17[6], (char *)v16 + v17[6], v12);
    v13((char *)v15 + v17[7], (char *)v16 + v17[7], v12);
    *(void *)((char *)v15 + v17[8]) = *(void *)((char *)v16 + v17[8]);
    uint64_t v41 = v17[9];
    uint64_t v42 = (char *)v15 + v41;
    uint64_t v43 = (char *)v16 + v41;
    char v44 = v43[8];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v44;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  uint64_t v45 = v6[9];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = type metadata accessor for DetailCondition();
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
  swift_bridgeObjectRetain();
  v49(v46, v47, v48);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  uint64_t v50 = v6[11];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  *(void *)uint64_t v51 = *(void *)v52;
  *((void *)v51 + 1) = *((void *)v52 + 1);
  *((void *)v51 + 2) = *((void *)v52 + 2);
  v51[24] = v52[24];
  uint64_t v53 = v6[12];
  uint64_t v84 = (char *)a1 + v53;
  uint64_t v54 = (char *)a2 + v53;
  uint64_t v55 = type metadata accessor for Location();
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v56(v84, v54, v55);
  uint64_t v57 = v6[13];
  uint64_t v58 = (char *)a1 + v57;
  uint64_t v59 = (char *)a2 + v57;
  uint64_t v60 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_100AB85C8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void *sub_100AB8620(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v7 = v6[6];
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    uint64_t v12 = v6[7];
    uint64_t v13 = (_OWORD *)((char *)a1 + v12);
    uint64_t v14 = (_OWORD *)((char *)a2 + v12);
    uint64_t v15 = (int *)type metadata accessor for DetailChartSelection();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E711F8);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      *uint64_t v13 = *v14;
      v11((char *)v13 + v15[5], (char *)v14 + v15[5], v10);
      v11((char *)v13 + v15[6], (char *)v14 + v15[6], v10);
      v11((char *)v13 + v15[7], (char *)v14 + v15[7], v10);
      *(void *)((char *)v13 + v15[8]) = *(void *)((char *)v14 + v15[8]);
      uint64_t v17 = v15[9];
      uint64_t v18 = (char *)v13 + v17;
      uint64_t v19 = (char *)v14 + v17;
      v18[8] = v19[8];
      *(void *)uint64_t v18 = *(void *)v19;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
    }
    *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
    uint64_t v20 = v6[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for DetailCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
    uint64_t v24 = v6[11];
    uint64_t v25 = (_OWORD *)((char *)a1 + v24);
    uint64_t v26 = (_OWORD *)((char *)a2 + v24);
    *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v26 + 9);
    *uint64_t v25 = *v26;
    uint64_t v27 = v6[12];
    uint64_t v28 = (char *)a1 + v27;
    int v29 = (char *)a2 + v27;
    uint64_t v30 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    uint64_t v31 = v6[13];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = type metadata accessor for LocationDetailEntity();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

void *sub_100AB8920(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_100AB85C8((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
      goto LABEL_7;
    }
    uint64_t v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    swift_bridgeObjectRelease();
    uint64_t v20 = v6[6];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for Date();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(void (**)(char *, char *))(v24 + 40);
    uint64_t v76 = v23;
    v25(v21, v22);
    uint64_t v26 = v6[7];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    int v29 = (int *)type metadata accessor for DetailChartSelection();
    int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v29);
    int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29);
    if (v30)
    {
      if (!v31)
      {
        *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
        v32(&v27[v29[5]], &v28[v29[5]], v76);
        v32(&v27[v29[6]], &v28[v29[6]], v76);
        v32(&v27[v29[7]], &v28[v29[7]], v76);
        *(void *)&v27[v29[8]] = *(void *)&v28[v29[8]];
        uint64_t v33 = v29[9];
        uint64_t v34 = &v27[v33];
        uint64_t v35 = &v28[v33];
        v34[8] = v35[8];
        *(void *)uint64_t v34 = *(void *)v35;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
LABEL_16:
        *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
        swift_bridgeObjectRelease();
        uint64_t v55 = v6[9];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        uint64_t v58 = type metadata accessor for DetailCondition();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
        *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
        swift_bridgeObjectRelease();
        uint64_t v59 = v6[11];
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        *(void *)((char *)a1 + v59) = *(void *)((char *)a2 + v59);
        swift_bridgeObjectRelease();
        uint64_t v62 = *((void *)v61 + 2);
        *((void *)v60 + 1) = *((void *)v61 + 1);
        *((void *)v60 + 2) = v62;
        swift_bridgeObjectRelease();
        v60[24] = v61[24];
        uint64_t v63 = v6[12];
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
        uint64_t v67 = v6[13];
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = type metadata accessor for LocationDetailEntity();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
        return a1;
      }
    }
    else
    {
      if (!v31)
      {
        uint64_t v72 = *((void *)v28 + 1);
        *(void *)uint64_t v27 = *(void *)v28;
        *((void *)v27 + 1) = v72;
        swift_bridgeObjectRelease();
        ((void (*)(char *, char *, uint64_t))v25)(&v27[v29[5]], &v28[v29[5]], v76);
        ((void (*)(char *, char *, uint64_t))v25)(&v27[v29[6]], &v28[v29[6]], v76);
        ((void (*)(char *, char *, uint64_t))v25)(&v27[v29[7]], &v28[v29[7]], v76);
        *(void *)&v27[v29[8]] = *(void *)&v28[v29[8]];
        uint64_t v73 = v29[9];
        uint64_t v74 = &v27[v73];
        uint64_t v75 = &v28[v73];
        v74[8] = v75[8];
        *(void *)uint64_t v74 = *(void *)v75;
        goto LABEL_16;
      }
      sub_100AB85C8((uint64_t)v27, (void (*)(void))type metadata accessor for DetailChartSelection);
    }
    uint64_t v54 = sub_10017DF08(&qword_100E711F8);
    memcpy(v27, v28, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_16;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = a2[2];
  uint64_t v9 = v6[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  uint64_t v14 = v6[7];
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  uint64_t v16 = (_OWORD *)((char *)a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E711F8);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    _OWORD *v15 = *v16;
    v13((char *)v15 + v17[5], (char *)v16 + v17[5], v12);
    v13((char *)v15 + v17[6], (char *)v16 + v17[6], v12);
    v13((char *)v15 + v17[7], (char *)v16 + v17[7], v12);
    *(void *)((char *)v15 + v17[8]) = *(void *)((char *)v16 + v17[8]);
    uint64_t v36 = v17[9];
    uint64_t v37 = (char *)v15 + v36;
    char v38 = (char *)v16 + v36;
    v37[8] = v38[8];
    *(void *)uint64_t v37 = *(void *)v38;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
  uint64_t v39 = v6[9];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = type metadata accessor for DetailCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  uint64_t v43 = v6[11];
  char v44 = (_OWORD *)((char *)a1 + v43);
  uint64_t v45 = (_OWORD *)((char *)a2 + v43);
  *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v45 + 9);
  *char v44 = *v45;
  uint64_t v46 = v6[12];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  uint64_t v50 = v6[13];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_100AB8FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AB8FF8);
}

uint64_t sub_100AB8FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailViewModel.Model(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100AB9040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AB9054);
}

uint64_t sub_100AB9054(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for ConditionDetailViewModel.Model(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_100AB90B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConditionDetailViewModel.Model(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100AB90F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailViewModel.Model(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for ConditionDetailViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EAED28);
}

uint64_t sub_100AB9160()
{
  uint64_t result = type metadata accessor for ConditionDetailViewModel.Model(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100AB91D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = (int *)type metadata accessor for DetailChartSelection();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v16))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E711F8);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v19;
      uint64_t v20 = v16[5];
      uint64_t v21 = (char *)v14 + v20;
      uint64_t v43 = (char *)v15 + v20;
      swift_bridgeObjectRetain();
      v12(v21, v43, v11);
      v12((char *)v14 + v16[6], (char *)v15 + v16[6], v11);
      v12((char *)v14 + v16[7], (char *)v15 + v16[7], v11);
      *(void *)((char *)v14 + v16[8]) = *(void *)((char *)v15 + v16[8]);
      uint64_t v22 = v16[9];
      uint64_t v23 = (char *)v14 + v22;
      uint64_t v24 = (char *)v15 + v22;
      v23[8] = v24[8];
      *(void *)uint64_t v23 = *(void *)v24;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v16);
    }
    uint64_t v25 = a3[9];
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for DetailCondition();
    int v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v29(v26, v27, v28);
    uint64_t v30 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    int v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)int v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    *((void *)v31 + 2) = *((void *)v32 + 2);
    v31[24] = v32[24];
    uint64_t v34 = a3[12];
    char v44 = (char *)v4 + v34;
    uint64_t v35 = (char *)a2 + v34;
    uint64_t v36 = type metadata accessor for Location();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v44, v35, v36);
    uint64_t v38 = a3[13];
    uint64_t v39 = (char *)v4 + v38;
    uint64_t v40 = (char *)a2 + v38;
    uint64_t v41 = type metadata accessor for LocationDetailEntity();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  }
  return v4;
}

uint64_t sub_100AB9524(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = (int *)type metadata accessor for DetailChartSelection();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, (uint64_t)v8))
  {
    swift_bridgeObjectRelease();
    v6(v7 + v8[5], v5);
    v6(v7 + v8[6], v5);
    v6(v7 + v8[7], v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[12];
  uint64_t v12 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[13];
  uint64_t v14 = type metadata accessor for LocationDetailEntity();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

void *sub_100AB9728(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E711F8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v17;
    uint64_t v18 = v15[5];
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v41 = (char *)v14 + v18;
    swift_bridgeObjectRetain();
    v11(v19, v41, v10);
    v11((char *)v13 + v15[6], (char *)v14 + v15[6], v10);
    v11((char *)v13 + v15[7], (char *)v14 + v15[7], v10);
    *(void *)((char *)v13 + v15[8]) = *(void *)((char *)v14 + v15[8]);
    uint64_t v20 = v15[9];
    uint64_t v21 = (char *)v13 + v20;
    uint64_t v22 = (char *)v14 + v20;
    v21[8] = v22[8];
    *(void *)uint64_t v21 = *(void *)v22;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
  }
  uint64_t v23 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for DetailCondition();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  uint64_t v28 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  int v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)int v29 = *(void *)v30;
  *((void *)v29 + 1) = v31;
  *((void *)v29 + 2) = *((void *)v30 + 2);
  v29[24] = v30[24];
  uint64_t v32 = a3[12];
  uint64_t v42 = (char *)a1 + v32;
  uint64_t v33 = (char *)a2 + v32;
  uint64_t v34 = type metadata accessor for Location();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35(v42, v33, v34);
  uint64_t v36 = a3[13];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  return a1;
}

void *sub_100AB9A28(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v47 = a3;
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for DetailChartSelection();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15);
  if (!v16)
  {
    if (!v17)
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = *((void *)v14 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11(&v13[v15[5]], &v14[v15[5]], v9);
      v11(&v13[v15[6]], &v14[v15[6]], v9);
      v11(&v13[v15[7]], &v14[v15[7]], v9);
      *(void *)&v13[v15[8]] = *(void *)&v14[v15[8]];
      uint64_t v43 = v15[9];
      char v44 = &v13[v43];
      uint64_t v45 = &v14[v43];
      char v46 = v45[8];
      *(void *)char v44 = *(void *)v45;
      v44[8] = v46;
      goto LABEL_7;
    }
    sub_100AB85C8((uint64_t)v13, (void (*)(void))type metadata accessor for DetailChartSelection);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v26 = sub_10017DF08(&qword_100E711F8);
    memcpy(v13, v14, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v18 = v15[5];
  uint64_t v19 = &v13[v18];
  uint64_t v20 = &v14[v18];
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v9);
  v21(&v13[v15[6]], &v14[v15[6]], v9);
  v21(&v13[v15[7]], &v14[v15[7]], v9);
  *(void *)&v13[v15[8]] = *(void *)&v14[v15[8]];
  uint64_t v22 = v15[9];
  uint64_t v23 = &v13[v22];
  uint64_t v24 = &v14[v22];
  char v25 = v24[8];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v25;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
LABEL_7:
  *(void *)((char *)a1 + v47[8]) = *(void *)((char *)a2 + v47[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v47[9];
  uint64_t v28 = (char *)a1 + v27;
  int v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for DetailCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  *(void *)((char *)a1 + v47[10]) = *(void *)((char *)a2 + v47[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v47[11];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v32 + 1) = *((void *)v33 + 1);
  *((void *)v32 + 2) = *((void *)v33 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[24] = v33[24];
  uint64_t v34 = v47[12];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 24))(v35, v36, v37);
  uint64_t v38 = v47[13];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

uint64_t sub_100AB9E60(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for DetailChartSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E711F8);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((uint64_t)v12 + v14[5], (uint64_t)v13 + v14[5], v9);
    v10((uint64_t)v12 + v14[6], (uint64_t)v13 + v14[6], v9);
    v10((uint64_t)v12 + v14[7], (uint64_t)v13 + v14[7], v9);
    *(void *)((char *)v12 + v14[8]) = *(void *)((char *)v13 + v14[8]);
    uint64_t v16 = v14[9];
    int v17 = (char *)v12 + v16;
    uint64_t v18 = (char *)v13 + v16;
    v17[8] = v18[8];
    *(void *)int v17 = *(void *)v18;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
  }
  uint64_t v19 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v24 = (_OWORD *)(a1 + v23);
  char v25 = (_OWORD *)(a2 + v23);
  *uint64_t v24 = *v25;
  *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)v25 + 9);
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  uint64_t v30 = a3[13];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

void *sub_100ABA100(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v45 = a3;
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = (int *)type metadata accessor for DetailChartSelection();
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v16);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v16);
  if (!v17)
  {
    if (!v18)
    {
      uint64_t v41 = *((void *)v15 + 1);
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v41;
      swift_bridgeObjectRelease();
      v12(&v14[v16[5]], &v15[v16[5]], v10);
      v12(&v14[v16[6]], &v15[v16[6]], v10);
      v12(&v14[v16[7]], &v15[v16[7]], v10);
      *(void *)&v14[v16[8]] = *(void *)&v15[v16[8]];
      uint64_t v42 = v16[9];
      uint64_t v43 = &v14[v42];
      char v44 = &v15[v42];
      v43[8] = v44[8];
      *(void *)uint64_t v43 = *(void *)v44;
      goto LABEL_7;
    }
    sub_100AB85C8((uint64_t)v14, (void (*)(void))type metadata accessor for DetailChartSelection);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v23 = sub_10017DF08(&qword_100E711F8);
    memcpy(v14, v15, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(&v14[v16[5]], &v15[v16[5]], v10);
  v19(&v14[v16[6]], &v15[v16[6]], v10);
  v19(&v14[v16[7]], &v15[v16[7]], v10);
  *(void *)&v14[v16[8]] = *(void *)&v15[v16[8]];
  uint64_t v20 = v16[9];
  uint64_t v21 = &v14[v20];
  uint64_t v22 = &v15[v20];
  v21[8] = v22[8];
  *(void *)uint64_t v21 = *(void *)v22;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v16);
LABEL_7:
  *(void *)((char *)a1 + v45[8]) = *(void *)((char *)a2 + v45[8]);
  swift_bridgeObjectRelease();
  uint64_t v24 = v45[9];
  char v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = type metadata accessor for DetailCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  *(void *)((char *)a1 + v45[10]) = *(void *)((char *)a2 + v45[10]);
  swift_bridgeObjectRelease();
  uint64_t v28 = v45[11];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  swift_bridgeObjectRelease();
  uint64_t v31 = *((void *)v30 + 2);
  *((void *)v29 + 1) = *((void *)v30 + 1);
  *((void *)v29 + 2) = v31;
  swift_bridgeObjectRelease();
  v29[24] = v30[24];
  uint64_t v32 = v45[12];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  uint64_t v36 = v45[13];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  return a1;
}

uint64_t sub_100ABA4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ABA4E8);
}

uint64_t sub_100ABA4E8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[6];
    }
    else
    {
      sub_10017DF08(&qword_100E711F8);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[7];
      }
      else
      {
        type metadata accessor for DetailCondition();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[9];
        }
        else
        {
          type metadata accessor for Location();
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a2)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a3[12];
          }
          else
          {
            uint64_t v10 = type metadata accessor for LocationDetailEntity();
            uint64_t v11 = a3[13];
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100ABA604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ABA618);
}

uint64_t sub_100ABA618(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[6];
    }
    else
    {
      sub_10017DF08(&qword_100E711F8);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[7];
      }
      else
      {
        type metadata accessor for DetailCondition();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[9];
        }
        else
        {
          type metadata accessor for Location();
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a3)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a4[12];
          }
          else
          {
            uint64_t v10 = type metadata accessor for LocationDetailEntity();
            uint64_t v11 = a4[13];
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100ABA730()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100ABA8D4();
    if (v1 <= 0x3F)
    {
      type metadata accessor for DetailCondition();
      if (v2 <= 0x3F)
      {
        type metadata accessor for Location();
        if (v3 <= 0x3F)
        {
          type metadata accessor for LocationDetailEntity();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_100ABA8D4()
{
  if (!qword_100E71330)
  {
    type metadata accessor for DetailChartSelection();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E71330);
    }
  }
}

uint64_t sub_100ABA92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10011BFD8();
  uint64_t v8 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for DetailType();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_100125FF8();
  uint64_t v19 = type metadata accessor for ConditionDetailViewModel.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, a1 + *(int *)(v19 + 36), v8);
  sub_1009E63A8(v14, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a1 + *(int *)(v19 + 48), v25);
  sub_100AB85C8(a1, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
  uint64_t v20 = type metadata accessor for DetailViewVisibilityTrackerModel();
  uint64_t v21 = a2 + *(int *)(v20 + 24);
  uint64_t v22 = enum case for DetailViewOrigin.component(_:);
  type metadata accessor for DetailViewOrigin();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v23 + 104))(v21, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a2, v3, v15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a2 + *(int *)(v20 + 20), v2, v25);
}

uint64_t sub_100ABAB50@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = v3[2];
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_100ABB564(v7);
  uint64_t v7 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if (*(void *)(v7 + 16) <= a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v9 = *(void *)(type metadata accessor for DetailChartsViewModel() - 8);
  sub_100ABB578(a1, v7+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * a2);
  uint64_t v25 = v3[1];
  uint64_t v26 = *v3;
  uint64_t v10 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
  type metadata accessor for Date();
  sub_100162E4C();
  sub_10008B8B4();
  v11();
  uint64_t v12 = sub_10017E1E8(v10[7]);
  sub_100ABB448(v12, v13);
  uint64_t v14 = *(uint64_t *)((char *)v3 + v10[8]);
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  sub_10008B8B4();
  v15();
  uint64_t v16 = *(uint64_t *)((char *)v3 + v10[10]);
  uint64_t v17 = (char *)v3 + v10[11];
  uint64_t v18 = *(void *)v17;
  uint64_t v24 = *((void *)v17 + 1);
  uint64_t v19 = *((void *)v17 + 2);
  char v23 = v17[24];
  type metadata accessor for Location();
  sub_100162E4C();
  sub_10008B8B4();
  v20();
  type metadata accessor for LocationDetailEntity();
  sub_100162E4C();
  sub_10008B8B4();
  v21();
  *a3 = v26;
  a3[1] = v25;
  a3[2] = v7;
  *(void *)((char *)a3 + v10[8]) = v14;
  *(void *)((char *)a3 + v10[10]) = v16;
  uint64_t v22 = (char *)a3 + v10[11];
  *(void *)uint64_t v22 = v18;
  *((void *)v22 + 1) = v24;
  *((void *)v22 + 2) = v19;
  v22[24] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_100ABADE0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ConditionDetailViewModel.Model(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = (void *)(v7 - v6);
  uint64_t v9 = type metadata accessor for ConditionDetailViewModel(0);
  __chkstk_darwin(v9 - 8);
  sub_10011BFD8();
  uint64_t v10 = sub_10017DF08(qword_100EAEDE8);
  __chkstk_darwin(v10 - 8);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v15 = v12 - v11 + *(int *)(v14 + 56);
  sub_100ABB3E4(a1, v12 - v11);
  sub_100ABB3E4(a2, v15);
  sub_1001630A0(v13);
  if (!v17)
  {
    sub_100ABB3E4(v13, (uint64_t)v2);
    sub_1001630A0(v15);
    if (!v17)
    {
      sub_100ABB4B0(v15, (uint64_t)v8, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
      char v16 = sub_100ABAFF4(v2, v8);
      sub_100AB85C8((uint64_t)v8, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
      sub_100AB85C8((uint64_t)v2, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
      sub_100AB85C8(v13, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
      return v16 & 1;
    }
    sub_100AB85C8((uint64_t)v2, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
LABEL_9:
    sub_1001781AC(v13, qword_100EAEDE8);
    char v16 = 0;
    return v16 & 1;
  }
  sub_1001630A0(v15);
  if (!v17) {
    goto LABEL_9;
  }
  sub_100AB85C8(v13, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_100ABAFF4(void *a1, void *a2)
{
  type metadata accessor for DetailChartSelection();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100125FF8();
  uint64_t v6 = sub_10017DF08(&qword_100E713E0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100E711F8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v12);
  char v17 = (char *)&v42 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v42 - v18;
  BOOL v20 = *a1 == *a2 && a1[1] == a2[1];
  if (v20 || (char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(), v22 = 0, (v21 & 1) != 0))
  {
    sub_100BD9E90();
    if ((v23 & 1) == 0) {
      goto LABEL_32;
    }
    uint64_t v24 = (int *)type metadata accessor for ConditionDetailViewModel.Model(0);
    sub_10017E1E8(v24[6]);
    if ((static Date.== infix(_:_:)() & 1) == 0) {
      goto LABEL_32;
    }
    sub_100ABB448((uint64_t)a1 + v24[7], (uint64_t)v19);
    sub_100ABB448((uint64_t)a2 + v24[7], (uint64_t)v17);
    uint64_t v25 = v10 + *(int *)(v6 + 48);
    sub_100ABB448((uint64_t)v19, v10);
    sub_100ABB448((uint64_t)v17, v25);
    sub_100163F10(v10);
    if (v20)
    {
      sub_1001781AC((uint64_t)v17, &qword_100E711F8);
      sub_1001781AC((uint64_t)v19, &qword_100E711F8);
      sub_100163F10(v25);
      if (v20)
      {
        sub_1001781AC(v10, &qword_100E711F8);
LABEL_18:
        sub_100BDA688();
        if ((v28 & 1) == 0) {
          goto LABEL_32;
        }
        sub_10017E1E8(v24[9]);
        if ((static DetailCondition.== infix(_:_:)() & 1) == 0) {
          goto LABEL_32;
        }
        sub_100BD8CC0();
        if ((v29 & 1) == 0) {
          goto LABEL_32;
        }
        uint64_t v30 = v24[11];
        uint64_t v31 = *(void *)((char *)a1 + v30 + 8);
        uint64_t v32 = *(void *)((char *)a1 + v30 + 16);
        int v33 = *((unsigned __int8 *)a1 + v30 + 24);
        uint64_t v34 = (char *)a2 + v30;
        uint64_t v35 = *((void *)v34 + 1);
        uint64_t v36 = *((void *)v34 + 2);
        int v37 = v34[24];
        sub_100BD8DC4();
        if ((v38 & 1) == 0) {
          goto LABEL_32;
        }
        if (v31 == v35 && v32 == v36)
        {
          if (v33 != v37) {
            goto LABEL_32;
          }
        }
        else
        {
          char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
          char v22 = 0;
          if (v40 & 1) == 0 || ((v33 ^ v37)) {
            return v22 & 1;
          }
        }
        sub_10017E1E8(v24[12]);
        if (static Location.== infix(_:_:)())
        {
          sub_10017E1E8(v24[13]);
          char v22 = static LocationDetailEntity.== infix(_:_:)();
          return v22 & 1;
        }
LABEL_32:
        char v22 = 0;
        return v22 & 1;
      }
    }
    else
    {
      sub_100ABB448(v10, (uint64_t)v14);
      sub_100163F10(v25);
      if (!v26)
      {
        sub_100ABB4B0(v25, (uint64_t)v2, (void (*)(void))type metadata accessor for DetailChartSelection);
        char v27 = sub_1007957B4(v14, v2);
        sub_100AB85C8((uint64_t)v2, (void (*)(void))type metadata accessor for DetailChartSelection);
        sub_1001781AC((uint64_t)v17, &qword_100E711F8);
        sub_1001781AC((uint64_t)v19, &qword_100E711F8);
        sub_100AB85C8((uint64_t)v14, (void (*)(void))type metadata accessor for DetailChartSelection);
        sub_1001781AC(v10, &qword_100E711F8);
        if ((v27 & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_18;
      }
      sub_1001781AC((uint64_t)v17, &qword_100E711F8);
      sub_1001781AC((uint64_t)v19, &qword_100E711F8);
      sub_100AB85C8((uint64_t)v14, (void (*)(void))type metadata accessor for DetailChartSelection);
    }
    sub_1001781AC(v10, &qword_100E713E0);
    goto LABEL_32;
  }
  return v22 & 1;
}

uint64_t sub_100ABB3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100ABB448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E711F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100ABB4B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_100ABB514()
{
}

uint64_t sub_100ABB524()
{
  return sub_1007E97C8();
}

uint64_t sub_100ABB534()
{
  uint64_t v0 = sub_10017FA34();
  return sub_1007E96BC(v0, v1, v2, v3);
}

uint64_t sub_100ABB544()
{
  return sub_1007E9BC0();
}

uint64_t sub_100ABB554()
{
  return sub_1007E9BD4();
}

uint64_t sub_100ABB564(uint64_t a1)
{
  return sub_1007E9BE8(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100ABB578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartsViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100ABB5DC()
{
  uint64_t v0 = sub_10017FA34();
  return sub_1001A6F80(v0, v1, v2, v3);
}

uint64_t sub_100ABB5EC()
{
  uint64_t v0 = sub_10017FA34();
  return sub_1007E9EC0(v0, v1, v2, v3);
}

void sub_100ABB5FC()
{
}

uint64_t sub_100ABB60C()
{
  uint64_t v0 = sub_10017FA34();
  return sub_1007E9E78(v0, v1, v2, v3);
}

uint64_t sub_100ABB61C()
{
  return sub_1007EA344();
}

uint64_t sub_100ABB62C()
{
  uint64_t v0 = sub_10017FA34();
  return sub_1007EA3A0(v0, v1, v2, v3);
}

uint64_t sub_100ABB63C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t type metadata accessor for SevereNhpContentView()
{
  return sub_100109098();
}

uint64_t sub_100ABB6D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100ABB714@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = type metadata accessor for Optional();
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        char v21 = &qword_100E75A38;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      char v21 = &qword_100E75E48;
      goto LABEL_11;
    }
    char v21 = &qword_100E75C40;
    goto LABEL_11;
  }
  if (v10) {
    char v21 = &qword_100E75628;
  }
  else {
    char v21 = &qword_100E75830;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  char v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  int v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100ABBBD4@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v101 = a6;
  uint64_t v102 = a5;
  uint64_t v10 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Optional();
  uint64_t v112 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v94 - v14;
  uint64_t v98 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v98);
  uint64_t v95 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v105 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  v100 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v111 = (char *)&v94 - v22;
  __chkstk_darwin(v23);
  uint64_t v110 = (char *)&v94 - v24;
  __chkstk_darwin(v25);
  uint64_t v108 = (char *)&v94 - v26;
  __chkstk_darwin(v27);
  uint64_t v109 = (char *)&v94 - v28;
  __chkstk_darwin(v29);
  uint64_t v106 = (char *)&v94 - v30;
  __chkstk_darwin(v31);
  uint64_t v107 = (char *)&v94 - v32;
  __chkstk_darwin(v33);
  uint64_t v104 = (char *)&v94 - v34;
  __chkstk_darwin(v35);
  uint64_t v114 = (char *)&v94 - v36;
  __chkstk_darwin(v37);
  uint64_t v122 = (char *)&v94 - v38;
  __chkstk_darwin(v39);
  uint64_t v116 = (char *)&v94 - v40;
  __chkstk_darwin(v41);
  uint64_t v115 = (char *)&v94 - v42;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v94 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v94 - v47;
  uint64_t v117 = a1;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_severeAlert, (uint64_t)v18);
  uint64_t v96 = a3;
  uint64_t v49 = a3[45];
  uint64_t v50 = a3[46];
  uint64_t v51 = a3[47];
  uint64_t v52 = a3[48];
  v123 = a2;
  a2(v18, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v103 = v48;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = v105 + 8;
  v124 = *(void (**)(char *, uint64_t))(v105 + 8);
  v124(v45, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_nextHourPrecipitation, (uint64_t)v18);
  uint64_t v54 = v96;
  a2(v18, v96[33], v96[34], v96[35], v96[36]);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v55 = v54;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v115);
  uint64_t v56 = v124;
  v124(v45, a4);
  uint64_t v57 = v117;
  sub_1001F3734(v117 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_airQuality, (uint64_t)v18);
  v123(v18, *v55, v55[1], v55[2], v55[3]);
  v97 = v18;
  sub_1001F2B74((uint64_t)v18);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v116);
  v121 = v45;
  uint64_t v113 = v53;
  v56(v45, a4);
  uint64_t v58 = v57 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_map;
  swift_beginAccess();
  uint64_t v59 = v58;
  uint64_t v60 = v99;
  sub_10027A764(v59, v99);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v98) == 1)
  {
    sub_10027A7CC(v60);
  }
  else
  {
    uint64_t v61 = v95;
    sub_10027A82C(v60, v95);
    sub_10027A890((uint64_t)(v55 + 24), (uint64_t)v150);
    sub_10027A890((uint64_t)v150, (uint64_t)v151);
    if (v152 != 1)
    {
      uint64_t v65 = (uint64_t)v122;
      v123((char *)v61, v151[0], v151[1], v151[2], v151[3]);
      sub_1001F2B74(v61);
      uint64_t v66 = (uint64_t)v121;
      sub_100121584(v65, a4, (uint64_t)v121);
      uint64_t v67 = (void (*)(uint64_t, uint64_t))v124;
      v124((char *)v65, a4);
      uint64_t v62 = (uint64_t)v119;
      sub_100121584(v66, a4, (uint64_t)v119);
      v67(v66, a4);
      uint64_t v63 = v62;
      uint64_t v64 = 0;
      goto LABEL_7;
    }
    sub_1001F2B74(v61);
  }
  uint64_t v62 = (uint64_t)v119;
  uint64_t v63 = (uint64_t)v119;
  uint64_t v64 = 1;
LABEL_7:
  _s7Weather24LocationCompositionStateOwst_0(v63, v64, 1, a4);
  sub_1000CA354();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v99 = (v112 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v68(v62, v120);
  uint64_t v69 = a4;
  uint64_t v70 = v117;
  uint64_t v71 = (uint64_t)v97;
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v97);
  uint64_t v72 = (void (*)(uint64_t, void, void, void, void))v123;
  uint64_t v73 = (uint64_t)v122;
  v123((char *)v71, v55[16], v55[17], v55[18], v55[19]);
  sub_1001F2B74(v71);
  sub_100121584(v73, v69, (uint64_t)v121);
  v124((char *)v73, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
  uint64_t v74 = (uint64_t)v114;
  v72(v71, v55[8], v55[9], v55[10], v55[11]);
  sub_1001F2B74(v71);
  sub_100121584(v74, v69, v73);
  v124((char *)v74, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v71);
  uint64_t v75 = (uint64_t)v104;
  v72(v71, v55[53], v55[54], v55[55], v55[56]);
  sub_1001F2B74(v71);
  uint64_t v76 = v102;
  sub_100121584(v75, v69, v74);
  uint64_t v77 = v124;
  v124((char *)v75, v69);
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v71);
  uint64_t v78 = (uint64_t)v107;
  v123((char *)v71, v55[49], v55[50], v55[51], v55[52]);
  sub_1001F2B74(v71);
  sub_100121584(v78, v69, v75);
  uint64_t v79 = v77;
  v77((char *)v78, v69);
  uint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 16);
  v80(v78, v103, v69);
  uint64_t v142 = v78;
  char v81 = v106;
  v80((uint64_t)v106, v115, v69);
  v143 = v81;
  uint64_t v82 = v109;
  v80((uint64_t)v109, v116, v69);
  v144 = v82;
  uint64_t v83 = v112 + 16;
  uint64_t v84 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v119, v118, v120);
  uint64_t v145 = v84;
  uint64_t v85 = v108;
  v80((uint64_t)v108, v121, v69);
  v146 = v85;
  v86 = v110;
  v80((uint64_t)v110, v122, v69);
  v147 = v86;
  v87 = v111;
  v80((uint64_t)v111, v114, v69);
  v148 = v87;
  v88 = v100;
  v89 = v104;
  v80((uint64_t)v100, v104, v69);
  v149 = v88;
  v90 = v88;
  uint64_t v134 = v69;
  uint64_t v135 = v69;
  uint64_t v91 = v120;
  uint64_t v136 = v69;
  uint64_t v137 = v120;
  uint64_t v138 = v69;
  uint64_t v139 = v69;
  uint64_t v140 = v69;
  uint64_t v141 = v69;
  uint64_t v126 = v76;
  uint64_t v127 = v76;
  uint64_t v128 = v76;
  uint64_t v125 = v76;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = v76;
  uint64_t v131 = v76;
  uint64_t v132 = v76;
  uint64_t v133 = v76;
  sub_1006E9080();
  v79(v89, v69);
  v79(v114, v69);
  v79(v122, v69);
  v79(v121, v69);
  v92 = *(void (**)(char *, uint64_t))(v83 - 8);
  v92(v118, v91);
  v79(v116, v69);
  v79(v115, v69);
  v79(v103, v69);
  v79(v90, v69);
  v79(v111, v69);
  v79(v110, v69);
  v79(v108, v69);
  v92(v119, v91);
  v79(v109, v69);
  v79(v106, v69);
  return ((uint64_t (*)(char *, uint64_t))v79)(v107, v69);
}

uint64_t sub_100ABC744@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[61];
  uint64_t v50 = a3[62];
  uint64_t v51 = a3[63];
  uint64_t v52 = a3[64];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[57], a3[58], a3[59], a3[60]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100ABD18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100ABB714(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100ABD1B8()
{
  return sub_100ABD1E8((uint64_t (*)(void, void, void, void, void, void, void))sub_100ABBBD4);
}

uint64_t sub_100ABD1D0()
{
  return sub_100ABD1E8((uint64_t (*)(void, void, void, void, void, void, void))sub_100ABC744);
}

uint64_t sub_100ABD1E8(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_100ABD21C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    v4[7] = a2[7];
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)((char *)v4 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100ABD3F4(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
    if (!result)
    {
      long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100ABD4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_100ABD65C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1000C1E18(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_1001781AC((uint64_t)a1 + v6, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100ABD7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100ABD928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_1001781AC(a1 + v9, (uint64_t *)&unk_100EAA560);
    uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100ABDAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ABDAB8);
}

uint64_t sub_100ABDAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100ABDB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ABDB58);
}

uint64_t sub_100ABDB58(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LegacySearchResultsView()
{
  uint64_t result = qword_100EAEEC8;
  if (!qword_100EAEEC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100ABDC24()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100ABDCD4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100ABDCF0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 < result >> 14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = String.subscript.getter();
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t sub_100ABDD94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v57 = sub_10017DF08(&qword_100EAEF08);
  sub_100179C0C();
  uint64_t v54 = v2;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v58 = v4;
  uint64_t v59 = sub_10017DF08(&qword_100EAEF10);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v62 = v6;
  sub_10017DF08(&qword_100EAEF18);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v60 = sub_10017DF08(&qword_100EAEF20);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v56 = v12;
  uint64_t v55 = sub_10017DF08(&qword_100EAEF28);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v63 = sub_10017DF08(&qword_100EAEF30);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v61 = v18;
  uint64_t v19 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v19 - 8);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = type metadata accessor for UserInterfaceSizeClass();
  sub_100179C0C();
  uint64_t v25 = v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v53 - v30;
  type metadata accessor for LegacySearchResultsView();
  sub_10019B2FC();
  if (_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v31, v22, v23);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v31, v23);
    int v34 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v28, v23);
    if (v34 == enum case for UserInterfaceSizeClass.compact(_:))
    {
      uint64_t v35 = v58;
      sub_100ABE478();
      uint64_t v36 = v54;
      uint64_t v37 = v57;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v10, v35, v57);
      swift_storeEnumTagMultiPayload();
      sub_1001246C8(&qword_100EAEF40, &qword_100EAEF28);
      uint64_t v38 = sub_10018C6DC(&qword_100EAEF48);
      uint64_t v39 = type metadata accessor for PlainListStyle();
      uint64_t v40 = sub_1001246C8(&qword_100EAEF50, &qword_100EAEF48);
      uint64_t v65 = v38;
      uint64_t v66 = v39;
      uint64_t v67 = v40;
      uint64_t v68 = &protocol witness table for PlainListStyle;
      swift_getOpaqueTypeConformance2();
      uint64_t v41 = v56;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v41, v62, &qword_100EAEF20);
      swift_storeEnumTagMultiPayload();
      sub_100AC05E8();
      uint64_t v42 = v61;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v41, &qword_100EAEF20);
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v58, v37);
    }
    else
    {
      if (v34 != enum case for UserInterfaceSizeClass.regular(_:))
      {
        swift_storeEnumTagMultiPayload();
        sub_100AC05E8();
        uint64_t v42 = v61;
        _ConditionalContent<>.init(storage:)();
        uint64_t v50 = *(void (**)(uint64_t))(v25 + 8);
        uint64_t v51 = sub_10017EDF8();
        v50(v51);
        ((void (*)(char *, uint64_t))v50)(v28, v23);
        goto LABEL_9;
      }
      *(void *)uint64_t v16 = static HorizontalAlignment.leading.getter();
      *(void *)(v16 + 8) = 0;
      *(unsigned char *)(v16 + 16) = 0;
      uint64_t v43 = sub_10017DF08(&qword_100EAEF58);
      sub_100ABE650(v1, v16 + *(int *)(v43 + 44));
      sub_10006DF38(v16, v10, &qword_100EAEF28);
      swift_storeEnumTagMultiPayload();
      sub_1001246C8(&qword_100EAEF40, &qword_100EAEF28);
      uint64_t v44 = sub_10018C6DC(&qword_100EAEF48);
      uint64_t v45 = type metadata accessor for PlainListStyle();
      uint64_t v46 = sub_1001246C8(&qword_100EAEF50, &qword_100EAEF48);
      uint64_t v65 = v44;
      uint64_t v66 = v45;
      uint64_t v67 = v46;
      uint64_t v68 = &protocol witness table for PlainListStyle;
      swift_getOpaqueTypeConformance2();
      uint64_t v47 = v56;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v47, v62, &qword_100EAEF20);
      swift_storeEnumTagMultiPayload();
      sub_100AC05E8();
      uint64_t v42 = v61;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v47, &qword_100EAEF20);
      sub_1001781AC(v16, &qword_100EAEF28);
    }
    uint64_t v48 = sub_10017EDF8();
    v49(v48);
LABEL_9:
    uint64_t v33 = v64;
    sub_10024D364(v42, v64, &qword_100EAEF30);
    uint64_t v32 = 0;
    return _s7Weather24LocationCompositionStateOwst_0(v33, v32, 1, v63);
  }
  sub_1001781AC(v22, &qword_100E65ED8);
  uint64_t v32 = 1;
  uint64_t v33 = v64;
  return _s7Weather24LocationCompositionStateOwst_0(v33, v32, 1, v63);
}

uint64_t sub_100ABE478()
{
  uint64_t v0 = type metadata accessor for PlainListStyle();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100EAEF48);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  sub_10017DF08(&qword_100EAEFF0);
  sub_100AC1020(&qword_100EAEFF8, &qword_100EAEFF0, (void (*)(void))sub_100AC0B40);
  List<>.init(content:)();
  PlainListStyle.init()();
  sub_1001246C8(&qword_100EAEF50, &qword_100EAEF48);
  View.listStyle<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
}

uint64_t sub_100ABE650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v81 = type metadata accessor for PlainListStyle();
  uint64_t v84 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v76 = &v63[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = sub_10017DF08(&qword_100EAEF60);
  uint64_t v79 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = &v63[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v82 = sub_10017DF08(&qword_100EAEF68);
  uint64_t v85 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v74 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v83 = sub_10017DF08(&qword_100E7B620);
  uint64_t v80 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  v88 = &v63[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v78 = &v63[-v8];
  uint64_t v73 = type metadata accessor for Divider();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v70 = &v63[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10017DF08(&qword_100E66250);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  v87 = &v63[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v71 = &v63[-v14];
  id v15 = [self mainBundle];
  v105._countAndFlagsBits = 0xD00000000000001FLL;
  v105._object = (void *)0x8000000100CBD6F0;
  v16._object = (void *)0x8000000100CBD6D0;
  v16._countAndFlagsBits = 0xD000000000000010;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v105);

  sub_10017DF08(&qword_100E64020);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100C251B0;
  uint64_t v65 = a1;
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  *(void *)(v18 + 56) = &type metadata for String;
  *(void *)(v18 + 64) = sub_10012B7C0();
  *(void *)(v18 + 32) = v19;
  *(void *)(v18 + 40) = v20;
  swift_bridgeObjectRetain();
  uint64_t v21 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v96 = v21;
  uint64_t v97 = v23;
  sub_10014A85C();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  static Font.largeTitle.getter();
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v29 = Text.font(_:)();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  sub_100191924(v24, v26, v28);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v68 = Text.foregroundColor(_:)();
  uint64_t v67 = v34;
  char v36 = v35;
  uint64_t v69 = v37;
  swift_release();
  int v66 = v36 & 1;
  sub_100191924(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  int v64 = static Edge.Set.leading.getter();
  uint64_t v38 = v70;
  Divider.init()();
  LOBYTE(v26) = static Edge.Set.leading.getter();
  uint64_t v39 = v72;
  uint64_t v40 = v87;
  uint64_t v41 = v73;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v72 + 16))(v87, v38, v73);
  uint64_t v42 = &v40[*(int *)(v11 + 44)];
  *uint64_t v42 = v26;
  *(_OWORD *)(v42 + 8) = 0u;
  *(_OWORD *)(v42 + 24) = 0u;
  v42[40] = 1;
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v38, v41);
  uint64_t v43 = v71;
  sub_10024D364((uint64_t)v40, (uint64_t)v71, &qword_100E66250);
  uint64_t v89 = v65;
  sub_10017DF08(&qword_100EAEF70);
  sub_100AC1020(&qword_100EAEF78, &qword_100EAEF70, (void (*)(void))sub_100AC0710);
  uint64_t v44 = v75;
  List<>.init(content:)();
  uint64_t v45 = v76;
  PlainListStyle.init()();
  uint64_t v46 = sub_1001246C8(&qword_100EAEFC0, &qword_100EAEF60);
  uint64_t v47 = v74;
  uint64_t v48 = v77;
  uint64_t v49 = v81;
  View.listStyle<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v84 + 8))(v45, v49);
  (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v44, v48);
  v104[0] = static Color.clear.getter();
  uint64_t v96 = v48;
  uint64_t v97 = v49;
  uint64_t v98 = v46;
  uint64_t v99 = &protocol witness table for PlainListStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v50 = v88;
  uint64_t v51 = v82;
  View.listBackground<A>(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v85 + 8))(v47, v51);
  uint64_t v52 = v80;
  uint64_t v53 = v78;
  uint64_t v54 = v83;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v80 + 32))(v78, v50, v83);
  uint64_t v55 = v68;
  uint64_t v56 = v67;
  uint64_t v96 = v68;
  uint64_t v97 = v67;
  LOBYTE(v49) = v66;
  LOBYTE(v98) = v66;
  uint64_t v99 = v69;
  char v100 = v64;
  long long v101 = 0u;
  long long v102 = 0u;
  char v103 = 1;
  uint64_t v94 = 0;
  char v95 = 1;
  v104[0] = (uint64_t)&v96;
  v104[1] = (uint64_t)&v94;
  uint64_t v57 = (uint64_t)v43;
  uint64_t v58 = (uint64_t)v43;
  uint64_t v59 = v87;
  sub_10006DF38(v58, (uint64_t)v87, &qword_100E66250);
  uint64_t v92 = 0;
  char v93 = 1;
  v104[2] = (uint64_t)v59;
  v104[3] = (uint64_t)&v92;
  uint64_t v90 = 0;
  char v91 = 1;
  v104[4] = (uint64_t)&v90;
  uint64_t v60 = (uint64_t)v88;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v52 + 16))(v88, v53, v54);
  v104[5] = v60;
  sub_1004BA394(v104, v86);
  sub_100190CC4(v55, v56, v49);
  uint64_t v61 = *(void (**)(unsigned char *, uint64_t))(v52 + 8);
  swift_bridgeObjectRetain();
  v61(v53, v54);
  sub_1001781AC(v57, &qword_100E66250);
  sub_100191924(v55, v56, v49);
  swift_bridgeObjectRelease();
  v61(v88, v54);
  sub_1001781AC((uint64_t)v87, &qword_100E66250);
  sub_100191924(v96, v97, v98);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100ABF048()
{
  uint64_t v0 = type metadata accessor for LegacySearchResultsView();
  __chkstk_darwin(v0 - 8);
  swift_bridgeObjectRetain();
  sub_1002F9858();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_100AC0A1C();
  uint64_t v1 = swift_allocObject();
  sub_100AC0A68();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100AC0A04;
  *(void *)(v2 + 24) = v1;
  sub_10017DF08(&qword_100EAEFC8);
  sub_10017DF08(&qword_100E7A038);
  sub_1001246C8(&qword_100EAEFD0, &qword_100EAEFC8);
  sub_100AC0710();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100ABF244@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v52 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v52);
  uint64_t v51 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for SearchLocation();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v39 = *(void *)(v41 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for LegacySearchResultsView();
  uint64_t v38 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v46 = sub_10017DF08(&qword_100EAEFB8);
  uint64_t v48 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v40 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100EAEFA8);
  __chkstk_darwin(v9 - 8);
  uint64_t v42 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08(&qword_100EAEF90);
  __chkstk_darwin(v44);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EAEFD8);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  __chkstk_darwin(v13);
  uint64_t v43 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10017DF08(&qword_100E7A030) - 8;
  __chkstk_darwin(v47);
  uint64_t v45 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AC0A1C();
  sub_100AC0A1C();
  swift_allocObject();
  sub_100AC0A68();
  sub_100AC0A68();
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  sub_10017DF08(&qword_100EAEFE0);
  sub_100AC0ABC();
  uint64_t v16 = v40;
  Button.init(action:label:)();
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = a1;
  uint64_t v56 = *(void *)(a1 + 40);
  uint64_t v57 = v17;
  sub_1001246C8(&qword_100EAEFB0, &qword_100EAEFB8);
  sub_10014A85C();
  uint64_t v19 = v42;
  uint64_t v20 = v46;
  View.accessibilityLabel<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v16, v20);
  sub_10006DF38(v19, (uint64_t)v12, &qword_100EAEFA8);
  uint64_t v21 = &v12[*(int *)(v44 + 36)];
  v21[32] = 0;
  *(_OWORD *)uint64_t v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  sub_1001781AC(v19, &qword_100EAEFA8);
  static VerticalEdge.Set.all.getter();
  sub_100AC0890();
  uint64_t v22 = v43;
  View.listRowSeparator(_:edges:)();
  sub_1001781AC((uint64_t)v12, &qword_100EAEF90);
  uint64_t v56 = static Color.clear.getter();
  swift_retain();
  uint64_t v23 = AnyView.init<A>(_:)();
  uint64_t v25 = v49;
  uint64_t v24 = v50;
  uint64_t v26 = v45;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v45, v22, v50);
  swift_release();
  *(void *)(v26 + *(int *)(v47 + 44)) = v23;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
  uint64_t v27 = *(void *)(v18 + 40);
  uint64_t v28 = *(void *)(v18 + 48);
  uint64_t v29 = (uint64_t)v51;
  *uint64_t v51 = v27;
  *(void *)(v29 + 8) = v28;
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D5EC(v29, v30, v31, v32, v33, v34, v35, v36, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
  swift_bridgeObjectRetain();
  sub_1003F8810(v29);
  return sub_1001781AC(v26, &qword_100E7A030);
}

double sub_100ABF8A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  *(void *)&long long v24 = v4;
  *((void *)&v24 + 1) = v3;
  sub_10014A85C();
  uint64_t v5 = StringProtocol.localizedStandardRange<A>(of:)();
  if (v7)
  {
    *(void *)&long long v24 = v4;
    *((void *)&v24 + 1) = v3;
    swift_bridgeObjectRetain();
    uint64_t v13 = Text.init<A>(_:)();
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    static Color.secondary.getter();
    uint64_t v18 = Text.foregroundColor(_:)();
    uint64_t v20 = v19;
    char v22 = v21;
    swift_release();
    sub_100191924(v13, v15, v17);
    swift_bridgeObjectRelease();
    static Font.body.getter();
    static Font.Weight.bold.getter();
    Font.weight(_:)();
    swift_release();
    Text.font(_:)();
    swift_release();
    sub_100191924(v18, v20, v22 & 1);
  }
  else
  {
    uint64_t v8 = sub_100342638(v4, v3, v5, v6);
    uint64_t v10 = v9;
    char v12 = v11 & 1;
    static Font.body.getter();
    static Font.Weight.bold.getter();
    Font.weight(_:)();
    swift_release();
    Text.font(_:)();
    swift_release();
    sub_100191924(v8, v10, v12);
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  static Edge.Set.leading.getter();
  sub_10017DF08(&qword_100E7D430);
  sub_100501714();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v24;
  *(_OWORD *)a2 = v24;
  *(_OWORD *)(a2 + 16) = v25;
  *(_OWORD *)(a2 + 32) = v26;
  *(_OWORD *)(a2 + 48) = v27;
  *(_OWORD *)(a2 + 64) = v28;
  *(_OWORD *)(a2 + 80) = v29;
  *(unsigned char *)(a2 + 96) = v30;
  *(unsigned char *)(a2 + 97) = v31;
  return result;
}

uint64_t sub_100ABFBA0()
{
  uint64_t v0 = type metadata accessor for LegacySearchResultsView();
  __chkstk_darwin(v0 - 8);
  swift_bridgeObjectRetain();
  sub_1002F9858();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_100AC0A1C();
  uint64_t v1 = swift_allocObject();
  sub_100AC0A68();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100AC0C24;
  *(void *)(v2 + 24) = v1;
  sub_10017DF08(&qword_100EAEFC8);
  sub_10017DF08(&qword_100E7A048);
  sub_1001246C8(&qword_100EAEFD0, &qword_100EAEFC8);
  sub_100AC0B40();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100ABFD9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v32 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v32);
  long long v29 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for SearchLocation();
  v23[1] = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for LegacySearchResultsView();
  v23[0] = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10017DF08(&qword_100EAEFB8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  __chkstk_darwin(v8);
  char v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100EAEFA8);
  __chkstk_darwin(v28);
  long long v24 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E7A040);
  uint64_t v30 = *(void *)(v13 - 8);
  uint64_t v31 = v13;
  __chkstk_darwin(v13);
  long long v25 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AC0A1C();
  sub_100AC0A1C();
  swift_allocObject();
  sub_100AC0A68();
  sub_100AC0A68();
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  sub_10017DF08(&qword_100EAEFE0);
  sub_100AC0ABC();
  Button.init(action:label:)();
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = a1;
  uint64_t v36 = *(void *)(a1 + 40);
  uint64_t v37 = v15;
  sub_1001246C8(&qword_100EAEFB0, &qword_100EAEFB8);
  sub_10014A85C();
  uint64_t v17 = (uint64_t)v24;
  uint64_t v18 = v26;
  View.accessibilityLabel<A>(_:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v18);
  static VerticalEdge.Set.all.getter();
  sub_100AC0930();
  uint64_t v19 = v25;
  View.listRowSeparator(_:edges:)();
  sub_1001781AC(v17, &qword_100EAEFA8);
  uint64_t v20 = *(void *)(v16 + 48);
  uint64_t v21 = (uint64_t)v29;
  *long long v29 = *(void *)(v16 + 40);
  *(void *)(v21 + 8) = v20;
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D614(v21, v33);
  swift_bridgeObjectRetain();
  sub_1003F8810(v21);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v19, v31);
}

uint64_t sub_100AC028C(void *a1, uint64_t a2)
{
  return sub_1007744F0(a2);
}

double sub_100AC02C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  *(void *)&long long v24 = v4;
  *((void *)&v24 + 1) = v3;
  sub_10014A85C();
  uint64_t v5 = StringProtocol.localizedStandardRange<A>(of:)();
  if (v7)
  {
    *(void *)&long long v24 = v4;
    *((void *)&v24 + 1) = v3;
    swift_bridgeObjectRetain();
    uint64_t v13 = Text.init<A>(_:)();
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    static Color.secondary.getter();
    uint64_t v18 = Text.foregroundColor(_:)();
    uint64_t v20 = v19;
    char v22 = v21;
    swift_release();
    sub_100191924(v13, v15, v17);
    swift_bridgeObjectRelease();
    static Font.body.getter();
    Text.font(_:)();
    swift_release();
    sub_100191924(v18, v20, v22 & 1);
  }
  else
  {
    uint64_t v8 = sub_100342638(v4, v3, v5, v6);
    uint64_t v10 = v9;
    char v12 = v11 & 1;
    static Font.body.getter();
    Text.font(_:)();
    swift_release();
    sub_100191924(v8, v10, v12);
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  static Edge.Set.leading.getter();
  sub_10017DF08(&qword_100E7D430);
  sub_100501714();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v24;
  *(_OWORD *)a2 = v24;
  *(_OWORD *)(a2 + 16) = v25;
  *(_OWORD *)(a2 + 32) = v26;
  *(_OWORD *)(a2 + 48) = v27;
  *(_OWORD *)(a2 + 64) = v28;
  *(_OWORD *)(a2 + 80) = v29;
  *(unsigned char *)(a2 + 96) = v30;
  *(unsigned char *)(a2 + 97) = v31;
  return result;
}

uint64_t sub_100AC0580(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = sub_10017DF08(&qword_100E6B7A8);
  return a2(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t sub_100AC05E8()
{
  unint64_t result = qword_100EAEF38;
  if (!qword_100EAEF38)
  {
    sub_10018C6DC(&qword_100EAEF20);
    sub_1001246C8(&qword_100EAEF40, &qword_100EAEF28);
    sub_10018C6DC(&qword_100EAEF48);
    type metadata accessor for PlainListStyle();
    sub_1001246C8(&qword_100EAEF50, &qword_100EAEF48);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAEF38);
  }
  return result;
}

uint64_t sub_100AC0708()
{
  return sub_100ABF048();
}

unint64_t sub_100AC0710()
{
  unint64_t result = qword_100EAEF80;
  if (!qword_100EAEF80)
  {
    sub_10018C6DC(&qword_100E7A038);
    sub_100AC07BC();
    sub_10032DC40((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAEF80);
  }
  return result;
}

unint64_t sub_100AC07BC()
{
  unint64_t result = qword_100EAEF88;
  if (!qword_100EAEF88)
  {
    sub_10018C6DC(&qword_100E7A030);
    sub_10018C6DC(&qword_100EAEF90);
    sub_100AC0890();
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100E85058, &qword_100E85060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAEF88);
  }
  return result;
}

unint64_t sub_100AC0890()
{
  unint64_t result = qword_100EAEF98;
  if (!qword_100EAEF98)
  {
    sub_10018C6DC(&qword_100EAEF90);
    sub_100AC0930();
    sub_1001246C8(&qword_100E85068, &qword_100E85070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAEF98);
  }
  return result;
}

unint64_t sub_100AC0930()
{
  unint64_t result = qword_100EAEFA0;
  if (!qword_100EAEFA0)
  {
    sub_10018C6DC(&qword_100EAEFA8);
    sub_1001246C8(&qword_100EAEFB0, &qword_100EAEFB8);
    sub_10032DC40((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAEFA0);
  }
  return result;
}

uint64_t sub_100AC0A04(uint64_t a1, uint64_t a2)
{
  return sub_100AC0C3C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100ABF244);
}

uint64_t sub_100AC0A1C()
{
  uint64_t v1 = sub_1001A12BC();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_100AC0A68()
{
  uint64_t v1 = sub_1001A12BC();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_100126010();
  v4(v3);
  return v0;
}

double sub_100AC0AB4@<D0>(uint64_t a1@<X8>)
{
  return sub_100ABF8A8(*(void *)(v1 + 16), a1);
}

unint64_t sub_100AC0ABC()
{
  unint64_t result = qword_100EAEFE8;
  if (!qword_100EAEFE8)
  {
    sub_10018C6DC(&qword_100EAEFE0);
    sub_100501714();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAEFE8);
  }
  return result;
}

uint64_t sub_100AC0B38()
{
  return sub_100ABFBA0();
}

unint64_t sub_100AC0B40()
{
  unint64_t result = qword_100EAF000;
  if (!qword_100EAF000)
  {
    sub_10018C6DC(&qword_100E7A048);
    sub_10018C6DC(&qword_100EAEFA8);
    sub_100AC0930();
    swift_getOpaqueTypeConformance2();
    sub_10032DC40((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF000);
  }
  return result;
}

uint64_t sub_100AC0C24(uint64_t a1, uint64_t a2)
{
  return sub_100AC0C3C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100ABFD9C);
}

uint64_t sub_100AC0C3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = type metadata accessor for LegacySearchResultsView();
  sub_1001627C0(v6);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a3(a1, a2, v8);
}

uint64_t sub_100AC0CB8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100AC0CF0(char *a1)
{
  return sub_100AC0580(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 16));
}

uint64_t sub_100AC0D10()
{
  uint64_t v1 = (int *)(type metadata accessor for LegacySearchResultsView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = type metadata accessor for SearchLocation();
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(*(void *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = v0 + v2;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[9];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v9 = v0 + v5 + *(int *)(v4 + 32);
  uint64_t v10 = type metadata accessor for Location();
  if (!sub_100181EF0(v10)) {
    (*(void (**)(unint64_t, unint64_t))(*(void *)(v0 + v5 - 8) + 8))(v9, v0 + v5);
  }

  return swift_deallocObject();
}

uint64_t sub_100AC0F28()
{
  uint64_t v1 = *(void *)(type metadata accessor for LegacySearchResultsView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for SearchLocation();
  sub_1001627C0(v4);
  return sub_100AC028C((void *)(v0 + v2), v0 + ((v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

double sub_100AC0FC8@<D0>(uint64_t a1@<X8>)
{
  return sub_100AC02C0(*(void *)(v1 + 16), a1);
}

uint64_t sub_100AC0FD0()
{
  return sub_100AC1020(&qword_100EAF008, &qword_100EAF010, (void (*)(void))sub_100AC108C);
}

uint64_t sub_100AC1020(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100AC108C()
{
  unint64_t result = qword_100EAF018;
  if (!qword_100EAF018)
  {
    sub_10018C6DC(&qword_100EAEF30);
    sub_100AC05E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF018);
  }
  return result;
}

uint64_t sub_100AC1110@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  *(void *)(inited + 72) = &type metadata for LocationAuthorizationState;
  *(unsigned char *)(inited + 48) = a1;
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100E6F038);
  a2[4] = sub_10003734C();
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100AC11F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100AC1110(*v1, a1);
}

uint64_t sub_100AC11FC()
{
  sub_100AC1288();

  return ShortDescribable.description.getter();
}

unint64_t sub_100AC123C()
{
  unint64_t result = qword_100EAF020;
  if (!qword_100EAF020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF020);
  }
  return result;
}

unint64_t sub_100AC1288()
{
  unint64_t result = qword_100EAF028;
  if (!qword_100EAF028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF028);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationAuthorizationAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AC13A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationAuthorizationAction()
{
  return &type metadata for LocationAuthorizationAction;
}

uint64_t *sub_100AC13D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v11 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
    char v16 = &v9[v11];
    char v12 = &v10[v11];
    uint64_t v13 = type metadata accessor for WeatherDescription();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v16, v12, v13);
    *(uint64_t *)((char *)v7 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_100AC151C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

void *sub_100AC15C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
  uint64_t v15 = &v8[v10];
  uint64_t v11 = &v9[v10];
  uint64_t v12 = type metadata accessor for WeatherDescription();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v15, v11, v12);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100AC16B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100AC17B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  uint64_t v9 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_100AC1868(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *(void *)((char *)a1 + *(int *)(a3 + 28)) = *(void *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100AC1944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AC1958);
}

uint64_t sub_100AC1958(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SunriseSunsetMonthlyViewModel();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100AC19E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AC19F4);
}

void *sub_100AC19F4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SunriseSunsetMonthlyViewModel();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetDetailPreprocessedDataModel()
{
  uint64_t result = qword_100EAF088;
  if (!qword_100EAF088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100AC1ABC()
{
  uint64_t result = type metadata accessor for SunriseSunsetMonthlyViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100AC1B58(uint64_t a1, uint64_t a2)
{
  sub_1002E504C();
  if (v4)
  {
    sub_1002E551C();
    if (v5)
    {
      uint64_t v6 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
      if (sub_100BD898C(*(void *)(a1 + *(int *)(v6 + 24)), *(void *)(a2 + *(int *)(v6 + 24))))
      {
        type metadata accessor for SunriseSunsetMonthlyViewModel();
        if (static WeatherDescription.== infix(_:_:)())
        {
          sub_1002E5674();
        }
      }
    }
  }
}

uint64_t sub_100AC1C24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F69746176656C65 && a2 == 0xEA0000000000736ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CBD710 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CBD730 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72756F4865746164 && a2 == 0xEF676E6972745373)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_100AC1DFC(char a1)
{
  unint64_t result = 0x6F69746176656C65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x72756F4865746164;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AC1EAC(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EAF110);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_100AC254C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017DF08(&qword_100EAF0D8);
  sub_100AC2840();
  sub_10017DBD8();
  if (!v1)
  {
    sub_10017DF08(&qword_100EAF0E8);
    sub_100AC291C(&qword_100EAF120, (void (*)(void))sub_1005671FC);
    sub_10017DBD8();
    type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
    type metadata accessor for SunriseSunsetMonthlyViewModel();
    sub_1001CF098(&qword_100EAF128, (void (*)(uint64_t))type metadata accessor for SunriseSunsetMonthlyViewModel);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017DF08(&qword_100EAF100);
    sub_100AC2998();
    sub_10017DBD8();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100AC20DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for SunriseSunsetMonthlyViewModel();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  sub_10017DF08(&qword_100EAF0C8);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v8 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = (void *)(v11 - v10);
  sub_1001B1E64(a1, a1[3]);
  sub_100AC254C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v17) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_10017DF08(&qword_100EAF0D8);
  sub_100AC2598();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *uint64_t v12 = v18;
  sub_10017DF08(&qword_100EAF0E8);
  sub_100AC291C(&qword_100EAF0F0, (void (*)(void))sub_100567158);
  sub_100180B34();
  v12[1] = v18;
  LOBYTE(v18) = 2;
  sub_1001CF098(&qword_100EAF0F8, (void (*)(uint64_t))type metadata accessor for SunriseSunsetMonthlyViewModel);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_100AC2674(v6, (uint64_t)v12 + *(int *)(v8 + 24));
  sub_10017DF08(&qword_100EAF100);
  sub_100AC26D8();
  sub_100180B34();
  uint64_t v14 = sub_1001883F8();
  v15(v14);
  *(void *)((char *)v12 + *(int *)(v8 + 28)) = v18;
  sub_100AC2784((uint64_t)v12, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100AC27E8((uint64_t)v12, (void (*)(void))type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
}

unint64_t sub_100AC2470()
{
  return sub_100AC1DFC(*v0);
}

uint64_t sub_100AC2478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AC1C24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AC24A0(uint64_t a1)
{
  unint64_t v2 = sub_100AC254C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AC24DC(uint64_t a1)
{
  unint64_t v2 = sub_100AC254C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AC2518@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100AC20DC(a1, a2);
}

uint64_t sub_100AC2530(void *a1)
{
  return sub_100AC1EAC(a1);
}

unint64_t sub_100AC254C()
{
  unint64_t result = qword_100EAF0D0;
  if (!qword_100EAF0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF0D0);
  }
  return result;
}

unint64_t sub_100AC2598()
{
  unint64_t result = qword_100EAF0E0;
  if (!qword_100EAF0E0)
  {
    sub_10018C6DC(&qword_100EAF0D8);
    sub_1001CF098(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001CF098(&qword_100E86C08, (void (*)(uint64_t))&type metadata accessor for Elevation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF0E0);
  }
  return result;
}

uint64_t sub_100AC2674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetMonthlyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100AC26D8()
{
  unint64_t result = qword_100EAF108;
  if (!qword_100EAF108)
  {
    sub_10018C6DC(&qword_100EAF100);
    sub_1001CF098(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF108);
  }
  return result;
}

uint64_t sub_100AC2784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AC27E8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_100AC2840()
{
  unint64_t result = qword_100EAF118;
  if (!qword_100EAF118)
  {
    sub_10018C6DC(&qword_100EAF0D8);
    sub_1001CF098(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001CF098(&qword_100E86C20, (void (*)(uint64_t))&type metadata accessor for Elevation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF118);
  }
  return result;
}

uint64_t sub_100AC291C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100EAF0E8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100AC2998()
{
  unint64_t result = qword_100EAF130;
  if (!qword_100EAF130)
  {
    sub_10018C6DC(&qword_100EAF100);
    sub_1001CF098(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF130);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SunriseSunsetDetailPreprocessedDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AC2B10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailPreprocessedDataModel.CodingKeys()
{
  return &type metadata for SunriseSunsetDetailPreprocessedDataModel.CodingKeys;
}

unint64_t sub_100AC2B4C()
{
  unint64_t result = qword_100EAF138;
  if (!qword_100EAF138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF138);
  }
  return result;
}

unint64_t sub_100AC2B9C()
{
  unint64_t result = qword_100EAF140;
  if (!qword_100EAF140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF140);
  }
  return result;
}

unint64_t sub_100AC2BEC()
{
  unint64_t result = qword_100EAF148;
  if (!qword_100EAF148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF148);
  }
  return result;
}

uint64_t destroy for NotificationSettingsContentView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 72);
}

uint64_t initializeWithCopy for NotificationSettingsContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = a2 + 72;
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(a1 + 72, v6, v8);
  return a1;
}

uint64_t assignWithCopy for NotificationSettingsContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1000C1E18((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
  return a1;
}

uint64_t assignWithTake for NotificationSettingsContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for NotificationSettingsContentView()
{
  return &type metadata for NotificationSettingsContentView;
}

uint64_t sub_100AC2F3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100AC2F58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for InsetGroupedListStyle();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100EAF150);
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v31 = sub_10017DF08(&qword_100EAF158);
  sub_100179C0C();
  uint64_t v32 = v17;
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v34 = sub_10017DF08(&qword_100EAF160);
  sub_100179C0C();
  uint64_t v33 = v22;
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v30 = v25 - v24;
  sub_10017DF08(&qword_100EAF168);
  sub_1001246C8(&qword_100EAF170, &qword_100EAF168);
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  uint64_t v26 = sub_1001246C8(&qword_100EAF178, &qword_100EAF150);
  View.listStyle<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  sub_100AC5DB0();
  __src[0] = v10;
  __src[1] = v3;
  __src[2] = v26;
  __src[3] = &protocol witness table for InsetGroupedListStyle;
  swift_getOpaqueTypeConformance2();
  View.alert(isPresented:content:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v21, v31);
  sub_1008100C4(v2, (uint64_t)__src);
  uint64_t v27 = swift_allocObject();
  memcpy((void *)(v27 + 16), __src, 0x70uLL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(a1, v30, v34);
  long long v28 = (void (**)())(a1 + *(int *)(sub_10017DF08(&qword_100EAF180) + 36));
  *long long v28 = sub_100AC6FE4;
  v28[1] = (void (*)())v27;
  v28[2] = 0;
  v28[3] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v30, v34);
}

uint64_t sub_100AC3344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a1;
  uint64_t v112 = a2;
  uint64_t v107 = sub_10017DF08(&qword_100EAF188);
  __chkstk_darwin(v107);
  uint64_t v106 = (char *)&v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100EAF190);
  uint64_t v110 = *(void *)(v3 - 8);
  uint64_t v111 = v3;
  __chkstk_darwin(v3);
  uint64_t v109 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v108 = (char *)&v90 - v6;
  uint64_t v104 = sub_10017DF08(&qword_100EAF198);
  uint64_t v94 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  char v93 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10017DF08(&qword_100EAF1A0);
  __chkstk_darwin(v101);
  char v103 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_10017DF08(&qword_100EAF1A8);
  __chkstk_darwin(v100);
  uint64_t v99 = (uint64_t)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_10017DF08(&qword_100EAF1B0);
  uint64_t v92 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  char v91 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EAF1B8);
  __chkstk_darwin(v11 - 8);
  uint64_t v105 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v114 = (uint64_t)&v90 - v14;
  uint64_t v97 = sub_10017DF08(&qword_100E852D0);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_10017DF08(&qword_100E7B4A8) - 8;
  __chkstk_darwin(v95);
  uint64_t v18 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v115 = (uint64_t)&v90 - v20;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v21 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  uint64_t v116 = static Color.clear.getter();
  uint64_t v28 = AnyView.init<A>(_:)();
  uint64_t v116 = v21;
  uint64_t v117 = v23;
  char v118 = v27;
  uint64_t v119 = v25;
  uint64_t v120 = v28;
  static VerticalEdge.Set.all.getter();
  sub_10017DF08(&qword_100E852D8);
  sub_1006244CC();
  uint64_t v29 = v98;
  View.listRowSeparator(_:edges:)();
  sub_100191924(v21, v23, v27);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = v96;
  uint64_t v31 = v97;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v18, v16, v97);
  uint64_t v32 = &v18[*(int *)(v95 + 44)];
  v32[32] = 0;
  *(_OWORD *)uint64_t v32 = 0u;
  *((_OWORD *)v32 + 1) = 0u;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v31);
  uint64_t v113 = v18;
  sub_10020E72C((uint64_t)v18, v115, &qword_100E7B4A8);
  LODWORD(v18) = *(unsigned __int8 *)(v29 + 48);
  LocalizedStringKey.init(stringLiteral:)();
  if (v18 == 2)
  {
    uint64_t v33 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v35 = v34;
    char v37 = v36 & 1;
    static Color.secondary.getter();
    uint64_t v38 = Text.foregroundColor(_:)();
    uint64_t v40 = v39;
    char v42 = v41;
    uint64_t v44 = v43;
    swift_release();
    sub_100191924(v33, v35, v37);
    swift_bridgeObjectRelease();
    uint64_t v116 = v38;
    uint64_t v117 = v40;
    char v118 = v42 & 1;
    uint64_t v119 = v44;
    uint64_t v45 = sub_100AC4058(v99);
    __chkstk_darwin(v45);
    sub_10017DF08(&qword_100EAF1F8);
    sub_1001246C8(&qword_100EAF1F0, &qword_100EAF1F8);
    sub_100AC7018();
    uint64_t v46 = v91;
    Section<>.init(header:footer:content:)();
    uint64_t v47 = v92;
    uint64_t v48 = v102;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v103, v46, v102);
    swift_storeEnumTagMultiPayload();
    sub_100AC7164(&qword_100EAF1E8, &qword_100EAF1B0, &qword_100EAF1F0, &qword_100EAF1F8);
    sub_100AC7164(&qword_100EAF200, &qword_100EAF198, &qword_100EAF1C8, &qword_100EAF1C0);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  }
  else
  {
    uint64_t v49 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v51 = v50;
    char v53 = v52 & 1;
    static Color.secondary.getter();
    uint64_t v54 = Text.foregroundColor(_:)();
    uint64_t v56 = v55;
    char v58 = v57;
    uint64_t v60 = v59;
    swift_release();
    sub_100191924(v49, v51, v53);
    swift_bridgeObjectRelease();
    uint64_t v116 = v54;
    uint64_t v117 = v56;
    char v118 = v58 & 1;
    uint64_t v119 = v60;
    uint64_t v61 = sub_100AC4058(v99);
    __chkstk_darwin(v61);
    sub_10017DF08(&qword_100EAF1C0);
    sub_1001246C8(&qword_100EAF1C8, &qword_100EAF1C0);
    sub_100AC7018();
    uint64_t v62 = v93;
    Section<>.init(header:footer:content:)();
    uint64_t v63 = v94;
    uint64_t v64 = v104;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v103, v62, v104);
    swift_storeEnumTagMultiPayload();
    sub_100AC7164(&qword_100EAF1E8, &qword_100EAF1B0, &qword_100EAF1F0, &qword_100EAF1F8);
    sub_100AC7164(&qword_100EAF200, &qword_100EAF198, &qword_100EAF1C8, &qword_100EAF1C0);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v64);
  }
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v65 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v67 = v66;
  char v69 = v68 & 1;
  static Color.secondary.getter();
  uint64_t v70 = Text.foregroundColor(_:)();
  uint64_t v72 = v71;
  char v74 = v73;
  uint64_t v76 = v75;
  swift_release();
  sub_100191924(v65, v67, v69);
  swift_bridgeObjectRelease();
  uint64_t v116 = v70;
  uint64_t v117 = v72;
  char v118 = v74 & 1;
  uint64_t v119 = v76;
  uint64_t v77 = sub_100AC58CC();
  __chkstk_darwin(v77);
  sub_10017DF08(&qword_100EAF208);
  sub_100AC7214();
  sub_100AC72AC();
  uint64_t v78 = v108;
  Section<>.init(header:footer:content:)();
  uint64_t v79 = (uint64_t)v113;
  sub_1001262FC(v115, (uint64_t)v113, &qword_100E7B4A8);
  uint64_t v80 = v114;
  uint64_t v81 = v105;
  sub_1001262FC(v114, v105, &qword_100EAF1B8);
  uint64_t v83 = v109;
  uint64_t v82 = v110;
  uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  uint64_t v85 = v111;
  v84(v109, v78, v111);
  uint64_t v86 = v112;
  sub_1001262FC(v79, v112, &qword_100E7B4A8);
  uint64_t v87 = sub_10017DF08(&qword_100EAF230);
  sub_1001262FC(v81, v86 + *(int *)(v87 + 48), &qword_100EAF1B8);
  v84((char *)(v86 + *(int *)(v87 + 64)), v83, v85);
  v88 = *(void (**)(char *, uint64_t))(v82 + 8);
  v88(v78, v85);
  sub_1001781AC(v80, &qword_100EAF1B8);
  sub_1001781AC(v115, &qword_100E7B4A8);
  v88(v83, v85);
  sub_1001781AC(v81, &qword_100EAF1B8);
  return sub_1001781AC((uint64_t)v113, &qword_100E7B4A8);
}

uint64_t sub_100AC4058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v55 = a1;
  uint64_t v54 = type metadata accessor for AccessibilityActionKind();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v51 = &v45[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10017DF08(&qword_100E65360);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)&v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = type metadata accessor for OpenURLAction();
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for AttributedString();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v56 = sub_10017DF08(&qword_100EAF1E0);
  __chkstk_darwin(v56);
  uint64_t v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v52 = sub_10017DF08(&qword_100EAF1A8);
  __chkstk_darwin(v52);
  uint64_t v50 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v47 = v1;
  sub_100AC5FD0((uint64_t)v12);
  uint64_t v16 = Text.init(_:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  int v46 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1008100C4(v2, (uint64_t)__src);
  uint64_t v32 = swift_allocObject();
  memcpy((void *)(v32 + 16), __src, 0x70uLL);
  OpenURLAction.init(handler:)();
  uint64_t v33 = (char *)v7 + *(int *)(v5 + 36);
  uint64_t v34 = v48;
  uint64_t v35 = v49;
  (*(void (**)(char *, unsigned char *, uint64_t))(v48 + 16))(v33, v9, v49);
  *uint64_t v7 = KeyPath;
  sub_1001262FC((uint64_t)v7, (uint64_t)&v14[*(int *)(v56 + 36)], &qword_100E65360);
  *(void *)uint64_t v14 = v16;
  *((void *)v14 + 1) = v18;
  v14[16] = v22;
  *((void *)v14 + 3) = v20;
  v14[32] = v46;
  *((void *)v14 + 5) = v24;
  *((void *)v14 + 6) = v26;
  *((void *)v14 + 7) = v28;
  *((void *)v14 + 8) = v30;
  v14[72] = 0;
  sub_100190CC4(v16, v18, v22);
  swift_bridgeObjectRetain();
  sub_1001781AC((uint64_t)v7, &qword_100E65360);
  (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v9, v35);
  sub_100191924(v16, v18, v22);
  swift_bridgeObjectRelease();
  char v36 = v51;
  static AccessibilityActionKind.default.getter();
  sub_1008100C4(v47, (uint64_t)__src);
  uint64_t v37 = swift_allocObject();
  memcpy((void *)(v37 + 16), __src, 0x70uLL);
  sub_100AC70C4();
  uint64_t v38 = (uint64_t)v50;
  View.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v36, v54);
  sub_1001781AC((uint64_t)v14, &qword_100EAF1E0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v39 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v41 = v40;
  char v43 = v42 & 1;
  ModifiedContent<>.accessibilityHint(_:)();
  sub_100191924(v39, v41, v43);
  swift_bridgeObjectRelease();
  return sub_1001781AC(v38, &qword_100EAF1A8);
}

uint64_t sub_100AC45DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v17 = *a1;
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  char v7 = *((unsigned char *)a1 + 32);
  char v8 = *((unsigned char *)a1 + 33);
  char v9 = *((unsigned char *)a1 + 34);
  uint64_t v10 = (uint64_t)(a1 + 9);
  char v11 = *((unsigned char *)a1 + 35);
  sub_10020D948((uint64_t)(a1 + 9), (uint64_t)&v21);
  int v16 = *((unsigned __int8 *)a1 + 48);
  char v12 = *((unsigned char *)a1 + 50);
  v30[0] = v4;
  v30[1] = v3;
  v30[2] = v5;
  v30[3] = v6;
  char v31 = v7;
  char v32 = v8;
  char v33 = v9;
  char v34 = v11;
  sub_1001262E4(&v21, (uint64_t)v35);
  v35[40] = v16 == 2;
  v35[41] = v12;
  v35[42] = v11;
  if (v16 == 2) {
    char v13 = v9;
  }
  else {
    char v13 = 0;
  }
  v35[48] = v13;
  uint64_t v36 = 0;
  if (v16 == 2) {
    char v14 = v7;
  }
  else {
    char v14 = 0;
  }
  sub_10020D948(v10, (uint64_t)v20);
  *(void *)&long long v21 = v17;
  *((void *)&v21 + 1) = v3;
  uint64_t v22 = v5;
  uint64_t v23 = v6;
  char v24 = v7;
  char v25 = v8;
  char v26 = v9;
  char v27 = v11;
  sub_1001262E4(v20, (uint64_t)v28);
  v28[40] = v16 == 2;
  v28[41] = v12;
  v28[42] = v8;
  v28[48] = v14;
  uint64_t v29 = 0;
  sub_10080372C((uint64_t)v30, (uint64_t)v20);
  sub_1006358A0((uint64_t)&v21, (uint64_t)v19);
  sub_10080372C((uint64_t)v20, a2);
  sub_1006358A0((uint64_t)v19, a2 + 104);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1006359E0((uint64_t)&v21);
  sub_1008037A4((uint64_t)v30);
  sub_1006359E0((uint64_t)v19);
  return sub_1008037A4((uint64_t)v20);
}

uint64_t sub_100AC476C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E65388);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v53[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  char v9 = &v53[-v8];
  uint64_t v10 = sub_10017DF08(&qword_100EAF258);
  __chkstk_darwin(v10 - 8);
  uint64_t v66 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  char v14 = &v53[-v13];
  uint64_t v65 = static VerticalAlignment.center.getter();
  sub_100AC4C80((uint64_t)v80);
  v81[352] = 1;
  memcpy(&v81[7], v80, 0x158uLL);
  int v64 = 1;
  *(void *)char v14 = static VerticalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v62 = v76;
  uint64_t v63 = v74[46];
  int v56 = v77;
  int v57 = v75;
  uint64_t v60 = v79;
  uint64_t v61 = v78;
  unsigned __int8 v15 = static Edge.Set.leading.getter();
  int v16 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v15) {
    int v16 = Edge.Set.init(rawValue:)();
  }
  int v59 = v16;
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  unsigned __int8 v25 = static Edge.Set.trailing.getter();
  int v26 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v25) {
    int v26 = Edge.Set.init(rawValue:)();
  }
  int v54 = v26;
  uint64_t v27 = *(int *)(sub_10017DF08(&qword_100EAF260) + 44);
  char v58 = v14;
  uint64_t v28 = &v14[v27];
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  char v72 = 1;
  char v71 = v57;
  char v70 = v56;
  unsigned __int8 v69 = 0;
  unsigned __int8 v68 = 0;
  sub_1008100C4(a1, (uint64_t)v74);
  uint64_t v37 = swift_allocObject();
  memcpy((void *)(v37 + 16), v74, 0x70uLL);
  Button.init(action:label:)();
  char v38 = v72;
  char v39 = v71;
  char v40 = v70;
  int v56 = v69;
  int v57 = v68;
  uint64_t v41 = v9;
  uint64_t v55 = v9;
  char v42 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16);
  v42(v6, v41, v3);
  *(void *)uint64_t v28 = 0;
  v28[8] = v38;
  *((void *)v28 + 2) = v63;
  v28[24] = v39;
  *((void *)v28 + 4) = v62;
  v28[40] = v40;
  uint64_t v43 = v60;
  *((void *)v28 + 6) = v61;
  *((void *)v28 + 7) = v43;
  v28[64] = v59;
  *((void *)v28 + 9) = v18;
  *((void *)v28 + 10) = v20;
  *((void *)v28 + 11) = v22;
  *((void *)v28 + 12) = v24;
  v28[104] = v56;
  v28[112] = v54;
  *((void *)v28 + 15) = v30;
  *((void *)v28 + 16) = v32;
  *((void *)v28 + 17) = v34;
  *((void *)v28 + 18) = v36;
  v28[152] = v57;
  uint64_t v44 = sub_10017DF08(&qword_100EAF268);
  v42(&v28[*(int *)(v44 + 48)], v6, v3);
  uint64_t v45 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v45(v55, v3);
  v45(v6, v3);
  uint64_t v46 = (uint64_t)v58;
  uint64_t v47 = v66;
  sub_1001262FC((uint64_t)v58, (uint64_t)v66, &qword_100EAF258);
  uint64_t v48 = v65;
  v73[0] = v65;
  v73[1] = 0;
  char v49 = v64;
  LOBYTE(v73[2]) = v64;
  memcpy((char *)&v73[2] + 1, v81, 0x15FuLL);
  uint64_t v50 = v67;
  memcpy(v67, v73, 0x170uLL);
  uint64_t v51 = sub_10017DF08(&qword_100EAF270);
  sub_1001262FC((uint64_t)v47, (uint64_t)v50 + *(int *)(v51 + 48), &qword_100EAF258);
  sub_100AC74A0((uint64_t)v73);
  sub_1001781AC(v46, &qword_100EAF258);
  sub_1001781AC((uint64_t)v47, &qword_100EAF258);
  v74[0] = v48;
  v74[1] = 0;
  LOBYTE(v74[2]) = v49;
  memcpy((char *)&v74[2] + 1, v81, 0x15FuLL);
  return sub_100AC7538((uint64_t)v74);
}

uint64_t sub_100AC4C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v12 = static HorizontalAlignment.leading.getter();
  sub_100AC4E24(__src);
  v14[232] = 1;
  memcpy(&v14[7], __src, 0xE1uLL);
  uint64_t v11 = static HorizontalAlignment.leading.getter();
  sub_100AC52BC(&v19);
  uint64_t v2 = v19;
  uint64_t v10 = v20;
  char v3 = v21;
  uint64_t v4 = *(void *)&v22[7];
  uint64_t v5 = *(void *)&v22[15];
  uint64_t v6 = *(void *)&v22[23];
  char v7 = v22[31];
  uint64_t v8 = *(void *)&v22[39];
  v15[0] = v12;
  v15[1] = 0;
  LOBYTE(v15[2]) = 1;
  memcpy((char *)&v15[2] + 1, v14, 0xE8uLL);
  memcpy((void *)a1, v15, 0xF9uLL);
  char v18 = 1;
  char v17 = v3;
  char v16 = v7;
  *(void *)(a1 + 256) = v11;
  *(void *)(a1 + 264) = 0;
  *(unsigned char *)(a1 + 272) = 1;
  *(void *)(a1 + 280) = v2;
  *(void *)(a1 + 288) = v10;
  *(unsigned char *)(a1 + 296) = v3;
  *(void *)(a1 + 304) = v4;
  *(void *)(a1 + 312) = v5;
  *(void *)(a1 + 320) = v6;
  *(unsigned char *)(a1 + 328) = v7;
  *(void *)(a1 + 336) = v8;
  sub_100AC75D0((uint64_t)v15);
  sub_100190CC4(v2, v10, v3);
  swift_bridgeObjectRetain();
  sub_100190CC4(v5, v6, v7);
  swift_bridgeObjectRetain();
  sub_100191924(v2, v10, v3);
  swift_bridgeObjectRelease();
  sub_100191924(v5, v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v19 = v12;
  uint64_t v20 = 0;
  char v21 = 1;
  memcpy(v22, v14, sizeof(v22));
  return sub_100AC75FC((uint64_t)&v19);
}

uint64_t sub_100AC4E24@<X0>(void *a1@<X8>)
{
  char v71 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v1 - 8);
  char v3 = &v49[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Image.ResizingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Image.init(systemName:)();
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v8 = type metadata accessor for SymbolRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 0, 1, v8);
  uint64_t v70 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_1001781AC((uint64_t)v3, &qword_100E6C0C0);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v9 = v107;
  unsigned __int8 v10 = v108;
  unsigned __int8 v11 = v110;
  uint64_t v68 = v111;
  uint64_t v69 = v109;
  uint64_t v67 = v112;
  LOBYTE(v3) = static Edge.Set.top.getter();
  char v12 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v3) {
    char v12 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v65 = v14;
  uint64_t v66 = v13;
  uint64_t v63 = v16;
  uint64_t v64 = v15;
  unsigned __int8 v17 = static Edge.Set.leading.getter();
  char v18 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v17) {
    char v18 = Edge.Set.init(rawValue:)();
  }
  char v19 = v12;
  EdgeInsets.init(_all:)();
  uint64_t v61 = v21;
  uint64_t v62 = v20;
  uint64_t v59 = v23;
  uint64_t v60 = v22;
  unsigned __int8 v24 = static Edge.Set.trailing.getter();
  int v25 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v24) {
    int v25 = Edge.Set.init(rawValue:)();
  }
  unsigned __int8 v76 = 1;
  unsigned __int8 v75 = v10;
  unsigned __int8 v74 = v11;
  unsigned __int8 v73 = 0;
  unsigned __int8 v72 = 0;
  EdgeInsets.init(_all:)();
  uint64_t v55 = v27;
  uint64_t v56 = v26;
  uint64_t v53 = v29;
  uint64_t v54 = v28;
  unsigned __int8 v30 = v76;
  int v50 = v74;
  int v51 = v25;
  int v57 = v75;
  int v58 = v73;
  int v52 = v72;
  char v77 = 0;
  uint64_t v31 = v69;
  uint64_t v32 = v70;
  v78[0] = v70;
  v78[1] = 0;
  LOWORD(v78[2]) = v76;
  uint64_t v33 = v9;
  v78[3] = v9;
  LOBYTE(v78[4]) = v75;
  v78[5] = v69;
  LOBYTE(v78[6]) = v74;
  char v34 = v25;
  uint64_t v36 = v67;
  uint64_t v35 = v68;
  v78[7] = v68;
  v78[8] = v67;
  char v37 = v19;
  LOBYTE(v78[9]) = v19;
  uint64_t v39 = v65;
  uint64_t v38 = v66;
  v78[10] = v66;
  v78[11] = v65;
  uint64_t v41 = v63;
  uint64_t v40 = v64;
  v78[12] = v64;
  v78[13] = v63;
  LOBYTE(v78[14]) = v73;
  LOBYTE(v78[15]) = v18;
  uint64_t v43 = v61;
  uint64_t v42 = v62;
  v78[16] = v62;
  v78[17] = v61;
  uint64_t v45 = v59;
  uint64_t v44 = v60;
  v78[18] = v60;
  v78[19] = v59;
  LOBYTE(v78[20]) = v72;
  LOBYTE(v78[21]) = v34;
  v78[22] = v26;
  v78[23] = v27;
  v78[24] = v28;
  v78[25] = v29;
  LOBYTE(v78[26]) = 0;
  uint64_t v46 = v33;
  uint64_t v47 = v71;
  memcpy(v71, v78, 0xD1uLL);
  char v79 = 1;
  v47[27] = 0;
  *((unsigned char *)v47 + 224) = 1;
  v80[0] = v32;
  v80[1] = 0;
  unsigned __int8 v81 = v30;
  char v82 = 0;
  uint64_t v83 = v46;
  char v84 = v57;
  uint64_t v85 = v31;
  char v86 = v50;
  uint64_t v87 = v35;
  uint64_t v88 = v36;
  char v89 = v37;
  uint64_t v90 = v38;
  uint64_t v91 = v39;
  uint64_t v92 = v40;
  uint64_t v93 = v41;
  char v94 = v58;
  char v95 = v18;
  uint64_t v96 = v42;
  uint64_t v97 = v43;
  uint64_t v98 = v44;
  uint64_t v99 = v45;
  char v100 = v52;
  char v101 = v51;
  uint64_t v102 = v56;
  uint64_t v103 = v55;
  uint64_t v104 = v54;
  uint64_t v105 = v53;
  char v106 = 0;
  sub_1000618F8((uint64_t)v78);
  return sub_1002171E0((uint64_t)v80);
}

uint64_t sub_100AC52BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (uint64_t)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  __chkstk_darwin(v4);
  char v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v8 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Font.Weight.medium.getter();
  uint64_t v13 = Text.fontWeight(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  sub_100191924(v8, v10, v12);
  swift_bridgeObjectRelease();
  uint64_t v18 = v63;
  uint64_t v19 = v64;
  uint64_t v20 = *(void (**)(char *, void, uint64_t))(v64 + 104);
  uint64_t v57 = v64 + 104;
  int v58 = v20;
  v20(v7, enum case for Font.TextStyle.body(_:), v63);
  uint64_t v56 = type metadata accessor for Font.Design();
  uint64_t v53 = v3;
  _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v56);
  static Font.system(_:design:weight:)();
  sub_1001781AC(v3, &qword_100E63F80);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v64 = v19 + 8;
  uint64_t v55 = v21;
  v21(v7, v18);
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  LOBYTE(v3) = v25;
  swift_release();
  sub_100191924(v13, v15, v17);
  swift_bridgeObjectRelease();
  id v54 = self;
  id v26 = [v54 labelColor];
  Color.init(uiColor:)();
  uint64_t v27 = Text.foregroundColor(_:)();
  uint64_t v60 = v28;
  uint64_t v61 = v27;
  uint64_t v59 = v29;
  LOBYTE(v13) = v30;
  swift_release();
  LOBYTE(v13) = v13 & 1;
  sub_100191924(v22, v24, v3 & 1);
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v31 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v33 = v32;
  LOBYTE(v24) = v34 & 1;
  uint64_t v35 = v63;
  v58(v7, enum case for Font.TextStyle.subheadline(_:), v63);
  uint64_t v36 = v53;
  _s7Weather24LocationCompositionStateOwst_0(v53, 1, 1, v56);
  static Font.system(_:design:weight:)();
  sub_1001781AC(v36, &qword_100E63F80);
  v55(v7, v35);
  uint64_t v37 = Text.font(_:)();
  uint64_t v39 = v38;
  LOBYTE(v35) = v40;
  swift_release();
  sub_100191924(v31, v33, v24);
  swift_bridgeObjectRelease();
  id v41 = [v54 labelColor];
  Color.init(uiColor:)();
  uint64_t v42 = Text.foregroundColor(_:)();
  uint64_t v44 = v43;
  LOBYTE(v24) = v45;
  uint64_t v47 = v46;
  swift_release();
  sub_100191924(v37, v39, v35 & 1);
  swift_bridgeObjectRelease();
  char v65 = v13;
  uint64_t v49 = v61;
  uint64_t v48 = v62;
  uint64_t v51 = v59;
  uint64_t v50 = v60;
  *uint64_t v62 = v61;
  v48[1] = v51;
  *((unsigned char *)v48 + 16) = v13;
  v48[3] = v50;
  v48[4] = v42;
  v48[5] = v44;
  *((unsigned char *)v48 + 48) = v24 & 1;
  v48[7] = v47;
  sub_100190CC4(v49, v51, v13);
  swift_bridgeObjectRetain();
  sub_100190CC4(v42, v44, v24 & 1);
  swift_bridgeObjectRetain();
  sub_100191924(v42, v44, v24 & 1);
  swift_bridgeObjectRelease();
  sub_100191924(v49, v51, v65);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100AC57D8@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Color.blue.getter();
  uint64_t v7 = Text.foregroundColor(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_100191924(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_100AC58CC()
{
  uint64_t v1 = sub_10017DF08(&qword_100E79020);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for AttributedText();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v8 = [self mainBundle];
  v21._countAndFlagsBits = 0xD00000000000002FLL;
  v21._object = (void *)0x8000000100CBD900;
  v9._object = (void *)0x8000000100CBD8E0;
  v9._countAndFlagsBits = 0xD000000000000019;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v21);

  sub_100AC6BB0();
  uint64_t v12 = type metadata accessor for AttributedString();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v12);
  sub_1008100C4(v0, (uint64_t)__src);
  uint64_t v13 = swift_allocObject();
  memcpy((void *)(v13 + 16), __src, 0x70uLL);
  AttributedText.init(_:accessibilityAttributedText:onInteraction:)();
  __src[0] = v11;
  sub_10014A85C();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  LOBYTE(v8) = v17 & 1;
  sub_100AC7698((unint64_t *)&qword_100EA0028, (void (*)(uint64_t))&type metadata accessor for AttributedText);
  View.accessibilityHint(_:)();
  sub_100191924(v14, v16, (char)v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100AC5B8C(uint64_t a1)
{
  uint64_t v5 = *(void *)(a1 + 40);
  swift_getKeyPath();
  sub_1008100C4(a1, (uint64_t)__src);
  uint64_t v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), __src, 0x70uLL);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EAF238);
  sub_10017DF08(&qword_100EAF220);
  sub_1001246C8(&qword_100EAF240, &qword_100EAF238);
  sub_1001246C8(&qword_100EAF218, &qword_100EAF220);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100AC5CD8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  int v6 = *(_DWORD *)(a1 + 32);
  sub_10020D948(a2 + 72, (uint64_t)&v4);
  sub_100AC73A4((uint64_t)v5);
  sub_100AC73DC();
  sub_100AC7428();
  return NavigationLink.init(destination:label:)();
}

uint64_t sub_100AC5D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  LODWORD(v2) = *(_DWORD *)(a1 + 32);
  int16x8_t v5 = (int16x8_t)vmovl_u8(*(uint8x8_t *)&v2);
  v5.i64[0] &= 0xFF01FF01FF01FF01;
  *(_DWORD *)(a2 + 32) = vmovn_s16(v5).u32[0];
  return sub_100AC73A4(a1);
}

uint64_t sub_100AC5DB0()
{
  sub_1008100C4(v0, (uint64_t)v6);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  long long v2 = (void *)swift_allocObject();
  v2[2] = v1;
  v2[3] = &protocol witness table for MainActor;
  memcpy(v2 + 4, v6, 0x70uLL);
  sub_1008100C4(v0, (uint64_t)v6);
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = &protocol witness table for MainActor;
  memcpy(v4 + 4, v6, 0x70uLL);
  Binding.init(get:set:)();
  return v6[0];
}

uint64_t sub_100AC5EC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1008100C4(a1, (uint64_t)v5);
  uint64_t v3 = (char *)swift_allocObject();
  memcpy(v3 + 16, v5, 0x70uLL);
  sub_1003DCB10(4, (uint64_t)LocationSearchEntityFromStringResolver.init(), 0, (char *)sub_100AC7844, v3, a2);
  return swift_release();
}

uint64_t sub_100AC5F60(uint64_t a1)
{
  return sub_100626C90();
}

void sub_100AC5F94(uint64_t a1)
{
}

uint64_t sub_100AC5FD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v68 = sub_10017DF08(&qword_100E7B450);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v3 - 8);
  unsigned __int8 v74 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for AttributeContainer();
  char v71 = *(void (***)(char *, uint64_t))(v76 - 8);
  __chkstk_darwin(v76);
  unsigned __int8 v75 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for AttributedString.Runs.Run();
  uint64_t v70 = *(void (***)(char *, uint64_t))(v91 - 8);
  __chkstk_darwin(v91 - 8);
  uint64_t v90 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E847D8);
  __chkstk_darwin(v7 - 8);
  uint64_t v87 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for AttributedString.Runs.Index();
  uint64_t v89 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  char v86 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v64 - v11;
  uint64_t v64 = type metadata accessor for AttributedString.Runs();
  uint64_t v13 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AttributedString();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E847E0);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v88 = (uint64_t)&v64 - v25;
  uint64_t v26 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v26 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  AttributedString.init(localized:bundle:linkA:linkB:)();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  id v95 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  sub_100624A48();
  AttributedString.subscript.setter();
  uint64_t v92 = swift_getKeyPath();
  swift_getKeyPath();
  id v95 = (id)static Color.secondary.getter();
  unint64_t v66 = sub_1005F3088();
  AttributedString.subscript.setter();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v69 = a1;
  uint64_t v28 = a1;
  uint64_t v29 = v64;
  v27(v19, v28, v16);
  AttributedString.runs.getter();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  char v30 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v80 = v13 + 16;
  char v79 = v30;
  v30(v23, (uint64_t)v15, v29);
  sub_100AC7698(&qword_100E847F0, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs);
  dispatch thunk of Collection.startIndex.getter();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v13 + 8);
  unsigned __int8 v81 = v15;
  uint64_t v82 = v13 + 8;
  uint64_t v78 = v31;
  v31(v15, v29);
  uint64_t v33 = v88;
  uint64_t v32 = v89;
  char v34 = &v23[*(int *)(v21 + 44)];
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
  uint64_t v85 = v12;
  uint64_t v36 = v65;
  v35(v34, v12, v65);
  sub_10020E72C((uint64_t)v23, v33, &qword_100E847E0);
  uint64_t v37 = *(int *)(v21 + 44);
  uint64_t v38 = v36;
  uint64_t v39 = v33 + v37;
  char v40 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v89 = v32 + 16;
  uint64_t v83 = (void (**)(char *, uint64_t))(v32 + 8);
  char v84 = v40;
  char v77 = (void (**)(uint64_t))(v70 + 2);
  unsigned __int8 v72 = (void (**)(char *, uint64_t, uint64_t))(v70 + 4);
  ++v71;
  ++v70;
  for (i = v33 + v37; ; uint64_t v39 = i)
  {
    id v41 = v85;
    v84(v85, v39, v38);
    uint64_t v42 = v86;
    dispatch thunk of Collection.endIndex.getter();
    sub_100AC7698(&qword_100E847F8, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index);
    char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v44 = v29;
    char v45 = *v83;
    (*v83)(v42, v38);
    v45(v41, v38);
    if (v43) {
      break;
    }
    uint64_t v46 = (void (*)(id *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v47 = v87;
    uint64_t v48 = v91;
    (*v77)(v87);
    v46(&v95, 0);
    uint64_t v49 = v81;
    v79(v81, v33, v44);
    dispatch thunk of Collection.formIndex(after:)();
    v78(v49, v44);
    _s7Weather24LocationCompositionStateOwst_0(v47, 0, 1, v48);
    if (_s7Weather24LocationCompositionStateOwet_0(v47, 1, v48) == 1) {
      return sub_1001781AC(v88, &qword_100E847E0);
    }
    uint64_t v29 = v44;
    (*v72)(v90, v47, v91);
    uint64_t v50 = v75;
    AttributedString.Runs.Run.attributes.getter();
    uint64_t v51 = swift_getKeyPath();
    __chkstk_darwin(v51);
    *(&v64 - 2) = v52;
    swift_getKeyPath();
    sub_1005F2FD0();
    uint64_t v53 = (uint64_t)v74;
    AttributeContainer.subscript.getter();
    swift_release();
    (*v71)(v50, v76);
    uint64_t v54 = type metadata accessor for URL();
    int v55 = _s7Weather24LocationCompositionStateOwet_0(v53, 1, v54);
    sub_1001781AC(v53, &qword_100E749B0);
    if (v55 == 1)
    {
      (*v70)(v90, v91);
    }
    else
    {
      uint64_t v56 = (uint64_t)v67;
      uint64_t v57 = v90;
      AttributedString.Runs.Run.range.getter();
      uint64_t v58 = swift_getKeyPath();
      __chkstk_darwin(v58);
      *(&v64 - 2) = v59;
      swift_getKeyPath();
      uint64_t v94 = static Color.blue.getter();
      uint64_t v60 = v57;
      sub_1001246C8((unint64_t *)&qword_100E7B460, &qword_100E7B450);
      uint64_t v61 = (void (*)(id *, void))AttributedString.subscript.modify();
      AttributedSubstring.subscript.setter();
      v61(&v95, 0);
      uint64_t v29 = v44;
      uint64_t v62 = v91;
      sub_1001781AC(v56, &qword_100E7B450);
      (*v70)(v60, v62);
    }
    uint64_t v33 = v88;
  }
  _s7Weather24LocationCompositionStateOwst_0(v87, 1, 1, v91);
  return sub_1001781AC(v88, &qword_100E847E0);
}

uint64_t sub_100AC6B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1001B1E64((void *)(a2 + 72), *(void *)(a2 + 96));
  sub_1001B1E64((void *)(*v2 + 192), *(void *)(*v2 + 216));
  sub_1008EB700();

  return static OpenURLAction.Result.handled.getter();
}

void sub_100AC6B6C(uint64_t a1)
{
  uint64_t v1 = sub_1001B1E64((void *)(a1 + 72), *(void *)(a1 + 96));
  sub_1001B1E64((void *)(*v1 + 192), *(void *)(*v1 + 216));
  sub_1008EB700();
}

uint64_t sub_100AC6BB0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v24 = *(void *)(v0 + 56);
  sub_10017DF08(&qword_100E7B440);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v26 = self;
  swift_bridgeObjectRetain();
  uint64_t v25 = NSFontAttributeName;
  id v3 = [v26 preferredFontForTextStyle:UIFontTextStyleFootnote];
  uint64_t v4 = sub_1001ABC4C(0, (unint64_t *)&qword_100E73CF0);
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  uint64_t v5 = self;
  uint64_t v6 = NSForegroundColorAttributeName;
  id v7 = [v5 secondaryLabelColor];
  uint64_t v8 = sub_1001ABC4C(0, (unint64_t *)&qword_100E7B3F8);
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 80) = v7;
  type metadata accessor for Key(0);
  sub_100AC7698(&qword_100E63070, type metadata accessor for Key);
  uint64_t v9 = Dictionary.init(dictionaryLiteral:)();
  id v10 = objc_allocWithZone((Class)NSAttributedString);
  sub_1004C79C4(v24, v1, v9);
  id v11 = [self mainBundle];
  v27._object = (void *)0x8000000100CBD930;
  v12._countAndFlagsBits = 0x6F6D206E7261654CLL;
  v12._object = (void *)0xAD0000A680E26572;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v27._countAndFlagsBits = 0xD000000000000066;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v27);

  uint64_t v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_100C33BA0;
  *(void *)(v15 + 32) = v6;
  uint64_t v16 = v6;
  static Color.blue.getter();
  *(void *)(v15 + 40) = UIColor.init(_:)();
  *(void *)(v15 + 64) = v8;
  *(void *)(v15 + 72) = v25;
  uint64_t v17 = v25;
  *(void *)(v15 + 80) = [v26 preferredFontForTextStyle:UIFontTextStyleFootnote];
  *(void *)(v15 + 104) = v4;
  *(void *)(v15 + 112) = NSLinkAttributeName;
  *(void *)(v15 + 144) = &type metadata for String;
  *(void *)(v15 + 120) = 0x6C6F686563616C70;
  *(void *)(v15 + 128) = 0xEB00000000726564;
  uint64_t v18 = NSLinkAttributeName;
  uint64_t v19 = Dictionary.init(dictionaryLiteral:)();
  id v20 = objc_allocWithZone((Class)NSAttributedString);
  id v21 = sub_1004C79C4(v14._countAndFlagsBits, (uint64_t)v14._object, v19);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E92578);
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100C31F30;
  *(void *)(v22 + 32) = v21;
  specialized Array._endMutation()();
  return NSAttributedString.init(_:arguments:)();
}

uint64_t sub_100AC6F60(uint64_t a1, uint64_t a2)
{
  return 0;
}

unsigned char *sub_100AC6F94(unsigned char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*result & 1) == 0)
  {
    sub_1001B1E64((void *)(a4 + 72), *(void *)(a4 + 96));
    return (unsigned char *)sub_100624D2C();
  }
  return result;
}

uint64_t sub_100AC6FD0@<X0>(uint64_t a1@<X8>)
{
  return sub_100AC3344(*(void *)(v1 + 16), a1);
}

uint64_t sub_100AC6FD8@<X0>(uint64_t a1@<X8>)
{
  return sub_100AC5EC4(*(void *)(v1 + 16), a1);
}

void sub_100AC6FE4()
{
  sub_100AC5F94(v0 + 16);
}

void sub_100AC6FF4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 83);
}

unsigned char *sub_100AC7004(unsigned char *a1)
{
  return sub_100AC6F94(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_100AC7010@<X0>(void *a1@<X8>)
{
  return sub_100AC476C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100AC7018()
{
  unint64_t result = qword_100EAF1D0;
  if (!qword_100EAF1D0)
  {
    sub_10018C6DC(&qword_100EAF1A8);
    sub_100AC70C4();
    sub_100AC7698((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF1D0);
  }
  return result;
}

unint64_t sub_100AC70C4()
{
  unint64_t result = qword_100EAF1D8;
  if (!qword_100EAF1D8)
  {
    sub_10018C6DC(&qword_100EAF1E0);
    sub_10029F298();
    sub_1001246C8(&qword_100E65358, &qword_100E65360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF1D8);
  }
  return result;
}

uint64_t sub_100AC7164(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    sub_1001246C8(a3, a4);
    sub_100AC7018();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100AC720C()
{
  return sub_100AC5B8C(*(void *)(v0 + 16));
}

unint64_t sub_100AC7214()
{
  unint64_t result = qword_100EAF210;
  if (!qword_100EAF210)
  {
    sub_10018C6DC(&qword_100EAF208);
    sub_1001246C8(&qword_100EAF218, &qword_100EAF220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF210);
  }
  return result;
}

unint64_t sub_100AC72AC()
{
  unint64_t result = qword_100EAF228;
  if (!qword_100EAF228)
  {
    sub_10018C6DC(&qword_100EAF188);
    sub_100AC7698((unint64_t *)&qword_100EA0028, (void (*)(uint64_t))&type metadata accessor for AttributedText);
    sub_100AC7698((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF228);
  }
  return result;
}

uint64_t sub_100AC7388@<X0>(uint64_t a1@<X8>)
{
  return sub_100AC45DC(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_100AC7394(uint64_t a1)
{
  return sub_100AC5CD8(a1, v1 + 16);
}

uint64_t sub_100AC739C@<X0>(uint64_t a1@<X8>)
{
  return sub_100AC5D88(*(void *)(v1 + 16), a1);
}

uint64_t sub_100AC73A4(uint64_t a1)
{
  return a1;
}

unint64_t sub_100AC73DC()
{
  unint64_t result = qword_100EAF248;
  if (!qword_100EAF248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF248);
  }
  return result;
}

unint64_t sub_100AC7428()
{
  unint64_t result = qword_100EAF250;
  if (!qword_100EAF250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF250);
  }
  return result;
}

uint64_t sub_100AC7478(uint64_t a1)
{
  return sub_100AC6F60(a1, v1 + 16);
}

uint64_t sub_100AC7484()
{
  return sub_100AC5F60(v0 + 16);
}

uint64_t sub_100AC74A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 304);
  uint64_t v3 = *(void *)(a1 + 312);
  char v4 = *(unsigned char *)(a1 + 320);
  uint64_t v5 = *(void *)(a1 + 336);
  uint64_t v6 = *(void *)(a1 + 344);
  char v7 = *(unsigned char *)(a1 + 352);
  swift_retain();
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_100190CC4(v5, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100AC7538(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 304);
  uint64_t v3 = *(void *)(a1 + 312);
  char v4 = *(unsigned char *)(a1 + 320);
  uint64_t v5 = *(void *)(a1 + 336);
  uint64_t v6 = *(void *)(a1 + 344);
  char v7 = *(unsigned char *)(a1 + 352);
  swift_release();
  sub_100191924(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_100191924(v5, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100AC75D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100AC75FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100AC7634(uint64_t a1)
{
  return sub_100AC6B14(a1, v1 + 16);
}

void sub_100AC7640()
{
  sub_100AC6B6C(v0 + 16);
}

uint64_t sub_100AC7658()
{
  return swift_release();
}

uint64_t sub_100AC7660(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100AC7674(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100AC7698(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100AC76FC()
{
  unint64_t result = qword_100EAF278;
  if (!qword_100EAF278)
  {
    sub_10018C6DC(&qword_100EAF180);
    sub_10018C6DC(&qword_100EAF158);
    sub_10018C6DC(&qword_100EAF150);
    type metadata accessor for InsetGroupedListStyle();
    sub_1001246C8(&qword_100EAF178, &qword_100EAF150);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF278);
  }
  return result;
}

uint64_t sub_100AC7848()
{
  return ToolbarTemplate.init(items:centerItem:)(&_swiftEmptyArrayStorage, 0);
}

uint64_t sub_100AC7858@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EAF320);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EAF328);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v9)
  {
    sub_1001B1E64(a1, a1[3]);
    uint64_t v8 = type metadata accessor for ToolbarTemplate();
    dispatch thunk of ResolverType.resolve<A>(_:)();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v8);
    if (result != 1)
    {
      type metadata accessor for ToolbarManager();
      uint64_t result = ToolbarManager.__allocating_init(commandCenter:template:)();
      *a2 = result;
      a2[1] = (uint64_t)&protocol witness table for ToolbarManager;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100AC79A0()
{
  return static BackgroundMoonData.read(from:)();
}

void sub_100AC79B8()
{
}

uint64_t sub_100AC79D0()
{
  return swift_getOpaqueTypeConformance2();
}

Swift::Int sub_100AC79EC@<X0>(Swift::Int *a1@<X8>)
{
  Hasher.init()();
  type metadata accessor for DetailChartViewModel();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  type metadata accessor for ChartViewModel(0);
  type metadata accessor for Date();
  sub_1007BF71C();
  dispatch thunk of Hashable.hash(into:)();
  memcpy(__dst, v3, sizeof(__dst));
  Swift::Int result = Hasher.finalize()();
  *a1 = result;
  return result;
}

BOOL sub_100AC7AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t v72 = type metadata accessor for ConditionDetailChartFooterViewModel();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v67 = v4;
  uint64_t v71 = sub_10017DF08(&qword_100EAF330);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v70 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E820F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v69 = (uint64_t)&v58 - v10;
  __chkstk_darwin(v11);
  Swift::String v13 = (char *)&v58 - v12;
  uint64_t v14 = type metadata accessor for LollipopViewModel();
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EAF338);
  sub_100162E4C();
  __chkstk_darwin(v19);
  id v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E82140);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  Swift::String v27 = (char *)&v58 - v26;
  __chkstk_darwin(v28);
  char v30 = (char *)&v58 - v29;
  uint64_t v31 = a1;
  uint64_t v32 = v73;
  if ((static ConditionDetailChartHeaderStringModel.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v62 = v24;
  uint64_t v63 = v18;
  uint64_t v65 = v27;
  unint64_t v66 = v30;
  uint64_t v60 = v17;
  uint64_t v61 = v13;
  uint64_t v64 = v21;
  uint64_t v33 = v71;
  uint64_t v34 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  if (*(unsigned __int8 *)(v31 + *(int *)(v34 + 20)) != *(unsigned __int8 *)(v32 + *(int *)(v34 + 20))) {
    return 0;
  }
  uint64_t v35 = v31;
  if (*(unsigned __int8 *)(v31 + *(int *)(v34 + 24)) != *(unsigned __int8 *)(v32 + *(int *)(v34 + 24))) {
    return 0;
  }
  uint64_t v36 = type metadata accessor for DetailChartViewModel();
  if ((sub_10071B540(v31 + *(int *)(v36 + 20), v32 + *(int *)(v36 + 20)) & 1) == 0) {
    return 0;
  }
  uint64_t v37 = (uint64_t)v66;
  sub_1001262FC(v31 + *(int *)(v36 + 24), (uint64_t)v66, &qword_100E82140);
  uint64_t v59 = v36;
  uint64_t v38 = (uint64_t)v65;
  sub_1001262FC(v32 + *(int *)(v36 + 24), (uint64_t)v65, &qword_100E82140);
  uint64_t v39 = (uint64_t)v64;
  uint64_t v40 = (uint64_t)&v64[*(int *)(v63 + 48)];
  sub_1001262FC(v37, (uint64_t)v64, &qword_100E82140);
  sub_1001262FC(v38, v40, &qword_100E82140);
  sub_10017A6D8(v39);
  if (!v47)
  {
    uint64_t v46 = v62;
    sub_1001262FC(v39, (uint64_t)v62, &qword_100E82140);
    sub_10017A6D8(v40);
    if (!v47)
    {
      uint64_t v50 = v60;
      sub_100AC81F4(v40, (uint64_t)v60, (void (*)(void))type metadata accessor for LollipopViewModel);
      BOOL v51 = *v46 == *v50 && v46[1] == v50[1];
      if (!v51 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
        || (static DetailChartDataPoint.== infix(_:_:)() & 1) == 0
        || *(double *)((char *)v46 + *(int *)(v14 + 24)) != *(double *)((char *)v50 + *(int *)(v14 + 24)))
      {
        sub_100ACB0A8((uint64_t)v50, (void (*)(void))type metadata accessor for LollipopViewModel);
        sub_1001781AC((uint64_t)v65, &qword_100E82140);
        sub_1001781AC((uint64_t)v66, &qword_100E82140);
        sub_100ACB0A8((uint64_t)v46, (void (*)(void))type metadata accessor for LollipopViewModel);
        uint64_t v49 = v39;
        uint64_t v48 = &qword_100E82140;
        goto LABEL_33;
      }
      char v52 = sub_1004CA7DC((uint64_t)v46 + *(int *)(v14 + 28), (uint64_t)v50 + *(int *)(v14 + 28));
      sub_100ACB0A8((uint64_t)v50, (void (*)(void))type metadata accessor for LollipopViewModel);
      sub_1001781AC((uint64_t)v65, &qword_100E82140);
      sub_1001781AC((uint64_t)v66, &qword_100E82140);
      sub_100ACB0A8((uint64_t)v46, (void (*)(void))type metadata accessor for LollipopViewModel);
      sub_1001781AC(v39, &qword_100E82140);
      if ((v52 & 1) == 0) {
        return 0;
      }
      goto LABEL_10;
    }
    sub_1001781AC(v38, &qword_100E82140);
    sub_1001781AC((uint64_t)v66, &qword_100E82140);
    sub_100ACB0A8((uint64_t)v46, (void (*)(void))type metadata accessor for LollipopViewModel);
LABEL_18:
    uint64_t v48 = &qword_100EAF338;
    uint64_t v49 = v39;
    goto LABEL_33;
  }
  sub_1001781AC(v38, &qword_100E82140);
  sub_1001781AC(v37, &qword_100E82140);
  sub_10017A6D8(v40);
  if (!v47) {
    goto LABEL_18;
  }
  sub_1001781AC(v39, &qword_100E82140);
LABEL_10:
  uint64_t v41 = v59;
  uint64_t v42 = (uint64_t)v61;
  sub_1001262FC(v35 + *(int *)(v59 + 28), (uint64_t)v61, &qword_100E820F0);
  uint64_t v43 = v69;
  sub_1001262FC(v32 + *(int *)(v41 + 28), v69, &qword_100E820F0);
  uint64_t v44 = v70;
  uint64_t v45 = v70 + *(int *)(v33 + 48);
  sub_1001262FC(v42, v70, &qword_100E820F0);
  sub_1001262FC(v43, v45, &qword_100E820F0);
  sub_100181AA8(v44);
  if (v47)
  {
    sub_1001781AC(v43, &qword_100E820F0);
    sub_1001781AC(v42, &qword_100E820F0);
    sub_100181AA8(v45);
    if (v47)
    {
      sub_1001781AC(v44, &qword_100E820F0);
      return 1;
    }
  }
  else
  {
    uint64_t v53 = v68;
    sub_1001262FC(v44, v68, &qword_100E820F0);
    sub_100181AA8(v45);
    if (!v54)
    {
      uint64_t v56 = v67;
      sub_100AC81F4(v45, v67, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
      char v57 = sub_100665894(v53, v56);
      sub_100ACB0A8(v56, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
      sub_1001781AC(v43, &qword_100E820F0);
      sub_1001781AC(v42, &qword_100E820F0);
      sub_100ACB0A8(v53, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
      sub_1001781AC(v44, &qword_100E820F0);
      return (v57 & 1) != 0;
    }
    sub_1001781AC(v43, &qword_100E820F0);
    sub_1001781AC(v42, &qword_100E820F0);
    sub_100ACB0A8(v53, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
  }
  uint64_t v48 = &qword_100EAF330;
  uint64_t v49 = v44;
LABEL_33:
  sub_1001781AC(v49, v48);
  return 0;
}

uint64_t type metadata accessor for DetailChartViewModel()
{
  uint64_t result = qword_100EAF398;
  if (!qword_100EAF398) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100AC81F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void *sub_100AC8254(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v39 = *a2;
    *a1 = *a2;
    uint64_t v40 = (void *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v40;
  }
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
  *((unsigned char *)a1 + *(int *)(v8 + 24)) = *((unsigned char *)a2 + *(int *)(v8 + 24));
  v163 = a1;
  uint64_t v164 = a3;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  v165 = a2;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = *(void *)((char *)a2 + v9);
  uint64_t v13 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = v12;
  *((void *)v10 + 1) = v13;
  uint64_t v14 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v10[v15];
  uint64_t v17 = &v11[v15];
  uint64_t v18 = type metadata accessor for ChartKind();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  *(void *)&v10[v14[6]] = *(void *)&v11[v14[6]];
  uint64_t v20 = v14[7];
  id v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  uint64_t v23 = type metadata accessor for DetailChartExtrema();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  *(void *)&v10[v14[8]] = *(void *)&v11[v14[8]];
  *(void *)&v10[v14[9]] = *(void *)&v11[v14[9]];
  *(_OWORD *)&v10[v14[10]] = *(_OWORD *)&v11[v14[10]];
  uint64_t v25 = v14[11];
  uint64_t v26 = &v10[v25];
  Swift::String v27 = &v11[v25];
  uint64_t v28 = *(void **)v27;
  uint64_t v29 = (void *)*((void *)v27 + 1);
  uint64_t v30 = *((void *)v27 + 2);
  LOBYTE(v24) = v27[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v28, v29, v30, v24);
  *(void *)uint64_t v26 = v28;
  *((void *)v26 + 1) = v29;
  *((void *)v26 + 2) = v30;
  v26[24] = (char)v24;
  uint64_t v31 = v14[12];
  uint64_t v32 = &v10[v31];
  uint64_t v33 = &v11[v31];
  *(void *)&v10[v31] = *(void *)&v11[v31];
  uint64_t v34 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v35 = &v32[v34];
  uint64_t v36 = &v33[v34];
  uint64_t v37 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v41 = v14[13];
  uint64_t v42 = &v10[v41];
  uint64_t v43 = &v11[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  uint64_t v44 = v14[14];
  uint64_t v45 = &v10[v44];
  uint64_t v46 = &v11[v44];
  uint64_t v47 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
  {
    uint64_t v48 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v45 = *(void *)v46;
    uint64_t v49 = *(int *)(v47 + 48);
    uint64_t v50 = &v45[v49];
    BOOL v51 = &v46[v49];
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v37))
    {
      uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v50, v51, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v37);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
  }
  *(void *)&v10[v14[15]] = *(void *)&v11[v14[15]];
  uint64_t v53 = v14[16];
  char v54 = &v10[v53];
  int v55 = &v11[v53];
  uint64_t v56 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
  *(void *)&v10[v14[17]] = *(void *)&v11[v14[17]];
  uint64_t v57 = v14[18];
  uint64_t v58 = &v10[v57];
  uint64_t v59 = &v11[v57];
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
  swift_bridgeObjectRetain();
  v60(v58, v59, v37);
  v60(&v10[v14[19]], &v11[v14[19]], v37);
  v60(&v10[v14[20]], &v11[v14[20]], v37);
  uint64_t v61 = v14[21];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  uint64_t v64 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
  {
    uint64_t v65 = sub_10017DF08(&qword_100E6B640);
    memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
  }
  *(void *)&v10[v14[22]] = *(void *)&v11[v14[22]];
  uint64_t v66 = v14[23];
  uint64_t v67 = &v10[v66];
  uint64_t v68 = &v11[v66];
  uint64_t v69 = type metadata accessor for ChartPeakMarkStyle();
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
  swift_bridgeObjectRetain();
  v70(v67, v68, v69);
  *(void *)&v10[v14[24]] = *(void *)&v11[v14[24]];
  *(void *)&v10[v14[25]] = *(void *)&v11[v14[25]];
  uint64_t v71 = v14[26];
  uint64_t v72 = &v10[v71];
  uint64_t v73 = &v11[v71];
  uint64_t v74 = type metadata accessor for ChartViewModelInterpolationMode();
  unsigned __int8 v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
  swift_bridgeObjectRetain();
  v75(v72, v73, v74);
  uint64_t v76 = v14[27];
  char v77 = &v10[v76];
  uint64_t v78 = &v11[v76];
  uint64_t v79 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
  uint64_t v80 = v14[28];
  unsigned __int8 v81 = &v10[v80];
  uint64_t v82 = &v11[v80];
  uint64_t v83 = *((void *)v82 + 1);
  *(void *)unsigned __int8 v81 = *(void *)v82;
  *((void *)v81 + 1) = v83;
  uint64_t v84 = v14[29];
  uint64_t v85 = &v10[v84];
  char v86 = &v11[v84];
  uint64_t v87 = *((void *)v86 + 1);
  *(void *)uint64_t v85 = *(void *)v86;
  *((void *)v85 + 1) = v87;
  uint64_t v88 = v14[30];
  uint64_t v89 = &v10[v88];
  uint64_t v90 = &v11[v88];
  uint64_t v91 = *((void *)v90 + 1);
  *(void *)uint64_t v89 = *(void *)v90;
  *((void *)v89 + 1) = v91;
  uint64_t v92 = v14[31];
  uint64_t v93 = &v10[v92];
  uint64_t v94 = &v11[v92];
  uint64_t v95 = *((void *)v94 + 1);
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = v95;
  uint64_t v96 = v14[32];
  uint64_t v97 = &v10[v96];
  uint64_t v98 = &v11[v96];
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = *(void *)v98;
  *((void *)v97 + 1) = v99;
  uint64_t v100 = v14[33];
  char v101 = &v10[v100];
  uint64_t v102 = &v11[v100];
  uint64_t v103 = *((void *)v102 + 1);
  *(void *)char v101 = *(void *)v102;
  *((void *)v101 + 1) = v103;
  uint64_t v40 = v163;
  uint64_t v104 = *(int *)(v164 + 24);
  uint64_t v105 = (void *)((char *)v163 + v104);
  char v106 = (void *)((char *)v165 + v104);
  uint64_t v107 = (int *)type metadata accessor for LollipopViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, (uint64_t)v107))
  {
    uint64_t v108 = sub_10017DF08(&qword_100E82140);
    memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
    uint64_t v110 = v164;
    uint64_t v109 = v165;
    goto LABEL_24;
  }
  uint64_t v111 = v106[1];
  *uint64_t v105 = *v106;
  v105[1] = v111;
  uint64_t v112 = v107[5];
  uint64_t v113 = (char *)v105 + v112;
  uint64_t v114 = (char *)v106 + v112;
  uint64_t v115 = type metadata accessor for DetailChartDataPoint();
  uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
  swift_bridgeObjectRetain();
  v116(v113, v114, v115);
  *(void *)((char *)v105 + v107[6]) = *(void *)((char *)v106 + v107[6]);
  uint64_t v117 = v107[7];
  char v118 = (char *)v105 + v117;
  uint64_t v119 = (char *)v106 + v117;
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v125 = *((void *)v119 + 1);
    *(void *)char v118 = *(void *)v119;
    *((void *)v118 + 1) = v125;
    uint64_t v126 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v127 = v126[5];
    v162 = &v118[v127];
    uint64_t v128 = &v119[v127];
    uint64_t v129 = type metadata accessor for AttributedString();
    uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
    swift_bridgeObjectRetain();
    v130(v162, v128, v129);
    uint64_t v131 = v126[6];
    uint64_t v132 = &v118[v131];
    uint64_t v133 = &v119[v131];
    uint64_t v134 = *((void *)v133 + 1);
    *(void *)uint64_t v132 = *(void *)v133;
    *((void *)v132 + 1) = v134;
    uint64_t v135 = v126[7];
    uint64_t v136 = &v118[v135];
    uint64_t v137 = &v119[v135];
    uint64_t v138 = *((void *)v137 + 1);
    *(void *)uint64_t v136 = *(void *)v137;
    *((void *)v136 + 1) = v138;
    uint64_t v139 = v126[8];
    uint64_t v140 = &v118[v139];
    uint64_t v141 = &v119[v139];
    uint64_t v142 = *((void *)v141 + 1);
    *(void *)uint64_t v140 = *(void *)v141;
    *((void *)v140 + 1) = v142;
    uint64_t v143 = v126[9];
    v144 = &v118[v143];
    uint64_t v145 = &v119[v143];
    uint64_t v146 = *((void *)v145 + 1);
    *(void *)v144 = *(void *)v145;
    *((void *)v144 + 1) = v146;
    uint64_t v147 = v126[10];
    v148 = &v118[v147];
    v149 = &v119[v147];
    uint64_t v150 = *((void *)v149 + 1);
    *(void *)v148 = *(void *)v149;
    *((void *)v148 + 1) = v150;
    v118[v126[11]] = v119[v126[11]];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v151 = *((void *)v119 + 1);
      *(void *)char v118 = *(void *)v119;
      *((void *)v118 + 1) = v151;
      uint64_t v152 = *((void *)v119 + 3);
      *((void *)v118 + 2) = *((void *)v119 + 2);
      *((void *)v118 + 3) = v152;
      uint64_t v153 = *((void *)v119 + 5);
      *((void *)v118 + 4) = *((void *)v119 + 4);
      *((void *)v118 + 5) = v153;
      goto LABEL_23;
    }
    uint64_t v121 = *((void *)v119 + 1);
    *(void *)char v118 = *(void *)v119;
    *((void *)v118 + 1) = v121;
    uint64_t v122 = *((void *)v119 + 3);
    *((void *)v118 + 2) = *((void *)v119 + 2);
    *((void *)v118 + 3) = v122;
    uint64_t v123 = *((void *)v119 + 5);
    *((void *)v118 + 4) = *((void *)v119 + 4);
    *((void *)v118 + 5) = v123;
    uint64_t v124 = *((void *)v119 + 7);
    *((void *)v118 + 6) = *((void *)v119 + 6);
    *((void *)v118 + 7) = v124;
    v118[64] = v119[64];
    v118[65] = v119[65];
  }
  swift_bridgeObjectRetain();
LABEL_23:
  uint64_t v40 = v163;
  uint64_t v110 = v164;
  uint64_t v109 = v165;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, (uint64_t)v107);
LABEL_24:
  uint64_t v154 = *(int *)(v110 + 28);
  v155 = (void *)((char *)v40 + v154);
  v156 = (void *)((char *)v109 + v154);
  uint64_t v157 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v157))
  {
    uint64_t v158 = sub_10017DF08(&qword_100E820F0);
    memcpy(v155, v156, *(void *)(*(void *)(v158 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v159 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v159 - 8) + 16))(v155, v156, v159);
    }
    else
    {
      uint64_t v160 = v156[1];
      void *v155 = *v156;
      v155[1] = v160;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v155, 0, 1, v157);
  }
  return v40;
}

uint64_t sub_100AC8D3C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = type metadata accessor for ChartKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = v5 + v6[7];
  uint64_t v10 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v5 + v6[11]), *(void **)(v5 + v6[11] + 8), *(void *)(v5 + v6[11] + 16), *(unsigned char *)(v5 + v6[11] + 24));
  uint64_t v11 = v5 + v6[12];
  uint64_t v12 = v11 + *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v13 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  uint64_t v14 = v5 + v6[14];
  uint64_t v15 = sub_10017DF08(&qword_100E6BF10);
  if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
  {
    swift_release();
    uint64_t v16 = v14 + *(int *)(v15 + 48);
    if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v16, v13);
    }
  }
  uint64_t v17 = v5 + v6[16];
  uint64_t v18 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v19(v5 + v6[18], v13);
  v19(v5 + v6[19], v13);
  v19(v5 + v6[20], v13);
  uint64_t v20 = v5 + v6[21];
  uint64_t v21 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = v5 + v6[23];
  uint64_t v23 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = v5 + v6[26];
  uint64_t v25 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  uint64_t v26 = v5 + v6[27];
  uint64_t v27 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v28 = a1 + a2[6];
  uint64_t v29 = type metadata accessor for LollipopViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29))
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = v28 + *(int *)(v29 + 20);
    uint64_t v31 = type metadata accessor for DetailChartDataPoint();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
    uint64_t v32 = v28 + *(int *)(v29 + 28);
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = v32 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
      uint64_t v35 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  uint64_t v36 = a1 + a2[7];
  uint64_t v37 = type metadata accessor for ConditionDetailChartFooterViewModel();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v37);
  if (!result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = type metadata accessor for TemperatureChartKind();
      uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8);
      return v40(v36, v39);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100AC93F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v159 = a1;
  uint64_t v160 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v161 = a2;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8);
  uint64_t v12 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = v11;
  *((void *)v9 + 1) = v12;
  uint64_t v13 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = &v9[v14];
  uint64_t v16 = v10 + v14;
  uint64_t v17 = type metadata accessor for ChartKind();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  *(void *)&v9[v13[6]] = *(void *)(v10 + v13[6]);
  uint64_t v19 = v13[7];
  uint64_t v20 = &v9[v19];
  uint64_t v21 = v10 + v19;
  uint64_t v22 = type metadata accessor for DetailChartExtrema();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  *(void *)&v9[v13[8]] = *(void *)(v10 + v13[8]);
  *(void *)&v9[v13[9]] = *(void *)(v10 + v13[9]);
  *(_OWORD *)&v9[v13[10]] = *(_OWORD *)(v10 + v13[10]);
  uint64_t v24 = v13[11];
  uint64_t v25 = &v9[v24];
  uint64_t v26 = v10 + v24;
  uint64_t v27 = *(void **)v26;
  uint64_t v28 = *(void **)(v26 + 8);
  uint64_t v29 = *(void *)(v26 + 16);
  LOBYTE(v23) = *(unsigned char *)(v26 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v27, v28, v29, v23);
  *(void *)uint64_t v25 = v27;
  *((void *)v25 + 1) = v28;
  *((void *)v25 + 2) = v29;
  v25[24] = (char)v23;
  uint64_t v30 = v13[12];
  uint64_t v31 = &v9[v30];
  uint64_t v32 = v10 + v30;
  *(void *)&v9[v30] = *(void *)(v10 + v30);
  uint64_t v33 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v34 = &v31[v33];
  uint64_t v35 = (const void *)(v32 + v33);
  uint64_t v36 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
  {
    uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
  }
  uint64_t v38 = v13[13];
  uint64_t v39 = &v9[v38];
  uint64_t v40 = v10 + v38;
  *(void *)uint64_t v39 = *(void *)v40;
  v39[8] = *(unsigned char *)(v40 + 8);
  uint64_t v41 = v13[14];
  uint64_t v42 = &v9[v41];
  uint64_t v43 = (void *)(v10 + v41);
  uint64_t v44 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    uint64_t v45 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v42 = *v43;
    uint64_t v46 = *(int *)(v44 + 48);
    uint64_t v47 = &v42[v46];
    uint64_t v48 = (char *)v43 + v46;
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v36))
    {
      uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v47, v48, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  *(void *)&v9[v13[15]] = *(void *)(v10 + v13[15]);
  uint64_t v50 = v13[16];
  BOOL v51 = &v9[v50];
  uint64_t v52 = v10 + v50;
  uint64_t v53 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  *(void *)&v9[v13[17]] = *(void *)(v10 + v13[17]);
  uint64_t v54 = v13[18];
  int v55 = &v9[v54];
  uint64_t v56 = v10 + v54;
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  v57(v55, v56, v36);
  v57(&v9[v13[19]], v10 + v13[19], v36);
  v57(&v9[v13[20]], v10 + v13[20], v36);
  uint64_t v58 = v13[21];
  uint64_t v59 = &v9[v58];
  uint64_t v60 = (const void *)(v10 + v58);
  uint64_t v61 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
  {
    uint64_t v62 = sub_10017DF08(&qword_100E6B640);
    memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
  }
  *(void *)&v9[v13[22]] = *(void *)(v10 + v13[22]);
  uint64_t v63 = v13[23];
  uint64_t v64 = &v9[v63];
  uint64_t v65 = v10 + v63;
  uint64_t v66 = type metadata accessor for ChartPeakMarkStyle();
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16);
  swift_bridgeObjectRetain();
  v67(v64, v65, v66);
  *(void *)&v9[v13[24]] = *(void *)(v10 + v13[24]);
  *(void *)&v9[v13[25]] = *(void *)(v10 + v13[25]);
  uint64_t v68 = v13[26];
  uint64_t v69 = &v9[v68];
  uint64_t v70 = v10 + v68;
  uint64_t v71 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16);
  swift_bridgeObjectRetain();
  v72(v69, v70, v71);
  uint64_t v73 = v13[27];
  uint64_t v74 = &v9[v73];
  uint64_t v75 = v10 + v73;
  uint64_t v76 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
  uint64_t v77 = v13[28];
  uint64_t v78 = &v9[v77];
  uint64_t v79 = (void *)(v10 + v77);
  uint64_t v80 = v79[1];
  *(void *)uint64_t v78 = *v79;
  *((void *)v78 + 1) = v80;
  uint64_t v81 = v13[29];
  uint64_t v82 = &v9[v81];
  uint64_t v83 = (void *)(v10 + v81);
  uint64_t v84 = v83[1];
  *(void *)uint64_t v82 = *v83;
  *((void *)v82 + 1) = v84;
  uint64_t v85 = v13[30];
  char v86 = &v9[v85];
  uint64_t v87 = (void *)(v10 + v85);
  uint64_t v88 = v87[1];
  *(void *)char v86 = *v87;
  *((void *)v86 + 1) = v88;
  uint64_t v89 = v13[31];
  uint64_t v90 = &v9[v89];
  uint64_t v91 = (void *)(v10 + v89);
  uint64_t v92 = v91[1];
  *(void *)uint64_t v90 = *v91;
  *((void *)v90 + 1) = v92;
  uint64_t v93 = v13[32];
  uint64_t v94 = &v9[v93];
  uint64_t v95 = (void *)(v10 + v93);
  uint64_t v96 = v95[1];
  *(void *)uint64_t v94 = *v95;
  *((void *)v94 + 1) = v96;
  uint64_t v97 = v13[33];
  uint64_t v98 = &v9[v97];
  uint64_t v99 = (void *)(v10 + v97);
  uint64_t v100 = v99[1];
  *(void *)uint64_t v98 = *v99;
  *((void *)v98 + 1) = v100;
  uint64_t v101 = v159;
  uint64_t v102 = *(int *)(v160 + 24);
  uint64_t v103 = (void *)(v159 + v102);
  uint64_t v104 = (void *)(v161 + v102);
  uint64_t v105 = (int *)type metadata accessor for LollipopViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, (uint64_t)v105))
  {
    uint64_t v106 = sub_10017DF08(&qword_100E82140);
    memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
    goto LABEL_22;
  }
  uint64_t v107 = v104[1];
  *uint64_t v103 = *v104;
  v103[1] = v107;
  uint64_t v108 = v105[5];
  uint64_t v109 = (char *)v103 + v108;
  uint64_t v110 = (char *)v104 + v108;
  uint64_t v111 = type metadata accessor for DetailChartDataPoint();
  uint64_t v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
  swift_bridgeObjectRetain();
  v112(v109, v110, v111);
  *(void *)((char *)v103 + v105[6]) = *(void *)((char *)v104 + v105[6]);
  uint64_t v113 = v105[7];
  uint64_t v114 = (char *)v103 + v113;
  uint64_t v115 = (char *)v104 + v113;
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v121 = *((void *)v115 + 1);
    *(void *)uint64_t v114 = *(void *)v115;
    *((void *)v114 + 1) = v121;
    uint64_t v122 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v123 = v122[5];
    uint64_t v158 = &v114[v123];
    uint64_t v124 = &v115[v123];
    uint64_t v125 = type metadata accessor for AttributedString();
    uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
    swift_bridgeObjectRetain();
    v126(v158, v124, v125);
    uint64_t v127 = v122[6];
    uint64_t v128 = &v114[v127];
    uint64_t v129 = &v115[v127];
    uint64_t v130 = *((void *)v129 + 1);
    *(void *)uint64_t v128 = *(void *)v129;
    *((void *)v128 + 1) = v130;
    uint64_t v131 = v122[7];
    uint64_t v132 = &v114[v131];
    uint64_t v133 = &v115[v131];
    uint64_t v134 = *((void *)v133 + 1);
    *(void *)uint64_t v132 = *(void *)v133;
    *((void *)v132 + 1) = v134;
    uint64_t v135 = v122[8];
    uint64_t v136 = &v114[v135];
    uint64_t v137 = &v115[v135];
    uint64_t v138 = *((void *)v137 + 1);
    *(void *)uint64_t v136 = *(void *)v137;
    *((void *)v136 + 1) = v138;
    uint64_t v139 = v122[9];
    uint64_t v140 = &v114[v139];
    uint64_t v141 = &v115[v139];
    uint64_t v142 = *((void *)v141 + 1);
    *(void *)uint64_t v140 = *(void *)v141;
    *((void *)v140 + 1) = v142;
    uint64_t v143 = v122[10];
    v144 = &v114[v143];
    uint64_t v145 = &v115[v143];
    uint64_t v146 = *((void *)v145 + 1);
    *(void *)v144 = *(void *)v145;
    *((void *)v144 + 1) = v146;
    v114[v122[11]] = v115[v122[11]];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v101 = v159;
      uint64_t v147 = *((void *)v115 + 1);
      *(void *)uint64_t v114 = *(void *)v115;
      *((void *)v114 + 1) = v147;
      uint64_t v148 = *((void *)v115 + 3);
      *((void *)v114 + 2) = *((void *)v115 + 2);
      *((void *)v114 + 3) = v148;
      uint64_t v149 = *((void *)v115 + 5);
      *((void *)v114 + 4) = *((void *)v115 + 4);
      *((void *)v114 + 5) = v149;
      goto LABEL_21;
    }
    uint64_t v117 = *((void *)v115 + 1);
    *(void *)uint64_t v114 = *(void *)v115;
    *((void *)v114 + 1) = v117;
    uint64_t v118 = *((void *)v115 + 3);
    *((void *)v114 + 2) = *((void *)v115 + 2);
    *((void *)v114 + 3) = v118;
    uint64_t v119 = *((void *)v115 + 5);
    *((void *)v114 + 4) = *((void *)v115 + 4);
    *((void *)v114 + 5) = v119;
    uint64_t v120 = *((void *)v115 + 7);
    *((void *)v114 + 6) = *((void *)v115 + 6);
    *((void *)v114 + 7) = v120;
    v114[64] = v115[64];
    v114[65] = v115[65];
  }
  swift_bridgeObjectRetain();
  uint64_t v101 = v159;
LABEL_21:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, (uint64_t)v105);
LABEL_22:
  uint64_t v150 = *(int *)(v160 + 28);
  uint64_t v151 = (void *)(v101 + v150);
  uint64_t v152 = (void *)(v161 + v150);
  uint64_t v153 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v153))
  {
    uint64_t v154 = sub_10017DF08(&qword_100E820F0);
    memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v155 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v155 - 8) + 16))(v151, v152, v155);
    }
    else
    {
      uint64_t v156 = v152[1];
      *uint64_t v151 = *v152;
      v151[1] = v156;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v153);
  }
  return v101;
}

uint64_t sub_100AC9E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v190 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *((void *)v9 + 1) = *(void *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &v9[v12];
  uint64_t v14 = v10 + v12;
  uint64_t v15 = type metadata accessor for ChartKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)&v9[v11[6]] = *(void *)(v10 + v11[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v11[7];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = v10 + v16;
  uint64_t v19 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  *(void *)&v9[v11[8]] = *(void *)(v10 + v11[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v9[v11[9]] = *(void *)(v10 + v11[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v11[10];
  uint64_t v21 = &v9[v20];
  uint64_t v22 = (void *)(v10 + v20);
  *(void *)uint64_t v21 = *v22;
  *((void *)v21 + 1) = v22[1];
  uint64_t v23 = v11[11];
  uint64_t v24 = &v9[v23];
  uint64_t v25 = v10 + v23;
  id v26 = *(id *)v25;
  uint64_t v27 = *(void **)(v25 + 8);
  uint64_t v28 = *(void *)(v25 + 16);
  unsigned __int8 v29 = *(unsigned char *)(v25 + 24);
  sub_10027D4F8(*(id *)v25, v27, v28, v29);
  uint64_t v30 = *(void **)v24;
  uint64_t v31 = (void *)*((void *)v24 + 1);
  uint64_t v32 = *((void *)v24 + 2);
  *(void *)uint64_t v24 = v26;
  *((void *)v24 + 1) = v27;
  *((void *)v24 + 2) = v28;
  unsigned __int8 v33 = v24[24];
  v24[24] = v29;
  sub_10027D954(v30, v31, v32, v33);
  uint64_t v34 = v11[12];
  uint64_t v35 = &v9[v34];
  uint64_t v36 = v10 + v34;
  *(void *)&v9[v34] = *(void *)(v10 + v34);
  uint64_t v37 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v38 = &v35[v37];
  uint64_t v39 = (const void *)(v36 + v37);
  uint64_t v40 = type metadata accessor for Date();
  LODWORD(v35) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v35)
  {
    if (!v41)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v42 = *(void *)(v40 - 8);
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v40);
LABEL_6:
    uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v42 + 24))(v38, v39, v40);
LABEL_7:
  uint64_t v44 = v11[13];
  uint64_t v45 = &v9[v44];
  uint64_t v46 = (uint64_t *)(v10 + v44);
  uint64_t v47 = *v46;
  v45[8] = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v47;
  uint64_t v48 = v11[14];
  uint64_t v49 = &v9[v48];
  uint64_t v50 = (void *)(v10 + v48);
  uint64_t v51 = sub_10017DF08(&qword_100E6BF10);
  int v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v51);
  int v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51);
  if (v52)
  {
    if (!v53)
    {
      *(void *)uint64_t v49 = *v50;
      uint64_t v54 = *(int *)(v51 + 48);
      int v55 = &v49[v54];
      uint64_t v56 = (char *)v50 + v54;
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v40))
      {
        uint64_t v57 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v55, v56, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v40);
      }
      uint64_t v66 = (uint64_t)v49;
      uint64_t v67 = v51;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v53)
  {
    sub_1001781AC((uint64_t)v49, &qword_100E6BF10);
LABEL_13:
    size_t v58 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v59 = v49;
    uint64_t v60 = v50;
LABEL_14:
    memcpy(v59, v60, v58);
    goto LABEL_22;
  }
  *(void *)uint64_t v49 = *v50;
  swift_retain();
  swift_release();
  uint64_t v61 = *(int *)(v51 + 48);
  uint64_t v62 = (uint64_t)&v49[v61];
  uint64_t v63 = (uint64_t)v50 + v61;
  int v64 = _s7Weather24LocationCompositionStateOwet_0(v62, 1, v40);
  int v65 = _s7Weather24LocationCompositionStateOwet_0(v63, 1, v40);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v62, v63, v40);
      uint64_t v66 = v62;
      uint64_t v67 = v40;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v66, 0, 1, v67);
      goto LABEL_22;
    }
    goto LABEL_48;
  }
  uint64_t v155 = *(void *)(v40 - 8);
  if (v65)
  {
    (*(void (**)(uint64_t, uint64_t))(v155 + 8))(v62, v40);
LABEL_48:
    size_t v58 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v59 = (void *)v62;
    uint64_t v60 = (const void *)v63;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v155 + 24))(v62, v63, v40);
LABEL_22:
  *(void *)&v9[v11[15]] = *(void *)(v10 + v11[15]);
  uint64_t v68 = v11[16];
  uint64_t v69 = &v9[v68];
  uint64_t v70 = v10 + v68;
  uint64_t v71 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 24))(v69, v70, v71);
  *(void *)&v9[v11[17]] = *(void *)(v10 + v11[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 24);
  v72(&v9[v11[18]], v10 + v11[18], v40);
  v72(&v9[v11[19]], v10 + v11[19], v40);
  v72(&v9[v11[20]], v10 + v11[20], v40);
  uint64_t v73 = v11[21];
  uint64_t v74 = &v9[v73];
  uint64_t v75 = (const void *)(v10 + v73);
  uint64_t v76 = type metadata accessor for DetailChartDataElement();
  int v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v76);
  int v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v79 = *(void *)(v76 - 8);
  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v79 + 8))(v74, v76);
LABEL_27:
    uint64_t v80 = sub_10017DF08(&qword_100E6B640);
    memcpy(v74, v75, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, const void *, uint64_t))(v79 + 24))(v74, v75, v76);
LABEL_28:
  *(void *)&v9[v11[22]] = *(void *)(v10 + v11[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = v11[23];
  uint64_t v82 = &v9[v81];
  uint64_t v83 = v10 + v81;
  uint64_t v84 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 24))(v82, v83, v84);
  *(void *)&v9[v11[24]] = *(void *)(v10 + v11[24]);
  *(void *)&v9[v11[25]] = *(void *)(v10 + v11[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = v11[26];
  char v86 = &v9[v85];
  uint64_t v87 = v10 + v85;
  uint64_t v88 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 24))(v86, v87, v88);
  uint64_t v89 = v11[27];
  uint64_t v90 = &v9[v89];
  uint64_t v91 = v10 + v89;
  uint64_t v92 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 24))(v90, v91, v92);
  uint64_t v93 = v11[28];
  uint64_t v94 = &v9[v93];
  uint64_t v95 = (void *)(v10 + v93);
  *(void *)uint64_t v94 = *v95;
  *((void *)v94 + 1) = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = v11[29];
  uint64_t v97 = &v9[v96];
  uint64_t v98 = (void *)(v10 + v96);
  *(void *)uint64_t v97 = *v98;
  *((void *)v97 + 1) = v98[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v99 = v11[30];
  uint64_t v100 = &v9[v99];
  uint64_t v101 = (void *)(v10 + v99);
  *(void *)uint64_t v100 = *v101;
  *((void *)v100 + 1) = v101[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v102 = v11[31];
  uint64_t v103 = &v9[v102];
  uint64_t v104 = (void *)(v10 + v102);
  *(void *)uint64_t v103 = *v104;
  *((void *)v103 + 1) = v104[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v105 = v11[32];
  uint64_t v106 = &v9[v105];
  uint64_t v107 = (void *)(v10 + v105);
  *(void *)uint64_t v106 = *v107;
  *((void *)v106 + 1) = v107[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v108 = v11[33];
  uint64_t v109 = &v9[v108];
  uint64_t v110 = (void *)(v10 + v108);
  uint64_t v111 = v110[1];
  *(void *)uint64_t v109 = *v110;
  *((void *)v109 + 1) = v111;
  swift_retain();
  swift_release();
  uint64_t v112 = v190;
  uint64_t v113 = *(int *)(v190 + 24);
  uint64_t v114 = (void *)(a1 + v113);
  uint64_t v115 = (void *)(a2 + v113);
  uint64_t v116 = (int *)type metadata accessor for LollipopViewModel();
  LODWORD(v90) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, (uint64_t)v116);
  int v117 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, (uint64_t)v116);
  if (v90)
  {
    if (!v117)
    {
      uint64_t v188 = a2;
      *uint64_t v114 = *v115;
      v114[1] = v115[1];
      uint64_t v118 = v116[5];
      uint64_t v119 = (char *)v114 + v118;
      uint64_t v120 = (char *)v115 + v118;
      uint64_t v121 = type metadata accessor for DetailChartDataPoint();
      uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16);
      swift_bridgeObjectRetain();
      v122(v119, v120, v121);
      *(void *)((char *)v114 + v116[6]) = *(void *)((char *)v115 + v116[6]);
      uint64_t v123 = v116[7];
      uint64_t v124 = (char *)v114 + v123;
      uint64_t v125 = (char *)v115 + v123;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)uint64_t v124 = *(void *)v125;
        *((void *)v124 + 1) = *((void *)v125 + 1);
        uint64_t v136 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v137 = v136[5];
        v186 = &v125[v137];
        v187 = &v124[v137];
        uint64_t v138 = type metadata accessor for AttributedString();
        uint64_t v139 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
        swift_bridgeObjectRetain();
        v139(v187, v186, v138);
        uint64_t v140 = v136[6];
        uint64_t v141 = &v124[v140];
        uint64_t v142 = &v125[v140];
        *(void *)uint64_t v141 = *(void *)v142;
        *((void *)v141 + 1) = *((void *)v142 + 1);
        uint64_t v143 = v136[7];
        v144 = &v124[v143];
        uint64_t v145 = &v125[v143];
        *(void *)v144 = *(void *)v145;
        *((void *)v144 + 1) = *((void *)v145 + 1);
        uint64_t v146 = v136[8];
        uint64_t v147 = &v124[v146];
        uint64_t v148 = &v125[v146];
        *(void *)uint64_t v147 = *(void *)v148;
        *((void *)v147 + 1) = *((void *)v148 + 1);
        uint64_t v149 = v136[9];
        uint64_t v150 = &v124[v149];
        uint64_t v151 = &v125[v149];
        *(void *)uint64_t v150 = *(void *)v151;
        *((void *)v150 + 1) = *((void *)v151 + 1);
        uint64_t v152 = v136[10];
        uint64_t v153 = &v124[v152];
        uint64_t v154 = &v125[v152];
        *(void *)uint64_t v153 = *(void *)v154;
        *((void *)v153 + 1) = *((void *)v154 + 1);
        v124[v136[11]] = v125[v136[11]];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(void *)uint64_t v124 = *(void *)v125;
          *((void *)v124 + 1) = *((void *)v125 + 1);
          *((void *)v124 + 2) = *((void *)v125 + 2);
          *((void *)v124 + 3) = *((void *)v125 + 3);
          *((void *)v124 + 4) = *((void *)v125 + 4);
          *((void *)v124 + 5) = *((void *)v125 + 5);
          goto LABEL_45;
        }
        *(void *)uint64_t v124 = *(void *)v125;
        *((void *)v124 + 1) = *((void *)v125 + 1);
        *((void *)v124 + 2) = *((void *)v125 + 2);
        *((void *)v124 + 3) = *((void *)v125 + 3);
        *((void *)v124 + 4) = *((void *)v125 + 4);
        *((void *)v124 + 5) = *((void *)v125 + 5);
        *((void *)v124 + 6) = *((void *)v125 + 6);
        *((void *)v124 + 7) = *((void *)v125 + 7);
        v124[64] = v125[64];
        v124[65] = v125[65];
      }
      swift_bridgeObjectRetain();
LABEL_45:
      a2 = v188;
      uint64_t v112 = v190;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, (uint64_t)v116);
      goto LABEL_52;
    }
LABEL_35:
    uint64_t v127 = sub_10017DF08(&qword_100E82140);
    memcpy(v114, v115, *(void *)(*(void *)(v127 - 8) + 64));
    goto LABEL_52;
  }
  if (v117)
  {
    sub_100ACB0A8((uint64_t)v114, (void (*)(void))type metadata accessor for LollipopViewModel);
    goto LABEL_35;
  }
  *uint64_t v114 = *v115;
  v114[1] = v115[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v128 = v116[5];
  uint64_t v129 = (char *)v114 + v128;
  uint64_t v130 = (char *)v115 + v128;
  uint64_t v131 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 24))(v129, v130, v131);
  *(void *)((char *)v114 + v116[6]) = *(void *)((char *)v115 + v116[6]);
  if (a1 != a2)
  {
    uint64_t v132 = v116[7];
    uint64_t v133 = (uint64_t)v114 + v132;
    uint64_t v134 = (char *)v115 + v132;
    sub_100ACB0A8(v133, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    type metadata accessor for LollipopDetailViewModel(0);
    int v135 = swift_getEnumCaseMultiPayload();
    if (v135 == 2)
    {
      *(void *)uint64_t v133 = *(void *)v134;
      *(void *)(v133 + 8) = *((void *)v134 + 1);
      uint64_t v156 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v157 = v156[5];
      uint64_t v189 = v133 + v157;
      uint64_t v158 = &v134[v157];
      uint64_t v159 = type metadata accessor for AttributedString();
      uint64_t v160 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v159 - 8) + 16);
      swift_bridgeObjectRetain();
      v160(v189, v158, v159);
      uint64_t v161 = v156[6];
      v162 = (void *)(v133 + v161);
      v163 = &v134[v161];
      void *v162 = *(void *)v163;
      v162[1] = *((void *)v163 + 1);
      uint64_t v164 = v156[7];
      v165 = (void *)(v133 + v164);
      v166 = &v134[v164];
      void *v165 = *(void *)v166;
      v165[1] = *((void *)v166 + 1);
      uint64_t v167 = v156[8];
      v168 = (void *)(v133 + v167);
      v169 = &v134[v167];
      void *v168 = *(void *)v169;
      v168[1] = *((void *)v169 + 1);
      uint64_t v170 = v156[9];
      v171 = (void *)(v133 + v170);
      v172 = &v134[v170];
      void *v171 = *(void *)v172;
      v171[1] = *((void *)v172 + 1);
      uint64_t v173 = v156[10];
      v174 = (void *)(v133 + v173);
      v175 = &v134[v173];
      void *v174 = *(void *)v175;
      v174[1] = *((void *)v175 + 1);
      *(unsigned char *)(v133 + v156[11]) = v134[v156[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v112 = v190;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(void *)uint64_t v133 = *(void *)v134;
      *(void *)(v133 + 8) = *((void *)v134 + 1);
      *(void *)(v133 + 16) = *((void *)v134 + 2);
      *(void *)(v133 + 24) = *((void *)v134 + 3);
      *(void *)(v133 + 32) = *((void *)v134 + 4);
      *(void *)(v133 + 40) = *((void *)v134 + 5);
      if (v135 == 1)
      {
        *(void *)(v133 + 48) = *((void *)v134 + 6);
        *(void *)(v133 + 56) = *((void *)v134 + 7);
        *(unsigned char *)(v133 + 64) = v134[64];
        *(unsigned char *)(v133 + 65) = v134[65];
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_52:
  uint64_t v176 = *(int *)(v112 + 28);
  v177 = (void *)(a1 + v176);
  v178 = (void *)(a2 + v176);
  uint64_t v179 = type metadata accessor for ConditionDetailChartFooterViewModel();
  int v180 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v179);
  int v181 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v178, 1, v179);
  if (v180)
  {
    if (!v181)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v182 = type metadata accessor for TemperatureChartKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v182 - 8) + 16))(v177, v178, v182);
      }
      else
      {
        void *v177 = *v178;
        v177[1] = v178[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, v179);
      return a1;
    }
LABEL_58:
    uint64_t v183 = sub_10017DF08(&qword_100E820F0);
    memcpy(v177, v178, *(void *)(*(void *)(v183 - 8) + 64));
    return a1;
  }
  if (v181)
  {
    sub_100ACB0A8((uint64_t)v177, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    goto LABEL_58;
  }
  if (a1 != a2)
  {
    sub_100ACB0A8((uint64_t)v177, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v184 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v184 - 8) + 16))(v177, v178, v184);
    }
    else
    {
      void *v177 = *v178;
      v177[1] = v178[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100ACB0A8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100ACB100(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = type metadata accessor for ChartKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  *(void *)(v9 + v11[6]) = *(void *)(v10 + v11[6]);
  uint64_t v16 = v11[7];
  uint64_t v17 = v9 + v16;
  uint64_t v18 = v10 + v16;
  uint64_t v19 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
  *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
  *(_OWORD *)(v9 + v11[10]) = *(_OWORD *)(v10 + v11[10]);
  uint64_t v20 = v11[11];
  uint64_t v21 = (_OWORD *)(v9 + v20);
  uint64_t v22 = (_OWORD *)(v10 + v20);
  *uint64_t v21 = *v22;
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v22 + 9);
  uint64_t v23 = v11[12];
  uint64_t v24 = v9 + v23;
  uint64_t v25 = v10 + v23;
  *(void *)(v9 + v23) = *(void *)(v10 + v23);
  uint64_t v26 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v27 = (void *)(v24 + v26);
  uint64_t v28 = (const void *)(v25 + v26);
  uint64_t v29 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  uint64_t v31 = v11[13];
  uint64_t v32 = v9 + v31;
  uint64_t v33 = v10 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  uint64_t v34 = v11[14];
  uint64_t v35 = (void *)(v9 + v34);
  uint64_t v36 = (void *)(v10 + v34);
  uint64_t v37 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v90 = a3;
    *uint64_t v35 = *v36;
    uint64_t v39 = *(int *)(v37 + 48);
    uint64_t v40 = (char *)v35 + v39;
    int v41 = (char *)v36 + v39;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v29))
    {
      uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v40, v41, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v29);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
    a3 = v90;
  }
  *(void *)(v9 + v11[15]) = *(void *)(v10 + v11[15]);
  uint64_t v43 = v11[16];
  uint64_t v44 = v9 + v43;
  uint64_t v45 = v10 + v43;
  uint64_t v46 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  *(void *)(v9 + v11[17]) = *(void *)(v10 + v11[17]);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32);
  v47(v9 + v11[18], v10 + v11[18], v29);
  v47(v9 + v11[19], v10 + v11[19], v29);
  v47(v9 + v11[20], v10 + v11[20], v29);
  uint64_t v48 = v11[21];
  uint64_t v49 = (void *)(v9 + v48);
  uint64_t v50 = (const void *)(v10 + v48);
  uint64_t v51 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
  {
    uint64_t v52 = sub_10017DF08(&qword_100E6B640);
    memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
  }
  *(void *)(v9 + v11[22]) = *(void *)(v10 + v11[22]);
  uint64_t v53 = v11[23];
  uint64_t v54 = v9 + v53;
  uint64_t v55 = v10 + v53;
  uint64_t v56 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
  *(void *)(v9 + v11[24]) = *(void *)(v10 + v11[24]);
  *(void *)(v9 + v11[25]) = *(void *)(v10 + v11[25]);
  uint64_t v57 = v11[26];
  uint64_t v58 = v9 + v57;
  uint64_t v59 = v10 + v57;
  uint64_t v60 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
  uint64_t v61 = v11[27];
  uint64_t v62 = v9 + v61;
  uint64_t v63 = v10 + v61;
  uint64_t v64 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
  *(_OWORD *)(v9 + v11[28]) = *(_OWORD *)(v10 + v11[28]);
  *(_OWORD *)(v9 + v11[29]) = *(_OWORD *)(v10 + v11[29]);
  *(_OWORD *)(v9 + v11[30]) = *(_OWORD *)(v10 + v11[30]);
  *(_OWORD *)(v9 + v11[31]) = *(_OWORD *)(v10 + v11[31]);
  *(_OWORD *)(v9 + v11[32]) = *(_OWORD *)(v10 + v11[32]);
  *(_OWORD *)(v9 + v11[33]) = *(_OWORD *)(v10 + v11[33]);
  uint64_t v65 = a3[6];
  uint64_t v66 = (_OWORD *)(a1 + v65);
  uint64_t v67 = (_OWORD *)(a2 + v65);
  uint64_t v68 = (int *)type metadata accessor for LollipopViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, (uint64_t)v68))
  {
    uint64_t v69 = sub_10017DF08(&qword_100E82140);
    memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    uint64_t v91 = a3;
    *uint64_t v66 = *v67;
    uint64_t v70 = v68[5];
    uint64_t v71 = (char *)v66 + v70;
    uint64_t v72 = (char *)v67 + v70;
    uint64_t v73 = type metadata accessor for DetailChartDataPoint();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
    *(void *)((char *)v66 + v68[6]) = *(void *)((char *)v67 + v68[6]);
    uint64_t v74 = v68[7];
    uint64_t v75 = (_OWORD *)((char *)v66 + v74);
    uint64_t v76 = (_OWORD *)((char *)v67 + v74);
    uint64_t v77 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *uint64_t v75 = *v76;
      int v78 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v79 = v78[5];
      uint64_t v80 = (char *)v75 + v79;
      uint64_t v81 = (char *)v76 + v79;
      uint64_t v82 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
      *(_OWORD *)((char *)v75 + v78[6]) = *(_OWORD *)((char *)v76 + v78[6]);
      *(_OWORD *)((char *)v75 + v78[7]) = *(_OWORD *)((char *)v76 + v78[7]);
      *(_OWORD *)((char *)v75 + v78[8]) = *(_OWORD *)((char *)v76 + v78[8]);
      *(_OWORD *)((char *)v75 + v78[9]) = *(_OWORD *)((char *)v76 + v78[9]);
      *(_OWORD *)((char *)v75 + v78[10]) = *(_OWORD *)((char *)v76 + v78[10]);
      *((unsigned char *)v75 + v78[11]) = *((unsigned char *)v76 + v78[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    a3 = v91;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, (uint64_t)v68);
  }
  uint64_t v83 = a3[7];
  uint64_t v84 = (void *)(a1 + v83);
  uint64_t v85 = (const void *)(a2 + v83);
  uint64_t v86 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
  {
    uint64_t v87 = sub_10017DF08(&qword_100E820F0);
    memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v88 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v88 - 8) + 32))(v84, v85, v88);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
  }
  return a1;
}

uint64_t sub_100ACBA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v163 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = v10 + v13;
  uint64_t v16 = type metadata accessor for ChartKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)&v9[v12[6]] = *(void *)(v10 + v12[6]);
  swift_bridgeObjectRelease();
  uint64_t v17 = v12[7];
  uint64_t v18 = &v9[v17];
  uint64_t v19 = v10 + v17;
  uint64_t v20 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *(void *)&v9[v12[8]] = *(void *)(v10 + v12[8]);
  swift_bridgeObjectRelease();
  *(void *)&v9[v12[9]] = *(void *)(v10 + v12[9]);
  swift_bridgeObjectRelease();
  *(_OWORD *)&v9[v12[10]] = *(_OWORD *)(v10 + v12[10]);
  uint64_t v21 = v12[11];
  uint64_t v22 = &v9[v21];
  uint64_t v23 = v10 + v21;
  uint64_t v24 = *(void *)(v23 + 16);
  char v25 = *(unsigned char *)(v23 + 24);
  uint64_t v26 = *(void **)v22;
  uint64_t v27 = (void *)*((void *)v22 + 1);
  uint64_t v28 = *((void *)v22 + 2);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((void *)v22 + 2) = v24;
  unsigned __int8 v29 = v22[24];
  v22[24] = v25;
  sub_10027D954(v26, v27, v28, v29);
  uint64_t v30 = v12[12];
  uint64_t v31 = &v9[v30];
  uint64_t v32 = v10 + v30;
  *(void *)&v9[v30] = *(void *)(v10 + v30);
  uint64_t v33 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v34 = &v31[v33];
  uint64_t v35 = (const void *)(v32 + v33);
  uint64_t v36 = type metadata accessor for Date();
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36);
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v39 = *(void *)(v36 - 8);
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v36);
LABEL_6:
    uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v34, v35, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v39 + 40))(v34, v35, v36);
LABEL_7:
  uint64_t v41 = v12[13];
  uint64_t v42 = &v9[v41];
  uint64_t v43 = v10 + v41;
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = *(unsigned char *)(v43 + 8);
  uint64_t v44 = v12[14];
  uint64_t v45 = &v9[v44];
  uint64_t v46 = (void *)(v10 + v44);
  uint64_t v47 = sub_10017DF08(&qword_100E6BF10);
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v47);
  int v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47);
  if (v48)
  {
    if (!v49)
    {
      *(void *)uint64_t v45 = *v46;
      uint64_t v50 = *(int *)(v47 + 48);
      uint64_t v51 = &v45[v50];
      uint64_t v52 = (char *)v46 + v50;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v36))
      {
        uint64_t v53 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v51, v52, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v36);
      }
      uint64_t v62 = (uint64_t)v45;
      uint64_t v63 = v47;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v49)
  {
    sub_1001781AC((uint64_t)v45, &qword_100E6BF10);
LABEL_13:
    size_t v54 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v55 = v45;
    uint64_t v56 = v46;
LABEL_14:
    memcpy(v55, v56, v54);
    goto LABEL_22;
  }
  *(void *)uint64_t v45 = *v46;
  swift_release();
  uint64_t v57 = *(int *)(v47 + 48);
  uint64_t v58 = (uint64_t)&v45[v57];
  uint64_t v59 = (uint64_t)v46 + v57;
  int v60 = _s7Weather24LocationCompositionStateOwet_0(v58, 1, v36);
  int v61 = _s7Weather24LocationCompositionStateOwet_0(v59, 1, v36);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v58, v59, v36);
      uint64_t v62 = v58;
      uint64_t v63 = v36;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v63);
      goto LABEL_22;
    }
    goto LABEL_58;
  }
  uint64_t v162 = *(void *)(v36 - 8);
  if (v61)
  {
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v58, v36);
LABEL_58:
    size_t v54 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v55 = (void *)v58;
    uint64_t v56 = (const void *)v59;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 40))(v58, v59, v36);
LABEL_22:
  *(void *)&v9[v12[15]] = *(void *)(v10 + v12[15]);
  uint64_t v64 = v12[16];
  uint64_t v65 = &v9[v64];
  uint64_t v66 = v10 + v64;
  uint64_t v67 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
  *(void *)&v9[v12[17]] = *(void *)(v10 + v12[17]);
  swift_bridgeObjectRelease();
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 40);
  v68(&v9[v12[18]], v10 + v12[18], v36);
  v68(&v9[v12[19]], v10 + v12[19], v36);
  v68(&v9[v12[20]], v10 + v12[20], v36);
  uint64_t v69 = v12[21];
  uint64_t v70 = &v9[v69];
  uint64_t v71 = (const void *)(v10 + v69);
  uint64_t v72 = type metadata accessor for DetailChartDataElement();
  int v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v72);
  int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v75 = *(void *)(v72 - 8);
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v70, v72);
LABEL_27:
    uint64_t v76 = sub_10017DF08(&qword_100E6B640);
    memcpy(v70, v71, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, const void *, uint64_t))(v75 + 40))(v70, v71, v72);
LABEL_28:
  *(void *)&v9[v12[22]] = *(void *)(v10 + v12[22]);
  swift_bridgeObjectRelease();
  uint64_t v77 = v12[23];
  int v78 = &v9[v77];
  uint64_t v79 = v10 + v77;
  uint64_t v80 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 40))(v78, v79, v80);
  *(void *)&v9[v12[24]] = *(void *)(v10 + v12[24]);
  *(void *)&v9[v12[25]] = *(void *)(v10 + v12[25]);
  swift_bridgeObjectRelease();
  uint64_t v81 = v12[26];
  uint64_t v82 = &v9[v81];
  uint64_t v83 = v10 + v81;
  uint64_t v84 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 40))(v82, v83, v84);
  uint64_t v85 = v12[27];
  uint64_t v86 = &v9[v85];
  uint64_t v87 = v10 + v85;
  uint64_t v88 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 40))(v86, v87, v88);
  uint64_t v89 = v12[28];
  uint64_t v90 = &v9[v89];
  uint64_t v91 = (uint64_t *)(v10 + v89);
  uint64_t v93 = *v91;
  uint64_t v92 = v91[1];
  *(void *)uint64_t v90 = v93;
  *((void *)v90 + 1) = v92;
  swift_bridgeObjectRelease();
  uint64_t v94 = v12[29];
  uint64_t v95 = &v9[v94];
  uint64_t v96 = (uint64_t *)(v10 + v94);
  uint64_t v98 = *v96;
  uint64_t v97 = v96[1];
  *(void *)uint64_t v95 = v98;
  *((void *)v95 + 1) = v97;
  swift_bridgeObjectRelease();
  uint64_t v99 = v12[30];
  uint64_t v100 = &v9[v99];
  uint64_t v101 = (uint64_t *)(v10 + v99);
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  *(void *)uint64_t v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease();
  uint64_t v104 = v12[31];
  uint64_t v105 = &v9[v104];
  uint64_t v106 = (uint64_t *)(v10 + v104);
  uint64_t v108 = *v106;
  uint64_t v107 = v106[1];
  *(void *)uint64_t v105 = v108;
  *((void *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  uint64_t v109 = v12[32];
  uint64_t v110 = &v9[v109];
  uint64_t v111 = (uint64_t *)(v10 + v109);
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *(void *)uint64_t v110 = v113;
  *((void *)v110 + 1) = v112;
  swift_bridgeObjectRelease();
  *(_OWORD *)&v9[v12[33]] = *(_OWORD *)(v10 + v12[33]);
  swift_release();
  uint64_t v114 = v163;
  uint64_t v115 = *(int *)(v163 + 24);
  uint64_t v116 = (void *)(a1 + v115);
  int v117 = (void *)(a2 + v115);
  uint64_t v118 = (int *)type metadata accessor for LollipopViewModel();
  int v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, (uint64_t)v118);
  int v120 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, (uint64_t)v118);
  if (!v119)
  {
    if (!v120)
    {
      uint64_t v138 = v117[1];
      *uint64_t v116 = *v117;
      v116[1] = v138;
      swift_bridgeObjectRelease();
      uint64_t v139 = v118[5];
      uint64_t v140 = (char *)v116 + v139;
      uint64_t v141 = (char *)v117 + v139;
      uint64_t v142 = type metadata accessor for DetailChartDataPoint();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 40))(v140, v141, v142);
      *(void *)((char *)v116 + v118[6]) = *(void *)((char *)v117 + v118[6]);
      if (a1 == a2) {
        goto LABEL_42;
      }
      uint64_t v143 = v118[7];
      v144 = (_OWORD *)((char *)v116 + v143);
      uint64_t v145 = (_OWORD *)((char *)v117 + v143);
      sub_100ACB0A8((uint64_t)v144, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
      uint64_t v146 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        _OWORD *v144 = *v145;
        uint64_t v147 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v148 = v147[5];
        uint64_t v149 = (char *)v144 + v148;
        uint64_t v150 = (char *)v145 + v148;
        uint64_t v151 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v149, v150, v151);
        *(_OWORD *)((char *)v144 + v147[6]) = *(_OWORD *)((char *)v145 + v147[6]);
        *(_OWORD *)((char *)v144 + v147[7]) = *(_OWORD *)((char *)v145 + v147[7]);
        *(_OWORD *)((char *)v144 + v147[8]) = *(_OWORD *)((char *)v145 + v147[8]);
        *(_OWORD *)((char *)v144 + v147[9]) = *(_OWORD *)((char *)v145 + v147[9]);
        *(_OWORD *)((char *)v144 + v147[10]) = *(_OWORD *)((char *)v145 + v147[10]);
        *((unsigned char *)v144 + v147[11]) = *((unsigned char *)v145 + v147[11]);
        swift_storeEnumTagMultiPayload();
        goto LABEL_42;
      }
      size_t v135 = *(void *)(*(void *)(v146 - 8) + 64);
      uint64_t v136 = v144;
      uint64_t v137 = v145;
LABEL_35:
      memcpy(v136, v137, v135);
      goto LABEL_42;
    }
    sub_100ACB0A8((uint64_t)v116, (void (*)(void))type metadata accessor for LollipopViewModel);
LABEL_34:
    size_t v135 = *(void *)(*(void *)(sub_10017DF08(&qword_100E82140) - 8) + 64);
    uint64_t v136 = v116;
    uint64_t v137 = v117;
    goto LABEL_35;
  }
  if (v120) {
    goto LABEL_34;
  }
  *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
  uint64_t v121 = v118[5];
  uint64_t v122 = (char *)v116 + v121;
  uint64_t v123 = (char *)v117 + v121;
  uint64_t v124 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
  *(void *)((char *)v116 + v118[6]) = *(void *)((char *)v117 + v118[6]);
  uint64_t v125 = v118[7];
  uint64_t v126 = (_OWORD *)((char *)v116 + v125);
  uint64_t v127 = (_OWORD *)((char *)v117 + v125);
  uint64_t v128 = type metadata accessor for LollipopDetailViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    _OWORD *v126 = *v127;
    uint64_t v129 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v130 = v129[5];
    uint64_t v131 = (char *)v126 + v130;
    uint64_t v132 = (char *)v127 + v130;
    uint64_t v133 = type metadata accessor for AttributedString();
    uint64_t v134 = v132;
    uint64_t v114 = v163;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v131, v134, v133);
    *(_OWORD *)((char *)v126 + v129[6]) = *(_OWORD *)((char *)v127 + v129[6]);
    *(_OWORD *)((char *)v126 + v129[7]) = *(_OWORD *)((char *)v127 + v129[7]);
    *(_OWORD *)((char *)v126 + v129[8]) = *(_OWORD *)((char *)v127 + v129[8]);
    *(_OWORD *)((char *)v126 + v129[9]) = *(_OWORD *)((char *)v127 + v129[9]);
    *(_OWORD *)((char *)v126 + v129[10]) = *(_OWORD *)((char *)v127 + v129[10]);
    *((unsigned char *)v126 + v129[11]) = *((unsigned char *)v127 + v129[11]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, (uint64_t)v118);
LABEL_42:
  uint64_t v152 = *(int *)(v114 + 28);
  uint64_t v153 = (void *)(a1 + v152);
  uint64_t v154 = (const void *)(a2 + v152);
  uint64_t v155 = type metadata accessor for ConditionDetailChartFooterViewModel();
  int v156 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v153, 1, v155);
  int v157 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v154, 1, v155);
  if (!v156)
  {
    if (!v157)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_100ACB0A8((uint64_t)v153, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v160 = type metadata accessor for TemperatureChartKind();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v160 - 8) + 32))(v153, v154, v160);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v159 = *(void *)(*(void *)(v155 - 8) + 64);
      goto LABEL_49;
    }
    sub_100ACB0A8((uint64_t)v153, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
LABEL_48:
    size_t v159 = *(void *)(*(void *)(sub_10017DF08(&qword_100E820F0) - 8) + 64);
LABEL_49:
    memcpy(v153, v154, v159);
    return a1;
  }
  if (v157) {
    goto LABEL_48;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v158 = type metadata accessor for TemperatureChartKind();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v158 - 8) + 32))(v153, v154, v158);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v153, v154, *(void *)(*(void *)(v155 - 8) + 64));
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v153, 0, 1, v155);
  return a1;
}

uint64_t sub_100ACC8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ACC900);
}

uint64_t sub_100ACC900(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for ConditionDetailChartHeaderViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for ChartViewModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      sub_10017DF08(&qword_100E82140);
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        uint64_t v8 = sub_10017DF08(&qword_100E820F0);
        uint64_t v12 = a3[7];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100ACC9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ACC9E0);
}

uint64_t sub_100ACC9E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for ConditionDetailChartHeaderViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for ChartViewModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E82140);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        uint64_t v10 = sub_10017DF08(&qword_100E820F0);
        uint64_t v14 = a4[7];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_100ACCAB4()
{
  type metadata accessor for ConditionDetailChartHeaderViewModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ChartViewModel(319);
    if (v1 <= 0x3F)
    {
      sub_100ACCC2C(319, &qword_100EAF3A8, (void (*)(uint64_t))type metadata accessor for LollipopViewModel);
      if (v2 <= 0x3F)
      {
        sub_100ACCC2C(319, (unint64_t *)&unk_100EAF3B0, (void (*)(uint64_t))type metadata accessor for ConditionDetailChartFooterViewModel);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100ACCC2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_100ACCC80()
{
  return &protocol witness table for Int;
}

ValueMetadata *type metadata accessor for ConditionDetailMapFooterView()
{
  return &type metadata for ConditionDetailMapFooterView;
}

uint64_t sub_100ACCC9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100ACCCB8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for RoundedCornersShape();
  sub_100179C0C();
  uint64_t v56 = v2;
  uint64_t v57 = v1;
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v55 = v3;
  uint64_t v4 = type metadata accessor for PlainButtonStyle();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100EAF3E8);
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v51 = sub_10017DF08(&qword_100EAF3F0);
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  uint64_t v49 = sub_10017DF08(&qword_100EAF3F8);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = v26 - v25;
  uint64_t v50 = sub_10017DF08(&qword_100EAF400);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v54 = v29;
  uint64_t v52 = sub_10017DF08(&qword_100EAF408);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v53 = v31;
  sub_10017DF08(&qword_100EAF410);
  sub_100ACD508();
  Button.init(action:label:)();
  PlainButtonStyle.init()();
  sub_1001246C8(&qword_100EAF428, &qword_100EAF3E8);
  sub_100ACD668();
  View.buttonStyle<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
  LOBYTE(v11) = static Edge.Set.leading.getter();
  unsigned __int8 v32 = static Edge.Set.trailing.getter();
  char v33 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v11) {
    char v33 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v32) {
    char v33 = Edge.Set.init(rawValue:)();
  }
  swift_beginAccess();
  sub_10052E644();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v27, v23, v51);
  uint64_t v42 = v27 + *(int *)(v49 + 36);
  *(unsigned char *)uint64_t v42 = v33;
  *(void *)(v42 + 8) = v35;
  *(void *)(v42 + 16) = v37;
  *(void *)(v42 + 24) = v39;
  *(void *)(v42 + 32) = v41;
  *(unsigned char *)(v42 + 40) = 0;
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v51);
  sub_10052E68C();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1001262FC(v27, v54, &qword_100EAF3F8);
  uint64_t v43 = (_OWORD *)(v54 + *(int *)(v50 + 36));
  *uint64_t v43 = v59;
  v43[1] = v60;
  v43[2] = v61;
  sub_1001781AC(v27, &qword_100EAF3F8);
  if (qword_100E62580 != -1) {
    swift_once();
  }
  uint64_t v44 = type metadata accessor for Material();
  uint64_t v45 = sub_1002102B0(v44, (uint64_t)qword_100F51B10);
  RoundedCornersShape.init(corners:radius:)();
  uint64_t v46 = v53 + *(int *)(v52 + 36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v46, v45, v44);
  uint64_t v47 = sub_10017DF08(&qword_100EAF430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v46 + *(int *)(v47 + 52), v55, v57);
  *(_WORD *)(v46 + *(int *)(v47 + 56)) = 256;
  sub_1001262FC(v54, v53, &qword_100EAF400);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
  sub_1001781AC(v54, &qword_100EAF400);
  return sub_10020E72C(v53, a1, &qword_100EAF408);
}

uint64_t sub_100ACD2B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6F7B0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EAF438);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a1;
  v15[1] = a2;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  Label<>.init<A>(_:systemImage:)();
  sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
  sub_100ACD61C();
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a3, v13, v10);
  *(unsigned char *)(a3 + *(int *)(sub_10017DF08(&qword_100EAF410) + 36)) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_100ACD4F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100ACCCB8(a1);
}

uint64_t sub_100ACD500@<X0>(uint64_t a1@<X8>)
{
  return sub_100ACD2B4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100ACD508()
{
  unint64_t result = qword_100EAF418;
  if (!qword_100EAF418)
  {
    sub_10018C6DC(&qword_100EAF410);
    sub_10018C6DC(&qword_100E6F7B0);
    sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
    sub_100ACD61C();
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100E80338, &qword_100E80340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF418);
  }
  return result;
}

unint64_t sub_100ACD61C()
{
  unint64_t result = qword_100EAF420;
  if (!qword_100EAF420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF420);
  }
  return result;
}

unint64_t sub_100ACD668()
{
  unint64_t result = qword_100E70FB8;
  if (!qword_100E70FB8)
  {
    type metadata accessor for PlainButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E70FB8);
  }
  return result;
}

uint64_t sub_100ACD6B8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = sub_10017DF08(&qword_100EAF460);
  return sub_100ACD708(a1 + *(int *)(v2 + 44));
}

uint64_t sub_100ACD708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v1 - 8);
  uint64_t v42 = (uint64_t)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3);
  uint64_t v40 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08(&qword_100EAF468) - 8;
  __chkstk_darwin(v43);
  uint64_t v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08(&qword_100EAF470) - 8;
  __chkstk_darwin(v44);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v41 = (uint64_t)&v38 - v9;
  uint64_t v10 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EAF478);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v38 - v19;
  LabelStyleConfiguration.title.getter();
  uint64_t v21 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v10);
  uint64_t v23 = (uint64_t *)&v17[*(int *)(v15 + 44)];
  *uint64_t v23 = KeyPath;
  v23[1] = v21;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_10020E72C((uint64_t)v17, (uint64_t)v20, &qword_100EAF478);
  uint64_t v24 = v40;
  LabelStyleConfiguration.icon.getter();
  static Font.Weight.semibold.getter();
  uint64_t v25 = type metadata accessor for Font.Design();
  uint64_t v26 = v42;
  _s7Weather24LocationCompositionStateOwst_0(v42, 1, 1, v25);
  uint64_t v27 = static Font.system(size:weight:design:)();
  sub_1001781AC(v26, &qword_100E63F80);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v30 = v45;
  uint64_t v29 = v46;
  uint64_t v31 = (uint64_t)v39;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v39, v24, v46);
  unsigned __int8 v32 = (uint64_t *)(v31 + *(int *)(v43 + 44));
  *unsigned __int8 v32 = v28;
  v32[1] = v27;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v24, v29);
  LODWORD(v27) = static HierarchicalShapeStyle.secondary.getter();
  sub_1001262FC(v31, (uint64_t)v7, &qword_100EAF468);
  *(_DWORD *)&v7[*(int *)(v44 + 44)] = v27;
  sub_1001781AC(v31, &qword_100EAF468);
  uint64_t v33 = v41;
  sub_10020E72C((uint64_t)v7, v41, &qword_100EAF470);
  sub_1001262FC((uint64_t)v20, (uint64_t)v17, &qword_100EAF478);
  sub_1001262FC(v33, (uint64_t)v7, &qword_100EAF470);
  uint64_t v34 = v47;
  sub_1001262FC((uint64_t)v17, v47, &qword_100EAF478);
  uint64_t v35 = sub_10017DF08(&qword_100EAF480);
  uint64_t v36 = v34 + *(int *)(v35 + 48);
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 1;
  sub_1001262FC((uint64_t)v7, v34 + *(int *)(v35 + 64), &qword_100EAF470);
  sub_1001781AC(v33, &qword_100EAF470);
  sub_1001781AC((uint64_t)v20, &qword_100EAF478);
  sub_1001781AC((uint64_t)v7, &qword_100EAF470);
  return sub_1001781AC((uint64_t)v17, &qword_100EAF478);
}

ValueMetadata *type metadata accessor for CallToActionLabelStyle()
{
  return &type metadata for CallToActionLabelStyle;
}

unint64_t sub_100ACDBFC()
{
  unint64_t result = qword_100EAF440;
  if (!qword_100EAF440)
  {
    sub_10018C6DC(&qword_100EAF408);
    sub_100ACDC9C();
    sub_1001246C8(&qword_100EAF458, &qword_100EAF430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF440);
  }
  return result;
}

unint64_t sub_100ACDC9C()
{
  unint64_t result = qword_100EAF448;
  if (!qword_100EAF448)
  {
    sub_10018C6DC(&qword_100EAF400);
    sub_100ACDD18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF448);
  }
  return result;
}

unint64_t sub_100ACDD18()
{
  unint64_t result = qword_100EAF450;
  if (!qword_100EAF450)
  {
    sub_10018C6DC(&qword_100EAF3F8);
    sub_10018C6DC(&qword_100EAF3E8);
    type metadata accessor for PlainButtonStyle();
    sub_1001246C8(&qword_100EAF428, &qword_100EAF3E8);
    sub_100ACD668();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF450);
  }
  return result;
}

uint64_t sub_100ACDE0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100ACDE30()
{
  return sub_1001246C8(&qword_100EAF488, &qword_100EAF490);
}

void *sub_100ACDE6C(void *__dst, char *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)__src;
    *uint64_t v4 = *(void *)__src;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    memcpy(__dst, __src, 0x48uLL);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = &__src[v7];
    *(_OWORD *)uint64_t v8 = *(_OWORD *)&__src[v7];
    v8[16] = __src[v7 + 16];
    v8[17] = __src[v7 + 17];
    v8[18] = __src[v7 + 18];
    uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v11 = &v8[v10];
    uint64_t v12 = &v9[v10];
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = &__src[v14];
    long long v17 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v17;
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((void *)v15 + 6) = *((void *)v16 + 6);
  }
  return v4;
}

uint64_t sub_100ACDFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = v2 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

char *sub_100ACE020(char *a1, char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x48uLL);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)&a2[v6];
  v7[16] = a2[v6 + 16];
  v7[17] = a2[v6 + 17];
  v7[18] = a2[v6 + 18];
  uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  *((void *)v14 + 6) = *((void *)v15 + 6);
  return a1;
}

uint64_t sub_100ACE104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  long long v6 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(a1 + 8) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(a2 + v7 + 16);
  *(unsigned char *)(v8 + 17) = *(unsigned char *)(a2 + v7 + 17);
  *(unsigned char *)(v8 + 18) = *(unsigned char *)(a2 + v7 + 18);
  uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  long long v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  void v15[2] = v16[2];
  v15[3] = v16[3];
  v15[4] = v16[4];
  v15[5] = v16[5];
  v15[6] = v16[6];
  return a1;
}

char *sub_100ACE248(char *a1, char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x48uLL);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)&a2[v6];
  v7[16] = a2[v6 + 16];
  v7[17] = a2[v6 + 17];
  v7[18] = a2[v6 + 18];
  uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  *((void *)v14 + 6) = *((void *)v15 + 6);
  return a1;
}

uint64_t sub_100ACE32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)(a2 + v6);
  *(unsigned char *)(v7 + 16) = *(unsigned char *)(a2 + v6 + 16);
  *(unsigned char *)(v7 + 17) = *(unsigned char *)(a2 + v6 + 17);
  *(unsigned char *)(v7 + 18) = *(unsigned char *)(a2 + v6 + 18);
  uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = v8 + v9;
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(void *)(v14 + 48) = *(void *)(v15 + 48);
  return a1;
}

uint64_t sub_100ACE438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ACE44C);
}

uint64_t sub_100ACE44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for DisplayMetrics();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100ACE4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ACE4E0);
}

uint64_t sub_100ACE4E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 32) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for DisplayMetrics();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LocationRegularViewLayout()
{
  uint64_t result = qword_100EAF4F0;
  if (!qword_100EAF4F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100ACE5A4()
{
  uint64_t result = type metadata accessor for DisplayMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100ACE644(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v5 = (uint64_t)v4;
  uint64_t v9 = type metadata accessor for LocationRegularViewLayout();
  __chkstk_darwin(v9);
  unsigned __int8 v32 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for LayoutSubview();
  uint64_t v11 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v33 = (char *)&v32 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - v17;
  if ((a2 & 1) == 0)
  {
    double Width = *(double *)&a1;
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  v40.origin.x = sub_10019F760();
  double Width = CGRectGetWidth(v40);
  if (a4)
  {
LABEL_3:
    v39.origin.x = sub_10019F760();
    CGRectGetHeight(v39);
  }
LABEL_5:
  memcpy(__dst, v4, 0x48uLL);
  sub_100A30BB4(Width);
  sub_100ACEBD8((uint64_t)v4);
  sub_100180B60();
  LayoutSubviews.subscript.getter();
  static UnitPoint.topLeading.getter();
  LOBYTE(v36[0]) = 0;
  v35[0] = 0;
  LayoutSubview.place(at:anchor:proposal:)();
  type metadata accessor for LayoutSubviews();
  uint64_t v20 = (void (*)(uint64_t))sub_100ACED58(&qword_100E70808, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (dispatch thunk of Collection.distance(from:to:)() != 2) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v34);
  }
  sub_1000E0DAC((uint64_t)&__dst[49], (uint64_t)v38);
  uint64_t v21 = v33;
  LayoutSubviews.subscript.getter();
  uint64_t v22 = v32;
  sub_100ACEDA0(v5, (uint64_t)v32);
  uint64_t v23 = v21;
  uint64_t v24 = v34;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v23, v34);
  sub_1000E0DAC((uint64_t)v38, (uint64_t)v35);
  if (v35[0] - 3 >= 2)
  {
    memcpy(v36, v22, sizeof(v36));
    sub_100A30BB4(Width);
    static UnitPoint.topLeading.getter();
    sub_10017DC04();
    uint64_t v24 = v34;
    LayoutSubview.place(at:anchor:proposal:)();
    uint64_t v31 = sub_100188410();
    v20(v31);
    sub_100ACEE04((uint64_t)v22);
  }
  else
  {
    uint64_t v25 = sub_100188410();
    v20(v25);
    sub_100ACEE04((uint64_t)v22);
    if (*(unsigned char *)(v5 + 49) == 4)
    {
      uint64_t v26 = *(void *)(v5 + 24);
      char v27 = *(unsigned char *)(v5 + 32);
      uint64_t v28 = *(void *)(v5 + 40);
      char v29 = *(unsigned char *)(v5 + 48);
      v36[0] = *(void *)v5;
      *(_OWORD *)&v36[1] = *(_OWORD *)(v5 + 8);
      v36[3] = v26;
      LOBYTE(v36[4]) = v27;
      v36[5] = v28;
      LOBYTE(v36[6]) = v29;
      BYTE1(v36[6]) = 4;
      *(_OWORD *)&v36[7] = *(_OWORD *)(v5 + 56);
      sub_1009F3538(v5 + *(int *)(v9 + 20));
      sub_100180B60();
      if (qword_100E62990 != -1) {
        swift_once();
      }
      static UnitPoint.topLeading.getter();
      sub_10017DC04();
      LayoutSubview.place(at:anchor:proposal:)();
      uint64_t v24 = v34;
    }
  }
  ((void (*)(char *, uint64_t))v20)(v33, v24);
  return ((uint64_t (*)(char *, uint64_t))v20)(v18, v24);
}

uint64_t sub_100ACEBD8(uint64_t result)
{
  if (*(unsigned __int8 *)(result + 49) - 3 >= 2 && *(unsigned char *)(result + 32) == 1)
  {
    sub_1000E0E84();
    return sub_1000E0EF0();
  }
  return result;
}

double sub_100ACECC8(uint64_t a1, char a2)
{
  return sub_10029B190(a1, a2 & 1);
}

uint64_t sub_100ACECF8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_100ACE644(a1, a2 & 1, a3, a4 & 1);
}

uint64_t sub_100ACED10()
{
  return sub_100ACED58(&qword_100EAF530, (void (*)(uint64_t))type metadata accessor for LocationRegularViewLayout);
}

uint64_t sub_100ACED58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100ACEDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationRegularViewLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100ACEE04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationRegularViewLayout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationRegularViewLayout.Metrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocationRegularViewLayout.Metrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LocationRegularViewLayout.Metrics()
{
  return &type metadata for LocationRegularViewLayout.Metrics;
}

void *sub_100ACEEC8()
{
  uint64_t v0 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  __chkstk_darwin(v0 - 8);
  uint64_t v50 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for PressureComponentPreprocessedDataModel();
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  __chkstk_darwin(v43);
  int v48 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ListPreprocessedDataModel();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for UUID();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for PreprocessedWeatherData();
  sub_100097814(v19, qword_100F52398);
  uint64_t v44 = sub_1002102B0(v19, (uint64_t)qword_100F52398);
  uint64_t v45 = v18;
  UUID.init()();
  uint64_t v20 = (uint64_t)v15 + *(int *)(v13 + 36);
  uint64_t v21 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  _s7Weather24LocationCompositionStateOwst_0(v20, 1, 1, v21);
  void *v15 = 0;
  v15[1] = 0xE000000000000000;
  void v15[2] = 0;
  v15[3] = 0xE000000000000000;
  v15[4] = 0;
  v15[5] = 0;
  uint64_t v22 = (void *)((char *)v15 + *(int *)(v13 + 40));
  *uint64_t v22 = 0;
  v22[1] = 0xE000000000000000;
  uint64_t v23 = (uint64_t)v11 + *(int *)(v9 + 28);
  uint64_t v24 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v23, 1, 1, v24);
  uint64_t v47 = v11;
  *uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v25 = (char *)v7 + *(int *)(v5 + 40);
  Date.init()();
  uint64_t v26 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v27 = (uint64_t)&v25[*(int *)(v26 + 20)];
  uint64_t v42 = type metadata accessor for Elevation();
  _s7Weather24LocationCompositionStateOwst_0(v27, 1, 1, v42);
  uint64_t v28 = (uint64_t)&v25[*(int *)(v26 + 24)];
  uint64_t v41 = type metadata accessor for BackgroundMoonData();
  _s7Weather24LocationCompositionStateOwst_0(v28, 1, 1, v41);
  *uint64_t v7 = 0;
  v7[1] = 0xE000000000000000;
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = 0;
  v7[5] = 0xE000000000000000;
  v7[6] = 0;
  v7[7] = 0xE000000000000000;
  if (qword_100E62488 != -1) {
    swift_once();
  }
  v51[0] = qword_100F51960;
  v51[1] = *(void *)algn_100F51968;
  v51[2] = qword_100F51970;
  v51[3] = unk_100F51978;
  v51[4] = qword_100F51980;
  v51[5] = unk_100F51988;
  v51[6] = qword_100F51990;
  v51[7] = unk_100F51998;
  v51[8] = qword_100F519A0;
  v51[9] = unk_100F519A8;
  long long v52 = xmmword_100F519B0;
  uint64_t v53 = 0;
  unint64_t v54 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v29 = (uint64_t)v48;
  WeatherDescription.init(stringLiteral:)();
  uint64_t v30 = (void *)(v29 + *(int *)(v43 + 20));
  void *v30 = 0;
  v30[1] = 0xE000000000000000;
  *(void *)&long long v55 = 0;
  *((void *)&v55 + 1) = 0xE000000000000000;
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  uint64_t v31 = enum case for PressureTrend.steady(_:);
  uint64_t v32 = type metadata accessor for PressureTrend();
  uint64_t v33 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v49, v31, v32);
  uint64_t v34 = (int *)v46;
  uint64_t v35 = (void *)(v33 + *(int *)(v46 + 20));
  *uint64_t v35 = 0;
  v35[1] = 0xE000000000000000;
  uint64_t v36 = (void *)(v33 + v34[6]);
  void *v36 = 0;
  v36[1] = 0xE000000000000000;
  uint64_t v37 = (void *)(v33 + v34[7]);
  *uint64_t v37 = 0;
  v37[1] = 0xE000000000000000;
  *(void *)(v33 + v34[8]) = 0;
  uint64_t v38 = (void *)(v33 + v34[9]);
  *uint64_t v38 = 0;
  v38[1] = 0xE000000000000000;
  v60[0] = 0;
  v60[1] = 0xE000000000000000;
  v60[2] = 0;
  v60[3] = 0xE000000000000000;
  v60[4] = 0;
  v60[5] = 0xE000000000000000;
  v60[6] = 1684957527;
  v60[7] = 0xE400000000000000;
  v60[8] = 0;
  v60[9] = 0xE000000000000000;
  v60[10] = 0;
  v60[11] = 0xE000000000000000;
  v60[12] = 0;
  v60[13] = 0xE000000000000000;
  v60[14] = 0x7374737547;
  v60[15] = 0xE500000000000000;
  v60[16] = 0;
  v60[17] = 0xE000000000000000;
  v60[18] = 0x6F69746365726944;
  v60[19] = 0xE90000000000006ELL;
  v60[20] = 0;
  v60[21] = 0xE000000000000000;
  v60[22] = 0;
  v60[23] = 0xE000000000000000;
  v60[24] = 0;
  v60[25] = 0xE000000000000000;
  v60[26] = 0;
  v60[27] = 0;
  v60[28] = 0xE000000000000000;
  uint64_t v39 = (uint64_t)v50;
  Date.init()();
  _s7Weather24LocationCompositionStateOwst_0(v39 + *(int *)(v26 + 20), 1, 1, v42);
  _s7Weather24LocationCompositionStateOwst_0(v39 + *(int *)(v26 + 24), 1, 1, v41);
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  memset(&v61[2], 0, 24);
  v61[5] = 0xE000000000000000;
  v61[6] = 0;
  v61[7] = 0xE000000000000000;
  v61[8] = 0;
  v61[9] = 0xE000000000000000;
  v61[10] = 0;
  v61[11] = 0xE000000000000000;
  long long v62 = xmmword_100C313A0;
  return sub_1001E6F7C((uint64_t)v45, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v15, (uint64_t)v47, (uint64_t)v7, v51, v29, &v55, v44, v33, v60, v39, v61);
}

uint64_t sub_100ACF498()
{
  uint64_t v1 = sub_10017DF08(&qword_100E749B0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v3);
  sub_100128F8C();
  sub_100109328(v4);
  uint64_t v486 = type metadata accessor for HistoricalComparisons();
  sub_100179C0C();
  uint64_t v412 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  sub_100109328(v7);
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v510 = v9;
  uint64_t v511 = v8;
  __chkstk_darwin(v8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v10);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v11);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v12);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v13);
  sub_100128F8C();
  sub_100109338(v14);
  uint64_t v15 = sub_10017DF08(&qword_100E63730);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109328(v17);
  uint64_t v487 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v492 = v18;
  __chkstk_darwin(v19);
  sub_100109338((uint64_t)&v406 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_10017DF08(&qword_100E63740);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109338(v23);
  uint64_t v24 = sub_10017DF08(&qword_100E6B8A8);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109338(v26);
  uint64_t v27 = sub_10017DF08(&qword_100E6B8B8);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v475 = v29;
  uint64_t v471 = type metadata accessor for WeatherAvailability.AvailabilityKind();
  sub_100179C0C();
  uint64_t v485 = v30;
  __chkstk_darwin(v31);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v32);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v33);
  sub_100128F8C();
  uint64_t v470 = v34;
  uint64_t v35 = type metadata accessor for WeatherAvailability();
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100109314();
  sub_100109338(v37);
  uint64_t v38 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100109314();
  *(void *)&long long v509 = v40;
  uint64_t v41 = sub_10017DF08(&qword_100E885C0);
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  sub_10017225C(v43, v406);
  uint64_t v44 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_100109314();
  uint64_t v507 = v46;
  uint64_t v47 = sub_10017DF08(&qword_100E66CC8);
  uint64_t v48 = sub_100109308(v47);
  __chkstk_darwin(v48);
  sub_100109314();
  uint64_t v506 = v49;
  uint64_t v50 = sub_10017DF08(&qword_100E6E8F8);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v497 = v52;
  uint64_t v53 = sub_10017DF08(&qword_100E85FA0);
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  v456 = (char *)&v406 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for WeatherMetadata();
  uint64_t v57 = sub_100109308(v56);
  __chkstk_darwin(v57);
  sub_100109338((uint64_t)&v406 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v60 = sub_100109308(v59);
  __chkstk_darwin(v60);
  sub_100109314();
  sub_100109338(v61);
  uint64_t v62 = sub_10017DF08(&qword_100E6BF38);
  uint64_t v63 = sub_100109308(v62);
  __chkstk_darwin(v63);
  sub_100109314();
  uint64_t v469 = v64;
  uint64_t v65 = type metadata accessor for Wind();
  uint64_t v66 = sub_100109308(v65);
  __chkstk_darwin(v66);
  sub_100109314();
  sub_100109338(v67);
  uint64_t v410 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v409 = v68;
  __chkstk_darwin(v69);
  sub_100109314();
  uint64_t v482 = v70;
  uint64_t v71 = type metadata accessor for UVIndex();
  uint64_t v72 = sub_100109308(v71);
  __chkstk_darwin(v72);
  sub_100109314();
  sub_100109338(v73);
  uint64_t v74 = sub_10017DF08(qword_100E65268);
  uint64_t v75 = sub_100109308(v74);
  __chkstk_darwin(v75);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v76);
  sub_100128F8C();
  sub_100109328(v77);
  uint64_t v467 = type metadata accessor for ApparentPrecipitationIntensityCategory();
  sub_100179C0C();
  uint64_t v481 = v78;
  __chkstk_darwin(v79);
  sub_100109314();
  uint64_t v466 = v80;
  uint64_t v81 = type metadata accessor for ApparentPrecipitationIntensity();
  uint64_t v82 = sub_100109308(v81);
  __chkstk_darwin(v82);
  sub_100109314();
  unint64_t v505 = v83;
  uint64_t v84 = type metadata accessor for PrecipitationAmountByType();
  uint64_t v85 = sub_100109308(v84);
  __chkstk_darwin(v85);
  sub_100162EF8();
  uint64_t v504 = v86;
  sub_1001626D4();
  __chkstk_darwin(v87);
  sub_100109770();
  uint64_t v502 = v88;
  sub_1001626D4();
  __chkstk_darwin(v89);
  sub_100109770();
  uint64_t v500 = v90;
  sub_1001626D4();
  __chkstk_darwin(v91);
  v503 = (char *)&v406 - v92;
  sub_1001626D4();
  __chkstk_darwin(v93);
  sub_100109770();
  uint64_t v501 = v94;
  sub_1001626D4();
  __chkstk_darwin(v95);
  sub_10019AB3C(v96, v97, v98, v99, v100, v101, v102, v103, v406);
  uint64_t v104 = type metadata accessor for PrecipitationAmount();
  uint64_t v105 = sub_100109308(v104);
  __chkstk_darwin(v105);
  sub_100162EF8();
  uint64_t v498 = v106;
  sub_1001626D4();
  __chkstk_darwin(v107);
  sub_100128F8C();
  sub_100109328(v108);
  uint64_t v464 = type metadata accessor for PressureTrend();
  sub_100179C0C();
  uint64_t v479 = v109;
  __chkstk_darwin(v110);
  sub_100109338((uint64_t)&v406 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = sub_10017DF08(&qword_100E6BED0);
  uint64_t v113 = sub_100109308(v112);
  __chkstk_darwin(v113);
  sub_100109338((uint64_t)&v406 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v465 = sub_10017DF08(&qword_100E6D0A8);
  sub_100162E4C();
  __chkstk_darwin(v115);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v116);
  sub_100128F8C();
  sub_100109338(v117);
  uint64_t v480 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v408 = v118;
  __chkstk_darwin(v119);
  sub_100179C90();
  __chkstk_darwin(v120);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v121);
  v489 = (char *)&v406 - v122;
  uint64_t v123 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v125 = v124;
  __chkstk_darwin(v126);
  sub_1001626E0();
  uint64_t v129 = v128 - v127;
  uint64_t v491 = v128 - v127;
  uint64_t v130 = type metadata accessor for CloudCoverByAltitude();
  uint64_t v131 = sub_100109308(v130);
  __chkstk_darwin(v131);
  sub_100109370();
  uint64_t v490 = v0;
  uint64_t v132 = type metadata accessor for Date();
  uint64_t v133 = sub_100109308(v132);
  __chkstk_darwin(v133);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v134);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v135);
  v477 = (char *)&v406 - v136;
  uint64_t v137 = type metadata accessor for CurrentWeather();
  uint64_t v138 = sub_100109308(v137);
  __chkstk_darwin(v138);
  uint64_t v468 = sub_1001826D8(v139, v406);
  sub_100179C0C();
  uint64_t v483 = v140;
  __chkstk_darwin(v141);
  sub_100109314();
  sub_100109338(v142);
  sub_10017DF08(&qword_100EAF5F0);
  uint64_t v143 = sub_10017DF08(&qword_100EAF5F8);
  sub_100179EF0();
  unint64_t v146 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
  uint64_t v459 = *(void *)(v144 + 72);
  uint64_t v147 = swift_allocObject();
  *(_OWORD *)(v147 + 16) = xmmword_100C31870;
  uint64_t v413 = v147;
  uint64_t v148 = (uint64_t *)(v147 + v146);
  uint64_t v449 = v143;
  v407 = (uint64_t *)(v147 + v146 + *(int *)(v143 + 48));
  uint64_t v149 = v407;
  uint64_t *v148 = static Location.currentLocationID.getter();
  v148[1] = v150;
  v446 = v148;
  uint64_t v151 = sub_10017DF08(&qword_100E63748);
  uint64_t v416 = (uint64_t)v149 + *(int *)(v151 + 48);
  uint64_t v448 = v151;
  v488 = (void (*)(uint64_t, uint64_t))*(int *)(v151 + 64);
  Date.init()();
  CloudCoverByAltitude.init(low:medium:high:)();
  uint64_t v152 = *(void (**)(void, void, void))(v125 + 104);
  uint64_t v451 = v123;
  uint64_t v450 = v125 + 104;
  v447 = v152;
  v152(v129, enum case for WeatherCondition.wintryMix(_:), v123);
  uint64_t v153 = self;
  uint64_t v154 = sub_1001A6930((uint64_t)[v153 celsius], (unint64_t *)&qword_100E659A0);
  Measurement.init(value:unit:)();
  id v462 = self;
  uint64_t v478 = sub_1001A6930((uint64_t)[v462 metersPerSecond], (unint64_t *)&qword_100E6BF18);
  Measurement.init(value:unit:)();
  id v445 = self;
  uint64_t v444 = sub_1001A6930((uint64_t)[v445 millibars], &qword_100E6BF30);
  Measurement.init(value:unit:)();
  sub_10018390C();
  int v443 = v155;
  uint64_t v479 = v156;
  uint64_t v442 = v157;
  sub_1001631E8();
  v158();
  sub_100AD20E8();
  sub_100AD20E8();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  sub_10018390C();
  int v441 = v159;
  uint64_t v481 = v160;
  uint64_t v440 = v161;
  sub_1001631E8();
  v162();
  ApparentPrecipitationIntensity.init(value:category:)();
  id v163 = [v153 celsius];
  Measurement.init(value:unit:)();
  id v461 = v153;
  id v164 = [v153 celsius];
  uint64_t v460 = v154;
  uint64_t v165 = (uint64_t)v456;
  Measurement.init(value:unit:)();
  uint64_t v166 = sub_10019B2A4();
  uint64_t v167 = v480;
  _s7Weather24LocationCompositionStateOwst_0(v166, v168, v169, v480);
  uint64_t v170 = sub_10017EFCC((uint64_t)&v509);
  _s7Weather24LocationCompositionStateOwst_0(v170, v171, v172, v167);
  sub_10018B34C();
  UVIndex.init(value:category:)();
  id v458 = self;
  sub_1001A6930((uint64_t)[v458 meters], (unint64_t *)&qword_100E6B678);
  sub_100119514();
  uint64_t v457 = v173;
  Measurement.init(value:unit:)();
  id v439 = self;
  sub_1001A6930((uint64_t)[v439 degrees], (unint64_t *)&qword_100E952D0);
  sub_10017B4D0();
  uint64_t v436 = v174;
  Measurement.init(value:unit:)();
  id v175 = [v462 milesPerHour];
  sub_10017253C();
  uint64_t v176 = sub_10018A150((uint64_t)v494);
  sub_10019CC38(v176, v177, v178);
  sub_100162868();
  Wind.init(compassDirection:direction:speed:gust:)();
  sub_100166B1C();
  Date.init()();
  Date.init()();
  uint64_t v179 = type metadata accessor for WeatherAttribution();
  _s7Weather24LocationCompositionStateOwst_0(v165, 1, 1, v179);
  sub_10017B4D0();
  sub_10018AF54();
  sub_1001290B8();
  sub_100152480();
  sub_100183690();
  sub_100186E04();
  uint64_t v438 = sub_10017DF08(&qword_100E6E900);
  _s7Weather24LocationCompositionStateOwst_0(v497, 1, 1, v438);
  Date.init()();
  Date.init()();
  uint64_t v493 = v179;
  _s7Weather24LocationCompositionStateOwst_0(v165, 1, 1, v179);
  WeatherMetadata.init(date:expirationDate:attribution:)();
  uint64_t v180 = type metadata accessor for HourWeather();
  uint64_t v181 = sub_1001A39F0(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  uint64_t v182 = sub_1001A39F0(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  uint64_t v183 = sub_1001A39F0(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  uint64_t v437 = v180;
  uint64_t v435 = v181;
  uint64_t v434 = v182;
  uint64_t v433 = v183;
  Forecast.init(_:metadata:)();
  Date.init()();
  Date.init()();
  sub_100182D88(v165);
  sub_100210410();
  uint64_t v184 = type metadata accessor for DayWeather();
  uint64_t v185 = sub_1001A39F0(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  uint64_t v186 = sub_1001A39F0(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  uint64_t v187 = sub_1001A39F0(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  uint64_t v432 = v184;
  uint64_t v431 = v185;
  uint64_t v430 = v186;
  uint64_t v429 = v187;
  Forecast.init(_:metadata:)();
  uint64_t v426 = type metadata accessor for AirQuality();
  _s7Weather24LocationCompositionStateOwst_0(v508, 1, 1, v426);
  Date.init()();
  Date.init()();
  sub_10012611C();
  sub_100210410();
  WeatherChanges.init(changes:metadata:)();
  type metadata accessor for WeatherChanges();
  uint64_t v188 = sub_100127B38();
  *(void *)(v190 - 256) = v189;
  _s7Weather24LocationCompositionStateOwst_0(v188, v191, v192, v189);
  uint64_t v193 = enum case for WeatherAvailability.AvailabilityKind.unknown(_:);
  uint64_t v194 = v485 + 104;
  v195 = *(void (**)(void))(v485 + 104);
  uint64_t v196 = v471;
  ((void (*)(uint64_t, void, uint64_t))v195)(v470, enum case for WeatherAvailability.AvailabilityKind.unknown(_:), v471);
  ((void (*)(uint64_t, uint64_t, uint64_t))v195)(v472, v193, v196);
  int v428 = v193;
  uint64_t v485 = v194;
  v427 = v195;
  ((void (*)(uint64_t, uint64_t, uint64_t))v195)(v473, v193, v196);
  sub_100172504();
  WeatherAvailability.init(minuteAvailability:alertAvailability:airQualityAvailability:)();
  Date.init()();
  Date.init()();
  sub_10012611C();
  sub_100210410();
  sub_100127A68();
  HistoricalComparisons.init(comparisons:metadata:)();
  _s7Weather24LocationCompositionStateOwst_0(v165, 0, 1, v486);
  type metadata accessor for HistoricalFacts();
  uint64_t v197 = sub_100182368((uint64_t)&v500);
  uint64_t v423 = v198;
  _s7Weather24LocationCompositionStateOwst_0(v197, v199, v200, v198);
  sub_1001A2FAC();
  WeatherDataModel.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherChanges:weatherAlerts:availability:historicalComparisons:historicalFacts:)();
  type metadata accessor for WeatherDataOverrides();
  uint64_t v201 = sub_10017EFCC((uint64_t)&v497);
  uint64_t v422 = v202;
  _s7Weather24LocationCompositionStateOwst_0(v201, v203, v204, v202);
  sub_100127A68();
  UUID.init()();
  uint64_t v205 = UUID.uuidString.getter();
  uint64_t v207 = v206;
  uint64_t v208 = *(void *)(v492 + 8);
  v492 += 8;
  uint64_t v463 = v208;
  sub_100162F0C();
  v209();
  sub_100127A68();
  static Locale.current.getter();
  type metadata accessor for Locale();
  uint64_t v210 = sub_100163DF4();
  uint64_t v421 = v211;
  _s7Weather24LocationCompositionStateOwst_0(v210, v212, v213, v211);
  v214 = (int *)type metadata accessor for WeatherData(0);
  v215 = v407;
  uint64_t v420 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v216 = (uint64_t)v215 + v214[7];
  uint64_t v419 = sub_10017DF08(&qword_100E63738);
  _s7Weather24LocationCompositionStateOwst_0(v216, 1, 1, v419);
  uint64_t *v215 = v205;
  v215[1] = v207;
  sub_1001278D0(v165, (uint64_t)v215 + v214[5], &qword_100E63730);
  uint64_t v217 = *(void *)(v483 + 32);
  v483 += 32;
  uint64_t v418 = v217;
  sub_1001190D4();
  v218();
  v425 = v214;
  sub_1001278D0(v196, (uint64_t)v215 + v214[9], &qword_100E63740);
  if (qword_100E62AD0 != -1) {
    swift_once();
  }
  uint64_t v219 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v417 = sub_1002102B0(v219, (uint64_t)qword_100F52398);
  sub_100AD5214(v417, v416);
  if (qword_100E62BC8 != -1) {
    swift_once();
  }
  uint64_t v220 = (uint64_t)v488 + (void)v215;
  uint64_t v221 = type metadata accessor for NewsDataModel();
  uint64_t v416 = sub_1002102B0(v221, (uint64_t)qword_100F52468);
  v415 = type metadata accessor for NewsDataModel;
  sub_100AD5214(v416, v220);
  uint64_t v414 = type metadata accessor for LocationWeatherDataState(0);
  swift_storeEnumTagMultiPayload();
  v222 = v446;
  v223 = (uint64_t *)((char *)v446 + v459);
  uint64_t v224 = v449;
  v225 = (uint64_t *)((char *)v446 + v459 + *(int *)(v449 + 48));
  uint64_t v226 = v454;
  static Location.cupertino.getter();
  uint64_t v227 = Location.id.getter();
  uint64_t v229 = v228;
  uint64_t v230 = v511;
  uint64_t v232 = v510 + 8;
  v231 = *(void (**)(uint64_t, uint64_t))(v510 + 8);
  v231(v226, v511);
  v488 = v231;
  uint64_t v510 = v232;
  uint64_t *v223 = v227;
  v223[1] = v229;
  id v233 = [v461 celsius];
  uint64_t v234 = (uint64_t)v489;
  Measurement.init(value:unit:)();
  id v235 = [v458 millimeters];
  uint64_t v236 = v482;
  Measurement.init(value:unit:)();
  sub_100AD43F0();
  sub_100172504();
  static HistoricalComparisons.mock(comparisons:)();
  swift_bridgeObjectRelease();
  sub_100AD2344(v234, v236, (uint64_t)v231, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 0, v225);
  sub_100162F0C();
  v237();
  sub_100162F0C();
  v238();
  sub_100162F0C();
  v239();
  uint64_t v240 = (uint64_t)v222 + 2 * v459 + *(int *)(v224 + 48);
  sub_100172504();
  static Location.newYork.getter();
  Location.id.getter();
  v231((uint64_t)v231, v230);
  sub_1001D40B0();
  v407 = (uint64_t *)v240;
  uint64_t v408 = v240 + v241;
  uint64_t v409 = v240 + *(int *)(v242 + 64);
  Date.init()();
  sub_10018A4F4();
  sub_1001631E8();
  v243();
  id v244 = v461;
  id v245 = [v461 celsius];
  Measurement.init(value:unit:)();
  id v246 = v462;
  id v247 = [v462 metersPerSecond];
  sub_100AD5D7C();
  Measurement.init(value:unit:)();
  id v248 = [v445 millibars];
  sub_1001CA954();
  sub_1001631E8();
  v249();
  sub_100AD20E8();
  sub_100AD20E8();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  sub_1001631E8();
  v250();
  ApparentPrecipitationIntensity.init(value:category:)();
  id v251 = [v244 celsius];
  Measurement.init(value:unit:)();
  id v252 = [v244 celsius];
  Measurement.init(value:unit:)();
  uint64_t v253 = sub_1001D2600();
  uint64_t v255 = *(void *)(v254 - 256);
  _s7Weather24LocationCompositionStateOwst_0(v253, v256, v257, v255);
  uint64_t v258 = sub_10019B2A4();
  _s7Weather24LocationCompositionStateOwst_0(v258, v259, v260, v255);
  sub_10018B34C();
  UVIndex.init(value:category:)();
  id v261 = [v458 meters];
  sub_100166B1C();
  Measurement.init(value:unit:)();
  id v262 = [v439 degrees];
  sub_100162868();
  Measurement.init(value:unit:)();
  id v263 = [v246 milesPerHour];
  Measurement.init(value:unit:)();
  uint64_t v264 = sub_100182368((uint64_t)v494);
  sub_10019CC38(v264, v265, v266);
  Wind.init(compassDirection:direction:speed:gust:)();
  sub_1001D148C();
  Date.init()();
  sub_10012B750();
  Date.init()();
  uint64_t v411 = type metadata accessor for URL();
  sub_100182D88(v452);
  sub_100182D88(v453);
  sub_100164FD4();
  uint64_t v412 = v267;
  sub_1001EA9EC();
  WeatherAttribution.init(name:sourceURL:logoURL:)();
  uint64_t v268 = sub_10018A294();
  _s7Weather24LocationCompositionStateOwst_0(v268, v270, v271, *(void *)(v269 - 256));
  sub_10017B4D0();
  WeatherMetadata.init(date:expirationDate:attribution:)();
  sub_1001A28B8();
  sub_100119154();
  sub_100186E04();
  sub_10019D374();
  Date.init()();
  Date.init()();
  sub_1001896B8();
  sub_100182264();
  Date.init()();
  Date.init()();
  sub_1001896B8();
  sub_100183334();
  sub_1001D1688();
  Date.init()();
  Date.init()();
  sub_1001896B8();
  WeatherChanges.init(changes:metadata:)();
  uint64_t v272 = sub_100188E7C();
  _s7Weather24LocationCompositionStateOwst_0(v272, v273, v274, v424);
  sub_10018E068();
  uint64_t v275 = v485;
  v276 = v427;
  sub_100164054();
  v276();
  sub_100127A30();
  sub_100164054();
  v276();
  sub_100164054();
  v276();
  WeatherAvailability.init(minuteAvailability:alertAvailability:airQualityAvailability:)();
  Date.init()();
  sub_100127A68();
  Date.init()();
  sub_1001791DC();
  WeatherMetadata.init(date:expirationDate:attribution:)();
  sub_10012B920();
  HistoricalComparisons.init(comparisons:metadata:)();
  uint64_t v277 = sub_100164998();
  _s7Weather24LocationCompositionStateOwst_0(v277, v278, v279, v486);
  uint64_t v280 = sub_10017F720();
  _s7Weather24LocationCompositionStateOwst_0(v280, v281, v282, v423);
  sub_1001A2FAC();
  WeatherDataModel.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherChanges:weatherAlerts:availability:historicalComparisons:historicalFacts:)();
  uint64_t v283 = v474;
  _s7Weather24LocationCompositionStateOwst_0(v474, 1, 1, v422);
  UUID.init()();
  uint64_t v284 = UUID.uuidString.getter();
  uint64_t v286 = v285;
  sub_10019DC38();
  v287();
  sub_100172504();
  static Locale.current.getter();
  _s7Weather24LocationCompositionStateOwst_0(v275, 0, 1, v421);
  v288 = v425;
  v289 = v407;
  swift_storeEnumTagMultiPayload();
  sub_100128AC0((uint64_t)v289 + v288[7]);
  uint64_t *v289 = v284;
  v289[1] = v286;
  sub_1001278D0(v275, (uint64_t)v289 + v288[5], &qword_100E63730);
  sub_100166E04();
  v290();
  sub_1001278D0(v283, (uint64_t)v289 + v288[9], &qword_100E63740);
  uint64_t v410 = (uint64_t)type metadata accessor for PreprocessedWeatherData;
  sub_100AD5214(v417, v408);
  sub_100AD5214(v416, v409);
  swift_storeEnumTagMultiPayload();
  uint64_t v291 = (uint64_t)v446 + 3 * v459 + *(int *)(v449 + 48);
  sub_100172504();
  static Location.london.getter();
  Location.id.getter();
  sub_10016EF34();
  v292();
  sub_1001D40B0();
  v446 = (uint64_t *)v291;
  uint64_t v449 = v291 + v293;
  uint64_t v459 = v291 + *(int *)(v294 + 64);
  Date.init()();
  sub_10018A4F4();
  sub_1001631E8();
  v295();
  id v296 = v461;
  id v297 = [v461 celsius];
  uint64_t v298 = v460;
  Measurement.init(value:unit:)();
  id v299 = v462;
  id v300 = [v462 metersPerSecond];
  sub_100AD5D7C();
  Measurement.init(value:unit:)();
  id v301 = [v445 millibars];
  sub_1001CA954();
  sub_1001631E8();
  v302();
  sub_100AD20E8();
  sub_100AD20E8();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  sub_1001631E8();
  v303();
  ApparentPrecipitationIntensity.init(value:category:)();
  id v304 = [v296 celsius];
  Measurement.init(value:unit:)();
  id v305 = [v296 celsius];
  Measurement.init(value:unit:)();
  uint64_t v306 = sub_1001D2600();
  uint64_t v308 = *(void *)(v307 - 256);
  _s7Weather24LocationCompositionStateOwst_0(v306, v309, v310, v308);
  _s7Weather24LocationCompositionStateOwst_0(v484, 1, 1, v308);
  sub_10012B920();
  UVIndex.init(value:category:)();
  id v311 = [v458 meters];
  sub_100119514();
  Measurement.init(value:unit:)();
  id v312 = [v439 degrees];
  sub_100166B1C();
  Measurement.init(value:unit:)();
  id v313 = [v299 milesPerHour];
  sub_10017253C();
  uint64_t v314 = sub_10015030C((uint64_t)v494);
  sub_10019CC38(v314, v315, v316);
  sub_10018B34C();
  Wind.init(compassDirection:direction:speed:gust:)();
  Date.init()();
  Date.init()();
  uint64_t v317 = sub_10018A150((uint64_t)&v475);
  uint64_t v318 = v411;
  _s7Weather24LocationCompositionStateOwst_0(v317, v319, v320, v411);
  uint64_t v321 = sub_10017EFCC((uint64_t)v476);
  _s7Weather24LocationCompositionStateOwst_0(v321, v322, v323, v318);
  sub_1001EA9EC();
  WeatherAttribution.init(name:sourceURL:logoURL:)();
  uint64_t v324 = sub_10018A294();
  uint64_t v326 = *(void *)(v325 - 256);
  _s7Weather24LocationCompositionStateOwst_0(v324, v327, v328, v326);
  sub_10017B4D0();
  WeatherMetadata.init(date:expirationDate:attribution:)();
  sub_1001A28B8();
  sub_100152480();
  sub_100183690();
  sub_100186E04();
  sub_10019D374();
  Date.init()();
  Date.init()();
  uint64_t v329 = sub_10017F720();
  _s7Weather24LocationCompositionStateOwst_0(v329, v330, v331, v326);
  WeatherMetadata.init(date:expirationDate:attribution:)();
  sub_100182264();
  Date.init()();
  Date.init()();
  sub_10018C644();
  sub_100183334();
  sub_1001D1688();
  Date.init()();
  Date.init()();
  sub_10018C644();
  WeatherChanges.init(changes:metadata:)();
  uint64_t v332 = sub_100127B38();
  _s7Weather24LocationCompositionStateOwst_0(v332, v334, v335, *(void *)(v333 - 256));
  sub_10018E068();
  uint64_t v337 = *(void *)(v336 - 256);
  v338 = v427;
  v427();
  uint64_t v339 = sub_100127A30();
  ((void (*)(uint64_t))v338)(v339);
  ((void (*)(uint64_t, uint64_t, uint64_t))v338)(v473, v318, v337);
  sub_1001D148C();
  WeatherAvailability.init(minuteAvailability:alertAvailability:airQualityAvailability:)();
  Date.init()();
  Date.init()();
  sub_1001791DC();
  sub_100172504();
  sub_1001C8774();
  WeatherMetadata.init(date:expirationDate:attribution:)();
  sub_100127A68();
  HistoricalComparisons.init(comparisons:metadata:)();
  uint64_t v340 = sub_100163DF4();
  _s7Weather24LocationCompositionStateOwst_0(v340, v341, v342, v486);
  uint64_t v343 = sub_10018A150((uint64_t)&v500);
  _s7Weather24LocationCompositionStateOwst_0(v343, v344, v345, v423);
  sub_10012B920();
  sub_1001A2FAC();
  WeatherDataModel.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherChanges:weatherAlerts:availability:historicalComparisons:historicalFacts:)();
  uint64_t v346 = v474;
  _s7Weather24LocationCompositionStateOwst_0(v474, 1, 1, v422);
  sub_100162868();
  UUID.init()();
  uint64_t v347 = UUID.uuidString.getter();
  uint64_t v349 = v348;
  sub_10019DC38();
  v350();
  sub_100162868();
  static Locale.current.getter();
  uint64_t v351 = sub_1001279C4();
  _s7Weather24LocationCompositionStateOwst_0(v351, v352, v353, v421);
  v354 = v425;
  v355 = v446;
  swift_storeEnumTagMultiPayload();
  sub_100128AC0((uint64_t)v355 + v354[7]);
  uint64_t *v355 = v347;
  v355[1] = v349;
  sub_1001278D0(v298, (uint64_t)v355 + v354[5], &qword_100E63730);
  sub_100166E04();
  v356();
  sub_1001278D0(v346, (uint64_t)v355 + v354[9], &qword_100E63740);
  sub_100AD5214(v417, v449);
  sub_100AD5214(v416, v459);
  swift_storeEnumTagMultiPayload();
  uint64_t v497 = Dictionary.init(dictionaryLiteral:)();
  sub_10017DF08(&qword_100EAF600);
  uint64_t v357 = sub_10017DF08(&qword_100EAF608) - 8;
  uint64_t v358 = *(void *)(*(void *)v357 + 72);
  unint64_t v359 = (*(unsigned __int8 *)(*(void *)v357 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v357 + 80);
  uint64_t v360 = swift_allocObject();
  uint64_t v496 = v360;
  *(_OWORD *)(v360 + 16) = xmmword_100C31880;
  v361 = (uint64_t *)(v360 + v359);
  sub_100162868();
  static Location.current.getter();
  uint64_t v362 = Location.id.getter();
  uint64_t v364 = v363;
  uint64_t v365 = v511;
  sub_10016EF34();
  v366();
  uint64_t *v361 = v362;
  v361[1] = v364;
  v367 = v361;
  v499 = v361;
  uint64_t v508 = sub_10017DF08(&qword_100EAF610);
  uint64_t v368 = type metadata accessor for AvailableDataSets();
  sub_100179EF0();
  sub_100129024();
  uint64_t v506 = v370 & ~v369;
  uint64_t v504 = v369 | 7;
  uint64_t v498 = v506 + v371;
  uint64_t v372 = swift_allocObject();
  long long v509 = xmmword_100C251B0;
  *(_OWORD *)(v372 + 16) = xmmword_100C251B0;
  static AvailableDataSets.all.getter();
  uint64_t v512 = v372;
  uint64_t v501 = sub_1001A39F0(&qword_100E9BB68, (void (*)(uint64_t))&type metadata accessor for AvailableDataSets);
  uint64_t v373 = sub_10017DF08(&qword_100EAF618);
  unint64_t v505 = sub_100AD526C();
  uint64_t v502 = v373;
  v503 = (char *)v368;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v507 = type metadata accessor for LocationAvailableDataSetState(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v500 = v358;
  v374 = (uint64_t *)((char *)v367 + v358);
  uint64_t v495 = v357;
  uint64_t v375 = v455;
  static Location.cupertino.getter();
  uint64_t v376 = Location.id.getter();
  uint64_t v378 = v377;
  uint64_t v379 = v375;
  v380 = v488;
  v488(v379, v365);
  uint64_t *v374 = v376;
  v374[1] = v378;
  v381 = (__n128 *)swift_allocObject();
  sub_100109488(v381);
  static AvailableDataSets.all.getter();
  uint64_t v512 = v376;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  swift_storeEnumTagMultiPayload();
  v382 = v499;
  v383 = (uint64_t *)((char *)v499 + 2 * v358);
  sub_10012B750();
  static Location.newYork.getter();
  uint64_t v384 = Location.id.getter();
  uint64_t v386 = v385;
  v380(v358, v511);
  uint64_t *v383 = v384;
  v383[1] = v386;
  v387 = (__n128 *)swift_allocObject();
  sub_10011C114(v387);
  static AvailableDataSets.all.getter();
  uint64_t v512 = (uint64_t)v387;
  v388 = v503;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  swift_storeEnumTagMultiPayload();
  v389 = (uint64_t *)((char *)v382 + 3 * v500);
  sub_100166B1C();
  static Location.london.getter();
  uint64_t v390 = Location.id.getter();
  uint64_t v392 = v391;
  v488((uint64_t)v388, v511);
  uint64_t *v389 = v390;
  v389[1] = v392;
  v393 = (__n128 *)swift_allocObject();
  sub_10011C114(v393);
  static AvailableDataSets.all.getter();
  uint64_t v512 = (uint64_t)v393;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  swift_storeEnumTagMultiPayload();
  v394 = (uint64_t *)((char *)v499 + 4 * v500);
  sub_100188D14();
  static Location.jerusalem.getter();
  uint64_t v395 = Location.id.getter();
  uint64_t v397 = v396;
  sub_100162F0C();
  v398();
  uint64_t *v394 = v395;
  v394[1] = v397;
  v399 = (__n128 *)swift_allocObject();
  sub_100109488(v399);
  static AvailableDataSets.historicalFacts.getter();
  uint64_t v512 = v395;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  swift_storeEnumTagMultiPayload();
  uint64_t v400 = Dictionary.init(dictionaryLiteral:)();
  UUID.init()();
  uint64_t v401 = UUID.uuidString.getter();
  uint64_t v403 = v402;
  sub_10019DC38();
  uint64_t result = v404();
  qword_100F523B0 = v401;
  *(void *)algn_100F523B8 = v403;
  qword_100F523C0 = v497;
  unk_100F523C8 = v400;
  return result;
}

uint64_t sub_100AD20E8()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6B648);
  __chkstk_darwin(v0 - 8);
  __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = self;
  id v7 = [v6 millimeters];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  Measurement.init(value:unit:)();
  id v8 = [v6 millimeters];
  Measurement.init(value:unit:)();
  id v9 = [v6 millimeters];
  Measurement.init(value:unit:)();
  id v10 = [v6 millimeters];
  Measurement.init(value:unit:)();
  id v11 = [v6 millimeters];
  Measurement.init(value:unit:)();
  id v12 = [v6 millimeters];
  Measurement.init(value:unit:)();
  return PrecipitationAmount.init(pastHour:pastSixHours:pastTwentyFourHours:nextHour:nextSixHours:nextTwentyFourHours:)();
}

uint64_t sub_100AD2344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t *a8@<X8>)
{
  int v323 = a7;
  int v321 = a6;
  uint64_t v306 = a5;
  int v295 = a4;
  uint64_t v305 = a3;
  uint64_t v322 = a2;
  uint64_t v351 = a1;
  uint64_t v310 = a8;
  uint64_t v308 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v307 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  sub_100109338(v13);
  uint64_t v14 = sub_10017DF08(&qword_100E63740);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v17 = sub_100109328(v16);
  uint64_t v304 = type metadata accessor for WeatherData.WeatherStatisticsState(v17);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  sub_100109338(v19);
  uint64_t v20 = sub_10017DF08(&qword_100E6B8A8);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109338((uint64_t)v294 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_10017DF08(&qword_100E6B8B8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v303 = v25;
  uint64_t v302 = type metadata accessor for WeatherAvailability.AvailabilityKind();
  sub_100179C0C();
  uint64_t v301 = v26;
  __chkstk_darwin(v27);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100128F8C();
  uint64_t v300 = v30;
  uint64_t v31 = type metadata accessor for WeatherAvailability();
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109338(v33);
  uint64_t v34 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100109314();
  sub_100109328(v36);
  v294[13] = type metadata accessor for AirQualitySourceKind();
  sub_100179C0C();
  v294[12] = v37;
  __chkstk_darwin(v38);
  sub_100109314();
  sub_100109328(v39);
  uint64_t v40 = type metadata accessor for AirQualitySource();
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_100109314();
  sub_100109328(v42);
  v294[8] = type metadata accessor for AirQualityPreviousDayComparison();
  sub_100179C0C();
  v294[7] = v43;
  __chkstk_darwin(v44);
  sub_100109314();
  sub_100109338(v45);
  uint64_t v46 = sub_10017DF08(&qword_100E7B2D8);
  uint64_t v47 = sub_100109308(v46);
  __chkstk_darwin(v47);
  sub_100109314();
  sub_100109328(v48);
  v294[6] = type metadata accessor for AirPollutantMeasurement();
  sub_100179C0C();
  v294[5] = v49;
  __chkstk_darwin(v50);
  sub_100109314();
  sub_100109328(v51);
  v294[2] = type metadata accessor for AirPollutantKind();
  sub_100179C0C();
  v294[1] = v52;
  __chkstk_darwin(v53);
  sub_100109314();
  sub_100109338(v54);
  uint64_t v55 = sub_10017DF08(&qword_100E9D208);
  uint64_t v56 = sub_100109308(v55);
  __chkstk_darwin(v56);
  sub_100109314();
  sub_100109328(v57);
  uint64_t v58 = type metadata accessor for AirQualityScaleCategory();
  uint64_t v59 = sub_100164920(v58);
  uint64_t v296 = v60;
  __chkstk_darwin(v59);
  sub_100109314();
  sub_100109328(v61);
  uint64_t v62 = type metadata accessor for AirQualityScaleGradient();
  uint64_t v63 = sub_100109308(v62);
  __chkstk_darwin(v63);
  sub_100109314();
  sub_100109328(v64);
  uint64_t v65 = type metadata accessor for AirQualityScale();
  uint64_t v66 = sub_100109308(v65);
  __chkstk_darwin(v66);
  sub_100109314();
  sub_100109338(v67);
  uint64_t v68 = sub_10017DF08(&qword_100E885C0);
  uint64_t v69 = sub_100109308(v68);
  __chkstk_darwin(v69);
  sub_100109314();
  sub_100109338(v70);
  uint64_t v71 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v72 = sub_100109308(v71);
  __chkstk_darwin(v72);
  sub_100109338((uint64_t)v294 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = sub_10017DF08(&qword_100E66CC8);
  uint64_t v75 = sub_100109308(v74);
  __chkstk_darwin(v75);
  sub_100109338((uint64_t)v294 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = sub_10017DF08(&qword_100E6E8F8);
  uint64_t v78 = sub_100109308(v77);
  __chkstk_darwin(v78);
  sub_100109338((uint64_t)v294 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_10017DF08(&qword_100E749B0);
  uint64_t v81 = sub_100109308(v80);
  __chkstk_darwin(v81);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v82);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v83);
  sub_100179C90();
  __chkstk_darwin(v84);
  sub_100128F8C();
  sub_100109338(v85);
  uint64_t v86 = sub_10017DF08(&qword_100E85FA0);
  uint64_t v87 = sub_100109308(v86);
  __chkstk_darwin(v87);
  sub_100162EF8();
  uint64_t v352 = v88;
  sub_1001626D4();
  __chkstk_darwin(v89);
  sub_100128F8C();
  uint64_t v319 = v90;
  uint64_t v91 = type metadata accessor for WeatherMetadata();
  uint64_t v92 = sub_100109308(v91);
  __chkstk_darwin(v92);
  sub_100179C90();
  __chkstk_darwin(v93);
  sub_100128F8C();
  sub_100109338(v94);
  uint64_t v95 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v96 = sub_100109308(v95);
  __chkstk_darwin(v96);
  sub_100109314();
  sub_100109338(v97);
  uint64_t v98 = sub_10017DF08(&qword_100E6BF38);
  uint64_t v99 = sub_100109308(v98);
  __chkstk_darwin(v99);
  sub_100109314();
  uint64_t v336 = v100;
  uint64_t v101 = type metadata accessor for Wind();
  uint64_t v102 = sub_100109308(v101);
  __chkstk_darwin(v102);
  uint64_t v331 = (char *)v294 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for UVIndex();
  uint64_t v105 = sub_100109308(v104);
  __chkstk_darwin(v105);
  sub_100109314();
  sub_100109338(v106);
  uint64_t v107 = sub_10017DF08(qword_100E65268);
  uint64_t v108 = sub_100109308(v107);
  __chkstk_darwin(v108);
  sub_100162EF8();
  uint64_t v342 = v109;
  sub_1001626D4();
  __chkstk_darwin(v110);
  sub_100128F8C();
  *(void *)&long long v350 = v111;
  uint64_t v335 = type metadata accessor for ApparentPrecipitationIntensityCategory();
  sub_100179C0C();
  uint64_t v334 = v112;
  __chkstk_darwin(v113);
  sub_100109314();
  uint64_t v333 = v114;
  uint64_t v115 = type metadata accessor for ApparentPrecipitationIntensity();
  uint64_t v116 = sub_100109308(v115);
  __chkstk_darwin(v116);
  sub_10017225C(v117, v294[0]);
  uint64_t v118 = type metadata accessor for PrecipitationAmountByType();
  uint64_t v119 = sub_100109308(v118);
  __chkstk_darwin(v119);
  sub_100162EF8();
  uint64_t v348 = v120;
  sub_1001626D4();
  __chkstk_darwin(v121);
  sub_100109770();
  uint64_t v346 = v122;
  sub_1001626D4();
  __chkstk_darwin(v123);
  uint64_t v344 = (char *)v294 - v124;
  sub_1001626D4();
  __chkstk_darwin(v125);
  sub_100109770();
  uint64_t v347 = v126;
  sub_1001626D4();
  __chkstk_darwin(v127);
  sub_100109770();
  uint64_t v345 = v128;
  sub_1001626D4();
  __chkstk_darwin(v129);
  sub_100128F8C();
  uint64_t v343 = v130;
  uint64_t v131 = sub_10017DF08(&qword_100E6B648);
  uint64_t v132 = sub_100109308(v131);
  __chkstk_darwin(v132);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v133);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v134);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v135);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v136);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v137);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v138);
  sub_100128F8C();
  sub_100109328(v139);
  uint64_t v140 = type metadata accessor for PrecipitationAmount();
  uint64_t v141 = sub_100109308(v140);
  __chkstk_darwin(v141);
  uint64_t v341 = (char *)v294 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v143);
  sub_10019AB3C(v144, v145, v146, v147, v148, v149, v150, v151, v294[0]);
  uint64_t v326 = type metadata accessor for PressureTrend();
  sub_100179C0C();
  uint64_t v325 = v152;
  __chkstk_darwin(v153);
  sub_100162E88();
  uint64_t v154 = sub_10017DF08(&qword_100E6BED0);
  uint64_t v155 = sub_100109308(v154);
  __chkstk_darwin(v155);
  sub_10012B938();
  uint64_t v332 = sub_10017DF08(&qword_100E6D0A8);
  sub_100162E4C();
  __chkstk_darwin(v156);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v157);
  int v159 = (char *)v294 - v158;
  uint64_t v330 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v329 = v160;
  __chkstk_darwin(v161);
  sub_100162EF8();
  uint64_t v339 = v162;
  sub_1001626D4();
  __chkstk_darwin(v163);
  sub_100109770();
  uint64_t v340 = v164;
  sub_1001626D4();
  __chkstk_darwin(v165);
  sub_1001CB758();
  uint64_t v166 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v168 = v167;
  __chkstk_darwin(v169);
  sub_1001626E0();
  uint64_t v172 = v171 - v170;
  uint64_t v173 = type metadata accessor for CloudCoverByAltitude();
  uint64_t v174 = sub_100109308(v173);
  __chkstk_darwin(v174);
  sub_1001626E0();
  uint64_t v177 = v176 - v175;
  uint64_t v318 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v317 = v178;
  __chkstk_darwin(v179);
  sub_100162EF8();
  uint64_t v354 = v180;
  sub_1001626D4();
  __chkstk_darwin(v181);
  sub_100109770();
  uint64_t v353 = v182;
  sub_1001626D4();
  __chkstk_darwin(v183);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v184);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v185);
  uint64_t v187 = (char *)v294 - v186;
  uint64_t v188 = type metadata accessor for CurrentWeather();
  uint64_t v189 = sub_100109308(v188);
  __chkstk_darwin(v189);
  uint64_t v298 = sub_1001826D8(v190, v294[0]);
  sub_100179C0C();
  uint64_t v297 = v191;
  __chkstk_darwin(v192);
  sub_100109314();
  sub_100109338(v193);
  id v311 = v187;
  Date.init()();
  uint64_t v312 = v177;
  CloudCoverByAltitude.init(low:medium:high:)();
  uint64_t v194 = *(void (**)(uint64_t, void, uint64_t))(v168 + 104);
  uint64_t v313 = v172;
  v194(v172, enum case for WeatherCondition.clear(_:), v166);
  id v324 = self;
  id v195 = [v324 celsius];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
  uint64_t v314 = v10;
  Measurement.init(value:unit:)();
  id v328 = self;
  id v196 = [v328 metersPerSecond];
  uint64_t v327 = sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
  uint64_t v315 = v159;
  Measurement.init(value:unit:)();
  id v197 = [self millibars];
  sub_1001ABC4C(0, &qword_100E6BF30);
  uint64_t v316 = v9;
  Measurement.init(value:unit:)();
  sub_10018390C();
  uint64_t v325 = v8;
  sub_1001631E8();
  v198();
  uint64_t v199 = self;
  id v200 = [v199 millimeters];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  sub_100188D14();
  Measurement.init(value:unit:)();
  id v201 = sub_10019B8D0();
  sub_100172504();
  Measurement.init(value:unit:)();
  id v202 = sub_10019B8D0();
  sub_10018B34C();
  Measurement.init(value:unit:)();
  id v203 = sub_10019B8D0();
  sub_10012B750();
  Measurement.init(value:unit:)();
  id v204 = sub_10019B8D0();
  Measurement.init(value:unit:)();
  id v205 = [v199 millimeters];
  sub_100162868();
  Measurement.init(value:unit:)();
  PrecipitationAmount.init(pastHour:pastSixHours:pastTwentyFourHours:nextHour:nextSixHours:nextTwentyFourHours:)();
  sub_100AD20E8();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  static PrecipitationAmountByType.mock()();
  sub_10018390C();
  sub_1001631E8();
  v206();
  ApparentPrecipitationIntensity.init(value:category:)();
  id v207 = v324;
  id v208 = [v324 celsius];
  Measurement.init(value:unit:)();
  id v209 = [v207 celsius];
  Measurement.init(value:unit:)();
  uint64_t v210 = v330;
  sub_10008B8B4();
  v211();
  uint64_t v212 = sub_100188E7C();
  _s7Weather24LocationCompositionStateOwst_0(v212, v213, v214, v210);
  sub_100182D88(v342);
  UVIndex.init(value:category:)();
  id v215 = [v199 meters];
  Measurement.init(value:unit:)();
  id v216 = [self degrees];
  uint64_t v217 = v337;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E952D0);
  sub_10012B920();
  Measurement.init(value:unit:)();
  id v218 = [v328 milesPerHour];
  sub_10012B750();
  Measurement.init(value:unit:)();
  uint64_t v219 = sub_10017F720();
  _s7Weather24LocationCompositionStateOwst_0(v219, v220, v221, v332);
  Wind.init(compassDirection:direction:speed:gust:)();
  Date.init()();
  Date.init()();
  sub_100164FD4();
  URL.init(string:)();
  uint64_t v222 = type metadata accessor for URL();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v217, 1, v222);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1001C8774();
  sub_1001190D4();
  v224();
  uint64_t v225 = sub_100164998();
  _s7Weather24LocationCompositionStateOwst_0(v225, v226, v227, v222);
  sub_100182D88(v320);
  sub_100164FD4();
  sub_100127A68();
  WeatherAttribution.init(name:sourceURL:logoURL:)();
  uint64_t v228 = type metadata accessor for WeatherAttribution();
  uint64_t v229 = sub_100163DF4();
  _s7Weather24LocationCompositionStateOwst_0(v229, v230, v231, v228);
  sub_100166B1C();
  sub_10018AF54();
  sub_1001290B8();
  sub_100119154();
  CurrentWeather.init(date:cloudCover:cloudCoverLow:cloudCoverMid:cloudCoverHigh:cloudCoverByAltitude:condition:symbolName:dewPoint:humidity:precipitationIntensity:pressure:pressureTrend:rainfallAmount:snowfallAmount:pastHourPrecipitationAmountByType:pastSixHoursPrecipitationAmountByType:pastTwentyFourHoursPrecipitationAmountByType:nextHourPrecipitationAmountByType:nextSixHoursPrecipitationAmountByType:nextTwentyFourHoursPrecipitationAmountByType:apparentPrecipitationIntensity:isDaylight:temperature:apparentTemperature:highTemperature:lowTemperature:uvIndex:visibility:wind:metadata:)();
  LODWORD(v349) = 1;
  sub_100127A68();
  sub_100AD4610(v232, v233);
  sub_10017DF08(&qword_100E6E900);
  uint64_t v234 = sub_100163DF4();
  _s7Weather24LocationCompositionStateOwst_0(v234, v235, v236, v237);
  uint64_t v238 = v353;
  Date.init()();
  Date.init()();
  sub_1001097CC();
  sub_100166B1C();
  sub_10018AF54();
  type metadata accessor for HourWeather();
  sub_1001A39F0(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1001A39F0(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1001A39F0(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  Forecast.init(_:metadata:)();
  sub_10017DF08(&qword_100E97078);
  type metadata accessor for DayWeather();
  sub_100179EF0();
  sub_100129024();
  uint64_t v239 = swift_allocObject();
  long long v350 = xmmword_100C251B0;
  *(_OWORD *)(v239 + 16) = xmmword_100C251B0;
  Date.init()();
  sub_100AD500C(v238, v351);
  sub_100162F0C();
  v240();
  Date.init()();
  Date.init()();
  sub_1001097CC();
  sub_10018AF54();
  uint64_t v241 = sub_1001A39F0(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1001A39F0(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1001A39F0(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  Forecast.init(_:metadata:)();
  if ((v323 & 1) == 0)
  {
    sub_10017DF08(&qword_100EAF628);
    sub_100129024();
    uint64_t v242 = (__n128 *)swift_allocObject();
    sub_10011C114(v242);
    sub_1001857A4();
    sub_10017DF08(&qword_100EAF630);
    uint64_t v243 = type metadata accessor for AirQualityScaleGradientStop();
    sub_100164920(v243);
    sub_1001A3900();
    id v244 = (__n128 *)swift_allocObject();
    sub_10011C114(v244);
    AirQualityScaleGradientStop.init(location:color:)();
    sub_1001D148C();
    AirQualityScaleGradient.init(stops:)();
    sub_100165400();
    AirQualityScale.init(identifier:displayName:shortDisplayName:longDisplayName:displayLabel:isNumerical:range:categories:gradient:)();
    sub_1001857A4();
    uint64_t v245 = type metadata accessor for ProviderAttribution();
    _s7Weather24LocationCompositionStateOwst_0(v299, 1, 1, v245);
    sub_100164FD4();
    sub_1001D148C();
    URL.init(string:)();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v241, 1, v222);
    if (result != 1)
    {
      sub_10017DF08(&qword_100EAF638);
      sub_10017DF08(&qword_100EAF640);
      sub_1001EC498();
      id v246 = (__n128 *)swift_allocObject();
      sub_10011C114(v246);
      id v248 = (unint64_t *)((char *)v242->n128_u64 + v247);
      *id v248 = 0x454E4F5A4FLL;
      v248[1] = 0xE500000000000000;
      sub_10018390C();
      sub_1001631E8();
      v249();
      id v250 = [self partsPerMillion];
      sub_1001ABC4C(0, &qword_100E957C0);
      sub_10012B920();
      Measurement.init(value:unit:)();
      sub_10018390C();
      sub_1001631E8();
      v251();
      AirPollutant.init(kind:amount:)();
      type metadata accessor for AirPollutant();
      Dictionary.init(dictionaryLiteral:)();
      sub_100182D88(v294[9]);
      sub_10018390C();
      sub_1001631E8();
      v252();
      sub_10018390C();
      sub_1001631E8();
      v253();
      sub_100162868();
      AirQualitySource.init(kind:description:)();
      Date.init()();
      Date.init()();
      uint64_t v254 = sub_10019B2A4();
      _s7Weather24LocationCompositionStateOwst_0(v254, v255, v256, v228);
      sub_100188D14();
      WeatherMetadata.init(date:expirationDate:attribution:)();
      sub_100165400();
      AirQuality.init(scaleIdentifier:scale:index:currentScaleCategory:isSignificant:providerAttribution:learnMoreURL:pollutants:primaryPollutant:previousDayComparison:source:metadata:)();
      LODWORD(v349) = 0;
      goto LABEL_5;
    }
LABEL_11:
    __break(1u);
    return result;
  }
LABEL_5:
  uint64_t v257 = type metadata accessor for AirQuality();
  _s7Weather24LocationCompositionStateOwst_0(v338, v349, 1, v257);
  uint64_t v258 = sub_10017DF08(&qword_100E63748);
  uint64_t v259 = v310;
  *(void *)&long long v350 = (char *)v310 + *(int *)(v258 + 48);
  uint64_t v351 = *(int *)(v258 + 64);
  Date.init()();
  Date.init()();
  uint64_t v260 = sub_10017F720();
  _s7Weather24LocationCompositionStateOwst_0(v260, v261, v262, v228);
  WeatherMetadata.init(date:expirationDate:attribution:)();
  sub_1001D148C();
  WeatherChanges.init(changes:metadata:)();
  uint64_t v263 = type metadata accessor for WeatherChanges();
  _s7Weather24LocationCompositionStateOwst_0(v241, 0, 1, v263);
  uint64_t v264 = *(void (**)(void))(v301 + 104);
  sub_100164054();
  v264();
  sub_100164054();
  v264();
  sub_100164054();
  v264();
  sub_100172504();
  WeatherAvailability.init(minuteAvailability:alertAvailability:airQualityAvailability:)();
  uint64_t v265 = type metadata accessor for HistoricalComparisons();
  sub_100162E4C();
  sub_10008B8B4();
  v266();
  uint64_t v267 = sub_100164998();
  _s7Weather24LocationCompositionStateOwst_0(v267, v268, v269, v265);
  type metadata accessor for HistoricalFacts();
  uint64_t v270 = sub_10017F720();
  _s7Weather24LocationCompositionStateOwst_0(v270, v271, v272, v273);
  swift_bridgeObjectRetain();
  sub_10017B4D0();
  WeatherDataModel.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherChanges:weatherAlerts:availability:historicalComparisons:historicalFacts:)();
  uint64_t v274 = (uint64_t)v309;
  *uint64_t v309 = 0;
  *(void *)(v274 + 8) = 0xE000000000000000;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for WeatherDataOverrides();
  uint64_t v275 = sub_10015030C((uint64_t)&v331);
  _s7Weather24LocationCompositionStateOwst_0(v275, v276, v277, v278);
  UUID.init()();
  uint64_t v279 = UUID.uuidString.getter();
  uint64_t v281 = v280;
  sub_100162F0C();
  v282();
  uint64_t v283 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v284 = (uint64_t)v259 + v283[5];
  static Locale.current.getter();
  uint64_t v285 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0(v284, 0, 1, v285);
  uint64_t v286 = (uint64_t)v259 + v283[7];
  uint64_t v287 = sub_10017DF08(&qword_100E63738);
  _s7Weather24LocationCompositionStateOwst_0(v286, 1, 1, v287);
  *uint64_t v259 = v279;
  v259[1] = v281;
  sub_1001190D4();
  v288();
  sub_100AD52C0(v274, (uint64_t)v259 + v283[8]);
  sub_1001278D0(v241, (uint64_t)v259 + v283[9], &qword_100E63740);
  if (qword_100E62AD0 != -1) {
    swift_once();
  }
  uint64_t v289 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v290 = sub_1002102B0(v289, (uint64_t)qword_100F52398);
  sub_100AD5214(v290, v350);
  if (qword_100E62BC8 != -1) {
    swift_once();
  }
  uint64_t v291 = (uint64_t)v259 + v351;
  uint64_t v292 = type metadata accessor for NewsDataModel();
  uint64_t v293 = sub_1002102B0(v292, (uint64_t)qword_100F52468);
  sub_100AD5214(v293, v291);
  type metadata accessor for LocationWeatherDataState(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100AD43F0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E7E730);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EAF658);
  type metadata accessor for HistoricalComparison();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C25ED0;
  sub_100AD55DC((uint64_t)v7);
  static HistoricalComparison.mockMaximumTemperature(trend:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100AD59A4((uint64_t)v3);
  static HistoricalComparison.mockPrecipitation(trend:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

uint64_t sub_100AD4610@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v118 = a1;
  uint64_t v107 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E9D2A8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v106 = v6;
  type metadata accessor for PrecipitationShift.Kind();
  sub_100179C0C();
  uint64_t v102 = v8;
  uint64_t v103 = v7;
  __chkstk_darwin(v7);
  sub_100109328((uint64_t)v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for PrecipitationShift();
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109338((uint64_t)v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  uint64_t v105 = (char *)v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v16);
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100128F8C();
  uint64_t v113 = v19;
  uint64_t v117 = type metadata accessor for ApparentPrecipitationIntensityCategory();
  sub_100179C0C();
  uint64_t v120 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v116 = v22;
  uint64_t v104 = type metadata accessor for ApparentPrecipitationIntensity();
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100109338((uint64_t)v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = sub_10017DF08(&qword_100E6D0A8);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109328((uint64_t)v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = type metadata accessor for Precipitation();
  sub_100179C0C();
  uint64_t v119 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v115 = v30;
  uint64_t v31 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_100162E88();
  uint64_t v101 = type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  uint64_t v100 = v35;
  __chkstk_darwin(v36);
  sub_100179C90();
  __chkstk_darwin(v37);
  sub_1001CB758();
  uint64_t v38 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v40 = v39;
  __chkstk_darwin(v41);
  sub_100162EF8();
  uint64_t v112 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100109770();
  uint64_t v111 = v44;
  sub_1001626D4();
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)v89 - v46;
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)v89 - v49;
  static Date.now.getter();
  static WeatherMetadata.mock()();
  uint64_t v97 = v40;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v51(v47, v50, v38);
  WeatherMetadata.date.setter();
  static Calendar.current.getter();
  sub_10019AF1C();
  v89[0] = *(void *)(v33 + 8);
  uint64_t v108 = v33 + 8;
  ((void (*)(uint64_t, uint64_t))v89[0])(v2, v31);
  uint64_t v98 = v3;
  WeatherMetadata.expirationDate.setter();
  sub_10017DF08(&qword_100EAC568);
  sub_100162708();
  uint64_t v52 = type metadata accessor for MinuteWeather();
  sub_100164920(v52);
  sub_1001A3900();
  uint64_t v53 = swift_allocObject();
  long long v110 = xmmword_100C251B0;
  *(_OWORD *)(v53 + 16) = xmmword_100C251B0;
  uint64_t v96 = v53;
  v89[1] = v53 + v3;
  uint64_t v90 = v38;
  uint64_t v109 = (void (*)(uint64_t, char *, uint64_t))v51;
  v51(v47, v50, v38);
  uint64_t v54 = *(void (**)(uint64_t, void, uint64_t))(v119 + 104);
  unsigned int v95 = enum case for Precipitation.rain(_:);
  v119 += 104;
  uint64_t v94 = v54;
  sub_1001631E8();
  v55();
  id v56 = [self metersPerSecond];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
  sub_100162868();
  Measurement.init(value:unit:)();
  uint64_t v57 = *(void (**)(void))(v120 + 104);
  uint64_t v58 = v116;
  unsigned int v93 = enum case for ApparentPrecipitationIntensityCategory.light(_:);
  v120 += 104;
  uint64_t v92 = (void (*)(uint64_t, void, uint64_t))v57;
  v57(v116);
  sub_10012B750();
  ApparentPrecipitationIntensity.init(value:category:)();
  sub_1001C8774();
  uint64_t v59 = (void (*)(uint64_t))v89[0];
  MinuteWeather.init(date:precipitation:precipitationChance:precipitationIntensity:apparentPrecipitationIntensity:)();
  sub_10017DF08(&qword_100EAF648);
  sub_100162708();
  uint64_t v60 = type metadata accessor for MinuteCondition();
  sub_100164920(v60);
  sub_1001EC498();
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = v110;
  uint64_t v91 = v61;
  v89[3] = &v47[v61];
  static Calendar.current.getter();
  Date.wc_addMinutes(_:calendar:)();
  uint64_t v62 = sub_100184E0C();
  v59(v62);
  v89[2] = v40 + 16;
  if (v118)
  {
    uint64_t v63 = v90;
    v109(v113, v50, v90);
    uint64_t v64 = v63;
  }
  else
  {
    static Calendar.current.getter();
    sub_10019AF1C();
    uint64_t v65 = sub_100184E0C();
    v59(v65);
    uint64_t v64 = v90;
  }
  uint64_t v66 = sub_100164998();
  _s7Weather24LocationCompositionStateOwst_0(v66, v67, v68, v64);
  static Calendar.current.getter();
  sub_10017B4D0();
  Date.wc_addMinutes(_:calendar:)();
  uint64_t v69 = sub_100184E0C();
  v59(v69);
  _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, v64);
  static Calendar.current.getter();
  sub_100162868();
  Date.wc_addMinutes(_:calendar:)();
  uint64_t v70 = sub_100184E0C();
  v59(v70);
  uint64_t v71 = sub_1001279C4();
  _s7Weather24LocationCompositionStateOwst_0(v71, v72, v73, v64);
  sub_1001631E8();
  v74();
  sub_100188D14();
  PrecipitationShift.init(date:nextDate:kind:)();
  MinuteCondition.init(date:expirationDate:shift:)();
  sub_10017DF08(&qword_100EAF650);
  sub_100162708();
  uint64_t v75 = type metadata accessor for MinuteSummary();
  sub_100164920(v75);
  sub_100129024();
  *(_OWORD *)(swift_allocObject() + 16) = v110;
  uint64_t v76 = (void (*)(char *, char *, uint64_t))v109;
  v109(v112, v50, v64);
  if (v118)
  {
    v76(v105, v50, v64);
  }
  else
  {
    static Calendar.current.getter();
    sub_10019AF1C();
    ((void (*)(uint64_t, uint64_t))v59)(v2, v31);
  }
  uint64_t v77 = sub_1001279C4();
  _s7Weather24LocationCompositionStateOwst_0(v77, v78, v79, v64);
  v94(v115, v95, v114);
  v92(v116, v93, v117);
  uint64_t v80 = v106;
  ApparentPrecipitationIntensity.init(value:category:)();
  uint64_t v81 = sub_100188E7C();
  _s7Weather24LocationCompositionStateOwst_0(v81, v82, v83, v104);
  MinuteSummary.init(date:expirationDate:precipitation:precipitationChance:apparentPrecipitationIntensity:)();
  sub_100166B1C();
  uint64_t v85 = v98;
  uint64_t v86 = v101;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v99, v98, v101);
  Forecast<>.init(_:summary:conditions:summaries:metadata:)();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v85, v86);
  sub_100162F0C();
  return v87();
}

uint64_t sub_100AD500C(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v21 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100109370();
  uint64_t v8 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_10012B938();
  static DayWeather.mock()();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v2, a1, v15);
  DayWeather.date.setter();
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v14, enum case for WeatherCondition.rain(_:), v8);
  DayWeather.condition.setter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, a2, v21);
  DayWeather.highTemperature.setter();
  sub_10008B8B4();
  v19();
  return DayWeather.rainfallAmount.setter();
}

uint64_t sub_100AD5214(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100162708();
  v4(v3);
  sub_100162E4C();
  sub_10008B8B4();
  v5();
  return a2;
}

unint64_t sub_100AD526C()
{
  unint64_t result = qword_100EAF620;
  if (!qword_100EAF620)
  {
    sub_10018C6DC(&qword_100EAF618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF620);
  }
  return result;
}

uint64_t sub_100AD52C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AD5324(uint64_t a1)
{
  return sub_100AD533C(a1, &qword_100E6CD98);
}

uint64_t sub_100AD5330(uint64_t a1)
{
  return sub_100AD533C(a1, &qword_100E96350);
}

uint64_t sub_100AD533C(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    sub_1001A3608();
    uint64_t result = sub_10012B72C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_10017DF08(a2);
      *(void *)(static Array._allocateBufferUninitialized(minimumCapacity:)() + 16) = a1;
    }
    sub_10017DF08(a2);
    return sub_1001A8818();
  }
  return result;
}

uint64_t sub_100AD53F8(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))&type metadata accessor for DetailChartDataElement);
}

void *sub_100AD5410(uint64_t a1)
{
  return sub_100AD5548(a1, &qword_100EAF660);
}

void *sub_100AD541C(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1001A3608();
    uint64_t result = (void *)sub_10012B72C();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100AD5494(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))&type metadata accessor for DayWeather);
}

uint64_t sub_100AD54AC(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))&type metadata accessor for URL);
}

uint64_t sub_100AD54C4(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))&type metadata accessor for SevereNotificationEntity);
}

uint64_t sub_100AD54DC(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))&type metadata accessor for SubscriptionEntity);
}

uint64_t sub_100AD54F4(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))&type metadata accessor for IncomingMessageEntity);
}

uint64_t sub_100AD550C(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))&type metadata accessor for DeliveryScheduleEntity);
}

uint64_t sub_100AD5524(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))&type metadata accessor for FetchScheduleEntity);
}

void *sub_100AD553C(uint64_t a1)
{
  return sub_100AD5548(a1, &qword_100E7FD68);
}

void *sub_100AD5548(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    sub_1001A3608();
    uint64_t result = (void *)sub_10012B72C();
    __break(1u);
  }
  else if (a1)
  {
    sub_10017DF08(a2);
    uint64_t result = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100AD55C4(uint64_t a1)
{
  return sub_1001A86E4(a1, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
}

uint64_t sub_100AD55DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v27 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Deviation();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100E65250);
  uint64_t v5 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v24 = sub_10017DF08(&qword_100E9D628);
  uint64_t v11 = *(void *)(v24 - 8);
  __n128 v12 = __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, __n128))(v11 + 104))(v14, enum case for TrendBaseline.Kind.mean<A>(_:), v12);
  uint64_t v15 = self;
  id v16 = [v15 celsius];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
  Measurement.init(value:unit:)();
  id v17 = [v15 celsius];
  Measurement.init(value:unit:)();
  uint64_t v19 = v25;
  uint64_t v18 = v26;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v4, enum case for Deviation.normal(_:), v26);
  uint64_t v20 = v27;
  static Date.now.getter();
  static Trend<>.mock(baselineKind:baselineValue:currentValue:deviation:baselineStartDate:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v31);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v22 = v28;
  v21(v7, v28);
  v21(v10, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v24);
}

uint64_t sub_100AD59A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v27 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Deviation();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100E6B648);
  uint64_t v5 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v24 = sub_10017DF08(&qword_100E7E728);
  uint64_t v11 = *(void *)(v24 - 8);
  __n128 v12 = __chkstk_darwin(v24);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, __n128))(v11 + 104))(v14, enum case for TrendBaseline.Kind.mean<A>(_:), v12);
  uint64_t v15 = self;
  id v16 = [v15 inches];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  Measurement.init(value:unit:)();
  id v17 = [v15 inches];
  Measurement.init(value:unit:)();
  uint64_t v19 = v25;
  uint64_t v18 = v26;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v4, enum case for Deviation.normal(_:), v26);
  uint64_t v20 = v27;
  static Date.now.getter();
  static Trend<>.mock(baselineKind:baselineValue:currentValue:deviation:baselineStartDate:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v31);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v22 = v28;
  v21(v7, v28);
  v21(v10, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v24);
}

double sub_100AD5D7C()
{
  return 0.0;
}

uint64_t sub_100AD5D90(uint64_t a1)
{
  return sub_100027E44(a1, &qword_100E62A78);
}

uint64_t sub_100AD5DBC(uint64_t a1)
{
  return sub_100027E44(a1, &qword_100E62A80);
}

uint64_t sub_100AD5DE8(uint64_t a1)
{
  return sub_100027E44(a1, &qword_100E62A88);
}

uint64_t sub_100AD5E14(uint64_t a1)
{
  return sub_100027E44(a1, &qword_100E62A90);
}

uint64_t sub_100AD5E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v1 = type metadata accessor for UUID();
  __chkstk_darwin(v1 - 8);
  uint64_t v45 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v3 - 8);
  uint64_t v44 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeatherImportance();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  uint64_t v43 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WeatherSeverity();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v40 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v37 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v47 = (char *)v36 - v12;
  uint64_t v13 = type metadata accessor for Calendar();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)v36 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v36 - v25;
  uint64_t v27 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  uint64_t v30 = type metadata accessor for URL();
  v36[2] = v29;
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    Date.init()();
    static Calendar.current.getter();
    Date.wc_addDays(_:calendar:)();
    v36[1] = v26;
    uint64_t v32 = *(void (**)(char *, uint64_t))(v14 + 8);
    v32(v16, v13);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v18 + 8);
    v36[0] = v24;
    v33(v24, v17);
    Date.init()();
    static Calendar.current.getter();
    Date.wc_addHours(_:calendar:)();
    v32(v16, v13);
    v33(v21, v17);
    Date.init()();
    static Calendar.current.getter();
    uint64_t v34 = (uint64_t)v47;
    Date.wc_addDays(_:calendar:)();
    v32(v16, v13);
    v33(v21, v17);
    _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v17);
    Date.init()();
    static Calendar.current.getter();
    uint64_t v35 = (uint64_t)v37;
    Date.wc_addDays(_:calendar:)();
    v32(v16, v13);
    v33(v21, v17);
    _s7Weather24LocationCompositionStateOwst_0(v35, 0, 1, v17);
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v40, enum case for WeatherSeverity.moderate(_:), v39);
    (*(void (**)(char *, void, uint64_t))(v41 + 104))(v43, enum case for WeatherImportance.high(_:), v42);
    sub_100AD6ABC();
    UUID.init()();
    return WeatherAlert.init(detailsURL:source:expirationDate:issuedDate:onsetTime:endDate:summary:region:severity:importance:metadata:id:)();
  }
  return result;
}

uint64_t sub_100AD6488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v1 = type metadata accessor for UUID();
  __chkstk_darwin(v1 - 8);
  uint64_t v45 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v3 - 8);
  uint64_t v44 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeatherImportance();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  uint64_t v43 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WeatherSeverity();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v40 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v37 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v47 = (char *)v36 - v12;
  uint64_t v13 = type metadata accessor for Calendar();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)v36 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v36 - v25;
  uint64_t v27 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)v36 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  uint64_t v30 = type metadata accessor for URL();
  v36[2] = v29;
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    Date.init()();
    static Calendar.current.getter();
    Date.wc_addDays(_:calendar:)();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v14 + 8);
    v32(v16, v13);
    v36[0] = v24;
    v36[1] = v26;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v18 + 8);
    v33(v24, v17);
    Date.init()();
    static Calendar.current.getter();
    Date.wc_addHours(_:calendar:)();
    v32(v16, v13);
    v33(v21, v17);
    Date.init()();
    static Calendar.current.getter();
    uint64_t v34 = (uint64_t)v47;
    Date.wc_addDays(_:calendar:)();
    v32(v16, v13);
    v33(v21, v17);
    _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v17);
    Date.init()();
    static Calendar.current.getter();
    uint64_t v35 = (uint64_t)v37;
    Date.wc_addDays(_:calendar:)();
    v32(v16, v13);
    v33(v21, v17);
    _s7Weather24LocationCompositionStateOwst_0(v35, 0, 1, v17);
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v40, enum case for WeatherSeverity.moderate(_:), v39);
    (*(void (**)(char *, void, uint64_t))(v41 + 104))(v43, enum case for WeatherImportance.low(_:), v42);
    sub_100AD6ABC();
    UUID.init()();
    return WeatherAlert.init(detailsURL:source:expirationDate:issuedDate:onsetTime:endDate:summary:region:severity:importance:metadata:id:)();
  }
  return result;
}

uint64_t sub_100AD6ABC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E749B0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v4 = sub_10017DF08(&qword_100E85FA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  __chkstk_darwin(v8);
  Date.init()();
  Date.init()();
  URL.init(string:)();
  uint64_t v9 = type metadata accessor for URL();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v9);
  WeatherAttribution.init(name:sourceURL:logoURL:)();
  uint64_t v10 = type metadata accessor for WeatherAttribution();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v10);
  return WeatherMetadata.init(date:expirationDate:attribution:)();
}

uint64_t sub_100AD6CAC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1003152C8();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_100AD7768(v6);
  *a1 = v2;
  return result;
}

void *sub_100AD6D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v87 = a2;
  uint64_t v86 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v85 = v12;
  uint64_t v13 = type metadata accessor for MapComponentViewModel();
  __chkstk_darwin(v13 - 8);
  sub_100109314();
  uint64_t v84 = v14;
  uint64_t v93 = type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v91 = (char *)v77 - v19;
  uint64_t v20 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v96 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23 - 8);
  sub_100162EF8();
  uint64_t v90 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)v77 - v27;
  char v29 = sub_10005C588();
  if (v29 != 6)
  {
    char v66 = v29;
    sub_10017DF08(&qword_100E972C8);
    uint64_t v67 = (void *)swift_allocObject();
    *((_OWORD *)v67 + 1) = xmmword_100C251B0;
    *((unsigned char *)v67 + 32) = v66;
    sub_1001EC5EC(a5, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
    sub_1001EC5EC(a4, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
    sub_100AD7708(a3);
    sub_1001EC5EC(v87, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
    sub_100AD7708(a1);
    return v67;
  }
  sub_10017DF08(&qword_100EAF728);
  uint64_t v80 = a5;
  uint64_t v30 = *(void *)(v24 + 72);
  uint64_t v31 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v92 = a3;
  uint64_t v32 = v10;
  uint64_t v33 = (v31 + 32) & ~v31;
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_100C31880;
  v77[1] = v34;
  uint64_t v35 = v34 + v33;
  uint64_t v78 = a1;
  sub_100AD76A0(a1, v34 + v33);
  sub_1001EC10C(v87, v35 + v30, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
  sub_100180B9C();
  sub_100AD76A0(v92, v35 + 2 * v30);
  sub_1001EC10C(a4, v35 + 3 * v30, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
  sub_100180B9C();
  uint64_t v95 = v30;
  uint64_t v36 = sub_10017EE0C();
  sub_1001EC10C(v36, v35 + 4 * v30, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
  sub_100180B9C();
  uint64_t v82 = v32 + 88;
  uint64_t v83 = (void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  uint64_t v97 = _swiftEmptyArrayStorage;
  uint64_t v37 = v32 + 8;
  uint64_t v38 = v92;
  uint64_t v79 = v37;
  uint64_t v39 = 5;
  int v81 = enum case for WeatherMapOverlayKind.wind(_:);
  uint64_t v88 = v17;
  uint64_t v89 = a4;
  uint64_t v40 = v20;
  uint64_t v41 = v90;
  uint64_t v42 = (uint64_t)v91;
  uint64_t v94 = v28;
  do
  {
    sub_100AD76A0(v35, (uint64_t)v28);
    sub_100AD76A0((uint64_t)v28, v41);
    if (_s7Weather24LocationCompositionStateOwet_0(v41, 1, v40) == 1)
    {
      sub_100AD7708(v41);
LABEL_5:
      sub_100AD7708((uint64_t)v28);
      goto LABEL_28;
    }
    uint64_t v43 = v96;
    sub_10021EDDC(v41, v96, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
    sub_1001EC10C(v43, v42, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    sub_1001EC10C(v42, (uint64_t)v17, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      switch(EnumCaseMultiPayload)
      {
        case 18:
          sub_1001EC5EC(v42, (void (*)(void))type metadata accessor for LocationComponentViewModel);
          sub_10017AF64();
          char v45 = 5;
          break;
        case 5:
          uint64_t v46 = v84;
          sub_10021EDDC((uint64_t)v17, v84, (void (*)(void))type metadata accessor for MapComponentViewModel);
          (*v83)(v85, v46, v86);
          uint64_t v47 = sub_1001D2264();
          int v49 = v48(v47);
          if (v49 == v81)
          {
            if (qword_100E623C0 != -1) {
              swift_once();
            }
            uint64_t v50 = sub_10017DF08(&qword_100E63520);
            sub_1002102B0(v50, (uint64_t)qword_100F515D8);
            swift_beginAccess();
            Tips.Parameter.wrappedValue.getter();
            int v51 = v98;
            swift_endAccess();
            sub_1001EC5EC(v42, (void (*)(void))type metadata accessor for LocationComponentViewModel);
            sub_1001EC5EC(v46, (void (*)(void))type metadata accessor for MapComponentViewModel);
            if (v51) {
              char v45 = 2;
            }
            else {
              char v45 = 3;
            }
          }
          else
          {
            sub_1001EC5EC(v42, (void (*)(void))type metadata accessor for LocationComponentViewModel);
            sub_1001EC5EC(v46, (void (*)(void))type metadata accessor for MapComponentViewModel);
            uint64_t v52 = sub_1001D2264();
            v53(v52);
            char v45 = 2;
          }
          break;
        case 16:
          sub_1001EC5EC(v42, (void (*)(void))type metadata accessor for LocationComponentViewModel);
          sub_10017AF64();
          char v45 = 4;
          break;
        case 1:
          sub_1001EC5EC(v42, (void (*)(void))type metadata accessor for LocationComponentViewModel);
          sub_10017AF64();
          char v45 = 0;
          break;
        default:
          sub_1001EC5EC(v42, (void (*)(void))type metadata accessor for LocationComponentViewModel);
          sub_10017AF64();
          sub_1001EC5EC(v96, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
          uint64_t v28 = v94;
          goto LABEL_5;
      }
    }
    else
    {
      sub_1001EC5EC(v42, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v45 = 1;
    }
    uint64_t v54 = v40;
    uint64_t v55 = (uint64_t *)(v96 + *(int *)(v40 + 20));
    uint64_t v56 = *v55;
    uint64_t v57 = v55[1];
    uint64_t v58 = v55[2];
    uint64_t v59 = v55[3];
    sub_1001EC5EC(v96, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
    sub_100AD7708((uint64_t)v94);
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v60 = v97;
    }
    else
    {
      sub_1007E98A0();
      uint64_t v60 = v64;
    }
    unint64_t v62 = v60[2];
    unint64_t v61 = v60[3];
    if (v62 >= v61 >> 1)
    {
      sub_10016534C(v61);
      sub_1007E98A0();
      uint64_t v60 = v65;
    }
    v60[2] = v62 + 1;
    uint64_t v97 = v60;
    uint64_t v63 = &v60[5 * v62];
    *((unsigned char *)v63 + 32) = v45;
    v63[5] = v56;
    v63[6] = v57;
    v63[7] = v58;
    v63[8] = v59;
    uint64_t v42 = (uint64_t)v91;
    uint64_t v38 = v92;
    uint64_t v17 = v88;
    a4 = v89;
    uint64_t v40 = v54;
    uint64_t v41 = v90;
    uint64_t v28 = v94;
LABEL_28:
    v35 += v95;
    --v39;
  }
  while (v39);
  swift_setDeallocating();
  sub_1006BB0F8();
  v99[0] = (uint64_t)v97;
  swift_bridgeObjectRetain();
  sub_100AD6CAC(v99);
  swift_bridgeObjectRelease();
  uint64_t v68 = (void *)v99[0];
  uint64_t v69 = *(void *)(v99[0] + 16);
  uint64_t v67 = _swiftEmptyArrayStorage;
  uint64_t v70 = v87;
  if (v69)
  {
    v99[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_1007F34A8();
    uint64_t v67 = (void *)v99[0];
    uint64_t v71 = (char *)(v68 + 4);
    unint64_t v72 = *(void *)(v99[0] + 16);
    uint64_t v73 = sub_10017EE0C();
    do
    {
      char v75 = *v71;
      v71 += 40;
      char v74 = v75;
      v99[0] = (uint64_t)v67;
      if (v72 >= v67[3] >> 1)
      {
        sub_1007F34A8();
        uint64_t v73 = sub_10017EE0C();
        uint64_t v67 = (void *)v99[0];
      }
      v67[2] = v72 + 1;
      *((unsigned char *)v67 + v72++ + 32) = v74;
      --v69;
    }
    while (v69);
    a4 = v89;
  }
  else
  {
    uint64_t v73 = sub_10017EE0C();
  }
  sub_1001EC5EC(v73, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
  sub_1001EC5EC(a4, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
  sub_100AD7708(v38);
  sub_1001EC5EC(v70, (void (*)(void))type metadata accessor for TipPriorityQueue.GridEntry);
  sub_100AD7708(v78);
  swift_release();
  return v67;
}

uint64_t type metadata accessor for TipPriorityQueue.GridEntry()
{
  uint64_t result = qword_100EAF788;
  if (!qword_100EAF788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100AD76A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6CCD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AD7708(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6CCD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100AD7768(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_100AD7DF4(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_130;
  }
  uint64_t v5 = result;
  uint64_t v115 = v1;
  uint64_t v109 = a1;
  long long v110 = sub_100AD5410(v3 / 2);
  uint64_t v114 = v6;
  uint64_t v112 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    unint64_t v53 = _swiftEmptyArrayStorage[2];
LABEL_96:
    uint64_t result = (uint64_t)v9;
    if (v53 < 2)
    {
LABEL_107:
      uint64_t result = swift_bridgeObjectRelease();
      if (v112 >= -1)
      {
        v110[2] = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_135;
    }
    uint64_t v101 = *v109;
    while (1)
    {
      unint64_t v102 = v53 - 2;
      if (v53 < 2) {
        break;
      }
      if (!v101) {
        goto LABEL_139;
      }
      uint64_t v103 = result;
      uint64_t v104 = *(void *)(result + 32 + 16 * v102);
      uint64_t v105 = *(void *)(result + 32 + 16 * (v53 - 1) + 8);
      uint64_t result = sub_100AD7E94((char *)(v101 + 40 * v104), (char *)(v101 + 40 * *(void *)(result + 32 + 16 * (v53 - 1))), v101 + 40 * v105, v114);
      if (v115) {
        goto LABEL_92;
      }
      if (v105 < v104) {
        goto LABEL_125;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_10031515C();
        uint64_t v103 = result;
      }
      if (v102 >= *(void *)(v103 + 16)) {
        goto LABEL_126;
      }
      uint64_t v106 = (void *)(v103 + 32 + 16 * v102);
      *uint64_t v106 = v104;
      v106[1] = v105;
      unint64_t v107 = *(void *)(v103 + 16);
      if (v53 > v107) {
        goto LABEL_127;
      }
      memmove((void *)(v103 + 32 + 16 * (v53 - 1)), (const void *)(v103 + 32 + 16 * v53), 16 * (v107 - v53));
      uint64_t result = v103;
      *(void *)(v103 + 16) = v107 - 1;
      unint64_t v53 = v107 - 1;
      if (v107 <= 2) {
        goto LABEL_107;
      }
    }
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v108 = *a1 + 104;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  uint64_t result = 40;
  uint64_t v10 = v112;
  uint64_t v111 = v5;
  uint64_t v113 = v8;
  while (1)
  {
    uint64_t v11 = v7++;
    if (v7 < v10)
    {
      uint64_t v12 = v8 + 40 * v7;
      uint64_t v13 = *(void *)(v12 + 8);
      uint64_t v14 = *(void *)(v12 + 24);
      uint64_t v15 = v8 + 40 * v11;
      uint64_t v16 = *(void *)(v15 + 8);
      uint64_t v17 = *(void *)(v15 + 24);
      BOOL v18 = v13 < v16;
      BOOL v19 = v14 == v17;
      int v20 = v14 < v17;
      if (v19) {
        int v20 = v18;
      }
      uint64_t v7 = v11 + 2;
      if (v11 + 2 < v10)
      {
        uint64_t v21 = (uint64_t *)(v108 + 40 * v11);
        while (1)
        {
          uint64_t v22 = *(v21 - 2);
          uint64_t v23 = *v21;
          BOOL v24 = v22 < v13;
          BOOL v19 = *v21 == v14;
          int v25 = *v21 < v14;
          if (v19) {
            int v25 = v24;
          }
          if (v20 != v25) {
            break;
          }
          v21 += 5;
          ++v7;
          uint64_t v14 = v23;
          uint64_t v13 = v22;
          if (v7 >= v10)
          {
            uint64_t v7 = v10;
            break;
          }
        }
      }
      if (v20)
      {
        if (v7 < v11) {
          goto LABEL_132;
        }
        if (v11 < v7)
        {
          uint64_t v26 = 40 * v7;
          uint64_t v27 = 40 * v11;
          uint64_t v28 = v7;
          uint64_t v29 = v11;
          do
          {
            if (v29 != --v28)
            {
              if (!v8) {
                goto LABEL_138;
              }
              uint64_t v30 = v8 + v27;
              char v31 = *(unsigned char *)(v8 + v27);
              uint64_t v32 = v8 + v26;
              long long v33 = *(_OWORD *)(v8 + v27 + 8);
              long long v34 = *(_OWORD *)(v8 + v27 + 24);
              uint64_t v35 = *(void *)(v8 + v26 - 8);
              long long v36 = *(_OWORD *)(v8 + v26 - 24);
              *(_OWORD *)uint64_t v30 = *(_OWORD *)(v8 + v26 - 40);
              *(_OWORD *)(v30 + 16) = v36;
              *(void *)(v30 + 32) = v35;
              *(unsigned char *)(v32 - 40) = v31;
              *(_OWORD *)(v32 - 32) = v33;
              *(_OWORD *)(v32 - 16) = v34;
            }
            ++v29;
            v26 -= 40;
            v27 += 40;
          }
          while (v29 < v28);
        }
      }
    }
    if (v7 < v10)
    {
      if (__OFSUB__(v7, v11)) {
        goto LABEL_129;
      }
      if (v7 - v11 < v5)
      {
        uint64_t v37 = v11 + v5;
        if (__OFADD__(v11, v5)) {
          goto LABEL_133;
        }
        if (v37 >= v10) {
          uint64_t v37 = v10;
        }
        if (v37 < v11) {
          goto LABEL_134;
        }
        if (v7 != v37)
        {
          uint64_t v38 = v8 + 40 * v7;
          do
          {
            uint64_t v39 = v8 + 40 * v7;
            uint64_t v40 = *(void *)(v39 + 8);
            uint64_t v41 = *(void *)(v39 + 24);
            uint64_t v42 = v38;
            uint64_t v43 = v11;
            do
            {
              uint64_t v44 = *(void *)(v42 - 16);
              BOOL v45 = v40 < *(void *)(v42 - 32);
              BOOL v19 = v41 == v44;
              BOOL v46 = v41 < v44;
              if (!v19) {
                BOOL v45 = v46;
              }
              if (!v45) {
                break;
              }
              if (!v8) {
                goto LABEL_136;
              }
              char v47 = *(unsigned char *)v42;
              uint64_t v48 = *(void *)(v42 + 16);
              uint64_t v49 = *(void *)(v42 + 32);
              long long v50 = *(_OWORD *)(v42 - 24);
              *(_OWORD *)uint64_t v42 = *(_OWORD *)(v42 - 40);
              *(_OWORD *)(v42 + 16) = v50;
              *(void *)(v42 + 32) = *(void *)(v42 - 8);
              *(void *)(v42 - 32) = v40;
              *(void *)(v42 - 24) = v48;
              *(void *)(v42 - 16) = v41;
              *(void *)(v42 - 8) = v49;
              *(unsigned char *)(v42 - 40) = v47;
              v42 -= 40;
              ++v43;
            }
            while (v7 != v43);
            ++v7;
            v38 += 40;
          }
          while (v7 != v37);
          uint64_t v7 = v37;
        }
      }
    }
    if (v7 < v11) {
      goto LABEL_128;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1001AA1B0(0, *((void *)v9 + 2) + 1, 1, v9);
      uint64_t v9 = (char *)result;
    }
    unint64_t v52 = *((void *)v9 + 2);
    unint64_t v51 = *((void *)v9 + 3);
    unint64_t v53 = v52 + 1;
    uint64_t v8 = v113;
    if (v52 >= v51 >> 1)
    {
      uint64_t result = (uint64_t)sub_1001AA1B0((char *)(v51 > 1), v52 + 1, 1, v9);
      uint64_t v8 = v113;
      uint64_t v9 = (char *)result;
    }
    *((void *)v9 + 2) = v53;
    uint64_t v54 = v9 + 32;
    uint64_t v55 = &v9[16 * v52 + 32];
    *(void *)uint64_t v55 = v11;
    *((void *)v55 + 1) = v7;
    if (v52) {
      break;
    }
    unint64_t v53 = 1;
LABEL_87:
    uint64_t v5 = v111;
    uint64_t v10 = v112;
    uint64_t result = 40;
    if (v7 >= v112) {
      goto LABEL_96;
    }
  }
  while (1)
  {
    unint64_t v56 = v53 - 1;
    if (v53 >= 4)
    {
      unint64_t v61 = &v54[2 * v53];
      uint64_t v62 = *(v61 - 8);
      uint64_t v63 = *(v61 - 7);
      BOOL v67 = __OFSUB__(v63, v62);
      uint64_t v64 = v63 - v62;
      if (v67) {
        goto LABEL_113;
      }
      uint64_t v66 = *(v61 - 6);
      uint64_t v65 = *(v61 - 5);
      BOOL v67 = __OFSUB__(v65, v66);
      uint64_t v59 = v65 - v66;
      char v60 = v67;
      if (v67) {
        goto LABEL_114;
      }
      unint64_t v68 = v53 - 2;
      uint64_t v69 = &v54[2 * v53 - 4];
      uint64_t v71 = *v69;
      uint64_t v70 = v69[1];
      BOOL v67 = __OFSUB__(v70, v71);
      uint64_t v72 = v70 - v71;
      if (v67) {
        goto LABEL_115;
      }
      BOOL v67 = __OFADD__(v59, v72);
      uint64_t v73 = v59 + v72;
      if (v67) {
        goto LABEL_117;
      }
      if (v73 >= v64)
      {
        uint64_t v91 = &v54[2 * v56];
        uint64_t v93 = *v91;
        uint64_t v92 = v91[1];
        BOOL v67 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v67) {
          goto LABEL_123;
        }
        BOOL v84 = v59 < v94;
        goto LABEL_76;
      }
    }
    else
    {
      if (v53 != 3)
      {
        uint64_t v85 = *((void *)v9 + 4);
        uint64_t v86 = *((void *)v9 + 5);
        BOOL v67 = __OFSUB__(v86, v85);
        uint64_t v78 = v86 - v85;
        char v79 = v67;
        goto LABEL_70;
      }
      uint64_t v58 = *((void *)v9 + 4);
      uint64_t v57 = *((void *)v9 + 5);
      BOOL v67 = __OFSUB__(v57, v58);
      uint64_t v59 = v57 - v58;
      char v60 = v67;
    }
    if (v60) {
      goto LABEL_116;
    }
    unint64_t v68 = v53 - 2;
    char v74 = &v54[2 * v53 - 4];
    uint64_t v76 = *v74;
    uint64_t v75 = v74[1];
    BOOL v77 = __OFSUB__(v75, v76);
    uint64_t v78 = v75 - v76;
    char v79 = v77;
    if (v77) {
      goto LABEL_118;
    }
    uint64_t v80 = &v54[2 * v56];
    uint64_t v82 = *v80;
    uint64_t v81 = v80[1];
    BOOL v67 = __OFSUB__(v81, v82);
    uint64_t v83 = v81 - v82;
    if (v67) {
      goto LABEL_120;
    }
    if (__OFADD__(v78, v83)) {
      goto LABEL_122;
    }
    if (v78 + v83 >= v59)
    {
      BOOL v84 = v59 < v83;
LABEL_76:
      if (v84) {
        unint64_t v56 = v68;
      }
      goto LABEL_78;
    }
LABEL_70:
    if (v79) {
      goto LABEL_119;
    }
    uint64_t v87 = &v54[2 * v56];
    uint64_t v89 = *v87;
    uint64_t v88 = v87[1];
    BOOL v67 = __OFSUB__(v88, v89);
    uint64_t v90 = v88 - v89;
    if (v67) {
      goto LABEL_121;
    }
    if (v90 < v78) {
      goto LABEL_87;
    }
LABEL_78:
    unint64_t v95 = v56 - 1;
    if (v56 - 1 >= v53)
    {
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
      goto LABEL_124;
    }
    if (!v8) {
      goto LABEL_137;
    }
    uint64_t v96 = &v54[2 * v95];
    uint64_t v97 = *v96;
    unsigned __int8 v98 = &v54[2 * v56];
    uint64_t v99 = v98[1];
    uint64_t result = sub_100AD7E94((char *)(v8 + 40 * *v96), (char *)(v8 + 40 * *v98), v8 + 40 * v99, v114);
    if (v115) {
      break;
    }
    if (v99 < v97) {
      goto LABEL_110;
    }
    if (v56 > *((void *)v9 + 2)) {
      goto LABEL_111;
    }
    *uint64_t v96 = v97;
    v54[2 * v95 + 1] = v99;
    unint64_t v100 = *((void *)v9 + 2);
    if (v56 >= v100) {
      goto LABEL_112;
    }
    unint64_t v53 = v100 - 1;
    uint64_t result = (uint64_t)memmove(&v54[2 * v56], v98 + 2, 16 * (v100 - 1 - v56));
    *((void *)v9 + 2) = v100 - 1;
    uint64_t v8 = v113;
    if (v100 <= 2) {
      goto LABEL_87;
    }
  }
LABEL_92:
  uint64_t result = swift_bridgeObjectRelease();
  if (v112 < -1) {
    goto LABEL_131;
  }
  v110[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100AD7DF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 40 * a3;
    while (2)
    {
      uint64_t v6 = v4 + 40 * a3;
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t v8 = *(void *)(v6 + 24);
      uint64_t v9 = v5;
      uint64_t v10 = result;
      do
      {
        uint64_t v11 = *(void *)(v9 - 16);
        BOOL v12 = v7 < *(void *)(v9 - 32);
        BOOL v13 = v8 == v11;
        BOOL v14 = v8 < v11;
        if (!v13) {
          BOOL v12 = v14;
        }
        if (!v12) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        char v15 = *(unsigned char *)v9;
        uint64_t v16 = *(void *)(v9 + 16);
        uint64_t v17 = *(void *)(v9 + 32);
        long long v18 = *(_OWORD *)(v9 - 24);
        *(_OWORD *)uint64_t v9 = *(_OWORD *)(v9 - 40);
        *(_OWORD *)(v9 + 16) = v18;
        *(void *)(v9 + 32) = *(void *)(v9 - 8);
        *(void *)(v9 - 32) = v7;
        *(void *)(v9 - 24) = v16;
        *(void *)(v9 - 16) = v8;
        *(void *)(v9 - 8) = v17;
        *(unsigned char *)(v9 - 40) = v15;
        v9 -= 40;
        ++v10;
      }
      while (a3 != v10);
      ++a3;
      v5 += 40;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100AD7E94(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  if (v9 >= v11)
  {
    sub_1007EB0F4(a2, (uint64_t)(a3 - (void)a2) / 40, a4);
    BOOL v12 = &v4[40 * v11];
    if (v7 >= v6 || v10 < 40) {
      goto LABEL_45;
    }
    unint64_t v24 = a3 - 40;
    while (1)
    {
      int v25 = (char *)(v24 + 40);
      uint64_t v26 = *((void *)v12 - 2);
      uint64_t v27 = *((void *)v6 - 2);
      BOOL v28 = *((void *)v12 - 4) < *((void *)v6 - 4);
      BOOL v16 = v26 == v27;
      BOOL v29 = v26 < v27;
      if (!v16) {
        BOOL v28 = v29;
      }
      if (v28)
      {
        uint64_t v30 = v6 - 40;
        BOOL v31 = v25 != v6 || v24 >= (unint64_t)v6;
        v6 -= 40;
        if (!v31) {
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v30 = v12 - 40;
        BOOL v32 = v25 != v12 || v24 >= (unint64_t)v12;
        v12 -= 40;
        if (!v32) {
          goto LABEL_41;
        }
      }
      long long v33 = *(_OWORD *)v30;
      long long v34 = *((_OWORD *)v30 + 1);
      *(void *)(v24 + 32) = *((void *)v30 + 4);
      *(_OWORD *)unint64_t v24 = v33;
      *(_OWORD *)(v24 + 16) = v34;
LABEL_41:
      v24 -= 40;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_45;
      }
    }
  }
  sub_1007EB0F4(a1, (a2 - a1) / 40, a4);
  BOOL v12 = &v4[40 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 40)
  {
    do
    {
      uint64_t v13 = *((void *)v6 + 3);
      uint64_t v14 = *((void *)v4 + 3);
      BOOL v15 = *((void *)v6 + 1) < *((void *)v4 + 1);
      BOOL v16 = v13 == v14;
      BOOL v17 = v13 < v14;
      if (!v16) {
        BOOL v15 = v17;
      }
      if (v15)
      {
        BOOL v16 = v7 == v6;
        long long v18 = v6;
        v6 += 40;
        if (v16 && v7 < v6) {
          goto LABEL_18;
        }
      }
      else
      {
        BOOL v16 = v7 == v4;
        long long v18 = v4;
        v4 += 40;
        if (v16 && v7 < v4) {
          goto LABEL_18;
        }
      }
      long long v21 = *(_OWORD *)v18;
      long long v22 = *((_OWORD *)v18 + 1);
      *((void *)v7 + 4) = *((void *)v18 + 4);
      *(_OWORD *)uint64_t v7 = v21;
      *((_OWORD *)v7 + 1) = v22;
LABEL_18:
      v7 += 40;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  uint64_t v6 = v7;
LABEL_45:
  sub_1007EB0F4(v4, (v12 - v4) / 40, v6);
  return 1;
}

void *sub_100AD8070(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for LocationComponentViewModel();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        uint64_t v8 = a2[6];
        a1[5] = a2[5];
        a1[6] = v8;
        uint64_t v9 = a2[8];
        a1[7] = a2[7];
        a1[8] = v9;
        uint64_t v10 = a2[10];
        a1[9] = a2[9];
        a1[10] = v10;
        a1[11] = a2[11];
        *((_WORD *)a1 + 48) = *((_WORD *)a2 + 48);
        a1[13] = a2[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 1u:
        *a1 = *a2;
        BOOL v12 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v13 = v12[5];
        uint64_t v14 = (char *)a1 + v13;
        BOOL v15 = (char *)a2 + v13;
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_10017DF08(&qword_100E65250);
        BOOL v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
        v17(v14, v15, v16);
        v17((char *)a1 + v12[6], (char *)a2 + v12[6], v16);
        v17((char *)a1 + v12[7], (char *)a2 + v12[7], v16);
        uint64_t v18 = v12[8];
        BOOL v19 = (void *)((char *)a1 + v18);
        int v20 = (void *)((char *)a2 + v18);
        uint64_t v21 = v20[1];
        *BOOL v19 = *v20;
        v19[1] = v21;
        uint64_t v22 = v12[9];
        uint64_t v23 = (void *)((char *)a1 + v22);
        unint64_t v24 = (void *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 2u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        uint64_t v27 = a2[3];
        a1[2] = a2[2];
        a1[3] = v27;
        uint64_t v28 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v29 = *(int *)(v28 + 24);
        uint64_t v30 = (void *)((char *)a1 + v29);
        BOOL v31 = (void *)((char *)a2 + v29);
        uint64_t v32 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
        {
          uint64_t v33 = sub_10017DF08(&qword_100E63750);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          uint64_t v134 = v31[1];
          void *v30 = *v31;
          v30[1] = v134;
          uint64_t v135 = *(int *)(v32 + 20);
          uint64_t v136 = (char *)v30 + v135;
          uint64_t v137 = (char *)v31 + v135;
          uint64_t v222 = v28;
          uint64_t v138 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v219 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v139 = v138;
          uint64_t v28 = v222;
          v219(v136, v137, v139);
          uint64_t v140 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v136[v140[5]] = *(void *)&v137[v140[5]];
          *(void *)&v136[v140[6]] = *(void *)&v137[v140[6]];
          *(void *)&v136[v140[7]] = *(void *)&v137[v140[7]];
          uint64_t v141 = v140[8];
          uint64_t v142 = &v136[v141];
          uint64_t v143 = &v137[v141];
          uint64_t v145 = *(void *)v143;
          uint64_t v144 = *((void *)v143 + 1);
          *(void *)uint64_t v142 = v145;
          *((void *)v142 + 1) = v144;
          v136[v140[9]] = v137[v140[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
        }
        uint64_t v146 = *(int *)(v28 + 28);
        uint64_t v147 = (void *)((char *)a1 + v146);
        uint64_t v148 = (void *)((char *)a2 + v146);
        uint64_t v149 = v148[1];
        void *v147 = *v148;
        v147[1] = v149;
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 5u:
        uint64_t v34 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
        uint64_t v35 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v36 = v35[5];
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        uint64_t v40 = v35[6];
        uint64_t v41 = (void *)((char *)a1 + v40);
        uint64_t v42 = (void *)((char *)a2 + v40);
        uint64_t v43 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = sub_10017DF08(&qword_100E63850);
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
          goto LABEL_61;
        }
        v223 = v35;
        uint64_t v150 = v42[1];
        *uint64_t v41 = *v42;
        v41[1] = v150;
        uint64_t v151 = (int *)v43;
        uint64_t v152 = *(int *)(v43 + 20);
        uint64_t v153 = (char *)v41 + v152;
        uint64_t v154 = (char *)v42 + v152;
        uint64_t v155 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v154, 1, v155))
        {
          uint64_t v156 = sub_10017DF08(&qword_100E63730);
          memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v153, v154, v155);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v153, 0, 1, v155);
        }
        uint64_t v175 = v151[6];
        uint64_t v176 = (char *)v41 + v175;
        uint64_t v177 = (char *)v42 + v175;
        uint64_t v178 = type metadata accessor for WeatherDataModel();
        uint64_t v179 = v177;
        uint64_t v180 = (uint64_t)v151;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 16))(v176, v179, v178);
        uint64_t v181 = v151[7];
        uint64_t v182 = (char *)v41 + v181;
        uint64_t v183 = (char *)v42 + v181;
        uint64_t v184 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v184))
        {
          uint64_t v185 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v182, v183, *(void *)(*(void *)(v185 - 8) + 64));
        }
        else
        {
          uint64_t v186 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v182, v183, v186);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v182, 0, 1, v184);
        }
        uint64_t v187 = v151[8];
        uint64_t v188 = (void *)((char *)v41 + v187);
        uint64_t v189 = (void *)((char *)v42 + v187);
        uint64_t v190 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v193 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v193 - 8) + 16))(v188, v189, v193);
          goto LABEL_49;
        }
        if (!EnumCaseMultiPayload)
        {
          uint64_t v192 = v189[1];
          *uint64_t v188 = *v189;
          v188[1] = v192;
          swift_bridgeObjectRetain();
LABEL_49:
          swift_storeEnumTagMultiPayload();
          goto LABEL_51;
        }
        memcpy(v188, v189, *(void *)(*(void *)(v190 - 8) + 64));
LABEL_51:
        uint64_t v194 = v151[9];
        id v195 = (char *)v41 + v194;
        id v196 = (char *)v42 + v194;
        uint64_t v197 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v197))
        {
          uint64_t v198 = sub_10017DF08(&qword_100E63740);
          memcpy(v195, v196, *(void *)(*(void *)(v198 - 8) + 64));
        }
        else
        {
          uint64_t v199 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v199))
          {
            uint64_t v200 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v195, v196, *(void *)(*(void *)(v200 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v195, v196, v199);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, v199);
          }
          uint64_t v201 = *(int *)(v197 + 20);
          id v202 = &v195[v201];
          id v203 = &v196[v201];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v199))
          {
            uint64_t v204 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v202, v203, *(void *)(*(void *)(v204 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v202, v203, v199);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v199);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, v197);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v180);
        uint64_t v35 = v223;
LABEL_61:
        uint64_t v205 = v35[7];
        uint64_t v206 = (void *)((char *)a1 + v205);
        id v207 = (void *)((char *)a2 + v205);
        uint64_t v208 = v207[1];
        *uint64_t v206 = *v207;
        v206[1] = v208;
        swift_bridgeObjectRetain();
LABEL_62:
        swift_storeEnumTagMultiPayload();
LABEL_63:
        uint64_t v209 = *(int *)(a3 + 20);
        uint64_t v210 = (_OWORD *)((char *)a1 + v209);
        uint64_t v211 = (_OWORD *)((char *)a2 + v209);
        long long v212 = v211[1];
        *uint64_t v210 = *v211;
        v210[1] = v212;
        break;
      case 6u:
        uint64_t v45 = a2[1];
        *a1 = *a2;
        a1[1] = v45;
        int v46 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v46 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        }
        else
        {
          uint64_t v47 = a2[2];
          uint64_t v48 = a2[3];
          sub_1001F3C64(v47, v48, v46);
          a1[2] = v47;
          a1[3] = v48;
          *((unsigned char *)a1 + 32) = v46;
        }
        a1[5] = a2[5];
        uint64_t v157 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v158 = v157[7];
        int v159 = (char *)a1 + v158;
        uint64_t v160 = (char *)a2 + v158;
        uint64_t v161 = type metadata accessor for Date();
        uint64_t v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16);
        swift_bridgeObjectRetain();
        v162(v159, v160, v161);
        *((unsigned char *)a1 + v157[8]) = *((unsigned char *)a2 + v157[8]);
        *(void *)((char *)a1 + v157[9]) = *(void *)((char *)a2 + v157[9]);
        goto LABEL_62;
      case 7u:
        uint64_t v49 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v50 = a2[1];
          *a1 = *a2;
          a1[1] = v50;
          unint64_t v51 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v52 = v51[5];
          unint64_t v53 = (char *)a1 + v52;
          uint64_t v54 = (char *)a2 + v52;
          uint64_t v55 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_10017DF08(&qword_100E749B0);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
          }
          uint64_t v163 = v51[6];
          uint64_t v164 = (void *)((char *)a1 + v163);
          uint64_t v165 = (void *)((char *)a2 + v163);
          uint64_t v166 = v165[1];
          *uint64_t v164 = *v165;
          v164[1] = v166;
          uint64_t v167 = v51[7];
          uint64_t v168 = (char *)a1 + v167;
          uint64_t v169 = (char *)a2 + v167;
          uint64_t v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          v170(v168, v169, v55);
          uint64_t v171 = v51[8];
          uint64_t v172 = (char *)a1 + v171;
          uint64_t v173 = (char *)a2 + v171;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v171, 1, v55))
          {
            uint64_t v174 = sub_10017DF08(&qword_100E749B0);
            memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
          }
          else
          {
            v170(v172, v173, v55);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v55);
          }
          *((unsigned char *)a1 + v51[9]) = *((unsigned char *)a2 + v51[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
        }
        goto LABEL_62;
      case 8u:
        uint64_t v57 = a2[1];
        *a1 = *a2;
        a1[1] = v57;
        uint64_t v58 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v59 = (char *)a1 + v58;
        char v60 = (char *)a2 + v58;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v59, v60, HourPrecipitationChartViewModel);
        goto LABEL_62;
      case 9u:
        uint64_t v63 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
        uint64_t v64 = type metadata accessor for NotificationsOptInComponentViewModel();
        *((unsigned char *)a1 + *(int *)(v64 + 20)) = *((unsigned char *)a2 + *(int *)(v64 + 20));
        goto LABEL_62;
      case 0xAu:
        uint64_t v65 = a2[1];
        *a1 = *a2;
        a1[1] = v65;
        uint64_t v66 = a2[3];
        a1[2] = a2[2];
        a1[3] = v66;
        uint64_t v67 = a2[5];
        a1[4] = a2[4];
        a1[5] = v67;
        uint64_t v68 = a2[7];
        a1[6] = a2[6];
        a1[7] = v68;
        uint64_t v69 = a2[9];
        a1[8] = a2[8];
        a1[9] = v69;
        uint64_t v70 = a2[11];
        a1[10] = a2[10];
        a1[11] = v70;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 0xBu:
        uint64_t v71 = type metadata accessor for PressureTrend();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
        uint64_t v72 = (int *)type metadata accessor for PressureComponentViewModel();
        uint64_t v73 = v72[5];
        char v74 = (void *)((char *)a1 + v73);
        uint64_t v75 = (void *)((char *)a2 + v73);
        uint64_t v77 = *v75;
        uint64_t v76 = v75[1];
        *char v74 = v77;
        v74[1] = v76;
        uint64_t v78 = v72[6];
        char v79 = (void *)((char *)a1 + v78);
        uint64_t v80 = (void *)((char *)a2 + v78);
        uint64_t v81 = v80[1];
        *char v79 = *v80;
        v79[1] = v81;
        uint64_t v82 = v72[7];
        uint64_t v83 = (void *)((char *)a1 + v82);
        BOOL v84 = (void *)((char *)a2 + v82);
        uint64_t v85 = v84[1];
        *uint64_t v83 = *v84;
        v83[1] = v85;
        *(void *)((char *)a1 + v72[8]) = *(void *)((char *)a2 + v72[8]);
        uint64_t v86 = v72[9];
        uint64_t v87 = (void *)((char *)a1 + v86);
        uint64_t v88 = (void *)((char *)a2 + v86);
        uint64_t v89 = v88[1];
        void *v87 = *v88;
        v87[1] = v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 0xDu:
        uint64_t v90 = a2[1];
        *a1 = *a2;
        a1[1] = v90;
        uint64_t v91 = a2[3];
        a1[2] = a2[2];
        a1[3] = v91;
        uint64_t v92 = a2[5];
        a1[4] = a2[4];
        a1[5] = v92;
        uint64_t v93 = a2[7];
        a1[6] = a2[6];
        a1[7] = v93;
        a1[8] = a2[8];
        uint64_t v94 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v95 = *(int *)(v94 + 36);
        id v218 = (char *)a2 + v95;
        uint64_t v220 = (char *)a1 + v95;
        uint64_t v96 = type metadata accessor for WeatherAlert.Prominence();
        uint64_t v217 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v217(v220, v218, v96);
        *(void *)((char *)a1 + *(int *)(v94 + 40)) = *(void *)((char *)a2 + *(int *)(v94 + 40));
        goto LABEL_62;
      case 0xEu:
        uint64_t v97 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v97 - 8) + 16))(a1, a2, v97);
        goto LABEL_62;
      case 0xFu:
        uint64_t v98 = a2[1];
        *a1 = *a2;
        a1[1] = v98;
        uint64_t v99 = a2[3];
        a1[2] = a2[2];
        a1[3] = v99;
        uint64_t v100 = a2[5];
        a1[4] = a2[4];
        a1[5] = v100;
        uint64_t v101 = a2[7];
        a1[6] = a2[6];
        a1[7] = v101;
        uint64_t v102 = a2[9];
        a1[8] = a2[8];
        a1[9] = v102;
        uint64_t v103 = a2[11];
        a1[10] = a2[10];
        a1[11] = v103;
        uint64_t v104 = a2[13];
        a1[12] = a2[12];
        a1[13] = v104;
        uint64_t v105 = a2[15];
        a1[14] = a2[14];
        a1[15] = v105;
        uint64_t v106 = a2[17];
        a1[16] = a2[16];
        a1[17] = v106;
        uint64_t v107 = a2[19];
        a1[18] = a2[18];
        a1[19] = v107;
        uint64_t v108 = a2[21];
        a1[20] = a2[20];
        a1[21] = v108;
        uint64_t v109 = a2[23];
        a1[22] = a2[22];
        a1[23] = v109;
        uint64_t v110 = a2[25];
        a1[24] = a2[24];
        a1[25] = v110;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 0x10u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v111 = a2[3];
        a1[2] = a2[2];
        a1[3] = v111;
        uint64_t v112 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v113 = *(int *)(v112 + 28);
        uint64_t v114 = (char *)a1 + v113;
        uint64_t v115 = (char *)a2 + v113;
        uint64_t v116 = type metadata accessor for WeatherDescription();
        uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16);
        swift_bridgeObjectRetain();
        v117(v114, v115, v116);
        *(void *)((char *)a1 + *(int *)(v112 + 32)) = *(void *)((char *)a2 + *(int *)(v112 + 32));
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 0x11u:
        uint64_t v118 = a2[1];
        *a1 = *a2;
        a1[1] = v118;
        uint64_t v119 = a2[3];
        a1[2] = a2[2];
        a1[3] = v119;
        uint64_t v120 = a2[5];
        a1[4] = a2[4];
        a1[5] = v120;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_62;
      case 0x12u:
        uint64_t v121 = a2[1];
        *a1 = *a2;
        a1[1] = v121;
        uint64_t v122 = a2[3];
        a1[2] = a2[2];
        a1[3] = v122;
        uint64_t v123 = a2[5];
        a1[4] = a2[4];
        a1[5] = v123;
        uint64_t v124 = a2[7];
        a1[6] = a2[6];
        a1[7] = v124;
        uint64_t v125 = a2[9];
        a1[8] = a2[8];
        a1[9] = v125;
        uint64_t v126 = a2[11];
        a1[10] = a2[10];
        a1[11] = v126;
        uint64_t v127 = a2[13];
        a1[12] = a2[12];
        a1[13] = v127;
        uint64_t v128 = a2[15];
        a1[14] = a2[14];
        a1[15] = v128;
        uint64_t v129 = a2[17];
        a1[16] = a2[16];
        a1[17] = v129;
        uint64_t v130 = a2[19];
        a1[18] = a2[18];
        a1[19] = v130;
        uint64_t v131 = a2[21];
        a1[20] = a2[20];
        a1[21] = v131;
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        a1[24] = a2[24];
        uint64_t v221 = type metadata accessor for WindComponentViewModel();
        uint64_t v132 = *(int *)(v221 + 68);
        id v215 = (char *)a2 + v132;
        id v216 = (char *)a1 + v132;
        uint64_t v133 = type metadata accessor for WindComponentCompassViewModel();
        uint64_t v214 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v214(v216, v215, v133);
        *(void *)((char *)a1 + *(int *)(v221 + 72)) = *(void *)((char *)a2 + *(int *)(v221 + 72));
        swift_bridgeObjectRetain();
        goto LABEL_62;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_63;
    }
  }
  return a1;
}

uint64_t sub_100AD9384(uint64_t a1)
{
  type metadata accessor for LocationComponentViewModel();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 1:
      swift_bridgeObjectRelease();
      Swift::Int v3 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v4 = a1 + v3[5];
      uint64_t v5 = sub_10017DF08(&qword_100E65250);
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(v4, v5);
      v6(a1 + v3[6], v5);
      v6(a1 + v3[7], v5);
      goto LABEL_26;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
      uint64_t v8 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v7 + *(int *)(v8 + 20);
        uint64_t v10 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_45;
    case 3:
    case 4:
      goto LABEL_45;
    case 5:
      uint64_t v11 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
      uint64_t v12 = type metadata accessor for MapComponentViewModel();
      uint64_t v13 = a1 + *(int *)(v12 + 20);
      uint64_t v14 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      uint64_t v15 = a1 + *(int *)(v12 + 24);
      uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, (uint64_t)v16))
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v15 + v16[5];
        uint64_t v18 = type metadata accessor for Locale();
        if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
        }
        uint64_t v19 = v15 + v16[6];
        uint64_t v20 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
        uint64_t v21 = v15 + v16[7];
        uint64_t v22 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
        {
          uint64_t v23 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
        }
        uint64_t v24 = v15 + v16[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v40 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v24, v40);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v41 = v15 + v16[9];
        uint64_t v42 = type metadata accessor for WeatherDataOverrides();
        if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42))
        {
          uint64_t v43 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v43)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v41, v43);
          }
          uint64_t v44 = v41 + *(int *)(v42 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v43)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v44, v43);
          }
        }
      }
      goto LABEL_45;
    case 6:
      swift_bridgeObjectRelease();
      int v26 = *(unsigned __int8 *)(a1 + 32);
      if (v26 != 255) {
        sub_1001F3C7C(*(void *)(a1 + 16), *(void *)(a1 + 24), v26);
      }
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for MoonComponentViewModel() + 28);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Date();
      goto LABEL_29;
    case 7:
      type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 1) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v29 = a1 + v28[5];
      uint64_t v30 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v30)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      }
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);
      v45(a1 + v28[7], v30);
      uint64_t v31 = a1 + v28[8];
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v31, 1, v30);
      if (result) {
        return result;
      }
      uint64_t v35 = v31;
      uint64_t v34 = v30;
      uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))v45;
      goto LABEL_30;
    case 8:
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      goto LABEL_29;
    case 9:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Location();
      goto LABEL_29;
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 11:
      uint64_t v32 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(a1, v32);
      type metadata accessor for PressureComponentViewModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for SevereAlertComponentViewModel() + 36);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence();
      goto LABEL_29;
    case 14:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel();
LABEL_29:
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 8);
      uint64_t v34 = HourPrecipitationChartViewModel;
      uint64_t v35 = a1;
LABEL_30:
      return v33(v35, v34);
    case 15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 16:
      swift_bridgeObjectRelease();
      uint64_t v36 = a1 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
      uint64_t v37 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      goto LABEL_45;
    case 17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = a1 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
      uint64_t v39 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
LABEL_45:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_100AD9D18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      uint64_t v7 = a2[6];
      a1[5] = a2[5];
      a1[6] = v7;
      uint64_t v8 = a2[8];
      a1[7] = a2[7];
      a1[8] = v8;
      uint64_t v9 = a2[10];
      a1[9] = a2[9];
      a1[10] = v9;
      a1[11] = a2[11];
      *((_WORD *)a1 + 48) = *((_WORD *)a2 + 48);
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 1u:
      *a1 = *a2;
      uint64_t v10 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_10017DF08(&qword_100E65250);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(v12, v13, v14);
      v15((char *)a1 + v10[6], (char *)a2 + v10[6], v14);
      v15((char *)a1 + v10[7], (char *)a2 + v10[7], v14);
      uint64_t v16 = v10[8];
      uint64_t v17 = (void *)((char *)a1 + v16);
      uint64_t v18 = (void *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      uint64_t v20 = v10[9];
      uint64_t v21 = (void *)((char *)a1 + v20);
      uint64_t v22 = (void *)((char *)a2 + v20);
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 2u:
      uint64_t v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      uint64_t v25 = a2[3];
      a1[2] = a2[2];
      a1[3] = v25;
      uint64_t v26 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v27 = *(int *)(v26 + 24);
      uint64_t v28 = (void *)((char *)a1 + v27);
      uint64_t v29 = (void *)((char *)a2 + v27);
      uint64_t v30 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = sub_10017DF08(&qword_100E63750);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        uint64_t v133 = v29[1];
        *uint64_t v28 = *v29;
        v28[1] = v133;
        uint64_t v134 = *(int *)(v30 + 20);
        uint64_t v135 = (char *)v28 + v134;
        uint64_t v136 = (char *)v29 + v134;
        uint64_t v221 = a3;
        uint64_t v137 = type metadata accessor for TemperatureScaleConfiguration();
        uint64_t v217 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v138 = v137;
        a3 = v221;
        v217(v135, v136, v138);
        uint64_t v139 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v135[v139[5]] = *(void *)&v136[v139[5]];
        *(void *)&v135[v139[6]] = *(void *)&v136[v139[6]];
        *(void *)&v135[v139[7]] = *(void *)&v136[v139[7]];
        uint64_t v140 = v139[8];
        uint64_t v141 = &v135[v140];
        uint64_t v142 = &v136[v140];
        uint64_t v144 = *(void *)v142;
        uint64_t v143 = *((void *)v142 + 1);
        *(void *)uint64_t v141 = v144;
        *((void *)v141 + 1) = v143;
        v135[v139[9]] = v136[v139[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v145 = *(int *)(v26 + 28);
      uint64_t v146 = (void *)((char *)a1 + v145);
      uint64_t v147 = (void *)((char *)a2 + v145);
      uint64_t v148 = v147[1];
      void *v146 = *v147;
      v146[1] = v148;
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 3u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 5u:
      uint64_t v32 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
      uint64_t v33 = (int *)type metadata accessor for MapComponentViewModel();
      uint64_t v34 = v33[5];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      uint64_t v38 = v33[6];
      uint64_t v39 = (void *)((char *)a1 + v38);
      uint64_t v40 = (void *)((char *)a2 + v38);
      uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, (uint64_t)v41))
      {
        uint64_t v42 = sub_10017DF08(&qword_100E63850);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        goto LABEL_59;
      }
      uint64_t v222 = a3;
      uint64_t v149 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v149;
      uint64_t v150 = v41[5];
      uint64_t v151 = (char *)v39 + v150;
      uint64_t v152 = (char *)v40 + v150;
      uint64_t v153 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v153))
      {
        uint64_t v154 = sub_10017DF08(&qword_100E63730);
        memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v153);
      }
      uint64_t v173 = v41[6];
      uint64_t v174 = (char *)v39 + v173;
      uint64_t v175 = (char *)v40 + v173;
      uint64_t v176 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
      uint64_t v177 = v41[7];
      uint64_t v178 = (char *)v39 + v177;
      uint64_t v179 = (char *)v40 + v177;
      uint64_t v180 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v180))
      {
        uint64_t v181 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
      }
      else
      {
        uint64_t v182 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v178, v179, v182);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v180);
      }
      uint64_t v183 = v41[8];
      uint64_t v184 = (void *)((char *)v39 + v183);
      uint64_t v185 = (void *)((char *)v40 + v183);
      uint64_t v186 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v189 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v189 - 8) + 16))(v184, v185, v189);
        goto LABEL_47;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v188 = v185[1];
        *uint64_t v184 = *v185;
        v184[1] = v188;
        swift_bridgeObjectRetain();
LABEL_47:
        swift_storeEnumTagMultiPayload();
        goto LABEL_49;
      }
      memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
LABEL_49:
      uint64_t v190 = v41[9];
      uint64_t v191 = (char *)v39 + v190;
      uint64_t v192 = (char *)v40 + v190;
      uint64_t v193 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
      {
        uint64_t v194 = sub_10017DF08(&qword_100E63740);
        memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
      }
      else
      {
        uint64_t v195 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v195))
        {
          uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v191, v192, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v191, v192, v195);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v195);
        }
        uint64_t v197 = *(int *)(v193 + 20);
        uint64_t v198 = &v191[v197];
        uint64_t v199 = &v192[v197];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v199, 1, v195))
        {
          uint64_t v200 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v198, v199, *(void *)(*(void *)(v200 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v198, v199, v195);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v198, 0, 1, v195);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
      }
      a3 = v222;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, (uint64_t)v41);
LABEL_59:
      uint64_t v201 = v33[7];
      id v202 = (void *)((char *)a1 + v201);
      id v203 = (void *)((char *)a2 + v201);
      uint64_t v204 = v203[1];
      *id v202 = *v203;
      v202[1] = v204;
      swift_bridgeObjectRetain();
LABEL_60:
      swift_storeEnumTagMultiPayload();
LABEL_61:
      uint64_t v205 = *(int *)(a3 + 20);
      uint64_t v206 = (_OWORD *)((char *)a1 + v205);
      id v207 = (_OWORD *)((char *)a2 + v205);
      long long v208 = v207[1];
      *uint64_t v206 = *v207;
      v206[1] = v208;
      return a1;
    case 6u:
      uint64_t v43 = a2[1];
      *a1 = *a2;
      a1[1] = v43;
      int v44 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v44 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v45 = a2[2];
        uint64_t v46 = a2[3];
        sub_1001F3C64(v45, v46, v44);
        a1[2] = v45;
        a1[3] = v46;
        *((unsigned char *)a1 + 32) = v44;
      }
      a1[5] = a2[5];
      uint64_t v155 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v156 = v155[7];
      uint64_t v157 = (char *)a1 + v156;
      uint64_t v158 = (char *)a2 + v156;
      uint64_t v159 = type metadata accessor for Date();
      uint64_t v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16);
      swift_bridgeObjectRetain();
      v160(v157, v158, v159);
      *((unsigned char *)a1 + v155[8]) = *((unsigned char *)a2 + v155[8]);
      *(void *)((char *)a1 + v155[9]) = *(void *)((char *)a2 + v155[9]);
      goto LABEL_60;
    case 7u:
      uint64_t v47 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v48 = a2[1];
        *a1 = *a2;
        a1[1] = v48;
        uint64_t v49 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v50 = v49[5];
        unint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
        {
          uint64_t v54 = sub_10017DF08(&qword_100E749B0);
          memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v53);
        }
        uint64_t v161 = v49[6];
        uint64_t v162 = (void *)((char *)a1 + v161);
        uint64_t v163 = (void *)((char *)a2 + v161);
        uint64_t v164 = v163[1];
        void *v162 = *v163;
        v162[1] = v164;
        uint64_t v165 = v49[7];
        uint64_t v166 = (char *)a1 + v165;
        uint64_t v167 = (char *)a2 + v165;
        uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v168(v166, v167, v53);
        uint64_t v169 = v49[8];
        uint64_t v170 = (char *)a1 + v169;
        uint64_t v171 = (char *)a2 + v169;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v169, 1, v53))
        {
          uint64_t v172 = sub_10017DF08(&qword_100E749B0);
          memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
          v168(v170, v171, v53);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v53);
        }
        *((unsigned char *)a1 + v49[9]) = *((unsigned char *)a2 + v49[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
      }
      goto LABEL_60;
    case 8u:
      uint64_t v55 = a2[1];
      *a1 = *a2;
      a1[1] = v55;
      uint64_t v56 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      char v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
      swift_bridgeObjectRetain();
      v60(v57, v58, HourPrecipitationChartViewModel);
      goto LABEL_60;
    case 9u:
      uint64_t v61 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(a1, a2, v61);
      uint64_t v62 = type metadata accessor for NotificationsOptInComponentViewModel();
      *((unsigned char *)a1 + *(int *)(v62 + 20)) = *((unsigned char *)a2 + *(int *)(v62 + 20));
      goto LABEL_60;
    case 0xAu:
      uint64_t v63 = a2[1];
      *a1 = *a2;
      a1[1] = v63;
      uint64_t v64 = a2[3];
      a1[2] = a2[2];
      a1[3] = v64;
      uint64_t v65 = a2[5];
      a1[4] = a2[4];
      a1[5] = v65;
      uint64_t v66 = a2[7];
      a1[6] = a2[6];
      a1[7] = v66;
      uint64_t v67 = a2[9];
      a1[8] = a2[8];
      a1[9] = v67;
      uint64_t v68 = a2[11];
      a1[10] = a2[10];
      a1[11] = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0xBu:
      uint64_t v69 = type metadata accessor for PressureTrend();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
      uint64_t v70 = (int *)type metadata accessor for PressureComponentViewModel();
      uint64_t v71 = v70[5];
      uint64_t v72 = (void *)((char *)a1 + v71);
      uint64_t v73 = (void *)((char *)a2 + v71);
      uint64_t v75 = *v73;
      uint64_t v74 = v73[1];
      *uint64_t v72 = v75;
      v72[1] = v74;
      uint64_t v76 = v70[6];
      uint64_t v77 = (void *)((char *)a1 + v76);
      uint64_t v78 = (void *)((char *)a2 + v76);
      uint64_t v79 = v78[1];
      *uint64_t v77 = *v78;
      v77[1] = v79;
      uint64_t v80 = v70[7];
      uint64_t v81 = (void *)((char *)a1 + v80);
      uint64_t v82 = (void *)((char *)a2 + v80);
      uint64_t v83 = v82[1];
      *uint64_t v81 = *v82;
      v81[1] = v83;
      *(void *)((char *)a1 + v70[8]) = *(void *)((char *)a2 + v70[8]);
      uint64_t v84 = v70[9];
      uint64_t v85 = (void *)((char *)a1 + v84);
      uint64_t v86 = (void *)((char *)a2 + v84);
      uint64_t v87 = v86[1];
      *uint64_t v85 = *v86;
      v85[1] = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0xDu:
      uint64_t v88 = a2[1];
      *a1 = *a2;
      a1[1] = v88;
      uint64_t v89 = a2[3];
      a1[2] = a2[2];
      a1[3] = v89;
      uint64_t v90 = a2[5];
      a1[4] = a2[4];
      a1[5] = v90;
      uint64_t v91 = a2[7];
      a1[6] = a2[6];
      a1[7] = v91;
      a1[8] = a2[8];
      uint64_t v92 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v93 = *(int *)(v92 + 36);
      uint64_t v214 = (char *)a2 + v93;
      id v215 = (char *)a1 + v93;
      uint64_t v218 = a3;
      uint64_t v94 = type metadata accessor for WeatherAlert.Prominence();
      uint64_t v213 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v95 = v94;
      a3 = v218;
      v213(v215, v214, v95);
      *(void *)((char *)a1 + *(int *)(v92 + 40)) = *(void *)((char *)a2 + *(int *)(v92 + 40));
      goto LABEL_60;
    case 0xEu:
      uint64_t v96 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
      goto LABEL_60;
    case 0xFu:
      uint64_t v97 = a2[1];
      *a1 = *a2;
      a1[1] = v97;
      uint64_t v98 = a2[3];
      a1[2] = a2[2];
      a1[3] = v98;
      uint64_t v99 = a2[5];
      a1[4] = a2[4];
      a1[5] = v99;
      uint64_t v100 = a2[7];
      a1[6] = a2[6];
      a1[7] = v100;
      uint64_t v101 = a2[9];
      a1[8] = a2[8];
      a1[9] = v101;
      uint64_t v102 = a2[11];
      a1[10] = a2[10];
      a1[11] = v102;
      uint64_t v219 = a3;
      uint64_t v103 = a2[13];
      a1[12] = a2[12];
      a1[13] = v103;
      uint64_t v104 = a2[15];
      a1[14] = a2[14];
      a1[15] = v104;
      uint64_t v105 = a2[17];
      a1[16] = a2[16];
      a1[17] = v105;
      uint64_t v106 = a2[19];
      a1[18] = a2[18];
      a1[19] = v106;
      uint64_t v107 = a2[21];
      a1[20] = a2[20];
      a1[21] = v107;
      uint64_t v108 = a2[23];
      a1[22] = a2[22];
      a1[23] = v108;
      uint64_t v109 = a2[25];
      a1[24] = a2[24];
      a1[25] = v109;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v219;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0x10u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v110 = a2[3];
      a1[2] = a2[2];
      a1[3] = v110;
      uint64_t v111 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v112 = *(int *)(v111 + 28);
      uint64_t v113 = (char *)a1 + v112;
      uint64_t v114 = (char *)a2 + v112;
      uint64_t v115 = type metadata accessor for WeatherDescription();
      uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
      swift_bridgeObjectRetain();
      v116(v113, v114, v115);
      *(void *)((char *)a1 + *(int *)(v111 + 32)) = *(void *)((char *)a2 + *(int *)(v111 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0x11u:
      uint64_t v117 = a2[1];
      *a1 = *a2;
      a1[1] = v117;
      uint64_t v118 = a2[3];
      a1[2] = a2[2];
      a1[3] = v118;
      uint64_t v119 = a2[5];
      a1[4] = a2[4];
      a1[5] = v119;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0x12u:
      uint64_t v120 = a2[1];
      *a1 = *a2;
      a1[1] = v120;
      uint64_t v121 = a2[3];
      a1[2] = a2[2];
      a1[3] = v121;
      uint64_t v122 = a2[5];
      a1[4] = a2[4];
      a1[5] = v122;
      uint64_t v220 = a3;
      uint64_t v123 = a2[7];
      a1[6] = a2[6];
      a1[7] = v123;
      uint64_t v124 = a2[9];
      a1[8] = a2[8];
      a1[9] = v124;
      uint64_t v125 = a2[11];
      a1[10] = a2[10];
      a1[11] = v125;
      uint64_t v126 = a2[13];
      a1[12] = a2[12];
      a1[13] = v126;
      uint64_t v127 = a2[15];
      a1[14] = a2[14];
      a1[15] = v127;
      uint64_t v128 = a2[17];
      a1[16] = a2[16];
      a1[17] = v128;
      uint64_t v129 = a2[19];
      a1[18] = a2[18];
      a1[19] = v129;
      uint64_t v130 = a2[21];
      a1[20] = a2[20];
      a1[21] = v130;
      *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
      a1[24] = a2[24];
      uint64_t v216 = type metadata accessor for WindComponentViewModel();
      uint64_t v131 = *(int *)(v216 + 68);
      uint64_t v211 = (char *)a2 + v131;
      long long v212 = (char *)a1 + v131;
      uint64_t v132 = type metadata accessor for WindComponentCompassViewModel();
      uint64_t v210 = *(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v220;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v210(v212, v211, v132);
      *(void *)((char *)a1 + *(int *)(v216 + 72)) = *(void *)((char *)a2 + *(int *)(v216 + 72));
      swift_bridgeObjectRetain();
      goto LABEL_60;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_61;
  }
}

void *sub_100ADB004(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001EC5EC((uint64_t)a1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    uint64_t v6 = type metadata accessor for LocationComponentViewModel();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        *((unsigned char *)a1 + 97) = *((unsigned char *)a2 + 97);
        a1[13] = a2[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 1u:
        *a1 = *a2;
        uint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_10017DF08(&qword_100E65250);
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        v12(v9, v10, v11);
        v12((char *)a1 + v7[6], (char *)a2 + v7[6], v11);
        v12((char *)a1 + v7[7], (char *)a2 + v7[7], v11);
        uint64_t v13 = v7[8];
        uint64_t v14 = (void *)((char *)a1 + v13);
        uint64_t v15 = (void *)((char *)a2 + v13);
        *uint64_t v14 = *v15;
        v14[1] = v15[1];
        uint64_t v16 = v7[9];
        uint64_t v17 = (void *)((char *)a1 + v16);
        uint64_t v18 = (void *)((char *)a2 + v16);
        *uint64_t v17 = *v18;
        v17[1] = v18[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 2u:
        uint64_t v161 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v19 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v20 = *(int *)(v19 + 24);
        uint64_t v21 = (void *)((char *)a1 + v20);
        uint64_t v22 = (void *)((char *)a2 + v20);
        uint64_t v23 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = sub_10017DF08(&qword_100E63750);
          memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          *uint64_t v21 = *v22;
          v21[1] = v22[1];
          uint64_t v81 = *(int *)(v23 + 20);
          uint64_t v82 = (char *)v21 + v81;
          uint64_t v83 = (char *)v22 + v81;
          uint64_t v84 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
          swift_bridgeObjectRetain();
          v159(v82, v83, v84);
          uint64_t v85 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v82[v85[5]] = *(void *)&v83[v85[5]];
          *(void *)&v82[v85[6]] = *(void *)&v83[v85[6]];
          *(void *)&v82[v85[7]] = *(void *)&v83[v85[7]];
          uint64_t v86 = v85[8];
          uint64_t v87 = &v82[v86];
          uint64_t v88 = &v83[v86];
          *(void *)uint64_t v87 = *(void *)v88;
          *((void *)v87 + 1) = *((void *)v88 + 1);
          v82[v85[9]] = v83[v85[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
        }
        a3 = v161;
        uint64_t v89 = *(int *)(v19 + 28);
        uint64_t v90 = (void *)((char *)a1 + v89);
        uint64_t v91 = (void *)((char *)a2 + v89);
        void *v90 = *v91;
        v90[1] = v91[1];
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 5u:
        uint64_t v25 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v27 = v26[5];
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        uint64_t v31 = v26[6];
        uint64_t v32 = (void *)((char *)a1 + v31);
        uint64_t v33 = (void *)((char *)a2 + v31);
        uint64_t v34 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
        {
          uint64_t v35 = sub_10017DF08(&qword_100E63850);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
          goto LABEL_60;
        }
        uint64_t v160 = v26;
        uint64_t v163 = a3;
        *uint64_t v32 = *v33;
        v32[1] = v33[1];
        uint64_t v92 = (int *)v34;
        uint64_t v93 = *(int *)(v34 + 20);
        uint64_t v94 = (char *)v32 + v93;
        uint64_t v95 = (char *)v33 + v93;
        uint64_t v96 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
        {
          uint64_t v97 = sub_10017DF08(&qword_100E63730);
          memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
        }
        uint64_t v116 = v92[6];
        uint64_t v117 = (char *)v32 + v116;
        uint64_t v118 = (char *)v33 + v116;
        uint64_t v119 = type metadata accessor for WeatherDataModel();
        uint64_t v120 = v118;
        uint64_t v121 = (uint64_t)v92;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v120, v119);
        uint64_t v122 = v92[7];
        uint64_t v123 = (char *)v32 + v122;
        uint64_t v124 = (char *)v33 + v122;
        uint64_t v125 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
        {
          uint64_t v126 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
        }
        else
        {
          uint64_t v127 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v123, v124, v127);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
        }
        uint64_t v128 = v92[8];
        uint64_t v129 = (void *)((char *)v32 + v128);
        uint64_t v130 = (void *)((char *)v33 + v128);
        uint64_t v131 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v133 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v133 - 8) + 16))(v129, v130, v133);
          goto LABEL_48;
        }
        if (!EnumCaseMultiPayload)
        {
          *uint64_t v129 = *v130;
          v129[1] = v130[1];
          swift_bridgeObjectRetain();
LABEL_48:
          swift_storeEnumTagMultiPayload();
          goto LABEL_50;
        }
        memcpy(v129, v130, *(void *)(*(void *)(v131 - 8) + 64));
LABEL_50:
        uint64_t v134 = v92[9];
        uint64_t v135 = (char *)v32 + v134;
        uint64_t v136 = (char *)v33 + v134;
        uint64_t v137 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
        {
          uint64_t v138 = sub_10017DF08(&qword_100E63740);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          uint64_t v139 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v139))
          {
            uint64_t v140 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v135, v136, *(void *)(*(void *)(v140 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v135, v136, v139);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v139);
          }
          uint64_t v141 = *(int *)(v137 + 20);
          uint64_t v142 = &v135[v141];
          uint64_t v143 = &v136[v141];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, v139))
          {
            uint64_t v144 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v142, v143, v139);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v139);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v137);
        }
        a3 = v163;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v121);
        uint64_t v26 = v160;
LABEL_60:
        uint64_t v145 = v26[7];
        uint64_t v146 = (void *)((char *)a1 + v145);
        uint64_t v147 = (void *)((char *)a2 + v145);
        void *v146 = *v147;
        v146[1] = v147[1];
        swift_bridgeObjectRetain();
LABEL_61:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        int v36 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v36 == 255)
        {
          long long v98 = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          *((_OWORD *)a1 + 1) = v98;
        }
        else
        {
          uint64_t v37 = a2[2];
          uint64_t v38 = a2[3];
          sub_1001F3C64(v37, v38, v36);
          a1[2] = v37;
          a1[3] = v38;
          *((unsigned char *)a1 + 32) = v36;
        }
        a1[5] = a2[5];
        uint64_t v99 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v100 = v99[7];
        uint64_t v101 = (char *)a1 + v100;
        uint64_t v102 = (char *)a2 + v100;
        uint64_t v103 = type metadata accessor for Date();
        uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
        swift_bridgeObjectRetain();
        v104(v101, v102, v103);
        *((unsigned char *)a1 + v99[8]) = *((unsigned char *)a2 + v99[8]);
        *(void *)((char *)a1 + v99[9]) = *(void *)((char *)a2 + v99[9]);
        goto LABEL_61;
      case 7u:
        uint64_t v39 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v40 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v41 = v40[5];
          uint64_t v42 = (char *)a1 + v41;
          uint64_t v43 = (char *)a2 + v41;
          uint64_t v44 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
          {
            uint64_t v45 = sub_10017DF08(&qword_100E749B0);
            memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
          }
          uint64_t v105 = v40[6];
          uint64_t v106 = (void *)((char *)a1 + v105);
          uint64_t v107 = (void *)((char *)a2 + v105);
          *uint64_t v106 = *v107;
          v106[1] = v107[1];
          uint64_t v108 = v40[7];
          uint64_t v109 = (char *)a1 + v108;
          uint64_t v110 = (char *)a2 + v108;
          uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
          swift_bridgeObjectRetain();
          v111(v109, v110, v44);
          uint64_t v112 = v40[8];
          uint64_t v113 = (char *)a1 + v112;
          uint64_t v114 = (char *)a2 + v112;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v112, 1, v44))
          {
            uint64_t v115 = sub_10017DF08(&qword_100E749B0);
            memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
          }
          else
          {
            v111(v113, v114, v44);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v44);
          }
          *((unsigned char *)a1 + v40[9]) = *((unsigned char *)a2 + v40[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        goto LABEL_61;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v46 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v47, v48, HourPrecipitationChartViewModel);
        goto LABEL_61;
      case 9u:
        uint64_t v51 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        uint64_t v52 = type metadata accessor for NotificationsOptInComponentViewModel();
        *((unsigned char *)a1 + *(int *)(v52 + 20)) = *((unsigned char *)a2 + *(int *)(v52 + 20));
        goto LABEL_61;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 0xBu:
        uint64_t v53 = type metadata accessor for PressureTrend();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
        uint64_t v54 = (int *)type metadata accessor for PressureComponentViewModel();
        uint64_t v55 = v54[5];
        uint64_t v56 = (void *)((char *)a1 + v55);
        uint64_t v57 = (void *)((char *)a2 + v55);
        *uint64_t v56 = *v57;
        v56[1] = v57[1];
        uint64_t v58 = v54[6];
        uint64_t v59 = (void *)((char *)a1 + v58);
        char v60 = (void *)((char *)a2 + v58);
        *uint64_t v59 = *v60;
        v59[1] = v60[1];
        uint64_t v61 = v54[7];
        uint64_t v62 = (void *)((char *)a1 + v61);
        uint64_t v63 = (void *)((char *)a2 + v61);
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        *(void *)((char *)a1 + v54[8]) = *(void *)((char *)a2 + v54[8]);
        uint64_t v64 = v54[9];
        uint64_t v65 = (void *)((char *)a1 + v64);
        uint64_t v66 = (void *)((char *)a2 + v64);
        *uint64_t v65 = *v66;
        v65[1] = v66[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        uint64_t v162 = a3;
        uint64_t v67 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v68 = *(int *)(v67 + 36);
        uint64_t v157 = (char *)a2 + v68;
        uint64_t v158 = (char *)a1 + v68;
        uint64_t v69 = type metadata accessor for WeatherAlert.Prominence();
        uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v156(v158, v157, v69);
        uint64_t v70 = *(int *)(v67 + 40);
        a3 = v162;
        *(void *)((char *)a1 + v70) = *(void *)((char *)a2 + v70);
        goto LABEL_61;
      case 0xEu:
        uint64_t v71 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
        goto LABEL_61;
      case 0xFu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        a1[16] = a2[16];
        a1[17] = a2[17];
        a1[18] = a2[18];
        a1[19] = a2[19];
        a1[20] = a2[20];
        a1[21] = a2[21];
        a1[22] = a2[22];
        a1[23] = a2[23];
        a1[24] = a2[24];
        a1[25] = a2[25];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 0x10u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v72 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v73 = *(int *)(v72 + 28);
        uint64_t v74 = (char *)a1 + v73;
        uint64_t v75 = (char *)a2 + v73;
        uint64_t v76 = type metadata accessor for WeatherDescription();
        uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        *(void *)((char *)a1 + *(int *)(v72 + 32)) = *(void *)((char *)a2 + *(int *)(v72 + 32));
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 0x11u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_61;
      case 0x12u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        a1[16] = a2[16];
        a1[17] = a2[17];
        a1[18] = a2[18];
        a1[19] = a2[19];
        a1[20] = a2[20];
        a1[21] = a2[21];
        a1[22] = a2[22];
        a1[23] = a2[23];
        a1[24] = a2[24];
        uint64_t v78 = type metadata accessor for WindComponentViewModel();
        uint64_t v79 = *(int *)(v78 + 68);
        uint64_t v154 = (char *)a1 + v79;
        uint64_t v155 = v78;
        uint64_t v153 = (char *)a2 + v79;
        uint64_t v80 = type metadata accessor for WindComponentCompassViewModel();
        uint64_t v152 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v152(v154, v153, v80);
        *(void *)((char *)a1 + *(int *)(v155 + 72)) = *(void *)((char *)a2 + *(int *)(v155 + 72));
        swift_bridgeObjectRetain();
        goto LABEL_61;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v148 = *(int *)(a3 + 20);
  uint64_t v149 = (void *)((char *)a1 + v148);
  uint64_t v150 = (void *)((char *)a2 + v148);
  void *v149 = *v150;
  v149[1] = v150[1];
  v149[2] = v150[2];
  v149[3] = v150[3];
  return a1;
}

uint64_t sub_100ADC530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_10017DF08(&qword_100E65250);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
      v12(v9, v10, v11);
      v12(a1 + v7[6], a2 + v7[6], v11);
      v12(a1 + v7[7], a2 + v7[7], v11);
      *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
      *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
      goto LABEL_48;
    case 2u:
      long long v13 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v13;
      uint64_t v14 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v15 = *(int *)(v14 + 24);
      uint64_t v16 = (_OWORD *)(a1 + v15);
      uint64_t v17 = (_OWORD *)(a2 + v15);
      uint64_t v18 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_10017DF08(&qword_100E63750);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *uint64_t v16 = *v17;
        uint64_t v75 = *(int *)(v18 + 20);
        uint64_t v76 = (char *)v16 + v75;
        uint64_t v77 = (char *)v17 + v75;
        uint64_t v78 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
        uint64_t v79 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v76[v79[5]] = *(void *)&v77[v79[5]];
        *(void *)&v76[v79[6]] = *(void *)&v77[v79[6]];
        *(void *)&v76[v79[7]] = *(void *)&v77[v79[7]];
        *(_OWORD *)&v76[v79[8]] = *(_OWORD *)&v77[v79[8]];
        v76[v79[9]] = v77[v79[9]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      }
      *(_OWORD *)(a1 + *(int *)(v14 + 28)) = *(_OWORD *)(a2 + *(int *)(v14 + 28));
      goto LABEL_48;
    case 5u:
      uint64_t v20 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      uint64_t v21 = (int *)type metadata accessor for MapComponentViewModel();
      uint64_t v22 = v21[5];
      uint64_t v23 = a1 + v22;
      uint64_t v24 = a2 + v22;
      uint64_t v25 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      uint64_t v26 = v21[6];
      uint64_t v27 = (_OWORD *)(a1 + v26);
      uint64_t v28 = (_OWORD *)(a2 + v26);
      uint64_t v29 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
      {
        uint64_t v30 = sub_10017DF08(&qword_100E63850);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        uint64_t v123 = v21;
        *uint64_t v27 = *v28;
        uint64_t v80 = v29[5];
        uint64_t v81 = (char *)v27 + v80;
        uint64_t v82 = (char *)v28 + v80;
        uint64_t v83 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
        {
          uint64_t v84 = sub_10017DF08(&qword_100E63730);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
        }
        uint64_t v90 = v29[6];
        uint64_t v91 = (char *)v27 + v90;
        uint64_t v92 = (char *)v28 + v90;
        uint64_t v93 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
        uint64_t v94 = v29[7];
        uint64_t v95 = (char *)v27 + v94;
        uint64_t v96 = (char *)v28 + v94;
        uint64_t v97 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          uint64_t v99 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v95, v96, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v100 = v29[8];
        uint64_t v101 = (char *)v27 + v100;
        uint64_t v102 = (char *)v28 + v100;
        uint64_t v103 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v104 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v101, v102, v104);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
        }
        uint64_t v105 = v29[9];
        uint64_t v106 = (char *)v27 + v105;
        uint64_t v107 = (char *)v28 + v105;
        uint64_t v108 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = sub_10017DF08(&qword_100E63740);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
          uint64_t v21 = v123;
        }
        else
        {
          uint64_t v110 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v110))
          {
            uint64_t v111 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v106, v107, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v106, v107, v110);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v110);
          }
          uint64_t v112 = *(int *)(v108 + 20);
          __dst = &v106[v112];
          uint64_t v121 = (uint64_t)v106;
          uint64_t v113 = &v107[v112];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v107[v112], 1, v110))
          {
            uint64_t v114 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(__dst, v113, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(__dst, v113, v110);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v110);
          }
          uint64_t v21 = v123;
          _s7Weather24LocationCompositionStateOwst_0(v121, 0, 1, v108);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
      }
      *(_OWORD *)(a1 + v21[7]) = *(_OWORD *)(a2 + v21[7]);
      goto LABEL_48;
    case 6u:
      long long v31 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v31;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v32 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v33 = v32[7];
      uint64_t v34 = a1 + v33;
      uint64_t v35 = a2 + v33;
      uint64_t v36 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      *(unsigned char *)(a1 + v32[8]) = *(unsigned char *)(a2 + v32[8]);
      *(void *)(a1 + v32[9]) = *(void *)(a2 + v32[9]);
      goto LABEL_48;
    case 7u:
      uint64_t v37 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v122 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v38 = v122[5];
        uint64_t v39 = (void *)(a1 + v38);
        uint64_t v40 = (const void *)(a2 + v38);
        uint64_t v41 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_10017DF08(&qword_100E749B0);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
          uint64_t v43 = *(void *)(v41 - 8);
        }
        else
        {
          uint64_t v43 = *(void *)(v41 - 8);
          (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v39, v40, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
        }
        *(_OWORD *)(a1 + v122[6]) = *(_OWORD *)(a2 + v122[6]);
        uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
        v85(a1 + v122[7], a2 + v122[7], v41);
        uint64_t v86 = v122[8];
        uint64_t v87 = (void *)(a1 + v86);
        uint64_t v88 = (const void *)(a2 + v86);
        if (_s7Weather24LocationCompositionStateOwet_0(a2 + v86, 1, v41))
        {
          uint64_t v89 = sub_10017DF08(&qword_100E749B0);
          memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          v85((uint64_t)v87, (uint64_t)v88, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v41);
        }
        *(unsigned char *)(a1 + v122[9]) = *(unsigned char *)(a2 + v122[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v37 - 8) + 64));
      }
      goto LABEL_48;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v44 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t v45 = a1 + v44;
      uint64_t v46 = a2 + v44;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 32))(v45, v46, HourPrecipitationChartViewModel);
      goto LABEL_48;
    case 9u:
      uint64_t v48 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
      uint64_t v49 = type metadata accessor for NotificationsOptInComponentViewModel();
      *(unsigned char *)(a1 + *(int *)(v49 + 20)) = *(unsigned char *)(a2 + *(int *)(v49 + 20));
      goto LABEL_48;
    case 0xBu:
      uint64_t v50 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
      uint64_t v51 = (int *)type metadata accessor for PressureComponentViewModel();
      *(_OWORD *)(a1 + v51[5]) = *(_OWORD *)(a2 + v51[5]);
      *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
      *(_OWORD *)(a1 + v51[7]) = *(_OWORD *)(a2 + v51[7]);
      *(void *)(a1 + v51[8]) = *(void *)(a2 + v51[8]);
      *(_OWORD *)(a1 + v51[9]) = *(_OWORD *)(a2 + v51[9]);
      goto LABEL_48;
    case 0xDu:
      long long v52 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v52;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      uint64_t v53 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v54 = *(int *)(v53 + 36);
      uint64_t v55 = a1 + v54;
      uint64_t v56 = a2 + v54;
      uint64_t v57 = type metadata accessor for WeatherAlert.Prominence();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      *(void *)(a1 + *(int *)(v53 + 40)) = *(void *)(a2 + *(int *)(v53 + 40));
      goto LABEL_48;
    case 0xEu:
      uint64_t v58 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(a1, a2, v58);
      goto LABEL_48;
    case 0x10u:
      long long v59 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v59;
      uint64_t v60 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v61 = *(int *)(v60 + 28);
      uint64_t v62 = a1 + v61;
      uint64_t v63 = a2 + v61;
      uint64_t v64 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
      *(void *)(a1 + *(int *)(v60 + 32)) = *(void *)(a2 + *(int *)(v60 + 32));
      goto LABEL_48;
    case 0x12u:
      long long v65 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v65;
      long long v66 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v66;
      long long v67 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v67;
      long long v68 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v68;
      long long v69 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v69;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      uint64_t v70 = type metadata accessor for WindComponentViewModel();
      uint64_t v71 = *(int *)(v70 + 68);
      uint64_t v72 = a1 + v71;
      uint64_t v73 = a2 + v71;
      uint64_t v74 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
      *(void *)(a1 + *(int *)(v70 + 72)) = *(void *)(a2 + *(int *)(v70 + 72));
LABEL_48:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v115 = *(int *)(a3 + 20);
  uint64_t v116 = (_OWORD *)(a1 + v115);
  uint64_t v117 = (_OWORD *)(a2 + v115);
  long long v118 = v117[1];
  *uint64_t v116 = *v117;
  v116[1] = v118;
  return a1;
}

uint64_t sub_100ADD330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001EC5EC(a1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    uint64_t v6 = type metadata accessor for LocationComponentViewModel();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        uint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = a1 + v8;
        uint64_t v10 = a2 + v8;
        uint64_t v11 = sub_10017DF08(&qword_100E65250);
        uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
        v12(v9, v10, v11);
        v12(a1 + v7[6], a2 + v7[6], v11);
        v12(a1 + v7[7], a2 + v7[7], v11);
        *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
        *(_OWORD *)(a1 + v7[9]) = *(_OWORD *)(a2 + v7[9]);
        goto LABEL_49;
      case 2u:
        long long v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v13;
        uint64_t v14 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v15 = *(int *)(v14 + 24);
        uint64_t v16 = (_OWORD *)(a1 + v15);
        uint64_t v17 = (_OWORD *)(a2 + v15);
        uint64_t v18 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
        {
          uint64_t v19 = sub_10017DF08(&qword_100E63750);
          memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          *uint64_t v16 = *v17;
          uint64_t v75 = *(int *)(v18 + 20);
          uint64_t v76 = (char *)v16 + v75;
          uint64_t v77 = (char *)v17 + v75;
          uint64_t v78 = type metadata accessor for TemperatureScaleConfiguration();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
          uint64_t v79 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v76[v79[5]] = *(void *)&v77[v79[5]];
          *(void *)&v76[v79[6]] = *(void *)&v77[v79[6]];
          *(void *)&v76[v79[7]] = *(void *)&v77[v79[7]];
          *(_OWORD *)&v76[v79[8]] = *(_OWORD *)&v77[v79[8]];
          v76[v79[9]] = v77[v79[9]];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
        }
        *(_OWORD *)(a1 + *(int *)(v14 + 28)) = *(_OWORD *)(a2 + *(int *)(v14 + 28));
        goto LABEL_49;
      case 5u:
        uint64_t v20 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        uint64_t v21 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v22 = v21[5];
        uint64_t v23 = a1 + v22;
        uint64_t v24 = a2 + v22;
        uint64_t v25 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        uint64_t v26 = v21[6];
        uint64_t v27 = (_OWORD *)(a1 + v26);
        uint64_t v28 = (_OWORD *)(a2 + v26);
        uint64_t v29 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
        {
          uint64_t v30 = sub_10017DF08(&qword_100E63850);
          memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v123 = v21;
          *uint64_t v27 = *v28;
          uint64_t v80 = v29[5];
          uint64_t v81 = (char *)v27 + v80;
          uint64_t v82 = (char *)v28 + v80;
          uint64_t v83 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
          {
            uint64_t v84 = sub_10017DF08(&qword_100E63730);
            memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
          }
          uint64_t v90 = v29[6];
          uint64_t v91 = (char *)v27 + v90;
          uint64_t v92 = (char *)v28 + v90;
          uint64_t v93 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          uint64_t v94 = v29[7];
          uint64_t v95 = (char *)v27 + v94;
          uint64_t v96 = (char *)v28 + v94;
          uint64_t v97 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
          {
            uint64_t v98 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
            uint64_t v99 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v95, v96, v99);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
          }
          uint64_t v100 = v29[8];
          uint64_t v101 = (char *)v27 + v100;
          uint64_t v102 = (char *)v28 + v100;
          uint64_t v103 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v104 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v101, v102, v104);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
          }
          uint64_t v105 = v29[9];
          uint64_t v106 = (char *)v27 + v105;
          uint64_t v107 = (char *)v28 + v105;
          uint64_t v108 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
          {
            uint64_t v109 = sub_10017DF08(&qword_100E63740);
            memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
            uint64_t v21 = v123;
          }
          else
          {
            uint64_t v110 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v110))
            {
              uint64_t v111 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v106, v107, *(void *)(*(void *)(v111 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v106, v107, v110);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v110);
            }
            uint64_t v112 = *(int *)(v108 + 20);
            __dst = &v106[v112];
            uint64_t v121 = (uint64_t)v106;
            uint64_t v113 = &v107[v112];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v107[v112], 1, v110))
            {
              uint64_t v114 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(__dst, v113, *(void *)(*(void *)(v114 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(__dst, v113, v110);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v110);
            }
            uint64_t v21 = v123;
            _s7Weather24LocationCompositionStateOwst_0(v121, 0, 1, v108);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
        }
        *(_OWORD *)(a1 + v21[7]) = *(_OWORD *)(a2 + v21[7]);
        goto LABEL_49;
      case 6u:
        long long v31 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v31;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        uint64_t v32 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v33 = v32[7];
        uint64_t v34 = a1 + v33;
        uint64_t v35 = a2 + v33;
        uint64_t v36 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        *(unsigned char *)(a1 + v32[8]) = *(unsigned char *)(a2 + v32[8]);
        *(void *)(a1 + v32[9]) = *(void *)(a2 + v32[9]);
        goto LABEL_49;
      case 7u:
        uint64_t v37 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v122 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v38 = v122[5];
          uint64_t v39 = (void *)(a1 + v38);
          uint64_t v40 = (const void *)(a2 + v38);
          uint64_t v41 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
          {
            uint64_t v42 = sub_10017DF08(&qword_100E749B0);
            memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
            uint64_t v43 = *(void *)(v41 - 8);
          }
          else
          {
            uint64_t v43 = *(void *)(v41 - 8);
            (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v39, v40, v41);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
          }
          *(_OWORD *)(a1 + v122[6]) = *(_OWORD *)(a2 + v122[6]);
          uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
          v85(a1 + v122[7], a2 + v122[7], v41);
          uint64_t v86 = v122[8];
          uint64_t v87 = (void *)(a1 + v86);
          uint64_t v88 = (const void *)(a2 + v86);
          if (_s7Weather24LocationCompositionStateOwet_0(a2 + v86, 1, v41))
          {
            uint64_t v89 = sub_10017DF08(&qword_100E749B0);
            memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
          }
          else
          {
            v85((uint64_t)v87, (uint64_t)v88, v41);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v41);
          }
          *(unsigned char *)(a1 + v122[9]) = *(unsigned char *)(a2 + v122[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v37 - 8) + 64));
        }
        goto LABEL_49;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v44 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v45 = a1 + v44;
        uint64_t v46 = a2 + v44;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 32))(v45, v46, HourPrecipitationChartViewModel);
        goto LABEL_49;
      case 9u:
        uint64_t v48 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
        uint64_t v49 = type metadata accessor for NotificationsOptInComponentViewModel();
        *(unsigned char *)(a1 + *(int *)(v49 + 20)) = *(unsigned char *)(a2 + *(int *)(v49 + 20));
        goto LABEL_49;
      case 0xBu:
        uint64_t v50 = type metadata accessor for PressureTrend();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t v51 = (int *)type metadata accessor for PressureComponentViewModel();
        *(_OWORD *)(a1 + v51[5]) = *(_OWORD *)(a2 + v51[5]);
        *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
        *(_OWORD *)(a1 + v51[7]) = *(_OWORD *)(a2 + v51[7]);
        *(void *)(a1 + v51[8]) = *(void *)(a2 + v51[8]);
        *(_OWORD *)(a1 + v51[9]) = *(_OWORD *)(a2 + v51[9]);
        goto LABEL_49;
      case 0xDu:
        long long v52 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v52;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        uint64_t v53 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v54 = *(int *)(v53 + 36);
        uint64_t v55 = a1 + v54;
        uint64_t v56 = a2 + v54;
        uint64_t v57 = type metadata accessor for WeatherAlert.Prominence();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        *(void *)(a1 + *(int *)(v53 + 40)) = *(void *)(a2 + *(int *)(v53 + 40));
        goto LABEL_49;
      case 0xEu:
        uint64_t v58 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(a1, a2, v58);
        goto LABEL_49;
      case 0x10u:
        long long v59 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v59;
        uint64_t v60 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v61 = *(int *)(v60 + 28);
        uint64_t v62 = a1 + v61;
        uint64_t v63 = a2 + v61;
        uint64_t v64 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
        *(void *)(a1 + *(int *)(v60 + 32)) = *(void *)(a2 + *(int *)(v60 + 32));
        goto LABEL_49;
      case 0x12u:
        long long v65 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v65;
        long long v66 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v66;
        long long v67 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v67;
        long long v68 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v68;
        long long v69 = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 144) = v69;
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        uint64_t v70 = type metadata accessor for WindComponentViewModel();
        uint64_t v71 = *(int *)(v70 + 68);
        uint64_t v72 = a1 + v71;
        uint64_t v73 = a2 + v71;
        uint64_t v74 = type metadata accessor for WindComponentCompassViewModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        *(void *)(a1 + *(int *)(v70 + 72)) = *(void *)(a2 + *(int *)(v70 + 72));
LABEL_49:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v115 = *(int *)(a3 + 20);
  uint64_t v116 = (_OWORD *)(a1 + v115);
  uint64_t v117 = (_OWORD *)(a2 + v115);
  long long v118 = v117[1];
  *uint64_t v116 = *v117;
  v116[1] = v118;
  return a1;
}

uint64_t sub_100ADE154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ADE168);
}

uint64_t sub_100ADE168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentViewModel();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100ADE1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ADE1C4);
}

uint64_t sub_100ADE1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentViewModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_100ADE210()
{
  uint64_t result = type metadata accessor for LocationComponentViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100ADE2A4@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  switch(a1)
  {
    case 1:
      if (qword_100E62B90 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F52458;
      a2[3] = type metadata accessor for ChanceOfRainChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E950;
      uint64_t v5 = type metadata accessor for ChanceOfRainChartHeaderStyle;
      break;
    case 2:
      if (qword_100E62B88 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F52450;
      a2[3] = type metadata accessor for TemperatureChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E948;
      uint64_t v5 = type metadata accessor for TemperatureChartHeaderStyle;
      break;
    case 3:
      if (qword_100E62988 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F52200;
      a2[3] = type metadata accessor for VisibilityChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E940;
      uint64_t v5 = type metadata accessor for VisibilityChartHeaderStyle;
      break;
    case 4:
      if (qword_100E62570 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F51AD0;
      a2[3] = type metadata accessor for UVIndexChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E938;
      uint64_t v5 = type metadata accessor for UVIndexChartHeaderStyle;
      break;
    default:
      if (qword_100E62378 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F51510;
      a2[3] = type metadata accessor for DefaultChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E958;
      uint64_t v5 = type metadata accessor for DefaultChartHeaderStyle;
      break;
  }
  a2[4] = sub_100ADE61C(v4, (void (*)(uint64_t))v5);
  *a2 = v3;

  return swift_retain();
}

uint64_t sub_100ADE560(uint64_t a1, uint64_t a2)
{
  if ((static ConditionDetailChartHeaderStringModel.== infix(_:_:)() & 1) != 0
    && (uint64_t v4 = type metadata accessor for ConditionDetailChartHeaderViewModel(),
        *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))))
  {
    char v5 = *(unsigned char *)(a1 + *(int *)(v4 + 24)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 24)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t type metadata accessor for ConditionDetailChartHeaderViewModel()
{
  uint64_t result = qword_100EAF818;
  if (!qword_100EAF818) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100ADE61C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100ADE664(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderStringModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_100ADE738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_100ADE7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100ADE844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_100ADE8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_100ADE94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ADE960);
}

uint64_t sub_100ADE960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ConditionDetailChartHeaderStringModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100ADE9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ADEA10);
}

void sub_100ADEA10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ConditionDetailChartHeaderStringModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
}

uint64_t sub_100ADEA98()
{
  uint64_t result = type metadata accessor for ConditionDetailChartHeaderStringModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConditionDetailChartHeaderViewModel.StyleKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100ADEC04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionDetailChartHeaderViewModel.StyleKind()
{
  return &type metadata for ConditionDetailChartHeaderViewModel.StyleKind;
}

unint64_t sub_100ADEC40()
{
  unint64_t result = qword_100EAF858;
  if (!qword_100EAF858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF858);
  }
  return result;
}

void *sub_100ADEC8C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = a3[8];
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    v11[16] = v12[16];
    *((void *)v11 + 3) = *((void *)v12 + 3);
    uint64_t v14 = (char *)a1 + v10;
    uint64_t v15 = (char *)a2 + v10;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    v14[16] = v15[16];
    *((void *)v14 + 3) = *((void *)v15 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100ADEDC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100ADEE60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  uint64_t v12 = *(void *)(v11 + 8);
  *(void *)uint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = v12;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  *(void *)(v10 + 24) = *(void *)(v11 + 24);
  uint64_t v13 = a1 + v9;
  uint64_t v14 = a2 + v9;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100ADEF44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100ADF06C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = (_OWORD *)(a1 + v8);
  uint64_t v11 = (_OWORD *)(a2 + v8);
  long long v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (_OWORD *)(a1 + v9);
  uint64_t v14 = (_OWORD *)(a2 + v9);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t sub_100ADF114(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *(void *)uint64_t v9 = *(void *)(a2 + v8);
  *(void *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100ADF208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ADF21C);
}

uint64_t sub_100ADF21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100ADF2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ADF2C0);
}

void sub_100ADF2C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
}

uint64_t type metadata accessor for PeakKnockoutMark()
{
  uint64_t result = qword_100EAF8B8;
  if (!qword_100EAF8B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100ADF394()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100ADF444()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100ADF460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = type metadata accessor for BlendMode();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  uint64_t v25 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E77ED8);
  __chkstk_darwin(v4 - 8);
  uint64_t v20 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for PointMark();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E92D40);
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PeakKnockoutMark();
  type metadata accessor for Date();
  static PlottableValue.value(_:_:)();
  uint64_t v31 = *(void *)(v1 + *(int *)(v13 + 20));
  static PlottableValue.value(_:_:)();
  PointMark.init<A, B>(x:y:)();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CC10();
  sub_10058CC10();
  uint64_t v14 = v22;
  ChartContent.symbolSize(_:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v14);
  uint64_t v16 = v27;
  uint64_t v15 = v28;
  uint64_t v17 = v25;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v25, enum case for BlendMode.destinationOut(_:), v28);
  uint64_t v29 = v14;
  uint64_t v30 = &protocol witness table for PointMark;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  ChartContent.blendMode(_:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v12, v18);
}

uint64_t sub_100ADF8A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  sub_10017DF08(&qword_100EAF900);
  sub_100179C0C();
  uint64_t v58 = v3;
  uint64_t v59 = v2;
  __chkstk_darwin(v2);
  uint64_t v56 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v57 = (char *)&v51 - v6;
  uint64_t v7 = type metadata accessor for BasicChartSymbolShape();
  sub_100179C0C();
  uint64_t v60 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  sub_10017DF08(&qword_100EAF908);
  sub_100179C0C();
  uint64_t v54 = v14;
  uint64_t v55 = v13;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  sub_10017DF08(&qword_100EAF910);
  sub_100179C0C();
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  sub_10017DF08(&qword_100EAF918);
  sub_100179C0C();
  uint64_t v52 = v23;
  uint64_t v53 = v22;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v51 - v27;
  int v29 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for PeakKnockoutMark() + 24));
  sub_100ADF460(v21);
  static ChartSymbolShape<>.circle.getter();
  if (v29 == 1)
  {
    uint64_t v30 = v60;
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_10058C80C();
    BasicChartSymbolShape.strokeBorder(lineWidth:)();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v12, v7);
    uint64_t v31 = sub_10018C6DC(&qword_100E92D40);
    uint64_t v62 = type metadata accessor for PointMark();
    uint64_t v63 = &protocol witness table for PointMark;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v62 = v31;
    uint64_t v63 = (void *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    uint64_t v33 = v55;
    ChartContent.symbol<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v17, v33);
    uint64_t v34 = sub_100180BBC();
    v35(v34);
    uint64_t v37 = v52;
    uint64_t v36 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v28, v25, v53);
    uint64_t v38 = sub_10017AF7C();
    v39(v38, v28, v36);
    sub_10017DF08(&qword_100EAF920);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v28, v36);
  }
  else
  {
    uint64_t v41 = sub_10018C6DC(&qword_100E92D40);
    uint64_t v64 = type metadata accessor for PointMark();
    long long v65 = &protocol witness table for PointMark;
    uint64_t v42 = swift_getOpaqueTypeConformance2();
    uint64_t v64 = v41;
    long long v65 = (void *)v42;
    swift_getOpaqueTypeConformance2();
    sub_100476BC8();
    uint64_t v43 = v56;
    ChartContent.symbol<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v12, v7);
    uint64_t v44 = sub_100180BBC();
    v45(v44);
    uint64_t v47 = v57;
    uint64_t v46 = v58;
    uint64_t v48 = v59;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v43, v59);
    uint64_t v49 = sub_10017AF7C();
    v50(v49, v47, v48);
    sub_10017DF08(&qword_100EAF920);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
  }
}

unint64_t sub_100ADFDC4()
{
  unint64_t result = qword_100EAF928;
  if (!qword_100EAF928)
  {
    sub_10018C6DC(&qword_100EAF930);
    sub_10018C6DC(&qword_100EAF910);
    sub_10018C6DC(&qword_100EAF908);
    sub_10018C6DC(&qword_100E92D40);
    type metadata accessor for PointMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    type metadata accessor for BasicChartSymbolShape();
    sub_100476BC8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF928);
  }
  return result;
}

void *sub_100ADFF44(char a1, char a2, uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v87 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v86 = (uint64_t)&v71 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v71 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017F948();
  uint64_t v15 = type metadata accessor for LocationComponentViewModel();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v18 = v17;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v71 = (uint64_t)&v71 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v84 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v83 = (uint64_t)&v71 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)&v71 - v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v82 = (uint64_t)&v71 - v29;
  uint64_t v88 = v6;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v30 = &qword_100EAFCE8;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v30 = &qword_100EB0078;
      goto LABEL_11;
    }
    uint64_t v30 = &qword_100EAFEB0;
  }
  else if (a2)
  {
    uint64_t v30 = &qword_100EAF958;
  }
  else
  {
    uint64_t v30 = &qword_100EAFB20;
  }
LABEL_11:
  char v31 = *((unsigned char *)v30 + 160);
  uint64_t v32 = *v30;
  uint64_t v73 = v30[1];
  uint64_t v72 = v30[2];
  uint64_t v33 = v30[3];
  uint64_t v34 = v30[16];
  uint64_t v35 = v30[17];
  uint64_t v36 = v30[18];
  uint64_t v37 = v30[19];
  uint64_t v38 = v30[41];
  uint64_t v76 = v30[42];
  uint64_t v77 = v38;
  uint64_t v39 = v30[43];
  uint64_t v74 = v30[44];
  uint64_t v75 = v39;
  uint64_t v40 = v30[49];
  uint64_t v80 = v30[50];
  uint64_t v81 = v40;
  uint64_t v41 = v30[51];
  uint64_t v78 = v30[52];
  uint64_t v79 = v41;
  uint64_t v42 = v90 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v42, v3, &qword_100E64E80);
  uint64_t v43 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v43) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v48 = 1;
    uint64_t v49 = v88;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v43 + 20), v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v44 = v18;
  uint64_t v45 = v71;
  sub_10031F6FC(v44, v71, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v31)
  {
    sub_10031F75C(v45, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  uint64_t v46 = v45;
  uint64_t v47 = v89;
  sub_10031F6FC(v46, v89, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v48 = 0;
  uint64_t v49 = v88;
  uint64_t v50 = (uint64_t *)(v47 + *(int *)(v88 + 20));
  *uint64_t v50 = v34;
  v50[1] = v35;
  v50[2] = v36;
  v50[3] = v37;
LABEL_17:
  uint64_t v51 = v89;
  _s7Weather24LocationCompositionStateOwst_0(v89, v48, 1, v49);
  uint64_t v52 = v82;
  sub_10031F640(v51, v82);
  uint64_t v53 = v83;
  _s7Weather24LocationCompositionStateOwst_0(v83, 1, 1, v49);
  uint64_t v54 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  uint64_t v55 = v85;
  sub_10031F6A8(v54, v85, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(v49 + 20));
  uint64_t v57 = v73;
  *uint64_t v56 = v32;
  v56[1] = v57;
  v56[2] = v72;
  v56[3] = v33;
  uint64_t v58 = v84;
  sub_10006DF38(v52, v84, &qword_100E6CCD8);
  uint64_t v59 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v86;
  sub_10031F6A8(v59, v86, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v49 + 20));
  uint64_t v62 = v76;
  *uint64_t v61 = v77;
  v61[1] = v62;
  uint64_t v63 = v74;
  v61[2] = v75;
  v61[3] = v63;
  uint64_t v64 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v87;
  sub_10031F6A8(v64, v87, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  long long v66 = (uint64_t *)(v65 + *(int *)(v49 + 20));
  uint64_t v67 = v80;
  *long long v66 = v81;
  v66[1] = v67;
  uint64_t v68 = v78;
  v66[2] = v79;
  v66[3] = v68;
  long long v69 = sub_100AD6D18(v53, v55, v58, v60, v65);
  sub_1001781AC(v52, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_100AE04D0(uint64_t a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64E80);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10017F948();
  uint64_t v6 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_10008B8C0();
  uint64_t v8 = a1 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v8, v1, &qword_100E64E80);
  uint64_t v92 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v6) == 1)
  {
    sub_1001781AC(v1, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100C34240;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = *(void *)(v7 + 72);
    uint64_t v12 = (__n128 *)swift_allocObject();
    uint64_t v13 = sub_100183900(v12, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_nextHourPrecipitation, (uint64_t)v13 + v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 32) = sub_1001F24CC((uint64_t)v12);
    *(void *)(v9 + 40) = v14;
    *(void *)(v9 + 48) = v15;
    uint64_t v16 = (__n128 *)sub_100181354();
    sub_100183B78(v16);
    sub_10031F6A8(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v18, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 56) = sub_1001F24CC((uint64_t)v16);
    *(void *)(v9 + 64) = v19;
    *(void *)(v9 + 72) = v20;
    uint64_t v21 = (__n128 *)swift_allocObject();
    sub_100183B78(v21);
    sub_10031F6A8(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 80) = sub_1001F24CC((uint64_t)v21);
    *(void *)(v9 + 88) = v24;
    *(void *)(v9 + 96) = v25;
    uint64_t v26 = v11;
    uint64_t v27 = (__n128 *)swift_allocObject();
    uint64_t v28 = (char *)sub_100183900(v27, (__n128)xmmword_100C25ED0) + v10;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v28[v26], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v9 + 104) = sub_1001F24CC((uint64_t)v27);
    *(void *)(v9 + 112) = v29;
    *(void *)(v9 + 120) = v30;
    char v31 = (__n128 *)swift_allocObject();
    sub_10016324C(v31);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v28[v26], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v9 + 128) = sub_1001F24CC((uint64_t)v27);
    *(void *)(v9 + 136) = v32;
    *(void *)(v9 + 144) = v33;
    uint64_t v34 = (__n128 *)sub_100181354();
    sub_10016324C(v34);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v28[v26], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v9 + 152) = sub_1001F24CC((uint64_t)v27);
    *(void *)(v9 + 160) = v35;
    *(void *)(v9 + 168) = v36;
    uint64_t v37 = sub_100181354();
    *(_OWORD *)(v37 + 16) = v93;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v37 + v10 + v26, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v9 + 176) = sub_1001F24CC(v37);
    *(void *)(v9 + 184) = v38;
    *(void *)(v9 + 192) = v39;
    uint64_t v40 = sub_100181354();
    *(_OWORD *)(v40 + 16) = v93;
    uint64_t v41 = *(void *)(a1 + 16);
    sub_10031F6A8(v41 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v40 + v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v41 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v40 + v10 + v26, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 200) = sub_1001F24CC(v40);
    *(void *)(v9 + 208) = v42;
    *(void *)(v9 + 216) = v43;
  }
  else
  {
    sub_10031F6FC(v1, v2, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v91 = *(void *)(v7 + 72);
    uint64_t v90 = v2;
    unint64_t v44 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v45 = (__n128 *)swift_allocObject();
    uint64_t v46 = sub_100183900(v45, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_nextHourPrecipitation, (uint64_t)v46 + v44, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 32) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v9 + 40) = v47;
    *(void *)(v9 + 48) = v48;
    uint64_t v49 = (__n128 *)sub_10017C984();
    sub_10017E198(v49);
    sub_10031F6A8(v50 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 56) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v9 + 64) = v52;
    *(void *)(v9 + 72) = v53;
    uint64_t v54 = (__n128 *)sub_10017C984();
    sub_10017E198(v54);
    sub_10031F6A8(v55 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v56, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 80) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v9 + 88) = v57;
    *(void *)(v9 + 96) = v58;
    uint64_t v59 = sub_10017C984();
    *(_OWORD *)(v59 + 16) = v93;
    sub_10031F6A8(v2, v59 + v44, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 104) = sub_1001F24CC(v59);
    *(void *)(v9 + 112) = v60;
    *(void *)(v9 + 120) = v61;
    uint64_t v62 = (__n128 *)swift_allocObject();
    uint64_t v63 = (char *)sub_100183900(v62, (__n128)xmmword_100C25ED0) + v44;
    uint64_t v64 = *(void *)(a1 + 16);
    sub_10031F6A8(v64 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v63, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v64 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v63[v91], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 128) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v9 + 136) = v65;
    *(void *)(v9 + 144) = v66;
    uint64_t v67 = (__n128 *)swift_allocObject();
    sub_10017A334(v67);
    uint64_t v69 = v68 + v44;
    uint64_t v70 = *(void *)(v92 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v70 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v69 + v91, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 152) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v9 + 160) = v71;
    *(void *)(v9 + 168) = v72;
    uint64_t v73 = (__n128 *)swift_allocObject();
    sub_10017A334(v73);
    uint64_t v75 = v74 + v44;
    uint64_t v76 = *(void *)(v92 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v76 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v75 + v91, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 176) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v9 + 184) = v77;
    *(void *)(v9 + 192) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    sub_10017A334(v79);
    uint64_t v81 = v80 + v44;
    uint64_t v82 = *(void *)(v92 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v81 + v91, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 200) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v9 + 208) = v83;
    *(void *)(v9 + 216) = v84;
    uint64_t v85 = swift_allocObject();
    *(_OWORD *)(v85 + 16) = v93;
    uint64_t v86 = *(void *)(v92 + 16);
    sub_10031F6A8(v86 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v85 + v44, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v86 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v85 + v44 + v91, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 224) = sub_1001F24CC(v85);
    *(void *)(v9 + 232) = v87;
    *(void *)(v9 + 240) = v88;
    sub_10031F75C(v90, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v9;
}

uint64_t sub_100AE0CAC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = type metadata accessor for LocationViewComponent();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10008B8C0();
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v25 - v19;
  uint64_t v21 = swift_retain();
  sub_1006E2E94(v21, a2);
  uint64_t v26 = v22;
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_map, v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v2);
  sub_10031F75C(v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v5);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_nextHourPrecipitation, v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v2);
  sub_10031F75C(v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10006DF38((uint64_t)v20, (uint64_t)v18, &qword_100E64E80);
  sub_10031F6A8((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  type metadata accessor for NoAqiNhpContent._Storage(0);
  swift_allocObject();
  uint64_t v23 = sub_1002DC578(v26, (uint64_t)v18, (uint64_t)v9);
  sub_10031F75C((uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1001781AC((uint64_t)v20, &qword_100E64E80);
  return v23;
}

uint64_t *sub_100AE0F34(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CurrentWeather();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for WeatherDescription();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
    uint64_t v13 = &v9[v12];
    uint64_t v14 = &v10[v12];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_10017DF08(&qword_100E66CC8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t sub_100AE10FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (void *)(v9 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t sub_100AE1274(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (void *)(v9 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t sub_100AE1400(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  *(_OWORD *)(v8 + *(int *)(v11 + 20)) = *(_OWORD *)(v9 + *(int *)(v11 + 20));
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t sub_100AE156C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (uint64_t *)(v9 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[6];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_100AE16E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AE16FC);
}

uint64_t sub_100AE16FC(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66CA0);
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        uint64_t v8 = sub_10017DF08(&qword_100E66CC8);
        uint64_t v12 = a3[7];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100AE17C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AE17DC);
}

uint64_t sub_100AE17DC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66CA0);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        uint64_t v10 = sub_10017DF08(&qword_100E66CC8);
        uint64_t v14 = a4[7];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100AE18B0(uint64_t a1, uint64_t a2)
{
  if ((static CurrentWeather.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for UVIndexComponent() + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  if ((static WeatherDescription.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v8 = *(void *)(v5 + v7);
  uint64_t v9 = *(void *)(v5 + v7 + 8);
  uint64_t v10 = (void *)(v6 + v7);
  BOOL v11 = v8 == *v10 && v9 == v10[1];
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DayWeather();
  sub_100AE280C(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_100AE280C(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_100AE280C(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  if ((static Forecast.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for HourWeather();
  sub_100AE280C(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_100AE280C(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_100AE280C(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);

  return static Forecast.== infix(_:_:)();
}

uint64_t sub_100AE1B00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v35 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v32 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v34 = v6;
  uint64_t v41 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v37 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v36 = v9;
  uint64_t v38 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v39 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v42 = v16;
  uint64_t v44 = sub_10017DF08(&qword_100EB02B8);
  sub_100179C0C();
  uint64_t v40 = v17;
  __chkstk_darwin(v18);
  sub_10012B938();
  uint64_t v19 = type metadata accessor for UVIndexComponent();
  sub_100162E4C();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100AE26A0();
  uint64_t v43 = v2;
  uint64_t v23 = (uint64_t)v45;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v23) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v45 = a1;
  uint64_t v24 = v41;
  char v49 = 0;
  sub_100AE280C(&qword_100E7CDD8, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v22, v42, v13);
  char v48 = 1;
  sub_100AE280C(&qword_100EAE878, (void (*)(uint64_t))type metadata accessor for UVIndexComponentPreprocessedDataModel);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v31[1] = v13;
  uint64_t v42 = v19;
  sub_100AE26EC((uint64_t)v12, (uint64_t)&v22[*(int *)(v19 + 20)]);
  char v47 = 2;
  sub_1001246C8(&qword_100EA0C80, &qword_100E66CA0);
  uint64_t v25 = v36;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(&v22[*(int *)(v42 + 24)], v25, v24);
  char v46 = 3;
  sub_1001246C8(&qword_100EA0C78, &qword_100E66CC8);
  uint64_t v26 = v34;
  uint64_t v27 = v35;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v28 = sub_10019F790();
  v29(v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(&v22[*(int *)(v42 + 28)], v26, v27);
  sub_100AE2750((uint64_t)v22, v33);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v45);
  return sub_100AE27B4((uint64_t)v22, (void (*)(void))type metadata accessor for UVIndexComponent);
}

uint64_t sub_100AE2060(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CA1B90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x726F46796C696164 && a2 == 0xED00007473616365;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x6F46796C72756F68 && a2 == 0xEE00747361636572)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_100AE2278(char a1)
{
  unint64_t result = 0x57746E6572727563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x726F46796C696164;
      break;
    case 3:
      unint64_t result = 0x6F46796C72756F68;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AE2334(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB02C8);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100AE26A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CurrentWeather();
  sub_100AE280C(&qword_100E7CDF0, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  sub_1001A2968();
  if (!v1)
  {
    type metadata accessor for UVIndexComponent();
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    sub_100AE280C(&qword_100EAE8A0, (void (*)(uint64_t))type metadata accessor for UVIndexComponentPreprocessedDataModel);
    sub_1001A2968();
    sub_10017DF08(&qword_100E66CA0);
    sub_1001246C8(&qword_100EA0CA8, &qword_100E66CA0);
    sub_1001A2968();
    sub_10017DF08(&qword_100E66CC8);
    sub_1001246C8(&qword_100EA0CA0, &qword_100E66CC8);
    sub_1001A2968();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_100AE25C4()
{
  return sub_100AE2278(*v0);
}

uint64_t sub_100AE25CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AE2060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AE25F4(uint64_t a1)
{
  unint64_t v2 = sub_100AE26A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AE2630(uint64_t a1)
{
  unint64_t v2 = sub_100AE26A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AE266C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100AE1B00(a1, a2);
}

uint64_t sub_100AE2684(void *a1)
{
  return sub_100AE2334(a1);
}

unint64_t sub_100AE26A0()
{
  unint64_t result = qword_100EB02C0;
  if (!qword_100EB02C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB02C0);
  }
  return result;
}

uint64_t sub_100AE26EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AE2750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UVIndexComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AE27B4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100AE280C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UVIndexComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AE2920);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UVIndexComponent.CodingKeys()
{
  return &type metadata for UVIndexComponent.CodingKeys;
}

unint64_t sub_100AE295C()
{
  unint64_t result = qword_100EB02D0;
  if (!qword_100EB02D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB02D0);
  }
  return result;
}

unint64_t sub_100AE29AC()
{
  unint64_t result = qword_100EB02D8;
  if (!qword_100EB02D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB02D8);
  }
  return result;
}

unint64_t sub_100AE29FC()
{
  unint64_t result = qword_100EB02E0;
  if (!qword_100EB02E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB02E0);
  }
  return result;
}

void sub_100AE2A48(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ListLocationViewModel(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v20 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19)
  {
    uint64_t v17 = v2;
    uint64_t v18 = a2;
    unint64_t v10 = 0;
    while (v10 < *(void *)(a1 + 16))
    {
      sub_100AF5A4C();
      uint64_t v11 = LocationModel.id.getter();
      sub_100215FB4(v11, v12, a2);
      char v14 = v13;
      swift_bridgeObjectRelease();
      if (v14)
      {
        sub_100AF5680((uint64_t)v9, (void (*)(void))type metadata accessor for ListLocationViewModel);
      }
      else
      {
        sub_100AF5BA8();
        uint64_t v15 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F3910();
          uint64_t v15 = v21;
        }
        unint64_t v16 = v15[2];
        if (v16 >= v15[3] >> 1)
        {
          sub_1007F3910();
          uint64_t v15 = v21;
        }
        void v15[2] = v16 + 1;
        sub_100AF5BA8();
        a2 = v18;
      }
      if (v19 == ++v10) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void *sub_100AE2CB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1001EA6A0(0, v1, 0);
    uint64_t v3 = *(void *)(type metadata accessor for ListLocationViewModel(0) - 8);
    uint64_t v4 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      uint64_t v6 = LocationModel.id.getter();
      uint64_t v8 = v7;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1001EA6A0(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v6;
      v11[5] = v8;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100AE2DE8()
{
  sub_100AF3AD4();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t sub_100AE2E24()
{
  return EnvironmentValues.subscript.setter();
}

double sub_100AE2E60@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, long long *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, long long *a10)
{
  sub_10017DF08(&qword_100E64AF0);
  sub_10024D5E4((uint64_t)&unk_100E64AF8);
  *(void *)a8 = ObservedObject.init(wrappedValue:)();
  *(void *)(a8 + 8) = v16;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a2;
  *(void *)(a8 + 32) = a3;
  *(void *)(a8 + 40) = a4;
  *(void *)(a8 + 48) = a5;
  sub_1001262E4(a6, a8 + 56);
  *(void *)(a8 + 96) = a7;
  *(void *)(a8 + 104) = a9;
  sub_1001262E4(a10, a8 + 112);
  State.init(wrappedValue:)();
  double result = *(double *)&v20;
  *(_OWORD *)(a8 + 152) = v20;
  *(void *)(a8 + 168) = v21;
  return result;
}

uint64_t sub_100AE2F74@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.center.getter();
  a1[1] = v3;
  uint64_t v4 = sub_10017DF08(&qword_100EB03F0);
  return sub_100AE2FB8(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_100AE2FB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v211 = a2;
  uint64_t v210 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v210);
  uint64_t v209 = (char *)&v155 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v207 = *(void *)(v4 - 8);
  uint64_t v208 = v4;
  __chkstk_darwin(v4);
  uint64_t v206 = (char *)&v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WeatherActivity();
  __chkstk_darwin(v6 - 8);
  uint64_t v205 = (uint64_t)&v155 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchFieldPlacement.NavigationBarDrawerDisplayMode();
  uint64_t v169 = *(void *)(v8 - 8);
  uint64_t OpaqueTypeConformance2 = v8;
  __chkstk_darwin(v8);
  uint64_t v167 = (char *)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SearchFieldPlacement();
  uint64_t v174 = *(void *)(v10 - 8);
  uint64_t v175 = v10;
  __chkstk_darwin(v10);
  uint64_t v213 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EAA540);
  __chkstk_darwin(v12 - 8);
  uint64_t v163 = (uint64_t *)((char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10017DF08(&qword_100EB03F8);
  __chkstk_darwin(v14 - 8);
  uint64_t v162 = (uint64_t *)((char *)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10017DF08(&qword_100EB0400);
  __chkstk_darwin(v16 - 8);
  uint64_t v160 = (uint64_t *)((char *)&v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v179 = type metadata accessor for ListViewModel() - 8;
  __chkstk_darwin(v179);
  uint64_t v19 = (char *)&v155 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for ListView.ListContentView(0);
  __chkstk_darwin(v164);
  uint64_t v161 = (uint64_t)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100EB0408);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v165 = v21;
  uint64_t v166 = v22;
  __chkstk_darwin(v21);
  long long v212 = (char *)&v155 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100EB0410);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v171 = v24;
  uint64_t v172 = v25;
  __chkstk_darwin(v24);
  uint64_t v214 = (char *)&v155 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_10017DF08(&qword_100EB0418);
  uint64_t v178 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v168 = (char *)&v155 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100EB0420);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v183 = v28;
  uint64_t v184 = v29;
  __chkstk_darwin(v28);
  uint64_t v173 = (char *)&v155 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100EB0428);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v185 = v31;
  uint64_t v186 = v32;
  __chkstk_darwin(v31);
  uint64_t v177 = (char *)&v155 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_10017DF08(&qword_100EB0430);
  uint64_t v189 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v180 = (char *)&v155 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_10017DF08(&qword_100EB0438);
  uint64_t v192 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  uint64_t v181 = (char *)&v155 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_10017DF08(&qword_100EB0440) - 8;
  __chkstk_darwin(v190);
  uint64_t v188 = (char *)&v155 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = sub_10017DF08(&qword_100EB0448);
  __chkstk_darwin(v193);
  uint64_t v191 = (char *)&v155 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_10017DF08(&qword_100EB0450);
  uint64_t v203 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v195 = (char *)&v155 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10017DF08(&qword_100E79680);
  __chkstk_darwin(v39 - 8);
  uint64_t v196 = (char *)&v155 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10017DF08(&qword_100E79688);
  __chkstk_darwin(v41 - 8);
  uint64_t v198 = (char *)&v155 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_10017DF08(&qword_100EB0458) - 8;
  __chkstk_darwin(v202);
  uint64_t v204 = (uint64_t)&v155 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v197 = (char *)&v155 - v45;
  uint64_t v46 = type metadata accessor for ListView.ListBackgroundView(0);
  char v47 = (int *)(v46 - 8);
  __chkstk_darwin(v46);
  char v49 = (uint64_t *)((char *)&v155 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v50);
  uint64_t v199 = (char *)&v155 - v51;
  uint64_t v52 = a1[3];
  *char v49 = swift_getKeyPath();
  uint64_t v182 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = (char *)v49 + v47[7];
  *(void *)uint64_t v53 = swift_getKeyPath();
  v53[8] = 0;
  uint64_t v54 = v47[8];
  uint64_t v200 = v49;
  *(uint64_t *)((char *)v49 + v54) = v52;
  *(uint64_t *)((char *)v49 + v47[9]) = 0x3FC3333333333333;
  sub_100AF5BA8();
  swift_retain();
  swift_retain();
  uint64_t v159 = v19;
  sub_10024E490();
  swift_release();
  uint64_t v55 = a1[2];
  uint64_t v57 = a1[4];
  uint64_t v56 = a1[5];
  uint64_t v157 = a1[6];
  uint64_t v158 = v56;
  sub_1001E9994((uint64_t)(a1 + 7), (uint64_t)v218);
  *(void *)&long long v215 = a1;
  uint64_t v58 = a1[12];
  uint64_t v156 = a1[13];
  sub_1001E9994((uint64_t)(a1 + 14), (uint64_t)v217);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v60 = swift_getKeyPath();
  uint64_t v61 = v160;
  *uint64_t v160 = v60;
  sub_10017DF08(&qword_100E82B20);
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = swift_getKeyPath();
  uint64_t v63 = v162;
  uint64_t *v162 = v62;
  sub_10017DF08(&qword_100E82B28);
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = swift_getKeyPath();
  uint64_t v65 = v163;
  void *v163 = v64;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v154 = v55;
  uint64_t v66 = v161;
  sub_100AE473C(KeyPath, 0, (uint64_t)v61, (uint64_t)v63, (uint64_t)v65, (uint64_t)sub_1003236CC, 0, 0, v161, (uint64_t)v19, v154, v57, v158, v157, v218, v58, v156, v217);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v67 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v69 = v68;
  LOBYTE(v19) = v70 & 1;
  unint64_t v71 = sub_100231190((uint64_t)&unk_100EB0460);
  uint64_t v72 = v164;
  View.navigationTitle(_:)();
  sub_100191924(v67, v69, (char)v19);
  swift_bridgeObjectRelease();
  sub_100AF5680(v66, (void (*)(void))type metadata accessor for ListView.ListContentView);
  uint64_t v73 = *(void *)(v215 + 168);
  v217[0] = *(_OWORD *)(v215 + 152);
  *(void *)&v217[1] = v73;
  uint64_t v163 = (void *)sub_10017DF08(&qword_100EB0468);
  State.projectedValue.getter();
  uint64_t v161 = *((void *)&v218[1] + 1);
  uint64_t v162 = *(uint64_t **)&v218[1];
  uint64_t v74 = v167;
  static SearchFieldPlacement.NavigationBarDrawerDisplayMode.always.getter();
  static SearchFieldPlacement.navigationBarDrawer(displayMode:)();
  (*(void (**)(char *, uint64_t))(v169 + 8))(v74, OpaqueTypeConformance2);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v75 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v77 = v76;
  LOBYTE(v74) = v78 & 1;
  *(void *)&v218[0] = v72;
  *((void *)&v218[0] + 1) = v71;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v79 = v165;
  uint64_t v80 = v212;
  View.searchable(text:placement:prompt:)();
  sub_100191924(v75, v77, (char)v74);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v174 + 8))(v213, v175);
  uint64_t v81 = v79;
  (*(void (**)(char *, uint64_t))(v166 + 8))(v80, v79);
  uint64_t v82 = v215;
  uint64_t v83 = *(void *)(v215 + 168);
  v218[0] = *(_OWORD *)(v215 + 152);
  *(void *)&v218[1] = v83;
  State.wrappedValue.getter();
  uint64_t v84 = v82;
  sub_100AF56D8(v82, (uint64_t)v218);
  uint64_t v85 = swift_allocObject();
  memcpy((void *)(v85 + 16), v218, 0xB0uLL);
  *(void *)&v218[0] = v81;
  *((void *)&v218[0] + 1) = OpaqueTypeConformance2;
  uint64_t v86 = swift_getOpaqueTypeConformance2();
  uint64_t v87 = v168;
  uint64_t v88 = v171;
  uint64_t v89 = v214;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v90 = v88;
  (*(void (**)(char *, uint64_t))(v172 + 8))(v89, v88);
  swift_retain();
  uint64_t v91 = (uint64_t)v159;
  sub_10024E490();
  swift_release();
  uint64_t v92 = (uint64_t *)(v91 + *(int *)(v179 + 48));
  uint64_t v94 = *v92;
  uint64_t v93 = v92[1];
  swift_bridgeObjectRetain();
  sub_100AF5680(v91, (void (*)(void))type metadata accessor for ListViewModel);
  *(void *)&v217[0] = v94;
  *((void *)&v217[0] + 1) = v93;
  sub_100AF56D8(v84, (uint64_t)v218);
  uint64_t v95 = swift_allocObject();
  memcpy((void *)(v95 + 16), v218, 0xB0uLL);
  *(void *)&v218[0] = v90;
  *((void *)&v218[0] + 1) = &type metadata for String;
  *(void *)&v218[1] = v86;
  *((void *)&v218[1] + 1) = &protocol witness table for String;
  uint64_t v96 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = v173;
  uint64_t v98 = v176;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v178 + 8))(v87, v98);
  id v99 = [self currentDevice];
  [v99 userInterfaceIdiom];

  *(void *)&v218[0] = v98;
  *((void *)&v218[0] + 1) = &type metadata for String;
  *(void *)&v218[1] = v96;
  *((void *)&v218[1] + 1) = &protocol witness table for String;
  uint64_t v100 = swift_getOpaqueTypeConformance2();
  uint64_t v101 = v177;
  uint64_t v102 = v183;
  View.searchVibrancyEnabled(_:)();
  (*(void (**)(char *, uint64_t))(v184 + 8))(v97, v102);
  *(void *)&v218[0] = v102;
  *((void *)&v218[0] + 1) = v100;
  uint64_t v103 = swift_getOpaqueTypeConformance2();
  uint64_t v104 = v180;
  uint64_t v105 = v185;
  View.disableAutocorrection(_:)();
  (*(void (**)(char *, uint64_t))(v186 + 8))(v101, v105);
  uint64_t v106 = v215;
  sub_100AE4C90();
  uint64_t v216 = v106;
  *(void *)&v218[0] = v105;
  *((void *)&v218[0] + 1) = v103;
  swift_getOpaqueTypeConformance2();
  uint64_t v107 = v181;
  uint64_t v108 = v187;
  View.alert(isPresented:content:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v189 + 8))(v104, v108);
  sub_100AF56D8(v106, (uint64_t)v218);
  uint64_t v109 = swift_allocObject();
  memcpy((void *)(v109 + 16), v218, 0xB0uLL);
  sub_100AF56D8(v106, (uint64_t)v217);
  uint64_t v110 = swift_allocObject();
  memcpy((void *)(v110 + 16), v217, 0xB0uLL);
  uint64_t v111 = v192;
  uint64_t v112 = (uint64_t)v188;
  uint64_t v113 = v194;
  (*(void (**)(char *, char *, uint64_t))(v192 + 16))(v188, v107, v194);
  uint64_t v114 = v112 + *(int *)(v190 + 44);
  *(void *)uint64_t v114 = sub_100AF5734;
  *(void *)(v114 + 8) = v109;
  *(void *)(v114 + 16) = sub_100AF5740;
  *(void *)(v114 + 24) = v110;
  *(void *)(v114 + 32) = sub_10021D90C;
  *(void *)(v114 + 40) = 0;
  *(unsigned char *)(v114 + 48) = 0;
  (*(void (**)(char *, uint64_t))(v111 + 8))(v107, v113);
  uint64_t v115 = type metadata accessor for Location.Identifier();
  uint64_t v116 = v205;
  _s7Weather24LocationCompositionStateOwst_0(v205, 1, 2, v115);
  uint64_t v117 = v193;
  uint64_t v118 = (uint64_t)v191;
  sub_100AF5A4C();
  sub_1001E4B50(v112, v118, &qword_100EB0440);
  sub_100AF5680(v116, (void (*)(void))type metadata accessor for WeatherActivity);
  sub_100178200(v112, &qword_100EB0440);
  uint64_t v119 = v206;
  static AccessibilityChildBehavior.contain.getter();
  unint64_t v120 = sub_100AF5748();
  uint64_t v121 = v195;
  uint64_t v122 = v117;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v119, v208);
  sub_100178200(v118, &qword_100EB0448);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v123 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v125 = v124;
  LOBYTE(v107) = v126 & 1;
  *(void *)&v218[0] = v122;
  *((void *)&v218[0] + 1) = v120;
  swift_getOpaqueTypeConformance2();
  uint64_t v127 = (uint64_t)v196;
  uint64_t v128 = v201;
  View.accessibilityLabel(_:)();
  sub_100191924(v123, v125, (char)v107);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v203 + 8))(v121, v128);
  type metadata accessor for AutomationViewInfo(0);
  uint64_t v129 = (uint64_t)v209;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v130 = (uint64_t)v198;
  sub_10048D628(v129, v131, v132, v133, v134, v135, v136, v137, v155, v156, v157, v158, (uint64_t)v159, (uint64_t)v160, v161, (uint64_t)v162, (uint64_t)v163, v164, v165,
    v166);
  sub_100AF5680(v129, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_100178200(v127, &qword_100E79680);
  uint64_t v138 = static Alignment.center.getter();
  uint64_t v214 = v139;
  uint64_t v140 = (uint64_t)v197;
  uint64_t v141 = (uint64_t *)&v197[*(int *)(v202 + 44)];
  long long v215 = *(_OWORD *)(v215 + 96);
  *uint64_t v141 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  uint64_t v142 = type metadata accessor for ListView.VFXPlaybackCoordinatorView(0);
  uint64_t v143 = (uint64_t *)((char *)v141 + *(int *)(v142 + 20));
  swift_retain();
  swift_unknownObjectRetain();
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  sub_10024D5E4((uint64_t)&qword_100E64A08);
  uint64_t *v143 = ObservedObject.init(wrappedValue:)();
  v143[1] = v144;
  *(_OWORD *)((char *)v141 + *(int *)(v142 + 24)) = v215;
  uint64_t v145 = (uint64_t *)((char *)v141 + *(int *)(sub_10017DF08(&qword_100EB0480) + 36));
  uint64_t v146 = v214;
  *uint64_t v145 = v138;
  v145[1] = (uint64_t)v146;
  sub_100B08E7C(v130, v140, &qword_100E79688);
  uint64_t v147 = (uint64_t)v199;
  uint64_t v148 = (uint64_t)v200;
  sub_100AF5A4C();
  uint64_t v149 = v140;
  uint64_t v150 = v204;
  sub_1001E4B50(v140, v204, &qword_100EB0458);
  uint64_t v151 = v211;
  sub_100AF5A4C();
  uint64_t v152 = sub_10017DF08(&qword_100EB0488);
  sub_1001E4B50(v150, v151 + *(int *)(v152 + 48), &qword_100EB0458);
  sub_100178200(v149, &qword_100EB0458);
  sub_100AF5680(v147, (void (*)(void))type metadata accessor for ListView.ListBackgroundView);
  sub_100178200(v150, &qword_100EB0458);
  return sub_100AF5680(v148, (void (*)(void))type metadata accessor for ListView.ListBackgroundView);
}

uint64_t sub_100AE473C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long *a15, uint64_t a16, uint64_t a17, long long *a18)
{
  uint64_t v59 = a6;
  uint64_t v60 = a7;
  uint64_t v58 = a5;
  uint64_t v70 = a17;
  unint64_t v71 = a18;
  uint64_t v68 = a15;
  uint64_t v69 = a16;
  uint64_t v67 = a14;
  uint64_t v65 = a8;
  uint64_t v66 = a13;
  uint64_t v63 = a11;
  uint64_t v64 = a12;
  uint64_t v62 = a10;
  uint64_t v61 = type metadata accessor for ContentStatusBanner();
  __chkstk_darwin(v61);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t v26 = sub_10017DF08(&qword_100E85F58);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v57 - v30;
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  uint64_t v32 = (int *)type metadata accessor for ListView.ListContentView(0);
  sub_100B08E7C(a3, a9 + v32[5], &qword_100EB0400);
  sub_100B08E7C(a4, a9 + v32[6], &qword_100EB03F8);
  sub_100B08E7C(v58, a9 + v32[7], (uint64_t *)&unk_100EAA540);
  uint64_t v33 = (uint64_t *)(a9 + v32[8]);
  *uint64_t v33 = swift_getKeyPath();
  sub_10017DF08(&qword_100EAA740);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = type metadata accessor for ListLocationViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 1, 1, v34);
  sub_1001E4B50((uint64_t)v31, (uint64_t)v28, &qword_100E85F58);
  State.init(wrappedValue:)();
  sub_100178200((uint64_t)v31, &qword_100E85F58);
  uint64_t v35 = a9 + v32[10];
  LOBYTE(v72) = 0;
  State.init(wrappedValue:)();
  uint64_t v36 = *((void *)&v73 + 1);
  *(unsigned char *)uint64_t v35 = v73;
  *(void *)(v35 + 8) = v36;
  uint64_t v37 = a9 + v32[11];
  uint64_t v38 = v60;
  *(void *)uint64_t v37 = v59;
  *(void *)(v37 + 8) = v38;
  *(unsigned char *)(v37 + 16) = 0;
  uint64_t v39 = (void *)(a9 + v32[12]);
  uint64_t v72 = 0x3FECCCCCCCCCCCCDLL;
  State.init(wrappedValue:)();
  uint64_t v40 = *((void *)&v73 + 1);
  *uint64_t v39 = v73;
  v39[1] = v40;
  uint64_t v41 = (void *)(a9 + v32[13]);
  uint64_t v72 = 0;
  State.init(wrappedValue:)();
  uint64_t v42 = *((void *)&v73 + 1);
  *uint64_t v41 = v73;
  v41[1] = v42;
  uint64_t v43 = (uint64_t)&v25[*(int *)(v61 + 24)];
  Date.init()();
  uint64_t v44 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0(v43, 0, 1, v44);
  *uint64_t v25 = 1;
  *(_OWORD *)(v25 + 8) = xmmword_100C313A0;
  sub_100AF5A4C();
  State.init(wrappedValue:)();
  sub_100AF5680((uint64_t)v25, (void (*)(void))type metadata accessor for ContentStatusBanner);
  uint64_t v45 = a9 + v32[15];
  LOBYTE(v72) = 0;
  State.init(wrappedValue:)();
  uint64_t v46 = *((void *)&v73 + 1);
  *(unsigned char *)uint64_t v45 = v73;
  *(void *)(v45 + 8) = v46;
  uint64_t v47 = v32[16];
  uint64_t v72 = 0;
  sub_10017DF08(&qword_100EB0490);
  State.init(wrappedValue:)();
  *(_OWORD *)(a9 + v47) = v73;
  uint64_t v48 = a9 + v32[17];
  LOBYTE(v72) = 1;
  State.init(wrappedValue:)();
  uint64_t v49 = *((void *)&v73 + 1);
  *(unsigned char *)uint64_t v48 = v73;
  *(void *)(v48 + 8) = v49;
  *(void *)(a9 + v32[18]) = 0x406CC00000000000;
  *(void *)(a9 + v32[19]) = v65;
  sub_100AF5BA8();
  *(void *)(a9 + v32[21]) = v63;
  uint64_t v50 = (void *)(a9 + v32[22]);
  uint64_t v51 = v66;
  *uint64_t v50 = v64;
  v50[1] = v51;
  uint64_t v52 = v68;
  *(void *)(a9 + v32[23]) = v67;
  sub_1001262E4(v52, a9 + v32[24]);
  uint64_t v53 = (void *)(a9 + v32[25]);
  uint64_t v55 = v70;
  uint64_t v54 = v71;
  *uint64_t v53 = v69;
  v53[1] = v55;
  return sub_1001262E4(v54, a9 + v32[26]);
}

uint64_t sub_100AE4C0C(uint64_t a1, uint64_t a2)
{
  return sub_10078CD74(*(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_100AE4C34()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100AE4C90()
{
  sub_100AF56D8(v0, (uint64_t)v6);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = v1;
  v2[3] = &protocol witness table for MainActor;
  memcpy(v2 + 4, v6, 0xB0uLL);
  sub_100AF56D8(v0, (uint64_t)v6);
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = &protocol witness table for MainActor;
  memcpy(v4 + 4, v6, 0xB0uLL);
  Binding.init(get:set:)();
  return v6[0];
}

uint64_t sub_100AE4DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ListViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &__src[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  sub_10024E490();
  swift_release();
  int v7 = v6[10];
  sub_100AF5680((uint64_t)v6, (void (*)(void))type metadata accessor for ListViewModel);
  sub_100AF56D8(a1, (uint64_t)__src);
  uint64_t v8 = (char *)swift_allocObject();
  memcpy(v8 + 16, __src, 0xB0uLL);
  v8[192] = v7;
  sub_1003DCB10(v7 + 3, (uint64_t)LocationSearchEntityFromStringResolver.init(), 0, (char *)sub_100AF5AA4, v8, a2);
  return swift_release();
}

void sub_100AE4EE0(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_100AE4F08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListViewModel();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 32);
  swift_retain();
  sub_10024E490();
  swift_release();
  uint64_t v6 = sub_1001B1E64((void *)(v5 + 32), *(void *)(v5 + 56));
  sub_10040C528((uint64_t)v4, *v6);
  return sub_100AF5680((uint64_t)v4, (void (*)(void))type metadata accessor for ListViewModel);
}

uint64_t sub_100AE4FCC(uint64_t a1)
{
  return Tracker.transaction(block:)();
}

uint64_t sub_100AE5018@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v28 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E662F0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v29 = v1;
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v2);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v2);
  uint64_t v18 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_1001E4B50((uint64_t)v17, (uint64_t)v8, &qword_100E65ED8);
  sub_1001E4B50((uint64_t)v14, v18, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v2) != 1)
  {
    sub_1001E4B50((uint64_t)v8, (uint64_t)v11, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v2) != 1)
    {
      uint64_t v19 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v28, v18, v2);
      sub_100231190((uint64_t)&qword_100E65F28);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21(v19, v2);
      sub_100178200((uint64_t)v14, &qword_100E65ED8);
      sub_100178200((uint64_t)v17, &qword_100E65ED8);
      v21(v11, v2);
      sub_100178200((uint64_t)v8, &qword_100E65ED8);
      if (v20) {
        goto LABEL_8;
      }
LABEL_9:
      sub_100B02484(v32);
      goto LABEL_10;
    }
    sub_100178200((uint64_t)v14, &qword_100E65ED8);
    sub_100178200((uint64_t)v17, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
LABEL_6:
    sub_100178200((uint64_t)v8, &qword_100E662F0);
    goto LABEL_9;
  }
  sub_100178200((uint64_t)v14, &qword_100E65ED8);
  sub_100178200((uint64_t)v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v2) != 1) {
    goto LABEL_6;
  }
  sub_100178200((uint64_t)v8, &qword_100E65ED8);
LABEL_8:
  uint64_t v22 = static Alignment.center.getter();
  uint64_t v24 = v23;
  sub_100AE544C(v29, v31);
  char v25 = static Edge.Set.all.getter();
  v32[0] = v22;
  v32[1] = v24;
  memcpy(v33, v31, 0x91uLL);
  v33[145] = v25;
  LocationSearchEntityFromStringResolver.init()();
LABEL_10:
  sub_100B08E7C((uint64_t)v32, (uint64_t)v34, &qword_100EB09B8);
  return sub_100B08E7C((uint64_t)v34, v30, &qword_100EB09B8);
}

void *sub_100AE544C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for ListView.ListBackgroundView(0) + 20);
  uint64_t v4 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  sub_100195B7C(*(void *)v3, v5);
  sub_100149AE8();
  char v7 = v6;
  sub_10018F6D8(v4, v5);
  if (v7)
  {
    sub_100B024C0((uint64_t)v16);
    sub_100B08E7C((uint64_t)v16, (uint64_t)v12, &qword_100EB09C0);
    sub_10017DF08(&qword_100EB09C8);
    sub_10024D5E4((uint64_t)&unk_100EB09D0);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    swift_retain();
    sub_100294A70(__src);
    char v8 = static Edge.Set.all.getter();
    static Color.black.getter();
    uint64_t v9 = Color.opacity(_:)();
    swift_release();
    memcpy(v11, __src, sizeof(v11));
    memcpy(__dst, __src, 0x80uLL);
    __dst[128] = v8;
    memcpy(v14, __dst, 0x81uLL);
    sub_100294F34((uint64_t)__dst);
    swift_retain();
    sub_100294F34((uint64_t)__src);
    memcpy(v15, v11, 0x80uLL);
    v15[128] = v8;
    sub_100294FA4((uint64_t)v15);
    memcpy(v16, v14, sizeof(v16));
    uint64_t v17 = v9;
    sub_100B024B4((uint64_t)v16);
    sub_100B08E7C((uint64_t)v16, (uint64_t)v19, &qword_100EB09C0);
    sub_10017DF08(&qword_100EB09C8);
    sub_10024D5E4((uint64_t)&unk_100EB09D0);
    _ConditionalContent<>.init(storage:)();
    swift_release();
    sub_100294FA4((uint64_t)__src);
    memcpy(v19, v12, 0x91uLL);
  }
  return memcpy(a2, v19, 0x91uLL);
}

void sub_100AE56B8()
{
  off_100EB02E8 = &_swiftEmptySetSingleton;
}

uint64_t sub_100AE56CC()
{
  uint64_t v0 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  sub_100097814(v0, qword_100EB02F0);
  sub_1002102B0(v0, (uint64_t)qword_100EB02F0);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter();
  swift_release();
  SettingReader.read<A>(_:)();
  swift_release();

  return swift_release();
}

uint64_t sub_100AE5774()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E662F0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  char v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v23 - v15;
  type metadata accessor for ListView.ListContentView(0);
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1001E4B50((uint64_t)v16, (uint64_t)v7, &qword_100E65ED8);
  sub_1001E4B50((uint64_t)v13, v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v0) == 1)
  {
    sub_100178200((uint64_t)v13, &qword_100E65ED8);
    sub_100178200((uint64_t)v16, &qword_100E65ED8);
    int v18 = _s7Weather24LocationCompositionStateOwet_0(v17, 1, v0);
    if (v18 == 1) {
      uint64_t v19 = &qword_100E65ED8;
    }
    else {
      uint64_t v19 = &qword_100E662F0;
    }
    if (v18 == 1) {
      char v20 = -1;
    }
    else {
      char v20 = 0;
    }
  }
  else
  {
    sub_1001E4B50((uint64_t)v7, (uint64_t)v10, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
    {
      sub_100178200((uint64_t)v13, &qword_100E65ED8);
      sub_100178200((uint64_t)v16, &qword_100E65ED8);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
      char v20 = 0;
      uint64_t v19 = &qword_100E662F0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_100231190((uint64_t)&qword_100E65F28);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v1 + 8);
      v21(v3, v0);
      uint64_t v19 = &qword_100E65ED8;
      sub_100178200((uint64_t)v13, &qword_100E65ED8);
      sub_100178200((uint64_t)v16, &qword_100E65ED8);
      v21(v10, v0);
    }
  }
  sub_100178200((uint64_t)v7, v19);
  return v20 & 1;
}

uint64_t sub_100AE5B18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v87 = a1;
  uint64_t v86 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for ListViewModel();
  __chkstk_darwin(v102);
  long long v73 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ListView.ListContentView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v94 = v4 - 8;
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_10017DF08(&qword_100EB06E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t OpaqueTypeConformance2 = sub_10017DF08(&qword_100EB06E8) - 8;
  __chkstk_darwin(OpaqueTypeConformance2);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = (int *)sub_10017DF08(&qword_100EB06F0);
  __chkstk_darwin(v88);
  uint64_t v100 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10017DF08(&qword_100EB06F8);
  uint64_t v72 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v89 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10017DF08(&qword_100EB0700);
  uint64_t v75 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v91 = (ValueMetadata *)((char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v76 = sub_10017DF08(&qword_100EB0708);
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v90 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10017DF08(&qword_100EB0710);
  uint64_t v80 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v92 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10017DF08(&qword_100EB0718);
  uint64_t v82 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v93 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10017DF08(&qword_100EB0720);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v79 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v9 = static Alignment.center.getter();
  v9[1] = v19;
  uint64_t v20 = sub_10017DF08(&qword_100EB0728);
  sub_100AE6A30(v1, (uint64_t)v9 + *(int *)(v20 + 44));
  uint64_t v97 = v1;
  sub_100AF5A4C();
  uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v22 = (v21 + 16) & ~v21;
  uint64_t v96 = v21 | 7;
  uint64_t v23 = swift_allocObject();
  uint64_t v98 = v22;
  sub_100AF5BA8();
  sub_1001E4B50((uint64_t)v9, (uint64_t)v11, &qword_100EB06E0);
  uint64_t v24 = (uint64_t (**)())&v11[*(int *)(OpaqueTypeConformance2 + 44)];
  *uint64_t v24 = sub_100AFFF28;
  v24[1] = (uint64_t (*)())v23;
  v24[2] = 0;
  v24[3] = 0;
  sub_100178200((uint64_t)v9, &qword_100EB06E0);
  id v99 = type metadata accessor for ListView.ListContentView;
  sub_100AF5A4C();
  uint64_t v25 = v22 + v6;
  uint64_t v26 = swift_allocObject();
  uint64_t v95 = type metadata accessor for ListView.ListContentView;
  sub_100AF5BA8();
  uint64_t v27 = v100;
  sub_1001E4B50((uint64_t)v11, v100, &qword_100EB06E8);
  uint64_t v28 = (void *)(v27 + v88[9]);
  *uint64_t v28 = 0;
  v28[1] = 0;
  v28[2] = sub_100B00708;
  v28[3] = v26;
  sub_100178200((uint64_t)v11, &qword_100EB06E8);
  uint64_t v29 = v97;
  uint64_t v30 = *(void *)v97;
  LOBYTE(v26) = *(unsigned char *)(v97 + 8);
  sub_100195B7C(*(void *)v97, v26);
  sub_100149AE8();
  LOBYTE(v22) = v31;
  sub_10018F6D8(v30, v26);
  LOBYTE(v106) = v22 & 1;
  uint64_t v103 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AF5A4C();
  uint64_t v101 = v25;
  swift_allocObject();
  sub_100AF5BA8();
  unint64_t v32 = sub_100B017A8((uint64_t)&unk_100EB0730);
  uint64_t v33 = v88;
  uint64_t v34 = v100;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178200(v34, &qword_100EB06F0);
  uint64_t v100 = v29 + *(int *)(v94 + 88);
  uint64_t v35 = (uint64_t)v73;
  sub_100AF5A4C();
  sub_100AF5A4C();
  swift_allocObject();
  sub_100AF5BA8();
  uint64_t v106 = v33;
  uint64_t v107 = (ValueMetadata *)&type metadata for Bool;
  uint64_t v108 = (char *)v32;
  uint64_t v109 = &protocol witness table for Bool;
  uint64_t v88 = (int *)&opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v36 = sub_100231190((uint64_t)&unk_100EB0748);
  uint64_t v37 = v71;
  uint64_t v38 = v102;
  uint64_t v39 = v89;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100AF5680(v35, (void (*)(void))type metadata accessor for ListViewModel);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v37);
  LOBYTE(v104) = *(unsigned char *)(v100 + *(int *)(v38 + 72));
  sub_100AF5A4C();
  swift_allocObject();
  sub_100AF5BA8();
  uint64_t v106 = (int *)v37;
  uint64_t v107 = (ValueMetadata *)v38;
  uint64_t v108 = (char *)OpaqueTypeConformance2;
  uint64_t v109 = (void *)v36;
  uint64_t v89 = (char *)swift_getOpaqueTypeConformance2();
  unint64_t v40 = sub_100363444();
  uint64_t v41 = v74;
  uint64_t v42 = v91;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(ValueMetadata *, uint64_t))(v75 + 8))(v42, v41);
  uint64_t v43 = v100;
  uint64_t v104 = sub_1007FA09C();
  sub_100AF5A4C();
  swift_allocObject();
  sub_100AF5BA8();
  uint64_t v91 = (ValueMetadata *)sub_10017DF08(&qword_100EB0750);
  uint64_t v106 = (int *)v41;
  uint64_t v107 = &type metadata for LocationAuthorizationState;
  uint64_t v108 = v89;
  uint64_t v109 = (void *)v40;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  unint64_t v45 = sub_100B0096C();
  uint64_t v46 = v76;
  uint64_t v47 = v90;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v46);
  uint64_t v48 = v43 + *(int *)(v102 + 88);
  char v49 = *(unsigned char *)(v48 + 1);
  char v50 = *(unsigned char *)(v48 + 2);
  uint64_t v51 = *(void *)(v48 + 8);
  LOBYTE(v104) = *(unsigned char *)v48;
  BYTE1(v104) = v49;
  BYTE2(v104) = v50;
  uint64_t v105 = v51;
  sub_100AF5A4C();
  swift_allocObject();
  sub_100AF5BA8();
  swift_retain();
  uint64_t v106 = (int *)v46;
  uint64_t v107 = v91;
  uint64_t v108 = (char *)v44;
  uint64_t v109 = (void *)v45;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  unint64_t v53 = sub_100B00A64();
  uint64_t v54 = v92;
  uint64_t v55 = v78;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_release();
  uint64_t v56 = v54;
  uint64_t v57 = v55;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v56, v55);
  uint64_t v58 = v85;
  sub_1001E4B50(v100 + *(int *)(v102 + 80), v85, &qword_100E63A10);
  sub_100AF5A4C();
  swift_allocObject();
  sub_100AF5BA8();
  uint64_t v106 = (int *)v57;
  uint64_t v107 = &type metadata for ListTipGroupViewModel;
  uint64_t v108 = (char *)v52;
  uint64_t v109 = (void *)v53;
  swift_getOpaqueTypeConformance2();
  sub_1000D543C();
  uint64_t v59 = v79;
  uint64_t v60 = v81;
  uint64_t v61 = v93;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178200(v58, &qword_100E63A10);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v61, v60);
  type metadata accessor for LocationViewCollisionOptions();
  sub_100231190((uint64_t)&qword_100E6D0B8);
  uint64_t v62 = StateObject.wrappedValue.getter();
  uint64_t v63 = static ObservableObject.environmentStore.getter();
  uint64_t v64 = v83;
  uint64_t v65 = v87;
  uint64_t v66 = v84;
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v87, v59, v84);
  uint64_t v67 = (uint64_t *)(v65 + *(int *)(sub_10017DF08(&qword_100EB0770) + 36));
  *uint64_t v67 = v63;
  v67[1] = v62;
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v59, v66);
}

uint64_t sub_100AE6A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v35 = type metadata accessor for ListView.ListContentView(0);
  __chkstk_darwin(v35);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EB0788);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100EB0790);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EB0798);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = sub_10017DF08(&qword_100EB07A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v32 = (uint64_t)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v32 - v19;
  int IsSlow = DeviceIsSlow();
  sub_100AE6FB0((uint64_t)v9);
  if (IsSlow)
  {
    sub_1001E4B50((uint64_t)v9, (uint64_t)v12, &qword_100EB0790);
    *(_WORD *)&v12[*(int *)(v10 + 36)] = 0;
    sub_100178200((uint64_t)v9, &qword_100EB0790);
    sub_100B08E7C((uint64_t)v12, (uint64_t)v15, &qword_100EB0798);
    sub_1001E4B50((uint64_t)v15, (uint64_t)v7, &qword_100EB0798);
    swift_storeEnumTagMultiPayload();
    sub_100B00C48();
    sub_100B00CE8();
    _ConditionalContent<>.init(storage:)();
    uint64_t v22 = (uint64_t)v15;
    uint64_t v23 = &qword_100EB0798;
  }
  else
  {
    sub_1001E4B50((uint64_t)v9, (uint64_t)v7, &qword_100EB0790);
    swift_storeEnumTagMultiPayload();
    sub_100B00C48();
    sub_100B00CE8();
    _ConditionalContent<>.init(storage:)();
    uint64_t v22 = (uint64_t)v9;
    uint64_t v23 = &qword_100EB0790;
  }
  sub_100178200(v22, v23);
  uint64_t v24 = a1 + *(int *)(v35 + 80);
  LODWORD(v24) = *(unsigned __int8 *)(v24 + *(int *)(type metadata accessor for ListViewModel() + 48));
  sub_100AF5A4C();
  if (v24 != 1)
  {
    sub_100AF5680((uint64_t)v4, (void (*)(void))type metadata accessor for ListView.ListContentView);
    goto LABEL_11;
  }
  char v25 = sub_100AE5774();
  sub_100AF5680((uint64_t)v4, (void (*)(void))type metadata accessor for ListView.ListContentView);
  if ((v25 & 1) == 0)
  {
LABEL_11:
    memset(__dst, 0, sizeof(__dst));
    goto LABEL_12;
  }
  uint64_t v26 = sub_10017DF08(&qword_100E947A8);
  __src[10] = sub_100874AAC;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = v26;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_1001E4B50((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_100AE85EC;
    __src[2] = 0;
    uint64_t v28 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v28;
    memcpy(__dst, __src, sizeof(__dst));
LABEL_12:
    uint64_t v29 = v32;
    sub_1001E4B50((uint64_t)v20, v32, &qword_100EB07A0);
    sub_1001E4B50((uint64_t)__dst, (uint64_t)__src, &qword_100EB0840);
    uint64_t v30 = v33;
    sub_1001E4B50(v29, v33, &qword_100EB07A0);
    uint64_t v31 = sub_10017DF08(&qword_100EB0848);
    sub_1001E4B50((uint64_t)__src, v30 + *(int *)(v31 + 48), &qword_100EB0840);
    sub_100178200((uint64_t)__dst, &qword_100EB0840);
    sub_100178200((uint64_t)v20, &qword_100EB07A0);
    sub_100178200((uint64_t)__src, &qword_100EB0840);
    return sub_100178200(v29, &qword_100EB07A0);
  }
  __break(1u);
  return result;
}

uint64_t sub_100AE6FB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v160 = a1;
  uint64_t v113 = type metadata accessor for EditMode();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v111 = (char *)&v108 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100EB0850);
  __chkstk_darwin(v3 - 8);
  uint64_t v159 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ListPaddingAnchor();
  uint64_t v157 = *(void *)(v5 - 8);
  uint64_t v158 = v5;
  __chkstk_darwin(v5);
  uint64_t v156 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v153 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v109 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v143);
  uint64_t v154 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v9 - 8);
  uint64_t v110 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v146 = (char *)&v108 - v12;
  __chkstk_darwin(v13);
  uint64_t v147 = (char *)&v108 - v14;
  uint64_t v142 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v131 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for PlainListStyle();
  uint64_t v137 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v134 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ListView.ListContentView(0);
  uint64_t v132 = *(void *)(v17 - 8);
  uint64_t v130 = *(void *)(v132 + 64);
  __chkstk_darwin(v17);
  uint64_t v129 = (char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = type metadata accessor for AccessibilityActionKind();
  uint64_t v138 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  char v126 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for ScrollPosition();
  uint64_t v121 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v119 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v117 = (char *)&v108 - v22;
  uint64_t active = type metadata accessor for ScrollToActiveLocationModifier(0);
  uint64_t v24 = active - 8;
  __chkstk_darwin(active);
  uint64_t v26 = (uint64_t *)((char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = sub_10017DF08(&qword_100EB0820);
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v28 = (char *)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_10017DF08(&qword_100EB0810);
  __chkstk_darwin(v115);
  uint64_t v114 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100EB0800);
  __chkstk_darwin(v30 - 8);
  unint64_t v120 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_10017DF08(&qword_100EB07E8);
  __chkstk_darwin(v125);
  uint64_t v122 = (uint64_t)&v108 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_10017DF08(&qword_100EB07E0);
  uint64_t v128 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v124 = (char *)&v108 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_10017DF08(&qword_100EB07D8);
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v161 = (char *)&v108 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_10017DF08(&qword_100EB0858);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v162 = (char *)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_10017DF08(&qword_100EB07C8);
  __chkstk_darwin(v144);
  uint64_t v145 = (char *)&v108 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10017DF08(&qword_100EB0860);
  uint64_t v149 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v148 = (char *)&v108 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_10017DF08(&qword_100EB07C0);
  __chkstk_darwin(v152);
  uint64_t v151 = (char *)&v108 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100AEB9B4();
  uint64_t v170 = v39;
  uint64_t v171 = v40;
  uint64_t v172 = v41;
  uint64_t v164 = v1;
  uint64_t v42 = v1;
  sub_10017DF08(&qword_100EB0868);
  sub_1000D765C();
  sub_10024D5E4((uint64_t)&unk_100EB0870);
  List.init(selection:content:)();
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  sub_10024D5E4((uint64_t)&qword_100E64A08);
  *uint64_t v26 = ObservedObject.init(wrappedValue:)();
  v26[1] = v43;
  uint64_t v44 = (uint64_t *)((char *)v26 + *(int *)(v24 + 28));
  *uint64_t v44 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  unint64_t v45 = v117;
  ScrollPosition.init<A>(idType:)();
  uint64_t v46 = v121;
  uint64_t v47 = v123;
  (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v119, v45, v123);
  State.init(wrappedValue:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
  uint64_t v48 = v116;
  uint64_t v49 = (uint64_t)v114;
  uint64_t v50 = v118;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v114, v28, v118);
  sub_100AF5BA8();
  uint64_t v51 = v131;
  uint64_t v52 = v42;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v50);
  unint64_t v53 = v126;
  static AccessibilityActionKind.escape.getter();
  sub_100AF5A4C();
  swift_allocObject();
  sub_100AF5BA8();
  sub_100B01118();
  uint64_t v54 = (uint64_t)v120;
  View.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v53, v163);
  sub_100178200(v49, &qword_100EB0810);
  uint64_t v55 = static Animation.default.getter();
  uint64_t v132 = v17;
  uint64_t v56 = *(int *)(v17 + 80);
  uint64_t v163 = v52;
  uint64_t v138 = v52 + v56;
  LOBYTE(v50) = *(unsigned char *)(v52 + v56 + 9);
  uint64_t v57 = v122;
  sub_1001E4B50(v54, v122, &qword_100EB0800);
  uint64_t v58 = v125;
  uint64_t v59 = v57 + *(int *)(v125 + 36);
  *(void *)uint64_t v59 = v55;
  *(unsigned char *)(v59 + 8) = v50;
  sub_100178200(v54, &qword_100EB0800);
  uint64_t v60 = v134;
  PlainListStyle.init()();
  unint64_t v61 = sub_100B00FCC();
  uint64_t v62 = v124;
  uint64_t v63 = v58;
  uint64_t v64 = v136;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v60, v64);
  sub_100178200(v57, &qword_100EB07E8);
  static Color.clear.getter();
  uint64_t v165 = v63;
  uint64_t v166 = v64;
  unint64_t v167 = v61;
  uint64_t v168 = &protocol witness table for PlainListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v66 = v127;
  View.listBackground(_:)();
  swift_release();
  uint64_t v67 = v66;
  (*(void (**)(char *, uint64_t))(v128 + 8))(v62, v66);
  static ScrollIndicatorVisibility.never.getter();
  LOBYTE(v64) = static Axis.Set.vertical.getter();
  unsigned __int8 v68 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v64) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v68) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v69 = v155;
  uint64_t v70 = (uint64_t)v154;
  uint64_t v71 = v153;
  uint64_t v72 = (uint64_t)v146;
  uint64_t v165 = v67;
  uint64_t v166 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v73 = v135;
  uint64_t v74 = v161;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v51, v142);
  (*(void (**)(char *, uint64_t))(v133 + 8))(v74, v73);
  uint64_t v75 = (uint64_t)v147;
  sub_10019B2FC();
  (*(void (**)(uint64_t, void, uint64_t))(v71 + 104))(v72, enum case for UserInterfaceSizeClass.compact(_:), v69);
  _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v69);
  uint64_t v76 = v70 + *(int *)(v143 + 48);
  sub_1001E4B50(v75, v70, &qword_100E65ED8);
  sub_1001E4B50(v72, v76, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v70, 1, v69) == 1)
  {
    sub_100178200(v72, &qword_100E65ED8);
    sub_100178200(v75, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v76, 1, v69) == 1)
    {
      sub_100178200(v70, &qword_100E65ED8);
      uint64_t v77 = 0x4024000000000000;
      uint64_t v78 = v148;
      uint64_t v79 = (uint64_t)v145;
      uint64_t v80 = v144;
      goto LABEL_15;
    }
    goto LABEL_10;
  }
  uint64_t v81 = v110;
  sub_1001E4B50(v70, v110, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v76, 1, v69) == 1)
  {
    sub_100178200(v72, &qword_100E65ED8);
    sub_100178200(v75, &qword_100E65ED8);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v81, v69);
LABEL_10:
    sub_100178200(v70, &qword_100E662F0);
    uint64_t v79 = (uint64_t)v145;
    uint64_t v80 = v144;
LABEL_13:
    uint64_t v77 = 0x4030000000000000;
    goto LABEL_14;
  }
  uint64_t v82 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v109, v76, v69);
  sub_100231190((uint64_t)&qword_100E65F28);
  char v83 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v84 = *(void (**)(char *, uint64_t))(v71 + 8);
  v84(v82, v69);
  sub_100178200(v72, &qword_100E65ED8);
  sub_100178200(v75, &qword_100E65ED8);
  v84((char *)v81, v69);
  sub_100178200(v70, &qword_100E65ED8);
  uint64_t v79 = (uint64_t)v145;
  uint64_t v80 = v144;
  if ((v83 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v77 = 0x4024000000000000;
LABEL_14:
  uint64_t v78 = v148;
LABEL_15:
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v86 = v139;
  uint64_t v87 = v162;
  uint64_t v88 = v140;
  (*(void (**)(uint64_t, char *, uint64_t))(v139 + 16))(v79, v162, v140);
  uint64_t v89 = v79 + *(int *)(v80 + 36);
  *(void *)uint64_t v89 = KeyPath;
  *(void *)(v89 + 8) = v77;
  *(unsigned char *)(v89 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v88);
  LOBYTE(v88) = static Edge.Set.top.getter();
  unsigned __int8 v90 = static Edge.Set.trailing.getter();
  Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v88) {
    Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v90) {
    Edge.Set.init(rawValue:)();
  }
  if (DeviceIsSlow())
  {
    swift_beginAccess();
    sub_1008E5628();
  }
  uint64_t v91 = v138;
  uint64_t v92 = v156;
  static ListPaddingAnchor.safeArea.getter();
  sub_100B00E68();
  View.listPadding(_:_:anchor:)();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v92, v158);
  sub_100178200(v79, &qword_100EB07C8);
  uint64_t v93 = swift_getKeyPath();
  if (*(unsigned char *)(v91 + 8) == 1)
  {
    uint64_t v94 = v112;
    uint64_t v95 = v111;
    uint64_t v96 = v113;
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v111, enum case for EditMode.active(_:), v113);
    uint64_t v97 = (uint64_t)v159;
    static Binding.constant(_:)();
    (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v96);
    uint64_t v98 = 0;
  }
  else
  {
    uint64_t v98 = 1;
    uint64_t v97 = (uint64_t)v159;
  }
  uint64_t v99 = sub_10017DF08(&qword_100EB0878);
  _s7Weather24LocationCompositionStateOwst_0(v97, v98, 1, v99);
  uint64_t v100 = (uint64_t)v151;
  uint64_t v101 = (uint64_t *)&v151[*(int *)(v152 + 36)];
  uint64_t v102 = sub_10017DF08(&qword_100EB0838);
  sub_1001E4B50(v97, (uint64_t)v101 + *(int *)(v102 + 28), &qword_100EB0850);
  uint64_t *v101 = v93;
  uint64_t v103 = v149;
  uint64_t v104 = v150;
  (*(void (**)(uint64_t, char *, uint64_t))(v149 + 16))(v100, v78, v150);
  sub_100178200(v97, &qword_100EB0850);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v78, v104);
  uint64_t v105 = *(void *)v163;
  char v106 = *(unsigned char *)(v163 + 8);
  sub_100195B7C(*(void *)v163, v106);
  sub_100149AE8();
  sub_10018F6D8(v105, v106);
  sub_100B00D94();
  View.accessibilityHidden(_:)();
  return sub_100178200(v100, &qword_100EB07C0);
}

uint64_t sub_100AE85EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1003FF548(a2);
}

uint64_t sub_100AE8620(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DismissSearchAction();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  __chkstk_darwin(v2);
  uint64_t v55 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartSearchAction();
  uint64_t v53 = *(void *)(started - 8);
  __chkstk_darwin(started);
  uint64_t v52 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v65 = v5;
  __chkstk_darwin(v5);
  uint64_t v62 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for DispatchQoS();
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ListView.ListContentView(0);
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v59 + 64);
  __chkstk_darwin(v8);
  uint64_t v66 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v69 = (char *)&v52 - v11;
  __chkstk_darwin(v12);
  unsigned __int8 v68 = (char *)&v52 - v13;
  __chkstk_darwin(v14);
  uint64_t v58 = (char *)&v52 - v15;
  uint64_t v16 = type metadata accessor for ScenePhase();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v52 - v21;
  if (qword_100E62B28 != -1) {
    swift_once();
  }
  uint64_t v23 = Namespace.wrappedValue.getter();
  swift_beginAccess();
  sub_100027284(&v71, v23);
  swift_endAccess();
  uint64_t v24 = a1 + *(int *)(v8 + 80);
  uint64_t v25 = type metadata accessor for ListViewModel();
  sub_10078D214(*(void *)(v24 + *(int *)(v25 + 40)), *(void *)(v24 + *(int *)(v25 + 40) + 8));
  uint64_t v67 = v25;
  sub_100AE8F74(*(unsigned char *)(v24 + *(int *)(v25 + 72)));
  sub_1000F80DC();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for ScenePhase.active(_:), v16);
  char v26 = static ScenePhase.== infix(_:_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v27(v19, v16);
  v27(v22, v16);
  if (v26)
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v28 = (void *)static OS_dispatch_queue.main.getter();
    sub_100AF5A4C();
    uint64_t v29 = swift_allocObject();
    sub_100AF5BA8();
    aBlock[4] = sub_100B00C1C;
    aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    aBlock[3] = &unk_100E37508;
    uint64_t v30 = _Block_copy(aBlock);
    swift_release();
    uint64_t v31 = v60;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100231190((uint64_t)&qword_100EA0200);
    sub_10017DF08(&qword_100E75530);
    sub_10024D5E4((uint64_t)&qword_100EA0210);
    uint64_t v32 = v62;
    uint64_t v33 = v65;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v63);
  }
  uint64_t v34 = *(void *)a1;
  char v35 = *(unsigned char *)(a1 + 8);
  sub_100195B7C(*(void *)a1, v35);
  sub_100149AE8();
  char v37 = v36;
  sub_10018F6D8(v34, v35);
  uint64_t v38 = (uint64_t)v68;
  sub_100AF5A4C();
  if (v37)
  {
    sub_100AF5680(v38, (void (*)(void))type metadata accessor for ListView.ListContentView);
    uint64_t v39 = (uint64_t)v69;
    sub_100AF5A4C();
    uint64_t v40 = v67;
LABEL_10:
    sub_100AF5680(v39, (void (*)(void))type metadata accessor for ListView.ListContentView);
    goto LABEL_11;
  }
  uint64_t v40 = v67;
  int v41 = *(unsigned __int8 *)(v38 + *(int *)(v8 + 80) + *(int *)(v67 + 48));
  sub_100AF5680(v38, (void (*)(void))type metadata accessor for ListView.ListContentView);
  uint64_t v39 = (uint64_t)v69;
  sub_100AF5A4C();
  if (v41 != 1) {
    goto LABEL_10;
  }
  char v42 = *(unsigned char *)(v39 + *(int *)(v8 + 80) + *(int *)(v40 + 52));
  sub_100AF5680(v39, (void (*)(void))type metadata accessor for ListView.ListContentView);
  if ((v42 & 1) == 0)
  {
    uint64_t v43 = v52;
    sub_1005D27B0();
    StartSearchAction.callAsFunction()();
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v43, started);
  }
LABEL_11:
  uint64_t v45 = *(void *)a1;
  char v46 = *(unsigned char *)(a1 + 8);
  sub_100195B7C(*(void *)a1, v46);
  sub_100149AE8();
  char v48 = v47;
  sub_10018F6D8(v45, v46);
  uint64_t v49 = (uint64_t)v66;
  sub_100AF5A4C();
  if ((v48 & 1) == 0) {
    return sub_100AF5680(v49, (void (*)(void))type metadata accessor for ListView.ListContentView);
  }
  char v50 = *(unsigned char *)(v49 + *(int *)(v8 + 80) + *(int *)(v40 + 48));
  uint64_t result = sub_100AF5680(v49, (void (*)(void))type metadata accessor for ListView.ListContentView);
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = v55;
    sub_1005D27E4();
    DismissSearchAction.callAsFunction()();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v51, v57);
  }
  return result;
}

uint64_t sub_100AE8F74(char a1)
{
  uint64_t v2 = v1;
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        return result;
      }
      uint64_t v6 = v1 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 80);
      uint64_t v7 = sub_1007FA09C()[2];
      uint64_t result = swift_bridgeObjectRelease();
      if (v7) {
        return result;
      }
      uint64_t v8 = *(void *)v2;
      char v9 = *(unsigned char *)(v2 + 8);
      sub_100195B7C(*(void *)v2, v9);
      sub_100149AE8();
      char v11 = v10;
      uint64_t result = sub_10018F6D8(v8, v9);
      if (v11) {
        return result;
      }
      uint64_t result = type metadata accessor for ListViewModel();
      if (*(unsigned char *)(v6 + *(int *)(result + 76))) {
        return result;
      }
      if (LocationAuthorizationState.rawValue.getter(a1) == 0x6465696E6564 && v12 == 0xE600000000000000) {
        goto LABEL_20;
      }
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v14) {
        return sub_10078D2D0();
      }
      if (LocationAuthorizationState.rawValue.getter(a1) == 0x7463697274736572 && v15 == 0xEA00000000006465)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        return sub_10078D2D0();
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if (v17) {
        return sub_10078D2D0();
      }
      return result;
    default:
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100AE91F4(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for ListView.ListContentView(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v10 = (char *)&v30 - v9;
  uint64_t v11 = type metadata accessor for ContentStatusBanner();
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  char v14 = (char *)&v30 - v13;
  uint64_t v15 = a1 + v2[20];
  uint64_t v16 = v15 + *(int *)(type metadata accessor for ListViewModel() + 80);
  sub_1001E4B50(v16, (uint64_t)v10, &qword_100E63A10);
  sub_100AF5A4C();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_10017DF08(&qword_100E8EAB0);
    State.wrappedValue.getter();
    sub_100AF5680((uint64_t)v4, (void (*)(void))type metadata accessor for ListView.ListContentView);
    sub_100178200((uint64_t)v10, &qword_100E63A10);
  }
  else
  {
    sub_100AF5680((uint64_t)v4, (void (*)(void))type metadata accessor for ListView.ListContentView);
    sub_100AF5BA8();
  }
  sub_100AF5A4C();
  sub_10017DF08(&qword_100E8EAB0);
  State.wrappedValue.setter();
  sub_100AF5680((uint64_t)v14, (void (*)(void))type metadata accessor for ContentStatusBanner);
  sub_1001E4B50(v16, (uint64_t)v7, &qword_100E63A10);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v11);
  sub_100178200((uint64_t)v7, &qword_100E63A10);
  uint64_t v18 = (char *)(a1 + v2[15]);
  char v19 = *v18;
  uint64_t v20 = *((void *)v18 + 1);
  LOBYTE(v32) = v19;
  uint64_t v33 = v20;
  LOBYTE(v31) = v17 != 1;
  if (v17 == 1) {
    double v21 = 0.9;
  }
  else {
    double v21 = 1.0;
  }
  if (v17 == 1) {
    double v22 = 0.0;
  }
  else {
    double v22 = 1.0;
  }
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.setter();
  uint64_t v23 = (uint64_t *)(a1 + v2[12]);
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  double v31 = v21;
  uint64_t v32 = v24;
  uint64_t v33 = v25;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.setter();
  char v26 = (uint64_t *)(a1 + v2[13]);
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  double v31 = v22;
  uint64_t v32 = v27;
  uint64_t v33 = v28;
  return State.wrappedValue.setter();
}

uint64_t sub_100AE9594(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62B28 != -1) {
    swift_once();
  }
  type metadata accessor for ListView.ListContentView(0);
  Namespace.wrappedValue.getter();
  swift_beginAccess();
  sub_100A51E50();
  swift_endAccess();
  if (qword_100E62B30 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1002102B0(v2, (uint64_t)qword_100EB02F0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:), v2);
  LOBYTE(v6) = sub_10012F990(v6, (uint64_t)v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0 && !*((void *)off_100EB02E8 + 2))
  {
    uint64_t v8 = sub_100AE9780(a1);
    sub_100AE9BD4((uint64_t)v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100AE9780(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E85F58);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = type metadata accessor for ListLocationViewModel(0);
  uint64_t v30 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v27 = (char *)&v26 - v12;
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v26 - v15;
  double v31 = _swiftEmptyArrayStorage;
  uint64_t v17 = a1 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 80);
  uint64_t v28 = type metadata accessor for ListViewModel();
  uint64_t v29 = v17;
  sub_1001E4B50(v17 + *(int *)(v28 + 32), (uint64_t)v7, &qword_100E85F58);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_100178200((uint64_t)v7, &qword_100E85F58);
    uint64_t v18 = _swiftEmptyArrayStorage;
  }
  else
  {
    char v26 = v10;
    sub_100AF5BA8();
    sub_100AF5A4C();
    uint64_t v18 = (void *)sub_1007EA26C(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v20 = v18[2];
    unint64_t v19 = v18[3];
    if (v20 >= v19 >> 1) {
      uint64_t v18 = (void *)sub_1007EA26C(v19 > 1, v20 + 1, 1, (uint64_t)v18);
    }
    v18[2] = v20 + 1;
    sub_100AF5BA8();
    double v31 = v18;
    sub_100AF5680((uint64_t)v16, (void (*)(void))type metadata accessor for ListLocationViewModel);
  }
  sub_10017DF08(&qword_100EB0530);
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_100178200((uint64_t)v4, &qword_100E85F58);
  }
  else
  {
    uint64_t v21 = (uint64_t)v27;
    sub_100AF5BA8();
    sub_100AF5A4C();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = (void *)sub_1007EA26C(0, v18[2] + 1, 1, (uint64_t)v18);
    }
    unint64_t v23 = v18[2];
    unint64_t v22 = v18[3];
    if (v23 >= v22 >> 1) {
      uint64_t v18 = (void *)sub_1007EA26C(v22 > 1, v23 + 1, 1, (uint64_t)v18);
    }
    v18[2] = v23 + 1;
    sub_100AF5BA8();
    double v31 = v18;
    sub_100AF5680(v21, (void (*)(void))type metadata accessor for ListLocationViewModel);
  }
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_10037FF08(v24);
  return v31;
}

void sub_100AE9BD4(uint64_t a1)
{
  uint64_t v44 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v50 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v43 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for BackgroundAnimationData();
  uint64_t v48 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int v41 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100EB0780);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for VFXEffectViewID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v53 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v49 = (char *)v37 - v16;
  uint64_t v52 = type metadata accessor for ListLocationViewModel(0);
  __chkstk_darwin(v52);
  unint64_t v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    char v47 = v8;
    v37[1] = v1;
    uint64_t v21 = a1;
    uint64_t v22 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v51 = *(void *)(v17 + 72);
    char v46 = (uint64_t (**)(char *, uint64_t))(v6 + 88);
    int v45 = enum case for BackgroundAnimationKind.vfx(_:);
    uint64_t v39 = (void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v40 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v38 = (void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v48 = v13;
    unint64_t v23 = (void (**)(char *, char *, uint64_t))(v13 + 32);
    v37[0] = v21;
    swift_bridgeObjectRetain();
    uint64_t v24 = (char *)_swiftEmptyArrayStorage;
    uint64_t v50 = v5;
    while (1)
    {
      sub_100AF5A4C();
      if ((WeatherConditionBackgroundModel.canShowAnimatedBackground.getter() & 1) == 0) {
        goto LABEL_7;
      }
      uint64_t v25 = v47;
      WeatherConditionBackgroundModel.animationKind.getter();
      int v26 = (*v46)(v25, v5);
      if (v26 != v45) {
        break;
      }
      uint64_t v27 = v41;
      WeatherConditionBackgroundModel.animationData.getter();
      uint64_t v28 = v43;
      BackgroundAnimationData.options.getter();
      uint64_t v29 = v27;
      uint64_t v5 = v50;
      (*v39)(v29, v42);
      WeatherConditionBackgroundOptions.effectViewID.getter();
      (*v38)(v28, v44);
      uint64_t v30 = 0;
LABEL_8:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, v30, 1, v12);
      sub_100AF5680((uint64_t)v19, (void (*)(void))type metadata accessor for ListLocationViewModel);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12) == 1)
      {
        sub_100178200((uint64_t)v11, &qword_100EB0780);
      }
      else
      {
        double v31 = *v23;
        uint64_t v32 = v49;
        (*v23)(v49, v11, v12);
        v31(v53, v32, v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v24 = (char *)sub_1007EA358(0, *((void *)v24 + 2) + 1, 1, (uint64_t)v24);
        }
        unint64_t v34 = *((void *)v24 + 2);
        unint64_t v33 = *((void *)v24 + 3);
        uint64_t v35 = v48;
        if (v34 >= v33 >> 1)
        {
          uint64_t v36 = sub_1007EA358(v33 > 1, v34 + 1, 1, (uint64_t)v24);
          uint64_t v35 = v48;
          uint64_t v24 = (char *)v36;
        }
        *((void *)v24 + 2) = v34 + 1;
        v31(&v24[((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v34], v53, v12);
        uint64_t v5 = v50;
      }
      v22 += v51;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    (*v40)(v25, v5);
LABEL_7:
    uint64_t v30 = 1;
    goto LABEL_8;
  }
  uint64_t v24 = (char *)_swiftEmptyArrayStorage;
LABEL_18:
  if (*((void *)v24 + 2))
  {
    type metadata accessor for ListView.ListContentView(0);
    swift_getObjectType();
    dispatch thunk of WeatherConditionBackgroundManagerType.addRemovalRequests(for:)();
    swift_bridgeObjectRelease();
    WeatherConditionBackgroundManagerType.executeRequests()();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100AEA208(uint64_t a1, char *a2)
{
  char v2 = *a2;
  type metadata accessor for ListView.ListContentView(0);
  type metadata accessor for ListViewModel();
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.setter();
  return sub_10078CFF4(v2);
}

uint64_t sub_100AEA2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a1;
  uint64_t v5 = type metadata accessor for DismissSearchAction();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  uint64_t v42 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t started = type metadata accessor for StartSearchAction();
  uint64_t v40 = *(void *)(started - 8);
  uint64_t v41 = started;
  __chkstk_darwin(started);
  uint64_t v39 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ListView.ListContentView(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for ListViewModel();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v46 = v9;
  uint64_t v18 = (char *)(a3 + *(int *)(v9 + 40));
  char v19 = *v18;
  uint64_t v20 = *((void *)v18 + 1);
  char v47 = *v18;
  uint64_t v48 = v20;
  sub_10017DF08(&qword_100E65950);
  uint64_t result = State.wrappedValue.getter();
  if ((v49 & 1) == 0)
  {
    uint64_t v22 = *(void *)a3;
    char v23 = *(unsigned char *)(a3 + 8);
    sub_100195B7C(*(void *)a3, v23);
    sub_100149AE8();
    char v25 = v24;
    sub_10018F6D8(v22, v23);
    sub_100AF5A4C();
    if (v25)
    {
      sub_100AF5680((uint64_t)v17, (void (*)(void))type metadata accessor for ListViewModel);
      sub_100AF5A4C();
    }
    else
    {
      int v26 = v17[v12[12]];
      sub_100AF5680((uint64_t)v17, (void (*)(void))type metadata accessor for ListViewModel);
      sub_100AF5A4C();
      if (v26 == 1)
      {
        char v27 = v11[*(int *)(v46 + 80) + v12[13]];
        sub_100AF5680((uint64_t)v11, (void (*)(void))type metadata accessor for ListView.ListContentView);
        if ((v27 & 1) == 0)
        {
          uint64_t v28 = v39;
          sub_1005D27B0();
          StartSearchAction.callAsFunction()();
          uint64_t v30 = v40;
          uint64_t v29 = v41;
          goto LABEL_13;
        }
LABEL_10:
        uint64_t v31 = *(void *)a3;
        char v32 = *(unsigned char *)(a3 + 8);
        sub_100195B7C(*(void *)a3, v32);
        sub_100149AE8();
        char v34 = v33;
        sub_10018F6D8(v31, v32);
        sub_100AF5A4C();
        if ((v34 & 1) == 0)
        {
          uint64_t result = sub_100AF5680((uint64_t)v14, (void (*)(void))type metadata accessor for ListViewModel);
          goto LABEL_15;
        }
        char v35 = v14[v12[12]];
        uint64_t result = sub_100AF5680((uint64_t)v14, (void (*)(void))type metadata accessor for ListViewModel);
        if (v35) {
          goto LABEL_15;
        }
        uint64_t v28 = v42;
        sub_1005D27E4();
        DismissSearchAction.callAsFunction()();
        uint64_t v30 = v43;
        uint64_t v29 = v44;
LABEL_13:
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v28, v29);
        goto LABEL_15;
      }
    }
    sub_100AF5680((uint64_t)v11, (void (*)(void))type metadata accessor for ListView.ListContentView);
    goto LABEL_10;
  }
  if (*(unsigned __int8 *)(a2 + v12[12]) != *(unsigned __int8 *)(v45 + v12[12]))
  {
    char v47 = v19;
    uint64_t v48 = v20;
    char v49 = 0;
    uint64_t result = State.wrappedValue.setter();
  }
LABEL_15:
  uint64_t v36 = (uint64_t *)(a2 + v12[11]);
  unint64_t v37 = v36[1];
  if (v37)
  {
    if (*(unsigned char *)(a2 + v12[12]) == 1) {
      return sub_10078CD74(*v36, v37);
    }
  }
  return result;
}

uint64_t sub_100AEA78C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a3 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 80);
  uint64_t result = type metadata accessor for ListViewModel();
  if ((*(unsigned char *)(v4 + *(int *)(result + 76)) & 1) == 0)
  {
    switch(v3)
    {
      case 1:
      case 2:
      case 3:
      case 4:
        char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v6 & 1) == 0)
        {
          sub_100AE8F74(v3);
          uint64_t result = sub_10078D2C8();
        }
        break;
      default:
        uint64_t result = swift_bridgeObjectRelease();
        break;
    }
  }
  return result;
}

uint64_t sub_100AEA908(uint64_t a1, uint64_t *a2)
{
  char v2 = sub_100AE2CB0(*a2);
  uint64_t v3 = sub_100012CD8((uint64_t)v2);
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_100AE2A48(v4, v3);
  if (*(void *)(v5 + 16)) {
    sub_100AE9BD4(v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100AEA980(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v4 = *a2;
  int v5 = a2[1];
  int v6 = a2[2];
  uint64_t v7 = *((void *)a2 + 1);
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1002102B0(v8, (uint64_t)qword_100F520D0);
  swift_retain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    int v17 = v5;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    uint64_t v18 = v12;
    swift_retain();
    uint64_t v13 = String.init<A>(describing:)();
    sub_10016414C(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "TipGroupViewModel changes: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    int v5 = v17;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (v5) {
    int v15 = 256;
  }
  else {
    int v15 = 0;
  }
  return sub_100AEAB9C(a3, v15 | v4 | (v6 << 16), v7);
}

uint64_t sub_100AEAB9C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  __int16 v4 = a2;
  unsigned int v6 = HIWORD(a2);
  uint64_t v7 = type metadata accessor for TipGroup.Priority();
  __n128 v8 = __chkstk_darwin(v7);
  (*(void (**)(unsigned char *, void, __n128))(v10 + 104))(&v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], enum case for TipGroup.Priority.firstAvailable(_:), v8);
  __int16 v14 = v4 & 0x1FF;
  char v15 = v6;
  uint64_t v16 = a3;
  type metadata accessor for TipGroup();
  swift_allocObject();
  uint64_t v11 = TipGroup.init(_:_:)();
  long long v18 = *(_OWORD *)(a1 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 64));
  uint64_t v17 = v11;
  sub_10017DF08(&qword_100EB0778);
  return State.wrappedValue.setter();
}

uint64_t sub_100AEACFC(unsigned int a1)
{
  unsigned int v1 = HIWORD(a1);
  int v5 = &type metadata for NotificationsOptInListTip;
  unint64_t v6 = sub_10023A914();
  v4[0] = v1;
  static Tips.GroupBuilder.buildPartialBlock(first:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  int v5 = &type metadata for NotificationsResubscriptionListTip;
  unint64_t v6 = sub_10023ABB4();
  static Tips.GroupBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  int v5 = &type metadata for HomeAndWorkAddedTip;
  unint64_t v6 = sub_10023AC4C();
  static Tips.GroupBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  int v5 = &type metadata for HomeAndWorkUpdatedTip;
  unint64_t v6 = sub_10023AC00();
  static Tips.GroupBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  int v5 = &type metadata for HomeUpdatedTip;
  unint64_t v6 = sub_10023AB68();
  static Tips.GroupBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  int v5 = &type metadata for WorkUpdatedTip;
  unint64_t v6 = sub_10023AB1C();
  uint64_t v2 = static Tips.GroupBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  return v2;
}

uint64_t sub_100AEAE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ListView.ListContentView(0);
  uint64_t v21 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  static Animation.linear(duration:)();
  Transaction.init(animation:)();
  uint64_t v25 = a3;
  uint64_t v26 = a2;
  withTransaction<A>(_:_:)();
  swift_release();
  uint64_t v12 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0(a2, 1, v12) == 1)
  {
    uint64_t v13 = static Animation.timingCurve(_:_:_:_:duration:)();
    __chkstk_darwin(v13);
    *(&v21 - 2) = a3;
    withAnimation<A>(_:_:)();
    swift_release();
    uint64_t v14 = static Animation.timingCurve(_:_:_:_:duration:)();
    __chkstk_darwin(v14);
    *(&v21 - 2) = a3;
    withAnimation<A>(_:_:)();
    swift_release();
    if (qword_100E62340 != -1) {
      swift_once();
    }
    uint64_t v15 = Animation.delay(_:)();
    __chkstk_darwin(v15);
    *(&v21 - 2) = a3;
    withAnimation<A>(_:_:)();
    return swift_release();
  }
  else
  {
    if (qword_100E62338 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v17 = Transaction.init(animation:)();
    __chkstk_darwin(v17);
    *(&v21 - 2) = a3;
    withTransaction<A>(_:_:)();
    swift_release();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    long long v18 = (void *)static OS_dispatch_queue.main.getter();
    sub_100AF5A4C();
    uint64_t v19 = swift_allocObject();
    sub_100AF5BA8();
    aBlock[4] = sub_100B00B84;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    aBlock[3] = &unk_100E374B8;
    uint64_t v20 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100231190((uint64_t)&qword_100EA0200);
    sub_10017DF08(&qword_100E75530);
    sub_10024D5E4((uint64_t)&qword_100EA0210);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v10, v23);
  }
}

uint64_t sub_100AEB494(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ListView.ListContentView(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ContentStatusBanner();
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v14 - v11;
  sub_1001E4B50(a2, (uint64_t)v8, &qword_100E63A10);
  sub_100AF5A4C();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_10017DF08(&qword_100E8EAB0);
    State.wrappedValue.getter();
    sub_100AF5680((uint64_t)v5, (void (*)(void))type metadata accessor for ListView.ListContentView);
    sub_100178200((uint64_t)v8, &qword_100E63A10);
  }
  else
  {
    sub_100AF5680((uint64_t)v5, (void (*)(void))type metadata accessor for ListView.ListContentView);
    sub_100AF5BA8();
  }
  sub_100AF5A4C();
  sub_10017DF08(&qword_100E8EAB0);
  State.wrappedValue.setter();
  return sub_100AF5680((uint64_t)v12, (void (*)(void))type metadata accessor for ContentStatusBanner);
}

uint64_t sub_100AEB714()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100AEB790()
{
  if (qword_100E62338 != -1) {
    swift_once();
  }
  uint64_t v0 = Animation.delay(_:)();
  __chkstk_darwin(v0);
  withAnimation<A>(_:_:)();
  swift_release();
  static Animation.timingCurve(_:_:_:_:duration:)();
  Animation.delay(_:)();
  uint64_t v1 = swift_release();
  __chkstk_darwin(v1);
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t sub_100AEB904()
{
  uint64_t v0 = sub_10017F1F4();
  sub_10018A164(*(int *)(v0 + 48));
  sub_10017DF08(&qword_100E64490);
  return State.wrappedValue.setter();
}

uint64_t sub_100AEB95C()
{
  uint64_t v0 = sub_10017F1F4();
  sub_10018A164(*(int *)(v0 + 52));
  sub_10017DF08(&qword_100E64490);
  return State.wrappedValue.setter();
}

uint64_t sub_100AEB9B4()
{
  uint64_t v0 = type metadata accessor for ListView.ListContentView(0);
  __chkstk_darwin(v0 - 8);
  sub_100AF5A4C();
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = &protocol witness table for MainActor;
  sub_100AF5BA8();
  sub_100AF5A4C();
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = &protocol witness table for MainActor;
  sub_100AF5BA8();
  sub_10017DF08(&qword_100EB09A8);
  Binding.init(get:set:)();
  return v6;
}

uint64_t sub_100AEBB94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Location.Identifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ListView.ListContentView(0);
  sub_1001362A4();
  sub_100B08E7C((uint64_t)v7, (uint64_t)v4, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    uint64_t result = sub_100178200((uint64_t)v4, &qword_100E6DC08);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v4, v8);
    uint64_t v13 = Location.Identifier.id.getter();
    uint64_t v14 = v15;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *a1 = v13;
  a1[1] = v14;
  return result;
}

uint64_t sub_100AEBD84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v37 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E85F58);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for ListLocationViewModel(0);
  uint64_t v11 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v38 = (char *)&v32 - v15;
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v35 = type metadata accessor for ListView.ListContentView(0);
  long long v18 = sub_1007FA09C();
  uint64_t v19 = v18[2];
  if (!v19)
  {
    uint64_t v26 = 1;
    goto LABEL_17;
  }
  uint64_t v33 = v6;
  uint64_t v34 = a4;
  uint64_t v20 = (char *)v18 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v21 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_100AF5A4C();
    uint64_t v22 = LocationModel.id.getter();
    if (!v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (v22 == v16 && v17 == v23) {
      break;
    }
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_15;
    }
LABEL_11:
    sub_100AF5680((uint64_t)v13, (void (*)(void))type metadata accessor for ListLocationViewModel);
    v20 += v21;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = 1;
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  sub_100AF5BA8();
  uint64_t v26 = 0;
LABEL_16:
  uint64_t v6 = v33;
LABEL_17:
  uint64_t v27 = v39;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, v26, 1, v39);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v27) == 1) {
    return sub_100178200((uint64_t)v10, &qword_100E85F58);
  }
  uint64_t v29 = (uint64_t)v38;
  sub_100AF5BA8();
  if ((*(unsigned char *)(v29 + *(int *)(v27 + 84)) & 1) == 0)
  {
    static os_signpost_type_t.event.getter();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
    uint64_t v30 = (void *)OS_os_log.init(subsystem:category:)();
    uint64_t v31 = v36;
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:)();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v6);
    sub_10078BE4C(v29, 0, 1);
  }
  return sub_100AF5680(v29, (void (*)(void))type metadata accessor for ListLocationViewModel);
}

uint64_t sub_100AEC1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v177 = a2;
  uint64_t v145 = type metadata accessor for PlainButtonStyle();
  uint64_t v143 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v141 = (char *)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100EB0880);
  __chkstk_darwin(v4 - 8);
  uint64_t v138 = (uint64_t *)((char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v139 = sub_10017DF08(&qword_100EB0888);
  __chkstk_darwin(v139);
  uint64_t v140 = (uint64_t)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10017DF08(&qword_100EB0890);
  uint64_t v149 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v152 = (char *)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_10017DF08(&qword_100EB0898);
  __chkstk_darwin(v148);
  uint64_t v146 = (char *)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_10017DF08(&qword_100EB08A0);
  uint64_t v147 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v144 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v142 = (char *)&v135 - v11;
  uint64_t v172 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v170 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v136 = (char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v167);
  uint64_t v171 = (uint64_t)&v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v14 - 8);
  uint64_t v151 = (uint64_t)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v168 = (char *)&v135 - v17;
  __chkstk_darwin(v18);
  uint64_t v169 = (char *)&v135 - v19;
  uint64_t v20 = sub_10017DF08(&qword_100EB08A8);
  __chkstk_darwin(v20 - 8);
  uint64_t v175 = (uint64_t)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v178 = (char *)&v135 - v23;
  uint64_t v164 = sub_10017DF08(&qword_100EB08B0);
  __chkstk_darwin(v164);
  uint64_t v165 = (char *)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ListView.ListContentView(0);
  uint64_t v156 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v157 = v26;
  uint64_t v166 = (char *)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10017DF08(&qword_100EB08B8);
  uint64_t v160 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v159 = (char *)&v135 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_10017DF08(&qword_100EB08C0);
  __chkstk_darwin(v158);
  uint64_t v163 = (uint64_t)&v135 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_10017DF08(&qword_100EB08C8);
  __chkstk_darwin(v162);
  uint64_t v181 = (uint64_t)&v135 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v180 = (uint64_t)&v135 - v31;
  uint64_t v137 = type metadata accessor for ListViewTipStyleModifier(0);
  __chkstk_darwin(v137);
  uint64_t v33 = (char *)&v135 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v154 = (char *)&v135 - v35;
  uint64_t v36 = sub_10017DF08(&qword_100EB08D0);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v135 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v153 = (uint64_t (*)(uint64_t))((char *)&v135 - v40);
  uint64_t v41 = sub_10017DF08(&qword_100EB08D8);
  __chkstk_darwin(v41 - 8);
  uint64_t v174 = (uint64_t)&v135 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v135 - v44;
  uint64_t v46 = sub_10017DF08(&qword_100EB08E0);
  __chkstk_darwin(v46 - 8);
  uint64_t v173 = (uint64_t)&v135 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)&v135 - v49;
  uint64_t v51 = (int *)v25;
  uint64_t v52 = (char *)(a1 + *(int *)(v25 + 60));
  char v53 = *v52;
  uint64_t v54 = *((void *)v52 + 1);
  LOBYTE(v185) = v53;
  *((void *)&v185 + 1) = v54;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  if (v184 == 1)
  {
    sub_100AED7E0((uint64_t)v50);
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = 1;
  }
  uint64_t v56 = sub_10017DF08(&qword_100EB08E8);
  uint64_t v182 = v50;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, v55, 1, v56);
  long long v185 = *(_OWORD *)(a1 + v51[16]);
  sub_10017DF08(&qword_100EB0778);
  State.wrappedValue.getter();
  uint64_t v57 = v184;
  uint64_t v183 = a1;
  uint64_t v179 = v45;
  if (v184)
  {
    uint64_t v58 = (char *)(a1 + v51[17]);
    char v59 = *v58;
    uint64_t v60 = *((void *)v58 + 1);
    LOBYTE(v185) = v59;
    *((void *)&v185 + 1) = v60;
    State.wrappedValue.getter();
    uint64_t v61 = v51;
    if (v184 == 1)
    {
      uint64_t v62 = a1 + v51[20];
      char v63 = *(unsigned char *)(v62 + *(int *)(type metadata accessor for ListViewModel() + 88));
      if (*(unsigned char *)(v62 + 8)) {
        uint64_t v64 = 0x4034000000000000;
      }
      else {
        uint64_t v64 = 0;
      }
      uint64_t v65 = v137;
      uint64_t v66 = (uint64_t *)&v33[*(int *)(v137 + 28)];
      long long v135 = *(_OWORD *)(v183 + v51[22]);
      *uint64_t v66 = swift_getKeyPath();
      sub_10017DF08((uint64_t *)&unk_100EAA560);
      swift_storeEnumTagMultiPayload();
      uint64_t v67 = &v33[*(int *)(v65 + 32)];
      *(void *)uint64_t v67 = swift_getKeyPath();
      v67[8] = 0;
      *(void *)uint64_t v33 = 0x4034000000000000;
      a1 = v183;
      v33[8] = 0;
      *((void *)v33 + 2) = v64;
      uint64_t v45 = v179;
      v33[24] = 0;
      *((void *)v33 + 4) = 0;
      v33[40] = 0;
      uint64_t v68 = (uint64_t)v154;
      sub_100AF5BA8();
      sub_100AF5A4C();
      *uint64_t v38 = v63;
      uint64_t v61 = v51;
      *(_OWORD *)(v38 + 8) = v135;
      *((void *)v38 + 3) = v57;
      swift_unknownObjectRetain();
      sub_100AF5680(v68, (void (*)(void))type metadata accessor for ListViewTipStyleModifier);
      uint64_t v69 = v153;
      sub_100B08E7C((uint64_t)v38, (uint64_t)v153, &qword_100EB08D0);
      sub_100B08E7C((uint64_t)v69, (uint64_t)v45, &qword_100EB08D0);
      uint64_t v70 = 0;
    }
    else
    {
      swift_release();
      uint64_t v70 = 1;
    }
  }
  else
  {
    uint64_t v70 = 1;
    uint64_t v61 = v51;
  }
  uint64_t v155 = v61;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, v70, 1, v36);
  uint64_t v137 = a1 + v61[20];
  *(void *)&long long v185 = sub_1007FA09C();
  sub_100AF5A4C();
  uint64_t v71 = *(unsigned __int8 *)(v156 + 80);
  uint64_t v72 = (char *)(((v71 + 16) & ~v71) + v157);
  uint64_t v156 = (v71 + 16) & ~v71;
  uint64_t v157 = v71 | 7;
  uint64_t v154 = v72;
  swift_allocObject();
  uint64_t v153 = type metadata accessor for ListView.ListContentView;
  sub_100AF5BA8();
  sub_10017DF08(&qword_100EB0750);
  type metadata accessor for ListRowView(0);
  sub_10024D5E4((uint64_t)&unk_100EB08F0);
  sub_100231190((uint64_t)&unk_100EB08F8);
  sub_100231190((uint64_t)&unk_100EB0900);
  uint64_t v73 = v159;
  ForEach<>.init(_:content:)();
  sub_100AF5A4C();
  uint64_t v74 = swift_allocObject();
  sub_100AF5BA8();
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = sub_100B01368;
  *(void *)(v75 + 24) = v74;
  uint64_t v76 = v160;
  uint64_t v77 = (uint64_t)v165;
  uint64_t v78 = v161;
  (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v165, v73, v161);
  uint64_t v79 = (void *)(v77 + *(int *)(v164 + 36));
  *uint64_t v79 = sub_100B013F0;
  v79[1] = v75;
  uint64_t v80 = v163;
  sub_1001E4B50(v77, v163, &qword_100EB08B0);
  *(unsigned char *)(v80 + *(int *)(v158 + 36)) = 1;
  uint64_t v81 = v183;
  sub_100178200(v77, &qword_100EB08B0);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v73, v78);
  sub_100AF5A4C();
  uint64_t v82 = swift_allocObject();
  sub_100AF5BA8();
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = sub_100B01420;
  *(void *)(v83 + 24) = v82;
  uint64_t v84 = v181;
  sub_1001E4B50(v80, v181, &qword_100EB08C0);
  uint64_t v85 = (uint64_t (**)())(v84 + *(int *)(v162 + 36));
  *uint64_t v85 = sub_100230FBC;
  v85[1] = (uint64_t (*)())v83;
  sub_100178200(v80, &qword_100EB08C0);
  sub_100B08E7C(v84, v180, &qword_100EB08C8);
  uint64_t v86 = (uint64_t)v169;
  sub_10019B2FC();
  uint64_t v87 = v170;
  uint64_t v88 = (uint64_t)v168;
  uint64_t v89 = v172;
  (*(void (**)(char *, void, uint64_t))(v170 + 104))(v168, enum case for UserInterfaceSizeClass.compact(_:), v172);
  _s7Weather24LocationCompositionStateOwst_0(v88, 0, 1, v89);
  uint64_t v90 = v171;
  uint64_t v91 = v171 + *(int *)(v167 + 48);
  sub_1001E4B50(v86, v171, &qword_100E65ED8);
  sub_1001E4B50(v88, v91, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v90, 1, v89) == 1)
  {
    sub_100178200(v88, &qword_100E65ED8);
    sub_100178200(v86, &qword_100E65ED8);
    int v92 = _s7Weather24LocationCompositionStateOwet_0(v91, 1, v89);
    uint64_t v93 = (uint64_t)v178;
    uint64_t v94 = (uint64_t)v182;
    if (v92 == 1)
    {
      sub_100178200(v90, &qword_100E65ED8);
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v95 = v151;
    sub_1001E4B50(v90, v151, &qword_100E65ED8);
    int v96 = _s7Weather24LocationCompositionStateOwet_0(v91, 1, v89);
    uint64_t v93 = (uint64_t)v178;
    if (v96 != 1)
    {
      uint64_t v99 = v136;
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v136, v91, v89);
      sub_100231190((uint64_t)&qword_100E65F28);
      LODWORD(v167) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v100 = *(void (**)(char *, uint64_t))(v87 + 8);
      uint64_t v101 = v99;
      uint64_t v93 = (uint64_t)v178;
      v100(v101, v89);
      sub_100178200(v88, &qword_100E65ED8);
      sub_100178200(v86, &qword_100E65ED8);
      v100((char *)v95, v89);
      sub_100178200(v90, &qword_100E65ED8);
      if ((v167 & 1) == 0)
      {
        uint64_t v97 = 1;
        uint64_t v98 = v176;
LABEL_23:
        uint64_t v94 = (uint64_t)v182;
        goto LABEL_24;
      }
LABEL_19:
      uint64_t v102 = static VerticalAlignment.center.getter();
      uint64_t v103 = (uint64_t)v138;
      *uint64_t v138 = v102;
      *(void *)(v103 + 8) = 0;
      *(unsigned char *)(v103 + 16) = 1;
      uint64_t v104 = sub_10017DF08(&qword_100EB0910);
      sub_100AEECF8(v81, v103 + *(int *)(v104 + 44));
      *(void *)&long long v185 = static Color.clear.getter();
      swift_retain();
      uint64_t v105 = AnyView.init<A>(_:)();
      uint64_t v106 = v140;
      sub_1001E4B50(v103, v140, &qword_100EB0880);
      swift_release();
      *(void *)(v106 + *(int *)(v139 + 36)) = v105;
      sub_100178200(v103, &qword_100EB0880);
      uint64_t v107 = v141;
      PlainButtonStyle.init()();
      sub_100B01470();
      sub_100231190((uint64_t)&qword_100E70FB8);
      uint64_t v108 = v145;
      View.buttonStyle<A>(_:)();
      (*(void (**)(char *, uint64_t))(v143 + 8))(v107, v108);
      sub_100178200(v106, &qword_100EB0888);
      LOBYTE(v105) = static Edge.Set.trailing.getter();
      char v109 = Edge.Set.init(rawValue:)();
      Edge.Set.init(rawValue:)();
      if (Edge.Set.init(rawValue:)() != v105) {
        char v109 = Edge.Set.init(rawValue:)();
      }
      EdgeInsets.init(_all:)();
      uint64_t v111 = v110;
      uint64_t v113 = v112;
      uint64_t v115 = v114;
      uint64_t v117 = v116;
      uint64_t v118 = v149;
      uint64_t v119 = (uint64_t)v146;
      unint64_t v120 = v152;
      uint64_t v121 = v150;
      (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v146, v152, v150);
      uint64_t v122 = v119 + *(int *)(v148 + 36);
      *(unsigned char *)uint64_t v122 = v109;
      *(void *)(v122 + 8) = v111;
      *(void *)(v122 + 16) = v113;
      *(void *)(v122 + 24) = v115;
      *(void *)(v122 + 32) = v117;
      *(unsigned char *)(v122 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v118 + 8))(v120, v121);
      static VerticalEdge.Set.all.getter();
      sub_100B01534();
      uint64_t v123 = v144;
      View.listRowSeparator(_:edges:)();
      sub_100178200(v119, &qword_100EB0898);
      uint64_t v124 = *(void (**)(char *, char *, uint64_t))(v147 + 32);
      uint64_t v125 = v142;
      uint64_t v98 = v176;
      v124(v142, v123, v176);
      v124((char *)v93, v125, v98);
      uint64_t v97 = 0;
      goto LABEL_23;
    }
    sub_100178200(v88, &qword_100E65ED8);
    sub_100178200(v86, &qword_100E65ED8);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v95, v89);
    uint64_t v94 = (uint64_t)v182;
  }
  sub_100178200(v90, &qword_100E662F0);
  uint64_t v97 = 1;
  uint64_t v98 = v176;
LABEL_24:
  _s7Weather24LocationCompositionStateOwst_0(v93, v97, 1, v98);
  uint64_t v126 = v173;
  sub_1001E4B50(v94, v173, &qword_100EB08E0);
  uint64_t v127 = (uint64_t)v179;
  uint64_t v128 = v174;
  sub_1001E4B50((uint64_t)v179, v174, &qword_100EB08D8);
  uint64_t v130 = v180;
  uint64_t v129 = v181;
  sub_1001E4B50(v180, v181, &qword_100EB08C8);
  uint64_t v131 = v175;
  sub_1001E4B50(v93, v175, &qword_100EB08A8);
  uint64_t v132 = v177;
  sub_1001E4B50(v126, v177, &qword_100EB08E0);
  uint64_t v133 = (int *)sub_10017DF08(&qword_100EB0908);
  sub_1001E4B50(v128, v132 + v133[12], &qword_100EB08D8);
  sub_1001E4B50(v129, v132 + v133[16], &qword_100EB08C8);
  sub_1001E4B50(v131, v132 + v133[20], &qword_100EB08A8);
  sub_100178200(v93, &qword_100EB08A8);
  sub_100178200(v130, &qword_100EB08C8);
  sub_100178200(v127, &qword_100EB08D8);
  sub_100178200((uint64_t)v182, &qword_100EB08E0);
  sub_100178200(v131, &qword_100EB08A8);
  sub_100178200(v129, &qword_100EB08C8);
  sub_100178200(v128, &qword_100EB08D8);
  return sub_100178200(v126, &qword_100EB08E0);
}

uint64_t sub_100AED7E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v95 = a1;
  uint64_t v2 = type metadata accessor for ContentStatusBanner();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ContentStatusBannerView();
  __chkstk_darwin(v5 - 8);
  uint64_t v84 = (_OWORD *)((char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10017DF08(&qword_100E8EDC8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E8EDD0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10017DF08(&qword_100EB0930) - 8;
  __chkstk_darwin(v85);
  uint64_t v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10017DF08(&qword_100EB0938) - 8;
  __chkstk_darwin(v86);
  uint64_t v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10017DF08(&qword_100EB0940) - 8;
  __chkstk_darwin(v88);
  uint64_t v87 = (uint64_t)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v89 = sub_10017DF08(&qword_100EB0948) - 8;
  __chkstk_darwin(v89);
  uint64_t v83 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10017DF08(&qword_100EB0950);
  __chkstk_darwin(v92);
  uint64_t v90 = (uint64_t)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100EB0958);
  uint64_t v93 = *(void *)(v22 - 8);
  uint64_t v94 = v22;
  __chkstk_darwin(v22);
  uint64_t v91 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (int *)type metadata accessor for ListView.ListContentView(0);
  uint64_t v25 = v24[24];
  uint64_t v82 = v1;
  sub_1001B1E64((void *)(v1 + v25), *(void *)(v1 + v25 + 24));
  sub_10017DF08(&qword_100E8EAB0);
  State.wrappedValue.getter();
  uint64_t v26 = v84;
  sub_1000D36C4((uint64_t)v4, v84);
  sub_100AF5680((uint64_t)v4, (void (*)(void))type metadata accessor for ContentStatusBanner);
  char v27 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_100AF5A4C();
  uint64_t v36 = &v10[*(int *)(v8 + 44)];
  char *v36 = v27;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_100AF5680((uint64_t)v26, (void (*)(void))type metadata accessor for ContentStatusBannerView);
  char v37 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_1001E4B50((uint64_t)v10, (uint64_t)v14, &qword_100E8EDC8);
  uint64_t v46 = *(int *)(v12 + 44);
  uint64_t v47 = (uint64_t)v83;
  uint64_t v48 = &v14[v46];
  *uint64_t v48 = v37;
  *((void *)v48 + 1) = v39;
  *((void *)v48 + 2) = v41;
  *((void *)v48 + 3) = v43;
  *((void *)v48 + 4) = v45;
  v48[40] = 0;
  sub_100178200((uint64_t)v10, &qword_100E8EDC8);
  uint64_t v49 = static Color.clear.getter();
  LOBYTE(v10) = static Edge.Set.all.getter();
  sub_1001E4B50((uint64_t)v14, (uint64_t)v16, &qword_100E8EDD0);
  uint64_t v50 = &v16[*(int *)(v85 + 44)];
  *(void *)uint64_t v50 = v49;
  v50[8] = (char)v10;
  sub_100178200((uint64_t)v14, &qword_100E8EDD0);
  uint64_t v51 = v82;
  uint64_t v52 = (uint64_t *)(v82 + v24[13]);
  uint64_t v53 = *v52;
  unint64_t v54 = v52[1];
  uint64_t v96 = v53;
  unint64_t v97 = v54;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  uint64_t v55 = v98;
  sub_1001E4B50((uint64_t)v16, (uint64_t)v18, &qword_100EB0930);
  *(void *)&v18[*(int *)(v86 + 44)] = v55;
  uint64_t v56 = (uint64_t)v16;
  uint64_t v57 = v51;
  sub_100178200(v56, &qword_100EB0930);
  uint64_t v58 = (uint64_t *)(v51 + v24[12]);
  uint64_t v59 = *v58;
  unint64_t v60 = v58[1];
  uint64_t v96 = v59;
  unint64_t v97 = v60;
  State.wrappedValue.getter();
  uint64_t v61 = v98;
  static UnitPoint.center.getter();
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v66 = v87;
  sub_1001E4B50((uint64_t)v18, v87, &qword_100EB0938);
  uint64_t v67 = (void *)(v66 + *(int *)(v88 + 44));
  *uint64_t v67 = v61;
  v67[1] = v61;
  v67[2] = v63;
  v67[3] = v65;
  sub_100178200((uint64_t)v18, &qword_100EB0938);
  uint64_t v96 = static Color.clear.getter();
  swift_retain();
  uint64_t v68 = AnyView.init<A>(_:)();
  sub_1001E4B50(v66, v47, &qword_100EB0940);
  swift_release();
  *(void *)(v47 + *(int *)(v89 + 44)) = v68;
  sub_100178200(v66, &qword_100EB0940);
  if (qword_100E62748 != -1) {
    swift_once();
  }
  long long v89 = xmmword_100F51D48;
  uint64_t v69 = qword_100F51D58;
  uint64_t v70 = qword_100F51D60;
  uint64_t v71 = v90;
  sub_1001E4B50(v47, v90, &qword_100EB0948);
  uint64_t v72 = v92;
  uint64_t v73 = v71 + *(int *)(v92 + 36);
  *(_OWORD *)uint64_t v73 = v89;
  *(void *)(v73 + 16) = v69;
  *(void *)(v73 + 24) = v70;
  *(unsigned char *)(v73 + 32) = 0;
  sub_100178200(v47, &qword_100EB0948);
  static VerticalEdge.Set.all.getter();
  unint64_t v74 = sub_100B0163C();
  uint64_t v75 = v91;
  View.listRowSeparator(_:edges:)();
  sub_100178200(v71, &qword_100EB0950);
  uint64_t v76 = (char *)(v57 + v24[15]);
  char v77 = *v76;
  unint64_t v78 = *((void *)v76 + 1);
  LOBYTE(v96) = v77;
  unint64_t v97 = v78;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  uint64_t v96 = v72;
  unint64_t v97 = v74;
  swift_getOpaqueTypeConformance2();
  uint64_t v79 = v94;
  View.accessibilityHidden(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v75, v79);
}

uint64_t sub_100AEDF90(char a1, char a2)
{
  uint64_t v4 = 0;
  switch(a1)
  {
    case 1:
      uint64_t v4 = 0x4034000000000000;
      if ((a2 & 1) != 0 && *(unsigned char *)(v2 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 80) + 8)) {
        uint64_t v4 = 0x4020000000000000;
      }
      break;
    case 2:
      return v4;
    case 3:
      BOOL v5 = *(unsigned char *)(v2 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 80) + 8) == 0;
      if (a2) {
        uint64_t v6 = 0x4020000000000000;
      }
      else {
        uint64_t v6 = 0x4034000000000000;
      }
      if (v5) {
        uint64_t v4 = 0;
      }
      else {
        uint64_t v4 = v6;
      }
      break;
    default:
      uint64_t v4 = 0;
      break;
  }
  return v4;
}

uint64_t sub_100AEE06C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ListView.ListContentView(0);
  uint64_t v3 = (int *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = type metadata accessor for ListLocationViewModel(0);
  __chkstk_darwin(v4 - 8);
  sub_100AF5A4C();
  uint64_t v15 = *(void *)(v1 + v3[23]);
  BOOL v5 = (uint64_t *)(v1 + v3[27]);
  uint64_t v13 = *v5;
  uint64_t v19 = v5[1];
  uint64_t v6 = (uint64_t *)(v1 + v3[24]);
  uint64_t v18 = v6[1];
  uint64_t v16 = *v6;
  uint64_t v17 = *(void *)(v1 + v3[25]);
  sub_1001E9994(v1 + v3[28], (uint64_t)v21);
  uint64_t v7 = v3[22];
  uint64_t v8 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ListViewModel() + 68) + v7);
  uint64_t v9 = v8[1];
  uint64_t v14 = *v8;
  sub_100AF5A4C();
  uint64_t v10 = swift_allocObject();
  sub_100AF5BA8();
  sub_100AF5A4C();
  uint64_t v11 = swift_allocObject();
  sub_100AF5BA8();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return sub_100AEF470(v15, v13, v19, v16, v18, v17, v21, a1, v14, v9, (uint64_t)sub_100B01920, v10, (uint64_t)sub_100B01960, v11);
}

uint64_t sub_100AEE32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E85F58);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexSet.Index();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexSet();
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v18;
  uint64_t v46 = v17;
  (*(void (**)(char *, uint64_t, __n128))(v18 + 16))(v16, a1, v14);
  IndexSet.startIndex.getter();
  uint64_t v19 = IndexSet.subscript.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v20 = a3 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 80);
  uint64_t v21 = type metadata accessor for ListViewModel();
  sub_1001E4B50(v20 + *(int *)(v21 + 32), (uint64_t)v8, &qword_100E85F58);
  uint64_t v22 = type metadata accessor for ListLocationViewModel(0);
  LODWORD(v12) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v22);
  sub_100178200((uint64_t)v8, &qword_100E85F58);
  if (v12 != 1)
  {
    BOOL v23 = __OFSUB__(v19--, 1);
    if (v23)
    {
      __break(1u);
    }
    else
    {
      BOOL v23 = __OFSUB__(a2--, 1);
      if (!v23) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_19:
    swift_once();
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v24 = *(void *)(v20 + *(int *)(v21 + 60));
  uint64_t v25 = sub_100A03B18(v19, v24);
  if ((v26 & 1) == 0)
  {
    uint64_t v27 = v25;
    uint64_t v28 = sub_100A03B18(a2, v24);
    if (v29)
    {
      if (qword_100E62788 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      sub_1002102B0(v37, (uint64_t)qword_100F51DB0);
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v47 = a2;
        uint64_t v48 = v41;
        *(_DWORD *)uint64_t v40 = 136446210;
        uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v47 = sub_10016414C(v42, v43, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Failed to find mapped index with sourceIndex type=%{public}s", v40, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
    }
    else
    {
      sub_10078CAB4(v27, v28);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v16, v46);
  }
  if (qword_100E62788 != -1) {
    goto LABEL_19;
  }
LABEL_8:
  uint64_t v30 = type metadata accessor for Logger();
  sub_1002102B0(v30, (uint64_t)qword_100F51DB0);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v47 = v19;
    uint64_t v48 = v34;
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v47 = sub_10016414C(v35, v36, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to find mapped index with sourceIndex type=%{public}s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v16, v46);
}

void sub_100AEE880(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for IndexSet();
  uint64_t v30 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E85F58);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexSet.Index();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexSet.startIndex.getter();
  uint64_t v13 = IndexSet.subscript.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v14 = a2 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 80);
  uint64_t v15 = type metadata accessor for ListViewModel();
  sub_1001E4B50(v14 + *(int *)(v15 + 32), (uint64_t)v8, &qword_100E85F58);
  uint64_t v16 = type metadata accessor for ListLocationViewModel(0);
  LODWORD(v12) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v16);
  sub_100178200((uint64_t)v8, &qword_100E85F58);
  if (v12 != 1 && __OFSUB__(v13--, 1))
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v18 = sub_100A03B18(v13, *(void *)(v14 + *(int *)(v15 + 60)));
  if ((v19 & 1) == 0)
  {
    uint64_t v20 = v18;
    sub_10017DF08(&qword_100E6B690);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100C251B0;
    *(void *)(v21 + 32) = v20;
    uint64_t v32 = v21;
    sub_100231190((uint64_t)&unk_100EB0990);
    sub_10017DF08(&qword_100EB0998);
    sub_10024D5E4((uint64_t)&unk_100EB09A0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    sub_10078CB8C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v3);
    return;
  }
  if (qword_100E62788 != -1) {
    goto LABEL_10;
  }
LABEL_6:
  uint64_t v22 = type metadata accessor for Logger();
  sub_1002102B0(v22, (uint64_t)qword_100F51DB0);
  BOOL v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v31 = v13;
    uint64_t v32 = v26;
    *(_DWORD *)uint64_t v25 = 136446210;
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = sub_10016414C(v27, v28, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Failed to find mapped index with sourceIndex type=%{public}s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t sub_100AEECF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LearnMoreAttributorView();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v19[-v9];
  uint64_t v11 = type metadata accessor for ListView.ListContentView(0);
  type metadata accessor for ListViewModel();
  sub_100AF5A4C();
  *(void *)&v7[*(int *)(v5 + 28) + 8] = *(void *)(*(void *)(a1 + *(int *)(v11 + 88) + 8) + 8);
  swift_unknownObjectWeakInit();
  uint64_t v12 = &v7[*(int *)(v5 + 32)];
  LocalizedStringKey.init(stringLiteral:)();
  *(void *)uint64_t v12 = Text.init(_:tableName:bundle:comment:)();
  *((void *)v12 + 1) = v13;
  v12[16] = v14 & 1;
  *((void *)v12 + 3) = v15;
  sub_100AF5BA8();
  sub_100AF5A4C();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v16 = sub_10017DF08(&qword_100EB0988);
  sub_100AF5A4C();
  uint64_t v17 = a2 + *(int *)(v16 + 64);
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  sub_100AF5680((uint64_t)v10, (void (*)(void))type metadata accessor for LearnMoreAttributorView);
  return sub_100AF5680((uint64_t)v7, (void (*)(void))type metadata accessor for LearnMoreAttributorView);
}

void sub_100AEEF1C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for ListView.ListContentView(0) + 80) + 8) == 1)
  {
    sub_10078C4A4();
    UIAccessibilityNotifications v1 = UIAccessibilityScreenChangedNotification;
    UIAccessibilityPostNotification(v1, 0);
  }
}

uint64_t sub_100AEEF90(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB0850);
  __chkstk_darwin(v2 - 8);
  sub_1001E4B50(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100EB0850);
  return EnvironmentValues.editMode.setter();
}

void sub_100AEF024(uint64_t a1)
{
  uint64_t v29 = type metadata accessor for ListLocationViewModel(0);
  __chkstk_darwin(v29);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E85F58);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for ListView.ListContentView(0) + 80);
  uint64_t v30 = v1;
  uint64_t v12 = v1 + v11;
  uint64_t v13 = type metadata accessor for ListViewModel();
  uint64_t v14 = *(void *)(v12 + *(int *)(v13 + 36));
  uint64_t v31 = a1;
  uint64_t v33 = a1;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100A96C00(sub_100B019C0, (uint64_t)v32, v14);
  char v17 = v16;
  swift_bridgeObjectRelease();
  if (v17 & 1) != 0 || (uint64_t v18 = sub_100A03B18(v15, *(void *)(v12 + *(int *)(v13 + 60))), (v19))
  {
    if (qword_100E62788 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1002102B0(v21, (uint64_t)qword_100F51DB0);
    sub_100AF5A4C();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 141558275;
      uint64_t v34 = 1752392040;
      uint64_t v35 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v24 + 12) = 2081;
      uint64_t v26 = LocationModel.id.getter();
      uint64_t v34 = sub_10016414C(v26, v27, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100AF5680((uint64_t)v4, (void (*)(void))type metadata accessor for ListLocationViewModel);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Could not find location with id %{private,mask.hash}s while attempting to delete it.", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100AF5680((uint64_t)v4, (void (*)(void))type metadata accessor for ListLocationViewModel);
    }
  }
  else
  {
    __chkstk_darwin(v18);
    *(&v28 - 2) = v30;
    *(&v28 - 1) = v20;
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    swift_release();
    sub_100AF5A4C();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v29);
    sub_1001E4B50((uint64_t)v10, (uint64_t)v7, &qword_100E85F58);
    sub_10017DF08(&qword_100EB0530);
    State.wrappedValue.setter();
    sub_100178200((uint64_t)v10, &qword_100E85F58);
  }
}

uint64_t sub_100AEF448(char a1, char a2)
{
  return sub_100AEDF90(a1, a2);
}

uint64_t sub_100AEF470@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, long long *a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100AF5BA8();
  uint64_t v21 = (int *)type metadata accessor for ListRowView(0);
  *(void *)(a8 + v21[5]) = a1;
  uint64_t v22 = (void *)(a8 + v21[6]);
  *uint64_t v22 = a2;
  v22[1] = a3;
  os_log_type_t v23 = (void *)(a8 + v21[7]);
  *os_log_type_t v23 = a4;
  v23[1] = a5;
  *(void *)(a8 + v21[8]) = a6;
  sub_1001262E4(a7, a8 + v21[9]);
  uint64_t v24 = (void *)(a8 + v21[10]);
  *uint64_t v24 = a9;
  v24[1] = a10;
  uint64_t v25 = (void *)(a8 + v21[11]);
  *uint64_t v25 = a11;
  v25[1] = a12;
  uint64_t v26 = (void *)(a8 + v21[12]);
  *uint64_t v26 = a13;
  v26[1] = a14;
  unint64_t v27 = (uint64_t *)(a8 + v21[13]);
  *unint64_t v27 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v28 = a8 + v21[14];
  uint64_t result = State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v28 = v31;
  *(void *)(v28 + 8) = v32;
  return result;
}

uint64_t sub_100AEF5F0()
{
  uint64_t v0 = LocationModel.id.getter();
  uint64_t v2 = v1;
  if (v0 == LocationModel.id.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100AEF68C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for IndexSet();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ListView.ListContentView(0);
  sub_10017DF08(&qword_100E6B690);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C251B0;
  *(void *)(v7 + 32) = a2;
  v9[1] = v7;
  sub_100231190((uint64_t)&unk_100EB0990);
  sub_10017DF08(&qword_100EB0998);
  sub_10024D5E4((uint64_t)&unk_100EB09A0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10078CB8C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100AEF844@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v38 = sub_10017DF08(&qword_100E65ED8);
  sub_100162880();
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v37 = v3;
  uint64_t v34 = sub_10017DF08(&qword_100E6DC08);
  sub_100162880();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v33 = v5;
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ListView.VFXPlaybackCoordinatorView(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  sub_10017DF08(&qword_100EB09B0);
  sub_100179C0C();
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v40 = v14;
  uint64_t v15 = static Color.clear.getter();
  uint64_t v32 = type metadata accessor for ListView.VFXPlaybackCoordinatorView;
  sub_100AF5A4C();
  uint64_t v16 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = (v16 + 16) & ~v16;
  uint64_t v28 = v16 | 7;
  uint64_t v31 = v17 + v11;
  uint64_t v18 = swift_allocObject();
  uint64_t v30 = v17;
  sub_100AF5BA8();
  uint64_t v41 = v15;
  uint64_t v42 = sub_100B0226C;
  unint64_t v43 = v18;
  unint64_t v44 = 0;
  uint64_t v45 = 0;
  uint64_t v29 = v1;
  swift_retain();
  sub_1001362A4();
  swift_release();
  uint64_t v19 = (uint64_t)v8;
  uint64_t v20 = v33;
  sub_100B08E7C(v19, v33, &qword_100E6DC08);
  sub_100AF5A4C();
  swift_allocObject();
  sub_100AF5BA8();
  uint64_t v21 = sub_10017DF08(&qword_100E65968);
  unint64_t v22 = sub_10022F258();
  unint64_t v23 = sub_10013744C();
  uint64_t v24 = (void (*)())v34;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178200(v20, &qword_100E6DC08);
  swift_release();
  sub_1001361AC((uint64_t)v42);
  sub_1001361AC(v44);
  uint64_t v25 = v37;
  sub_10019B2FC();
  sub_100AF5A4C();
  swift_allocObject();
  sub_100AF5BA8();
  uint64_t v41 = v21;
  uint64_t v42 = v24;
  unint64_t v43 = v22;
  unint64_t v44 = v23;
  swift_getOpaqueTypeConformance2();
  sub_1000D7A84();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178200(v25, &qword_100E65ED8);
  sub_100162F0C();
  return v26();
}

void sub_100AEFCB0()
{
  uint64_t v1 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v1 - 8);
  uint64_t v48 = (uint64_t)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v47 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E662F0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &qword_100E65ED8;
  uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v47 - v18;
  __chkstk_darwin(v20);
  unint64_t v22 = (char *)&v47 - v21;
  uint64_t v49 = v0;
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v19, enum case for UserInterfaceSizeClass.compact(_:), v5);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v5);
  uint64_t v23 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_1001E4B50((uint64_t)v22, (uint64_t)v12, &qword_100E65ED8);
  sub_1001E4B50((uint64_t)v19, v23, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v5) == 1)
  {
    sub_100178200((uint64_t)v19, &qword_100E65ED8);
    sub_100178200((uint64_t)v22, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v5) == 1)
    {
      char v24 = -1;
    }
    else
    {
      uint64_t v13 = &qword_100E662F0;
      char v24 = 0;
    }
  }
  else
  {
    sub_1001E4B50((uint64_t)v12, (uint64_t)v16, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v5) == 1)
    {
      sub_100178200((uint64_t)v19, &qword_100E65ED8);
      sub_100178200((uint64_t)v22, &qword_100E65ED8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
      char v24 = 0;
      uint64_t v13 = &qword_100E662F0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v23, v5);
      sub_100231190((uint64_t)&qword_100E65F28);
      char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
      unint64_t v27 = v8;
      char v24 = v25;
      v26(v27, v5);
      sub_100178200((uint64_t)v19, &qword_100E65ED8);
      sub_100178200((uint64_t)v22, &qword_100E65ED8);
      v26(v16, v5);
    }
  }
  sub_100178200((uint64_t)v12, v13);
  type metadata accessor for ListView.VFXPlaybackCoordinatorView(0);
  swift_retain();
  uint64_t v28 = (uint64_t)v47;
  sub_1001362A4();
  swift_release();
  uint64_t v29 = v48;
  sub_100B08E7C(v28, v48, &qword_100E6DC08);
  uint64_t v30 = type metadata accessor for Location.Identifier();
  int v31 = _s7Weather24LocationCompositionStateOwet_0(v29, 1, v30);
  sub_100178200(v29, &qword_100E6DC08);
  swift_getObjectType();
  char v32 = dispatch thunk of WeatherConditionPlaybackCoordinatorType.isPlaybackBlocked()();
  char v33 = v32;
  if ((v24 & 1) != 0 && v31 != 1)
  {
    if ((v32 & 1) == 0)
    {
      if (qword_100E627D0 != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      sub_1002102B0(v34, (uint64_t)qword_100F51E88);
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 67109632;
        int v50 = 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v37 + 8) = 1024;
        int v50 = 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v37 + 14) = 1024;
        int v50 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Pausing and blocking VFX playback; isWindowCompact=%{BOOL}d, isLocationSelected=%{BOOL}d, isPlaybackBlocked=%{BOOL}d",
          (uint8_t *)v37,
          0x14u);
        swift_slowDealloc();
      }

      swift_getObjectType();
      dispatch thunk of WeatherConditionPlaybackCoordinatorType.setPlaybackBlocked(_:)();
      WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
      return;
    }
    goto LABEL_22;
  }
  if ((v32 & 1) == 0)
  {
LABEL_22:
    if (qword_100E627D0 != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    sub_1002102B0(v42, (uint64_t)qword_100F51E88);
    unint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      BOOL v45 = v31 != 1;
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 67109632;
      int v50 = v24 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 8) = 1024;
      int v50 = v45;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 14) = 1024;
      int v50 = v33 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "No update needed to VFX playback; isWindowCompact=%{BOOL}d, isLocationSelected=%{BOOL}d, isPlaybackBlocked=%{BOOL}d",
        (uint8_t *)v46,
        0x14u);
      swift_slowDealloc();
    }

    return;
  }
  if (qword_100E627D0 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  sub_1002102B0(v38, (uint64_t)qword_100F51E88);
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 67109632;
    int v50 = v24 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 8) = 1024;
    int v50 = v31 != 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 14) = 1024;
    int v50 = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Unblocking and resuming VFX playback; isWindowCompact=%{BOOL}d, isLocationSelected=%{BOOL}d, isPlaybackBlocked=%{BOOL}d",
      (uint8_t *)v41,
      0x14u);
    swift_slowDealloc();
  }

  swift_getObjectType();
  dispatch thunk of WeatherConditionPlaybackCoordinatorType.setPlaybackBlocked(_:)();
  dispatch thunk of WeatherConditionPlaybackCoordinatorType.play(_:)();
}

void sub_100AF055C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6DD18);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v14 + 56)];
  sub_1001E4B50(a1, (uint64_t)v13, &qword_100E6DC08);
  sub_1001E4B50(a2, v15, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v4) == 1)
  {
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v4) == 1)
    {
      sub_100178200((uint64_t)v13, &qword_100E6DC08);
      return;
    }
  }
  else
  {
    sub_1001E4B50((uint64_t)v13, (uint64_t)v10, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      sub_100231190((uint64_t)&qword_100E63A30);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v7, v4);
      v17(v10, v4);
      sub_100178200((uint64_t)v13, &qword_100E6DC08);
      if (v16) {
        return;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_100178200((uint64_t)v13, &qword_100E6DD18);
LABEL_8:
  sub_100AEFCB0();
}

void sub_100AF082C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v14 + 56)];
  sub_1001E4B50(a1, (uint64_t)v13, &qword_100E65ED8);
  sub_1001E4B50(a2, v15, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v4) == 1)
  {
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v4) == 1)
    {
      sub_100178200((uint64_t)v13, &qword_100E65ED8);
      return;
    }
  }
  else
  {
    sub_1001E4B50((uint64_t)v13, (uint64_t)v10, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      sub_100231190((uint64_t)&qword_100E65F28);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v7, v4);
      v17(v10, v4);
      sub_100178200((uint64_t)v13, &qword_100E65ED8);
      if (v16) {
        return;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_100178200((uint64_t)v13, &qword_100E662F0);
LABEL_8:
  sub_100AEFCB0();
}

uint64_t sub_100AF0B00@<X0>(uint64_t a1@<X2>, BOOL *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ListViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  sub_10024E490();
  swift_release();
  int v7 = v6[10];
  sub_100AF5680((uint64_t)v6, (void (*)(void))type metadata accessor for ListViewModel);
  sub_100AF56D8(a1, (uint64_t)v11);
  if (v7 == 1)
  {
    uint64_t result = sub_100AF5B70((uint64_t)v11);
    BOOL v9 = 1;
  }
  else
  {
    swift_retain();
    sub_10024E490();
    swift_release();
    sub_100AF5B70((uint64_t)v11);
    int v10 = v6[10];
    uint64_t result = sub_100AF5680((uint64_t)v6, (void (*)(void))type metadata accessor for ListViewModel);
    BOOL v9 = v10 == 2;
  }
  *a2 = v9;
  return result;
}

BOOL sub_100AF0C2C()
{
  sub_100162814();
  uint64_t v0 = type metadata accessor for ListViewModel();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - v4;
  swift_retain();
  sub_10024E490();
  swift_release();
  swift_retain();
  sub_10024E490();
  swift_release();
  BOOL v6 = sub_1007FA254((uint64_t)v5, (uint64_t)v2);
  sub_100AF5680((uint64_t)v2, (void (*)(void))type metadata accessor for ListViewModel);
  sub_100AF5680((uint64_t)v5, (void (*)(void))type metadata accessor for ListViewModel);
  return v6;
}

uint64_t sub_100AF0D34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v2 = type metadata accessor for SwipeActionsStyle();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  uint64_t v39 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100EB0C40);
  __chkstk_darwin(v4);
  BOOL v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EB0C48);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  uint64_t v41 = v8;
  __chkstk_darwin(v7);
  int v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EB0C50);
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v46 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100EB0C58);
  __chkstk_darwin(v42);
  uint64_t v47 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AF17DC(v1, (uint64_t)v6);
  uint64_t v15 = v1 + *(int *)(type metadata accessor for ListRowView(0) + 56);
  char v16 = *(unsigned char *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  char v54 = v16;
  uint64_t v55 = v17;
  sub_10017DF08(&qword_100E65950);
  State.projectedValue.getter();
  unint64_t v38 = sub_100B0705C();
  View.swipeActions<A>(edge:allowsFullSwipe:isPresented:content:)();
  swift_release();
  swift_release();
  sub_100178200((uint64_t)v6, &qword_100EB0C40);
  uint64_t v18 = v39;
  static SwipeActionsStyle.rounded(radius:)();
  uint64_t v49 = v1;
  sub_10017DF08(&qword_100EB0D08);
  uint64_t v50 = v4;
  uint64_t v51 = &type metadata for EmptyView;
  unint64_t v52 = v38;
  uint64_t v53 = &protocol witness table for EmptyView;
  swift_getOpaqueTypeConformance2();
  sub_100B076DC((uint64_t)&unk_100EB0D10);
  uint64_t v19 = v40;
  View.swipeActions<A>(edge:allowsFullSwipe:style:content:)();
  uint64_t v20 = v18;
  char v21 = 1;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v44);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v19);
  LocationModel.kind.getter();
  uint64_t v22 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v24 = v23;
  if (v22 != Location.Identifier.Kind.rawValue.getter() || v24 != v25) {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v45;
  uint64_t v27 = v46;
  uint64_t v29 = (uint64_t)v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v47, v13, v46);
  *(unsigned char *)(v29 + *(int *)(v42 + 36)) = v21 & 1;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v27);
  LocationModel.kind.getter();
  uint64_t v30 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v32 = v31;
  char v33 = 1;
  if (v30 != Location.Identifier.Kind.rawValue.getter() || v32 != v34) {
    char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = v48;
  sub_1001E4B50(v29, v48, &qword_100EB0C58);
  *(unsigned char *)(v36 + *(int *)(sub_10017DF08(&qword_100EB0D28) + 36)) = v33 & 1;
  return sub_100178200(v29, &qword_100EB0C58);
}

uint64_t sub_100AF12D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v1 = type metadata accessor for ListRowView(0);
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v2 = *(void *)(v30 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E66BB8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E8E4B8);
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100EB0D20);
  __chkstk_darwin(v32);
  int v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocationModel.kind.getter();
  uint64_t v11 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == Location.Identifier.Kind.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v17 = v32;
    uint64_t v18 = v33;
  }
  else
  {
    v27[1] = v2;
    uint64_t v28 = v10;
    uint64_t v29 = v8;
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v32;
    uint64_t v18 = v33;
    if ((v16 & 1) == 0)
    {
      static ButtonRole.destructive.getter();
      uint64_t v19 = type metadata accessor for ButtonRole();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v19);
      sub_100AF5A4C();
      swift_allocObject();
      sub_100AF5BA8();
      uint64_t v20 = v29;
      Button.init(role:action:label:)();
      id v21 = [self mainBundle];
      v36._object = (void *)0x8000000100CBDF60;
      v22._countAndFlagsBits = 0x6574656C6544;
      v22._object = (void *)0xE600000000000000;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v36._countAndFlagsBits = 0xD00000000000003CLL;
      Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v36);

      Swift::String v34 = v24;
      sub_10024D5E4((uint64_t)&qword_100EAAC90);
      sub_10014A85C();
      uint64_t v25 = (uint64_t)v28;
      View.accessibilityLabel<A>(_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v6);
      sub_100B08E7C(v25, v18, &qword_100EB0D20);
      return _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, v17);
    }
  }

  return _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v17);
}

uint64_t sub_100AF175C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListRowView(0);
  return (*(uint64_t (**)(uint64_t))(a1 + *(int *)(v2 + 44)))(a1);
}

uint64_t sub_100AF179C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100AF17DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v132 = a2;
  uint64_t v4 = (int *)type metadata accessor for ListRowView(0);
  uint64_t v129 = *((void *)v4 - 1);
  uint64_t v108 = *(int **)(v129 + 64);
  __chkstk_darwin(v4);
  uint64_t v130 = type metadata accessor for ListLocationViewModel(0);
  unint64_t v107 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  __chkstk_darwin(v5);
  uint64_t v104 = (char *)&v104 - v6;
  uint64_t v7 = type metadata accessor for ListLocationRowView(0);
  uint64_t v8 = (int *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = (uint64_t *)((char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v106 = sub_10017DF08(&qword_100EB0CF0);
  __chkstk_darwin(v106);
  *(void *)&long long v110 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10017DF08(&qword_100EB0CE0);
  __chkstk_darwin(v109);
  uint64_t v112 = (uint64_t)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10017DF08(&qword_100EB0CD0);
  __chkstk_darwin(v111);
  uint64_t v114 = (uint64_t)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_10017DF08(&qword_100EB0CB8);
  __chkstk_darwin(v117);
  uint64_t v115 = (uint64_t)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_10017DF08(&qword_100EB0D30);
  uint64_t v123 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v119 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10017DF08(&qword_100EB0CB0);
  __chkstk_darwin(v116);
  unint64_t v120 = (char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10017DF08(&qword_100EB0CA0);
  __chkstk_darwin(v124);
  uint64_t v121 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EB0C90);
  __chkstk_darwin(v18 - 8);
  uint64_t v122 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10017DF08(&qword_100EB0C80);
  __chkstk_darwin(v118);
  uint64_t v126 = (uint64_t)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_10017DF08(&qword_100EB0C70);
  __chkstk_darwin(v127);
  uint64_t v128 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2 + v4[9];
  long long v133 = *(_OWORD *)(v2 + v4[6]);
  sub_1001E9994(v22, (uint64_t)&v139);
  sub_100AF5A4C();
  uint64_t v113 = v4[5];
  uint64_t v105 = *(void *)(v2 + v4[8]);
  sub_100AF5A4C();
  uint64_t v131 = a1;
  sub_100AF5A4C();
  uint64_t v23 = swift_allocObject();
  sub_100AF5BA8();
  sub_100AF5BA8();
  uint64_t v108 = v4;
  uint64_t v24 = v4[14];
  uint64_t v129 = v2;
  uint64_t v25 = (char *)(v2 + v24);
  char v26 = *v25;
  uint64_t v27 = *((void *)v25 + 1);
  char v134 = v26;
  uint64_t v135 = v27;
  swift_unknownObjectRetain();
  swift_retain();
  sub_10017DF08(&qword_100E65950);
  State.projectedValue.getter();
  uint64_t v28 = v136;
  uint64_t v29 = v137;
  LOBYTE(a1) = v138;
  *int v10 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62D60);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (char *)v10 + v8[7];
  char v134 = 0;
  State.init(wrappedValue:)();
  uint64_t v31 = v137;
  char *v30 = v136;
  *((void *)v30 + 1) = v31;
  *(_OWORD *)((char *)v10 + v8[8]) = v133;
  sub_1001262E4(&v139, (uint64_t)v10 + v8[9]);
  sub_100AF5BA8();
  uint64_t v32 = (uint64_t *)((char *)v10 + v8[11]);
  uint64_t v33 = sub_10017DF08((uint64_t *)&unk_100EAAA90);
  unint64_t v34 = sub_10024D5E4((uint64_t)&qword_100E64A08);
  *(void *)&long long v133 = v33;
  unint64_t v107 = v34;
  *uint64_t v32 = ObservedObject.init(wrappedValue:)();
  v32[1] = v35;
  *(uint64_t *)((char *)v10 + v8[12]) = v105;
  Swift::String v36 = (uint64_t (**)())((char *)v10 + v8[13]);
  char *v36 = sub_100B08064;
  v36[1] = (uint64_t (*)())v23;
  uint64_t v37 = (char *)v10 + v8[14];
  *(void *)uint64_t v37 = v28;
  *((void *)v37 + 1) = v29;
  v37[16] = a1;
  LOBYTE(v30) = static Edge.Set.leading.getter();
  char v38 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v30) {
    char v38 = Edge.Set.init(rawValue:)();
  }
  uint64_t v39 = v130;
  uint64_t v40 = (void (**)(uint64_t, BOOL))(v129 + v108[12]);
  uint64_t v41 = *(int *)(v130 + 36);
  uint64_t v42 = v131;
  (*v40)(1, (*(unsigned char *)(v131 + v41) & 1) == 0);
  char v44 = v43;
  uint64_t v45 = 0;
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  if ((v43 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v45 = v49;
    uint64_t v46 = v50;
    uint64_t v47 = v51;
    uint64_t v48 = v52;
  }
  uint64_t v53 = v110;
  sub_100AF5A4C();
  uint64_t v54 = v53 + *(int *)(v106 + 36);
  *(unsigned char *)uint64_t v54 = v38;
  *(void *)(v54 + 8) = v45;
  *(void *)(v54 + 16) = v46;
  *(void *)(v54 + 24) = v47;
  *(void *)(v54 + 32) = v48;
  *(unsigned char *)(v54 + 40) = v44 & 1;
  sub_100AF5680((uint64_t)v10, (void (*)(void))type metadata accessor for ListLocationRowView);
  unsigned __int8 v55 = static Edge.Set.trailing.getter();
  char v56 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v55) {
    char v56 = Edge.Set.init(rawValue:)();
  }
  (*v40)(3, (*(unsigned char *)(v42 + v41) & 1) == 0);
  char v58 = v57;
  uint64_t v59 = 0;
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v62 = 0;
  if ((v57 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v59 = v63;
    uint64_t v60 = v64;
    uint64_t v61 = v65;
    uint64_t v62 = v66;
  }
  uint64_t v67 = v112;
  sub_1001E4B50(v53, v112, &qword_100EB0CF0);
  uint64_t v68 = v67 + *(int *)(v109 + 36);
  *(unsigned char *)uint64_t v68 = v56;
  *(void *)(v68 + 8) = v59;
  *(void *)(v68 + 16) = v60;
  *(void *)(v68 + 24) = v61;
  *(void *)(v68 + 32) = v62;
  *(unsigned char *)(v68 + 40) = v58 & 1;
  sub_100178200(v53, &qword_100EB0CF0);
  if (qword_100E62748 != -1) {
    swift_once();
  }
  long long v110 = xmmword_100F51D48;
  uint64_t v69 = qword_100F51D58;
  uint64_t v70 = qword_100F51D60;
  uint64_t v71 = v114;
  sub_1001E4B50(v67, v114, &qword_100EB0CE0);
  uint64_t v72 = v71 + *(int *)(v111 + 36);
  *(_OWORD *)uint64_t v72 = v110;
  *(void *)(v72 + 16) = v69;
  *(void *)(v72 + 24) = v70;
  *(unsigned char *)(v72 + 32) = 0;
  sub_100178200(v67, &qword_100EB0CE0);
  *(void *)&long long v139 = static Color.clear.getter();
  swift_retain();
  uint64_t v73 = AnyView.init<A>(_:)();
  uint64_t v74 = v115;
  sub_1001E4B50(v71, v115, &qword_100EB0CD0);
  swift_release();
  *(void *)(v74 + *(int *)(v117 + 36)) = v73;
  sub_100178200(v71, &qword_100EB0CD0);
  static VerticalEdge.Set.all.getter();
  sub_100B07450();
  uint64_t v75 = v119;
  View.listRowSeparator(_:edges:)();
  sub_100178200(v74, &qword_100EB0CB8);
  LOBYTE(v70) = *(unsigned char *)(v42 + *(int *)(v39 + 84));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v77 = swift_allocObject();
  *(unsigned char *)(v77 + 16) = v70;
  uint64_t v78 = v123;
  uint64_t v79 = (uint64_t)v120;
  uint64_t v80 = v125;
  (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v120, v75, v125);
  uint64_t v81 = (uint64_t *)(v79 + *(int *)(v116 + 36));
  *uint64_t v81 = KeyPath;
  v81[1] = (uint64_t)sub_10021277C;
  v81[2] = v77;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v80);
  uint64_t v82 = static Color.primary.getter();
  uint64_t v83 = swift_getKeyPath();
  uint64_t v84 = v121;
  sub_1001E4B50(v79, v121, &qword_100EB0CB0);
  uint64_t v85 = (uint64_t *)(v84 + *(int *)(v124 + 36));
  *uint64_t v85 = v83;
  v85[1] = v82;
  sub_100178200(v79, &qword_100EB0CB0);
  sub_100B072DC();
  uint64_t v86 = (uint64_t)v122;
  View.accessibilityRemoveTraits(uiTraits:)();
  sub_100178200(v84, &qword_100EB0CA0);
  uint64_t v87 = swift_getKeyPath();
  uint64_t v88 = v126;
  sub_1001E4B50(v86, v126, &qword_100EB0C90);
  uint64_t v89 = v88 + *(int *)(v118 + 36);
  *(void *)uint64_t v89 = v87;
  *(unsigned char *)(v89 + 8) = 0;
  sub_100178200(v86, &qword_100EB0C90);
  uint64_t v90 = (uint64_t)v128;
  uint64_t v91 = &v128[*(int *)(v127 + 36)];
  LocationModel.identifier.getter();
  uint64_t IsListLocationGeometryEffectSourceModifier = type metadata accessor for DetermineWhetherRowIsListLocationGeometryEffectSourceModifier(0);
  uint64_t v93 = (uint64_t *)&v91[*(int *)(IsListLocationGeometryEffectSourceModifier + 20)];
  swift_retain();
  *uint64_t v93 = ObservedObject.init(wrappedValue:)();
  v93[1] = v94;
  uint64_t v95 = &v91[*(int *)(IsListLocationGeometryEffectSourceModifier + 24)];
  type metadata accessor for ListLocationGeometryEffectSourceState(0);
  uint64_t v96 = swift_allocObject();
  uint64_t v97 = v96
      + OBJC_IVAR____TtC7WeatherP33_DDDFED3AF40C4C697AAFFC17EC5DCEF637ListLocationGeometryEffectSourceState_previousActiveLocationID;
  uint64_t v98 = type metadata accessor for Location.Identifier();
  _s7Weather24LocationCompositionStateOwst_0(v97, 1, 1, v98);
  uint64_t v136 = v96;
  State.init(wrappedValue:)();
  uint64_t v99 = *((void *)&v139 + 1);
  *(void *)uint64_t v95 = v139;
  *((void *)v95 + 1) = v99;
  sub_100B08E7C(v88, v90, &qword_100EB0C80);
  sub_10017DF08(&qword_100E66F98);
  uint64_t v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_100C251B0;
  uint64_t v101 = (void *)(v42 + *(int *)(v39 + 24));
  uint64_t v102 = v101[1];
  *(void *)(v100 + 32) = *v101;
  *(void *)(v100 + 40) = v102;
  sub_100B07108();
  sub_10014A85C();
  swift_bridgeObjectRetain();
  View.accessibilityInputLabels<A>(_:)();
  swift_bridgeObjectRelease();
  return sub_100178200(v90, &qword_100EB0C70);
}

uint64_t sub_100AF2634(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v37 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v35 = &v33[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10017DF08(&qword_100E662F0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v8 - 8);
  Swift::String v36 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v33[-v11];
  __chkstk_darwin(v13);
  uint64_t v15 = &v33[-v14];
  uint64_t v16 = type metadata accessor for OSSignpostID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = &v33[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static os_signpost_type_t.event.getter();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  uint64_t v20 = (void *)OS_os_log.init(subsystem:category:)();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)();

  uint64_t v21 = v19;
  uint64_t v22 = v38;
  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v21, v16);
  uint64_t v23 = v37;
  type metadata accessor for ListRowView(0);
  sub_10019B2FC();
  (*(void (**)(unsigned char *, void, uint64_t))(v23 + 104))(v12, enum case for UserInterfaceSizeClass.compact(_:), v2);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v2);
  uint64_t v24 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1001E4B50((uint64_t)v15, (uint64_t)v7, &qword_100E65ED8);
  sub_1001E4B50((uint64_t)v12, v24, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v2) != 1)
  {
    char v26 = v36;
    sub_1001E4B50((uint64_t)v7, (uint64_t)v36, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v2) != 1)
    {
      uint64_t v27 = v35;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v23 + 32))(v35, v24, v2);
      sub_100231190((uint64_t)&qword_100E65F28);
      int v34 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v28 = *(void (**)(unsigned char *, uint64_t))(v23 + 8);
      v28(v27, v2);
      sub_100178200((uint64_t)v12, &qword_100E65ED8);
      sub_100178200((uint64_t)v15, &qword_100E65ED8);
      v28(v36, v2);
      uint64_t v25 = sub_100178200((uint64_t)v7, &qword_100E65ED8);
      if (v34) {
        goto LABEL_8;
      }
      return sub_10078BE4C(v39, 0, 1);
    }
    sub_100178200((uint64_t)v12, &qword_100E65ED8);
    sub_100178200((uint64_t)v15, &qword_100E65ED8);
    (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v26, v2);
LABEL_6:
    sub_100178200((uint64_t)v7, &qword_100E662F0);
    return sub_10078BE4C(v39, 0, 1);
  }
  sub_100178200((uint64_t)v12, &qword_100E65ED8);
  sub_100178200((uint64_t)v15, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v2) != 1) {
    goto LABEL_6;
  }
  uint64_t v25 = sub_100178200((uint64_t)v7, &qword_100E65ED8);
LABEL_8:
  if (qword_100E62310 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v29 = qword_100F51498;
  if (qword_100E62668 != -1) {
    uint64_t v25 = swift_once();
  }
  __chkstk_darwin(v25);
  uint64_t v30 = v39;
  *(void *)&v33[-16] = v22;
  *(void *)&v33[-8] = v30;
  return sub_1006E93B0(1, v29, (v31 & 1) == 0);
}

uint64_t sub_100AF2C08(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ListRowView(0);
  if (qword_100E62318 != -1) {
    swift_once();
  }
  id v3 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:xmmword_100F514A0 stiffness:*(double *)&qword_100F514B0 damping:unk_100F514B8 initialVelocity:unk_100F514B8];
  [v3 ts_settlingDuration];
  uint64_t v5 = v4;

  return sub_10078BE4C(a2, v5, 0);
}

void *sub_100AF2CEC()
{
  return &unk_100EB0308;
}

unsigned char *sub_100AF2CF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100AF2CEC();
  *a1 = *result;
  return result;
}

uint64_t sub_100AF2D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  type metadata accessor for DetermineWhetherRowIsListLocationGeometryEffectSourceModifier(0);
  sub_10017DF08(&qword_100EB0EB0);
  State.wrappedValue.getter();
  swift_retain();
  char v6 = sub_100AF2F84(v2);
  swift_release();
  swift_release();
  uint64_t v7 = sub_10017DF08(&qword_100EB0EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t result = sub_10017DF08(&qword_100EB0EC0);
  uint64_t v9 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v9 = KeyPath;
  *(unsigned char *)(v9 + 8) = v6 & 1;
  return result;
}

uint64_t sub_100AF2E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10017DF08(&qword_100EB0EA0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 &= 1u;
  sub_100195B7C(a2, a3);
  sub_100149AE8();
  char v13 = v12;
  sub_10018F6D8(a2, a3);
  if (v13) {
    double v14 = 2.0;
  }
  else {
    double v14 = 1.0;
  }
  uint64_t v15 = sub_10017DF08(&qword_100EB0EA8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v11, a1, v15);
  *(double *)&v11[*(int *)(v9 + 44)] = v14;
  return sub_100B08E7C((uint64_t)v11, a4, &qword_100EB0EA0);
}

uint64_t sub_100AF2F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100AF2E44(a1, *(void *)v2, *(unsigned char *)(v2 + 8), a2);
}

uint64_t sub_100AF2F84(uint64_t a1)
{
  uint64_t v43 = a1;
  uint64_t v1 = type metadata accessor for Location.Identifier();
  uint64_t v41 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v38 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100E6DD18);
  __chkstk_darwin(v42);
  uint64_t v40 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  char v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v10 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v14 = (char *)&v37 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v37 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v37 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v37 - v22;
  sub_1001362A4();
  sub_100B08E7C((uint64_t)v9, (uint64_t)v20, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v1) == 1)
  {
    uint64_t v24 = v44
        + OBJC_IVAR____TtC7WeatherP33_DDDFED3AF40C4C697AAFFC17EC5DCEF637ListLocationGeometryEffectSourceState_previousActiveLocationID;
    swift_beginAccess();
    sub_1001E4B50(v24, (uint64_t)v23, &qword_100E6DC08);
    sub_100178200((uint64_t)v20, &qword_100E6DC08);
    uint64_t v25 = v41;
  }
  else
  {
    uint64_t v26 = v41;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v23, v20, v1);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v1);
    uint64_t v25 = v26;
  }
  sub_1001362A4();
  sub_100B08E7C((uint64_t)v6, (uint64_t)v17, &qword_100E6DC08);
  uint64_t v27 = v44
      + OBJC_IVAR____TtC7WeatherP33_DDDFED3AF40C4C697AAFFC17EC5DCEF637ListLocationGeometryEffectSourceState_previousActiveLocationID;
  swift_beginAccess();
  sub_1000171F8((uint64_t)v17, v27);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v14, v43, v1);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v1);
  uint64_t v28 = v40;
  uint64_t v29 = v40 + *(int *)(v42 + 48);
  sub_1001E4B50((uint64_t)v14, v40, &qword_100E6DC08);
  sub_1001E4B50((uint64_t)v23, v29, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0(v28, 1, v1) == 1)
  {
    sub_100178200((uint64_t)v14, &qword_100E6DC08);
    sub_100178200((uint64_t)v23, &qword_100E6DC08);
    int v30 = _s7Weather24LocationCompositionStateOwet_0(v29, 1, v1);
    if (v30 == 1) {
      char v31 = &qword_100E6DC08;
    }
    else {
      char v31 = &qword_100E6DD18;
    }
    if (v30 == 1) {
      char v32 = -1;
    }
    else {
      char v32 = 0;
    }
  }
  else
  {
    uint64_t v33 = v39;
    sub_1001E4B50(v28, v39, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v29, 1, v1) == 1)
    {
      sub_100178200((uint64_t)v14, &qword_100E6DC08);
      sub_100178200((uint64_t)v23, &qword_100E6DC08);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v33, v1);
      char v32 = 0;
      char v31 = &qword_100E6DD18;
    }
    else
    {
      int v34 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v38, v29, v1);
      sub_100231190((uint64_t)&qword_100E63A30);
      char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v25 + 8);
      v35(v34, v1);
      char v31 = &qword_100E6DC08;
      sub_100178200((uint64_t)v14, &qword_100E6DC08);
      sub_100178200((uint64_t)v23, &qword_100E6DC08);
      v35((char *)v33, v1);
    }
  }
  sub_100178200(v28, v31);
  return v32 & 1;
}

uint64_t sub_100AF34F0()
{
  sub_100178200(v0+ OBJC_IVAR____TtC7WeatherP33_DDDFED3AF40C4C697AAFFC17EC5DCEF637ListLocationGeometryEffectSourceState_previousActiveLocationID, &qword_100E6DC08);

  return swift_deallocClassInstance();
}

uint64_t sub_100AF355C()
{
  return type metadata accessor for ListLocationGeometryEffectSourceState(0);
}

uint64_t type metadata accessor for ListLocationGeometryEffectSourceState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB0340);
}

void sub_100AF3584()
{
  sub_100029888(319, (unint64_t *)&qword_100E6EAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t destroy for ListView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 112);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ListView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = a2 + 56;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v9(a1 + 56, v6, v8);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v10;
  uint64_t v11 = v10;
  uint64_t v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  swift_unknownObjectRetain();
  v12(a1 + 112, a2 + 112, v11);
  uint64_t v13 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v13;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ListView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[5];
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = v4;
  a1[6] = a2[6];
  sub_1000C1E18(a1 + 7, a2 + 7);
  uint64_t v5 = a2[13];
  a1[12] = a2[12];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[13] = v5;
  sub_1000C1E18(a1 + 14, a2 + 14);
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ListView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_unknownObjectRelease();
  *(void *)(a1 + 104) = v8;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 112);
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100AF3AB8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100AF3AD4()
{
  unint64_t result = qword_100EB03E8;
  if (!qword_100EB03E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB03E8);
  }
  return result;
}

uint64_t type metadata accessor for ListView.ListContentView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB0590);
}

uint64_t type metadata accessor for ListView.ListBackgroundView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB0690);
}

uint64_t sub_100AF3B6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E662F0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  double v14 = (char *)&v24 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - v16;
  type metadata accessor for ListViewTipStyleModifier(0);
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v1);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v1);
  uint64_t v18 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_1001E4B50((uint64_t)v17, (uint64_t)v8, &qword_100E65ED8);
  sub_1001E4B50((uint64_t)v14, v18, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v1) != 1)
  {
    sub_1001E4B50((uint64_t)v8, (uint64_t)v11, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v18, v1);
      sub_100231190((uint64_t)&qword_100E65F28);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v2 + 8);
      v20(v4, v1);
      sub_100178200((uint64_t)v14, &qword_100E65ED8);
      sub_100178200((uint64_t)v17, &qword_100E65ED8);
      v20(v11, v1);
      sub_100178200((uint64_t)v8, &qword_100E65ED8);
      if (v19) {
        goto LABEL_8;
      }
LABEL_9:
      swift_beginAccess();
      uint64_t v21 = sub_10056DDE8();
      goto LABEL_10;
    }
    sub_100178200((uint64_t)v14, &qword_100E65ED8);
    sub_100178200((uint64_t)v17, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
LABEL_6:
    sub_100178200((uint64_t)v8, &qword_100E662F0);
    goto LABEL_9;
  }
  sub_100178200((uint64_t)v14, &qword_100E65ED8);
  sub_100178200((uint64_t)v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v18, 1, v1) != 1) {
    goto LABEL_6;
  }
  sub_100178200((uint64_t)v8, &qword_100E65ED8);
LABEL_8:
  swift_beginAccess();
  uint64_t v21 = sub_10056DE74();
LABEL_10:
  uint64_t v22 = v21;
  uint64_t result = swift_endAccess();
  *uint64_t v24 = v22;
  return result;
}

uint64_t sub_100AF3F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v109 = a2;
  uint64_t v2 = type metadata accessor for ColorScheme();
  uint64_t v107 = *(void *)(v2 - 8);
  uint64_t v108 = v2;
  __chkstk_darwin(v2);
  uint64_t v106 = (char *)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (_OWORD *)((char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10017DF08(&qword_100EB0D38);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10017DF08(&qword_100EB0D40);
  __chkstk_darwin(v92);
  uint64_t v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_10017DF08(&qword_100EB0D48);
  __chkstk_darwin(v93);
  uint64_t v15 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v95 = sub_10017DF08(&qword_100EB0D50);
  __chkstk_darwin(v95);
  uint64_t v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EB0D58);
  uint64_t v97 = *(void *)(v18 - 8);
  uint64_t v98 = v18;
  __chkstk_darwin(v18);
  uint64_t v96 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10017DF08(&qword_100EB0D60);
  __chkstk_darwin(v94);
  uint64_t v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_10017DF08(&qword_100EB0D68);
  __chkstk_darwin(v100);
  uint64_t v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100EB0D70);
  uint64_t v103 = *(void *)(v24 - 8);
  uint64_t v104 = v24;
  __chkstk_darwin(v24);
  uint64_t v102 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_10017DF08(&qword_100EB0D78);
  __chkstk_darwin(v99);
  uint64_t v101 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v28 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v29 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v27, v28, v29);
  __asm { FMOV            V0.2D, #16.0 }
  *uint64_t v7 = _Q0;
  uint64_t v35 = &v11[*(int *)(v9 + 44)];
  sub_100AF5A4C();
  *(_WORD *)&v35[*(int *)(sub_10017DF08(&qword_100E744A8) + 36)] = 256;
  uint64_t v36 = sub_10017DF08(&qword_100EB0D80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v11, v91, v36);
  sub_100AF5680((uint64_t)v7, (void (*)(void))&type metadata accessor for RoundedRectangle);
  LOBYTE(v27) = static Edge.Set.leading.getter();
  char v37 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v27) {
    char v37 = Edge.Set.init(rawValue:)();
  }
  uint64_t v38 = v105;
  char v39 = *(unsigned char *)(v105 + 8);
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  if ((v39 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v40 = v44;
    uint64_t v41 = v45;
    uint64_t v42 = v46;
    uint64_t v43 = v47;
  }
  sub_1001E4B50((uint64_t)v11, (uint64_t)v13, &qword_100EB0D38);
  uint64_t v48 = &v13[*(int *)(v92 + 36)];
  *uint64_t v48 = v37;
  *((void *)v48 + 1) = v40;
  *((void *)v48 + 2) = v41;
  *((void *)v48 + 3) = v42;
  *((void *)v48 + 4) = v43;
  v48[40] = v39;
  sub_100178200((uint64_t)v11, &qword_100EB0D38);
  unsigned __int8 v49 = static Edge.Set.trailing.getter();
  char v50 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v49) {
    char v50 = Edge.Set.init(rawValue:)();
  }
  char v51 = *(unsigned char *)(v38 + 24);
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  if ((v51 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v52 = v56;
    uint64_t v53 = v57;
    uint64_t v54 = v58;
    uint64_t v55 = v59;
  }
  sub_1001E4B50((uint64_t)v13, (uint64_t)v15, &qword_100EB0D40);
  uint64_t v60 = &v15[*(int *)(v93 + 36)];
  *uint64_t v60 = v50;
  *((void *)v60 + 1) = v52;
  *((void *)v60 + 2) = v53;
  *((void *)v60 + 3) = v54;
  *((void *)v60 + 4) = v55;
  v60[40] = v51;
  sub_100178200((uint64_t)v13, &qword_100EB0D40);
  unsigned __int8 v61 = static Edge.Set.bottom.getter();
  char v62 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v61) {
    char v62 = Edge.Set.init(rawValue:)();
  }
  char v63 = *(unsigned char *)(v38 + 40);
  uint64_t v64 = 0;
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  uint64_t v67 = 0;
  uint64_t v68 = v96;
  if ((v63 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v64 = v69;
    uint64_t v65 = v70;
    uint64_t v66 = v71;
    uint64_t v67 = v72;
  }
  sub_1001E4B50((uint64_t)v15, (uint64_t)v17, &qword_100EB0D48);
  uint64_t v73 = &v17[*(int *)(v95 + 36)];
  *uint64_t v73 = v62;
  *((void *)v73 + 1) = v64;
  *((void *)v73 + 2) = v65;
  *((void *)v73 + 3) = v66;
  *((void *)v73 + 4) = v67;
  v73[40] = v63;
  sub_100178200((uint64_t)v15, &qword_100EB0D48);
  static VerticalEdge.Set.all.getter();
  sub_100B017A8((uint64_t)&unk_100EB0D88);
  View.listRowSeparator(_:edges:)();
  sub_100178200((uint64_t)v17, &qword_100EB0D50);
  if (qword_100E62748 != -1) {
    swift_once();
  }
  long long v95 = xmmword_100F51D48;
  uint64_t v74 = qword_100F51D58;
  uint64_t v75 = qword_100F51D60;
  uint64_t v77 = v97;
  uint64_t v76 = v98;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v21, v68, v98);
  uint64_t v78 = &v21[*(int *)(v94 + 36)];
  *(_OWORD *)uint64_t v78 = v95;
  *((void *)v78 + 2) = v74;
  *((void *)v78 + 3) = v75;
  v78[32] = 0;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v68, v76);
  uint64_t v111 = static Color.clear.getter();
  swift_retain();
  uint64_t v79 = AnyView.init<A>(_:)();
  sub_1001E4B50((uint64_t)v21, (uint64_t)v23, &qword_100EB0D60);
  swift_release();
  *(void *)&v23[*(int *)(v100 + 36)] = v79;
  sub_100178200((uint64_t)v21, &qword_100EB0D60);
  sub_100AF3B6C(&v111);
  uint64_t v110 = v111;
  sub_100B082CC();
  uint64_t v80 = v102;
  View.tipBackground<A>(_:)();
  swift_release();
  sub_100178200((uint64_t)v23, &qword_100EB0D68);
  uint64_t v82 = v106;
  uint64_t v81 = v107;
  uint64_t v83 = v108;
  (*(void (**)(char *, void, uint64_t))(v107 + 104))(v106, enum case for ColorScheme.dark(_:), v108);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v85 = (uint64_t)v101;
  uint64_t v86 = (uint64_t *)&v101[*(int *)(v99 + 36)];
  uint64_t v87 = sub_10017DF08(&qword_100EAACE0);
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))((char *)v86 + *(int *)(v87 + 28), v82, v83);
  uint64_t *v86 = KeyPath;
  uint64_t v89 = v103;
  uint64_t v88 = v104;
  (*(void (**)(uint64_t, char *, uint64_t))(v103 + 16))(v85, v80, v104);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v83);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v80, v88);
  return sub_100B08E7C(v85, v109, &qword_100EB0D78);
}

uint64_t sub_100AF4998()
{
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001362A4();
  swift_release();
  sub_100B08E7C((uint64_t)v2, (uint64_t)v5, &qword_100E6DC08);
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    sub_100178200((uint64_t)v5, &qword_100E6DC08);
    return 0;
  }
  else
  {
    uint64_t v7 = Location.Identifier.id.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  return v7;
}

uint64_t sub_100AF4B04()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E662F0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v23 - v15;
  type metadata accessor for ScrollToActiveLocationModifier(0);
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1001E4B50((uint64_t)v16, (uint64_t)v7, &qword_100E65ED8);
  sub_1001E4B50((uint64_t)v13, v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v0) == 1)
  {
    sub_100178200((uint64_t)v13, &qword_100E65ED8);
    sub_100178200((uint64_t)v16, &qword_100E65ED8);
    int v18 = _s7Weather24LocationCompositionStateOwet_0(v17, 1, v0);
    if (v18 == 1) {
      uint64_t v19 = &qword_100E65ED8;
    }
    else {
      uint64_t v19 = &qword_100E662F0;
    }
    if (v18 == 1) {
      char v20 = -1;
    }
    else {
      char v20 = 0;
    }
  }
  else
  {
    sub_1001E4B50((uint64_t)v7, (uint64_t)v10, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
    {
      sub_100178200((uint64_t)v13, &qword_100E65ED8);
      sub_100178200((uint64_t)v16, &qword_100E65ED8);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
      char v20 = 0;
      uint64_t v19 = &qword_100E662F0;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_100231190((uint64_t)&qword_100E65F28);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v1 + 8);
      v21(v3, v0);
      uint64_t v19 = &qword_100E65ED8;
      sub_100178200((uint64_t)v13, &qword_100E65ED8);
      sub_100178200((uint64_t)v16, &qword_100E65ED8);
      v21(v10, v0);
    }
  }
  sub_100178200((uint64_t)v7, v19);
  return v20 & 1;
}

uint64_t sub_100AF4EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v17 = a2;
  uint64_t v16 = sub_10017DF08(&qword_100EB0C08);
  __chkstk_darwin(v16);
  uint64_t v3 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t active = type metadata accessor for ScrollToActiveLocationModifier(0);
  v14[1] = *(void *)(active - 8);
  __chkstk_darwin(active - 8);
  uint64_t v5 = sub_10017DF08(&qword_100EB0C10);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62668 != -1) {
    swift_once();
  }
  int v9 = byte_100F51C48;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v10((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v5);
  if (v9 == 1)
  {
    sub_100AF5A4C();
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, v8, v5);
    sub_100AF5BA8();
    *uint64_t v3 = sub_100B06DB8;
    v3[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v12;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100EB0C18);
    sub_10024D5E4((uint64_t)&unk_100EB0C20);
    sub_10024D5E4((uint64_t)&unk_100EB0C28);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    v10((char *)v3, (uint64_t)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100EB0C18);
    sub_10024D5E4((uint64_t)&unk_100EB0C20);
    sub_10024D5E4((uint64_t)&unk_100EB0C28);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_100AF5290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v14[0] = a3;
  v14[1] = a2;
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t active = type metadata accessor for ScrollToActiveLocationModifier(0);
  uint64_t v8 = *(void *)(active - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(active - 8);
  void v14[2] = sub_100AF4998();
  v14[3] = v10;
  sub_100AF4B04();
  sub_100AF5A4C();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (v9
       + *(unsigned __int8 *)(v5 + 80)
       + ((*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_100AF5BA8();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_10017DF08(&qword_100EB0C10);
  sub_10017DF08(&qword_100EB09A8);
  sub_10024D5E4((uint64_t)&unk_100EB0C28);
  sub_100B076DC((uint64_t)&unk_100EB0C30);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100AF555C()
{
  uint64_t result = sub_100AF4998();
  if (v1)
  {
    if (sub_100AF4B04())
    {
      sub_1000D765C();
      ScrollViewProxy.scrollTo<A>(_:anchor:)();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100AF5608@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isSearching.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100AF5638()
{
  return EnvironmentValues._startSearching.getter();
}

uint64_t sub_100AF565C()
{
  return EnvironmentValues.dismissSearch.getter();
}

uint64_t sub_100AF5680(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162880();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100AF56D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100AF5714(uint64_t a1, uint64_t a2)
{
  return sub_100AE4C0C(a1, a2);
}

uint64_t sub_100AF5720()
{
  return sub_100AE4C34();
}

uint64_t sub_100AF5728@<X0>(uint64_t a1@<X8>)
{
  return sub_100AE4DA4(*(void *)(v1 + 16), a1);
}

uint64_t sub_100AF5734()
{
  return sub_100AE4F08(v0 + 16);
}

uint64_t sub_100AF5740()
{
  return sub_100AE4FCC(v0 + 16);
}

unint64_t sub_100AF5748()
{
  unint64_t result = qword_100EB0470;
  if (!qword_100EB0470)
  {
    sub_10018C6DC(&qword_100EB0448);
    sub_100AF57F4();
    sub_100231190((uint64_t)&unk_100EA1558);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0470);
  }
  return result;
}

unint64_t sub_100AF57F4()
{
  unint64_t result = qword_100EB0478;
  if (!qword_100EB0478)
  {
    sub_10018C6DC(&qword_100EB0440);
    sub_10018C6DC(&qword_100EB0430);
    sub_10018C6DC(&qword_100EB0428);
    sub_10018C6DC(&qword_100EB0420);
    sub_10018C6DC(&qword_100EB0418);
    sub_10018C6DC(&qword_100EB0410);
    sub_10018C6DC(&qword_100EB0408);
    type metadata accessor for ListView.ListContentView(255);
    sub_100231190((uint64_t)&unk_100EB0460);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10021D860();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0478);
  }
  return result;
}

uint64_t type metadata accessor for ListView.VFXPlaybackCoordinatorView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB04F0);
}

uint64_t sub_100AF5A4C()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162880();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_100AF5A9C()
{
  return sub_1001087F8();
}

void sub_100AF5AA4()
{
  sub_100AE4EE0(v0 + 16, *(unsigned char *)(v0 + 192));
}

uint64_t sub_100AF5AB4@<X0>(BOOL *a1@<X8>)
{
  return sub_100AF0B00(v1 + 32, a1);
}

uint64_t sub_100AF5AC4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 88);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 144);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

unsigned char *sub_100AF5B44(unsigned char *result)
{
  if ((*result & 1) == 0) {
    return (unsigned char *)sub_10078C88C();
  }
  return result;
}

uint64_t sub_100AF5B70(uint64_t a1)
{
  return a1;
}

uint64_t sub_100AF5BA8()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162880();
  uint64_t v3 = sub_100126010();
  v4(v3);
  return v0;
}

ValueMetadata *_s48IsListLocationGeometryEffectSourceEnvironmentKeyVMa()
{
  return &_s48IsListLocationGeometryEffectSourceEnvironmentKeyVN;
}

uint64_t *sub_100AF5C08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (uint64_t *)((char *)a1 + v10);
    uint64_t v13 = (uint64_t *)((char *)a2 + v10);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
    swift_retain();
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_100AF5DB4(uint64_t a1)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_unknownObjectRelease();
}

void *sub_100AF5E84(void *a1, void *a2, uint64_t a3)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)((char *)a1 + v8);
  uint64_t v11 = (void *)((char *)a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
  swift_retain();
  swift_unknownObjectRetain();
  return a1;
}

void *sub_100AF5FE0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100178200((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_retain();
  swift_release();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v12[1] = v14;
  return a1;
}

char *sub_100AF6170(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_100AF62B0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100178200((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v13 = *(void *)v11;
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = v13;
  *((void *)v10 + 1) = v12;
  swift_release();
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *((void *)v16 + 1);
  *(void *)uint64_t v15 = *(void *)v16;
  swift_unknownObjectRelease();
  *((void *)v15 + 1) = v17;
  return a1;
}

uint64_t sub_100AF6430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AF6444);
}

uint64_t sub_100AF6444()
{
  sub_100184608();
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return sub_100163020(*(void *)(v0 + *(int *)(v2 + 20) + 8));
  }
  uint64_t v4 = sub_10018C688();

  return _s7Weather24LocationCompositionStateOwet_0(v4, v5, v6);
}

uint64_t sub_100AF64BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AF64D0);
}

void sub_100AF64D0()
{
  sub_100150288();
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v1 + 84) == v0)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v2, v3, v4, v5);
  }
  else
  {
    sub_1001A4BEC();
  }
}

void sub_100AF6544()
{
  sub_1000265D8(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100AF6600(unint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v14 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = v6[5];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(v3 + v9);
    sub_10017DF08(&qword_100E82B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t started = type metadata accessor for StartSearchAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(started - 8) + 16))(v10, v11, started);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = v6[6];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(v3 + v15);
    sub_10017DF08(&qword_100E82B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for DismissSearchAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = v6[7];
    char v20 = (void *)(a1 + v19);
    uint64_t v21 = (void *)(v3 + v19);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
    }
    else
    {
      *char v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = v6[8];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(v3 + v24);
    sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = v6[9];
    uint64_t v29 = (char *)(a1 + v28);
    int v30 = (char *)(v3 + v28);
    char v31 = (int *)type metadata accessor for ListLocationViewModel(0);
    uint64_t v277 = v3;
    unint64_t v278 = a1;
    uint64_t v276 = v6;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v31))
    {
      uint64_t v32 = sub_10017DF08(&qword_100E85F58);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      uint64_t v33 = type metadata accessor for LocationModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
      uint64_t v34 = v31[5];
      uint64_t v35 = &v29[v34];
      uint64_t v36 = &v30[v34];
      *(void *)uint64_t v35 = *(void *)v36;
      char v35[8] = v36[8];
      uint64_t v37 = v31[6];
      uint64_t v38 = &v29[v37];
      char v39 = &v30[v37];
      uint64_t v40 = *((void *)v39 + 1);
      *(void *)uint64_t v38 = *(void *)v39;
      *((void *)v38 + 1) = v40;
      uint64_t v41 = v31[7];
      uint64_t v42 = &v29[v41];
      uint64_t v43 = &v30[v41];
      type metadata accessor for ListLocationRowPrimaryText(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v44 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
        {
          uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
        }
      }
      else
      {
        uint64_t v46 = *((void *)v43 + 1);
        *(void *)uint64_t v42 = *(void *)v43;
        *((void *)v42 + 1) = v46;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v31[8];
      uint64_t v48 = &v29[v47];
      unsigned __int8 v49 = &v30[v47];
      uint64_t v50 = *(void *)v49;
      uint64_t v51 = *((void *)v49 + 1);
      uint64_t v52 = *((void *)v49 + 2);
      uint64_t v53 = *((void *)v49 + 3);
      char v54 = v49[32];
      sub_100193004(*(void *)v49, v51, v52, v53, v54);
      *(void *)uint64_t v48 = v50;
      *((void *)v48 + 1) = v51;
      *((void *)v48 + 2) = v52;
      *((void *)v48 + 3) = v53;
      v48[32] = v54;
      v29[v31[9]] = v30[v31[9]];
      uint64_t v55 = v31[10];
      uint64_t v56 = &v29[v55];
      uint64_t v57 = &v30[v55];
      uint64_t v58 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
      {
        uint64_t v59 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
      }
      uint64_t v60 = v31[11];
      unsigned __int8 v61 = &v29[v60];
      char v62 = &v30[v60];
      uint64_t v63 = type metadata accessor for TimeZone();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
      {
        uint64_t v64 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
      }
      uint64_t v65 = v31[12];
      uint64_t v66 = &v29[v65];
      uint64_t v67 = &v30[v65];
      uint64_t v283 = *((void *)v67 + 1);
      *(void *)uint64_t v66 = *(void *)v67;
      *((void *)v66 + 1) = v283;
      uint64_t v68 = v31[13];
      uint64_t v69 = &v29[v68];
      uint64_t v70 = &v30[v68];
      uint64_t v281 = *((void *)v70 + 1);
      *(void *)uint64_t v69 = *(void *)v70;
      *((void *)v69 + 1) = v281;
      v29[v31[14]] = v30[v31[14]];
      uint64_t v71 = v31[15];
      uint64_t v72 = &v29[v71];
      uint64_t v73 = &v30[v71];
      uint64_t v279 = *((void *)v73 + 1);
      *(void *)uint64_t v72 = *(void *)v73;
      *((void *)v72 + 1) = v279;
      uint64_t v74 = v31[16];
      uint64_t v75 = &v29[v74];
      uint64_t v76 = &v30[v74];
      uint64_t v274 = *((void *)v76 + 1);
      *(void *)uint64_t v75 = *(void *)v76;
      *((void *)v75 + 1) = v274;
      uint64_t v77 = v31[17];
      uint64_t v78 = &v29[v77];
      uint64_t v79 = &v30[v77];
      uint64_t v80 = *((void *)v79 + 1);
      *(void *)uint64_t v78 = *(void *)v79;
      *((void *)v78 + 1) = v80;
      uint64_t v81 = v31[18];
      uint64_t v82 = &v29[v81];
      uint64_t v83 = &v30[v81];
      uint64_t v84 = *((void *)v83 + 1);
      *(void *)uint64_t v82 = *(void *)v83;
      *((void *)v82 + 1) = v84;
      uint64_t v85 = v31[19];
      uint64_t v86 = &v29[v85];
      uint64_t v87 = &v30[v85];
      uint64_t v88 = *((void *)v87 + 1);
      *(void *)uint64_t v86 = *(void *)v87;
      *((void *)v86 + 1) = v88;
      uint64_t v89 = v31[20];
      uint64_t v90 = &v29[v89];
      uint64_t v91 = &v30[v89];
      uint64_t v92 = *((void *)v91 + 1);
      *(void *)uint64_t v90 = *(void *)v91;
      *((void *)v90 + 1) = v92;
      v29[v31[21]] = v30[v31[21]];
      uint64_t v93 = v31[22];
      uint64_t v270 = &v30[v93];
      uint64_t v272 = &v29[v93];
      uint64_t v94 = type metadata accessor for WeatherConditionBackgroundModel();
      long long v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v95(v272, v270, v94);
      v29[v31[23]] = v30[v31[23]];
      v29[v31[24]] = v30[v31[24]];
      uint64_t v96 = v31[25];
      uint64_t v97 = &v29[v96];
      uint64_t v98 = &v30[v96];
      uint64_t v99 = *((void *)v98 + 1);
      *(void *)uint64_t v97 = *(void *)v98;
      *((void *)v97 + 1) = v99;
      *(void *)&v29[v31[26]] = *(void *)&v30[v31[26]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, (uint64_t)v31);
      uint64_t v3 = v277;
      a1 = v278;
      uint64_t v6 = v276;
    }
    uint64_t v100 = sub_10017DF08(&qword_100EB0530);
    *(void *)&v29[*(int *)(v100 + 28)] = *(void *)&v30[*(int *)(v100 + 28)];
    uint64_t v101 = v6[10];
    uint64_t v102 = v6[11];
    uint64_t v103 = a1 + v101;
    uint64_t v104 = v3 + v101;
    *(unsigned char *)uint64_t v103 = *(unsigned char *)v104;
    *(void *)(v103 + 8) = *(void *)(v104 + 8);
    uint64_t v105 = a1 + v102;
    uint64_t v106 = *(void *)(v3 + v102);
    uint64_t v107 = *(void *)(v3 + v102 + 8);
    char v108 = *(unsigned char *)(v3 + v102 + 16);
    swift_retain();
    swift_retain();
    sub_100195B88();
    *(void *)uint64_t v105 = v106;
    *(void *)(v105 + 8) = v107;
    *(unsigned char *)(v105 + 16) = v108;
    uint64_t v109 = v6[12];
    uint64_t v110 = v6[13];
    uint64_t v111 = (void *)(a1 + v109);
    uint64_t v112 = (void *)(v3 + v109);
    uint64_t v113 = v112[1];
    *uint64_t v111 = *v112;
    v111[1] = v113;
    uint64_t v114 = (void *)(a1 + v110);
    uint64_t v115 = (void *)(v3 + v110);
    uint64_t v116 = v115[1];
    *uint64_t v114 = *v115;
    v114[1] = v116;
    uint64_t v117 = v6[14];
    uint64_t v118 = a1 + v117;
    uint64_t v119 = v3 + v117;
    *(unsigned char *)(a1 + v117) = *(unsigned char *)(v3 + v117);
    unint64_t v120 = (void *)(v3 + v117 + 8);
    unint64_t v121 = *(void *)(v3 + v117 + 16);
    swift_retain();
    swift_retain();
    if (v121 >= 2)
    {
      *(void *)(v118 + 8) = *v120;
      *(void *)(v118 + 16) = v121;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v118 + 8) = *(_OWORD *)v120;
    }
    uint64_t v122 = type metadata accessor for ContentStatusBanner();
    uint64_t v123 = *(int *)(v122 + 24);
    uint64_t v124 = (void *)(v118 + v123);
    uint64_t v125 = (const void *)(v119 + v123);
    uint64_t v126 = type metadata accessor for Date();
    uint64_t v273 = v126;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v126))
    {
      uint64_t v127 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v124, v125, *(void *)(*(void *)(v127 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v126 - 8) + 16))(v124, v125, v126);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v126);
    }
    uint64_t v128 = sub_10017DF08(&qword_100E8EAB0);
    *(void *)(v118 + *(int *)(v128 + 28)) = *(void *)(v119 + *(int *)(v128 + 28));
    uint64_t v129 = v6[15];
    uint64_t v130 = v6[16];
    uint64_t v131 = a1 + v129;
    uint64_t v132 = v3 + v129;
    *(unsigned char *)uint64_t v131 = *(unsigned char *)v132;
    *(void *)(v131 + 8) = *(void *)(v132 + 8);
    long long v133 = (void *)(a1 + v130);
    char v134 = (void *)(v3 + v130);
    uint64_t v135 = v6;
    uint64_t v136 = v134[1];
    *long long v133 = *v134;
    v133[1] = v136;
    uint64_t v137 = v135[17];
    uint64_t v138 = v135[18];
    uint64_t v139 = a1 + v137;
    uint64_t v140 = v3 + v137;
    *(unsigned char *)uint64_t v139 = *(unsigned char *)v140;
    *(void *)(v139 + 8) = *(void *)(v140 + 8);
    *(void *)(a1 + v138) = *(void *)(v3 + v138);
    uint64_t v141 = v135[20];
    *(void *)(a1 + v135[19]) = *(void *)(v3 + v135[19]);
    uint64_t v142 = a1 + v141;
    uint64_t v143 = v3 + v141;
    *(void *)uint64_t v142 = *(void *)v143;
    *(unsigned char *)(v142 + 8) = *(unsigned char *)(v143 + 8);
    *(unsigned char *)(v142 + 9) = *(unsigned char *)(v143 + 9);
    *(unsigned char *)(v142 + 10) = *(unsigned char *)(v143 + 10);
    *(unsigned char *)(v142 + 11) = *(unsigned char *)(v143 + 11);
    uint64_t v280 = (int *)type metadata accessor for ListViewModel();
    uint64_t v144 = v280[8];
    uint64_t v284 = v142;
    uint64_t v145 = (char *)(v142 + v144);
    uint64_t v282 = v143;
    uint64_t v146 = (char *)(v143 + v144);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v275 = v122;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v146, 1, (uint64_t)v31))
    {
      uint64_t v147 = sub_10017DF08(&qword_100E85F58);
      memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
    }
    else
    {
      uint64_t v148 = type metadata accessor for LocationModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v145, v146, v148);
      uint64_t v149 = v31[5];
      uint64_t v150 = &v145[v149];
      uint64_t v151 = &v146[v149];
      *(void *)uint64_t v150 = *(void *)v151;
      v150[8] = v151[8];
      uint64_t v152 = v31[6];
      uint64_t v153 = &v145[v152];
      uint64_t v154 = &v146[v152];
      uint64_t v155 = *((void *)v154 + 1);
      *(void *)uint64_t v153 = *(void *)v154;
      *((void *)v153 + 1) = v155;
      uint64_t v156 = v31[7];
      uint64_t v157 = &v145[v156];
      uint64_t v158 = &v146[v156];
      type metadata accessor for ListLocationRowPrimaryText(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v158, 1, v126))
        {
          uint64_t v159 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v157, v158, *(void *)(*(void *)(v159 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16))(v157, v158, v126);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v126);
        }
      }
      else
      {
        uint64_t v160 = *((void *)v158 + 1);
        *(void *)uint64_t v157 = *(void *)v158;
        *((void *)v157 + 1) = v160;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v161 = v31[8];
      uint64_t v162 = &v145[v161];
      uint64_t v163 = &v146[v161];
      uint64_t v164 = *(void *)v163;
      uint64_t v165 = *((void *)v163 + 1);
      uint64_t v166 = *((void *)v163 + 2);
      uint64_t v167 = *((void *)v163 + 3);
      char v168 = v163[32];
      sub_100193004(*(void *)v163, v165, v166, v167, v168);
      *(void *)uint64_t v162 = v164;
      *((void *)v162 + 1) = v165;
      *((void *)v162 + 2) = v166;
      *((void *)v162 + 3) = v167;
      v162[32] = v168;
      v145[v31[9]] = v146[v31[9]];
      uint64_t v169 = v31[10];
      uint64_t v170 = &v145[v169];
      uint64_t v171 = &v146[v169];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v146[v169], 1, v273))
      {
        uint64_t v172 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v170, v171, v273);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v273);
      }
      uint64_t v173 = v31[11];
      uint64_t v174 = &v145[v173];
      uint64_t v175 = &v146[v173];
      uint64_t v176 = type metadata accessor for TimeZone();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v176))
      {
        uint64_t v177 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v176);
      }
      uint64_t v178 = v31[12];
      uint64_t v179 = &v145[v178];
      uint64_t v180 = &v146[v178];
      uint64_t v271 = *((void *)v180 + 1);
      *(void *)uint64_t v179 = *(void *)v180;
      *((void *)v179 + 1) = v271;
      uint64_t v181 = v31[13];
      uint64_t v182 = &v145[v181];
      uint64_t v183 = &v146[v181];
      uint64_t v269 = *((void *)v183 + 1);
      *(void *)uint64_t v182 = *(void *)v183;
      *((void *)v182 + 1) = v269;
      v145[v31[14]] = v146[v31[14]];
      uint64_t v184 = v31[15];
      long long v185 = &v145[v184];
      uint64_t v186 = &v146[v184];
      uint64_t v268 = *((void *)v186 + 1);
      *(void *)long long v185 = *(void *)v186;
      *((void *)v185 + 1) = v268;
      uint64_t v187 = v31[16];
      uint64_t v188 = &v145[v187];
      uint64_t v189 = &v146[v187];
      uint64_t v267 = *((void *)v189 + 1);
      *(void *)uint64_t v188 = *(void *)v189;
      *((void *)v188 + 1) = v267;
      uint64_t v190 = v31[17];
      uint64_t v191 = &v145[v190];
      uint64_t v192 = &v146[v190];
      uint64_t v193 = *((void *)v192 + 1);
      *(void *)uint64_t v191 = *(void *)v192;
      *((void *)v191 + 1) = v193;
      uint64_t v194 = v31[18];
      uint64_t v195 = &v145[v194];
      uint64_t v196 = &v146[v194];
      uint64_t v197 = *((void *)v196 + 1);
      *(void *)uint64_t v195 = *(void *)v196;
      *((void *)v195 + 1) = v197;
      uint64_t v198 = v31[19];
      uint64_t v199 = &v145[v198];
      uint64_t v200 = &v146[v198];
      uint64_t v201 = *((void *)v200 + 1);
      *(void *)uint64_t v199 = *(void *)v200;
      *((void *)v199 + 1) = v201;
      uint64_t v202 = v31[20];
      uint64_t v203 = &v145[v202];
      uint64_t v204 = &v146[v202];
      uint64_t v205 = *((void *)v204 + 1);
      *(void *)uint64_t v203 = *(void *)v204;
      *((void *)v203 + 1) = v205;
      v145[v31[21]] = v146[v31[21]];
      uint64_t v206 = v31[22];
      uint64_t v265 = &v146[v206];
      uint64_t v266 = &v145[v206];
      uint64_t v207 = type metadata accessor for WeatherConditionBackgroundModel();
      uint64_t v208 = *(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v208(v266, v265, v207);
      v145[v31[23]] = v146[v31[23]];
      v145[v31[24]] = v146[v31[24]];
      uint64_t v209 = v31[25];
      uint64_t v210 = &v145[v209];
      uint64_t v211 = &v146[v209];
      uint64_t v212 = *((void *)v211 + 1);
      *(void *)uint64_t v210 = *(void *)v211;
      *((void *)v210 + 1) = v212;
      *(void *)&v145[v31[26]] = *(void *)&v146[v31[26]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v145, 0, 1, (uint64_t)v31);
    }
    *(void *)(v284 + v280[9]) = *(void *)(v282 + v280[9]);
    uint64_t v213 = v280[10];
    uint64_t v214 = (void *)(v284 + v213);
    long long v215 = (void *)(v282 + v213);
    uint64_t v216 = v215[1];
    void *v214 = *v215;
    v214[1] = v216;
    uint64_t v217 = v280[11];
    uint64_t v218 = (void *)(v284 + v217);
    uint64_t v219 = (void *)(v282 + v217);
    uint64_t v220 = v219[1];
    *uint64_t v218 = *v219;
    v218[1] = v220;
    *(unsigned char *)(v284 + v280[12]) = *(unsigned char *)(v282 + v280[12]);
    *(unsigned char *)(v284 + v280[13]) = *(unsigned char *)(v282 + v280[13]);
    uint64_t v221 = v280[14];
    uint64_t v222 = v284 + v221;
    uint64_t v223 = v282 + v221;
    *(unsigned char *)uint64_t v222 = *(unsigned char *)(v282 + v221);
    *(void *)(v222 + 8) = *(void *)(v282 + v221 + 8);
    uint64_t v224 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v225 = v224[6];
    uint64_t v226 = (void *)(v222 + v225);
    uint64_t v227 = (const void *)(v223 + v225);
    uint64_t v228 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v227, 1, v228))
    {
      uint64_t v229 = sub_10017DF08(&qword_100E749B0);
      memcpy(v226, v227, *(void *)(*(void *)(v229 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v228 - 8) + 16))(v226, v227, v228);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v226, 0, 1, v228);
    }
    unint64_t v14 = v278;
    uint64_t v230 = v224[7];
    uint64_t v231 = (void *)(v222 + v230);
    int v232 = (void *)(v223 + v230);
    uint64_t v233 = v232[1];
    *uint64_t v231 = *v232;
    v231[1] = v233;
    *(void *)(v222 + v224[8]) = *(void *)(v223 + v224[8]);
    *(void *)(v284 + v280[15]) = *(void *)(v282 + v280[15]);
    *(unsigned char *)(v284 + v280[16]) = *(unsigned char *)(v282 + v280[16]);
    uint64_t v234 = v280[17];
    uint64_t v235 = (void *)(v284 + v234);
    uint64_t v236 = (void *)(v282 + v234);
    uint64_t v237 = v236[1];
    *uint64_t v235 = *v236;
    v235[1] = v237;
    *(unsigned char *)(v284 + v280[18]) = *(unsigned char *)(v282 + v280[18]);
    *(unsigned char *)(v284 + v280[19]) = *(unsigned char *)(v282 + v280[19]);
    uint64_t v238 = v280[20];
    uint64_t v239 = (void *)(v284 + v238);
    uint64_t v240 = (void *)(v282 + v238);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v240, 1, v275))
    {
      uint64_t v241 = sub_10017DF08(&qword_100E63A10);
      memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
    }
    else
    {
      *(unsigned char *)uint64_t v239 = *(unsigned char *)v240;
      uint64_t v242 = v240 + 1;
      unint64_t v243 = v240[2];
      if (v243 >= 2)
      {
        v239[1] = *v242;
        v239[2] = v243;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v239 + 1) = *(_OWORD *)v242;
      }
      uint64_t v244 = *(int *)(v275 + 24);
      uint64_t v245 = (char *)v239 + v244;
      id v246 = (char *)v240 + v244;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v246, 1, v273))
      {
        uint64_t v247 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v245, v246, *(void *)(*(void *)(v247 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v245, v246, v273);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v245, 0, 1, v273);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v239, 0, 1, v275);
    }
    *(unsigned char *)(v284 + v280[21]) = *(unsigned char *)(v282 + v280[21]);
    uint64_t v248 = v280[22];
    uint64_t v249 = v284 + v248;
    uint64_t v250 = v282 + v248;
    *(unsigned char *)uint64_t v249 = *(unsigned char *)v250;
    *(_WORD *)(v249 + 1) = *(_WORD *)(v250 + 1);
    *(void *)(v249 + 8) = *(void *)(v250 + 8);
    uint64_t v251 = v276[22];
    *(void *)(v278 + v276[21]) = *(void *)(v277 + v276[21]);
    *(_OWORD *)(v278 + v251) = *(_OWORD *)(v277 + v251);
    uint64_t v252 = v276[24];
    *(void *)(v278 + v276[23]) = *(void *)(v277 + v276[23]);
    uint64_t v253 = v278 + v252;
    uint64_t v254 = v277 + v252;
    long long v255 = *(_OWORD *)(v277 + v252 + 24);
    *(_OWORD *)(v278 + v252 + 24) = v255;
    uint64_t v256 = v255;
    uint64_t v257 = **(void (***)(uint64_t, uint64_t, uint64_t))(v255 - 8);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    v257(v253, v254, v256);
    uint64_t v258 = v276[26];
    *(_OWORD *)(v278 + v276[25]) = *(_OWORD *)(v277 + v276[25]);
    uint64_t v259 = v278 + v258;
    uint64_t v260 = v277 + v258;
    long long v261 = *(_OWORD *)(v277 + v258 + 24);
    *(_OWORD *)(v278 + v258 + 24) = v261;
    uint64_t v262 = v261;
    uint64_t v263 = **(void (***)(uint64_t, uint64_t, uint64_t))(v261 - 8);
    swift_unknownObjectRetain();
    v263(v259, v260, v262);
  }
  return v14;
}

uint64_t sub_100AF7A00(uint64_t a1, int *a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_10017DF08(&qword_100E82B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t started = type metadata accessor for StartSearchAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(started - 8) + 8))(v4, started);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_10017DF08(&qword_100E82B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissSearchAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[8];
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = a1 + a2[9];
  uint64_t v13 = (int *)type metadata accessor for ListLocationViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, (uint64_t)v13))
  {
    uint64_t v14 = type metadata accessor for LocationModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
    swift_bridgeObjectRelease();
    uint64_t v15 = v12 + v13[7];
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = v12 + v13[8];
    sub_100191D78(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(unsigned char *)(v17 + 32));
    uint64_t v18 = v12 + v13[10];
    uint64_t v19 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    }
    uint64_t v20 = v12 + v13[11];
    uint64_t v21 = type metadata accessor for TimeZone();
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v12 + v13[22];
    uint64_t v23 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
    swift_bridgeObjectRelease();
  }
  sub_10017DF08(&qword_100EB0530);
  swift_release();
  swift_release();
  sub_10018F6E4();
  swift_release();
  swift_release();
  uint64_t v24 = a1 + a2[14];
  if (*(void *)(v24 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = type metadata accessor for ContentStatusBanner();
  uint64_t v26 = v24 + *(int *)(v25 + 24);
  uint64_t v27 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  }
  sub_10017DF08(&qword_100E8EAB0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = a1 + a2[20];
  uint64_t v29 = (int *)type metadata accessor for ListViewModel();
  uint64_t v30 = v28 + v29[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, (uint64_t)v13))
  {
    uint64_t v31 = type metadata accessor for LocationModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
    swift_bridgeObjectRelease();
    uint64_t v32 = v30 + v13[7];
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v27)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v32, v27);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = v30 + v13[8];
    sub_100191D78(*(void *)v33, *(void *)(v33 + 8), *(void *)(v33 + 16), *(void *)(v33 + 24), *(unsigned char *)(v33 + 32));
    uint64_t v34 = v30 + v13[10];
    if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v34, v27);
    }
    uint64_t v35 = v30 + v13[11];
    uint64_t v36 = type metadata accessor for TimeZone();
    if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = v30 + v13[22];
    uint64_t v38 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = v28 + v29[14];
  swift_bridgeObjectRelease();
  uint64_t v40 = v39 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
  uint64_t v41 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v40, 1, v41)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v28 + v29[20];
  if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v25))
  {
    if (*(void *)(v42 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v43 = v42 + *(int *)(v25 + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v43, v27);
    }
  }
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[24]);
  swift_unknownObjectRelease();
  uint64_t v44 = a1 + a2[26];

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v44);
}

uint64_t sub_100AF83E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(v4 + v8);
  sub_10017DF08(&qword_100E82B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t started = type metadata accessor for StartSearchAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(started - 8) + 16))(v9, v10, started);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(v4 + v12);
  sub_10017DF08(&qword_100E82B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DismissSearchAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(v4 + v16);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(v4 + v21);
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *uint64_t v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = a3[9];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(v4 + v25);
  uint64_t v28 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v274 = v4;
  uint64_t v275 = a1;
  uint64_t v273 = a3;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E85F58);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = type metadata accessor for LocationModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v26, v27, v30);
    uint64_t v31 = v28[5];
    uint64_t v32 = &v26[v31];
    uint64_t v33 = &v27[v31];
    *(void *)uint64_t v32 = *(void *)v33;
    v32[8] = v33[8];
    uint64_t v34 = v28[6];
    uint64_t v35 = &v26[v34];
    uint64_t v36 = &v27[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    uint64_t v38 = v28[7];
    uint64_t v39 = &v26[v38];
    uint64_t v40 = &v27[v38];
    type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v41 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
    }
    else
    {
      uint64_t v43 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = v43;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = v28[8];
    uint64_t v45 = &v26[v44];
    uint64_t v46 = &v27[v44];
    uint64_t v47 = *(void *)v46;
    uint64_t v48 = *((void *)v46 + 1);
    uint64_t v49 = *((void *)v46 + 2);
    uint64_t v50 = *((void *)v46 + 3);
    char v51 = v46[32];
    sub_100193004(*(void *)v46, v48, v49, v50, v51);
    *(void *)uint64_t v45 = v47;
    *((void *)v45 + 1) = v48;
    *((void *)v45 + 2) = v49;
    *((void *)v45 + 3) = v50;
    v45[32] = v51;
    v26[v28[9]] = v27[v28[9]];
    uint64_t v52 = v28[10];
    uint64_t v53 = &v26[v52];
    char v54 = &v27[v52];
    uint64_t v55 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
    {
      uint64_t v56 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
    }
    uint64_t v57 = v28[11];
    uint64_t v58 = &v26[v57];
    uint64_t v59 = &v27[v57];
    uint64_t v60 = type metadata accessor for TimeZone();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
    {
      uint64_t v61 = sub_10017DF08(&qword_100E6D1D8);
      memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
    }
    uint64_t v62 = v28[12];
    uint64_t v63 = &v26[v62];
    uint64_t v64 = &v27[v62];
    uint64_t v280 = *((void *)v64 + 1);
    *(void *)uint64_t v63 = *(void *)v64;
    *((void *)v63 + 1) = v280;
    uint64_t v65 = v28[13];
    uint64_t v66 = &v26[v65];
    uint64_t v67 = &v27[v65];
    uint64_t v278 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v278;
    v26[v28[14]] = v27[v28[14]];
    uint64_t v68 = v28[15];
    uint64_t v69 = &v26[v68];
    uint64_t v70 = &v27[v68];
    uint64_t v276 = *((void *)v70 + 1);
    *(void *)uint64_t v69 = *(void *)v70;
    *((void *)v69 + 1) = v276;
    uint64_t v71 = v28[16];
    uint64_t v72 = &v26[v71];
    uint64_t v73 = &v27[v71];
    uint64_t v271 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v271;
    uint64_t v74 = v28[17];
    uint64_t v75 = &v26[v74];
    uint64_t v76 = &v27[v74];
    uint64_t v77 = *((void *)v76 + 1);
    *(void *)uint64_t v75 = *(void *)v76;
    *((void *)v75 + 1) = v77;
    uint64_t v78 = v28[18];
    uint64_t v79 = &v26[v78];
    uint64_t v80 = &v27[v78];
    uint64_t v81 = *((void *)v80 + 1);
    *(void *)uint64_t v79 = *(void *)v80;
    *((void *)v79 + 1) = v81;
    uint64_t v82 = v28[19];
    uint64_t v83 = &v26[v82];
    uint64_t v84 = &v27[v82];
    uint64_t v85 = *((void *)v84 + 1);
    *(void *)uint64_t v83 = *(void *)v84;
    *((void *)v83 + 1) = v85;
    uint64_t v86 = v28[20];
    uint64_t v87 = &v26[v86];
    uint64_t v88 = &v27[v86];
    uint64_t v89 = *((void *)v88 + 1);
    *(void *)uint64_t v87 = *(void *)v88;
    *((void *)v87 + 1) = v89;
    v26[v28[21]] = v27[v28[21]];
    uint64_t v90 = v28[22];
    uint64_t v267 = &v27[v90];
    uint64_t v269 = &v26[v90];
    uint64_t v91 = type metadata accessor for WeatherConditionBackgroundModel();
    uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v92(v269, v267, v91);
    v26[v28[23]] = v27[v28[23]];
    v26[v28[24]] = v27[v28[24]];
    uint64_t v93 = v28[25];
    uint64_t v94 = &v26[v93];
    long long v95 = &v27[v93];
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)uint64_t v94 = *(void *)v95;
    *((void *)v94 + 1) = v96;
    *(void *)&v26[v28[26]] = *(void *)&v27[v28[26]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
    uint64_t v4 = v274;
    a1 = v275;
    a3 = v273;
  }
  uint64_t v97 = sub_10017DF08(&qword_100EB0530);
  *(void *)&v26[*(int *)(v97 + 28)] = *(void *)&v27[*(int *)(v97 + 28)];
  uint64_t v98 = a3[10];
  uint64_t v99 = a3[11];
  uint64_t v100 = a1 + v98;
  uint64_t v101 = v4 + v98;
  *(unsigned char *)uint64_t v100 = *(unsigned char *)v101;
  *(void *)(v100 + 8) = *(void *)(v101 + 8);
  uint64_t v102 = a1 + v99;
  uint64_t v103 = *(void *)(v4 + v99);
  uint64_t v104 = *(void *)(v4 + v99 + 8);
  char v105 = *(unsigned char *)(v4 + v99 + 16);
  swift_retain();
  swift_retain();
  sub_100195B88();
  *(void *)uint64_t v102 = v103;
  *(void *)(v102 + 8) = v104;
  *(unsigned char *)(v102 + 16) = v105;
  uint64_t v106 = a3[12];
  uint64_t v107 = a3[13];
  char v108 = (void *)(a1 + v106);
  uint64_t v109 = (void *)(v4 + v106);
  uint64_t v110 = v109[1];
  *char v108 = *v109;
  v108[1] = v110;
  uint64_t v111 = (void *)(a1 + v107);
  uint64_t v112 = (void *)(v4 + v107);
  uint64_t v113 = v112[1];
  *uint64_t v111 = *v112;
  v111[1] = v113;
  uint64_t v114 = a3[14];
  uint64_t v115 = a1 + v114;
  uint64_t v116 = v4 + v114;
  *(unsigned char *)(a1 + v114) = *(unsigned char *)(v4 + v114);
  uint64_t v117 = (void *)(v4 + v114 + 8);
  unint64_t v118 = *(void *)(v4 + v114 + 16);
  swift_retain();
  swift_retain();
  if (v118 >= 2)
  {
    *(void *)(v115 + 8) = *v117;
    *(void *)(v115 + 16) = v118;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v115 + 8) = *(_OWORD *)v117;
  }
  uint64_t v119 = type metadata accessor for ContentStatusBanner();
  uint64_t v120 = *(int *)(v119 + 24);
  unint64_t v121 = (void *)(v115 + v120);
  uint64_t v122 = (const void *)(v116 + v120);
  uint64_t v123 = type metadata accessor for Date();
  uint64_t v270 = v123;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
  {
    uint64_t v124 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
  }
  uint64_t v125 = sub_10017DF08(&qword_100E8EAB0);
  *(void *)(v115 + *(int *)(v125 + 28)) = *(void *)(v116 + *(int *)(v125 + 28));
  uint64_t v126 = a3[15];
  uint64_t v127 = a3[16];
  uint64_t v128 = a1 + v126;
  uint64_t v129 = v4 + v126;
  *(unsigned char *)uint64_t v128 = *(unsigned char *)v129;
  *(void *)(v128 + 8) = *(void *)(v129 + 8);
  uint64_t v130 = (void *)(a1 + v127);
  uint64_t v131 = (void *)(v4 + v127);
  uint64_t v132 = a3;
  uint64_t v133 = v131[1];
  *uint64_t v130 = *v131;
  v130[1] = v133;
  uint64_t v134 = v132[17];
  uint64_t v135 = v132[18];
  uint64_t v136 = a1 + v134;
  uint64_t v137 = v4 + v134;
  *(unsigned char *)uint64_t v136 = *(unsigned char *)v137;
  *(void *)(v136 + 8) = *(void *)(v137 + 8);
  *(void *)(a1 + v135) = *(void *)(v4 + v135);
  uint64_t v138 = v132[20];
  *(void *)(a1 + v132[19]) = *(void *)(v4 + v132[19]);
  uint64_t v139 = a1 + v138;
  uint64_t v140 = v4 + v138;
  *(void *)uint64_t v139 = *(void *)v140;
  *(unsigned char *)(v139 + 8) = *(unsigned char *)(v140 + 8);
  *(unsigned char *)(v139 + 9) = *(unsigned char *)(v140 + 9);
  *(unsigned char *)(v139 + 10) = *(unsigned char *)(v140 + 10);
  *(unsigned char *)(v139 + 11) = *(unsigned char *)(v140 + 11);
  uint64_t v277 = (int *)type metadata accessor for ListViewModel();
  uint64_t v141 = v277[8];
  uint64_t v281 = v139;
  uint64_t v142 = (char *)(v139 + v141);
  uint64_t v279 = v140;
  uint64_t v143 = (char *)(v140 + v141);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v272 = v119;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, (uint64_t)v28))
  {
    uint64_t v144 = sub_10017DF08(&qword_100E85F58);
    memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
  }
  else
  {
    uint64_t v145 = type metadata accessor for LocationModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16))(v142, v143, v145);
    uint64_t v146 = v28[5];
    uint64_t v147 = &v142[v146];
    uint64_t v148 = &v143[v146];
    *(void *)uint64_t v147 = *(void *)v148;
    v147[8] = v148[8];
    uint64_t v149 = v28[6];
    uint64_t v150 = &v142[v149];
    uint64_t v151 = &v143[v149];
    uint64_t v152 = *((void *)v151 + 1);
    *(void *)uint64_t v150 = *(void *)v151;
    *((void *)v150 + 1) = v152;
    uint64_t v153 = v28[7];
    uint64_t v154 = &v142[v153];
    uint64_t v155 = &v143[v153];
    type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v123))
      {
        uint64_t v156 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v154, v155, v123);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v123);
      }
    }
    else
    {
      uint64_t v157 = *((void *)v155 + 1);
      *(void *)uint64_t v154 = *(void *)v155;
      *((void *)v154 + 1) = v157;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v158 = v28[8];
    uint64_t v159 = &v142[v158];
    uint64_t v160 = &v143[v158];
    uint64_t v161 = *(void *)v160;
    uint64_t v162 = *((void *)v160 + 1);
    uint64_t v163 = *((void *)v160 + 2);
    uint64_t v164 = *((void *)v160 + 3);
    char v165 = v160[32];
    sub_100193004(*(void *)v160, v162, v163, v164, v165);
    *(void *)uint64_t v159 = v161;
    *((void *)v159 + 1) = v162;
    *((void *)v159 + 2) = v163;
    *((void *)v159 + 3) = v164;
    v159[32] = v165;
    v142[v28[9]] = v143[v28[9]];
    uint64_t v166 = v28[10];
    uint64_t v167 = &v142[v166];
    char v168 = &v143[v166];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v143[v166], 1, v270))
    {
      uint64_t v169 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16))(v167, v168, v270);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v270);
    }
    uint64_t v170 = v28[11];
    uint64_t v171 = &v142[v170];
    uint64_t v172 = &v143[v170];
    uint64_t v173 = type metadata accessor for TimeZone();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v173))
    {
      uint64_t v174 = sub_10017DF08(&qword_100E6D1D8);
      memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v173);
    }
    uint64_t v175 = v28[12];
    uint64_t v176 = &v142[v175];
    uint64_t v177 = &v143[v175];
    uint64_t v268 = *((void *)v177 + 1);
    *(void *)uint64_t v176 = *(void *)v177;
    *((void *)v176 + 1) = v268;
    uint64_t v178 = v28[13];
    uint64_t v179 = &v142[v178];
    uint64_t v180 = &v143[v178];
    uint64_t v266 = *((void *)v180 + 1);
    *(void *)uint64_t v179 = *(void *)v180;
    *((void *)v179 + 1) = v266;
    v142[v28[14]] = v143[v28[14]];
    uint64_t v181 = v28[15];
    uint64_t v182 = &v142[v181];
    uint64_t v183 = &v143[v181];
    uint64_t v265 = *((void *)v183 + 1);
    *(void *)uint64_t v182 = *(void *)v183;
    *((void *)v182 + 1) = v265;
    uint64_t v184 = v28[16];
    long long v185 = &v142[v184];
    uint64_t v186 = &v143[v184];
    uint64_t v264 = *((void *)v186 + 1);
    *(void *)long long v185 = *(void *)v186;
    *((void *)v185 + 1) = v264;
    uint64_t v187 = v28[17];
    uint64_t v188 = &v142[v187];
    uint64_t v189 = &v143[v187];
    uint64_t v190 = *((void *)v189 + 1);
    *(void *)uint64_t v188 = *(void *)v189;
    *((void *)v188 + 1) = v190;
    uint64_t v191 = v28[18];
    uint64_t v192 = &v142[v191];
    uint64_t v193 = &v143[v191];
    uint64_t v194 = *((void *)v193 + 1);
    *(void *)uint64_t v192 = *(void *)v193;
    *((void *)v192 + 1) = v194;
    uint64_t v195 = v28[19];
    uint64_t v196 = &v142[v195];
    uint64_t v197 = &v143[v195];
    uint64_t v198 = *((void *)v197 + 1);
    *(void *)uint64_t v196 = *(void *)v197;
    *((void *)v196 + 1) = v198;
    uint64_t v199 = v28[20];
    uint64_t v200 = &v142[v199];
    uint64_t v201 = &v143[v199];
    uint64_t v202 = *((void *)v201 + 1);
    *(void *)uint64_t v200 = *(void *)v201;
    *((void *)v200 + 1) = v202;
    v142[v28[21]] = v143[v28[21]];
    uint64_t v203 = v28[22];
    uint64_t v262 = &v143[v203];
    uint64_t v263 = &v142[v203];
    uint64_t v204 = type metadata accessor for WeatherConditionBackgroundModel();
    uint64_t v205 = *(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v205(v263, v262, v204);
    v142[v28[23]] = v143[v28[23]];
    v142[v28[24]] = v143[v28[24]];
    uint64_t v206 = v28[25];
    uint64_t v207 = &v142[v206];
    uint64_t v208 = &v143[v206];
    uint64_t v209 = *((void *)v208 + 1);
    *(void *)uint64_t v207 = *(void *)v208;
    *((void *)v207 + 1) = v209;
    *(void *)&v142[v28[26]] = *(void *)&v143[v28[26]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, (uint64_t)v28);
  }
  *(void *)(v281 + v277[9]) = *(void *)(v279 + v277[9]);
  uint64_t v210 = v277[10];
  uint64_t v211 = (void *)(v281 + v210);
  uint64_t v212 = (void *)(v279 + v210);
  uint64_t v213 = v212[1];
  *uint64_t v211 = *v212;
  v211[1] = v213;
  uint64_t v214 = v277[11];
  long long v215 = (void *)(v281 + v214);
  uint64_t v216 = (void *)(v279 + v214);
  uint64_t v217 = v216[1];
  void *v215 = *v216;
  v215[1] = v217;
  *(unsigned char *)(v281 + v277[12]) = *(unsigned char *)(v279 + v277[12]);
  *(unsigned char *)(v281 + v277[13]) = *(unsigned char *)(v279 + v277[13]);
  uint64_t v218 = v277[14];
  uint64_t v219 = v281 + v218;
  uint64_t v220 = v279 + v218;
  *(unsigned char *)uint64_t v219 = *(unsigned char *)(v279 + v218);
  *(void *)(v219 + 8) = *(void *)(v279 + v218 + 8);
  uint64_t v221 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v222 = v221[6];
  uint64_t v223 = (void *)(v219 + v222);
  uint64_t v224 = (const void *)(v220 + v222);
  uint64_t v225 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v225))
  {
    uint64_t v226 = sub_10017DF08(&qword_100E749B0);
    memcpy(v223, v224, *(void *)(*(void *)(v226 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v225 - 8) + 16))(v223, v224, v225);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v225);
  }
  uint64_t v227 = v221[7];
  uint64_t v228 = (void *)(v219 + v227);
  uint64_t v229 = (void *)(v220 + v227);
  uint64_t v230 = v229[1];
  *uint64_t v228 = *v229;
  v228[1] = v230;
  *(void *)(v219 + v221[8]) = *(void *)(v220 + v221[8]);
  *(void *)(v281 + v277[15]) = *(void *)(v279 + v277[15]);
  *(unsigned char *)(v281 + v277[16]) = *(unsigned char *)(v279 + v277[16]);
  uint64_t v231 = v277[17];
  int v232 = (void *)(v281 + v231);
  uint64_t v233 = (void *)(v279 + v231);
  uint64_t v234 = v233[1];
  *int v232 = *v233;
  v232[1] = v234;
  *(unsigned char *)(v281 + v277[18]) = *(unsigned char *)(v279 + v277[18]);
  *(unsigned char *)(v281 + v277[19]) = *(unsigned char *)(v279 + v277[19]);
  uint64_t v235 = v277[20];
  uint64_t v236 = (void *)(v281 + v235);
  uint64_t v237 = (void *)(v279 + v235);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v272))
  {
    uint64_t v238 = sub_10017DF08(&qword_100E63A10);
    memcpy(v236, v237, *(void *)(*(void *)(v238 - 8) + 64));
  }
  else
  {
    *(unsigned char *)uint64_t v236 = *(unsigned char *)v237;
    uint64_t v239 = v237 + 1;
    unint64_t v240 = v237[2];
    if (v240 >= 2)
    {
      v236[1] = *v239;
      v236[2] = v240;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v236 + 1) = *(_OWORD *)v239;
    }
    uint64_t v241 = *(int *)(v272 + 24);
    uint64_t v242 = (char *)v236 + v241;
    unint64_t v243 = (char *)v237 + v241;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v270))
    {
      uint64_t v244 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16))(v242, v243, v270);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v270);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v272);
  }
  *(unsigned char *)(v281 + v277[21]) = *(unsigned char *)(v279 + v277[21]);
  uint64_t v245 = v277[22];
  uint64_t v246 = v281 + v245;
  uint64_t v247 = v279 + v245;
  *(unsigned char *)uint64_t v246 = *(unsigned char *)v247;
  *(_WORD *)(v246 + 1) = *(_WORD *)(v247 + 1);
  *(void *)(v246 + 8) = *(void *)(v247 + 8);
  uint64_t v248 = v273[22];
  *(void *)(v275 + v273[21]) = *(void *)(v274 + v273[21]);
  *(_OWORD *)(v275 + v248) = *(_OWORD *)(v274 + v248);
  uint64_t v249 = v273[24];
  *(void *)(v275 + v273[23]) = *(void *)(v274 + v273[23]);
  uint64_t v250 = v275 + v249;
  uint64_t v251 = v274 + v249;
  long long v252 = *(_OWORD *)(v274 + v249 + 24);
  *(_OWORD *)(v275 + v249 + 24) = v252;
  uint64_t v253 = v252;
  uint64_t v254 = **(void (***)(uint64_t, uint64_t, uint64_t))(v252 - 8);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  v254(v250, v251, v253);
  uint64_t v255 = v273[26];
  *(_OWORD *)(v275 + v273[25]) = *(_OWORD *)(v274 + v273[25]);
  uint64_t v256 = v275 + v255;
  uint64_t v257 = v274 + v255;
  long long v258 = *(_OWORD *)(v274 + v255 + 24);
  *(_OWORD *)(v275 + v255 + 24) = v258;
  uint64_t v259 = v258;
  uint64_t v260 = **(void (***)(uint64_t, uint64_t, uint64_t))(v258 - 8);
  swift_unknownObjectRetain();
  v260(v256, v257, v259);
  return v275;
}

uint64_t sub_100AF9798(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != v4)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(v4 + v10);
    sub_100178200(a1 + v10, &qword_100E82B20);
    sub_10017DF08(&qword_100E82B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t started = type metadata accessor for StartSearchAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(started - 8) + 16))(v11, v12, started);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(v4 + v14);
    sub_100178200(a1 + v14, &qword_100E82B28);
    sub_10017DF08(&qword_100E82B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for DismissSearchAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(v4 + v18);
    sub_100178200(a1 + v18, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[8];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(v4 + v23);
    sub_100178200(a1 + v23, &qword_100EAA740);
    sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = (unsigned char *)(a1 + v27);
  uint64_t v29 = (unsigned char *)(v4 + v27);
  uint64_t v30 = (int *)type metadata accessor for ListLocationViewModel(0);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30);
  uint64_t v418 = v4;
  uint64_t v419 = v30;
  uint64_t v417 = a3;
  if (!v31)
  {
    if (v32)
    {
      sub_100AF5680((uint64_t)v28, (void (*)(void))type metadata accessor for ListLocationViewModel);
      goto LABEL_24;
    }
    uint64_t v47 = a3;
    uint64_t v48 = type metadata accessor for LocationModel();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 24))(v28, v29, v48);
    uint64_t v49 = v30[5];
    uint64_t v50 = &v28[v49];
    char v51 = &v29[v49];
    char v52 = v51[8];
    *(void *)uint64_t v50 = *(void *)v51;
    v50[8] = v52;
    uint64_t v53 = v30[6];
    char v54 = &v28[v53];
    uint64_t v55 = &v29[v53];
    *char v54 = *v55;
    v54[1] = v55[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (a1 != v4)
    {
      uint64_t v56 = v30[7];
      uint64_t v57 = &v28[v56];
      uint64_t v58 = &v29[v56];
      sub_100AF5680((uint64_t)&v28[v56], (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
      type metadata accessor for ListLocationRowPrimaryText(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v59 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
        {
          uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
        }
      }
      else
      {
        *uint64_t v57 = *v58;
        v57[1] = v58[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v108 = a1;
    uint64_t v109 = v30[8];
    uint64_t v110 = &v28[v109];
    uint64_t v111 = &v29[v109];
    uint64_t v112 = *(void *)v111;
    uint64_t v113 = *((void *)v111 + 1);
    uint64_t v114 = *((void *)v111 + 2);
    uint64_t v115 = *((void *)v111 + 3);
    char v116 = v111[32];
    sub_100193004(*(void *)v111, v113, v114, v115, v116);
    uint64_t v117 = *(void *)v110;
    uint64_t v118 = *((void *)v110 + 1);
    uint64_t v119 = *((void *)v110 + 2);
    uint64_t v120 = *((void *)v110 + 3);
    *(void *)uint64_t v110 = v112;
    *((void *)v110 + 1) = v113;
    *((void *)v110 + 2) = v114;
    *((void *)v110 + 3) = v115;
    char v121 = v110[32];
    v110[32] = v116;
    sub_100191D78(v117, v118, v119, v120, v121);
    v28[v419[9]] = v29[v419[9]];
    uint64_t v122 = v419[10];
    uint64_t v123 = &v28[v122];
    uint64_t v124 = &v29[v122];
    uint64_t v125 = type metadata accessor for Date();
    LODWORD(v112) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, v125);
    int v126 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125);
    if (v112)
    {
      if (!v126)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v127 = *(void *)(v125 - 8);
      if (!v126)
      {
        (*(void (**)(char *, char *, uint64_t))(v127 + 24))(v123, v124, v125);
LABEL_47:
        a1 = v108;
        uint64_t v129 = v419[11];
        uint64_t v130 = &v28[v129];
        uint64_t v131 = &v29[v129];
        uint64_t v132 = type metadata accessor for TimeZone();
        int v133 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v132);
        int v134 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132);
        if (v133)
        {
          if (!v134)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v130, v131, v132);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
LABEL_53:
            uint64_t v4 = v418;
            a3 = v47;
            uint64_t v137 = v419[12];
            uint64_t v138 = &v28[v137];
            uint64_t v139 = &v29[v137];
            *uint64_t v138 = *v139;
            v138[1] = v139[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v140 = v419[13];
            uint64_t v141 = &v28[v140];
            uint64_t v142 = &v29[v140];
            *uint64_t v141 = *v142;
            v141[1] = v142[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v28[v419[14]] = v29[v419[14]];
            uint64_t v143 = v419[15];
            uint64_t v144 = &v28[v143];
            uint64_t v145 = &v29[v143];
            void *v144 = *v145;
            v144[1] = v145[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v146 = v419[16];
            uint64_t v147 = &v28[v146];
            uint64_t v148 = &v29[v146];
            void *v147 = *v148;
            v147[1] = v148[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v149 = v419[17];
            uint64_t v150 = &v28[v149];
            uint64_t v151 = &v29[v149];
            *uint64_t v150 = *v151;
            v150[1] = v151[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v152 = v419[18];
            uint64_t v153 = &v28[v152];
            uint64_t v154 = &v29[v152];
            *uint64_t v153 = *v154;
            v153[1] = v154[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v155 = v419[19];
            uint64_t v156 = &v28[v155];
            uint64_t v157 = &v29[v155];
            void *v156 = *v157;
            v156[1] = v157[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v158 = v419[20];
            uint64_t v159 = &v28[v158];
            uint64_t v160 = &v29[v158];
            *uint64_t v159 = *v160;
            v159[1] = v160[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v28[v419[21]] = v29[v419[21]];
            uint64_t v161 = v419[22];
            uint64_t v162 = &v28[v161];
            uint64_t v163 = &v29[v161];
            uint64_t v164 = type metadata accessor for WeatherConditionBackgroundModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 24))(v162, v163, v164);
            v28[v419[23]] = v29[v419[23]];
            v28[v419[24]] = v29[v419[24]];
            uint64_t v165 = v419[25];
            uint64_t v166 = &v28[v165];
            uint64_t v167 = &v29[v165];
            void *v166 = *v167;
            v166[1] = v167[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)&v28[v419[26]] = *(void *)&v29[v419[26]];
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v135 = *(void *)(v132 - 8);
          if (!v134)
          {
            (*(void (**)(char *, char *, uint64_t))(v135 + 24))(v130, v131, v132);
            goto LABEL_53;
          }
          (*(void (**)(char *, uint64_t))(v135 + 8))(v130, v132);
        }
        uint64_t v136 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v130, v131, *(void *)(*(void *)(v136 - 8) + 64));
        goto LABEL_53;
      }
      (*(void (**)(char *, uint64_t))(v127 + 8))(v123, v125);
    }
    uint64_t v128 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v123, v124, *(void *)(*(void *)(v128 - 8) + 64));
    goto LABEL_47;
  }
  if (v32)
  {
LABEL_24:
    uint64_t v46 = sub_10017DF08(&qword_100E85F58);
    memcpy(v28, v29, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_54;
  }
  uint64_t v33 = type metadata accessor for LocationModel();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
  uint64_t v34 = v30[5];
  uint64_t v35 = &v28[v34];
  uint64_t v36 = &v29[v34];
  char v37 = v36[8];
  *(void *)uint64_t v35 = *(void *)v36;
  char v35[8] = v37;
  uint64_t v38 = v30[6];
  uint64_t v39 = &v28[v38];
  uint64_t v40 = &v29[v38];
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  uint64_t v41 = v30[7];
  uint64_t v42 = &v28[v41];
  uint64_t v43 = &v29[v41];
  type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain();
  uint64_t v412 = a1;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
    {
      uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
    }
  }
  else
  {
    *uint64_t v42 = *v43;
    v42[1] = v43[1];
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = v30[8];
  uint64_t v62 = &v28[v61];
  uint64_t v63 = &v29[v61];
  uint64_t v64 = *(void *)v63;
  uint64_t v65 = *((void *)v63 + 1);
  uint64_t v66 = *((void *)v63 + 2);
  uint64_t v67 = *((void *)v63 + 3);
  char v68 = v63[32];
  sub_100193004(*(void *)v63, v65, v66, v67, v68);
  *(void *)uint64_t v62 = v64;
  *((void *)v62 + 1) = v65;
  *((void *)v62 + 2) = v66;
  *((void *)v62 + 3) = v67;
  v62[32] = v68;
  v28[v419[9]] = v29[v419[9]];
  uint64_t v69 = v419[10];
  uint64_t v70 = &v28[v69];
  uint64_t v71 = &v29[v69];
  uint64_t v72 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
  {
    uint64_t v73 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
  }
  uint64_t v74 = v419[11];
  uint64_t v75 = &v28[v74];
  uint64_t v76 = &v29[v74];
  uint64_t v77 = type metadata accessor for TimeZone();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
  {
    uint64_t v78 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
  }
  uint64_t v79 = v419[12];
  uint64_t v80 = &v28[v79];
  uint64_t v81 = &v29[v79];
  void *v80 = *v81;
  v80[1] = v81[1];
  uint64_t v82 = v419[13];
  uint64_t v83 = &v28[v82];
  uint64_t v84 = &v29[v82];
  *uint64_t v83 = *v84;
  v83[1] = v84[1];
  v28[v419[14]] = v29[v419[14]];
  uint64_t v85 = v419[15];
  uint64_t v86 = &v28[v85];
  uint64_t v87 = &v29[v85];
  void *v86 = *v87;
  v86[1] = v87[1];
  uint64_t v88 = v419[16];
  uint64_t v89 = &v28[v88];
  uint64_t v90 = &v29[v88];
  void *v89 = *v90;
  v89[1] = v90[1];
  uint64_t v91 = v419[17];
  uint64_t v92 = &v28[v91];
  uint64_t v93 = &v29[v91];
  void *v92 = *v93;
  v92[1] = v93[1];
  uint64_t v94 = v419[18];
  long long v95 = &v28[v94];
  uint64_t v96 = &v29[v94];
  void *v95 = *v96;
  v95[1] = v96[1];
  uint64_t v97 = v419[19];
  uint64_t v98 = &v28[v97];
  uint64_t v99 = &v29[v97];
  void *v98 = *v99;
  v98[1] = v99[1];
  uint64_t v100 = v419[20];
  uint64_t v101 = &v28[v100];
  uint64_t v102 = &v29[v100];
  void *v101 = *v102;
  v101[1] = v102[1];
  v28[v419[21]] = v29[v419[21]];
  uint64_t v103 = v419[22];
  uint64_t v410 = &v29[v103];
  uint64_t v411 = &v28[v103];
  uint64_t v104 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v409 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v409(v411, v410, v104);
  v28[v419[23]] = v29[v419[23]];
  v28[v419[24]] = v29[v419[24]];
  uint64_t v105 = v419[25];
  uint64_t v106 = &v28[v105];
  uint64_t v107 = &v29[v105];
  *uint64_t v106 = *v107;
  v106[1] = v107[1];
  *(void *)&v28[v419[26]] = *(void *)&v29[v419[26]];
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v419);
  a1 = v412;
  a3 = v417;
  uint64_t v4 = v418;
LABEL_54:
  uint64_t v168 = sub_10017DF08(&qword_100EB0530);
  *(void *)&v28[*(int *)(v168 + 28)] = *(void *)&v29[*(int *)(v168 + 28)];
  swift_retain();
  swift_release();
  uint64_t v169 = a3[10];
  uint64_t v170 = a1 + v169;
  uint64_t v171 = v4 + v169;
  *(unsigned char *)uint64_t v170 = *(unsigned char *)v171;
  *(void *)(v170 + 8) = *(void *)(v171 + 8);
  swift_retain();
  swift_release();
  uint64_t v172 = a3[11];
  uint64_t v173 = a1 + v172;
  uint64_t v174 = (uint64_t *)(v4 + v172);
  uint64_t v175 = *v174;
  uint64_t v176 = v174[1];
  char v177 = *((unsigned char *)v174 + 16);
  sub_100195B88();
  *(void *)uint64_t v173 = v175;
  *(void *)(v173 + 8) = v176;
  *(unsigned char *)(v173 + 16) = v177;
  sub_10018F6E4();
  uint64_t v178 = a3[12];
  uint64_t v179 = (void *)(a1 + v178);
  uint64_t v180 = (void *)(v4 + v178);
  *uint64_t v179 = *v180;
  v179[1] = v180[1];
  swift_retain();
  swift_release();
  uint64_t v181 = a3[13];
  uint64_t v182 = (void *)(a1 + v181);
  uint64_t v183 = (void *)(v4 + v181);
  *uint64_t v182 = *v183;
  v182[1] = v183[1];
  swift_retain();
  swift_release();
  uint64_t v184 = a3[14];
  uint64_t v185 = a1 + v184;
  uint64_t v186 = v4 + v184;
  *(unsigned char *)(a1 + v184) = *(unsigned char *)(v4 + v184);
  uint64_t v187 = (_OWORD *)(a1 + v184 + 8);
  uint64_t v188 = (_OWORD *)(v4 + v184 + 8);
  unint64_t v189 = *(void *)(a1 + v184 + 16);
  unint64_t v190 = *(void *)(v4 + v184 + 16);
  if (v189 < 2)
  {
    if (v190 >= 2)
    {
      *(void *)(v185 + 8) = *(void *)(v186 + 8);
      *(void *)(v185 + 16) = *(void *)(v186 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  if (v190 < 2)
  {
    sub_10027B4D4((uint64_t)v187);
LABEL_59:
    _OWORD *v187 = *v188;
    goto LABEL_61;
  }
  *(void *)(v185 + 8) = *(void *)(v186 + 8);
  *(void *)(v185 + 16) = *(void *)(v186 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_61:
  uint64_t v416 = type metadata accessor for ContentStatusBanner();
  uint64_t v191 = *(int *)(v416 + 24);
  uint64_t v192 = (void *)(v185 + v191);
  uint64_t v193 = (const void *)(v186 + v191);
  uint64_t v194 = type metadata accessor for Date();
  int v195 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v194);
  int v196 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, v194);
  if (v195)
  {
    if (!v196)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v194 - 8) + 16))(v192, v193, v194);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v194);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  uint64_t v197 = *(void *)(v194 - 8);
  if (v196)
  {
    (*(void (**)(void *, uint64_t))(v197 + 8))(v192, v194);
LABEL_66:
    uint64_t v198 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v192, v193, *(void *)(*(void *)(v198 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(void *, const void *, uint64_t))(v197 + 24))(v192, v193, v194);
LABEL_67:
  uint64_t v199 = sub_10017DF08(&qword_100E8EAB0);
  *(void *)(v185 + *(int *)(v199 + 28)) = *(void *)(v186 + *(int *)(v199 + 28));
  swift_retain();
  swift_release();
  uint64_t v200 = a3[15];
  uint64_t v201 = a1 + v200;
  uint64_t v202 = v4 + v200;
  *(unsigned char *)uint64_t v201 = *(unsigned char *)v202;
  *(void *)(v201 + 8) = *(void *)(v202 + 8);
  swift_retain();
  swift_release();
  uint64_t v203 = a3[16];
  uint64_t v204 = a1 + v203;
  uint64_t v205 = v4 + v203;
  *(void *)(a1 + v203) = *(void *)(v4 + v203);
  swift_retain();
  swift_release();
  *(void *)(v204 + 8) = *(void *)(v205 + 8);
  swift_retain();
  swift_release();
  uint64_t v206 = a3[17];
  uint64_t v207 = a1 + v206;
  uint64_t v208 = v4 + v206;
  *(unsigned char *)uint64_t v207 = *(unsigned char *)v208;
  *(void *)(v207 + 8) = *(void *)(v208 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[18]) = *(void *)(v4 + a3[18]);
  *(void *)(a1 + a3[19]) = *(void *)(v4 + a3[19]);
  uint64_t v209 = a3[20];
  uint64_t v210 = a1 + v209;
  uint64_t v211 = (unsigned char *)(v4 + v209);
  uint64_t v212 = *(void *)(v4 + v209);
  *(unsigned char *)(v210 + 8) = v211[8];
  *(void *)uint64_t v210 = v212;
  *(unsigned char *)(v210 + 9) = v211[9];
  *(unsigned char *)(v210 + 10) = v211[10];
  *(unsigned char *)(v210 + 11) = v211[11];
  uint64_t v213 = (int *)type metadata accessor for ListViewModel();
  uint64_t v214 = v213[8];
  long long v215 = (unsigned char *)(v210 + v214);
  uint64_t v216 = &v211[v214];
  int v217 = _s7Weather24LocationCompositionStateOwet_0(v210 + v214, 1, (uint64_t)v419);
  int v218 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, (uint64_t)v419);
  uint64_t v415 = v194;
  uint64_t v420 = v213;
  if (v217)
  {
    if (!v218)
    {
      uint64_t v413 = a1;
      uint64_t v219 = type metadata accessor for LocationModel();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v219 - 8) + 16))(v215, v216, v219);
      uint64_t v220 = v419[5];
      uint64_t v221 = &v215[v220];
      uint64_t v222 = &v216[v220];
      char v223 = v222[8];
      *(void *)uint64_t v221 = *(void *)v222;
      v221[8] = v223;
      uint64_t v224 = v419[6];
      uint64_t v225 = &v215[v224];
      uint64_t v226 = &v216[v224];
      void *v225 = *v226;
      v225[1] = v226[1];
      uint64_t v227 = v419[7];
      uint64_t v228 = &v215[v227];
      uint64_t v229 = &v216[v227];
      type metadata accessor for ListLocationRowPrimaryText(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v229, 1, v194))
        {
          uint64_t v230 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v228, v229, *(void *)(*(void *)(v230 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v194 - 8) + 16))(v228, v229, v194);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v228, 0, 1, v194);
        }
      }
      else
      {
        *uint64_t v228 = *v229;
        v228[1] = v229[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v244 = v419[8];
      uint64_t v245 = &v215[v244];
      uint64_t v246 = &v216[v244];
      uint64_t v247 = *(void *)v246;
      uint64_t v248 = *((void *)v246 + 1);
      uint64_t v249 = *((void *)v246 + 2);
      uint64_t v250 = *((void *)v246 + 3);
      char v251 = v246[32];
      sub_100193004(*(void *)v246, v248, v249, v250, v251);
      *(void *)uint64_t v245 = v247;
      *((void *)v245 + 1) = v248;
      *((void *)v245 + 2) = v249;
      *((void *)v245 + 3) = v250;
      v245[32] = v251;
      v215[v419[9]] = v216[v419[9]];
      uint64_t v252 = v419[10];
      uint64_t v253 = &v215[v252];
      uint64_t v254 = &v216[v252];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v216[v252], 1, v415))
      {
        uint64_t v255 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v253, v254, *(void *)(*(void *)(v255 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v415 - 8) + 16))(v253, v254, v415);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v253, 0, 1, v415);
      }
      uint64_t v256 = v419[11];
      uint64_t v257 = &v215[v256];
      long long v258 = &v216[v256];
      uint64_t v259 = type metadata accessor for TimeZone();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v258, 1, v259))
      {
        uint64_t v260 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v257, v258, *(void *)(*(void *)(v260 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16))(v257, v258, v259);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, v259);
      }
      uint64_t v261 = v419[12];
      uint64_t v262 = &v215[v261];
      uint64_t v263 = &v216[v261];
      *uint64_t v262 = *v263;
      v262[1] = v263[1];
      uint64_t v264 = v419[13];
      uint64_t v265 = &v215[v264];
      uint64_t v266 = &v216[v264];
      *uint64_t v265 = *v266;
      v265[1] = v266[1];
      v215[v419[14]] = v216[v419[14]];
      uint64_t v267 = v419[15];
      uint64_t v268 = &v215[v267];
      uint64_t v269 = &v216[v267];
      *uint64_t v268 = *v269;
      v268[1] = v269[1];
      uint64_t v270 = v419[16];
      uint64_t v271 = &v215[v270];
      uint64_t v272 = &v216[v270];
      *uint64_t v271 = *v272;
      v271[1] = v272[1];
      uint64_t v273 = v419[17];
      uint64_t v274 = &v215[v273];
      uint64_t v275 = &v216[v273];
      *uint64_t v274 = *v275;
      v274[1] = v275[1];
      uint64_t v276 = v419[18];
      uint64_t v277 = &v215[v276];
      uint64_t v278 = &v216[v276];
      *uint64_t v277 = *v278;
      v277[1] = v278[1];
      uint64_t v279 = v419[19];
      uint64_t v280 = &v215[v279];
      uint64_t v281 = &v216[v279];
      *uint64_t v280 = *v281;
      v280[1] = v281[1];
      uint64_t v282 = v419[20];
      uint64_t v283 = &v215[v282];
      uint64_t v284 = &v216[v282];
      *uint64_t v283 = *v284;
      v283[1] = v284[1];
      v215[v419[21]] = v216[v419[21]];
      uint64_t v285 = v419[22];
      v407 = &v216[v285];
      uint64_t v408 = &v215[v285];
      uint64_t v286 = type metadata accessor for WeatherConditionBackgroundModel();
      uint64_t v406 = *(void (**)(char *, char *, uint64_t))(*(void *)(v286 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v406(v408, v407, v286);
      v215[v419[23]] = v216[v419[23]];
      v215[v419[24]] = v216[v419[24]];
      uint64_t v287 = v419[25];
      v288 = &v215[v287];
      uint64_t v289 = &v216[v287];
      void *v288 = *v289;
      v288[1] = v289[1];
      *(void *)&v215[v419[26]] = *(void *)&v216[v419[26]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v215, 0, 1, (uint64_t)v419);
      a1 = v413;
      goto LABEL_107;
    }
LABEL_74:
    uint64_t v231 = sub_10017DF08(&qword_100E85F58);
    memcpy(v215, v216, *(void *)(*(void *)(v231 - 8) + 64));
    goto LABEL_108;
  }
  if (v218)
  {
    sub_100AF5680((uint64_t)v215, (void (*)(void))type metadata accessor for ListLocationViewModel);
    goto LABEL_74;
  }
  uint64_t v232 = type metadata accessor for LocationModel();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v232 - 8) + 24))(v215, v216, v232);
  uint64_t v233 = v419[5];
  uint64_t v234 = &v215[v233];
  uint64_t v235 = &v216[v233];
  char v236 = v235[8];
  *(void *)uint64_t v234 = *(void *)v235;
  v234[8] = v236;
  uint64_t v237 = v419[6];
  uint64_t v238 = &v215[v237];
  uint64_t v239 = &v216[v237];
  *uint64_t v238 = *v239;
  v238[1] = v239[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v414 = a1;
  if (a1 != v418)
  {
    uint64_t v240 = v419[7];
    uint64_t v241 = &v215[v240];
    uint64_t v242 = &v216[v240];
    sub_100AF5680((uint64_t)&v215[v240], (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v242, 1, v415))
      {
        uint64_t v243 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v241, v242, *(void *)(*(void *)(v243 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v415 - 8) + 16))(v241, v242, v415);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v241, 0, 1, v415);
      }
    }
    else
    {
      *uint64_t v241 = *v242;
      v241[1] = v242[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v290 = v419[8];
  uint64_t v291 = &v215[v290];
  uint64_t v292 = &v216[v290];
  uint64_t v293 = *(void *)v292;
  uint64_t v294 = *((void *)v292 + 1);
  uint64_t v295 = *((void *)v292 + 2);
  uint64_t v296 = *((void *)v292 + 3);
  char v297 = v292[32];
  sub_100193004(*(void *)v292, v294, v295, v296, v297);
  uint64_t v298 = *(void *)v291;
  uint64_t v299 = *((void *)v291 + 1);
  uint64_t v300 = *((void *)v291 + 2);
  uint64_t v301 = *((void *)v291 + 3);
  *(void *)uint64_t v291 = v293;
  *((void *)v291 + 1) = v294;
  *((void *)v291 + 2) = v295;
  *((void *)v291 + 3) = v296;
  char v302 = v291[32];
  v291[32] = v297;
  sub_100191D78(v298, v299, v300, v301, v302);
  v215[v419[9]] = v216[v419[9]];
  uint64_t v303 = v419[10];
  uint64_t v304 = &v215[v303];
  uint64_t v305 = &v216[v303];
  LODWORD(v293) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v215[v303], 1, v415);
  int v306 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v305, 1, v415);
  if (v293)
  {
    if (!v306)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v415 - 8) + 16))(v304, v305, v415);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v304, 0, 1, v415);
      goto LABEL_100;
    }
    goto LABEL_99;
  }
  uint64_t v307 = *(void *)(v415 - 8);
  if (v306)
  {
    (*(void (**)(char *, uint64_t))(v307 + 8))(v304, v415);
LABEL_99:
    uint64_t v308 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v304, v305, *(void *)(*(void *)(v308 - 8) + 64));
    goto LABEL_100;
  }
  (*(void (**)(char *, char *, uint64_t))(v307 + 24))(v304, v305, v415);
LABEL_100:
  uint64_t v309 = v419[11];
  uint64_t v310 = &v215[v309];
  id v311 = &v216[v309];
  uint64_t v312 = type metadata accessor for TimeZone();
  int v313 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v310, 1, v312);
  int v314 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v311, 1, v312);
  if (!v313)
  {
    uint64_t v315 = *(void *)(v312 - 8);
    if (!v314)
    {
      (*(void (**)(char *, char *, uint64_t))(v315 + 24))(v310, v311, v312);
      goto LABEL_106;
    }
    (*(void (**)(char *, uint64_t))(v315 + 8))(v310, v312);
    goto LABEL_105;
  }
  if (v314)
  {
LABEL_105:
    uint64_t v316 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v310, v311, *(void *)(*(void *)(v316 - 8) + 64));
    goto LABEL_106;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v312 - 8) + 16))(v310, v311, v312);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v310, 0, 1, v312);
LABEL_106:
  a1 = v414;
  uint64_t v317 = v419[12];
  uint64_t v318 = &v215[v317];
  uint64_t v319 = &v216[v317];
  *uint64_t v318 = *v319;
  v318[1] = v319[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v320 = v419[13];
  int v321 = &v215[v320];
  uint64_t v322 = &v216[v320];
  *int v321 = *v322;
  v321[1] = v322[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v215[v419[14]] = v216[v419[14]];
  uint64_t v323 = v419[15];
  id v324 = &v215[v323];
  uint64_t v325 = &v216[v323];
  *id v324 = *v325;
  v324[1] = v325[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v326 = v419[16];
  uint64_t v327 = &v215[v326];
  id v328 = &v216[v326];
  *uint64_t v327 = *v328;
  v327[1] = v328[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v329 = v419[17];
  uint64_t v330 = &v215[v329];
  uint64_t v331 = &v216[v329];
  *uint64_t v330 = *v331;
  v330[1] = v331[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v332 = v419[18];
  uint64_t v333 = &v215[v332];
  uint64_t v334 = &v216[v332];
  *uint64_t v333 = *v334;
  v333[1] = v334[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v335 = v419[19];
  uint64_t v336 = &v215[v335];
  uint64_t v337 = &v216[v335];
  *uint64_t v336 = *v337;
  v336[1] = v337[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v338 = v419[20];
  uint64_t v339 = &v215[v338];
  uint64_t v340 = &v216[v338];
  *uint64_t v339 = *v340;
  v339[1] = v340[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v215[v419[21]] = v216[v419[21]];
  uint64_t v341 = v419[22];
  uint64_t v342 = &v215[v341];
  uint64_t v343 = &v216[v341];
  uint64_t v344 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v344 - 8) + 24))(v342, v343, v344);
  v215[v419[23]] = v216[v419[23]];
  v215[v419[24]] = v216[v419[24]];
  uint64_t v345 = v419[25];
  uint64_t v346 = &v215[v345];
  uint64_t v347 = &v216[v345];
  *uint64_t v346 = *v347;
  v346[1] = v347[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v215[v419[26]] = *(void *)&v216[v419[26]];
LABEL_107:
  uint64_t v213 = v420;
LABEL_108:
  *(void *)(v210 + v213[9]) = *(void *)&v211[v213[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v348 = v213[10];
  uint64_t v349 = (void *)(v210 + v348);
  long long v350 = &v211[v348];
  *uint64_t v349 = *v350;
  v349[1] = v350[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v351 = v213[11];
  uint64_t v352 = (void *)(v210 + v351);
  uint64_t v353 = &v211[v351];
  *uint64_t v352 = *v353;
  v352[1] = v353[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v210 + v213[12]) = v211[v213[12]];
  *(unsigned char *)(v210 + v213[13]) = v211[v213[13]];
  uint64_t v354 = v213[14];
  uint64_t v355 = v210 + v354;
  v356 = &v211[v354];
  *(unsigned char *)uint64_t v355 = v211[v354];
  *(void *)(v355 + 8) = *(void *)&v211[v354 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v357 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v358 = v357[6];
  unint64_t v359 = (void *)(v355 + v358);
  uint64_t v360 = &v356[v358];
  uint64_t v361 = type metadata accessor for URL();
  int v362 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v359, 1, v361);
  int v363 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v360, 1, v361);
  if (v362)
  {
    if (!v363)
    {
      (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v361 - 8) + 16))(v359, v360, v361);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v359, 0, 1, v361);
      goto LABEL_114;
    }
    goto LABEL_113;
  }
  uint64_t v364 = *(void *)(v361 - 8);
  if (v363)
  {
    (*(void (**)(void *, uint64_t))(v364 + 8))(v359, v361);
LABEL_113:
    uint64_t v365 = sub_10017DF08(&qword_100E749B0);
    memcpy(v359, v360, *(void *)(*(void *)(v365 - 8) + 64));
    goto LABEL_114;
  }
  (*(void (**)(void *, unsigned char *, uint64_t))(v364 + 24))(v359, v360, v361);
LABEL_114:
  uint64_t v366 = v357[7];
  v367 = (void *)(v355 + v366);
  uint64_t v368 = &v356[v366];
  void *v367 = *v368;
  v367[1] = v368[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v355 + v357[8]) = *(void *)&v356[v357[8]];
  swift_retain();
  swift_release();
  uint64_t v369 = v420;
  *(void *)(v210 + v420[15]) = *(void *)&v211[v420[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v210 + v420[16]) = v211[v420[16]];
  uint64_t v370 = v420[17];
  uint64_t v371 = (void *)(v210 + v370);
  uint64_t v372 = &v211[v370];
  *uint64_t v371 = *v372;
  v371[1] = v372[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v210 + v420[18]) = v211[v420[18]];
  *(unsigned char *)(v210 + v420[19]) = v211[v420[19]];
  uint64_t v373 = v420[20];
  uint64_t v374 = v210 + v373;
  uint64_t v375 = (uint64_t)&v211[v373];
  int v376 = _s7Weather24LocationCompositionStateOwet_0(v210 + v373, 1, v416);
  int v377 = _s7Weather24LocationCompositionStateOwet_0(v375, 1, v416);
  if (!v376)
  {
    if (v377)
    {
      sub_100AF5680(v374, (void (*)(void))type metadata accessor for ContentStatusBanner);
      goto LABEL_120;
    }
    *(unsigned char *)uint64_t v374 = *(unsigned char *)v375;
    unint64_t v382 = *(void *)(v375 + 16);
    if (*(void *)(v374 + 16) >= 2uLL)
    {
      if (v382 >= 2)
      {
        *(void *)(v374 + 8) = *(void *)(v375 + 8);
        *(void *)(v374 + 16) = *(void *)(v375 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_137;
      }
      sub_10027B4D4(v374 + 8);
    }
    else if (v382 >= 2)
    {
      *(void *)(v374 + 8) = *(void *)(v375 + 8);
      *(void *)(v374 + 16) = *(void *)(v375 + 16);
      swift_bridgeObjectRetain();
LABEL_137:
      uint64_t v369 = v420;
      uint64_t v400 = *(int *)(v416 + 24);
      uint64_t v401 = v374 + v400;
      uint64_t v402 = v375 + v400;
      int v403 = _s7Weather24LocationCompositionStateOwet_0(v401, 1, v415);
      int v404 = _s7Weather24LocationCompositionStateOwet_0(v402, 1, v415);
      if (v403)
      {
        if (!v404)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v415 - 8) + 16))(v401, v402, v415);
          _s7Weather24LocationCompositionStateOwst_0(v401, 0, 1, v415);
          goto LABEL_122;
        }
      }
      else
      {
        uint64_t v405 = *(void *)(v415 - 8);
        if (!v404)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v405 + 24))(v401, v402, v415);
          goto LABEL_122;
        }
        (*(void (**)(uint64_t, uint64_t))(v405 + 8))(v401, v415);
      }
      size_t v378 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
      uint64_t v379 = (void *)v401;
      v380 = (const void *)v402;
LABEL_121:
      memcpy(v379, v380, v378);
LABEL_122:
      uint64_t v381 = v418;
      goto LABEL_132;
    }
    *(_OWORD *)(v374 + 8) = *(_OWORD *)(v375 + 8);
    goto LABEL_137;
  }
  if (v377)
  {
LABEL_120:
    size_t v378 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v379 = (void *)v374;
    v380 = (const void *)v375;
    goto LABEL_121;
  }
  *(unsigned char *)uint64_t v374 = *(unsigned char *)v375;
  if (*(void *)(v375 + 16) >= 2uLL)
  {
    *(void *)(v374 + 8) = *(void *)(v375 + 8);
    *(void *)(v374 + 16) = *(void *)(v375 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v374 + 8) = *(_OWORD *)(v375 + 8);
  }
  uint64_t v383 = *(int *)(v416 + 24);
  uint64_t v384 = (void *)(v374 + v383);
  uint64_t v385 = (const void *)(v375 + v383);
  if (_s7Weather24LocationCompositionStateOwet_0(v375 + v383, 1, v415))
  {
    uint64_t v386 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v384, v385, *(void *)(*(void *)(v386 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v415 - 8) + 16))(v384, v385, v415);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v415);
  }
  uint64_t v381 = v418;
  _s7Weather24LocationCompositionStateOwst_0(v374, 0, 1, v416);
  uint64_t v369 = v420;
LABEL_132:
  *(unsigned char *)(v210 + v369[21]) = v211[v369[21]];
  uint64_t v387 = v369[22];
  uint64_t v388 = v210 + v387;
  v389 = &v211[v387];
  *(unsigned char *)uint64_t v388 = *v389;
  *(unsigned char *)(v388 + 1) = v389[1];
  *(unsigned char *)(v388 + 2) = v389[2];
  *(void *)(v388 + 8) = *((void *)v389 + 1);
  swift_retain();
  swift_release();
  uint64_t v390 = v417;
  *(void *)(a1 + v417[21]) = *(void *)(v381 + v417[21]);
  swift_retain();
  swift_release();
  uint64_t v391 = v417[22];
  uint64_t v392 = (void *)(a1 + v391);
  v393 = (void *)(v381 + v391);
  uint64_t v394 = v393[1];
  *uint64_t v392 = *v393;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v392[1] = v394;
  *(void *)(a1 + v417[23]) = *(void *)(v381 + v417[23]);
  sub_1000C1E18((uint64_t *)(a1 + v390[24]), (uint64_t *)(v381 + v390[24]));
  uint64_t v395 = v417[25];
  uint64_t v396 = (void *)(a1 + v395);
  uint64_t v397 = (void *)(v381 + v395);
  uint64_t v398 = v397[1];
  *uint64_t v396 = *v397;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v396[1] = v398;
  sub_1000C1E18((uint64_t *)(a1 + v390[26]), (uint64_t *)(v381 + v390[26]));
  return a1;
}

uint64_t sub_100AFBD38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E82B20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t started = type metadata accessor for StartSearchAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(started - 8) + 32))(v7, v8, started);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = v3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(v4 + v11);
  uint64_t v14 = sub_10017DF08(&qword_100E82B28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DismissSearchAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = v3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(v4 + v16);
  uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
    {
      uint64_t v21 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v22 = v3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(v4 + v22);
  uint64_t v25 = sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  uint64_t v27 = v3[9];
  uint64_t v28 = (char *)(a1 + v27);
  uint64_t v29 = (char *)(v4 + v27);
  uint64_t v30 = (int *)type metadata accessor for ListLocationViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
  {
    uint64_t v31 = sub_10017DF08(&qword_100E85F58);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    int v32 = v3;
    uint64_t v33 = type metadata accessor for LocationModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v28, v29, v33);
    uint64_t v34 = v30[5];
    uint64_t v35 = &v28[v34];
    uint64_t v36 = &v29[v34];
    *(void *)uint64_t v35 = *(void *)v36;
    char v35[8] = v36[8];
    *(_OWORD *)&v28[v30[6]] = *(_OWORD *)&v29[v30[6]];
    uint64_t v37 = v30[7];
    uint64_t v38 = &v28[v37];
    uint64_t v39 = &v29[v37];
    uint64_t v40 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v41 = v4;
      uint64_t v42 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v42))
      {
        uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v38, v39, v42);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v42);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v41;
    }
    else
    {
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    uint64_t v44 = v30[8];
    uint64_t v45 = &v28[v44];
    uint64_t v46 = &v29[v44];
    long long v47 = *((_OWORD *)v46 + 1);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *((_OWORD *)v45 + 1) = v47;
    v45[32] = v46[32];
    v28[v30[9]] = v29[v30[9]];
    uint64_t v48 = v30[10];
    uint64_t v49 = &v28[v48];
    uint64_t v50 = &v29[v48];
    uint64_t v51 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
    {
      uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
    }
    uint64_t v53 = v30[11];
    char v54 = &v28[v53];
    uint64_t v55 = &v29[v53];
    uint64_t v56 = type metadata accessor for TimeZone();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
    {
      uint64_t v57 = sub_10017DF08(&qword_100E6D1D8);
      memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
    }
    uint64_t v3 = v32;
    *(_OWORD *)&v28[v30[12]] = *(_OWORD *)&v29[v30[12]];
    *(_OWORD *)&v28[v30[13]] = *(_OWORD *)&v29[v30[13]];
    v28[v30[14]] = v29[v30[14]];
    *(_OWORD *)&v28[v30[15]] = *(_OWORD *)&v29[v30[15]];
    *(_OWORD *)&v28[v30[16]] = *(_OWORD *)&v29[v30[16]];
    *(_OWORD *)&v28[v30[17]] = *(_OWORD *)&v29[v30[17]];
    *(_OWORD *)&v28[v30[18]] = *(_OWORD *)&v29[v30[18]];
    *(_OWORD *)&v28[v30[19]] = *(_OWORD *)&v29[v30[19]];
    *(_OWORD *)&v28[v30[20]] = *(_OWORD *)&v29[v30[20]];
    v28[v30[21]] = v29[v30[21]];
    uint64_t v58 = v30[22];
    uint64_t v59 = &v28[v58];
    uint64_t v60 = &v29[v58];
    uint64_t v61 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
    v28[v30[23]] = v29[v30[23]];
    v28[v30[24]] = v29[v30[24]];
    *(_OWORD *)&v28[v30[25]] = *(_OWORD *)&v29[v30[25]];
    *(void *)&v28[v30[26]] = *(void *)&v29[v30[26]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
  }
  uint64_t v62 = sub_10017DF08(&qword_100EB0530);
  *(void *)&v28[*(int *)(v62 + 28)] = *(void *)&v29[*(int *)(v62 + 28)];
  uint64_t v63 = v3[11];
  *(_OWORD *)(a1 + v3[10]) = *(_OWORD *)(v4 + v3[10]);
  uint64_t v64 = a1 + v63;
  uint64_t v65 = v4 + v63;
  *(unsigned char *)(v64 + 16) = *(unsigned char *)(v65 + 16);
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  uint64_t v66 = v3[13];
  *(_OWORD *)(a1 + v3[12]) = *(_OWORD *)(v4 + v3[12]);
  *(_OWORD *)(a1 + v66) = *(_OWORD *)(v4 + v66);
  uint64_t v67 = v3[14];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = v4 + v67;
  *(unsigned char *)uint64_t v68 = *(unsigned char *)(v4 + v67);
  *(_OWORD *)(v68 + 8) = *(_OWORD *)(v4 + v67 + 8);
  uint64_t v143 = type metadata accessor for ContentStatusBanner();
  uint64_t v70 = *(int *)(v143 + 24);
  uint64_t v71 = (void *)(v68 + v70);
  uint64_t v72 = (const void *)(v69 + v70);
  uint64_t v73 = type metadata accessor for Date();
  uint64_t v142 = v73;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
  {
    uint64_t v74 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
  }
  uint64_t v75 = sub_10017DF08(&qword_100E8EAB0);
  *(void *)(v68 + *(int *)(v75 + 28)) = *(void *)(v69 + *(int *)(v75 + 28));
  uint64_t v76 = v3[16];
  *(_OWORD *)(a1 + v3[15]) = *(_OWORD *)(v4 + v3[15]);
  *(_OWORD *)(a1 + v76) = *(_OWORD *)(v4 + v76);
  uint64_t v77 = v3[18];
  *(_OWORD *)(a1 + v3[17]) = *(_OWORD *)(v4 + v3[17]);
  *(void *)(a1 + v77) = *(void *)(v4 + v77);
  uint64_t v78 = v3[20];
  uint64_t v144 = v3;
  uint64_t v145 = v4;
  *(void *)(a1 + v3[19]) = *(void *)(v4 + v3[19]);
  uint64_t v79 = a1 + v78;
  uint64_t v80 = v4 + v78;
  *(void *)uint64_t v79 = *(void *)(v4 + v78);
  *(unsigned char *)(v79 + 8) = *(unsigned char *)(v4 + v78 + 8);
  *(unsigned char *)(v79 + 9) = *(unsigned char *)(v4 + v78 + 9);
  *(unsigned char *)(v79 + 10) = *(unsigned char *)(v4 + v78 + 10);
  *(unsigned char *)(v79 + 11) = *(unsigned char *)(v4 + v78 + 11);
  uint64_t v81 = (int *)type metadata accessor for ListViewModel();
  uint64_t v82 = v81[8];
  uint64_t v83 = (char *)(v79 + v82);
  uint64_t v84 = (char *)(v80 + v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v80 + v82, 1, (uint64_t)v30))
  {
    uint64_t v85 = sub_10017DF08(&qword_100E85F58);
    memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    uint64_t v86 = type metadata accessor for LocationModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v83, v84, v86);
    uint64_t v87 = v30[5];
    uint64_t v88 = &v83[v87];
    uint64_t v89 = &v84[v87];
    *(void *)uint64_t v88 = *(void *)v89;
    v88[8] = v89[8];
    *(_OWORD *)&v83[v30[6]] = *(_OWORD *)&v84[v30[6]];
    uint64_t v90 = v30[7];
    uint64_t v91 = &v83[v90];
    uint64_t v92 = &v84[v90];
    uint64_t v93 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v142))
      {
        uint64_t v94 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v91, v92, v142);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v142);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    uint64_t v95 = v30[8];
    uint64_t v96 = &v83[v95];
    uint64_t v97 = &v84[v95];
    long long v98 = *((_OWORD *)v97 + 1);
    *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
    *((_OWORD *)v96 + 1) = v98;
    v96[32] = v97[32];
    v83[v30[9]] = v84[v30[9]];
    uint64_t v99 = v30[10];
    uint64_t v100 = &v83[v99];
    uint64_t v101 = &v84[v99];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v84[v99], 1, v142))
    {
      uint64_t v102 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v100, v101, v142);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v142);
    }
    uint64_t v103 = v30[11];
    uint64_t v104 = &v83[v103];
    uint64_t v105 = &v84[v103];
    uint64_t v106 = type metadata accessor for TimeZone();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v106))
    {
      uint64_t v107 = sub_10017DF08(&qword_100E6D1D8);
      memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v106);
    }
    *(_OWORD *)&v83[v30[12]] = *(_OWORD *)&v84[v30[12]];
    *(_OWORD *)&v83[v30[13]] = *(_OWORD *)&v84[v30[13]];
    v83[v30[14]] = v84[v30[14]];
    *(_OWORD *)&v83[v30[15]] = *(_OWORD *)&v84[v30[15]];
    *(_OWORD *)&v83[v30[16]] = *(_OWORD *)&v84[v30[16]];
    *(_OWORD *)&v83[v30[17]] = *(_OWORD *)&v84[v30[17]];
    *(_OWORD *)&v83[v30[18]] = *(_OWORD *)&v84[v30[18]];
    *(_OWORD *)&v83[v30[19]] = *(_OWORD *)&v84[v30[19]];
    *(_OWORD *)&v83[v30[20]] = *(_OWORD *)&v84[v30[20]];
    v83[v30[21]] = v84[v30[21]];
    uint64_t v108 = v30[22];
    uint64_t v109 = &v83[v108];
    uint64_t v110 = &v84[v108];
    uint64_t v111 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
    v83[v30[23]] = v84[v30[23]];
    v83[v30[24]] = v84[v30[24]];
    *(_OWORD *)&v83[v30[25]] = *(_OWORD *)&v84[v30[25]];
    *(void *)&v83[v30[26]] = *(void *)&v84[v30[26]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, (uint64_t)v30);
  }
  *(void *)(v79 + v81[9]) = *(void *)(v80 + v81[9]);
  *(_OWORD *)(v79 + v81[10]) = *(_OWORD *)(v80 + v81[10]);
  *(_OWORD *)(v79 + v81[11]) = *(_OWORD *)(v80 + v81[11]);
  *(unsigned char *)(v79 + v81[12]) = *(unsigned char *)(v80 + v81[12]);
  *(unsigned char *)(v79 + v81[13]) = *(unsigned char *)(v80 + v81[13]);
  uint64_t v112 = v81[14];
  uint64_t v113 = v79 + v112;
  uint64_t v114 = v80 + v112;
  *(unsigned char *)uint64_t v113 = *(unsigned char *)(v80 + v112);
  *(void *)(v113 + 8) = *(void *)(v80 + v112 + 8);
  uint64_t v115 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v116 = v115[6];
  uint64_t v117 = (void *)(v113 + v116);
  uint64_t v118 = (const void *)(v114 + v116);
  uint64_t v119 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
  {
    uint64_t v120 = sub_10017DF08(&qword_100E749B0);
    memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
  }
  *(_OWORD *)(v113 + v115[7]) = *(_OWORD *)(v114 + v115[7]);
  *(void *)(v113 + v115[8]) = *(void *)(v114 + v115[8]);
  *(void *)(v79 + v81[15]) = *(void *)(v80 + v81[15]);
  *(unsigned char *)(v79 + v81[16]) = *(unsigned char *)(v80 + v81[16]);
  *(_OWORD *)(v79 + v81[17]) = *(_OWORD *)(v80 + v81[17]);
  *(unsigned char *)(v79 + v81[18]) = *(unsigned char *)(v80 + v81[18]);
  *(unsigned char *)(v79 + v81[19]) = *(unsigned char *)(v80 + v81[19]);
  uint64_t v121 = v81[20];
  uint64_t v122 = (unsigned char *)(v79 + v121);
  uint64_t v123 = (unsigned char *)(v80 + v121);
  if (_s7Weather24LocationCompositionStateOwet_0(v80 + v121, 1, v143))
  {
    uint64_t v124 = sub_10017DF08(&qword_100E63A10);
    memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
    int v126 = v144;
    uint64_t v125 = v145;
  }
  else
  {
    *uint64_t v122 = *v123;
    *(_OWORD *)(v122 + 8) = *(_OWORD *)(v123 + 8);
    uint64_t v127 = *(int *)(v143 + 24);
    __dst = &v122[v127];
    uint64_t v128 = &v123[v127];
    int v126 = v144;
    uint64_t v125 = v145;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v142))
    {
      uint64_t v129 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(__dst, v128, *(void *)(*(void *)(v129 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v142 - 8) + 32))(__dst, v128, v142);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v142);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v143);
  }
  *(unsigned char *)(v79 + v81[21]) = *(unsigned char *)(v80 + v81[21]);
  *(_OWORD *)(v79 + v81[22]) = *(_OWORD *)(v80 + v81[22]);
  uint64_t v130 = v126[22];
  *(void *)(a1 + v126[21]) = *(void *)(v125 + v126[21]);
  *(_OWORD *)(a1 + v130) = *(_OWORD *)(v125 + v130);
  uint64_t v131 = v126[24];
  *(void *)(a1 + v126[23]) = *(void *)(v125 + v126[23]);
  uint64_t v132 = a1 + v131;
  uint64_t v133 = v125 + v131;
  long long v134 = *(_OWORD *)(v133 + 16);
  *(_OWORD *)uint64_t v132 = *(_OWORD *)v133;
  *(_OWORD *)(v132 + 16) = v134;
  uint64_t v135 = v126[25];
  uint64_t v136 = v126[26];
  long long v137 = *(_OWORD *)(v125 + v135);
  *(void *)(v132 + 32) = *(void *)(v133 + 32);
  *(_OWORD *)(a1 + v135) = v137;
  uint64_t v138 = a1 + v136;
  *(void *)(v138 + 32) = *(void *)(v125 + v136 + 32);
  long long v139 = *(_OWORD *)(v125 + v136 + 16);
  *(_OWORD *)uint64_t v138 = *(_OWORD *)(v125 + v136);
  *(_OWORD *)(v138 + 16) = v139;
  return a1;
}

uint64_t *sub_100AFCD6C(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = (uint64_t *)a2;
  int v5 = a1;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  uint64_t v8 = *a1;
  char v9 = *((unsigned char *)v5 + 8);
  *int v5 = v6;
  *((unsigned char *)v5 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if (v5 != v4)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)v5 + v10;
    uint64_t v12 = (char *)v4 + v10;
    sub_100178200((uint64_t)v5 + v10, &qword_100E82B20);
    uint64_t v13 = sub_10017DF08(&qword_100E82B20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t started = type metadata accessor for StartSearchAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(started - 8) + 32))(v11, v12, started);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)v5 + v15;
    uint64_t v17 = (char *)v4 + v15;
    sub_100178200((uint64_t)v5 + v15, &qword_100E82B28);
    uint64_t v18 = sub_10017DF08(&qword_100E82B28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for DismissSearchAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)v5 + v20;
    uint64_t v22 = (char *)v4 + v20;
    sub_100178200((uint64_t)v5 + v20, (uint64_t *)&unk_100EAA560);
    uint64_t v23 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v24))
      {
        uint64_t v25 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v24);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    uint64_t v26 = a3[8];
    uint64_t v27 = (char *)v5 + v26;
    uint64_t v28 = (char *)v4 + v26;
    sub_100178200((uint64_t)v5 + v26, &qword_100EAA740);
    uint64_t v29 = sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for ScenePhase();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
  }
  uint64_t v31 = a3[9];
  int v32 = (char *)v5 + v31;
  uint64_t v33 = (char *)v4 + v31;
  uint64_t v34 = (int *)type metadata accessor for ListLocationViewModel(0);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, (uint64_t)v34);
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, (uint64_t)v34);
  v399 = v5;
  uint64_t v400 = v4;
  if (v35)
  {
    if (!v36)
    {
      uint64_t v37 = a3;
      uint64_t v38 = type metadata accessor for LocationModel();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 32))(v32, v33, v38);
      uint64_t v39 = v34[5];
      uint64_t v40 = &v32[v39];
      uint64_t v41 = &v33[v39];
      *(void *)uint64_t v40 = *(void *)v41;
      v40[8] = v41[8];
      *(_OWORD *)&v32[v34[6]] = *(_OWORD *)&v33[v34[6]];
      uint64_t v42 = v34[7];
      uint64_t v43 = &v32[v42];
      uint64_t v44 = &v33[v42];
      uint64_t v45 = type metadata accessor for ListLocationRowPrimaryText(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v46 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46))
        {
          uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v46);
        }
        swift_storeEnumTagMultiPayload();
        int v5 = v399;
      }
      else
      {
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      uint64_t v65 = v34[8];
      uint64_t v66 = &v32[v65];
      uint64_t v67 = &v33[v65];
      long long v68 = *((_OWORD *)v67 + 1);
      *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v68;
      v66[32] = v67[32];
      v32[v34[9]] = v33[v34[9]];
      uint64_t v69 = v34[10];
      uint64_t v70 = &v32[v69];
      uint64_t v71 = &v33[v69];
      uint64_t v72 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
      {
        uint64_t v73 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
      }
      uint64_t v74 = v34[11];
      uint64_t v75 = &v32[v74];
      uint64_t v76 = &v33[v74];
      uint64_t v77 = type metadata accessor for TimeZone();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
      {
        uint64_t v78 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
      }
      a3 = v37;
      *(_OWORD *)&v32[v34[12]] = *(_OWORD *)&v33[v34[12]];
      *(_OWORD *)&v32[v34[13]] = *(_OWORD *)&v33[v34[13]];
      v32[v34[14]] = v33[v34[14]];
      *(_OWORD *)&v32[v34[15]] = *(_OWORD *)&v33[v34[15]];
      *(_OWORD *)&v32[v34[16]] = *(_OWORD *)&v33[v34[16]];
      *(_OWORD *)&v32[v34[17]] = *(_OWORD *)&v33[v34[17]];
      *(_OWORD *)&v32[v34[18]] = *(_OWORD *)&v33[v34[18]];
      *(_OWORD *)&v32[v34[19]] = *(_OWORD *)&v33[v34[19]];
      *(_OWORD *)&v32[v34[20]] = *(_OWORD *)&v33[v34[20]];
      v32[v34[21]] = v33[v34[21]];
      uint64_t v79 = v34[22];
      uint64_t v80 = &v32[v79];
      uint64_t v81 = &v33[v79];
      uint64_t v82 = type metadata accessor for WeatherConditionBackgroundModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
      v32[v34[23]] = v33[v34[23]];
      v32[v34[24]] = v33[v34[24]];
      *(_OWORD *)&v32[v34[25]] = *(_OWORD *)&v33[v34[25]];
      *(void *)&v32[v34[26]] = *(void *)&v33[v34[26]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, (uint64_t)v34);
      goto LABEL_55;
    }
LABEL_24:
    uint64_t v48 = sub_10017DF08(&qword_100E85F58);
    memcpy(v32, v33, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_56;
  }
  if (v36)
  {
    sub_100AF5680((uint64_t)v32, (void (*)(void))type metadata accessor for ListLocationViewModel);
    goto LABEL_24;
  }
  uint64_t v49 = a3;
  uint64_t v50 = type metadata accessor for LocationModel();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v50 - 8) + 40))(v32, v33, v50);
  uint64_t v51 = v34[5];
  uint64_t v52 = &v32[v51];
  uint64_t v53 = &v33[v51];
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v53[8];
  uint64_t v54 = v34[6];
  uint64_t v55 = &v32[v54];
  uint64_t v56 = (uint64_t *)&v33[v54];
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  *uint64_t v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  if (v5 != v4)
  {
    uint64_t v59 = v34[7];
    uint64_t v60 = &v32[v59];
    uint64_t v61 = &v33[v59];
    sub_100AF5680((uint64_t)&v32[v59], (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    uint64_t v62 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v63 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v63))
      {
        uint64_t v64 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v60, v61, v63);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v63);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
  }
  uint64_t v83 = v34[8];
  uint64_t v84 = &v32[v83];
  uint64_t v85 = &v33[v83];
  char v86 = v85[32];
  uint64_t v87 = *(void *)v84;
  uint64_t v88 = *((void *)v84 + 1);
  uint64_t v89 = *((void *)v84 + 2);
  uint64_t v90 = *((void *)v84 + 3);
  long long v91 = *((_OWORD *)v85 + 1);
  *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
  *((_OWORD *)v84 + 1) = v91;
  char v92 = v84[32];
  v84[32] = v86;
  sub_100191D78(v87, v88, v89, v90, v92);
  v32[v34[9]] = v33[v34[9]];
  uint64_t v93 = v34[10];
  uint64_t v94 = &v32[v93];
  uint64_t v95 = &v33[v93];
  uint64_t v96 = type metadata accessor for Date();
  int v97 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v96);
  int v98 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  uint64_t v99 = *(void *)(v96 - 8);
  if (v98)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v94, v96);
LABEL_47:
    uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v94, v95, *(void *)(*(void *)(v100 - 8) + 64));
    goto LABEL_48;
  }
  (*(void (**)(char *, char *, uint64_t))(v99 + 40))(v94, v95, v96);
LABEL_48:
  uint64_t v101 = v34[11];
  uint64_t v102 = &v32[v101];
  uint64_t v103 = &v33[v101];
  uint64_t v104 = type metadata accessor for TimeZone();
  int v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v104);
  int v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104);
  if (!v105)
  {
    uint64_t v107 = *(void *)(v104 - 8);
    if (!v106)
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 40))(v102, v103, v104);
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v107 + 8))(v102, v104);
    goto LABEL_53;
  }
  if (v106)
  {
LABEL_53:
    uint64_t v108 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v102, v103, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
LABEL_54:
  int v5 = v399;
  a3 = v49;
  uint64_t v109 = v34[12];
  uint64_t v110 = &v32[v109];
  uint64_t v111 = (uint64_t *)&v33[v109];
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *uint64_t v110 = v113;
  v110[1] = v112;
  swift_bridgeObjectRelease();
  uint64_t v114 = v34[13];
  uint64_t v115 = &v32[v114];
  uint64_t v116 = (uint64_t *)&v33[v114];
  uint64_t v118 = *v116;
  uint64_t v117 = v116[1];
  *uint64_t v115 = v118;
  v115[1] = v117;
  swift_bridgeObjectRelease();
  v32[v34[14]] = v33[v34[14]];
  uint64_t v119 = v34[15];
  uint64_t v120 = &v32[v119];
  uint64_t v121 = (uint64_t *)&v33[v119];
  uint64_t v123 = *v121;
  uint64_t v122 = v121[1];
  *uint64_t v120 = v123;
  v120[1] = v122;
  swift_bridgeObjectRelease();
  uint64_t v124 = v34[16];
  uint64_t v125 = &v32[v124];
  int v126 = (uint64_t *)&v33[v124];
  uint64_t v128 = *v126;
  uint64_t v127 = v126[1];
  void *v125 = v128;
  v125[1] = v127;
  swift_bridgeObjectRelease();
  uint64_t v129 = v34[17];
  uint64_t v130 = &v32[v129];
  uint64_t v131 = (uint64_t *)&v33[v129];
  uint64_t v133 = *v131;
  uint64_t v132 = v131[1];
  *uint64_t v130 = v133;
  v130[1] = v132;
  swift_bridgeObjectRelease();
  uint64_t v134 = v34[18];
  uint64_t v135 = &v32[v134];
  uint64_t v136 = (uint64_t *)&v33[v134];
  uint64_t v138 = *v136;
  uint64_t v137 = v136[1];
  *uint64_t v135 = v138;
  v135[1] = v137;
  swift_bridgeObjectRelease();
  uint64_t v139 = v34[19];
  uint64_t v140 = &v32[v139];
  uint64_t v141 = (uint64_t *)&v33[v139];
  uint64_t v143 = *v141;
  uint64_t v142 = v141[1];
  *uint64_t v140 = v143;
  v140[1] = v142;
  swift_bridgeObjectRelease();
  uint64_t v144 = v34[20];
  uint64_t v145 = &v32[v144];
  uint64_t v146 = (uint64_t *)&v33[v144];
  uint64_t v148 = *v146;
  uint64_t v147 = v146[1];
  *uint64_t v145 = v148;
  v145[1] = v147;
  swift_bridgeObjectRelease();
  v32[v34[21]] = v33[v34[21]];
  uint64_t v149 = v34[22];
  uint64_t v150 = &v32[v149];
  uint64_t v151 = &v33[v149];
  uint64_t v152 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 40))(v150, v151, v152);
  v32[v34[23]] = v33[v34[23]];
  v32[v34[24]] = v33[v34[24]];
  uint64_t v153 = v34[25];
  uint64_t v154 = &v32[v153];
  uint64_t v155 = (uint64_t *)&v33[v153];
  uint64_t v157 = *v155;
  uint64_t v156 = v155[1];
  *uint64_t v154 = v157;
  v154[1] = v156;
  swift_bridgeObjectRelease();
  *(void *)&v32[v34[26]] = *(void *)&v33[v34[26]];
LABEL_55:
  uint64_t v4 = v400;
LABEL_56:
  uint64_t v158 = sub_10017DF08(&qword_100EB0530);
  *(void *)&v32[*(int *)(v158 + 28)] = *(void *)&v33[*(int *)(v158 + 28)];
  swift_release();
  uint64_t v159 = a3[10];
  uint64_t v160 = (char *)v5 + v159;
  uint64_t v161 = (char *)v4 + v159;
  *uint64_t v160 = *v161;
  *((void *)v160 + 1) = *((void *)v161 + 1);
  swift_release();
  uint64_t v162 = a3[11];
  uint64_t v163 = (char *)v5 + v162;
  uint64_t v164 = (uint64_t)v4 + v162;
  char v165 = *(unsigned char *)(v164 + 16);
  *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
  v163[16] = v165;
  sub_10018F6E4();
  uint64_t v166 = a3[12];
  uint64_t v167 = (uint64_t *)((char *)v5 + v166);
  uint64_t v168 = (uint64_t *)((char *)v4 + v166);
  *uint64_t v167 = *v168;
  v167[1] = v168[1];
  swift_release();
  uint64_t v169 = a3[13];
  uint64_t v170 = (uint64_t *)((char *)v5 + v169);
  uint64_t v171 = (uint64_t *)((char *)v4 + v169);
  *uint64_t v170 = *v171;
  v170[1] = v171[1];
  swift_release();
  uint64_t v172 = a3[14];
  uint64_t v173 = (char *)v5 + v172;
  uint64_t v174 = (uint64_t)v4 + v172;
  *((unsigned char *)v5 + v172) = *((unsigned char *)v4 + v172);
  uint64_t v175 = (_OWORD *)((char *)v5 + v172 + 8);
  uint64_t v176 = (_OWORD *)((char *)v4 + v172 + 8);
  if (*(unint64_t *)((char *)v5 + v172 + 16) < 2)
  {
LABEL_59:
    _OWORD *v175 = *v176;
    goto LABEL_61;
  }
  unint64_t v177 = *(void *)(v174 + 16);
  if (v177 < 2)
  {
    sub_10027B4D4((uint64_t)(v173 + 8));
    goto LABEL_59;
  }
  *((void *)v173 + 1) = *(void *)v176;
  *((void *)v173 + 2) = v177;
  swift_bridgeObjectRelease();
LABEL_61:
  uint64_t v396 = type metadata accessor for ContentStatusBanner();
  uint64_t v178 = *(int *)(v396 + 24);
  uint64_t v179 = &v173[v178];
  uint64_t v180 = (const void *)(v174 + v178);
  uint64_t v181 = type metadata accessor for Date();
  int v182 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v181);
  int v183 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v180, 1, v181);
  uint64_t v398 = v181;
  if (v182)
  {
    if (!v183)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v181 - 8) + 32))(v179, v180, v181);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v179, 0, 1, v181);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  uint64_t v184 = *(void *)(v181 - 8);
  if (v183)
  {
    (*(void (**)(char *, uint64_t))(v184 + 8))(v179, v181);
LABEL_66:
    uint64_t v185 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v179, v180, *(void *)(*(void *)(v185 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, const void *, uint64_t))(v184 + 40))(v179, v180, v181);
LABEL_67:
  uint64_t v186 = sub_10017DF08(&qword_100E8EAB0);
  *(void *)&v173[*(int *)(v186 + 28)] = *(void *)(v174 + *(int *)(v186 + 28));
  swift_release();
  uint64_t v187 = a3[15];
  uint64_t v188 = (char *)v5 + v187;
  unint64_t v189 = (char *)v4 + v187;
  *uint64_t v188 = *v189;
  *((void *)v188 + 1) = *((void *)v189 + 1);
  swift_release();
  uint64_t v190 = a3[16];
  uint64_t v191 = (char *)v5 + v190;
  uint64_t v192 = (uint64_t)v4 + v190;
  *(uint64_t *)((char *)v5 + v190) = *(uint64_t *)((char *)v4 + v190);
  swift_release();
  *((void *)v191 + 1) = *(void *)(v192 + 8);
  swift_release();
  uint64_t v193 = a3[17];
  uint64_t v194 = (char *)v5 + v193;
  int v195 = (char *)v4 + v193;
  *uint64_t v194 = *v195;
  *((void *)v194 + 1) = *((void *)v195 + 1);
  swift_release();
  uint64_t v196 = a3[19];
  *(uint64_t *)((char *)v5 + a3[18]) = *(uint64_t *)((char *)v4 + a3[18]);
  *(uint64_t *)((char *)v5 + v196) = *(uint64_t *)((char *)v4 + v196);
  uint64_t v397 = a3;
  uint64_t v197 = a3[20];
  uint64_t v198 = (char *)v5 + v197;
  uint64_t v199 = (uint64_t)v4 + v197;
  *(void *)uint64_t v198 = *(uint64_t *)((char *)v4 + v197);
  v198[8] = *((unsigned char *)v4 + v197 + 8);
  v198[9] = *((unsigned char *)v4 + v197 + 9);
  *((_WORD *)v198 + 5) = *(_WORD *)((char *)v4 + v197 + 10);
  uint64_t v200 = (int *)type metadata accessor for ListViewModel();
  uint64_t v201 = v200[8];
  uint64_t v202 = &v198[v201];
  uint64_t v203 = (unsigned char *)(v199 + v201);
  int v204 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v198[v201], 1, (uint64_t)v34);
  int v205 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, (uint64_t)v34);
  if (!v204)
  {
    if (v205)
    {
      sub_100AF5680((uint64_t)v202, (void (*)(void))type metadata accessor for ListLocationViewModel);
      goto LABEL_74;
    }
    uint64_t v217 = type metadata accessor for LocationModel();
    (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v217 - 8) + 40))(v202, v203, v217);
    uint64_t v218 = v34[5];
    uint64_t v219 = &v202[v218];
    uint64_t v220 = &v203[v218];
    *(void *)uint64_t v219 = *(void *)v220;
    v219[8] = v220[8];
    uint64_t v221 = v34[6];
    uint64_t v222 = &v202[v221];
    char v223 = (uint64_t *)&v203[v221];
    uint64_t v225 = *v223;
    uint64_t v224 = v223[1];
    *(void *)uint64_t v222 = v225;
    *((void *)v222 + 1) = v224;
    swift_bridgeObjectRelease();
    if (v5 != v400)
    {
      uint64_t v226 = v34[7];
      uint64_t v227 = &v202[v226];
      uint64_t v228 = &v203[v226];
      sub_100AF5680((uint64_t)&v202[v226], (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
      uint64_t v229 = type metadata accessor for ListLocationRowPrimaryText(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v398))
        {
          uint64_t v230 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v398 - 8) + 32))(v227, v228, v398);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v398);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v227, v228, *(void *)(*(void *)(v229 - 8) + 64));
      }
    }
    uint64_t v248 = v34[8];
    uint64_t v249 = &v202[v248];
    uint64_t v250 = &v203[v248];
    char v251 = v250[32];
    uint64_t v252 = *(void *)v249;
    uint64_t v253 = *((void *)v249 + 1);
    uint64_t v254 = *((void *)v249 + 2);
    uint64_t v255 = *((void *)v249 + 3);
    long long v256 = *((_OWORD *)v250 + 1);
    *(_OWORD *)uint64_t v249 = *(_OWORD *)v250;
    *((_OWORD *)v249 + 1) = v256;
    char v257 = v249[32];
    v249[32] = v251;
    sub_100191D78(v252, v253, v254, v255, v257);
    v202[v34[9]] = v203[v34[9]];
    uint64_t v258 = v34[10];
    uint64_t v259 = &v202[v258];
    uint64_t v260 = &v203[v258];
    int v261 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v202[v258], 1, v398);
    int v262 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v260, 1, v398);
    if (v261)
    {
      if (!v262)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v398 - 8) + 32))(v259, v260, v398);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v259, 0, 1, v398);
        goto LABEL_101;
      }
    }
    else
    {
      uint64_t v263 = *(void *)(v398 - 8);
      if (!v262)
      {
        (*(void (**)(char *, char *, uint64_t))(v263 + 40))(v259, v260, v398);
LABEL_101:
        uint64_t v265 = v34[11];
        uint64_t v266 = &v202[v265];
        uint64_t v267 = &v203[v265];
        uint64_t v268 = type metadata accessor for TimeZone();
        int v269 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v266, 1, v268);
        int v270 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v267, 1, v268);
        if (v269)
        {
          if (!v270)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 32))(v266, v267, v268);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v266, 0, 1, v268);
LABEL_107:
            uint64_t v273 = v34[12];
            uint64_t v274 = &v202[v273];
            uint64_t v275 = (uint64_t *)&v203[v273];
            uint64_t v277 = *v275;
            uint64_t v276 = v275[1];
            *(void *)uint64_t v274 = v277;
            *((void *)v274 + 1) = v276;
            swift_bridgeObjectRelease();
            uint64_t v278 = v34[13];
            uint64_t v279 = &v202[v278];
            uint64_t v280 = (uint64_t *)&v203[v278];
            uint64_t v282 = *v280;
            uint64_t v281 = v280[1];
            *(void *)uint64_t v279 = v282;
            *((void *)v279 + 1) = v281;
            swift_bridgeObjectRelease();
            v202[v34[14]] = v203[v34[14]];
            uint64_t v283 = v34[15];
            uint64_t v284 = &v202[v283];
            uint64_t v285 = (uint64_t *)&v203[v283];
            uint64_t v287 = *v285;
            uint64_t v286 = v285[1];
            *(void *)uint64_t v284 = v287;
            *((void *)v284 + 1) = v286;
            swift_bridgeObjectRelease();
            uint64_t v288 = v34[16];
            uint64_t v289 = &v202[v288];
            uint64_t v290 = (uint64_t *)&v203[v288];
            uint64_t v292 = *v290;
            uint64_t v291 = v290[1];
            *(void *)uint64_t v289 = v292;
            *((void *)v289 + 1) = v291;
            swift_bridgeObjectRelease();
            uint64_t v293 = v34[17];
            uint64_t v294 = &v202[v293];
            uint64_t v295 = (uint64_t *)&v203[v293];
            uint64_t v297 = *v295;
            uint64_t v296 = v295[1];
            *(void *)uint64_t v294 = v297;
            *((void *)v294 + 1) = v296;
            swift_bridgeObjectRelease();
            uint64_t v298 = v34[18];
            uint64_t v299 = &v202[v298];
            uint64_t v300 = (uint64_t *)&v203[v298];
            uint64_t v302 = *v300;
            uint64_t v301 = v300[1];
            *(void *)uint64_t v299 = v302;
            *((void *)v299 + 1) = v301;
            swift_bridgeObjectRelease();
            uint64_t v303 = v34[19];
            uint64_t v304 = &v202[v303];
            uint64_t v305 = (uint64_t *)&v203[v303];
            uint64_t v307 = *v305;
            uint64_t v306 = v305[1];
            *(void *)uint64_t v304 = v307;
            *((void *)v304 + 1) = v306;
            swift_bridgeObjectRelease();
            uint64_t v308 = v34[20];
            uint64_t v309 = &v202[v308];
            uint64_t v310 = (uint64_t *)&v203[v308];
            uint64_t v312 = *v310;
            uint64_t v311 = v310[1];
            *(void *)uint64_t v309 = v312;
            *((void *)v309 + 1) = v311;
            swift_bridgeObjectRelease();
            v202[v34[21]] = v203[v34[21]];
            uint64_t v313 = v34[22];
            int v314 = &v202[v313];
            uint64_t v315 = &v203[v313];
            uint64_t v316 = type metadata accessor for WeatherConditionBackgroundModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 40))(v314, v315, v316);
            v202[v34[23]] = v203[v34[23]];
            v202[v34[24]] = v203[v34[24]];
            uint64_t v317 = v34[25];
            uint64_t v318 = &v202[v317];
            uint64_t v319 = (uint64_t *)&v203[v317];
            uint64_t v321 = *v319;
            uint64_t v320 = v319[1];
            *(void *)uint64_t v318 = v321;
            *((void *)v318 + 1) = v320;
            swift_bridgeObjectRelease();
            *(void *)&v202[v34[26]] = *(void *)&v203[v34[26]];
            goto LABEL_108;
          }
        }
        else
        {
          uint64_t v271 = *(void *)(v268 - 8);
          if (!v270)
          {
            (*(void (**)(char *, char *, uint64_t))(v271 + 40))(v266, v267, v268);
            goto LABEL_107;
          }
          (*(void (**)(char *, uint64_t))(v271 + 8))(v266, v268);
        }
        uint64_t v272 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v266, v267, *(void *)(*(void *)(v272 - 8) + 64));
        goto LABEL_107;
      }
      (*(void (**)(char *, uint64_t))(v263 + 8))(v259, v398);
    }
    uint64_t v264 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v259, v260, *(void *)(*(void *)(v264 - 8) + 64));
    goto LABEL_101;
  }
  if (v205)
  {
LABEL_74:
    uint64_t v216 = sub_10017DF08(&qword_100E85F58);
    memcpy(v202, v203, *(void *)(*(void *)(v216 - 8) + 64));
    goto LABEL_108;
  }
  uint64_t v206 = type metadata accessor for LocationModel();
  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v206 - 8) + 32))(v202, v203, v206);
  uint64_t v207 = v34[5];
  uint64_t v208 = &v202[v207];
  uint64_t v209 = &v203[v207];
  *(void *)uint64_t v208 = *(void *)v209;
  v208[8] = v209[8];
  *(_OWORD *)&v202[v34[6]] = *(_OWORD *)&v203[v34[6]];
  uint64_t v210 = v34[7];
  uint64_t v211 = &v202[v210];
  uint64_t v212 = &v203[v210];
  uint64_t v213 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v214 = v398;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v212, 1, v398))
    {
      uint64_t v215 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v211, v212, *(void *)(*(void *)(v215 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v398 - 8) + 32))(v211, v212, v398);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v211, 0, 1, v398);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
    uint64_t v214 = v398;
  }
  uint64_t v231 = v34[8];
  uint64_t v232 = &v202[v231];
  uint64_t v233 = &v203[v231];
  long long v234 = *((_OWORD *)v233 + 1);
  *(_OWORD *)uint64_t v232 = *(_OWORD *)v233;
  *((_OWORD *)v232 + 1) = v234;
  v232[32] = v233[32];
  v202[v34[9]] = v203[v34[9]];
  uint64_t v235 = v34[10];
  char v236 = &v202[v235];
  uint64_t v237 = &v203[v235];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v203[v235], 1, v214))
  {
    uint64_t v238 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v236, v237, *(void *)(*(void *)(v238 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v236, v237, v214);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v214);
  }
  uint64_t v239 = v34[11];
  uint64_t v240 = &v202[v239];
  uint64_t v241 = &v203[v239];
  uint64_t v242 = type metadata accessor for TimeZone();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v241, 1, v242))
  {
    uint64_t v243 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v240, v241, *(void *)(*(void *)(v243 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 32))(v240, v241, v242);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v240, 0, 1, v242);
  }
  *(_OWORD *)&v202[v34[12]] = *(_OWORD *)&v203[v34[12]];
  *(_OWORD *)&v202[v34[13]] = *(_OWORD *)&v203[v34[13]];
  v202[v34[14]] = v203[v34[14]];
  *(_OWORD *)&v202[v34[15]] = *(_OWORD *)&v203[v34[15]];
  *(_OWORD *)&v202[v34[16]] = *(_OWORD *)&v203[v34[16]];
  *(_OWORD *)&v202[v34[17]] = *(_OWORD *)&v203[v34[17]];
  *(_OWORD *)&v202[v34[18]] = *(_OWORD *)&v203[v34[18]];
  *(_OWORD *)&v202[v34[19]] = *(_OWORD *)&v203[v34[19]];
  *(_OWORD *)&v202[v34[20]] = *(_OWORD *)&v203[v34[20]];
  v202[v34[21]] = v203[v34[21]];
  uint64_t v244 = v34[22];
  uint64_t v245 = &v202[v244];
  uint64_t v246 = &v203[v244];
  uint64_t v247 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 32))(v245, v246, v247);
  v202[v34[23]] = v203[v34[23]];
  v202[v34[24]] = v203[v34[24]];
  *(_OWORD *)&v202[v34[25]] = *(_OWORD *)&v203[v34[25]];
  *(void *)&v202[v34[26]] = *(void *)&v203[v34[26]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, (uint64_t)v34);
LABEL_108:
  *(void *)&v198[v200[9]] = *(void *)(v199 + v200[9]);
  swift_bridgeObjectRelease();
  uint64_t v322 = v200[10];
  uint64_t v323 = &v198[v322];
  id v324 = (uint64_t *)(v199 + v322);
  uint64_t v326 = *v324;
  uint64_t v325 = v324[1];
  *(void *)uint64_t v323 = v326;
  *((void *)v323 + 1) = v325;
  swift_bridgeObjectRelease();
  uint64_t v327 = v200[11];
  id v328 = &v198[v327];
  uint64_t v329 = (uint64_t *)(v199 + v327);
  uint64_t v331 = *v329;
  uint64_t v330 = v329[1];
  *(void *)id v328 = v331;
  *((void *)v328 + 1) = v330;
  swift_bridgeObjectRelease();
  v198[v200[12]] = *(unsigned char *)(v199 + v200[12]);
  v198[v200[13]] = *(unsigned char *)(v199 + v200[13]);
  uint64_t v332 = v200[14];
  uint64_t v333 = &v198[v332];
  uint64_t v334 = v199 + v332;
  *uint64_t v333 = *(unsigned char *)(v199 + v332);
  *((void *)v333 + 1) = *(void *)(v199 + v332 + 8);
  swift_bridgeObjectRelease();
  uint64_t v335 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v336 = v335[6];
  uint64_t v337 = &v333[v336];
  uint64_t v338 = (const void *)(v334 + v336);
  uint64_t v339 = type metadata accessor for URL();
  int v340 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v337, 1, v339);
  int v341 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v338, 1, v339);
  if (v340)
  {
    if (!v341)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v339 - 8) + 32))(v337, v338, v339);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v337, 0, 1, v339);
      goto LABEL_114;
    }
    goto LABEL_113;
  }
  uint64_t v342 = *(void *)(v339 - 8);
  if (v341)
  {
    (*(void (**)(char *, uint64_t))(v342 + 8))(v337, v339);
LABEL_113:
    uint64_t v343 = sub_10017DF08(&qword_100E749B0);
    memcpy(v337, v338, *(void *)(*(void *)(v343 - 8) + 64));
    goto LABEL_114;
  }
  (*(void (**)(char *, const void *, uint64_t))(v342 + 40))(v337, v338, v339);
LABEL_114:
  uint64_t v344 = v335[7];
  uint64_t v345 = &v333[v344];
  uint64_t v346 = (uint64_t *)(v334 + v344);
  uint64_t v348 = *v346;
  uint64_t v347 = v346[1];
  *(void *)uint64_t v345 = v348;
  *((void *)v345 + 1) = v347;
  swift_bridgeObjectRelease();
  *(void *)&v333[v335[8]] = *(void *)(v334 + v335[8]);
  swift_release();
  *(void *)&v198[v200[15]] = *(void *)(v199 + v200[15]);
  swift_bridgeObjectRelease();
  v198[v200[16]] = *(unsigned char *)(v199 + v200[16]);
  uint64_t v349 = v200[17];
  long long v350 = &v198[v349];
  uint64_t v351 = (uint64_t *)(v199 + v349);
  uint64_t v353 = *v351;
  uint64_t v352 = v351[1];
  *(void *)long long v350 = v353;
  *((void *)v350 + 1) = v352;
  swift_bridgeObjectRelease();
  v198[v200[18]] = *(unsigned char *)(v199 + v200[18]);
  v198[v200[19]] = *(unsigned char *)(v199 + v200[19]);
  uint64_t v354 = v200[20];
  uint64_t v355 = (uint64_t)&v198[v354];
  uint64_t v356 = v199 + v354;
  int v357 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v198[v354], 1, v396);
  int v358 = _s7Weather24LocationCompositionStateOwet_0(v356, 1, v396);
  if (!v357)
  {
    unint64_t v359 = v399;
    if (v358)
    {
      sub_100AF5680(v355, (void (*)(void))type metadata accessor for ContentStatusBanner);
      goto LABEL_120;
    }
    *(unsigned char *)uint64_t v355 = *(unsigned char *)v356;
    uint64_t v368 = (void *)(v356 + 8);
    if (*(void *)(v355 + 16) >= 2uLL)
    {
      unint64_t v369 = *(void *)(v356 + 16);
      if (v369 >= 2)
      {
        *(void *)(v355 + 8) = *v368;
        *(void *)(v355 + 16) = v369;
        swift_bridgeObjectRelease();
        goto LABEL_132;
      }
      sub_10027B4D4(v355 + 8);
    }
    *(_OWORD *)(v355 + 8) = *(_OWORD *)v368;
LABEL_132:
    uint64_t v390 = *(int *)(v396 + 24);
    uint64_t v391 = v355 + v390;
    uint64_t v392 = v356 + v390;
    int v393 = _s7Weather24LocationCompositionStateOwet_0(v391, 1, v398);
    int v394 = _s7Weather24LocationCompositionStateOwet_0(v392, 1, v398);
    if (v393)
    {
      if (!v394)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v398 - 8) + 32))(v391, v392, v398);
        _s7Weather24LocationCompositionStateOwst_0(v391, 0, 1, v398);
        goto LABEL_122;
      }
    }
    else
    {
      uint64_t v395 = *(void *)(v398 - 8);
      if (!v394)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v395 + 40))(v391, v392, v398);
        goto LABEL_122;
      }
      (*(void (**)(uint64_t, uint64_t))(v395 + 8))(v391, v398);
    }
    size_t v364 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v365 = (void *)v391;
    uint64_t v366 = (const void *)v392;
LABEL_121:
    memcpy(v365, v366, v364);
LABEL_122:
    v367 = v400;
    goto LABEL_130;
  }
  unint64_t v359 = v399;
  if (v358)
  {
LABEL_120:
    size_t v364 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v365 = (void *)v355;
    uint64_t v366 = (const void *)v356;
    goto LABEL_121;
  }
  *(unsigned char *)uint64_t v355 = *(unsigned char *)v356;
  *(_OWORD *)(v355 + 8) = *(_OWORD *)(v356 + 8);
  uint64_t v360 = *(int *)(v396 + 24);
  uint64_t v361 = (void *)(v355 + v360);
  int v362 = (const void *)(v356 + v360);
  if (_s7Weather24LocationCompositionStateOwet_0(v356 + v360, 1, v398))
  {
    uint64_t v363 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v361, v362, *(void *)(*(void *)(v363 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v398 - 8) + 32))(v361, v362, v398);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v361, 0, 1, v398);
  }
  v367 = v400;
  _s7Weather24LocationCompositionStateOwst_0(v355, 0, 1, v396);
LABEL_130:
  v198[v200[21]] = *(unsigned char *)(v199 + v200[21]);
  uint64_t v370 = v200[22];
  uint64_t v371 = &v198[v370];
  uint64_t v372 = v199 + v370;
  *uint64_t v371 = *(unsigned char *)v372;
  v371[1] = *(unsigned char *)(v372 + 1);
  v371[2] = *(unsigned char *)(v372 + 2);
  *((void *)v371 + 1) = *(void *)(v372 + 8);
  swift_release();
  *(uint64_t *)((char *)v359 + v397[21]) = *(uint64_t *)((char *)v367 + v397[21]);
  swift_release();
  uint64_t v373 = v397[22];
  uint64_t v374 = (uint64_t *)((char *)v359 + v373);
  uint64_t v375 = (uint64_t *)((char *)v367 + v373);
  uint64_t v376 = v375[1];
  void *v374 = *v375;
  swift_unknownObjectRelease();
  v374[1] = v376;
  uint64_t v377 = v397[24];
  *(uint64_t *)((char *)v359 + v397[23]) = *(uint64_t *)((char *)v367 + v397[23]);
  uint64_t v378 = (uint64_t)v359 + v377;
  uint64_t v379 = (uint64_t)v367 + v377;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v359 + v377);
  long long v380 = *(_OWORD *)(v379 + 16);
  *(_OWORD *)uint64_t v378 = *(_OWORD *)v379;
  *(_OWORD *)(v378 + 16) = v380;
  *(void *)(v378 + 32) = *(void *)(v379 + 32);
  uint64_t v381 = v397[25];
  unint64_t v382 = (uint64_t *)((char *)v359 + v381);
  uint64_t v383 = (uint64_t *)((char *)v367 + v381);
  uint64_t v384 = v383[1];
  void *v382 = *v383;
  swift_unknownObjectRelease();
  v382[1] = v384;
  uint64_t v385 = v397[26];
  uint64_t v386 = (uint64_t)v359 + v385;
  uint64_t v387 = (uint64_t)v367 + v385;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v359 + v385);
  long long v388 = *(_OWORD *)(v387 + 16);
  *(_OWORD *)uint64_t v386 = *(_OWORD *)v387;
  *(_OWORD *)(v386 + 16) = v388;
  *(void *)(v386 + 32) = *(void *)(v387 + 32);
  return v359;
}

uint64_t sub_100AFEDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AFEDF8);
}

uint64_t sub_100AFEDF8()
{
  sub_100185118();
  sub_10017DF08(&qword_100EB0400);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v2[5];
  }
  else
  {
    sub_10017DF08(&qword_100EB03F8);
    sub_100162F30();
    if (*(_DWORD *)(v8 + 84) == v0)
    {
      uint64_t v5 = v7;
      uint64_t v6 = v2[6];
    }
    else
    {
      sub_10017DF08((uint64_t *)&unk_100EAA540);
      sub_100162F30();
      if (*(_DWORD *)(v10 + 84) == v0)
      {
        uint64_t v5 = v9;
        uint64_t v6 = v2[7];
      }
      else
      {
        sub_10017DF08(&qword_100E6DC20);
        sub_100162F30();
        if (*(_DWORD *)(v12 + 84) == v0)
        {
          uint64_t v5 = v11;
          uint64_t v6 = v2[8];
        }
        else
        {
          sub_10017DF08(&qword_100EB0530);
          sub_100162F30();
          if (*(_DWORD *)(v14 + 84) == v0)
          {
            uint64_t v5 = v13;
            uint64_t v6 = v2[9];
          }
          else
          {
            sub_10017DF08(&qword_100E8EAB0);
            sub_100162F30();
            if (*(_DWORD *)(v16 + 84) == v0)
            {
              uint64_t v5 = v15;
              uint64_t v6 = v2[14];
            }
            else
            {
              type metadata accessor for ListViewModel();
              sub_100162F30();
              if (*(_DWORD *)(v18 + 84) != v0) {
                return sub_100163020(*(void *)(v1 + v2[21]));
              }
              uint64_t v5 = v17;
              uint64_t v6 = v2[20];
            }
          }
        }
      }
    }
  }

  return _s7Weather24LocationCompositionStateOwet_0(v1 + v6, v0, v5);
}

uint64_t sub_100AFEF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AFEF78);
}

void sub_100AFEF78()
{
  sub_100150288();
  sub_10017DF08(&qword_100EB0400);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3) {
    goto LABEL_8;
  }
  sub_10017DF08(&qword_100EB03F8);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3) {
    goto LABEL_8;
  }
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == v3) {
    goto LABEL_8;
  }
  sub_10017DF08(&qword_100E6DC20);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3
    || (sub_10017DF08(&qword_100EB0530), sub_100162F30(), *(_DWORD *)(v8 + 84) == v3)
    || (sub_10017DF08(&qword_100E8EAB0), sub_100162F30(), *(_DWORD *)(v9 + 84) == v3)
    || (type metadata accessor for ListViewModel(), sub_100162F30(), *(_DWORD *)(v10 + 84) == v3))
  {
LABEL_8:
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v11, v12, v13, v14);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 84)) = (v0 - 1);
  }
}

void sub_100AFF0E4()
{
  sub_100029888(319, &qword_100EB05A0, (uint64_t (*)(uint64_t))&type metadata accessor for StartSearchAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100029888(319, &qword_100EB05A8, (uint64_t (*)(uint64_t))&type metadata accessor for DismissSearchAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_1000265D8(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_100029888(319, (unint64_t *)&qword_100E6DC90, (uint64_t (*)(uint64_t))&type metadata accessor for ScenePhase, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F)
        {
          sub_1000265D8(319, (unint64_t *)&unk_100EB05B0, &qword_100E85F58, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
          if (v4 <= 0x3F)
          {
            sub_100029888(319, (unint64_t *)&unk_100E8EB20, (uint64_t (*)(uint64_t))type metadata accessor for ContentStatusBanner, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
            if (v5 <= 0x3F)
            {
              type metadata accessor for ListViewModel();
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_100AFF440(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = *(void *)v12;
    char v14 = v12[8];
    sub_100195B7C(*(void *)v12, v14);
    *(void *)uint64_t v11 = v13;
    unsigned char v11[8] = v14;
    uint64_t v15 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  }
  swift_retain();
  return a1;
}

uint64_t sub_100AFF5F0(uint64_t a1, uint64_t a2)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));

  return swift_release();
}

void *sub_100AFF6C4(void *a1, void *a2, int *a3)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)v10;
  char v12 = v10[8];
  sub_100195B7C(*(void *)v10, v12);
  *(void *)uint64_t v9 = v11;
  v9[8] = v12;
  uint64_t v13 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_retain();
  return a1;
}

void *sub_100AFF828(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178200((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)v10;
  char v12 = v10[8];
  sub_100195B7C(*(void *)v10, v12);
  uint64_t v13 = *(void *)v9;
  char v14 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = v12;
  sub_10018F6D8(v13, v14);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

char *sub_100AFF9C0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  char v12 = &a2[v9];
  *(void *)uint64_t v11 = *(void *)v12;
  unsigned char v11[8] = v12[8];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

char *sub_100AFFB1C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178200((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(void *)v11;
  LOBYTE(v11) = v11[8];
  uint64_t v13 = *(void *)v10;
  char v14 = v10[8];
  *(void *)uint64_t v10 = v12;
  v10[8] = (char)v11;
  sub_10018F6D8(v13, v14);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_100AFFCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AFFCBC);
}

uint64_t sub_100AFFCBC()
{
  sub_100184608();
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return sub_100163020(*(void *)(v0 + *(int *)(v2 + 24)));
  }
  uint64_t v4 = sub_10018C688();

  return _s7Weather24LocationCompositionStateOwet_0(v4, v5, v6);
}

uint64_t sub_100AFFD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AFFD44);
}

void sub_100AFFD44()
{
  sub_100150288();
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
  }
}

void sub_100AFFDC0()
{
  sub_1000265D8(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100AFFE94()
{
  return sub_10024D5E4((uint64_t)&unk_100EB06D0);
}

uint64_t sub_100AFFED0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100AFFEEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100AFFF08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100AFFF28()
{
  return sub_100B00734(type metadata accessor for ListView.ListContentView, sub_100AE8620);
}

uint64_t sub_100AFFF58()
{
  uint64_t v5 = (int *)type metadata accessor for ListView.ListContentView(0);
  sub_100179EF0();
  uint64_t v7 = v0 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  sub_10018F6D8(*(void *)v7, *(unsigned char *)(v7 + 8));
  sub_10017DF08(&qword_100E82B20);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for StartSearchAction();
    sub_100162880();
    sub_100162F0C();
    v9(v8);
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E82B28);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DismissSearchAction();
    sub_100162880();
    sub_100162F0C();
    v11(v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v7 + v5[7];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for UserInterfaceSizeClass();
    if (!sub_10017F4C0(v12))
    {
      sub_100162880();
      sub_100162F0C();
      v14(v13);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v7 + v5[8];
  sub_10017DF08(&qword_100EAA740);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ScenePhase();
    sub_100162880();
    sub_100162F0C();
    v17(v16);
  }
  else
  {
    swift_release();
  }
  uint64_t v18 = v7 + v5[9];
  uint64_t v19 = type metadata accessor for ListLocationViewModel(0);
  if (!sub_10018883C(v19))
  {
    type metadata accessor for LocationModel();
    sub_100162880();
    sub_100162F0C();
    v21(v20);
    sub_1001631A8();
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for Date();
      if (!sub_1001810A0(v22))
      {
        sub_100162880();
        sub_100162F0C();
        v24(v23);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_10019FDA4(v18 + *(int *)(v15 + 32));
    uint64_t v25 = type metadata accessor for Date();
    if (!sub_1001810A0(v25))
    {
      sub_100162880();
      uint64_t v26 = sub_10019D614();
      v27(v26);
    }
    uint64_t v28 = type metadata accessor for TimeZone();
    if (!sub_1001810A0(v28))
    {
      sub_100162880();
      uint64_t v29 = sub_10019D614();
      v30(v29);
    }
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    uint64_t v1 = v18 + *(int *)(v15 + 88);
    type metadata accessor for WeatherConditionBackgroundModel();
    sub_100162880();
    sub_100162F0C();
    v32(v31);
    sub_1001631A8();
  }
  sub_10017DF08(&qword_100EB0530);
  swift_release();
  sub_1001A3620();
  sub_10018F6E4();
  sub_1001A3620();
  sub_1001A3620();
  sub_10018B218();
  if (v33) {
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentStatusBanner();
  sub_100164C30();
  if (!sub_10017F4C0(v2))
  {
    sub_100162880();
    sub_10017E3CC();
    v35(v34);
  }
  sub_10017DF08(&qword_100E8EAB0);
  swift_release();
  sub_1001A3620();
  swift_release();
  swift_release();
  sub_1001A3620();
  uint64_t v36 = type metadata accessor for ListViewModel();
  if (!sub_100165428(v36))
  {
    type metadata accessor for LocationModel();
    sub_100162880();
    sub_100162F0C();
    v38(v37);
    sub_100185404();
    uint64_t v39 = v3 + *(int *)(v15 + 28);
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!sub_10017F4C0(v39))
      {
        sub_100162880();
        sub_100162F0C();
        v41(v40);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_10019FDA4(v3 + *(int *)(v15 + 32));
    if (!sub_10017F4C0(v3 + *(int *)(v15 + 40)))
    {
      sub_100162880();
      sub_10017E3CC();
      v43(v42);
    }
    uint64_t v44 = v3 + *(int *)(v15 + 44);
    uint64_t v45 = type metadata accessor for TimeZone();
    if (!sub_100188D64(v45))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v4);
    }
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    type metadata accessor for WeatherConditionBackgroundModel();
    sub_100162880();
    sub_100162F0C();
    v48(v47);
    sub_100185404();
  }
  swift_bridgeObjectRelease();
  sub_100184E20();
  sub_100184E20();
  swift_bridgeObjectRelease();
  type metadata accessor for LearnMoreAttributorViewModel();
  sub_100164060();
  if (!sub_100162CC4(v3))
  {
    sub_100162880();
    sub_10017F350();
    v50(v49);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100184E20();
  if (!sub_100166E28())
  {
    if (*(void *)(v15 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    if (!sub_10017F4C0(v15 + *(int *)(v1 + 24)))
    {
      sub_100162880();
      sub_10017E3CC();
      v52(v51);
    }
  }
  sub_100182DA4();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v7 + v5[24]);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v7 + v5[26]);

  return swift_deallocObject();
}

uint64_t sub_100B00708()
{
  return sub_100B00734(type metadata accessor for ListView.ListContentView, sub_100AE9594);
}

uint64_t sub_100B00734(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t sub_100B007B4()
{
  return sub_100B008B8();
}

unint64_t sub_100B007CC()
{
  unint64_t result = qword_100EB0738;
  if (!qword_100EB0738)
  {
    sub_10018C6DC(&qword_100EB06E8);
    sub_10024D5E4((uint64_t)&unk_100EB0740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0738);
  }
  return result;
}

uint64_t sub_100B00870(uint64_t a1, uint64_t a2)
{
  return sub_100B02400(a1, a2, (void (*)(void))type metadata accessor for ListView.ListContentView);
}

uint64_t sub_100B008A0()
{
  return sub_100B008B8();
}

uint64_t sub_100B008B8()
{
  uint64_t v0 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_100183368();

  return v2(v1);
}

uint64_t sub_100B0091C()
{
  uint64_t v0 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_10018521C();

  return sub_100AEA908(v1, v2);
}

unint64_t sub_100B0096C()
{
  unint64_t result = qword_100EB0758;
  if (!qword_100EB0758)
  {
    sub_10018C6DC(&qword_100EB0750);
    sub_100231190((uint64_t)&unk_100EB0760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0758);
  }
  return result;
}

uint64_t sub_100B00A14()
{
  uint64_t v0 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_10018521C();

  return sub_100AEA980(v1, v2, v3);
}

unint64_t sub_100B00A64()
{
  unint64_t result = qword_100EB0768;
  if (!qword_100EB0768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0768);
  }
  return result;
}

uint64_t sub_100B00AB4(uint64_t a1, uint64_t a2)
{
  return sub_100B02400(a1, a2, (void (*)(void))type metadata accessor for ListView.ListContentView);
}

uint64_t sub_100B00AE0()
{
  return sub_100AEB494(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100B00AFC()
{
  return sub_100AEB904();
}

uint64_t sub_100B00B20()
{
  return sub_100AEB95C();
}

uint64_t sub_100B00B40()
{
  return sub_100AEB714();
}

uint64_t sub_100B00B60()
{
  return sub_100AEB714();
}

uint64_t sub_100B00B84()
{
  return sub_100B00734(type metadata accessor for ListView.ListContentView, (uint64_t (*)(uint64_t))sub_100AEB790);
}

uint64_t sub_100B00BB0()
{
  return sub_100AEB904();
}

uint64_t sub_100B00BD0()
{
  return sub_100AEB95C();
}

uint64_t sub_100B00BF0()
{
  if (v0[17]) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  return sub_100AEACFC(v1 | v0[16] | (v0[18] << 16));
}

uint64_t sub_100B00C1C()
{
  return sub_100B00734(type metadata accessor for ListView.ListContentView, sub_100AE91F4);
}

unint64_t sub_100B00C48()
{
  unint64_t result = qword_100EB07A8;
  if (!qword_100EB07A8)
  {
    sub_10018C6DC(&qword_100EB0798);
    sub_100B00CE8();
    sub_10024D5E4((uint64_t)&unk_100E94FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB07A8);
  }
  return result;
}

unint64_t sub_100B00CE8()
{
  unint64_t result = qword_100EB07B0;
  if (!qword_100EB07B0)
  {
    sub_10018C6DC(&qword_100EB0790);
    sub_100B00D94();
    sub_100231190((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB07B0);
  }
  return result;
}

unint64_t sub_100B00D94()
{
  unint64_t result = qword_100EB07B8;
  if (!qword_100EB07B8)
  {
    sub_10018C6DC(&qword_100EB07C0);
    sub_10018C6DC(&qword_100EB07C8);
    sub_100B00E68();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100EB0830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB07B8);
  }
  return result;
}

unint64_t sub_100B00E68()
{
  unint64_t result = qword_100EB07D0;
  if (!qword_100EB07D0)
  {
    sub_10018C6DC(&qword_100EB07C8);
    sub_10018C6DC(&qword_100EB07D8);
    sub_10018C6DC(&qword_100EB07E0);
    sub_10018C6DC(&qword_100EB07E8);
    type metadata accessor for PlainListStyle();
    sub_100B00FCC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&qword_100E842A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB07D0);
  }
  return result;
}

unint64_t sub_100B00FCC()
{
  unint64_t result = qword_100EB07F0;
  if (!qword_100EB07F0)
  {
    sub_10018C6DC(&qword_100EB07E8);
    sub_100B0106C();
    sub_10024D5E4((uint64_t)&qword_100E80348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB07F0);
  }
  return result;
}

unint64_t sub_100B0106C()
{
  unint64_t result = qword_100EB07F8;
  if (!qword_100EB07F8)
  {
    sub_10018C6DC(&qword_100EB0800);
    sub_100B01118();
    sub_100231190((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB07F8);
  }
  return result;
}

unint64_t sub_100B01118()
{
  unint64_t result = qword_100EB0808;
  if (!qword_100EB0808)
  {
    sub_10018C6DC(&qword_100EB0810);
    sub_10024D5E4((uint64_t)&unk_100EB0818);
    sub_100231190((uint64_t)&unk_100EB0828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0808);
  }
  return result;
}

uint64_t type metadata accessor for ScrollToActiveLocationModifier(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB0A38);
}

uint64_t sub_100B01208@<X0>(uint64_t a1@<X8>)
{
  return sub_100AEC1C0(*(void *)(v1 + 16), a1);
}

uint64_t sub_100B01214()
{
  return sub_100B00734(type metadata accessor for ListView.ListContentView, (uint64_t (*)(uint64_t))sub_100AEEF1C);
}

uint64_t sub_100B01240@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.listRowSpacing.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100B01278()
{
  return EnvironmentValues.listRowSpacing.setter();
}

uint64_t sub_100B012AC()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t type metadata accessor for ListViewTipStyleModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB0B90);
}

uint64_t sub_100B012F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v2);
  sub_10019B7C8();
  return sub_100AEE06C(a1);
}

uint64_t type metadata accessor for ListRowView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB0AD8);
}

uint64_t sub_100B01368()
{
  uint64_t v0 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_10018521C();

  return sub_100AEE32C(v1, v2, v3);
}

uint64_t sub_100B013B8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B013F0(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

void sub_100B01420(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_100AEE880(a1, v5);
}

unint64_t sub_100B01470()
{
  unint64_t result = qword_100EB0918;
  if (!qword_100EB0918)
  {
    sub_10018C6DC(&qword_100EB0888);
    sub_10024D5E4((uint64_t)&unk_100EB0920);
    sub_10024D5E4((uint64_t)&qword_100E85058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0918);
  }
  return result;
}

unint64_t sub_100B01534()
{
  unint64_t result = qword_100EB0928;
  if (!qword_100EB0928)
  {
    sub_10018C6DC(&qword_100EB0898);
    sub_10018C6DC(&qword_100EB0888);
    type metadata accessor for PlainButtonStyle();
    sub_100B01470();
    sub_100231190((uint64_t)&qword_100E70FB8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0928);
  }
  return result;
}

unint64_t sub_100B0163C()
{
  unint64_t result = qword_100EB0960;
  if (!qword_100EB0960)
  {
    sub_10018C6DC(&qword_100EB0950);
    sub_100B016DC();
    sub_10024D5E4((uint64_t)&qword_100E85068);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0960);
  }
  return result;
}

unint64_t sub_100B016DC()
{
  unint64_t result = qword_100EB0968;
  if (!qword_100EB0968)
  {
    sub_10018C6DC(&qword_100EB0948);
    sub_100B017A8((uint64_t)&unk_100EB0970);
    sub_10024D5E4((uint64_t)&qword_100E85058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0968);
  }
  return result;
}

unint64_t sub_100B017A8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100B01820()
{
  return sub_100B017A8((uint64_t)&unk_100EB0978);
}

unint64_t sub_100B01850()
{
  unint64_t result = qword_100EB0980;
  if (!qword_100EB0980)
  {
    sub_10018C6DC(&qword_100EB0930);
    sub_100B017A8((uint64_t)&unk_100E8EE28);
    sub_10024D5E4((uint64_t)&qword_100E825E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0980);
  }
  return result;
}

void sub_100B01920(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v2);
  sub_10019B7C8();
  sub_100AEF024(a1);
}

uint64_t sub_100B01960(char a1, char a2)
{
  uint64_t v4 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v4);

  return sub_100AEF448(a1, a2);
}

uint64_t sub_100B019C0()
{
  return sub_100AEF5F0() & 1;
}

uint64_t sub_100B019E0()
{
  return sub_100AEF68C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100B01A00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v2);

  return sub_100AEBB94(a1);
}

uint64_t sub_100B01A58()
{
  uint64_t v5 = (int *)type metadata accessor for ListView.ListContentView(0);
  sub_100179EF0();
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  uint64_t v8 = v0 + ((v7 + 32) & ~v7);
  sub_10018F6D8(*(void *)v8, *(unsigned char *)(v8 + 8));
  sub_10017DF08(&qword_100E82B20);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for StartSearchAction();
    sub_100162880();
    sub_100162F0C();
    v11(v9, v10);
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E82B28);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DismissSearchAction();
    sub_100162880();
    sub_100162F0C();
    v14(v12, v13);
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v8 + v5[7];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for UserInterfaceSizeClass();
    if (!sub_10017F4C0(v15))
    {
      sub_100162880();
      sub_100162F0C();
      v19(v16, v17, v18);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v20 = v8 + v5[8];
  sub_10017DF08(&qword_100EAA740);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ScenePhase();
    sub_100162880();
    sub_100162F0C();
    v24(v21, v22, v23);
  }
  else
  {
    swift_release();
  }
  uint64_t v25 = v8 + v5[9];
  uint64_t v26 = type metadata accessor for ListLocationViewModel(0);
  if (!sub_10018883C(v26))
  {
    type metadata accessor for LocationModel();
    sub_100162880();
    sub_100162F0C();
    v30(v27, v28, v29);
    sub_1001631A8();
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for Date();
      if (!sub_1001810A0(v31))
      {
        sub_100162880();
        sub_100162F0C();
        v35(v32, v33, v34);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_10019FDA4(v25 + *(int *)(v20 + 32));
    uint64_t v36 = type metadata accessor for Date();
    if (!sub_1001810A0(v36))
    {
      sub_100162880();
      uint64_t v37 = sub_10019D614();
      v38(v37);
    }
    uint64_t v39 = type metadata accessor for TimeZone();
    if (!sub_1001810A0(v39))
    {
      sub_100162880();
      uint64_t v40 = sub_10019D614();
      v41(v40);
    }
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    uint64_t v1 = v25 + *(int *)(v20 + 88);
    type metadata accessor for WeatherConditionBackgroundModel();
    sub_100162880();
    sub_100162F0C();
    v45(v42, v43, v44);
    sub_1001631A8();
  }
  sub_10017DF08(&qword_100EB0530);
  swift_release();
  sub_1001A3620();
  sub_10018F6E4();
  sub_1001A3620();
  sub_1001A3620();
  sub_10018B218();
  if (v46) {
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentStatusBanner();
  sub_100164C30();
  if (!sub_10017F4C0(v2))
  {
    sub_100162880();
    sub_10017E3CC();
    v50(v47, v48, v49);
  }
  sub_10017DF08(&qword_100E8EAB0);
  swift_release();
  sub_1001A3620();
  swift_release();
  swift_release();
  sub_1001A3620();
  uint64_t v51 = type metadata accessor for ListViewModel();
  if (!sub_100165428(v51))
  {
    type metadata accessor for LocationModel();
    sub_100162880();
    sub_100162F0C();
    v55(v52, v53, v54);
    sub_100185404();
    uint64_t v56 = v3 + *(int *)(v20 + 28);
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (!sub_10017F4C0(v56))
      {
        sub_100162880();
        sub_100162F0C();
        v60(v57, v58, v59);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_10019FDA4(v3 + *(int *)(v20 + 32));
    if (!sub_10017F4C0(v3 + *(int *)(v20 + 40)))
    {
      sub_100162880();
      sub_10017E3CC();
      v64(v61, v62, v63);
    }
    uint64_t v65 = v3 + *(int *)(v20 + 44);
    uint64_t v66 = type metadata accessor for TimeZone();
    if (!sub_100188D64(v66))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v4);
    }
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    sub_100185404();
    type metadata accessor for WeatherConditionBackgroundModel();
    sub_100162880();
    sub_100162F0C();
    v71(v68, v69, v70);
    sub_100185404();
  }
  swift_bridgeObjectRelease();
  sub_100184E20();
  sub_100184E20();
  swift_bridgeObjectRelease();
  type metadata accessor for LearnMoreAttributorViewModel();
  sub_100164060();
  if (!sub_100162CC4(v3))
  {
    sub_100162880();
    sub_10017F350();
    v75(v72, v73, v74);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100184E20();
  if (!sub_100166E28())
  {
    if (*(void *)(v20 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    if (!sub_10017F4C0(v20 + *(int *)(v1 + 24)))
    {
      sub_100162880();
      sub_10017E3CC();
      v79(v76, v77, v78);
    }
  }
  sub_100182DA4();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v8 + v5[24]);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v8 + v5[26]);

  return swift_deallocObject();
}

uint64_t sub_100B02214(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for ListView.ListContentView(0);
  sub_1001627C0(v3);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100AEBD84(a1, v5, v6, v7);
}

void sub_100B0226C()
{
  uint64_t v0 = type metadata accessor for ListView.VFXPlaybackCoordinatorView(0);
  sub_1001627C0(v0);
  sub_10019B7C8();
  sub_100AEFCB0();
}

uint64_t sub_100B022A4()
{
  type metadata accessor for ListView.VFXPlaybackCoordinatorView(0);
  sub_100179EF0();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for UserInterfaceSizeClass();
    if (!sub_10017F4C0(v0 + v2))
    {
      sub_100162880();
      sub_100162F0C();
      v3();
    }
  }
  else
  {
    swift_release();
  }
  sub_100183D58();
  swift_unknownObjectRelease();
  sub_100164ABC();

  return swift_deallocObject();
}

uint64_t sub_100B023A4(uint64_t a1, uint64_t a2)
{
  return sub_100B02400(a1, a2, (void (*)(void))type metadata accessor for ListView.VFXPlaybackCoordinatorView);
}

uint64_t sub_100B023D4(uint64_t a1, uint64_t a2)
{
  return sub_100B02400(a1, a2, (void (*)(void))type metadata accessor for ListView.VFXPlaybackCoordinatorView);
}

uint64_t sub_100B02400(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  uint64_t v3 = sub_100183368();

  return v4(v3);
}

void sub_100B02484(_WORD *a1)
{
  a1[80] = 255;
}

uint64_t sub_100B024B4(uint64_t result)
{
  *(unsigned char *)(result + 144) = 1;
  return result;
}

uint64_t sub_100B024C0(uint64_t result)
{
  *(unsigned char *)(result + 144) = 0;
  return result;
}

uint64_t *sub_100B024C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      }
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for ScrollPosition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = sub_10017DF08(&qword_100EB09D8);
    *(void *)&v15[*(int *)(v18 + 28)] = *(void *)&v16[*(int *)(v18 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_100B026BC(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for ScrollPosition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_10017DF08(&qword_100EB09D8);

  return swift_release();
}

void *sub_100B027D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for ScrollPosition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = sub_10017DF08(&qword_100EB09D8);
  *(void *)&v13[*(int *)(v16 + 28)] = *(void *)&v14[*(int *)(v16 + 28)];
  swift_retain();
  return a1;
}

void *sub_100B02980(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100178200((uint64_t)a1 + v6, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for ScrollPosition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = sub_10017DF08(&qword_100EB09D8);
  *(void *)&v12[*(int *)(v15 + 28)] = *(void *)&v13[*(int *)(v15 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100B02B60(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for ScrollPosition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = sub_10017DF08(&qword_100EB09D8);
  *(void *)&v13[*(int *)(v16 + 28)] = *(void *)&v14[*(int *)(v16 + 28)];
  return a1;
}

void *sub_100B02D08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_100178200((uint64_t)a1 + v7, (uint64_t *)&unk_100EAA560);
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11))
      {
        uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for ScrollPosition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = sub_10017DF08(&qword_100EB09D8);
  *(void *)&v14[*(int *)(v17 + 28)] = *(void *)&v15[*(int *)(v17 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_100B02ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B02EEC);
}

uint64_t sub_100B02EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 8));
  }
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(int *)(a3 + 20);
  }
  else
  {
    uint64_t v9 = sub_10017DF08(&qword_100EB09D8);
    uint64_t v10 = *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
}

uint64_t sub_100B02F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B02FA8);
}

uint64_t sub_100B02FA8(uint64_t result, int a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_100162F30();
    if (*(_DWORD *)(v4 + 84) != a3) {
      sub_10017DF08(&qword_100EB09D8);
    }
    sub_1001650E4();
    return _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  return result;
}

void sub_100B03054()
{
  sub_1000265D8(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100029888(319, (unint64_t *)&unk_100EB0A48, (uint64_t (*)(uint64_t))&type metadata accessor for ScrollPosition, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_100B0317C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for LocationModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for ListLocationViewModel(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = v8[6];
    uint64_t v13 = (void *)((char *)a1 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v8[7];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
    }
    else
    {
      uint64_t v22 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v22;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = v8[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *((void *)v25 + 1);
    uint64_t v28 = *((void *)v25 + 2);
    uint64_t v29 = *((void *)v25 + 3);
    char v30 = v25[32];
    sub_100193004(*(void *)v25, v27, v28, v29, v30);
    *(void *)uint64_t v24 = v26;
    *((void *)v24 + 1) = v27;
    *((void *)v24 + 2) = v28;
    *((void *)v24 + 3) = v29;
    v24[32] = v30;
    *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
    uint64_t v31 = v8[10];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
    }
    uint64_t v36 = v8[11];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = type metadata accessor for TimeZone();
    uint64_t v111 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = sub_10017DF08(&qword_100E6D1D8);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    uint64_t v41 = v8[12];
    uint64_t v42 = (void *)((char *)a1 + v41);
    uint64_t v43 = (void *)((char *)a2 + v41);
    uint64_t v110 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v110;
    uint64_t v44 = v8[13];
    uint64_t v45 = (void *)((char *)a1 + v44);
    char v46 = (void *)((char *)a2 + v44);
    uint64_t v109 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v109;
    *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
    uint64_t v47 = v8[15];
    uint64_t v48 = (void *)((char *)a1 + v47);
    uint64_t v49 = (void *)((char *)a2 + v47);
    uint64_t v50 = v49[1];
    *uint64_t v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = v8[16];
    uint64_t v52 = (void *)((char *)a1 + v51);
    uint64_t v53 = (void *)((char *)a2 + v51);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    uint64_t v55 = v8[17];
    uint64_t v56 = (void *)((char *)a1 + v55);
    uint64_t v57 = (void *)((char *)a2 + v55);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = v8[18];
    uint64_t v60 = (void *)((char *)a1 + v59);
    uint64_t v61 = (void *)((char *)a2 + v59);
    uint64_t v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = v8[19];
    uint64_t v64 = (void *)((char *)a1 + v63);
    uint64_t v65 = (void *)((char *)a2 + v63);
    uint64_t v66 = v65[1];
    *uint64_t v64 = *v65;
    v64[1] = v66;
    uint64_t v67 = v8[20];
    uint64_t v68 = (void *)((char *)a1 + v67);
    uint64_t v69 = (void *)((char *)a2 + v67);
    uint64_t v70 = v69[1];
    *uint64_t v68 = *v69;
    v68[1] = v70;
    *((unsigned char *)a1 + v8[21]) = *((unsigned char *)a2 + v8[21]);
    uint64_t v71 = v8[22];
    uint64_t v107 = (char *)a2 + v71;
    uint64_t v108 = (char *)a1 + v71;
    uint64_t v72 = type metadata accessor for WeatherConditionBackgroundModel();
    int v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v106(v108, v107, v72);
    *((unsigned char *)a1 + v8[23]) = *((unsigned char *)a2 + v8[23]);
    *((unsigned char *)a1 + v8[24]) = *((unsigned char *)a2 + v8[24]);
    uint64_t v73 = v8[25];
    uint64_t v74 = (void *)((char *)a1 + v73);
    uint64_t v75 = (void *)((char *)a2 + v73);
    uint64_t v76 = v75[1];
    *uint64_t v74 = *v75;
    v74[1] = v76;
    *(void *)((char *)a1 + v8[26]) = *(void *)((char *)a2 + v8[26]);
    uint64_t v77 = v111[6];
    *(void *)((char *)a1 + v111[5]) = *(void *)((char *)a2 + v111[5]);
    *(_OWORD *)((char *)a1 + v77) = *(_OWORD *)((char *)a2 + v77);
    uint64_t v78 = v111[8];
    *(_OWORD *)((char *)a1 + v111[7]) = *(_OWORD *)((char *)a2 + v111[7]);
    *(void *)((char *)a1 + v78) = *(void *)((char *)a2 + v78);
    uint64_t v79 = v111[9];
    uint64_t v80 = (char *)a1 + v79;
    uint64_t v81 = (char *)a2 + v79;
    long long v82 = *(_OWORD *)((char *)a2 + v79 + 24);
    *(_OWORD *)((char *)a1 + v79 + 24) = v82;
    uint64_t v83 = v82;
    uint64_t v84 = **(void (***)(char *, char *, uint64_t))(v82 - 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v84(v80, v81, v83);
    uint64_t v85 = v111[10];
    uint64_t v86 = v111[11];
    uint64_t v87 = (void *)((char *)a1 + v85);
    uint64_t v88 = (void *)((char *)a2 + v85);
    uint64_t v89 = v88[1];
    void *v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = (void *)((char *)a1 + v86);
    long long v91 = (void *)((char *)a2 + v86);
    uint64_t v92 = v91[1];
    void *v90 = *v91;
    v90[1] = v92;
    uint64_t v93 = v111[12];
    uint64_t v94 = v111[13];
    uint64_t v95 = (void *)((char *)a1 + v93);
    uint64_t v96 = (void *)((char *)a2 + v93);
    uint64_t v97 = v96[1];
    void *v95 = *v96;
    v95[1] = v97;
    int v98 = (void *)((char *)a1 + v94);
    uint64_t v99 = (void *)((char *)a2 + v94);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v100 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
      {
        uint64_t v101 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
      }
    }
    else
    {
      void *v98 = *v99;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v102 = v111[14];
    uint64_t v103 = (char *)a1 + v102;
    uint64_t v104 = (char *)a2 + v102;
    *uint64_t v103 = *v104;
    *((void *)v103 + 1) = *((void *)v104 + 1);
  }
  swift_retain();
  return a1;
}

uint64_t sub_100B038BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + v5[7];
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + v5[8];
  sub_100191D78(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(unsigned char *)(v8 + 32));
  uint64_t v9 = a1 + v5[10];
  uint64_t v10 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + v5[11];
  uint64_t v12 = type metadata accessor for TimeZone();
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + v5[22];
  uint64_t v14 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + *(int *)(a2 + 36));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v15 = a1 + *(int *)(a2 + 52);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    }
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100B03C5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v7[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
  }
  else
  {
    uint64_t v20 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v20;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v7[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  uint64_t v26 = *(void *)(v23 + 16);
  uint64_t v27 = *(void *)(v23 + 24);
  char v28 = *(unsigned char *)(v23 + 32);
  sub_100193004(*(void *)v23, v25, v26, v27, v28);
  *(void *)uint64_t v22 = v24;
  *(void *)(v22 + 8) = v25;
  *(void *)(v22 + 16) = v26;
  *(void *)(v22 + 24) = v27;
  *(unsigned char *)(v22 + 32) = v28;
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v29 = v7[10];
  char v30 = (void *)(a1 + v29);
  uint64_t v31 = (const void *)(a2 + v29);
  uint64_t v32 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v34 = v7[11];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = type metadata accessor for TimeZone();
  uint64_t v109 = a3;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v39 = v7[12];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v108 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v108;
  uint64_t v42 = v7[13];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  uint64_t v107 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v107;
  *(unsigned char *)(a1 + v7[14]) = *(unsigned char *)(a2 + v7[14]);
  uint64_t v45 = v7[15];
  char v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  uint64_t v48 = v47[1];
  *char v46 = *v47;
  v46[1] = v48;
  uint64_t v49 = v7[16];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(a2 + v49);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  uint64_t v53 = v7[17];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  uint64_t v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  uint64_t v57 = v7[18];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (void *)(a2 + v57);
  uint64_t v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  uint64_t v61 = v7[19];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  uint64_t v64 = v63[1];
  *uint64_t v62 = *v63;
  v62[1] = v64;
  uint64_t v65 = v7[20];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (void *)(a2 + v65);
  uint64_t v68 = v67[1];
  *uint64_t v66 = *v67;
  v66[1] = v68;
  *(unsigned char *)(a1 + v7[21]) = *(unsigned char *)(a2 + v7[21]);
  uint64_t v69 = v7[22];
  uint64_t v105 = a2 + v69;
  uint64_t v106 = a1 + v69;
  uint64_t v70 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v104(v106, v105, v70);
  *(unsigned char *)(a1 + v7[23]) = *(unsigned char *)(a2 + v7[23]);
  *(unsigned char *)(a1 + v7[24]) = *(unsigned char *)(a2 + v7[24]);
  uint64_t v71 = v7[25];
  uint64_t v72 = (void *)(a1 + v71);
  uint64_t v73 = (void *)(a2 + v71);
  uint64_t v74 = v73[1];
  *uint64_t v72 = *v73;
  v72[1] = v74;
  *(void *)(a1 + v7[26]) = *(void *)(a2 + v7[26]);
  uint64_t v75 = v109[6];
  *(void *)(a1 + v109[5]) = *(void *)(a2 + v109[5]);
  *(_OWORD *)(a1 + v75) = *(_OWORD *)(a2 + v75);
  uint64_t v76 = v109[8];
  *(_OWORD *)(a1 + v109[7]) = *(_OWORD *)(a2 + v109[7]);
  *(void *)(a1 + v76) = *(void *)(a2 + v76);
  uint64_t v77 = v109[9];
  uint64_t v78 = a1 + v77;
  uint64_t v79 = a2 + v77;
  long long v80 = *(_OWORD *)(a2 + v77 + 24);
  *(_OWORD *)(a1 + v77 + 24) = v80;
  uint64_t v81 = v80;
  long long v82 = **(void (***)(uint64_t, uint64_t, uint64_t))(v80 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v82(v78, v79, v81);
  uint64_t v83 = v109[10];
  uint64_t v84 = v109[11];
  uint64_t v85 = (void *)(a1 + v83);
  uint64_t v86 = (void *)(a2 + v83);
  uint64_t v87 = v86[1];
  *uint64_t v85 = *v86;
  v85[1] = v87;
  uint64_t v88 = (void *)(a1 + v84);
  uint64_t v89 = (void *)(a2 + v84);
  uint64_t v90 = v89[1];
  void *v88 = *v89;
  v88[1] = v90;
  uint64_t v91 = v109[12];
  uint64_t v92 = v109[13];
  uint64_t v93 = (void *)(a1 + v91);
  uint64_t v94 = (void *)(a2 + v91);
  uint64_t v95 = v94[1];
  *uint64_t v93 = *v94;
  v93[1] = v95;
  uint64_t v96 = (void *)(a1 + v92);
  uint64_t v97 = (void *)(a2 + v92);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v98 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v98))
    {
      uint64_t v99 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v98);
    }
  }
  else
  {
    *uint64_t v96 = *v97;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v100 = v109[14];
  uint64_t v101 = a1 + v100;
  uint64_t v102 = a2 + v100;
  *(unsigned char *)uint64_t v101 = *(unsigned char *)v102;
  *(void *)(v101 + 8) = *(void *)(v102 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_100B04350(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v15 = v7[7];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_100AF5680(a1 + v15, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      }
    }
    else
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v20 = v7[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v25 = *(void *)(v22 + 16);
  uint64_t v26 = *(void *)(v22 + 24);
  char v27 = *(unsigned char *)(v22 + 32);
  sub_100193004(*(void *)v22, v24, v25, v26, v27);
  uint64_t v28 = *(void *)v21;
  uint64_t v29 = *(void *)(v21 + 8);
  uint64_t v30 = *(void *)(v21 + 16);
  uint64_t v31 = *(void *)(v21 + 24);
  *(void *)uint64_t v21 = v23;
  *(void *)(v21 + 8) = v24;
  *(void *)(v21 + 16) = v25;
  *(void *)(v21 + 24) = v26;
  char v32 = *(unsigned char *)(v21 + 32);
  *(unsigned char *)(v21 + 32) = v27;
  sub_100191D78(v28, v29, v30, v31, v32);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v33 = v7[10];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  uint64_t v36 = type metadata accessor for Date();
  LODWORD(v26) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36);
  if (v26)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v38 = *(void *)(v36 - 8);
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v34, v36);
LABEL_13:
    uint64_t v39 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 24))(v34, v35, v36);
LABEL_14:
  uint64_t v40 = v7[11];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  uint64_t v43 = type metadata accessor for TimeZone();
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v43);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  uint64_t v46 = *(void *)(v43 - 8);
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v41, v43);
LABEL_19:
    uint64_t v47 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v41, v42, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(v46 + 24))(v41, v42, v43);
LABEL_20:
  uint64_t v48 = v7[12];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  *uint64_t v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = v7[13];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (void *)(a2 + v51);
  *uint64_t v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[14]) = *(unsigned char *)(a2 + v7[14]);
  uint64_t v54 = v7[15];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  *uint64_t v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v7[16];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (void *)(a2 + v57);
  *uint64_t v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v60 = v7[17];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (void *)(a2 + v60);
  *uint64_t v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v7[18];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = v7[19];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (void *)(a2 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = v7[20];
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (void *)(a2 + v69);
  *uint64_t v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[21]) = *(unsigned char *)(a2 + v7[21]);
  uint64_t v72 = v7[22];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  uint64_t v75 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 24))(v73, v74, v75);
  *(unsigned char *)(a1 + v7[23]) = *(unsigned char *)(a2 + v7[23]);
  *(unsigned char *)(a1 + v7[24]) = *(unsigned char *)(a2 + v7[24]);
  uint64_t v76 = v7[25];
  uint64_t v77 = (void *)(a1 + v76);
  uint64_t v78 = (void *)(a2 + v76);
  *uint64_t v77 = *v78;
  v77[1] = v78[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[26]) = *(void *)(a2 + v7[26]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v79 = a3[6];
  long long v80 = (void *)(a1 + v79);
  uint64_t v81 = (void *)(a2 + v79);
  uint64_t v82 = v81[1];
  void *v80 = *v81;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v80[1] = v82;
  uint64_t v83 = a3[7];
  uint64_t v84 = (void *)(a1 + v83);
  uint64_t v85 = (void *)(a2 + v83);
  uint64_t v86 = v85[1];
  void *v84 = *v85;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v84[1] = v86;
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  sub_1000C1E18((uint64_t *)(a1 + a3[9]), (uint64_t *)(a2 + a3[9]));
  uint64_t v87 = a3[10];
  uint64_t v88 = (void *)(a1 + v87);
  uint64_t v89 = (void *)(a2 + v87);
  void *v88 = *v89;
  v88[1] = v89[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v90 = a3[11];
  uint64_t v91 = (void *)(a1 + v90);
  uint64_t v92 = (void *)(a2 + v90);
  uint64_t v93 = v92[1];
  void *v91 = *v92;
  v91[1] = v93;
  swift_retain();
  swift_release();
  uint64_t v94 = a3[12];
  uint64_t v95 = (void *)(a1 + v94);
  uint64_t v96 = (void *)(a2 + v94);
  uint64_t v97 = v96[1];
  void *v95 = *v96;
  v95[1] = v97;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v98 = a3[13];
    uint64_t v99 = (void *)(a1 + v98);
    uint64_t v100 = (void *)(a2 + v98);
    sub_100178200(a1 + v98, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v101 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
      {
        uint64_t v102 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
      }
    }
    else
    {
      *uint64_t v99 = *v100;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v103 = a3[14];
  uint64_t v104 = a1 + v103;
  uint64_t v105 = a2 + v103;
  *(unsigned char *)uint64_t v104 = *(unsigned char *)v105;
  *(void *)(v104 + 8) = *(void *)(v105 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100B04C2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  uint64_t v11 = v7[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
    {
      uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v21 = v7[10];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v26 = v7[11];
  char v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = type metadata accessor for TimeZone();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  *(_OWORD *)(a1 + v7[12]) = *(_OWORD *)(a2 + v7[12]);
  *(_OWORD *)(a1 + v7[13]) = *(_OWORD *)(a2 + v7[13]);
  *(unsigned char *)(a1 + v7[14]) = *(unsigned char *)(a2 + v7[14]);
  *(_OWORD *)(a1 + v7[15]) = *(_OWORD *)(a2 + v7[15]);
  *(_OWORD *)(a1 + v7[16]) = *(_OWORD *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_OWORD *)(a1 + v7[18]) = *(_OWORD *)(a2 + v7[18]);
  *(_OWORD *)(a1 + v7[19]) = *(_OWORD *)(a2 + v7[19]);
  *(_OWORD *)(a1 + v7[20]) = *(_OWORD *)(a2 + v7[20]);
  *(unsigned char *)(a1 + v7[21]) = *(unsigned char *)(a2 + v7[21]);
  uint64_t v31 = v7[22];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  *(unsigned char *)(a1 + v7[23]) = *(unsigned char *)(a2 + v7[23]);
  *(unsigned char *)(a1 + v7[24]) = *(unsigned char *)(a2 + v7[24]);
  *(_OWORD *)(a1 + v7[25]) = *(_OWORD *)(a2 + v7[25]);
  *(void *)(a1 + v7[26]) = *(void *)(a2 + v7[26]);
  uint64_t v35 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  uint64_t v36 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);
  uint64_t v37 = a3[9];
  uint64_t v38 = a3[10];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  long long v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(void *)(v39 + 32) = *(void *)(v40 + 32);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  uint64_t v42 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  uint64_t v43 = a3[13];
  int v44 = (void *)(a1 + v43);
  int v45 = (const void *)(a2 + v43);
  uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v47))
    {
      uint64_t v48 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v47);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_100B051A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v16 = v7[7];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (const void *)(a2 + v16);
    sub_100AF5680(a1 + v16, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    uint64_t v19 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
      {
        uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  uint64_t v22 = v7[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  char v25 = *(unsigned char *)(v24 + 32);
  uint64_t v26 = *(void *)v23;
  uint64_t v27 = *(void *)(v23 + 8);
  uint64_t v28 = *(void *)(v23 + 16);
  uint64_t v29 = *(void *)(v23 + 24);
  long long v30 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v30;
  char v31 = *(unsigned char *)(v23 + 32);
  *(unsigned char *)(v23 + 32) = v25;
  sub_100191D78(v26, v27, v28, v29, v31);
  *(unsigned char *)(a1 + v7[9]) = *(unsigned char *)(a2 + v7[9]);
  uint64_t v32 = v7[10];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  uint64_t v35 = type metadata accessor for Date();
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v38 = *(void *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(void *, uint64_t))(v38 + 8))(v33, v35);
LABEL_13:
    uint64_t v39 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v38 + 40))(v33, v34, v35);
LABEL_14:
  uint64_t v40 = v7[11];
  long long v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  uint64_t v43 = type metadata accessor for TimeZone();
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v43);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  uint64_t v46 = *(void *)(v43 - 8);
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v41, v43);
LABEL_19:
    uint64_t v47 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v41, v42, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(v46 + 40))(v41, v42, v43);
LABEL_20:
  uint64_t v48 = v7[12];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(a2 + v48);
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *uint64_t v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  uint64_t v53 = v7[13];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (uint64_t *)(a2 + v53);
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *uint64_t v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[14]) = *(unsigned char *)(a2 + v7[14]);
  uint64_t v58 = v7[15];
  uint64_t v59 = (void *)(a1 + v58);
  uint64_t v60 = (uint64_t *)(a2 + v58);
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *uint64_t v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  uint64_t v63 = v7[16];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (uint64_t *)(a2 + v63);
  uint64_t v67 = *v65;
  uint64_t v66 = v65[1];
  *uint64_t v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease();
  uint64_t v68 = v7[17];
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (uint64_t *)(a2 + v68);
  uint64_t v72 = *v70;
  uint64_t v71 = v70[1];
  void *v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease();
  uint64_t v73 = v7[18];
  uint64_t v74 = (void *)(a1 + v73);
  uint64_t v75 = (uint64_t *)(a2 + v73);
  uint64_t v77 = *v75;
  uint64_t v76 = v75[1];
  *uint64_t v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease();
  uint64_t v78 = v7[19];
  uint64_t v79 = (void *)(a1 + v78);
  long long v80 = (uint64_t *)(a2 + v78);
  uint64_t v82 = *v80;
  uint64_t v81 = v80[1];
  *uint64_t v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  uint64_t v83 = v7[20];
  uint64_t v84 = (void *)(a1 + v83);
  uint64_t v85 = (uint64_t *)(a2 + v83);
  uint64_t v87 = *v85;
  uint64_t v86 = v85[1];
  void *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[21]) = *(unsigned char *)(a2 + v7[21]);
  uint64_t v88 = v7[22];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  uint64_t v91 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 40))(v89, v90, v91);
  *(unsigned char *)(a1 + v7[23]) = *(unsigned char *)(a2 + v7[23]);
  *(unsigned char *)(a1 + v7[24]) = *(unsigned char *)(a2 + v7[24]);
  uint64_t v92 = v7[25];
  uint64_t v93 = (void *)(a1 + v92);
  uint64_t v94 = (uint64_t *)(a2 + v92);
  uint64_t v96 = *v94;
  uint64_t v95 = v94[1];
  *uint64_t v93 = v96;
  v93[1] = v95;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[26]) = *(void *)(a2 + v7[26]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v97 = a3[6];
  uint64_t v98 = (void *)(a1 + v97);
  uint64_t v99 = (void *)(a2 + v97);
  uint64_t v100 = v99[1];
  void *v98 = *v99;
  swift_unknownObjectRelease();
  v98[1] = v100;
  uint64_t v101 = a3[7];
  uint64_t v102 = (void *)(a1 + v101);
  uint64_t v103 = (void *)(a2 + v101);
  uint64_t v104 = v103[1];
  void *v102 = *v103;
  swift_unknownObjectRelease();
  v102[1] = v104;
  uint64_t v105 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v106 = a1 + v105;
  uint64_t v107 = a2 + v105;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v105);
  long long v108 = *(_OWORD *)(v107 + 16);
  *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
  *(_OWORD *)(v106 + 16) = v108;
  *(void *)(v106 + 32) = *(void *)(v107 + 32);
  uint64_t v109 = a3[10];
  uint64_t v110 = (void *)(a1 + v109);
  uint64_t v111 = (uint64_t *)(a2 + v109);
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *uint64_t v110 = v113;
  v110[1] = v112;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v114 = a3[13];
    uint64_t v115 = (void *)(a1 + v114);
    uint64_t v116 = (const void *)(a2 + v114);
    sub_100178200(a1 + v114, (uint64_t *)&unk_100EAA560);
    uint64_t v117 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v118 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v118))
      {
        uint64_t v119 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v118 - 8) + 32))(v115, v116, v118);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v118);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
    }
  }
  uint64_t v120 = a3[14];
  uint64_t v121 = a1 + v120;
  uint64_t v122 = a2 + v120;
  *(unsigned char *)uint64_t v121 = *(unsigned char *)v122;
  *(void *)(v121 + 8) = *(void *)(v122 + 8);
  swift_release();
  return a1;
}

uint64_t sub_100B05984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B05998);
}

uint64_t sub_100B05998()
{
  sub_100185118();
  type metadata accessor for ListLocationViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v1;
  }
  else
  {
    if (v0 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(v1 + *(int *)(v2 + 20)));
    }
    uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v6 = v1 + *(int *)(v2 + 52);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v6, v0, v5);
}

uint64_t sub_100B05A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B05A4C);
}

void sub_100B05A4C()
{
  uint64_t v4 = sub_100183C30();
  type metadata accessor for ListLocationViewModel(v4);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) != v3)
  {
    if (v3 == 0x7FFFFFFF)
    {
      *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
      return;
    }
    sub_10017DF08((uint64_t *)&unk_100EAA540);
  }
  sub_1001650E4();

  _s7Weather24LocationCompositionStateOwst_0(v6, v7, v8, v9);
}

void sub_100B05AE8()
{
  type metadata accessor for ListLocationViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_1000265D8(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_100B05C20(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      }
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = *(unsigned char *)(v15 + 8);
    sub_100195B7C(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
  }
  return v4;
}

uint64_t sub_100B05E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_10018F6D8(v7, v8);
}

uint64_t sub_100B05ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (void *)(a2 + v6);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_100195B7C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v15;
  return a1;
}

uint64_t sub_100B06060(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v8;
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_100178200(a1 + v9, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t)a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_100195B7C(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = v18;
  sub_10018F6D8(v19, v20);
  return a1;
}

uint64_t sub_100B06214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  return a1;
}

uint64_t sub_100B063A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_100178200(a1 + v6, (uint64_t *)&unk_100EAA560);
    uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10))
      {
        uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  LOBYTE(v14) = *((unsigned char *)v14 + 8);
  uint64_t v16 = *(void *)v13;
  char v17 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = (_BYTE)v14;
  sub_10018F6D8(v16, v17);
  return a1;
}

uint64_t sub_100B06550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B06564);
}

uint64_t sub_100B06564()
{
  sub_100185118();
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v1 + *(int *)(v2 + 28);
    return _s7Weather24LocationCompositionStateOwet_0(v6, v0, v5);
  }
  else
  {
    unsigned int v8 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 32) + 8);
    if (v8 > 1) {
      return (v8 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100B065F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B06604);
}

void sub_100B06604(uint64_t a1, char a2, int a3, uint64_t a4)
{
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 32) + 8) = -a2;
  }
}

void sub_100B06694()
{
  sub_1000265D8(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100B06760()
{
  unint64_t result = qword_100EB0BD8;
  if (!qword_100EB0BD8)
  {
    sub_10018C6DC(&qword_100EB0770);
    sub_10018C6DC(&qword_100EB0718);
    sub_10018C6DC(&qword_100E63A10);
    sub_10018C6DC(&qword_100EB0710);
    sub_10018C6DC(&qword_100EB0708);
    sub_10018C6DC(&qword_100EB0750);
    sub_10018C6DC(&qword_100EB0700);
    sub_10018C6DC(&qword_100EB06F8);
    type metadata accessor for ListViewModel();
    sub_10018C6DC(&qword_100EB06F0);
    sub_100B017A8((uint64_t)&unk_100EB0730);
    swift_getOpaqueTypeConformance2();
    sub_100231190((uint64_t)&unk_100EB0748);
    swift_getOpaqueTypeConformance2();
    sub_100363444();
    swift_getOpaqueTypeConformance2();
    sub_100B0096C();
    swift_getOpaqueTypeConformance2();
    sub_100B00A64();
    swift_getOpaqueTypeConformance2();
    sub_1000D543C();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&qword_100E6D0E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0BD8);
  }
  return result;
}

uint64_t sub_100B069F4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100B06AC0()
{
  return sub_100B076DC((uint64_t)&unk_100EB0BE0);
}

unint64_t sub_100B06B10()
{
  unint64_t result = qword_100EB0BE8;
  if (!qword_100EB0BE8)
  {
    sub_10018C6DC(&qword_100EB0BF0);
    sub_10024D5E4((uint64_t)&unk_100EB0BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0BE8);
  }
  return result;
}

uint64_t sub_100B06BB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B06BCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B06BE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B06C04()
{
  uint64_t v1 = sub_10017DF08(&qword_100EB0C10);
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t active = type metadata accessor for ScrollToActiveLocationModifier(0);
  sub_100179EF0();
  unint64_t v9 = (v4 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  uint64_t v10 = v0 + v9 + *(int *)(active + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for UserInterfaceSizeClass();
    if (!sub_10017F4C0(v10))
    {
      sub_100162880();
      sub_100162F0C();
      v11();
    }
  }
  else
  {
    swift_release();
  }
  type metadata accessor for ScrollPosition();
  sub_100162880();
  sub_100162F0C();
  v12();
  sub_10017DF08(&qword_100EB09D8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B06DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100EB0C10);
  sub_100164920(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t active = type metadata accessor for ScrollToActiveLocationModifier(0);
  sub_1001627C0(active);

  return sub_100AF5290(a1, v2 + v7, a2);
}

uint64_t sub_100B06E5C()
{
  type metadata accessor for ScrollToActiveLocationModifier(0);
  sub_100179EF0();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v14 = *(void *)(v3 + 64);
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  sub_100179C0C();
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_1001632AC(v8))
    {
      sub_100162880();
      sub_100162F0C();
      v10(v9);
    }
  }
  else
  {
    swift_release();
  }
  type metadata accessor for ScrollPosition();
  sub_100162880();
  sub_100162F0C();
  v12(v11);
  sub_10017DF08(&qword_100EB09D8);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v2 + v14 + v7) & ~v7), v4);
  sub_100164ABC();

  return swift_deallocObject();
}

uint64_t sub_100B0701C()
{
  return sub_100B080A4(type metadata accessor for ScrollToActiveLocationModifier, (uint64_t (*)(void))&type metadata accessor for ScrollViewProxy, (uint64_t (*)(unint64_t, uint64_t))sub_100AF555C);
}

unint64_t sub_100B0705C()
{
  unint64_t result = qword_100EB0C60;
  if (!qword_100EB0C60)
  {
    sub_10018C6DC(&qword_100EB0C40);
    sub_100B07108();
    sub_100231190((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0C60);
  }
  return result;
}

unint64_t sub_100B07108()
{
  unint64_t result = qword_100EB0C68;
  if (!qword_100EB0C68)
  {
    sub_10018C6DC(&qword_100EB0C70);
    sub_100B071B4();
    sub_100231190((uint64_t)&unk_100EB0D00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0C68);
  }
  return result;
}

unint64_t sub_100B071B4()
{
  unint64_t result = qword_100EB0C78;
  if (!qword_100EB0C78)
  {
    sub_10018C6DC(&qword_100EB0C80);
    sub_100B07230();
    sub_100B07668();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0C78);
  }
  return result;
}

unint64_t sub_100B07230()
{
  unint64_t result = qword_100EB0C88;
  if (!qword_100EB0C88)
  {
    sub_10018C6DC(&qword_100EB0C90);
    sub_100B072DC();
    sub_100231190((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0C88);
  }
  return result;
}

unint64_t sub_100B072DC()
{
  unint64_t result = qword_100EB0C98;
  if (!qword_100EB0C98)
  {
    sub_10018C6DC(&qword_100EB0CA0);
    sub_100B0737C();
    sub_10024D5E4((uint64_t)&qword_100E64F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0C98);
  }
  return result;
}

unint64_t sub_100B0737C()
{
  unint64_t result = qword_100EB0CA8;
  if (!qword_100EB0CA8)
  {
    sub_10018C6DC(&qword_100EB0CB0);
    sub_10018C6DC(&qword_100EB0CB8);
    sub_100B07450();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&qword_100E66BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0CA8);
  }
  return result;
}

unint64_t sub_100B07450()
{
  unint64_t result = qword_100EB0CC0;
  if (!qword_100EB0CC0)
  {
    sub_10018C6DC(&qword_100EB0CB8);
    sub_100B074F0();
    sub_10024D5E4((uint64_t)&qword_100E85058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0CC0);
  }
  return result;
}

unint64_t sub_100B074F0()
{
  unint64_t result = qword_100EB0CC8;
  if (!qword_100EB0CC8)
  {
    sub_10018C6DC(&qword_100EB0CD0);
    sub_100B017A8((uint64_t)&unk_100EB0CD8);
    sub_10024D5E4((uint64_t)&qword_100E85068);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0CC8);
  }
  return result;
}

unint64_t sub_100B075BC()
{
  unint64_t result = qword_100EB0CE8;
  if (!qword_100EB0CE8)
  {
    sub_10018C6DC(&qword_100EB0CF0);
    sub_100231190((uint64_t)&qword_100E91ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0CE8);
  }
  return result;
}

unint64_t sub_100B07668()
{
  unint64_t result = qword_100EB0CF8;
  if (!qword_100EB0CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0CF8);
  }
  return result;
}

uint64_t type metadata accessor for DetermineWhetherRowIsListLocationGeometryEffectSourceModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB0E18);
}

uint64_t sub_100B076D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100AF12D0(a1);
}

unint64_t sub_100B076DC(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100B07744()
{
  unint64_t result = qword_100EB0D18;
  if (!qword_100EB0D18)
  {
    sub_10018C6DC(&qword_100EB0D20);
    sub_10024D5E4((uint64_t)&qword_100EAAC90);
    sub_100231190((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0D18);
  }
  return result;
}

uint64_t sub_100B07814()
{
  uint64_t v1 = type metadata accessor for ListRowView(0);
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  type metadata accessor for LocationModel();
  sub_100162880();
  sub_100162F0C();
  v4();
  uint64_t v5 = type metadata accessor for ListLocationViewModel(0);
  sub_100179008();
  uint64_t v6 = sub_1001836AC();
  type metadata accessor for ListLocationRowPrimaryText(v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for Date();
    if (!sub_1001810A0(v7))
    {
      sub_100162880();
      sub_100162F0C();
      v8();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10019FDA4(v3 + *(int *)(v5 + 32));
  sub_1001836AC();
  uint64_t v9 = type metadata accessor for Date();
  if (!sub_1001810A0(v9))
  {
    sub_100162880();
    uint64_t v10 = sub_10019D614();
    v11(v10);
  }
  sub_1001836AC();
  uint64_t v12 = type metadata accessor for TimeZone();
  if (!sub_1001810A0(v12))
  {
    sub_100162880();
    uint64_t v13 = sub_10019D614();
    v14(v13);
  }
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_1001836AC();
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100162880();
  sub_100162F0C();
  v15();
  sub_100179008();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + *(int *)(v1 + 36));
  sub_100179008();
  sub_100183D58();
  sub_100183D58();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_1001632AC(v16))
    {
      sub_100162880();
      sub_100162F0C();
      v17();
    }
  }
  else
  {
    swift_release();
  }
  sub_100183D58();
  sub_100164ABC();

  return swift_deallocObject();
}

uint64_t sub_100B07B00()
{
  return sub_100B00734(type metadata accessor for ListRowView, sub_100AF175C);
}

uint64_t sub_100B07B2C()
{
  uint64_t v1 = type metadata accessor for ListRowView(0);
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = (int *)type metadata accessor for ListLocationViewModel(0);
  sub_100179C0C();
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v0 + v3;
  uint64_t v10 = type metadata accessor for LocationModel();
  sub_100162880();
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v3, v10);
  sub_1001631C0();
  uint64_t v12 = v0 + v3 + v6[7];
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for Date();
    if (!sub_100162CC4(v12))
    {
      sub_100162880();
      sub_100162F0C();
      v13();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v5 + v8;
  sub_10019FDA4(v9 + v6[8]);
  uint64_t v15 = v9 + v6[10];
  uint64_t v16 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t v37 = v0;
  uint64_t v18 = v3 + v14;
  uint64_t v19 = v9 + v6[11];
  type metadata accessor for TimeZone();
  if (!sub_100162CC4(v19))
  {
    sub_100162880();
    sub_10017F350();
    v20();
  }
  uint64_t v21 = v18 & ~v8;
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  uint64_t v22 = v9 + v6[22];
  uint64_t v23 = type metadata accessor for WeatherConditionBackgroundModel();
  sub_100162880();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  sub_1001631C0();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v9 + *(int *)(v1 + 36));
  sub_1001631C0();
  swift_release();
  swift_release();
  uint64_t v25 = v9 + *(int *)(v1 + 52);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26))
    {
      sub_100162880();
      sub_100162F0C();
      v27();
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v28 = v37 + v21;
  sub_100162F0C();
  v29();
  sub_100179008();
  uint64_t v30 = v37 + v21 + v6[7];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v16))
    {
      sub_100162880();
      sub_100162F0C();
      v31();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10019FDA4(v28 + v6[8]);
  uint64_t v32 = v28 + v6[10];
  if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v16))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v16);
  }
  if (!sub_100162CC4(v28 + v6[11]))
  {
    sub_100162880();
    sub_10017F350();
    v34();
  }
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100162F0C();
  v35();
  sub_100179008();

  return swift_deallocObject();
}

uint64_t sub_100B08064()
{
  return sub_100B080A4(type metadata accessor for ListRowView, type metadata accessor for ListLocationViewModel, (uint64_t (*)(unint64_t, uint64_t))sub_100AF2634);
}

uint64_t sub_100B080A4(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t (*a3)(unint64_t, uint64_t))
{
  uint64_t v5 = a1(0);
  sub_100164920(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = *(void *)(a2(0) - 8);
  uint64_t v11 = v3 + ((v7 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return a3(v3 + v7, v11);
}

uint64_t sub_100B08180()
{
  return swift_deallocObject();
}

uint64_t sub_100B081A0()
{
  return sub_100AF2C08(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_100B081A8()
{
  return sub_100B017A8((uint64_t)&unk_100EB0D90);
}

unint64_t sub_100B081D8()
{
  return sub_100B017A8((uint64_t)&unk_100EB0D98);
}

unint64_t sub_100B08208()
{
  unint64_t result = qword_100EB0DA0;
  if (!qword_100EB0DA0)
  {
    sub_10018C6DC(&qword_100EB0D38);
    sub_10024D5E4((uint64_t)&unk_100EB0DA8);
    sub_10024D5E4((uint64_t)&qword_100E79F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0DA0);
  }
  return result;
}

unint64_t sub_100B082CC()
{
  unint64_t result = qword_100EB0DB0;
  if (!qword_100EB0DB0)
  {
    sub_10018C6DC(&qword_100EB0D68);
    sub_100B0836C();
    sub_10024D5E4((uint64_t)&qword_100E85058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0DB0);
  }
  return result;
}

unint64_t sub_100B0836C()
{
  unint64_t result = qword_100EB0DB8;
  if (!qword_100EB0DB8)
  {
    sub_10018C6DC(&qword_100EB0D60);
    sub_10018C6DC(&qword_100EB0D50);
    sub_100B017A8((uint64_t)&unk_100EB0D88);
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&qword_100E85068);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0DB8);
  }
  return result;
}

uint64_t *sub_100B0847C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)v4 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)v4 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100B08570(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100B08600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100B086A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (void *)(a2 + v10);
  *(void *)(a1 + v10) = *v12;
  swift_retain();
  swift_release();
  *(void *)(v11 + 8) = v12[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100B08780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100B08804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_release();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (void *)(a2 + v12);
  *(void *)(a1 + v12) = *v14;
  swift_release();
  *(void *)(v13 + 8) = v14[1];
  swift_release();
  return a1;
}

uint64_t sub_100B088BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B088D0);
}

uint64_t sub_100B088D0()
{
  sub_100184608();
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v3 + 84) != v1) {
    return sub_100163020(*(void *)(v0 + *(int *)(v2 + 20) + 8));
  }
  uint64_t v4 = sub_10018C688();

  return _s7Weather24LocationCompositionStateOwet_0(v4, v5, v6);
}

uint64_t sub_100B08944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B08958);
}

void sub_100B08958()
{
  sub_100183C30();
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v1 + 84) == v0)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v2, v3, v4, v5);
  }
  else
  {
    sub_1001A4BEC();
  }
}

uint64_t sub_100B089C4()
{
  uint64_t result = type metadata accessor for Location.Identifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for EnforceHigherZOrderDuringListLocationGeometryEffectModifier()
{
  return &type metadata for EnforceHigherZOrderDuringListLocationGeometryEffectModifier;
}

unint64_t sub_100B08A70()
{
  unint64_t result = qword_100EB0E58;
  if (!qword_100EB0E58)
  {
    sub_10018C6DC(&qword_100EB0E60);
    sub_10024D5E4((uint64_t)&unk_100EB0C20);
    sub_10024D5E4((uint64_t)&unk_100EB0C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0E58);
  }
  return result;
}

unint64_t sub_100B08B38()
{
  unint64_t result = qword_100EB0E68;
  if (!qword_100EB0E68)
  {
    sub_10018C6DC(&qword_100EB0D28);
    sub_100B08BD8();
    sub_10024D5E4((uint64_t)&unk_100EB0E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0E68);
  }
  return result;
}

unint64_t sub_100B08BD8()
{
  unint64_t result = qword_100EB0E70;
  if (!qword_100EB0E70)
  {
    sub_10018C6DC(&qword_100EB0C58);
    sub_10018C6DC(&qword_100EB0C48);
    sub_10018C6DC(&qword_100EB0D08);
    sub_10018C6DC(&qword_100EB0C40);
    sub_100B0705C();
    swift_getOpaqueTypeConformance2();
    sub_100B076DC((uint64_t)&unk_100EB0D10);
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100EB0E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0E70);
  }
  return result;
}

unint64_t sub_100B08D5C()
{
  unint64_t result = qword_100EB0E98;
  if (!qword_100EB0E98)
  {
    sub_10018C6DC(&qword_100EB0D78);
    sub_10018C6DC(&qword_100EB0D68);
    sub_100B082CC();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&qword_100EAAD00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0E98);
  }
  return result;
}

uint64_t sub_100B08E44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B08E60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B08E7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162880();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

unint64_t sub_100B08ED4()
{
  unint64_t result = qword_100EB0EC8;
  if (!qword_100EB0EC8)
  {
    sub_10018C6DC(&qword_100EB0EA0);
    sub_10024D5E4((uint64_t)&unk_100EB0ED0);
    sub_10024D5E4((uint64_t)&unk_100EAAEC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0EC8);
  }
  return result;
}

unint64_t sub_100B08F9C()
{
  unint64_t result = qword_100EB0ED8;
  if (!qword_100EB0ED8)
  {
    sub_10018C6DC(&qword_100EB0EC0);
    sub_10024D5E4((uint64_t)&unk_100EB0EE0);
    sub_10024D5E4((uint64_t)&qword_100E70D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0ED8);
  }
  return result;
}

void *sub_100B0906C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10017DF08(&qword_100EB0FA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NewsArticle();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v52 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v51 = (char *)v42 - v12;
  uint64_t v13 = type metadata accessor for NewsArticle();
  uint64_t v50 = *(void *)(v13 - 8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v49 = (void *)((char *)v42 - v17);
  __chkstk_darwin(v18);
  uint64_t v48 = (uint64_t)v42 - v19;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    v42[1] = v2;
    uint64_t v21 = *(void *)(type metadata accessor for Article() - 8);
    uint64_t v22 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v57 = *(void *)(v21 + 72);
    uint64_t v53 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v43 = v9;
    int v44 = (void (**)(char *, uint64_t))(v9 + 8);
    int v45 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    v42[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t v46 = v7;
    uint64_t v47 = a2;
    do
    {
      Article.id.getter();
      if (*(void *)(a2 + 16) && (unint64_t v24 = sub_1001D23B8(), (v25 & 1) != 0))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v7, *(void *)(a2 + 56) + *(void *)(v43 + 72) * v24, v8);
        uint64_t v26 = 0;
      }
      else
      {
        uint64_t v26 = 1;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, v26, 1, v8);
      swift_bridgeObjectRelease();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
      {
        sub_1000F3400((uint64_t)v7, &qword_100EB0FA0);
      }
      else
      {
        uint64_t v55 = v23;
        uint64_t v56 = v20;
        uint64_t v27 = v51;
        (*v45)(v51, v7, v8);
        uint64_t v28 = (uint64_t)v52;
        (*v53)(v52, v27, v8);
        uint64_t v54 = Article.headlineOverride.getter();
        uint64_t v30 = v29;
        uint64_t v31 = v8;
        uint64_t v32 = v15;
        uint64_t v33 = Article.phenomena.getter();
        uint64_t v34 = Article.alertIds.getter();
        uint64_t v35 = v49;
        uint64_t v36 = v33;
        uint64_t v15 = v32;
        uint64_t v8 = v31;
        sub_100A699B8(v28, v54, v30, v36, v34, v49);
        (*v44)(v27, v31);
        uint64_t v37 = v48;
        sub_100B0BE6C((uint64_t)v35, v48, (uint64_t (*)(void))type metadata accessor for NewsArticle);
        uint64_t v38 = v37;
        uint64_t v23 = v55;
        sub_100B0BE6C(v38, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for NewsArticle);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = (void *)sub_1007EA2B4(0, v23[2] + 1, 1, (uint64_t)v23);
        }
        unint64_t v40 = v23[2];
        unint64_t v39 = v23[3];
        uint64_t v7 = v46;
        a2 = v47;
        uint64_t v20 = v56;
        if (v40 >= v39 >> 1) {
          uint64_t v23 = (void *)sub_1007EA2B4(v39 > 1, v40 + 1, 1, (uint64_t)v23);
        }
        void v23[2] = v40 + 1;
        sub_100B0BE6C((uint64_t)v15, (uint64_t)v23+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v40, (uint64_t (*)(void))type metadata accessor for NewsArticle);
      }
      v22 += v57;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v23;
}

void sub_100B09564(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = type metadata accessor for Article();
  uint64_t v5 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v28 = *(void *)(a1 + 16);
  if (v28)
  {
    unint64_t v11 = 0;
    uint64_t v22 = a2;
    uint64_t v23 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v27 = v5 + 16;
    uint64_t v21 = a1;
    uint64_t v12 = v24;
    while (v11 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v14 = *(void *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v10, a1 + v13 + v14 * v11, v12, v8);
      char v15 = sub_100B0B104((uint64_t)v10, a2);
      if (v2)
      {
        (*v23)(v10, v12);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return;
      }
      if (v15)
      {
        char v25 = *v26;
        v25(v29, v10, v12);
        uint64_t v16 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F3D00();
          uint64_t v16 = v30;
        }
        unint64_t v17 = v16[2];
        if (v17 >= v16[3] >> 1)
        {
          sub_1007F3D00();
          uint64_t v16 = v30;
        }
        v16[2] = v17 + 1;
        unint64_t v18 = (unint64_t)v16 + v13 + v17 * v14;
        uint64_t v19 = v24;
        v25((char *)v18, v29, v24);
        uint64_t v30 = v16;
        uint64_t v12 = v19;
        a1 = v21;
        a2 = v22;
      }
      else
      {
        (*v23)(v10, v12);
      }
      if (v28 == ++v11) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void *sub_100B09828(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for NewsArticlePlacement();
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  __chkstk_darwin(v6);
  __n128 v8 = (uint64_t *)((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    sub_1007F314C();
    uint64_t v10 = v22;
    uint64_t v11 = *(void *)(type metadata accessor for ArticlePlacement() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v19 = *(void *)(v11 + 72);
    do
    {
      uint64_t v13 = ArticlePlacement.articles.getter();
      swift_bridgeObjectRetain();
      uint64_t v14 = v3;
      char v15 = sub_100B0906C(v13, a2);
      swift_bridgeObjectRelease();
      ArticlePlacement.location.getter();
      *__n128 v8 = v15;
      uint64_t v22 = v10;
      unint64_t v16 = v10[2];
      if (v16 >= v10[3] >> 1)
      {
        sub_1007F314C();
        uint64_t v10 = v22;
      }
      v10[2] = v16 + 1;
      sub_100B0BE6C((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v16, (uint64_t (*)(void))type metadata accessor for NewsArticlePlacement);
      v12 += v19;
      --v9;
      uint64_t v3 = v14;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v10;
}

uint64_t sub_100B09A74(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100B09B3C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
    while (1)
    {
      id v4 = (a2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a2 + 32);
      uint64_t v5 = v4;
      type metadata accessor for VFXEffect();
      char v6 = static NSObject.== infix(_:_:)();

      if (v6) {
        break;
      }
      if (v3 != 1)
      {
        uint64_t v9 = 5;
        while (1)
        {
          id v10 = (a2 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(a2 + 8 * v9);
          uint64_t v11 = v10;
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1)) {
            break;
          }
          char v7 = static NSObject.== infix(_:_:)();

          if ((v7 & 1) == 0)
          {
            ++v9;
            if (v12 != v3) {
              continue;
            }
          }
          goto LABEL_9;
        }
        __break(1u);
LABEL_19:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (v3) {
          continue;
        }
      }
      goto LABEL_8;
    }
    char v7 = 1;
  }
  else
  {
LABEL_8:
    char v7 = 0;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_100B09C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  uint64_t v8 = type metadata accessor for NewsArticle();
  v7[17] = v8;
  v7[18] = *(void *)(v8 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ContinuousClock();
  v7[21] = v9;
  v7[22] = *(void *)(v9 - 8);
  v7[23] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Article();
  v7[24] = v10;
  v7[25] = *(void *)(v10 - 8);
  v7[26] = swift_task_alloc();
  return _swift_task_switch(sub_100B09E14, 0, 0);
}

uint64_t sub_100B09E14()
{
  sub_1000A9DE8();
  type metadata accessor for MainActor();
  *(void *)(v0 + 216) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B09EA4, v2, v1);
}

uint64_t sub_100B09EA4()
{
  sub_1000A9DE8();
  swift_release();
  type metadata accessor for NewsService();
  *(void *)(v0 + 224) = static NewsService.shared.getter();
  return _swift_task_switch(sub_100B09F1C, 0, 0);
}

uint64_t sub_100B09F1C()
{
  uint64_t v48 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 13;
  uint64_t v41 = *(void *)(News.placements.getter() + 16);
  unint64_t v39 = v2;
  if (v41)
  {
    uint64_t v3 = v1[25];
    uint64_t v4 = type metadata accessor for ArticlePlacement();
    sub_100164920(v4);
    uint64_t v40 = v3;
    uint64_t v5 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    for (uint64_t i = 0; i != v41; ++i)
    {
      uint64_t v8 = v1[28];
      uint64_t v9 = ArticlePlacement.articles.getter();
      swift_retain();
      sub_100B09564(v9, v8);
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)(v10 + 16);
      if (v12)
      {
        uint64_t v42 = v6;
        uint64_t v43 = i;
        uint64_t v47 = _swiftEmptyArrayStorage;
        sub_1001EA6A0(0, v12, 0);
        uint64_t v13 = v11 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
        int v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
        uint64_t v45 = *(void *)(v40 + 72);
        uint64_t v14 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v15 = v1[26];
          unint64_t v16 = v1;
          uint64_t v17 = v1[24];
          v44(v15, v13, v17);
          uint64_t v18 = Article.id.getter();
          uint64_t v20 = v19;
          (*v5)(v15, v17);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001EA6A0(0, v14[2] + 1, 1);
            uint64_t v14 = v47;
          }
          unint64_t v22 = v14[2];
          unint64_t v21 = v14[3];
          if (v22 >= v21 >> 1)
          {
            sub_1001EA6A0(v21 > 1, v22 + 1, 1);
            uint64_t v14 = v47;
          }
          void v14[2] = v22 + 1;
          uint64_t v23 = &v14[2 * v22];
          v23[4] = v18;
          v23[5] = v20;
          v13 += v45;
          --v12;
          uint64_t v1 = v16;
        }
        while (v12);
        swift_bridgeObjectRelease();
        uint64_t v6 = v42;
        uint64_t i = v43;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_10037FB08();
    }
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v1[29] = _swiftEmptyArrayStorage;
  if (qword_100E62868 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  v1[30] = sub_1002102B0(v24, (uint64_t)qword_100F52040);
  swift_bridgeObjectRetain_n();
  char v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = v2 - 1;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v29 = Array.description.getter();
    uint64_t v30 = v1;
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    *uint64_t v27 = sub_10016414C(v29, v32, (uint64_t *)&v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v1 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Fetching articles, articleIDs=%{public}s", v28, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (qword_100E62728 != -1) {
    swift_once();
  }
  type metadata accessor for NewsDataManager();
  sub_100B0BED4(&qword_100EB0F90, v33, (void (*)(uint64_t))type metadata accessor for NewsDataManager);
  Configurable.setting<A>(_:)();
  uint64_t v34 = v1[7];
  if (v34 < 0)
  {
    uint64_t v37 = (void *)swift_task_alloc();
    v1[33] = v37;
    *uint64_t v37 = v1;
    v37[1] = sub_100B0A834;
    uint64_t v38 = v1[29];
    return NewsService.fetchArticles(for:)(v38);
  }
  else
  {
    sub_10088F054(v34);
    ContinuousClock.init()();
    uint64_t v46 = (uint64_t (__cdecl *)())((char *)&dword_100E9CFC0 + dword_100E9CFC0);
    uint64_t v35 = (void *)swift_task_alloc();
    v1[31] = v35;
    *uint64_t v35 = v1;
    v35[1] = sub_100B0A4E8;
    return v46();
  }
}

uint64_t sub_100B0A4E8()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v3 = v2;
  sub_10018AA7C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10018AA7C();
  *uint64_t v6 = v5;
  v3[32] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = sub_100181B38();
    v8(v7);
    return _swift_task_switch(sub_100B0A63C, 0, 0);
  }
  else
  {
    uint64_t v9 = sub_100181B38();
    v10(v9);
    uint64_t v11 = (void *)swift_task_alloc();
    v3[33] = v11;
    *uint64_t v11 = v5;
    v11[1] = sub_100B0A834;
    uint64_t v12 = v3[29];
    return NewsService.fetchArticles(for:)(v12);
  }
}

uint64_t sub_100B0A63C()
{
  uint64_t v16 = v0;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (_DWORD *)sub_10017EE18();
    uint64_t v15 = swift_slowAlloc();
    *uint64_t v3 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_10016414C(v4, v6, &v15);
    sub_1001A2980(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1001A12D0();
    uint64_t v8 = Error.localizedDescription.getter();
    uint64_t v10 = sub_10016414C(v8, v9, &v15);
    sub_10017AF90(v10);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    sub_10019DC5C((void *)&_mh_execute_header, v11, v12, "Failed to fetch articles, articleIDs=%{public}s, error=%{public}s");
    sub_1001896FC();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(void *))(v0 + 120))(_swiftEmptyArrayStorage);
  swift_release();
  swift_errorRelease();
  sub_1001D2278();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v13();
}

uint64_t sub_100B0A834()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v3 = v2;
  sub_10018AA7C();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 272) = v5;
  *(void *)(v3 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v6 = sub_100B0AF0C;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v6 = sub_100B0A924;
  }
  return _swift_task_switch(v6, 0, 0);
}

unint64_t sub_100B0A924()
{
  uint64_t v59 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[34];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v0[18];
    uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    uint64_t v52 = (void (**)(unint64_t, uint64_t, uint64_t))(v4 + 40);
    uint64_t v53 = (uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 32);
    uint64_t v54 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    uint64_t v57 = &_swiftEmptyDictionarySingleton;
    while (1)
    {
      uint64_t v56 = v3;
      uint64_t v8 = v1[19];
      uint64_t v7 = v1[20];
      unint64_t v9 = v1;
      uint64_t v10 = v1[17];
      v55(v7, v5, v10);
      uint64_t v11 = NewsArticle.id.getter();
      uint64_t v13 = v12;
      v55(v8, v7, v10);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v58[0] = (uint64_t)v57;
      unint64_t result = sub_1001D23B8();
      uint64_t v17 = v57[2];
      BOOL v18 = (v16 & 1) == 0;
      Swift::Int v19 = v17 + v18;
      if (__OFADD__(v17, v18))
      {
        __break(1u);
LABEL_27:
        __break(1u);
        return result;
      }
      unint64_t v20 = result;
      char v21 = v16;
      sub_10017DF08(&qword_100EB0F98);
      Swift::Bool v22 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v19);
      uint64_t v23 = (void *)v58[0];
      uint64_t v1 = v9;
      if (v22)
      {
        unint64_t v24 = sub_1001D23B8();
        if ((v21 & 1) != (v25 & 1))
        {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v20 = v24;
      }
      uint64_t v26 = v9[19];
      uint64_t v27 = v9[17];
      uint64_t v57 = (void *)v58[0];
      if (v21)
      {
        (*v52)(*(void *)(v58[0] + 56) + v20 * v6, v26, v27);
      }
      else
      {
        *(void *)(v58[0] + 8 * (v20 >> 6) + 64) |= 1 << v20;
        uint64_t v28 = (uint64_t *)(v23[6] + 16 * v20);
        *uint64_t v28 = v11;
        v28[1] = v13;
        unint64_t result = (*v53)(v23[7] + v20 * v6, v26, v27);
        uint64_t v29 = v23[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_27;
        }
        void v23[2] = v31;
        swift_bridgeObjectRetain();
      }
      uint64_t v32 = v9[20];
      uint64_t v33 = v9[17];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*v54)(v32, v33);
      v5 += v6;
      uint64_t v3 = v56 - 1;
      if (v56 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v34 = v57;
        goto LABEL_14;
      }
    }
  }
  uint64_t v34 = &_swiftEmptyDictionarySingleton;
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v38 = Dictionary.description.getter();
    unint64_t v40 = v39;
    swift_bridgeObjectRelease();
    v1[11] = sub_10016414C(v38, v40, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Received articles, articles=%{public}s", v37, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v41 = News.placements.getter();
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_100B09828(v41, (uint64_t)v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v43 = Logger.logObject.getter();
  os_log_type_t v44 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = v1 + 10;
    uint64_t v46 = v1;
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 136446210;
    type metadata accessor for NewsArticlePlacement();
    swift_bridgeObjectRetain();
    uint64_t v48 = Array.description.getter();
    unint64_t v50 = v49;
    swift_bridgeObjectRelease();
    *uint64_t v45 = sub_10016414C(v48, v50, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Converted articles into result, result=%{public}s", v47, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    uint64_t v1 = v46;
    sub_100162EE0();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  ((void (*)(void *))v1[15])(v42);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001D2278();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v51();
}

uint64_t sub_100B0AF0C()
{
  uint64_t v16 = v0;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (_DWORD *)sub_10017EE18();
    uint64_t v15 = swift_slowAlloc();
    *uint64_t v3 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_10016414C(v4, v6, &v15);
    sub_1001A2980(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_1001A12D0();
    uint64_t v8 = Error.localizedDescription.getter();
    uint64_t v10 = sub_10016414C(v8, v9, &v15);
    sub_10017AF90(v10);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    sub_10019DC5C((void *)&_mh_execute_header, v11, v12, "Failed to fetch articles, articleIDs=%{public}s, error=%{public}s");
    sub_1001896FC();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(void *))(v0 + 120))(_swiftEmptyArrayStorage);
  swift_release();
  swift_errorRelease();
  sub_1001D2278();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v13();
}

uint64_t sub_100B0B104(uint64_t a1, uint64_t a2)
{
  uint64_t v109 = type metadata accessor for Article();
  uint64_t v110 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  long long v108 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v106 = (char *)&v97 - v6;
  __chkstk_darwin(v7);
  uint64_t v100 = (char *)&v97 - v8;
  __chkstk_darwin(v9);
  uint64_t v99 = (char *)&v97 - v10;
  uint64_t v11 = type metadata accessor for Locale.Language();
  uint64_t v101 = *(void *)(v11 - 8);
  uint64_t v102 = (uint64_t *)v11;
  __chkstk_darwin(v11);
  uint64_t v105 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v97 - v14;
  uint64_t v16 = type metadata accessor for Locale();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  os_log_t v103 = (os_log_t)((char *)&v97 - v20);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v97 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E63DC0);
  __chkstk_darwin(v24 - 8);
  uint64_t v104 = (char *)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v97 - v27;
  uint64_t v29 = (void *)Article.supportedStorefronts.getter();
  uint64_t v107 = a2;
  uint64_t v30 = NewsService.storeFrontID.getter();
  LOBYTE(a2) = sub_100B09A74(v30, v31, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
  {
    if (qword_100E62868 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_1002102B0(v40, (uint64_t)qword_100F52040);
    uint64_t v41 = v110;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v110 + 16);
    uint64_t v43 = v106;
    uint64_t v44 = v109;
    v42(v106, a1, v109);
    uint64_t v45 = v108;
    v42(v108, a1, v44);
    swift_retain_n();
    os_log_t v46 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    int v48 = v47;
    if (!os_log_type_enabled(v46, v47))
    {
      uint64_t v66 = *(void (**)(char *, uint64_t))(v41 + 8);
      v66(v43, v44);
      swift_release_n();
      v66(v45, v44);
LABEL_28:

      return 0;
    }
    uint64_t v49 = swift_slowAlloc();
    uint64_t v105 = (char *)swift_slowAlloc();
    uint64_t v113 = v105;
    *(_DWORD *)uint64_t v49 = 136446722;
    LODWORD(v104) = v48;
    os_log_t v103 = v46;
    uint64_t v50 = Article.id.getter();
    uint64_t v111 = sub_10016414C(v50, v51, (uint64_t *)&v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v52 = *(void (**)(char *, uint64_t))(v41 + 8);
    uint64_t v110 = v41 + 8;
    v52(v43, v44);
    *(_WORD *)(v49 + 12) = 2082;
    uint64_t v53 = NewsService.storeFrontID.getter();
    uint64_t v111 = sub_10016414C(v53, v54, (uint64_t *)&v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 22) = 2082;
    Article.supportedStorefronts.getter();
    uint64_t v55 = Array.description.getter();
    uint64_t v56 = v44;
    unint64_t v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v111 = sub_10016414C(v55, v58, (uint64_t *)&v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v52(v45, v56);
    os_log_t v59 = v103;
    _os_log_impl((void *)&_mh_execute_header, v103, (os_log_type_t)v104, "Filtering article with unsupported storefront, id=%{public}s, storefront=%{public}s, supportedStorefronts=%{public}s", (uint8_t *)v49, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_30:

    return 0;
  }
  uint64_t v107 = a1;
  Article.locale.getter();
  Locale.language.getter();
  uint64_t v34 = *(char **)(v17 + 8);
  uint64_t v32 = (char *)(v17 + 8);
  uint64_t v33 = v34;
  long long v108 = (char *)v16;
  ((void (*)(char *, uint64_t))v34)(v23, v16);
  Locale.Language.languageCode.getter();
  uint64_t v35 = *(void (**)(char *))(v101 + 8);
  os_log_type_t v36 = v15;
  uint64_t v37 = v102;
  v35(v36);
  uint64_t v38 = type metadata accessor for Locale.LanguageCode();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v38) == 1)
  {
    sub_1000F3400((uint64_t)v28, &qword_100E63DC0);
    uint64_t v101 = 0;
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v101 = Locale.LanguageCode.identifier.getter();
    uint64_t v39 = v60;
    (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v28, v38);
  }
  os_log_t v61 = v103;
  static Locale.current.getter();
  uint64_t v62 = v105;
  Locale.language.getter();
  uint64_t v106 = v33;
  ((void (*)(os_log_t, char *))v33)(v61, v108);
  uint64_t v63 = (uint64_t)v104;
  Locale.Language.languageCode.getter();
  ((void (*)(char *, uint64_t *))v35)(v62, v37);
  if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v38) == 1)
  {
    sub_1000F3400(v63, &qword_100E63DC0);
    uint64_t v64 = v110;
    uint64_t v65 = v107;
    if (!v39) {
      return 1;
    }
    goto LABEL_23;
  }
  uint64_t v67 = Locale.LanguageCode.identifier.getter();
  uint64_t v68 = v63;
  uint64_t v69 = v67;
  uint64_t v71 = v70;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v68, v38);
  uint64_t v65 = v107;
  if (!v39)
  {
    uint64_t v64 = v110;
    if (!v71) {
      return 1;
    }
LABEL_23:
    uint64_t v105 = v32;
    swift_bridgeObjectRelease();
LABEL_24:
    if (qword_100E62868 != -1) {
      swift_once();
    }
    uint64_t v74 = type metadata accessor for Logger();
    sub_1002102B0(v74, (uint64_t)qword_100F52040);
    uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
    uint64_t v76 = v99;
    uint64_t v77 = v109;
    v75(v99, v65, v109);
    uint64_t v78 = v100;
    v75(v100, v65, v77);
    os_log_t v59 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.default.getter();
    int v80 = v79;
    if (os_log_type_enabled(v59, v79))
    {
      uint64_t v81 = swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      uint64_t v113 = (char *)v107;
      *(_DWORD *)uint64_t v81 = 136446722;
      LODWORD(v104) = v80;
      uint64_t v82 = Article.id.getter();
      uint64_t v111 = sub_10016414C(v82, v83, (uint64_t *)&v113);
      uint64_t v102 = &v112;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v84 = *(void (**)(char *, uint64_t))(v64 + 8);
      uint64_t v110 = v64 + 8;
      uint64_t v101 = (uint64_t)v84;
      v84(v76, v77);
      *(_WORD *)(v81 + 12) = 2082;
      uint64_t v99 = (char *)(v81 + 14);
      uint64_t v85 = v98;
      Article.locale.getter();
      sub_100B0BED4(&qword_100E868F0, 255, (void (*)(uint64_t))&type metadata accessor for Locale);
      uint64_t v86 = v108;
      uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
      os_log_t v103 = v59;
      uint64_t v88 = v77;
      unint64_t v90 = v89;
      uint64_t v91 = (void (*)(char *, char *))v106;
      ((void (*)(char *, char *))v106)(v85, v86);
      uint64_t v111 = sub_10016414C(v87, v90, (uint64_t *)&v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v101)(v100, v88);
      *(_WORD *)(v81 + 22) = 2082;
      static Locale.current.getter();
      uint64_t v92 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v94 = v93;
      v91(v85, v86);
      uint64_t v111 = sub_10016414C(v92, v94, (uint64_t *)&v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v46 = v103;
      _os_log_impl((void *)&_mh_execute_header, v103, (os_log_type_t)v104, "Filtering article with mismatched language, id=%{public}s, article locale=%{public}s, current locale=%{public}s", (uint8_t *)v81, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_28;
    }
    uint64_t v95 = *(void (**)(char *, uint64_t))(v64 + 8);
    v95(v76, v77);
    v95(v78, v77);
    goto LABEL_30;
  }
  uint64_t v64 = v110;
  if (!v71) {
    goto LABEL_23;
  }
  if (v101 != v69 || v39 != v71)
  {
    uint64_t v105 = v32;
    char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v73) {
      return 1;
    }
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_100B0BC78()
{
  uint64_t v1 = type metadata accessor for News();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B0BD4C(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for News();
  sub_100164920(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + v10);
  uint64_t v14 = v1 + v9;
  uint64_t v15 = (uint64_t *)(v1 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v18;
  *uint64_t v18 = v2;
  v18[1] = sub_10007FF00;
  return sub_100B09C88(a1, v11, v12, v14, v13, v16, v17);
}

uint64_t sub_100B0BE6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B0BED4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B0BF1C(long long *a1, long long *a2)
{
  sub_1000C81DC(a1, (uint64_t)&v22);
  if (!v26)
  {
    uint64_t v12 = v22;
    uint64_t v13 = v23;
    sub_1000C81DC(a2, (uint64_t)&v19);
    if (!v21)
    {
      if (v12 != v19.i64[0] || v13 != v19.i64[1]) {
        goto LABEL_19;
      }
      goto LABEL_25;
    }
LABEL_24:
    char v10 = 0;
    return v10 & 1;
  }
  if (v26 != 1)
  {
    sub_1000C81DC(a2, (uint64_t)&v19);
    int8x16_t v15 = vorrq_s8(v19, v20);
    int8x8_t v16 = vorr_s8(*(int8x8_t *)v15.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    if (v21 == 2 && *(void *)&v16 == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v3 = v22;
  uint64_t v4 = v23;
  uint64_t v5 = v24;
  uint64_t v6 = v25;
  sub_1000C81DC(a2, (uint64_t)&v19);
  if (v21 != 1) {
    goto LABEL_24;
  }
  int8x16_t v7 = v20;
  BOOL v8 = v3 == v19.i64[0] && v4 == v19.i64[1];
  if (v8 || (char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), v10 = 0, (v9 & 1) != 0))
  {
    if (v5 != v7.i64[0] || v6 != v7.i64[1])
    {
LABEL_19:
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      return v10 & 1;
    }
LABEL_25:
    char v10 = 1;
  }
  return v10 & 1;
}

uint64_t destroy for LocationHeaderSecondaryLabel(uint64_t a1)
{
  return sub_100191D78(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for LocationHeaderSecondaryLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100193004(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for LocationHeaderSecondaryLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100193004(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_100191D78(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for LocationHeaderSecondaryLabel(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_100191D78(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationHeaderSecondaryLabel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationHeaderSecondaryLabel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100B0C218(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100B0C230(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LocationHeaderSecondaryLabel()
{
  return &type metadata for LocationHeaderSecondaryLabel;
}

uint64_t sub_100B0C25C(long long *a1, long long *a2)
{
  sub_1000C81DC(a1, (uint64_t)v4);
  sub_1000C81DC(a2, (uint64_t)v5);
  return sub_100B0BF1C(v4, v5) & 1;
}

uint64_t sub_100B0C2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v205 = a2;
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v6 = sub_100109328(v5);
  uint64_t v185 = type metadata accessor for ConditionDetailPlatterViewModel.Body(v6);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  sub_100109338(v8);
  uint64_t v9 = sub_10017DF08(&qword_100E63758);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  sub_100109328(v11);
  uint64_t v183 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v182 = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  sub_100109328(v14);
  uint64_t v195 = type metadata accessor for RoundedPrecipitation();
  sub_100179C0C();
  uint64_t v194 = v15;
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109338(v17);
  uint64_t v193 = sub_10017DF08(&qword_100E6B7D0);
  sub_100179C0C();
  uint64_t v216 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  *(void *)&long long v228 = v20;
  uint64_t v215 = sub_10017DF08(&qword_100E6ED30);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v232 = v22;
  uint64_t v198 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v207 = v23;
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t countAndFlagsBits = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100109770();
  object = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100128F8C();
  sub_100109338(v32);
  uint64_t v33 = sub_10017DF08(&qword_100EB0FA8);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109328(v35);
  uint64_t v229 = type metadata accessor for MonthPrecipitationStatistics();
  sub_100179C0C();
  uint64_t v199 = v36;
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v225 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v40);
  sub_100128F8C();
  sub_100109338(v41);
  uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v43 = sub_100109308(v42);
  __chkstk_darwin(v43);
  sub_100109314();
  uint64_t v231 = v44;
  uint64_t v209 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v224 = v45;
  __chkstk_darwin(v46);
  sub_100162EF8();
  uint64_t v230 = v47;
  sub_1001626D4();
  __chkstk_darwin(v48);
  sub_100128F8C();
  sub_100109328(v49);
  uint64_t v208 = type metadata accessor for DateComponents();
  sub_100179C0C();
  uint64_t v212 = v50;
  __chkstk_darwin(v51);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v52);
  sub_100128F8C();
  sub_100109328(v53);
  uint64_t v206 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v202 = v54;
  __chkstk_darwin(v55);
  unint64_t v57 = (char *)&v177 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Calendar();
  sub_100179C0C();
  __chkstk_darwin(v58);
  uint64_t v211 = (char *)&v177 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = v60;
  uint64_t v204 = v61;
  sub_100162808();
  v62();
  uint64_t v210 = v57;
  Calendar.timeZone.getter();
  uint64_t v222 = sub_10017DF08(&qword_100E65238);
  type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v64 = v63;
  uint64_t v66 = *(void *)(v65 + 72);
  uint64_t v67 = *(unsigned __int8 *)(v63 + 80);
  uint64_t v221 = ((v67 + 32) & ~v67) + 2 * v66;
  uint64_t v220 = v67 | 7;
  uint64_t v68 = swift_allocObject();
  long long v219 = xmmword_100C25ED0;
  *(_OWORD *)(v68 + 16) = xmmword_100C25ED0;
  uint64_t v69 = *(void (**)(void))(v64 + 104);
  sub_100184290();
  v69();
  sub_100184290();
  v69();
  sub_1000EEDB0(v68);
  uint64_t v217 = type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v200 = a1;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = v219;
  uint64_t v71 = v224;
  uint64_t v72 = v209;
  sub_100184290();
  v69();
  uint64_t v73 = v208;
  sub_100184290();
  v69();
  uint64_t v74 = v212;
  sub_1000EEDB0(v70);
  uint64_t v75 = v230;
  uint64_t v76 = v231;
  Date.startOfDay.getter();
  uint64_t v77 = v223;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v78(v75, v72);
  Calendar.date(from:)();
  uint64_t v81 = *(void (**)(void, void))(v74 + 8);
  uint64_t v80 = v74 + 8;
  uint64_t v79 = (uint64_t)v81;
  v81(v77, v73);
  if (_s7Weather24LocationCompositionStateOwet_0(v76, 1, v72) == 1)
  {
    ((void (*)(uint64_t, uint64_t))v79)(v213, v73);
    uint64_t v82 = sub_10019F7A4();
    v83(v82);
    sub_10012BF98();
    sub_100162F0C();
    v84();
    sub_100178110(v76, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    uint64_t v178 = (void (*)(uint64_t, uint64_t))v79;
    uint64_t v179 = v78;
    uint64_t v180 = v71 + 8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v201, v76, v72);
    sub_10017BAF4();
    id v191 = (id)static NSDateFormatter.shortMonthNameFormatter(with:)();
    id v189 = (id)static NSDateFormatter.longMonthNameFormatter(with:)();
    id v190 = (id)static NSDateFormatter.longMonthNameFormatter(with:)();
    sub_10012B920();
    sub_10043F938();
    uint64_t v87 = v229;
    if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v229) == 1)
    {
      sub_100178110(v79, &qword_100EB0FA8);
      uint64_t v88 = v205;
      if (qword_100E62810 != -1) {
        swift_once();
      }
      uint64_t v89 = type metadata accessor for Logger();
      sub_1002102B0(v89, (uint64_t)qword_100F51F38);
      unint64_t v90 = Logger.logObject.getter();
      os_log_type_t v91 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v90, v91))
      {
        uint64_t v92 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v92 = 0;
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "The monthly statistics array is empty.", v92, 2u);
        swift_slowDealloc();
      }

      uint64_t v93 = sub_1001A0298();
      v94(v93);
      sub_100162F0C();
      v95();
      uint64_t v96 = sub_10018971C();
      v97(v96);
      sub_1001A12F8();
      v98();
      uint64_t v85 = type metadata accessor for ConditionDetailPlatterViewModel(0);
      uint64_t v86 = v88;
      goto LABEL_10;
    }
    uint64_t v212 = v80;
    uint64_t v101 = *(void (**)(void, void, void))(v199 + 32);
    uint64_t v224 = v199 + 32;
    char v223 = v101;
    v101(v196, v79, v87);
    sub_10012B920();
    MonthPrecipitationStatistics.averagePrecipitationAmount.getter();
    uint64_t v102 = *(void *)(v207 + 16);
    uint64_t v103 = v188;
    uint64_t v104 = v198;
    uint64_t v222 = v207 + 16;
    uint64_t v221 = v102;
    sub_100162808();
    v105();
    sub_10012B920();
    uint64_t v107 = *(void *)(v106 + 16);
    uint64_t v220 = v106 + 16;
    *(void *)&long long v219 = v107;
    sub_100162808();
    v108();
    sub_1001246C8(&qword_100E6ED38, &qword_100E6B7D0);
    uint64_t v109 = (uint64_t)v232;
    dispatch thunk of Sequence.makeIterator()();
    uint64_t v110 = v109 + *(int *)(v215 + 36);
    uint64_t v111 = sub_1001246C8(&qword_100E6ED40, &qword_100E6B7D0);
    sub_10019DC7C();
    uint64_t v112 = v187;
    if (&qword_100E6B7D0 != v234)
    {
      uint64_t v218 = (void (**)(uint64_t))(v199 + 16);
      uint64_t v217 = v79 + 8;
      uint64_t v216 = v207 + 8;
      uint64_t v215 = v199 + 8;
      uint64_t v214 = (void (**)(uint64_t, void *, uint64_t))(v207 + 32);
      uint64_t v230 = v110;
      uint64_t v231 = v111;
      uint64_t v79 = v207 + 8;
      do
      {
        uint64_t v113 = (void (*)(uint64_t **, void))dispatch thunk of Collection.subscript.read();
        uint64_t v114 = v229;
        (*v218)(v112);
        v113(&v234, 0);
        sub_100162808();
        v115();
        dispatch thunk of Collection.formIndex(after:)();
        sub_100162F0C();
        v116();
        v223(v225, v112, v114);
        MonthPrecipitationStatistics.averagePrecipitationAmount.getter();
        sub_1001246C8((unint64_t *)&qword_100E7FD88, &qword_100E6B648);
        dispatch thunk of static Comparable.>= infix(_:_:)();
        uint64_t v117 = object;
        sub_100162808();
        v118();
        uint64_t v119 = *(void (**)(void))v79;
        sub_100183F94();
        v119();
        uint64_t v109 = (uint64_t)v232;
        sub_100162F0C();
        v120();
        sub_100183F94();
        v119();
        (*v214)(v103, v117, v104);
        sub_10019DC7C();
      }
      while ((char *)v119 != (char *)v234);
    }
    sub_100178110(v109, &qword_100E6ED30);
    sub_10012B920();
    uint64_t v122 = v197;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 32))(v197, v103, v104);
    uint64_t v123 = *(void (**)(void))(v79 + 8);
    sub_100183F94();
    v123();
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    Measurement<>.convertAndRoundPrecipitation(unitManager:)();
    swift_release();
    uint64_t v124 = v192;
    RoundedPrecipitation.measurement.getter();
    sub_10012BF98();
    sub_100162F0C();
    v125();
    int v126 = (void *)Measurement.unit.getter();
    uint64_t v207 = v79 + 8;
    uint64_t v232 = v123;
    uint64_t v127 = ((uint64_t (*)(uint64_t, uint64_t))v123)(v124, v104);
    __chkstk_darwin(v127);
    uint64_t v128 = v200;
    uint64_t v129 = v201;
    *(&v177 - 8) = v200;
    *(&v177 - 7) = v129;
    uint64_t v130 = (uint64_t)v189;
    *(&v177 - 6) = (uint64_t)v191;
    *(&v177 - 5) = v130;
    *(&v177 - 4) = (uint64_t)v190;
    *(&v177 - 3) = v122;
    v238._object = v126;
    sub_1008871B0();
    uint64_t v132 = v131;
    if (qword_100E628F8 != -1) {
      swift_once();
    }
    uint64_t v133 = qword_100F52120;
    swift_bridgeObjectRetain();
    sub_100786C7C(2, v132, v133, &v233);
    sub_10024D364((uint64_t)&v233, (uint64_t)&v234, &qword_100E65248);
    uint64_t v134 = v235;
    uint64_t v135 = v213;
    if (v235)
    {
      uint64_t v230 = v234;
      long long v228 = v236;
      uint64_t v231 = v237;
      sub_10012B920();
      sub_100B0E4DC(v128, v135, v181, (uint64_t)v126, v136);
      id v137 = [self mainBundle];
      v238._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
      v238._object = (void *)0x8000000100C97360;
      v138._object = (void *)0x8000000100C97340;
      v138._uint64_t countAndFlagsBits = 0xD000000000000010;
      v139._uint64_t countAndFlagsBits = 0;
      v139._object = (void *)0xE000000000000000;
      Swift::String v140 = NSLocalizedString(_:tableName:bundle:value:comment:)(v138, (Swift::String_optional)0, (NSBundle)v137, v139, v238);
      object = v140._object;
      uint64_t countAndFlagsBits = v140._countAndFlagsBits;

      uint64_t v141 = v184;
      _s7Weather24LocationCompositionStateOwst_0(v184, 1, 1, v183);
      static Font.body.getter();
      WeatherDescription.formatted(font:color:)();
      swift_release();
      uint64_t v142 = Text.init(_:)();
      uint64_t v144 = v143;
      char v146 = v145;
      uint64_t v148 = v147;

      uint64_t v149 = v146 & 1;
      sub_10012BF98();
      sub_100162F0C();
      v150();
      sub_100162F0C();
      v151();
      v178(v135, v208);
      uint64_t v152 = sub_10019F7A4();
      v153(v152);
      sub_10012BF98();
      sub_100162F0C();
      v154();
      uint64_t v155 = (uint64_t)v186;
      uint64_t *v186 = v142;
      *(void *)(v155 + 8) = v144;
      *(void *)(v155 + 16) = v149;
      *(void *)(v155 + 24) = v148;
      *(void *)(v155 + 32) = v230;
      *(void *)(v155 + 40) = v134;
      *(_OWORD *)(v155 + 48) = v228;
      *(void *)(v155 + 72) = 0;
      *(void *)(v155 + 80) = 0;
      *(void *)(v155 + 64) = v231;
      *(_WORD *)(v155 + 88) = 0;
      uint64_t v156 = v185;
      swift_storeEnumTagMultiPayload();
      uint64_t v157 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
      uint64_t v158 = v205;
      _s7Weather24LocationCompositionStateOwst_0(v205 + v157[8], 1, 1, v156);
      *(_OWORD *)uint64_t v158 = xmmword_100C27710;
      *(unsigned char *)(v158 + 16) = 2;
      uint64_t v159 = object;
      *(void *)(v158 + 24) = countAndFlagsBits;
      *(void *)(v158 + 32) = v159;
      sub_10024D364(v141, v158 + v157[6], &qword_100E63758);
      sub_10028470C(v155, v158 + v157[7], (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      *(unsigned char *)(v158 + v157[9]) = 0;
      *(unsigned char *)(v158 + v157[10]) = 0;
      uint64_t v160 = sub_10017EE40();
      v161(v160);
      sub_1001A12F8();
      v162();
      uint64_t v86 = v158;
      uint64_t v99 = 0;
      uint64_t v85 = (uint64_t)v157;
      return _s7Weather24LocationCompositionStateOwst_0(v86, v99, 1, v85);
    }
    if (qword_100E62810 != -1) {
      swift_once();
    }
    uint64_t v163 = type metadata accessor for Logger();
    sub_1002102B0(v163, (uint64_t)qword_100F51F38);
    uint64_t v164 = Logger.logObject.getter();
    os_log_type_t v165 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v164, v165))
    {
      uint64_t v166 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v166 = 0;
      swift_slowDealloc();
    }

    sub_100162F0C();
    v167();
    uint64_t v168 = sub_1001A0298();
    v169(v168);
    uint64_t v170 = sub_10019F7A4();
    v171(v170);
    uint64_t v172 = sub_10018971C();
    v173(v172);
    uint64_t v174 = sub_10017EE40();
    v175(v174);
    sub_1001A12F8();
    v176();
  }
  uint64_t v85 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v86 = v205;
LABEL_10:
  uint64_t v99 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v86, v99, 1, v85);
}

uint64_t sub_100B0D6C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, void *a4@<X4>, char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  uint64_t v101 = a7;
  uint64_t v98 = a6;
  uint64_t v96 = a5;
  id v95 = a4;
  id v94 = a3;
  uint64_t v123 = a2;
  int v126 = a8;
  uint64_t v9 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v113 = *(void *)(v9 - 8);
  uint64_t v114 = v9;
  __chkstk_darwin(v9);
  uint64_t v112 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v11 - 8);
  uint64_t v105 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for WeatherFormatScaling();
  uint64_t v104 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v100 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  uint64_t v99 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v97 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  uint64_t v108 = *(void *)(v15 - 8);
  uint64_t v109 = v15;
  __chkstk_darwin(v15);
  uint64_t v107 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  __chkstk_darwin(v110);
  uint64_t v111 = (uint64_t *)((char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = sub_10017DF08(&qword_100E6B648);
  uint64_t v102 = *(void *)(v103 - 8);
  uint64_t v18 = __chkstk_darwin(v103);
  uint64_t v121 = (char *)&v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v120 = (char *)&v93 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6B7D0);
  uint64_t v115 = *(void *)(v21 - 8);
  uint64_t v116 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100EB0FA8);
  __chkstk_darwin(v24 - 8);
  uint64_t v117 = (char *)&v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for MonthPrecipitationStatistics();
  uint64_t v119 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v118 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Calendar.Component();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v93 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v31 - 8);
  uint64_t v33 = (char *)&v93 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for Date();
  uint64_t v124 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v93 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, enum case for Calendar.Component.month(_:), v27);
  Calendar.date(bySetting:value:of:)();
  uint64_t v37 = v30;
  uint64_t v38 = v34;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v37, v27);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34) == 1)
  {
    sub_100178110((uint64_t)v33, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    uint64_t v39 = v36;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v36, v33, v34);
    uint64_t v40 = type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v42 = v115;
    uint64_t v41 = v116;
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 16))(v23, a1 + *(int *)(v40 + 32), v116);
    __chkstk_darwin(v43);
    *(&v93 - 2) = a1;
    *(&v93 - 1) = (uint64_t)v39;
    uint64_t v44 = (uint64_t)v117;
    uint64_t v45 = v127;
    sub_1003547F0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v41);
    if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v125) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v118, v44, v125);
      MonthPrecipitationStatistics.averagePrecipitationAmount.getter();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v54 = [v94 stringFromDate:isa];
      uint64_t v123 = v38;
      id v55 = v54;

      uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v116 = v57;
      uint64_t v117 = (char *)v56;

      Class v58 = Date._bridgeToObjectiveC()().super.isa;
      id v59 = [v95 stringFromDate:v58];

      uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v95 = v60;

      Class v61 = Date._bridgeToObjectiveC()().super.isa;
      id v62 = [v96 stringFromDate:v61];
      uint64_t v127 = v45;
      id v63 = v62;

      id v94 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v93 = v64;

      uint64_t v96 = v39;
      uint64_t v65 = v103;
      Measurement.value.getter();
      double v67 = v66;
      Measurement.value.getter();
      double v69 = v67 / v68;
      Measurement<>.converted(to:)();
      uint64_t v70 = v99;
      uint64_t v71 = v97;
      (*(void (**)(char *, void, uint64_t))(v99 + 104))(v97, enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:), v122);
      uint64_t v72 = v104;
      uint64_t v73 = v100;
      uint64_t v74 = v106;
      (*(void (**)(char *, void, uint64_t))(v104 + 104))(v100, enum case for WeatherFormatScaling.asProvidedButRounded(_:), v106);
      uint64_t v75 = type metadata accessor for Locale();
      uint64_t v76 = v105;
      _s7Weather24LocationCompositionStateOwst_0(v105, 1, 1, v75);
      static Set<>.full.getter();
      uint64_t v77 = v107;
      static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
      swift_bridgeObjectRelease();
      sub_100178110(v76, &qword_100E63730);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v122);
      uint64_t v79 = v112;
      uint64_t v78 = v113;
      uint64_t v80 = v114;
      (*(void (**)(char *, void, uint64_t))(v113 + 104))(v112, enum case for WeatherFormatPlaceholder.none(_:), v114);
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      sub_1001D482C();
      uint64_t v81 = v109;
      uint64_t v82 = v121;
      uint64_t v122 = Measurement.formatted<A>(_:placeholder:unitManager:)();
      uint64_t v106 = v83;
      swift_release();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v80);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v77, v81);
      uint64_t v84 = *(void (**)(char *, uint64_t))(v102 + 8);
      v84(v82, v65);
      v84(v120, v65);
      (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v125);
      uint64_t v85 = (uint64_t)v111;
      *uint64_t v111 = 0;
      *(double *)(v85 + 8) = v69;
      *(void *)(v85 + 16) = 0;
      *(void *)(v85 + 24) = 0;
      uint64_t v86 = v106;
      *(void *)(v85 + 32) = v122;
      *(void *)(v85 + 40) = v86;
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = v126;
      uint64_t v88 = v116;
      void *v126 = v117;
      v87[1] = v88;
      id v89 = v95;
      v87[2] = v115;
      v87[3] = v89;
      uint64_t v90 = v93;
      v87[4] = v94;
      v87[5] = v90;
      uint64_t v91 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
      sub_10028470C(v85, (uint64_t)v87 + *(int *)(v91 + 20), (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
      *((unsigned char *)v87 + *(int *)(v91 + 24)) = 2;
      (*(void (**)(char *, uint64_t))(v124 + 8))(v96, v123);
      uint64_t v51 = (uint64_t)v87;
      uint64_t v52 = 0;
      uint64_t v50 = v91;
      return _s7Weather24LocationCompositionStateOwst_0(v51, v52, 1, v50);
    }
    (*(void (**)(char *, uint64_t))(v124 + 8))(v39, v38);
    sub_100178110(v44, &qword_100EB0FA8);
  }
  if (qword_100E62810 != -1) {
    swift_once();
  }
  uint64_t v46 = type metadata accessor for Logger();
  sub_1002102B0(v46, (uint64_t)qword_100F51F38);
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Failed to find this month's precipitation averages for the Averages L2 Chart summary.", v49, 2u);
    swift_slowDealloc();
  }

  uint64_t v50 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v51 = (uint64_t)v126;
  uint64_t v52 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v51, v52, 1, v50);
}

BOOL sub_100B0E3B4()
{
  uint64_t v0 = type metadata accessor for Calendar.Component();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MonthPrecipitationStatistics.month.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Component.month(_:), v0);
  uint64_t v5 = Calendar.component(_:from:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 == v5;
}

uint64_t sub_100B0E4DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v51 = a5;
  uint64_t v7 = type metadata accessor for Calendar.Identifier();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v47 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v40 - v10;
  uint64_t v43 = sub_10017DF08(&qword_100E6B648);
  uint64_t v48 = *(void *)(v43 - 8);
  uint64_t v11 = __chkstk_darwin(v43);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v42 = (char *)&v40 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E6B7D0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100EB0FA8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for MonthPrecipitationStatistics();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for MonthlyAveragesChartInput();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1 + *(int *)(v26 + 32), v15);
  uint64_t v52 = a2;
  sub_1003547F0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22) == 1)
  {
    sub_100178110((uint64_t)v21, &qword_100EB0FA8);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_1002102B0(v27, (uint64_t)qword_100F51ED0);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to find this month's temperature averages for the Averages L2 Chart summary.", v30, 2u);
      swift_slowDealloc();
    }

    return static WeatherDescription.string(_:)();
  }
  else
  {
    uint64_t v40 = v22;
    uint64_t v41 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v22);
    sub_10020D948(v44, (uint64_t)v53);
    sub_1001B1E64(v53, v53[3]);
    MonthPrecipitationStatistics.averagePrecipitationAmount.getter();
    uint64_t v32 = (uint64_t)v42;
    uint64_t v33 = v43;
    Measurement<>.converted(to:)();
    uint64_t v48 = *(void *)(v48 + 8);
    ((void (*)(char *, uint64_t))v48)(v13, v33);
    uint64_t v45 = MonthPrecipitationStatistics.month.getter();
    uint64_t v34 = v46;
    Calendar.identifier.getter();
    uint64_t v35 = v49;
    uint64_t v36 = v50;
    uint64_t v37 = v47;
    (*(void (**)(char *, void, uint64_t))(v49 + 104))(v47, enum case for Calendar.Identifier.gregorian(_:), v50);
    char v38 = static Calendar.Identifier.== infix(_:_:)();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
    v39(v37, v36);
    v39(v34, v36);
    sub_10074EEEC(v32, v45, (v38 & 1) == 0, v51);
    ((void (*)(uint64_t, uint64_t))v48)(v32, v33);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v40);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v53);
  }
}

BOOL sub_100B0EA68()
{
  uint64_t v0 = MonthPrecipitationStatistics.month.getter();
  uint64_t v1 = DateComponents.month.getter();
  return (v2 & 1) == 0 && v0 == v1;
}

uint64_t sub_100B0EAB8@<X0>(void *a1@<X8>)
{
  return sub_100B0D6C4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(char **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1);
}

BOOL sub_100B0EAE0()
{
  return sub_100B0EA68();
}

BOOL sub_100B0EB00()
{
  return sub_100B0E3B4();
}

ValueMetadata *type metadata accessor for PrecipitationMonthlyAveragesChartViewModelFactory()
{
  return &type metadata for PrecipitationMonthlyAveragesChartViewModelFactory;
}

uint64_t sub_100B0EB30(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_100B0EBE8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Weather16TapTestParameter_testName);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100B0ECA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC7Weather16TapTestParameter_testName);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100B0ED68()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Weather16TapTestParameter_completionHandler);
  sub_10005BEBC(v1);
  return v1;
}

id (*sub_100B0EDB4())(void *a1)
{
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  return sub_100B0EFCC;
}

id sub_100B0EE14(void *a1, uint64_t a2)
{
  return [a1 pointerOrFingerTap:*(double *)(a2 + OBJC_IVAR____TtC7Weather16TapTestParameter_location), *(double *)(a2 + OBJC_IVAR____TtC7Weather16TapTestParameter_location + 8)];
}

void sub_100B0EEDC()
{
}

uint64_t type metadata accessor for TapTestParameter()
{
  return self;
}

uint64_t sub_100B0EF94()
{
  return swift_deallocObject();
}

id sub_100B0EFCC(void *a1)
{
  return sub_100B0EE14(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for MinorAlertContentView()
{
  return sub_100109098();
}

uint64_t sub_100B0EFF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B0F038@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E9F800;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E9FBD0;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E9F9E8;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E9F430;
  }
  else {
    uint64_t v21 = &qword_100E9F618;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100B0F504@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  uint64_t v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  id v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  uint64_t v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  id v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  id v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_airQuality, (uint64_t)v17);
  v104(v17, *a3, a3[1], a3[2], a3[3]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_severeAlert, (uint64_t)v17);
  v104(v17, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 24), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  double v69 = v90;
  v65((uint64_t)v90, v101, a4);
  uint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  uint64_t v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  int v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_100B0FF70@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  id v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  id v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  id v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  double v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  int v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100B109B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100B0F038(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100B109E4()
{
  return sub_100B10A14((uint64_t (*)(void, void, void, void, void, void, void))sub_100B0F504);
}

uint64_t sub_100B109FC()
{
  return sub_100B10A14((uint64_t (*)(void, void, void, void, void, void, void))sub_100B0FF70);
}

uint64_t sub_100B10A14(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t *sub_100B10A48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __int16 v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *__int16 v3 = *a2;
    __int16 v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for AttributedString();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_100B10B30(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100B10BA8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for AttributedString();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100B10C40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_100B10CDC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100B10D58(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100B10DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B10DF8);
}

uint64_t sub_100B10DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttributedString();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100B10E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B10E94);
}

uint64_t sub_100B10E94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributedString();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ConditionDetailPlatterViewModel.TextSection(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB10D0);
}

uint64_t sub_100B10F34()
{
  uint64_t result = type metadata accessor for AttributedString();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100B10FCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 2u:
        uint64_t v9 = type metadata accessor for AttributedString();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_58;
      case 3u:
        uint64_t v10 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_58;
      case 4u:
        uint64_t v11 = a2[1];
        if (v11)
        {
          *a1 = *a2;
          a1[1] = v11;
          uint64_t v12 = a2[3];
          a1[2] = a2[2];
          a1[3] = v12;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v20 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v20;
        }
        uint64_t v21 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v22 = *(int *)(v21 + 20);
        uint64_t v23 = (uint64_t *)((char *)a1 + v22);
        uint64_t v24 = (uint64_t *)((char *)a2 + v22);
        uint64_t v25 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v118 = v21;
          uint64_t v26 = v24[1];
          *uint64_t v23 = *v24;
          v23[1] = v26;
          uint64_t v120 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v27 = v120[5];
          uint64_t v28 = (char *)v23 + v27;
          uint64_t v29 = (char *)v24 + v27;
          uint64_t v30 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
          {
            uint64_t v31 = sub_10017DF08(&qword_100E749B0);
            memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
          }
          uint64_t v54 = v120[6];
          uint64_t v55 = (void *)((char *)v23 + v54);
          uint64_t v56 = (void *)((char *)v24 + v54);
          uint64_t v57 = v56[1];
          *uint64_t v55 = *v56;
          v55[1] = v57;
          uint64_t v58 = v120[7];
          uint64_t v117 = (char *)v23 + v58;
          uint64_t v59 = (char *)v24 + v58;
          uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
          swift_bridgeObjectRetain();
          v60(v117, v59, v30);
          uint64_t v61 = v120[8];
          uint64_t v62 = (char *)v23 + v61;
          uint64_t v63 = (char *)v24 + v61;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24 + v61, 1, v30))
          {
            uint64_t v64 = sub_10017DF08(&qword_100E749B0);
            memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
          }
          else
          {
            v60(v62, v63, v30);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v30);
          }
          *((unsigned char *)v23 + v120[9]) = *((unsigned char *)v24 + v120[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v21 = v118;
        }
        else
        {
          memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
        }
        uint64_t v65 = *(int *)(v21 + 24);
        uint64_t v66 = (char *)a1 + v65;
        uint64_t v67 = (char *)a2 + v65;
        uint64_t v68 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
        {
          uint64_t v69 = sub_10017DF08(&qword_100E73810);
          memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          uint64_t v70 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v66, v67, v70);
          uint64_t v71 = sub_10017DF08(&qword_100E66478);
          v66[*(int *)(v71 + 48)] = v67[*(int *)(v71 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
        }
        goto LABEL_58;
      case 5u:
        if (a2[3])
        {
          uint64_t v13 = *a2;
          uint64_t v14 = a2[1];
          char v15 = *((unsigned char *)a2 + 16);
          sub_100190CC4(*a2, v14, v15);
          *a1 = v13;
          a1[1] = v14;
          *((unsigned char *)a1 + 16) = v15;
          a1[3] = a2[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v32 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v32;
        }
        uint64_t v33 = a2[4];
        uint64_t v34 = a2[5];
        uint64_t v35 = a2[6];
        uint64_t v36 = a2[7];
        uint64_t v37 = a2[8];
        uint64_t v38 = a2[9];
        uint64_t v39 = a2[10];
        char v40 = *((unsigned char *)a2 + 89);
        uint64_t v41 = *((unsigned __int8 *)a2 + 88);
        sub_10033A9E8(v33, v34, v35, v36, v37, v38, v39, v41, v40);
        a1[4] = v33;
        a1[5] = v34;
        a1[6] = v35;
        a1[7] = v36;
        a1[8] = v37;
        a1[9] = v38;
        a1[10] = v39;
        *((unsigned char *)a1 + 88) = v41;
        *((unsigned char *)a1 + 89) = v40;
        goto LABEL_58;
      case 6u:
        uint64_t v16 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        goto LABEL_58;
      case 7u:
        uint64_t v17 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
            uint64_t v19 = a2[1];
            *a1 = *a2;
            a1[1] = v19;
            a1[2] = a2[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_58;
        }
        uint64_t v42 = a2[1];
        *a1 = *a2;
        a1[1] = v42;
        uint64_t v43 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v44 = v43[5];
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (uint64_t)a2 + v44;
        uint64_t v47 = type metadata accessor for Location();
        uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, v47);
        uint64_t v49 = v43[6];
        uint64_t v50 = (uint64_t *)((char *)a1 + v49);
        uint64_t v51 = (uint64_t *)((char *)a2 + v49);
        uint64_t v52 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = sub_10017DF08(&qword_100E63850);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
LABEL_57:
          uint64_t v107 = v43[7];
          uint64_t v108 = (uint64_t *)((char *)a1 + v107);
          uint64_t v109 = (uint64_t *)((char *)a2 + v107);
          uint64_t v110 = v109[1];
          *uint64_t v108 = *v109;
          v108[1] = v110;
          uint64_t v111 = v43[8];
          uint64_t v112 = (char *)a1 + v111;
          uint64_t v113 = (uint64_t)a2 + v111;
          uint64_t v114 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v115 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v114 - 8) + 16);
          swift_bridgeObjectRetain();
          v115(v112, v113, v114);
          *((unsigned char *)a1 + v43[9]) = *((unsigned char *)a2 + v43[9]);
          swift_storeEnumTagMultiPayload();
LABEL_58:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v72 = (int *)v52;
        uint64_t v73 = v51[1];
        *uint64_t v50 = *v51;
        v50[1] = v73;
        uint64_t v121 = v72;
        uint64_t v74 = v72[5];
        uint64_t v75 = (char *)v50 + v74;
        uint64_t v76 = (char *)v51 + v74;
        uint64_t v77 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
        {
          uint64_t v78 = sub_10017DF08(&qword_100E63730);
          memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
        }
        uint64_t v79 = v121[6];
        uint64_t v80 = (char *)v50 + v79;
        uint64_t v81 = (char *)v51 + v79;
        uint64_t v82 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
        uint64_t v83 = v121[7];
        uint64_t v84 = (char *)v50 + v83;
        uint64_t v85 = (char *)v51 + v83;
        uint64_t v86 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          uint64_t v88 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v84, v85, v88);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
        }
        uint64_t v89 = v121[8];
        uint64_t v90 = (void *)((char *)v50 + v89);
        uint64_t v91 = (void *)((char *)v51 + v89);
        uint64_t v92 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v93 = swift_getEnumCaseMultiPayload();
        if (v93 == 1)
        {
          uint64_t v95 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 16))(v90, v91, v95);
        }
        else
        {
          if (v93)
          {
            memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
            goto LABEL_47;
          }
          uint64_t v94 = v91[1];
          void *v90 = *v91;
          v90[1] = v94;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_47:
        uint64_t v96 = v121[9];
        uint64_t v97 = (char *)v50 + v96;
        uint64_t v98 = (char *)v51 + v96;
        uint64_t v99 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_10017DF08(&qword_100E63740);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          uint64_t v101 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v101))
          {
            uint64_t v102 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v97, v98, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v97, v98, v101);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v101);
          }
          uint64_t v103 = *(int *)(v99 + 20);
          uint64_t v119 = (uint64_t)v97;
          uint64_t v104 = &v97[v103];
          uint64_t v105 = &v98[v103];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v101))
          {
            uint64_t v106 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v104, v105, v101);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v101);
          }
          _s7Weather24LocationCompositionStateOwst_0(v119, 0, 1, v99);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, (uint64_t)v121);
        goto LABEL_57;
      default:
        uint64_t v6 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_58;
    }
  }
  uint64_t v7 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_100B11C04(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for WeatherDescription();
      goto LABEL_40;
    case 1:
      goto LABEL_21;
    case 2:
      uint64_t v3 = type metadata accessor for AttributedString();
      goto LABEL_40;
    case 3:
      uint64_t v3 = sub_10017DF08(&qword_100E73808);
      goto LABEL_40;
    case 4:
      if (*(void *)(a1 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v4 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v7 = v5 + v6[5];
        uint64_t v8 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        }
        swift_bridgeObjectRelease();
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
        v9(v5 + v6[7], v8);
        uint64_t v10 = v5 + v6[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v8)) {
          v9(v10, v8);
        }
      }
      a1 += *(int *)(v4 + 24);
      uint64_t v11 = type metadata accessor for DetailComponentAction();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v11);
      if (result) {
        return result;
      }
      uint64_t v3 = type metadata accessor for URL();
      goto LABEL_40;
    case 5:
      if (*(void *)(a1 + 24))
      {
        sub_100191924(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
        swift_bridgeObjectRelease();
      }
      return sub_10033AB48(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned __int8 *)(a1 + 88), *(unsigned char *)(a1 + 89));
    case 6:
      uint64_t v3 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      goto LABEL_40;
    case 7:
      type metadata accessor for ConditionDetailDynamicContentIdentifier();
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v13 = a1 + v12[5];
        uint64_t v14 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        uint64_t v15 = a1 + v12[6];
        uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, (uint64_t)v16))
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = v15 + v16[5];
          uint64_t v18 = type metadata accessor for Locale();
          if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          }
          uint64_t v19 = v15 + v16[6];
          uint64_t v20 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
          uint64_t v21 = v15 + v16[7];
          uint64_t v22 = sub_10017DF08(&qword_100E63738);
          if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
          {
            uint64_t v23 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
          }
          uint64_t v24 = v15 + v16[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v26 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v24, v26);
          }
          else if (!EnumCaseMultiPayload)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v27 = v15 + v16[9];
          uint64_t v28 = type metadata accessor for WeatherDataOverrides();
          if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
          {
            uint64_t v29 = type metadata accessor for Date();
            if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v29)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v27, v29);
            }
            uint64_t v30 = v27 + *(int *)(v28 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v29)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v30, v29);
            }
          }
        }
        swift_bridgeObjectRelease();
        a1 += v12[8];
        uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
LABEL_40:
        uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
        return v31(a1, v3);
      }
      else if (!result)
      {
        swift_bridgeObjectRelease();
LABEL_21:
        return swift_bridgeObjectRelease();
      }
      return result;
    default:
      return result;
  }
}

uint64_t *sub_100B121E0(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      swift_bridgeObjectRetain();
      goto LABEL_56;
    case 2u:
      uint64_t v6 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_56;
    case 3u:
      uint64_t v7 = sub_10017DF08(&qword_100E73808);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_56;
    case 4u:
      uint64_t v8 = a2[1];
      if (v8)
      {
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = a2[3];
        a1[2] = a2[2];
        a1[3] = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v17 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v17;
      }
      uint64_t v18 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v19 = *(int *)(v18 + 20);
      uint64_t v20 = (uint64_t *)((char *)a1 + v19);
      uint64_t v21 = (uint64_t *)((char *)a2 + v19);
      uint64_t v22 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v115 = v18;
        uint64_t v23 = v21[1];
        *uint64_t v20 = *v21;
        v20[1] = v23;
        uint64_t v117 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v24 = v117[5];
        uint64_t v25 = (char *)v20 + v24;
        uint64_t v26 = (char *)v21 + v24;
        uint64_t v27 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
        {
          uint64_t v28 = sub_10017DF08(&qword_100E749B0);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
        }
        uint64_t v51 = v117[6];
        uint64_t v52 = (void *)((char *)v20 + v51);
        uint64_t v53 = (void *)((char *)v21 + v51);
        uint64_t v54 = v53[1];
        *uint64_t v52 = *v53;
        v52[1] = v54;
        uint64_t v55 = v117[7];
        uint64_t v114 = (char *)v20 + v55;
        uint64_t v56 = (char *)v21 + v55;
        uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v114, v56, v27);
        uint64_t v58 = v117[8];
        uint64_t v59 = (char *)v20 + v58;
        uint64_t v60 = (char *)v21 + v58;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21 + v58, 1, v27))
        {
          uint64_t v61 = sub_10017DF08(&qword_100E749B0);
          memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          v57(v59, v60, v27);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v27);
        }
        *((unsigned char *)v20 + v117[9]) = *((unsigned char *)v21 + v117[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v18 = v115;
      }
      else
      {
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      uint64_t v62 = *(int *)(v18 + 24);
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      uint64_t v65 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
      {
        uint64_t v66 = sub_10017DF08(&qword_100E73810);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        uint64_t v67 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v63, v64, v67);
        uint64_t v68 = sub_10017DF08(&qword_100E66478);
        v63[*(int *)(v68 + 48)] = v64[*(int *)(v68 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
      }
      goto LABEL_56;
    case 5u:
      if (a2[3])
      {
        uint64_t v10 = *a2;
        uint64_t v11 = a2[1];
        char v12 = *((unsigned char *)a2 + 16);
        sub_100190CC4(*a2, v11, v12);
        *a1 = v10;
        a1[1] = v11;
        *((unsigned char *)a1 + 16) = v12;
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v29 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v29;
      }
      uint64_t v30 = a2[4];
      uint64_t v31 = a2[5];
      uint64_t v32 = a2[6];
      uint64_t v33 = a2[7];
      uint64_t v34 = a2[8];
      uint64_t v35 = a2[9];
      uint64_t v36 = a2[10];
      char v37 = *((unsigned char *)a2 + 89);
      uint64_t v38 = *((unsigned __int8 *)a2 + 88);
      sub_10033A9E8(v30, v31, v32, v33, v34, v35, v36, v38, v37);
      a1[4] = v30;
      a1[5] = v31;
      a1[6] = v32;
      a1[7] = v33;
      a1[8] = v34;
      a1[9] = v35;
      a1[10] = v36;
      *((unsigned char *)a1 + 88) = v38;
      *((unsigned char *)a1 + 89) = v37;
      goto LABEL_56;
    case 6u:
      uint64_t v13 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      goto LABEL_56;
    case 7u:
      uint64_t v14 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v39 = a2[1];
        *a1 = *a2;
        a1[1] = v39;
        char v40 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v41 = v40[5];
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (uint64_t)a2 + v41;
        uint64_t v44 = type metadata accessor for Location();
        uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v42, v43, v44);
        uint64_t v46 = v40[6];
        uint64_t v47 = (uint64_t *)((char *)a1 + v46);
        uint64_t v48 = (uint64_t *)((char *)a2 + v46);
        uint64_t v49 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
        {
          uint64_t v50 = sub_10017DF08(&qword_100E63850);
          memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
LABEL_55:
          uint64_t v104 = v40[7];
          uint64_t v105 = (uint64_t *)((char *)a1 + v104);
          uint64_t v106 = (uint64_t *)((char *)a2 + v104);
          uint64_t v107 = v106[1];
          *uint64_t v105 = *v106;
          v105[1] = v107;
          uint64_t v108 = v40[8];
          uint64_t v109 = (char *)a1 + v108;
          uint64_t v110 = (uint64_t)a2 + v108;
          uint64_t v111 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v112 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16);
          swift_bridgeObjectRetain();
          v112(v109, v110, v111);
          *((unsigned char *)a1 + v40[9]) = *((unsigned char *)a2 + v40[9]);
          swift_storeEnumTagMultiPayload();
          goto LABEL_56;
        }
        uint64_t v69 = (int *)v49;
        uint64_t v70 = v48[1];
        void *v47 = *v48;
        v47[1] = v70;
        uint64_t v118 = v69;
        uint64_t v71 = v69[5];
        uint64_t v72 = (char *)v47 + v71;
        uint64_t v73 = (char *)v48 + v71;
        uint64_t v74 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
        {
          uint64_t v75 = sub_10017DF08(&qword_100E63730);
          memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
        }
        uint64_t v76 = v118[6];
        uint64_t v77 = (char *)v47 + v76;
        uint64_t v78 = (char *)v48 + v76;
        uint64_t v79 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        uint64_t v80 = v118[7];
        uint64_t v81 = (char *)v47 + v80;
        uint64_t v82 = (char *)v48 + v80;
        uint64_t v83 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
        {
          uint64_t v84 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v85 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v81, v82, v85);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
        }
        uint64_t v86 = v118[8];
        uint64_t v87 = (void *)((char *)v47 + v86);
        uint64_t v88 = (void *)((char *)v48 + v86);
        uint64_t v89 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v90 = swift_getEnumCaseMultiPayload();
        if (v90 == 1)
        {
          uint64_t v92 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(v87, v88, v92);
        }
        else
        {
          if (v90)
          {
            memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
            goto LABEL_45;
          }
          uint64_t v91 = v88[1];
          void *v87 = *v88;
          v87[1] = v91;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_45:
        uint64_t v93 = v118[9];
        uint64_t v94 = (char *)v47 + v93;
        uint64_t v95 = (char *)v48 + v93;
        uint64_t v96 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
        {
          uint64_t v97 = sub_10017DF08(&qword_100E63740);
          memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          uint64_t v98 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v98))
          {
            uint64_t v99 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v94, v95, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v94, v95, v98);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v98);
          }
          uint64_t v100 = *(int *)(v96 + 20);
          uint64_t v116 = (uint64_t)v94;
          uint64_t v101 = &v94[v100];
          uint64_t v102 = &v95[v100];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v98))
          {
            uint64_t v103 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v101, v102, v98);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v98);
          }
          _s7Weather24LocationCompositionStateOwst_0(v116, 0, 1, v96);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, (uint64_t)v118);
        goto LABEL_55;
      }
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v16 = a2[1];
        *a1 = *a2;
        a1[1] = v16;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
LABEL_56:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      uint64_t v4 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      goto LABEL_56;
  }
}

uint64_t *sub_100B12DC8(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_100B20AE8((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_57;
      case 2u:
        uint64_t v5 = type metadata accessor for AttributedString();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        goto LABEL_57;
      case 3u:
        uint64_t v6 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_57;
      case 4u:
        if (a2[1])
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v13 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v13;
        }
        uint64_t v14 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v15 = *(int *)(v14 + 20);
        uint64_t v16 = (uint64_t *)((char *)a1 + v15);
        long long v17 = (uint64_t *)((char *)a2 + v15);
        uint64_t v18 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v104 = v14;
          *uint64_t v16 = *v17;
          v16[1] = v17[1];
          uint64_t v106 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v19 = v106[5];
          uint64_t v20 = (char *)v16 + v19;
          uint64_t v21 = (char *)v17 + v19;
          uint64_t v22 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
          {
            uint64_t v23 = sub_10017DF08(&qword_100E749B0);
            memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
          }
          uint64_t v45 = v106[6];
          uint64_t v46 = (void *)((char *)v16 + v45);
          uint64_t v47 = (void *)((char *)v17 + v45);
          *uint64_t v46 = *v47;
          v46[1] = v47[1];
          uint64_t v48 = v106[7];
          uint64_t v103 = (char *)v16 + v48;
          uint64_t v49 = (char *)v17 + v48;
          uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v103, v49, v22);
          uint64_t v51 = v106[8];
          uint64_t v52 = (char *)v16 + v51;
          uint64_t v53 = (char *)v17 + v51;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17 + v51, 1, v22))
          {
            uint64_t v54 = sub_10017DF08(&qword_100E749B0);
            memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            v50(v52, v53, v22);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v22);
          }
          *((unsigned char *)v16 + v106[9]) = *((unsigned char *)v17 + v106[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v14 = v104;
        }
        else
        {
          memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
        uint64_t v55 = *(int *)(v14 + 24);
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        uint64_t v58 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = sub_10017DF08(&qword_100E73810);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          uint64_t v60 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v56, v57, v60);
          uint64_t v61 = sub_10017DF08(&qword_100E66478);
          v56[*(int *)(v61 + 48)] = v57[*(int *)(v61 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
        }
        goto LABEL_57;
      case 5u:
        if (a2[3])
        {
          uint64_t v7 = *a2;
          uint64_t v8 = a2[1];
          char v9 = *((unsigned char *)a2 + 16);
          sub_100190CC4(*a2, v8, v9);
          *a1 = v7;
          a1[1] = v8;
          *((unsigned char *)a1 + 16) = v9;
          a1[3] = a2[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v24 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v24;
        }
        uint64_t v25 = a2[4];
        uint64_t v26 = a2[5];
        uint64_t v27 = a2[6];
        uint64_t v28 = a2[7];
        uint64_t v29 = a2[8];
        uint64_t v30 = a2[9];
        uint64_t v31 = a2[10];
        char v32 = *((unsigned char *)a2 + 89);
        uint64_t v33 = *((unsigned __int8 *)a2 + 88);
        sub_10033A9E8(v25, v26, v27, v28, v29, v30, v31, v33, v32);
        a1[4] = v25;
        a1[5] = v26;
        a1[6] = v27;
        a1[7] = v28;
        a1[8] = v29;
        a1[9] = v30;
        a1[10] = v31;
        *((unsigned char *)a1 + 88) = v33;
        *((unsigned char *)a1 + 89) = v32;
        goto LABEL_57;
      case 6u:
        uint64_t v10 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_57;
      case 7u:
        uint64_t v11 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_57;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v34 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v35 = v34[5];
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (uint64_t)a2 + v35;
        uint64_t v38 = type metadata accessor for Location();
        uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        uint64_t v40 = v34[6];
        uint64_t v41 = (uint64_t *)((char *)a1 + v40);
        uint64_t v42 = (uint64_t *)((char *)a2 + v40);
        uint64_t v43 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = sub_10017DF08(&qword_100E63850);
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
LABEL_56:
          uint64_t v94 = v34[7];
          uint64_t v95 = (uint64_t *)((char *)a1 + v94);
          uint64_t v96 = (uint64_t *)((char *)a2 + v94);
          void *v95 = *v96;
          v95[1] = v96[1];
          uint64_t v97 = v34[8];
          uint64_t v98 = (char *)a1 + v97;
          uint64_t v99 = (uint64_t)a2 + v97;
          uint64_t v100 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16);
          swift_bridgeObjectRetain();
          v101(v98, v99, v100);
          *((unsigned char *)a1 + v34[9]) = *((unsigned char *)a2 + v34[9]);
          swift_storeEnumTagMultiPayload();
LABEL_57:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *uint64_t v41 = *v42;
        v41[1] = v42[1];
        uint64_t v107 = (int *)v43;
        uint64_t v62 = *(int *)(v43 + 20);
        uint64_t v63 = (char *)v41 + v62;
        uint64_t v64 = (char *)v42 + v62;
        uint64_t v65 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
        {
          uint64_t v66 = sub_10017DF08(&qword_100E63730);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
        }
        uint64_t v67 = *(int *)(v43 + 24);
        uint64_t v68 = (char *)v41 + v67;
        uint64_t v69 = (char *)v42 + v67;
        uint64_t v70 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
        uint64_t v71 = v107[7];
        uint64_t v72 = (char *)v41 + v71;
        uint64_t v73 = (char *)v42 + v71;
        uint64_t v74 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
        {
          uint64_t v75 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          uint64_t v76 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v72, v73, v76);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
        }
        uint64_t v77 = v107[8];
        uint64_t v78 = (void *)((char *)v41 + v77);
        uint64_t v79 = (void *)((char *)v42 + v77);
        uint64_t v80 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v81 = swift_getEnumCaseMultiPayload();
        if (v81 == 1)
        {
          uint64_t v82 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v82 - 8) + 16))(v78, v79, v82);
        }
        else
        {
          if (v81)
          {
            memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
            goto LABEL_46;
          }
          *uint64_t v78 = *v79;
          v78[1] = v79[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_46:
        uint64_t v83 = v107[9];
        uint64_t v84 = (char *)v41 + v83;
        uint64_t v85 = (char *)v42 + v83;
        uint64_t v86 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = sub_10017DF08(&qword_100E63740);
          memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          uint64_t v88 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v88))
          {
            uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v84, v85, *(void *)(*(void *)(v89 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v84, v85, v88);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v88);
          }
          uint64_t v90 = *(int *)(v86 + 20);
          uint64_t v105 = (uint64_t)v84;
          uint64_t v91 = &v84[v90];
          uint64_t v92 = &v85[v90];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v88))
          {
            uint64_t v93 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v91, v92, v88);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v88);
          }
          _s7Weather24LocationCompositionStateOwst_0(v105, 0, 1, v86);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, (uint64_t)v107);
        goto LABEL_56;
      default:
        uint64_t v4 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        goto LABEL_57;
    }
  }
  return a1;
}

uint64_t type metadata accessor for ConditionDetailPlatterViewModel.Body(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB1178);
}

_OWORD *sub_100B13A44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for WeatherDescription();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_44;
    case 2u:
      uint64_t v7 = type metadata accessor for AttributedString();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_44;
    case 3u:
      uint64_t v8 = sub_10017DF08(&qword_100E73808);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_44;
    case 4u:
      long long v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v11 = *(int *)(v10 + 20);
      char v12 = (char *)a1 + v11;
      long long v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)char v12 = *(_OWORD *)v13;
        uint64_t v87 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v15 = v87[5];
        uint64_t v16 = &v12[v15];
        long long v17 = &v13[v15];
        uint64_t v18 = type metadata accessor for URL();
        uint64_t v82 = (void *)v10;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
        {
          uint64_t v19 = sub_10017DF08(&qword_100E749B0);
          memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
          uint64_t v20 = *(void *)(v18 - 8);
        }
        else
        {
          uint64_t v33 = v16;
          __dstb = v16;
          uint64_t v20 = *(void *)(v18 - 8);
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v33, v17, v18);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v18);
        }
        *(_OWORD *)&v12[v87[6]] = *(_OWORD *)&v13[v87[6]];
        uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v34(&v12[v87[7]], &v13[v87[7]], v18);
        uint64_t v35 = v87[8];
        __dst = &v12[v35];
        uint64_t v36 = &v13[v35];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v35], 1, v18))
        {
          uint64_t v37 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          v34(__dst, v36, v18);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v18);
        }
        uint64_t v10 = (uint64_t)v82;
        v12[v87[9]] = v13[v87[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      uint64_t v43 = *(int *)(v10 + 24);
      uint64_t v44 = (char *)a1 + v43;
      uint64_t v45 = (char *)a2 + v43;
      uint64_t v46 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        uint64_t v47 = sub_10017DF08(&qword_100E73810);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        uint64_t v48 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v44, v45, v48);
        uint64_t v49 = sub_10017DF08(&qword_100E66478);
        v44[*(int *)(v49 + 48)] = v45[*(int *)(v49 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      }
      goto LABEL_44;
    case 6u:
      uint64_t v21 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      goto LABEL_44;
    case 7u:
      uint64_t v22 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        uint64_t v23 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v24 = v23[5];
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        uint64_t v28 = v23[6];
        uint64_t v29 = (_OWORD *)((char *)a1 + v28);
        uint64_t v30 = (_OWORD *)((char *)a2 + v28);
        uint64_t v31 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v31))
        {
          uint64_t v32 = sub_10017DF08(&qword_100E63850);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          *uint64_t v29 = *v30;
          uint64_t v38 = v31[5];
          uint64_t v88 = v29;
          uint64_t v39 = (char *)v29 + v38;
          uint64_t v40 = (char *)v30 + v38;
          uint64_t v41 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
          {
            uint64_t v42 = sub_10017DF08(&qword_100E63730);
            memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
          }
          uint64_t v50 = v31[6];
          uint64_t v51 = (char *)v88 + v50;
          uint64_t v52 = (char *)v30 + v50;
          uint64_t v53 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
          uint64_t v54 = v31[7];
          uint64_t v55 = (char *)v88 + v54;
          uint64_t v56 = (char *)v30 + v54;
          uint64_t v57 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
          {
            uint64_t v58 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
          }
          else
          {
            uint64_t v59 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v55, v56, v59);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
          }
          uint64_t v60 = v31[8];
          uint64_t v61 = (char *)v88 + v60;
          uint64_t v62 = (char *)v30 + v60;
          uint64_t v63 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v64 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v62, v64);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
          }
          uint64_t v65 = v31[9];
          uint64_t v66 = (uint64_t)v88;
          uint64_t v67 = (char *)v88 + v65;
          uint64_t v68 = (char *)v30 + v65;
          uint64_t v69 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
          {
            uint64_t v70 = sub_10017DF08(&qword_100E63740);
            memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            __dsta = v67;
            uint64_t v71 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v71))
            {
              uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              uint64_t v73 = __dsta;
              memcpy(__dsta, v68, *(void *)(*(void *)(v72 - 8) + 64));
            }
            else
            {
              uint64_t v73 = __dsta;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(__dsta, v68, v71);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v71);
            }
            uint64_t v74 = *(int *)(v69 + 20);
            uint64_t v83 = &v73[v74];
            uint64_t v75 = &v68[v74];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v68[v74], 1, v71))
            {
              uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v83, v75, *(void *)(*(void *)(v76 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v83, v75, v71);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v71);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v69);
            uint64_t v66 = (uint64_t)v88;
          }
          _s7Weather24LocationCompositionStateOwst_0(v66, 0, 1, (uint64_t)v31);
        }
        *(_OWORD *)((char *)a1 + v23[7]) = *(_OWORD *)((char *)a2 + v23[7]);
        uint64_t v77 = v23[8];
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        *((unsigned char *)a1 + v23[9]) = *((unsigned char *)a2 + v23[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
LABEL_44:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_100B144C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B20AE8((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for WeatherDescription();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_45;
      case 2u:
        uint64_t v7 = type metadata accessor for AttributedString();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_45;
      case 3u:
        uint64_t v8 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        goto LABEL_45;
      case 4u:
        long long v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        uint64_t v10 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v11 = *(int *)(v10 + 20);
        char v12 = (char *)a1 + v11;
        long long v13 = (char *)a2 + v11;
        uint64_t v14 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)char v12 = *(_OWORD *)v13;
          uint64_t v87 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v15 = v87[5];
          uint64_t v16 = &v12[v15];
          long long v17 = &v13[v15];
          uint64_t v18 = type metadata accessor for URL();
          uint64_t v82 = (void *)v10;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
          {
            uint64_t v19 = sub_10017DF08(&qword_100E749B0);
            memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
            uint64_t v20 = *(void *)(v18 - 8);
          }
          else
          {
            uint64_t v33 = v16;
            __dstb = v16;
            uint64_t v20 = *(void *)(v18 - 8);
            (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v33, v17, v18);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v18);
          }
          *(_OWORD *)&v12[v87[6]] = *(_OWORD *)&v13[v87[6]];
          uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
          v34(&v12[v87[7]], &v13[v87[7]], v18);
          uint64_t v35 = v87[8];
          __dst = &v12[v35];
          uint64_t v36 = &v13[v35];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v35], 1, v18))
          {
            uint64_t v37 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v36, *(void *)(*(void *)(v37 - 8) + 64));
          }
          else
          {
            v34(__dst, v36, v18);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v18);
          }
          uint64_t v10 = (uint64_t)v82;
          v12[v87[9]] = v13[v87[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
        }
        uint64_t v43 = *(int *)(v10 + 24);
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)a2 + v43;
        uint64_t v46 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
        {
          uint64_t v47 = sub_10017DF08(&qword_100E73810);
          memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          uint64_t v48 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v44, v45, v48);
          uint64_t v49 = sub_10017DF08(&qword_100E66478);
          v44[*(int *)(v49 + 48)] = v45[*(int *)(v49 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
        }
        goto LABEL_45;
      case 6u:
        uint64_t v21 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        goto LABEL_45;
      case 7u:
        uint64_t v22 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *a1 = *a2;
          uint64_t v23 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v24 = v23[5];
          uint64_t v25 = (char *)a1 + v24;
          uint64_t v26 = (char *)a2 + v24;
          uint64_t v27 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          uint64_t v28 = v23[6];
          uint64_t v29 = (_OWORD *)((char *)a1 + v28);
          uint64_t v30 = (_OWORD *)((char *)a2 + v28);
          uint64_t v31 = (int *)type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v31))
          {
            uint64_t v32 = sub_10017DF08(&qword_100E63850);
            memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            *uint64_t v29 = *v30;
            uint64_t v38 = v31[5];
            uint64_t v88 = v29;
            uint64_t v39 = (char *)v29 + v38;
            uint64_t v40 = (char *)v30 + v38;
            uint64_t v41 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
            {
              uint64_t v42 = sub_10017DF08(&qword_100E63730);
              memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
            }
            uint64_t v50 = v31[6];
            uint64_t v51 = (char *)v88 + v50;
            uint64_t v52 = (char *)v30 + v50;
            uint64_t v53 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
            uint64_t v54 = v31[7];
            uint64_t v55 = (char *)v88 + v54;
            uint64_t v56 = (char *)v30 + v54;
            uint64_t v57 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
            {
              uint64_t v58 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
            }
            else
            {
              uint64_t v59 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v55, v56, v59);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
            }
            uint64_t v60 = v31[8];
            uint64_t v61 = (char *)v88 + v60;
            uint64_t v62 = (char *)v30 + v60;
            uint64_t v63 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v64 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v62, v64);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
            }
            uint64_t v65 = v31[9];
            uint64_t v66 = (uint64_t)v88;
            uint64_t v67 = (char *)v88 + v65;
            uint64_t v68 = (char *)v30 + v65;
            uint64_t v69 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
            {
              uint64_t v70 = sub_10017DF08(&qword_100E63740);
              memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
            }
            else
            {
              __dsta = v67;
              uint64_t v71 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v71))
              {
                uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                uint64_t v73 = __dsta;
                memcpy(__dsta, v68, *(void *)(*(void *)(v72 - 8) + 64));
              }
              else
              {
                uint64_t v73 = __dsta;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(__dsta, v68, v71);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v71);
              }
              uint64_t v74 = *(int *)(v69 + 20);
              uint64_t v83 = &v73[v74];
              uint64_t v75 = &v68[v74];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v68[v74], 1, v71))
              {
                uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v83, v75, *(void *)(*(void *)(v76 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v83, v75, v71);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v71);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v69);
              uint64_t v66 = (uint64_t)v88;
            }
            _s7Weather24LocationCompositionStateOwst_0(v66, 0, 1, (uint64_t)v31);
          }
          *(_OWORD *)((char *)a1 + v23[7]) = *(_OWORD *)((char *)a2 + v23[7]);
          uint64_t v77 = v23[8];
          uint64_t v78 = (char *)a1 + v77;
          uint64_t v79 = (char *)a2 + v77;
          uint64_t v80 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
          *((unsigned char *)a1 + v23[9]) = *((unsigned char *)a2 + v23[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
LABEL_45:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_100B14F70()
{
  type metadata accessor for WeatherDescription();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AttributedString();
    if (v1 <= 0x3F)
    {
      sub_100B15134();
      if (v2 <= 0x3F)
      {
        type metadata accessor for DetailComponentContainerViewModel();
        if (v3 <= 0x3F)
        {
          type metadata accessor for PrecipitationTotalPlatterViewModel();
          if (v4 <= 0x3F)
          {
            type metadata accessor for ConditionDetailDynamicContentIdentifier();
            if (v5 <= 0x3F) {
              swift_initEnumMetadataMultiPayload();
            }
          }
        }
      }
    }
  }
}

void sub_100B15134()
{
  if (!qword_100EB1188)
  {
    sub_10018C6DC(&qword_100E774D8);
    sub_100B1519C();
    unint64_t v0 = type metadata accessor for NonEmpty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EB1188);
    }
  }
}

unint64_t sub_100B1519C()
{
  unint64_t result = qword_100EB1190;
  if (!qword_100EB1190)
  {
    sub_10018C6DC(&qword_100E774D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1190);
  }
  return result;
}

unint64_t sub_100B151F0(unint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    unsigned __int8 v9 = *(unsigned char *)(a2 + 16);
    sub_10018F6EC(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(void *)(v3 + 32);
    *(void *)(a1 + 24) = *(void *)(v3 + 24);
    *(void *)(a1 + 32) = v10;
    uint64_t v11 = v6[6];
    char v12 = (void *)(a1 + v11);
    long long v13 = (const void *)(v3 + v11);
    uint64_t v14 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E63758);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v17 = v6[7];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = v3 + v17;
    uint64_t v20 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v21 = *(void *)(v19 + 8);
        *uint64_t v18 = *(void *)v19;
        v18[1] = v21;
        swift_bridgeObjectRetain();
        goto LABEL_63;
      case 2u:
        uint64_t v22 = type metadata accessor for AttributedString();
        goto LABEL_16;
      case 3u:
        uint64_t v22 = sub_10017DF08(&qword_100E73808);
        goto LABEL_16;
      case 4u:
        uint64_t v23 = *(void *)(v19 + 8);
        int v269 = v6;
        if (v23)
        {
          *uint64_t v18 = *(void *)v19;
          v18[1] = v23;
          uint64_t v24 = *(void *)(v19 + 24);
          v18[2] = *(void *)(v19 + 16);
          v18[3] = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v31 = *(_OWORD *)(v19 + 16);
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
          *((_OWORD *)v18 + 1) = v31;
        }
        uint64_t v32 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v33 = *(int *)(v32 + 20);
        uint64_t v254 = (void *)((char *)v18 + v33);
        uint64_t v34 = (void *)(v19 + v33);
        uint64_t v35 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v243 = v32;
          uint64_t v266 = v20;
          uint64_t v36 = v34[1];
          *uint64_t v254 = *v34;
          v254[1] = v36;
          uint64_t v246 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v37 = v246[5];
          __dst = (char *)v254 + v37;
          uint64_t v242 = v34;
          uint64_t v38 = (char *)v34 + v37;
          uint64_t v39 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v258 = v14;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
          {
            uint64_t v40 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v38, *(void *)(*(void *)(v40 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(__dst, v38, v39);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v39);
          }
          uint64_t v67 = v246[6];
          uint64_t v68 = (void *)((char *)v254 + v67);
          uint64_t v69 = (void *)((char *)v242 + v67);
          uint64_t v70 = v69[1];
          *uint64_t v68 = *v69;
          v68[1] = v70;
          uint64_t v71 = v246[7];
          uint64_t v72 = (char *)v254 + v71;
          uint64_t v73 = (char *)v242 + v71;
          uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v74(v72, v73, v39);
          uint64_t v75 = v246[8];
          uint64_t v76 = (char *)v254 + v75;
          uint64_t v77 = (char *)v242 + v75;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v242 + v75, 1, v39))
          {
            uint64_t v78 = sub_10017DF08(&qword_100E749B0);
            memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            v74(v76, v77, v39);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v39);
          }
          uint64_t v14 = v258;
          uint64_t v32 = v243;
          *((unsigned char *)v254 + v246[9]) = *((unsigned char *)v242 + v246[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v20 = v266;
        }
        else
        {
          memcpy(v254, v34, *(void *)(*(void *)(v35 - 8) + 64));
        }
        uint64_t v79 = *(int *)(v32 + 24);
        uint64_t v80 = (uint64_t)v18 + v79;
        v19 += v79;
        uint64_t v81 = type metadata accessor for DetailComponentAction();
        uint64_t v6 = v269;
        if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v81))
        {
          size_t v65 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
          uint64_t v66 = (void *)v80;
          goto LABEL_38;
        }
        uint64_t v82 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v19, v82);
        uint64_t v83 = sub_10017DF08(&qword_100E66478);
        *(unsigned char *)(v80 + *(int *)(v83 + 48)) = *(unsigned char *)(v19 + *(int *)(v83 + 48));
        _s7Weather24LocationCompositionStateOwst_0(v80, 0, 1, v81);
        goto LABEL_63;
      case 5u:
        uint64_t v257 = v14;
        uint64_t v262 = v3;
        uint64_t v265 = v20;
        int v270 = v6;
        unint64_t v251 = a1;
        if (*(void *)(v19 + 24))
        {
          uint64_t v25 = *(void *)v19;
          uint64_t v26 = *(void *)(v19 + 8);
          char v27 = *(unsigned char *)(v19 + 16);
          sub_100190CC4(*(void *)v19, v26, v27);
          *uint64_t v18 = v25;
          v18[1] = v26;
          *((unsigned char *)v18 + 16) = v27;
          v18[3] = *(void *)(v19 + 24);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v41 = *(_OWORD *)(v19 + 16);
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
          *((_OWORD *)v18 + 1) = v41;
        }
        uint64_t v42 = *(void *)(v19 + 32);
        uint64_t v43 = *(void *)(v19 + 40);
        uint64_t v44 = *(void *)(v19 + 48);
        uint64_t v45 = *(void *)(v19 + 56);
        uint64_t v47 = *(void *)(v19 + 64);
        uint64_t v46 = *(void *)(v19 + 72);
        uint64_t v48 = *(void *)(v19 + 80);
        char v49 = *(unsigned char *)(v19 + 89);
        uint64_t v50 = *(unsigned __int8 *)(v19 + 88);
        sub_10033A9E8(v42, v43, v44, v45, v47, v46, v48, v50, v49);
        v18[4] = v42;
        v18[5] = v43;
        v18[6] = v44;
        v18[7] = v45;
        v18[8] = v47;
        v18[9] = v46;
        v18[10] = v48;
        *((unsigned char *)v18 + 88) = v50;
        *((unsigned char *)v18 + 89) = v49;
        uint64_t v3 = v262;
        uint64_t v20 = v265;
        uint64_t v6 = v270;
        uint64_t v14 = v257;
        a1 = v251;
        goto LABEL_63;
      case 6u:
        uint64_t v22 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_16:
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
        goto LABEL_63;
      case 7u:
        uint64_t v28 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            size_t v65 = *(void *)(*(void *)(v28 - 8) + 64);
            uint64_t v66 = v18;
LABEL_38:
            memcpy(v66, (const void *)v19, v65);
          }
          else
          {
            uint64_t v30 = *(void *)(v19 + 8);
            *uint64_t v18 = *(void *)v19;
            v18[1] = v30;
            v18[2] = *(void *)(v19 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_63:
          swift_storeEnumTagMultiPayload();
          uint64_t v127 = v6[8];
          uint64_t v128 = (void *)(a1 + v127);
          char v129 = (char *)(v3 + v127);
          if (_s7Weather24LocationCompositionStateOwet_0(v3 + v127, 1, v20))
          {
            uint64_t v130 = sub_10017DF08(&qword_100E73818);
            memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
LABEL_123:
            uint64_t v239 = v6[10];
            *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(v3 + v6[9]);
            *(unsigned char *)(a1 + v239) = *(unsigned char *)(v3 + v239);
            return a1;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v131 = *((void *)v129 + 1);
              *uint64_t v128 = *(void *)v129;
              v128[1] = v131;
              swift_bridgeObjectRetain();
              goto LABEL_122;
            case 2u:
              uint64_t v132 = type metadata accessor for AttributedString();
              goto LABEL_75;
            case 3u:
              uint64_t v132 = sub_10017DF08(&qword_100E73808);
              goto LABEL_75;
            case 4u:
              uint64_t v133 = *((void *)v129 + 1);
              uint64_t v272 = v6;
              if (v133)
              {
                *uint64_t v128 = *(void *)v129;
                v128[1] = v133;
                uint64_t v134 = *((void *)v129 + 3);
                v128[2] = *((void *)v129 + 2);
                v128[3] = v134;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v141 = *((_OWORD *)v129 + 1);
                *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
                *((_OWORD *)v128 + 1) = v141;
              }
              uint64_t v142 = type metadata accessor for DetailComponentContainerViewModel();
              uint64_t v143 = *(int *)(v142 + 20);
              uint64_t v144 = (void *)((char *)v128 + v143);
              char v145 = &v129[v143];
              uint64_t v146 = type metadata accessor for NewsArticleComponentViewModel(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v255 = (void *)v142;
                uint64_t v147 = *((void *)v145 + 1);
                void *v144 = *(void *)v145;
                v144[1] = v147;
                uint64_t v260 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v148 = v260[5];
                uint64_t v248 = (char *)v144 + v148;
                uint64_t v149 = &v145[v148];
                uint64_t v150 = type metadata accessor for URL();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
                {
                  uint64_t v151 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v248, v149, *(void *)(*(void *)(v151 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v248, v149, v150);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v248, 0, 1, v150);
                }
                uint64_t v174 = v260[6];
                uint64_t v175 = (void *)((char *)v144 + v174);
                uint64_t v176 = &v145[v174];
                uint64_t v177 = *((void *)v176 + 1);
                void *v175 = *(void *)v176;
                v175[1] = v177;
                uint64_t v178 = v260[7];
                uint64_t v245 = &v145[v178];
                uint64_t v249 = (char *)v144 + v178;
                uint64_t v179 = v144;
                uint64_t v180 = v150;
                uint64_t v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v182 = v249;
                uint64_t v250 = v181;
                v181(v182, v245, v180);
                uint64_t v183 = v180;
                uint64_t v184 = v179;
                uint64_t v185 = v260[8];
                uint64_t v186 = (char *)v179 + v185;
                uint64_t v187 = &v145[v185];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v145[v185], 1, v183))
                {
                  uint64_t v188 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
                }
                else
                {
                  v250(v186, v187, v183);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v183);
                }
                uint64_t v142 = (uint64_t)v255;
                *((unsigned char *)v184 + v260[9]) = v145[v260[9]];
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
              }
              uint64_t v189 = *(int *)(v142 + 24);
              id v190 = (char *)v128 + v189;
              id v191 = &v129[v189];
              uint64_t v192 = type metadata accessor for DetailComponentAction();
              uint64_t v6 = v272;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
              {
                uint64_t v193 = sub_10017DF08(&qword_100E73810);
                memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
              }
              else
              {
                uint64_t v194 = type metadata accessor for URL();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16))(v190, v191, v194);
                uint64_t v195 = sub_10017DF08(&qword_100E66478);
                v190[*(int *)(v195 + 48)] = v191[*(int *)(v195 + 48)];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
              }
              goto LABEL_122;
            case 5u:
              uint64_t v264 = v3;
              uint64_t v273 = v6;
              uint64_t v268 = v20;
              if (*((void *)v129 + 3))
              {
                uint64_t v135 = *(void *)v129;
                uint64_t v136 = *((void *)v129 + 1);
                char v137 = v129[16];
                sub_100190CC4(*(void *)v129, v136, v137);
                *uint64_t v128 = v135;
                v128[1] = v136;
                *((unsigned char *)v128 + 16) = v137;
                v128[3] = *((void *)v129 + 3);
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v152 = *((_OWORD *)v129 + 1);
                *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
                *((_OWORD *)v128 + 1) = v152;
              }
              uint64_t v153 = *((void *)v129 + 4);
              uint64_t v154 = *((void *)v129 + 5);
              uint64_t v155 = *((void *)v129 + 6);
              uint64_t v156 = *((void *)v129 + 7);
              uint64_t v158 = *((void *)v129 + 8);
              uint64_t v157 = *((void *)v129 + 9);
              uint64_t v159 = *((void *)v129 + 10);
              uint64_t v261 = v159;
              char v160 = v129[89];
              uint64_t v161 = v129[88];
              sub_10033A9E8(v153, v154, v155, v156, v158, v157, v159, v161, v160);
              void v128[4] = v153;
              v128[5] = v154;
              v128[6] = v155;
              v128[7] = v156;
              v128[8] = v158;
              v128[9] = v157;
              v128[10] = v261;
              *((unsigned char *)v128 + 88) = v161;
              *((unsigned char *)v128 + 89) = v160;
              goto LABEL_121;
            case 6u:
              uint64_t v132 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_75:
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v128, v129, v132);
              goto LABEL_122;
            case 7u:
              uint64_t v138 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
              int v139 = swift_getEnumCaseMultiPayload();
              if (v139 != 1)
              {
                if (v139)
                {
                  memcpy(v128, v129, *(void *)(*(void *)(v138 - 8) + 64));
                }
                else
                {
                  uint64_t v140 = *((void *)v129 + 1);
                  *uint64_t v128 = *(void *)v129;
                  v128[1] = v140;
                  v128[2] = *((void *)v129 + 2);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_storeEnumTagMultiPayload();
                }
                goto LABEL_122;
              }
              uint64_t v268 = v20;
              uint64_t v273 = v6;
              uint64_t v264 = v3;
              uint64_t v162 = *((void *)v129 + 1);
              *uint64_t v128 = *(void *)v129;
              v128[1] = v162;
              uint64_t v163 = type metadata accessor for ConditionDetailMapViewModel();
              uint64_t v164 = *(int *)(v163 + 20);
              os_log_type_t v165 = (char *)v128 + v164;
              uint64_t v166 = &v129[v164];
              uint64_t v167 = type metadata accessor for Location();
              uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16);
              swift_bridgeObjectRetain();
              v168(v165, v166, v167);
              long long v256 = (int *)v163;
              uint64_t v169 = *(int *)(v163 + 24);
              uint64_t v170 = (void *)((char *)v128 + v169);
              uint64_t v171 = &v129[v169];
              uint64_t v172 = (int *)type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, (uint64_t)v172))
              {
                uint64_t v173 = sub_10017DF08(&qword_100E63850);
                memcpy(v170, v171, *(void *)(*(void *)(v173 - 8) + 64));
                goto LABEL_120;
              }
              uint64_t v196 = *((void *)v171 + 1);
              *uint64_t v170 = *(void *)v171;
              v170[1] = v196;
              uint64_t v197 = v172[5];
              uint64_t v198 = (char *)v170 + v197;
              uint64_t v199 = &v171[v197];
              uint64_t v200 = type metadata accessor for Locale();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v199, 1, v200))
              {
                uint64_t v201 = sub_10017DF08(&qword_100E63730);
                memcpy(v198, v199, *(void *)(*(void *)(v201 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v198, 0, 1, v200);
              }
              uint64_t v202 = v172[6];
              uint64_t v203 = (char *)v170 + v202;
              uint64_t v204 = &v171[v202];
              uint64_t v205 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16))(v203, v204, v205);
              uint64_t v206 = v172[7];
              uint64_t v207 = (char *)v170 + v206;
              uint64_t v208 = &v171[v206];
              uint64_t v209 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v209))
              {
                uint64_t v210 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v207, v208, *(void *)(*(void *)(v210 - 8) + 64));
              }
              else
              {
                uint64_t v211 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16))(v207, v208, v211);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 0, 1, v209);
              }
              uint64_t v212 = v172[8];
              uint64_t v213 = (void *)((char *)v170 + v212);
              uint64_t v214 = &v171[v212];
              uint64_t v215 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              int v216 = swift_getEnumCaseMultiPayload();
              if (v216 == 1)
              {
                uint64_t v218 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v218 - 8) + 16))(v213, v214, v218);
              }
              else
              {
                if (v216)
                {
                  memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
LABEL_110:
                  uint64_t v219 = v172[9];
                  uint64_t v220 = (char *)v170 + v219;
                  uint64_t v221 = &v171[v219];
                  uint64_t v222 = type metadata accessor for WeatherDataOverrides();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v222))
                  {
                    uint64_t v223 = sub_10017DF08(&qword_100E63740);
                    memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v224 = type metadata accessor for Date();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v224))
                    {
                      uint64_t v225 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v220, v221, *(void *)(*(void *)(v225 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v220, v221, v224);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v224);
                    }
                    uint64_t v253 = v222;
                    uint64_t v226 = *(int *)(v222 + 20);
                    uint64_t v227 = &v220[v226];
                    long long v228 = &v221[v226];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v224))
                    {
                      uint64_t v229 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v227, v228, *(void *)(*(void *)(v229 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v227, v228, v224);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v224);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v253);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, (uint64_t)v172);
LABEL_120:
                  uint64_t v230 = v256[7];
                  uint64_t v231 = (void *)((char *)v128 + v230);
                  uint64_t v232 = &v129[v230];
                  uint64_t v233 = *((void *)v232 + 1);
                  *uint64_t v231 = *(void *)v232;
                  v231[1] = v233;
                  uint64_t v234 = v256[8];
                  uint64_t v235 = (char *)v128 + v234;
                  long long v236 = &v129[v234];
                  uint64_t v237 = type metadata accessor for WeatherMapOverlayKind();
                  Swift::String v238 = *(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v238(v235, v236, v237);
                  *((unsigned char *)v128 + v256[9]) = v129[v256[9]];
                  swift_storeEnumTagMultiPayload();
LABEL_121:
                  uint64_t v3 = v264;
                  uint64_t v20 = v268;
                  uint64_t v6 = v273;
LABEL_122:
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v20);
                  goto LABEL_123;
                }
                uint64_t v217 = *((void *)v214 + 1);
                *uint64_t v213 = *(void *)v214;
                v213[1] = v217;
                swift_bridgeObjectRetain();
              }
              swift_storeEnumTagMultiPayload();
              goto LABEL_110;
            default:
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v128, v129, v14);
              goto LABEL_122;
          }
        }
        uint64_t v259 = v14;
        uint64_t v267 = v20;
        uint64_t v271 = v6;
        uint64_t v263 = v3;
        uint64_t v51 = *(void *)(v19 + 8);
        *uint64_t v18 = *(void *)v19;
        v18[1] = v51;
        uint64_t v52 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v53 = *(int *)(v52 + 20);
        uint64_t v54 = (char *)v18 + v53;
        uint64_t v55 = v19 + v53;
        uint64_t v252 = v18;
        uint64_t v56 = type metadata accessor for Location();
        uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v58 = v54;
        uint64_t v59 = v252;
        v57(v58, v55, v56);
        uint64_t v247 = (int *)v52;
        uint64_t v60 = *(int *)(v52 + 24);
        uint64_t v61 = (void *)((char *)v252 + v60);
        uint64_t v62 = (void *)(v19 + v60);
        uint64_t v63 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, (uint64_t)v63))
        {
          uint64_t v64 = sub_10017DF08(&qword_100E63850);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
          uint64_t v6 = v271;
LABEL_62:
          uint64_t v118 = v247[7];
          uint64_t v119 = (void *)((char *)v59 + v118);
          uint64_t v120 = (void *)(v19 + v118);
          uint64_t v121 = v120[1];
          *uint64_t v119 = *v120;
          v119[1] = v121;
          uint64_t v122 = v247[8];
          uint64_t v123 = (uint64_t)v59 + v122;
          uint64_t v124 = v19 + v122;
          uint64_t v125 = type metadata accessor for WeatherMapOverlayKind();
          int v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16);
          swift_bridgeObjectRetain();
          v126(v123, v124, v125);
          *((unsigned char *)v252 + v247[9]) = *(unsigned char *)(v19 + v247[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v3 = v263;
          uint64_t v20 = v267;
          uint64_t v14 = v259;
          goto LABEL_63;
        }
        uint64_t v84 = v62[1];
        *uint64_t v61 = *v62;
        v61[1] = v84;
        uint64_t v85 = v63[5];
        uint64_t v86 = (char *)v61 + v85;
        uint64_t v87 = (char *)v62 + v85;
        uint64_t v88 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v88))
        {
          uint64_t v89 = sub_10017DF08(&qword_100E63730);
          memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v88);
        }
        uint64_t v90 = v63[6];
        uint64_t v91 = (char *)v61 + v90;
        uint64_t v92 = (char *)v62 + v90;
        uint64_t v93 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
        uint64_t v94 = v63[7];
        uint64_t v95 = (char *)v61 + v94;
        uint64_t v96 = (char *)v62 + v94;
        uint64_t v97 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          uint64_t v99 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v95, v96, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v100 = v63[8];
        uint64_t v101 = (void *)((char *)v61 + v100);
        uint64_t v102 = (void *)((char *)v62 + v100);
        uint64_t v103 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v104 = swift_getEnumCaseMultiPayload();
        if (v104 == 1)
        {
          uint64_t v106 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16))(v101, v102, v106);
        }
        else
        {
          if (v104)
          {
            memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
            goto LABEL_52;
          }
          uint64_t v105 = v102[1];
          void *v101 = *v102;
          v101[1] = v105;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_52:
        uint64_t v107 = v63[9];
        uint64_t v108 = (char *)v61 + v107;
        uint64_t v109 = (char *)v62 + v107;
        uint64_t v110 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
        {
          uint64_t v111 = sub_10017DF08(&qword_100E63740);
          memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
          uint64_t v6 = v271;
        }
        else
        {
          uint64_t v244 = v110;
          uint64_t v112 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v112))
          {
            uint64_t v113 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v108, v109, *(void *)(*(void *)(v113 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v108, v109, v112);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v112);
          }
          uint64_t v114 = *(int *)(v244 + 20);
          uint64_t v115 = &v108[v114];
          uint64_t v116 = &v109[v114];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v112))
          {
            uint64_t v117 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v115, v116, v112);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v112);
          }
          uint64_t v6 = v271;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v244);
        }
        uint64_t v59 = v252;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
        goto LABEL_62;
      default:
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v18, v19, v14);
        goto LABEL_63;
    }
  }
  uint64_t v16 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_100B16A20(uint64_t a1, int *a2)
{
  sub_10014D144(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for WeatherDescription();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v6, v5);
      goto LABEL_40;
    case 1u:
      goto LABEL_23;
    case 2u:
      uint64_t v8 = type metadata accessor for AttributedString();
      goto LABEL_39;
    case 3u:
      uint64_t v8 = sub_10017DF08(&qword_100E73808);
      goto LABEL_39;
    case 4u:
      if (*(void *)(v6 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v9 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v10 = v6 + *(int *)(v9 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v12 = v10 + v11[5];
        uint64_t v13 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = (void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
        uint64_t v72 = *v14;
        (*v14)(v10 + v11[7], v13);
        uint64_t v15 = v10 + v11[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v13)) {
          v72(v15, v13);
        }
      }
      v6 += *(int *)(v9 + 24);
      uint64_t v16 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v16)) {
        goto LABEL_40;
      }
      uint64_t v8 = type metadata accessor for URL();
      goto LABEL_39;
    case 5u:
      if (*(void *)(v6 + 24))
      {
        sub_100191924(*(void *)v6, *(void *)(v6 + 8), *(unsigned char *)(v6 + 16));
        swift_bridgeObjectRelease();
      }
      sub_10033AB48(*(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 80), *(unsigned __int8 *)(v6 + 88), *(unsigned char *)(v6 + 89));
      goto LABEL_40;
    case 6u:
      uint64_t v8 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      goto LABEL_39;
    case 7u:
      type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v19 = v6 + v18[5];
        uint64_t v20 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
        uint64_t v21 = v6 + v18[6];
        uint64_t v22 = (int *)type metadata accessor for WeatherData(0);
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, (uint64_t)v22))
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = v21 + v22[5];
          uint64_t v24 = type metadata accessor for Locale();
          if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
          }
          uint64_t v25 = v21 + v22[6];
          uint64_t v26 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
          uint64_t v27 = v21 + v22[7];
          uint64_t v28 = sub_10017DF08(&qword_100E63738);
          if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
          {
            uint64_t v29 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v27, v29);
          }
          uint64_t v30 = v21 + v22[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v31 = swift_getEnumCaseMultiPayload();
          if (v31 == 1)
          {
            uint64_t v32 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v30, v32);
          }
          else if (!v31)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v33 = v21 + v22[9];
          uint64_t v34 = type metadata accessor for WeatherDataOverrides();
          if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
          {
            uint64_t v35 = type metadata accessor for Date();
            if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v35)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v33, v35);
            }
            uint64_t v36 = v33 + *(int *)(v34 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v35)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v36, v35);
            }
          }
        }
        swift_bridgeObjectRelease();
        v6 += v18[8];
        uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
LABEL_39:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
      }
LABEL_40:
      uint64_t v37 = a1 + a2[8];
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v37, 1, v7);
      if (!result)
      {
        uint64_t result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
            uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
            uint64_t v40 = v37;
            uint64_t v41 = v5;
            goto LABEL_60;
          case 1:
            goto LABEL_66;
          case 2:
            uint64_t v42 = type metadata accessor for AttributedString();
            goto LABEL_59;
          case 3:
            uint64_t v42 = sub_10017DF08(&qword_100E73808);
            goto LABEL_59;
          case 4:
            if (*(void *)(v37 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v43 = type metadata accessor for DetailComponentContainerViewModel();
            uint64_t v44 = v37 + *(int *)(v43 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v45 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v46 = v44 + v45[5];
              uint64_t v47 = type metadata accessor for URL();
              if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v47)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
              }
              swift_bridgeObjectRelease();
              uint64_t v48 = *(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8);
              v48(v44 + v45[7], v47);
              uint64_t v49 = v44 + v45[8];
              if (!_s7Weather24LocationCompositionStateOwet_0(v49, 1, v47)) {
                v48(v49, v47);
              }
            }
            uint64_t v50 = v37 + *(int *)(v43 + 24);
            uint64_t v51 = type metadata accessor for DetailComponentAction();
            uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v50, 1, v51);
            if (result) {
              return result;
            }
            uint64_t v52 = type metadata accessor for URL();
            goto LABEL_84;
          case 5:
            if (*(void *)(v37 + 24))
            {
              sub_100191924(*(void *)v37, *(void *)(v37 + 8), *(unsigned char *)(v37 + 16));
              swift_bridgeObjectRelease();
            }
            return sub_10033AB48(*(void *)(v37 + 32), *(void *)(v37 + 40), *(void *)(v37 + 48), *(void *)(v37 + 56), *(void *)(v37 + 64), *(void *)(v37 + 72), *(void *)(v37 + 80), *(unsigned __int8 *)(v37 + 88), *(unsigned char *)(v37 + 89));
          case 6:
            uint64_t v42 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_59:
            uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8);
            uint64_t v41 = v42;
            uint64_t v40 = v37;
            goto LABEL_60;
          case 7:
            type metadata accessor for ConditionDetailDynamicContentIdentifier();
            uint64_t result = swift_getEnumCaseMultiPayload();
            if (result == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v53 = (int *)type metadata accessor for ConditionDetailMapViewModel();
              uint64_t v54 = v37 + v53[5];
              uint64_t v55 = type metadata accessor for Location();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
              uint64_t v56 = v37 + v53[6];
              uint64_t v57 = (int *)type metadata accessor for WeatherData(0);
              if (!_s7Weather24LocationCompositionStateOwet_0(v56, 1, (uint64_t)v57))
              {
                swift_bridgeObjectRelease();
                uint64_t v58 = v56 + v57[5];
                uint64_t v59 = type metadata accessor for Locale();
                if (!_s7Weather24LocationCompositionStateOwet_0(v58, 1, v59)) {
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
                }
                uint64_t v60 = v56 + v57[6];
                uint64_t v61 = type metadata accessor for WeatherDataModel();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
                uint64_t v62 = v56 + v57[7];
                uint64_t v63 = sub_10017DF08(&qword_100E63738);
                if (!_s7Weather24LocationCompositionStateOwet_0(v62, 1, v63))
                {
                  uint64_t v64 = type metadata accessor for Date();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v62, v64);
                }
                uint64_t v65 = v56 + v57[8];
                type metadata accessor for WeatherData.WeatherStatisticsState(0);
                int v66 = swift_getEnumCaseMultiPayload();
                if (v66 == 1)
                {
                  uint64_t v67 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v65, v67);
                }
                else if (!v66)
                {
                  swift_bridgeObjectRelease();
                }
                uint64_t v68 = v56 + v57[9];
                uint64_t v69 = type metadata accessor for WeatherDataOverrides();
                if (!_s7Weather24LocationCompositionStateOwet_0(v68, 1, v69))
                {
                  uint64_t v70 = type metadata accessor for Date();
                  if (!_s7Weather24LocationCompositionStateOwet_0(v68, 1, v70)) {
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v68, v70);
                  }
                  uint64_t v71 = v68 + *(int *)(v69 + 20);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v70)) {
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v71, v70);
                  }
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v50 = v37 + v53[8];
              uint64_t v52 = type metadata accessor for WeatherMapOverlayKind();
LABEL_84:
              uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8);
              uint64_t v41 = v52;
              uint64_t v40 = v50;
LABEL_60:
              uint64_t result = v39(v40, v41);
            }
            else if (!result)
            {
              swift_bridgeObjectRelease();
LABEL_66:
              uint64_t result = swift_bridgeObjectRelease();
            }
            break;
          default:
            return result;
        }
      }
      return result;
    default:
      goto LABEL_40;
  }
}

uint64_t sub_100B17674(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 16);
  sub_10018F6EC(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(v4 + 32);
  *(void *)(a1 + 24) = *(void *)(v4 + 24);
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(v4 + v10);
  uint64_t v13 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E63758);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = v4 + v15;
  uint64_t v18 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = *(void *)(v17 + 8);
      *uint64_t v16 = *(void *)v17;
      v16[1] = v19;
      swift_bridgeObjectRetain();
      goto LABEL_61;
    case 2u:
      uint64_t v20 = type metadata accessor for AttributedString();
      goto LABEL_14;
    case 3u:
      uint64_t v20 = sub_10017DF08(&qword_100E73808);
      goto LABEL_14;
    case 4u:
      uint64_t v258 = a1;
      uint64_t v21 = *(void *)(v17 + 8);
      uint64_t v268 = a3;
      if (v21)
      {
        *uint64_t v16 = *(void *)v17;
        v16[1] = v21;
        uint64_t v22 = v16;
        uint64_t v23 = *(void *)(v17 + 24);
        v22[2] = *(void *)(v17 + 16);
        v22[3] = v23;
        swift_bridgeObjectRetain();
        uint64_t v16 = v22;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v30 = *(_OWORD *)(v17 + 16);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v30;
      }
      uint64_t v31 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = (void *)((char *)v16 + v32);
      uint64_t v34 = (void *)(v17 + v32);
      uint64_t v35 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v244 = (void *)v31;
        uint64_t v249 = v16;
        uint64_t v36 = v34[1];
        *uint64_t v33 = *v34;
        v33[1] = v36;
        uint64_t v248 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v37 = v248[5];
        __dst = (char *)v33 + v37;
        uint64_t v38 = (char *)v34 + v37;
        uint64_t v39 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v261 = v4;
        uint64_t v254 = v13;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(__dst, v38, v39);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v39);
        }
        uint64_t v66 = v248[6];
        uint64_t v67 = (void *)((char *)v33 + v66);
        uint64_t v68 = (void *)((char *)v34 + v66);
        uint64_t v69 = v68[1];
        *uint64_t v67 = *v68;
        v67[1] = v69;
        uint64_t v70 = v248[7];
        uint64_t v71 = (char *)v33 + v70;
        uint64_t v72 = (char *)v34 + v70;
        uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v73(v71, v72, v39);
        uint64_t v74 = v248[8];
        uint64_t v75 = (char *)v33 + v74;
        uint64_t v76 = (char *)v34 + v74;
        a1 = v258;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34 + v74, 1, v39))
        {
          uint64_t v77 = sub_10017DF08(&qword_100E749B0);
          memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          v73(v75, v76, v39);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v39);
        }
        uint64_t v4 = v261;
        uint64_t v13 = v254;
        uint64_t v31 = (uint64_t)v244;
        *((unsigned char *)v33 + v248[9]) = *((unsigned char *)v34 + v248[9]);
        swift_storeEnumTagMultiPayload();
        a3 = v268;
        uint64_t v16 = v249;
      }
      else
      {
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        a3 = v268;
        a1 = v258;
      }
      uint64_t v78 = *(int *)(v31 + 24);
      uint64_t v79 = (uint64_t)v16 + v78;
      v17 += v78;
      uint64_t v80 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v80))
      {
        size_t v64 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
        uint64_t v65 = (void *)v79;
        goto LABEL_36;
      }
      uint64_t v81 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v17, v81);
      uint64_t v82 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v79 + *(int *)(v82 + 48)) = *(unsigned char *)(v17 + *(int *)(v82 + 48));
      _s7Weather24LocationCompositionStateOwst_0(v79, 0, 1, v80);
      goto LABEL_61;
    case 5u:
      uint64_t v260 = v4;
      uint64_t v265 = v18;
      int v269 = a3;
      uint64_t v253 = v13;
      uint64_t v259 = a1;
      if (*(void *)(v17 + 24))
      {
        uint64_t v24 = *(void *)v17;
        uint64_t v25 = *(void *)(v17 + 8);
        char v26 = *(unsigned char *)(v17 + 16);
        sub_100190CC4(*(void *)v17, v25, v26);
        *uint64_t v16 = v24;
        v16[1] = v25;
        *((unsigned char *)v16 + 16) = v26;
        v16[3] = *(void *)(v17 + 24);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v41 = *(_OWORD *)(v17 + 16);
        *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v41;
      }
      uint64_t v42 = *(void *)(v17 + 32);
      uint64_t v43 = *(void *)(v17 + 40);
      uint64_t v44 = *(void *)(v17 + 48);
      uint64_t v45 = *(void *)(v17 + 56);
      uint64_t v47 = *(void *)(v17 + 64);
      uint64_t v46 = *(void *)(v17 + 72);
      uint64_t v48 = *(void *)(v17 + 80);
      char v49 = *(unsigned char *)(v17 + 89);
      uint64_t v50 = *(unsigned __int8 *)(v17 + 88);
      sub_10033A9E8(v42, v43, v44, v45, v47, v46, v48, v50, v49);
      v16[4] = v42;
      v16[5] = v43;
      v16[6] = v44;
      v16[7] = v45;
      v16[8] = v47;
      v16[9] = v46;
      v16[10] = v48;
      *((unsigned char *)v16 + 88) = v50;
      *((unsigned char *)v16 + 89) = v49;
      uint64_t v4 = v260;
      uint64_t v18 = v265;
      a3 = v269;
      uint64_t v13 = v253;
      a1 = v259;
      goto LABEL_61;
    case 6u:
      uint64_t v20 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_14:
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
      goto LABEL_61;
    case 7u:
      uint64_t v27 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v255 = v13;
        uint64_t v266 = v18;
        int v270 = a3;
        uint64_t v262 = v4;
        uint64_t v51 = *(void *)(v17 + 8);
        *uint64_t v16 = *(void *)v17;
        v16[1] = v51;
        uint64_t v52 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v53 = *(int *)(v52 + 20);
        uint64_t v250 = v16;
        uint64_t v54 = (char *)v16 + v53;
        uint64_t v55 = v17 + v53;
        uint64_t v56 = type metadata accessor for Location();
        uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v58 = v250;
        v57(v54, v55, v56);
        uint64_t v245 = (int *)v52;
        uint64_t v59 = *(int *)(v52 + 24);
        uint64_t v60 = (void *)((char *)v250 + v59);
        uint64_t v61 = (void *)(v17 + v59);
        uint64_t v62 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v62))
        {
          uint64_t v63 = sub_10017DF08(&qword_100E63850);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
          a3 = v270;
LABEL_60:
          uint64_t v118 = v245[7];
          uint64_t v119 = (void *)((char *)v58 + v118);
          uint64_t v120 = (void *)(v17 + v118);
          uint64_t v121 = v120[1];
          *uint64_t v119 = *v120;
          v119[1] = v121;
          uint64_t v122 = v245[8];
          uint64_t v123 = (uint64_t)v250 + v122;
          uint64_t v124 = v17 + v122;
          uint64_t v125 = type metadata accessor for WeatherMapOverlayKind();
          int v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16);
          swift_bridgeObjectRetain();
          v126(v123, v124, v125);
          *((unsigned char *)v250 + v245[9]) = *(unsigned char *)(v17 + v245[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = v262;
          uint64_t v18 = v266;
          uint64_t v13 = v255;
          goto LABEL_61;
        }
        uint64_t v83 = v61[1];
        *uint64_t v60 = *v61;
        v60[1] = v83;
        uint64_t v84 = v62[5];
        uint64_t v85 = (char *)v60 + v84;
        uint64_t v86 = (char *)v61 + v84;
        uint64_t v87 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
        {
          uint64_t v88 = sub_10017DF08(&qword_100E63730);
          memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
        }
        uint64_t v89 = v62[6];
        uint64_t v90 = (char *)v60 + v89;
        uint64_t v91 = (char *)v61 + v89;
        uint64_t v92 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
        uint64_t v93 = v62[7];
        uint64_t v94 = (char *)v60 + v93;
        uint64_t v95 = (char *)v61 + v93;
        uint64_t v96 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
        {
          uint64_t v97 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          uint64_t v98 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v94, v95, v98);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
        }
        uint64_t v58 = v250;
        uint64_t v99 = v62[8];
        uint64_t v100 = (void *)((char *)v60 + v99);
        uint64_t v101 = (void *)((char *)v61 + v99);
        uint64_t v102 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v103 = swift_getEnumCaseMultiPayload();
        if (v103 == 1)
        {
          uint64_t v105 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v105 - 8) + 16))(v100, v101, v105);
        }
        else
        {
          if (v103)
          {
            memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
            goto LABEL_50;
          }
          uint64_t v104 = v101[1];
          void *v100 = *v101;
          v100[1] = v104;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_50:
        uint64_t v106 = v62[9];
        uint64_t v107 = (char *)v60 + v106;
        uint64_t v108 = (char *)v61 + v106;
        uint64_t v109 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
        {
          uint64_t v110 = sub_10017DF08(&qword_100E63740);
          memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
          a3 = v270;
        }
        else
        {
          uint64_t v243 = v109;
          uint64_t v111 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v111))
          {
            uint64_t v112 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v107, v108, v111);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v111);
          }
          uint64_t v113 = *(int *)(v243 + 20);
          uint64_t v114 = (uint64_t)v107;
          uint64_t v115 = &v107[v113];
          uint64_t v116 = &v108[v113];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v111))
          {
            uint64_t v117 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v115, v116, v111);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v111);
          }
          a3 = v270;
          _s7Weather24LocationCompositionStateOwst_0(v114, 0, 1, v243);
          uint64_t v58 = v250;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
        goto LABEL_60;
      }
      if (EnumCaseMultiPayload)
      {
        size_t v64 = *(void *)(*(void *)(v27 - 8) + 64);
        uint64_t v65 = v16;
LABEL_36:
        memcpy(v65, (const void *)v17, v64);
      }
      else
      {
        uint64_t v29 = *(void *)(v17 + 8);
        *uint64_t v16 = *(void *)v17;
        v16[1] = v29;
        v16[2] = *(void *)(v17 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
LABEL_61:
      swift_storeEnumTagMultiPayload();
      uint64_t v127 = a3[8];
      uint64_t v128 = (void *)(a1 + v127);
      char v129 = (char *)(v4 + v127);
      if (_s7Weather24LocationCompositionStateOwet_0(v4 + v127, 1, v18))
      {
        uint64_t v130 = sub_10017DF08(&qword_100E73818);
        memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
        goto LABEL_123;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v131 = *((void *)v129 + 1);
          *uint64_t v128 = *(void *)v129;
          v128[1] = v131;
          swift_bridgeObjectRetain();
          goto LABEL_122;
        case 2u:
          uint64_t v132 = type metadata accessor for AttributedString();
          goto LABEL_73;
        case 3u:
          uint64_t v132 = sub_10017DF08(&qword_100E73808);
          goto LABEL_73;
        case 4u:
          uint64_t v133 = *((void *)v129 + 1);
          uint64_t v271 = a3;
          if (v133)
          {
            *uint64_t v128 = *(void *)v129;
            v128[1] = v133;
            uint64_t v134 = *((void *)v129 + 3);
            v128[2] = *((void *)v129 + 2);
            v128[3] = v134;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v141 = *((_OWORD *)v129 + 1);
            *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
            *((_OWORD *)v128 + 1) = v141;
          }
          uint64_t v142 = type metadata accessor for DetailComponentContainerViewModel();
          uint64_t v143 = *(int *)(v142 + 20);
          uint64_t v144 = (void *)((char *)v128 + v143);
          char v145 = &v129[v143];
          uint64_t v146 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v267 = v18;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v251 = v142;
            uint64_t v147 = *((void *)v145 + 1);
            void *v144 = *(void *)v145;
            v144[1] = v147;
            long long v256 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v148 = v256[5];
            uint64_t v246 = (char *)v144 + v148;
            uint64_t v149 = &v145[v148];
            uint64_t v150 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            uint64_t v264 = v4;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
            {
              uint64_t v151 = sub_10017DF08(&qword_100E749B0);
              memcpy(v246, v149, *(void *)(*(void *)(v151 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v246, v149, v150);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v246, 0, 1, v150);
            }
            uint64_t v177 = v256[6];
            uint64_t v178 = (void *)((char *)v144 + v177);
            uint64_t v179 = &v145[v177];
            uint64_t v180 = *((void *)v179 + 1);
            void *v178 = *(void *)v179;
            v178[1] = v180;
            uint64_t v181 = v256[7];
            uint64_t v247 = (char *)v144 + v181;
            uint64_t v182 = &v145[v181];
            uint64_t v183 = *(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16);
            swift_bridgeObjectRetain();
            v183(v247, v182, v150);
            uint64_t v184 = v256[8];
            uint64_t v185 = (char *)v144 + v184;
            uint64_t v186 = &v145[v184];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v145[v184], 1, v150))
            {
              uint64_t v187 = sub_10017DF08(&qword_100E749B0);
              memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
            }
            else
            {
              v183(v185, v186, v150);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, v150);
            }
            uint64_t v4 = v264;
            uint64_t v142 = v251;
            *((unsigned char *)v144 + v256[9]) = v145[v256[9]];
            swift_storeEnumTagMultiPayload();
            a3 = v271;
          }
          else
          {
            memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
            a3 = v271;
          }
          uint64_t v188 = *(int *)(v142 + 24);
          uint64_t v189 = (uint64_t)v128 + v188;
          uint64_t v190 = (uint64_t)&v129[v188];
          uint64_t v191 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0(v190, 1, v191))
          {
            size_t v174 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
            uint64_t v175 = (void *)v189;
            uint64_t v176 = (const void *)v190;
            goto LABEL_95;
          }
          uint64_t v192 = type metadata accessor for URL();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v192 - 8) + 16))(v189, v190, v192);
          uint64_t v193 = sub_10017DF08(&qword_100E66478);
          *(unsigned char *)(v189 + *(int *)(v193 + 48)) = *(unsigned char *)(v190 + *(int *)(v193 + 48));
          _s7Weather24LocationCompositionStateOwst_0(v189, 0, 1, v191);
          goto LABEL_97;
        case 5u:
          uint64_t v263 = v4;
          uint64_t v267 = v18;
          uint64_t v272 = a3;
          if (*((void *)v129 + 3))
          {
            uint64_t v135 = *(void *)v129;
            uint64_t v136 = *((void *)v129 + 1);
            char v137 = v129[16];
            sub_100190CC4(*(void *)v129, v136, v137);
            *uint64_t v128 = v135;
            v128[1] = v136;
            *((unsigned char *)v128 + 16) = v137;
            v128[3] = *((void *)v129 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v152 = *((_OWORD *)v129 + 1);
            *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
            *((_OWORD *)v128 + 1) = v152;
          }
          uint64_t v153 = *((void *)v129 + 4);
          uint64_t v154 = *((void *)v129 + 5);
          uint64_t v155 = *((void *)v129 + 6);
          uint64_t v156 = *((void *)v129 + 7);
          uint64_t v157 = *((void *)v129 + 8);
          uint64_t v158 = *((void *)v129 + 9);
          uint64_t v159 = *((void *)v129 + 10);
          char v257 = v129[89];
          uint64_t v160 = v129[88];
          sub_10033A9E8(v153, v154, v155, v156, v157, v158, v159, v160, v257);
          void v128[4] = v153;
          v128[5] = v154;
          v128[6] = v155;
          v128[7] = v156;
          v128[8] = v157;
          v128[9] = v158;
          v128[10] = v159;
          *((unsigned char *)v128 + 88) = v160;
          *((unsigned char *)v128 + 89) = v257;
          goto LABEL_121;
        case 6u:
          uint64_t v132 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_73:
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v132 - 8) + 16))(v128, v129, v132);
          goto LABEL_122;
        case 7u:
          uint64_t v267 = v18;
          uint64_t v138 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v139 = swift_getEnumCaseMultiPayload();
          if (v139 == 1)
          {
            uint64_t v272 = a3;
            uint64_t v263 = v4;
            uint64_t v161 = *((void *)v129 + 1);
            *uint64_t v128 = *(void *)v129;
            v128[1] = v161;
            uint64_t v162 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v163 = *(int *)(v162 + 20);
            uint64_t v164 = (char *)v128 + v163;
            os_log_type_t v165 = &v129[v163];
            uint64_t v166 = type metadata accessor for Location();
            uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16);
            swift_bridgeObjectRetain();
            v167(v164, v165, v166);
            uint64_t v168 = v162;
            uint64_t v169 = *(int *)(v162 + 24);
            uint64_t v170 = (void *)((char *)v128 + v169);
            uint64_t v171 = &v129[v169];
            uint64_t v172 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
            {
              uint64_t v173 = sub_10017DF08(&qword_100E63850);
              memcpy(v170, v171, *(void *)(*(void *)(v173 - 8) + 64));
              goto LABEL_120;
            }
            uint64_t v194 = *((void *)v171 + 1);
            *uint64_t v170 = *(void *)v171;
            v170[1] = v194;
            uint64_t v252 = (int *)v172;
            uint64_t v195 = *(int *)(v172 + 20);
            uint64_t v196 = (char *)v170 + v195;
            uint64_t v197 = &v171[v195];
            uint64_t v198 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v198))
            {
              uint64_t v199 = sub_10017DF08(&qword_100E63730);
              memcpy(v196, v197, *(void *)(*(void *)(v199 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v196, v197, v198);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v198);
            }
            uint64_t v200 = v252[6];
            uint64_t v201 = (char *)v170 + v200;
            uint64_t v202 = &v171[v200];
            uint64_t v203 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
            uint64_t v204 = v252[7];
            uint64_t v205 = (char *)v170 + v204;
            uint64_t v206 = &v171[v204];
            uint64_t v207 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v206, 1, v207))
            {
              uint64_t v208 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
            }
            else
            {
              uint64_t v209 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16))(v205, v206, v209);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v205, 0, 1, v207);
            }
            uint64_t v210 = (uint64_t)v252;
            uint64_t v211 = v252[8];
            uint64_t v212 = (void *)((char *)v170 + v211);
            uint64_t v213 = &v171[v211];
            uint64_t v214 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v215 = swift_getEnumCaseMultiPayload();
            if (v215 == 1)
            {
              uint64_t v217 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v212, v213, v217);
            }
            else
            {
              if (v215)
              {
                memcpy(v212, v213, *(void *)(*(void *)(v214 - 8) + 64));
                goto LABEL_110;
              }
              uint64_t v216 = *((void *)v213 + 1);
              *uint64_t v212 = *(void *)v213;
              v212[1] = v216;
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
LABEL_110:
            uint64_t v218 = v252[9];
            uint64_t v219 = (char *)v170 + v218;
            uint64_t v220 = &v171[v218];
            uint64_t v221 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v220, 1, v221))
            {
              uint64_t v222 = sub_10017DF08(&qword_100E63740);
              memcpy(v219, v220, *(void *)(*(void *)(v222 - 8) + 64));
            }
            else
            {
              uint64_t v223 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v220, 1, v223))
              {
                uint64_t v224 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v219, v220, *(void *)(*(void *)(v224 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16))(v219, v220, v223);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v219, 0, 1, v223);
              }
              uint64_t v225 = v221;
              uint64_t v226 = *(int *)(v221 + 20);
              uint64_t v227 = &v219[v226];
              long long v228 = &v220[v226];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v223))
              {
                uint64_t v229 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v227, v228, *(void *)(*(void *)(v229 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16))(v227, v228, v223);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v223);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v219, 0, 1, v225);
              uint64_t v210 = (uint64_t)v252;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v210);
LABEL_120:
            uint64_t v230 = v168;
            uint64_t v231 = *(int *)(v168 + 28);
            uint64_t v232 = (void *)((char *)v128 + v231);
            uint64_t v233 = &v129[v231];
            uint64_t v234 = *((void *)v233 + 1);
            *uint64_t v232 = *(void *)v233;
            v232[1] = v234;
            uint64_t v235 = *(int *)(v168 + 32);
            long long v236 = (char *)v128 + v235;
            uint64_t v237 = &v129[v235];
            uint64_t v238 = type metadata accessor for WeatherMapOverlayKind();
            uint64_t v239 = *(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 16);
            swift_bridgeObjectRetain();
            v239(v236, v237, v238);
            *((unsigned char *)v128 + *(int *)(v230 + 36)) = v129[*(int *)(v230 + 36)];
            swift_storeEnumTagMultiPayload();
LABEL_121:
            uint64_t v4 = v263;
            uint64_t v18 = v267;
            a3 = v272;
            goto LABEL_122;
          }
          if (v139)
          {
            size_t v174 = *(void *)(*(void *)(v138 - 8) + 64);
            uint64_t v175 = v128;
            uint64_t v176 = v129;
LABEL_95:
            memcpy(v175, v176, v174);
          }
          else
          {
            uint64_t v140 = *((void *)v129 + 1);
            *uint64_t v128 = *(void *)v129;
            v128[1] = v140;
            v128[2] = *((void *)v129 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_97:
          uint64_t v18 = v267;
LABEL_122:
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v18);
LABEL_123:
          uint64_t v240 = a3[10];
          *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(v4 + a3[9]);
          *(unsigned char *)(a1 + v240) = *(unsigned char *)(v4 + v240);
          return a1;
        default:
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v128, v129, v13);
          goto LABEL_122;
      }
    default:
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v17, v13);
      goto LABEL_61;
  }
}

uint64_t sub_100B18EA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 16);
  sub_10018F6EC(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v8;
  sub_10014D144(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(v4 + 24);
  *(void *)(a1 + 32) = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(v4 + v12);
  uint64_t v15 = type metadata accessor for WeatherDescription();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63758);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_7:
  if (a1 != v4)
  {
    uint64_t v20 = a3[7];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = v4 + v20;
    sub_100B20AE8(a1 + v20, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
    type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v21 = *(void *)v22;
        v21[1] = *(void *)(v22 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 2u:
        uint64_t v23 = type metadata accessor for AttributedString();
        goto LABEL_19;
      case 3u:
        uint64_t v23 = sub_10017DF08(&qword_100E73808);
        goto LABEL_19;
      case 4u:
        uint64_t v347 = a3;
        uint64_t v335 = v15;
        if (*(void *)(v22 + 8))
        {
          *uint64_t v21 = *(void *)v22;
          v21[1] = *(void *)(v22 + 8);
          long long v21[2] = *(void *)(v22 + 16);
          v21[3] = *(void *)(v22 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v29 = *(_OWORD *)(v22 + 16);
          *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
          *((_OWORD *)v21 + 1) = v29;
        }
        uint64_t v30 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v31 = *(int *)(v30 + 20);
        uint64_t v32 = (void *)((char *)v21 + v31);
        uint64_t v33 = (void *)(v22 + v31);
        uint64_t v34 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v320 = v30;
          *uint64_t v32 = *v33;
          v32[1] = v33[1];
          uint64_t v321 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v35 = v321[5];
          __dst = (char *)v32 + v35;
          uint64_t v36 = (char *)v33 + v35;
          uint64_t v37 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v329 = v21;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
          {
            uint64_t v38 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v36, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(__dst, v36, v37);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v37);
          }
          uint64_t v62 = v321[6];
          uint64_t v63 = (void *)((char *)v32 + v62);
          size_t v64 = (void *)((char *)v33 + v62);
          *uint64_t v63 = *v64;
          v63[1] = v64[1];
          uint64_t v65 = v321[7];
          uint64_t v66 = (char *)v32 + v65;
          uint64_t v67 = (char *)v33 + v65;
          uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          v68(v66, v67, v37);
          uint64_t v69 = v321[8];
          uint64_t v70 = (char *)v32 + v69;
          uint64_t v71 = (char *)v33 + v69;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33 + v69, 1, v37))
          {
            uint64_t v72 = sub_10017DF08(&qword_100E749B0);
            memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
          }
          else
          {
            v68(v70, v71, v37);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v37);
          }
          uint64_t v21 = v329;
          uint64_t v30 = v320;
          *((unsigned char *)v32 + v321[9]) = *((unsigned char *)v33 + v321[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        uint64_t v73 = *(int *)(v30 + 24);
        uint64_t v74 = (uint64_t)v21 + v73;
        v22 += v73;
        uint64_t v75 = type metadata accessor for DetailComponentAction();
        a3 = v347;
        if (_s7Weather24LocationCompositionStateOwet_0(v22, 1, v75))
        {
          size_t v60 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
          uint64_t v61 = (void *)v74;
          goto LABEL_41;
        }
        uint64_t v76 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v22, v76);
        uint64_t v77 = sub_10017DF08(&qword_100E66478);
        *(unsigned char *)(v74 + *(int *)(v77 + 48)) = *(unsigned char *)(v22 + *(int *)(v77 + 48));
        _s7Weather24LocationCompositionStateOwst_0(v74, 0, 1, v75);
        goto LABEL_43;
      case 5u:
        uint64_t v341 = v4;
        uint64_t v348 = a3;
        uint64_t v336 = v15;
        uint64_t v328 = a1;
        if (*(void *)(v22 + 24))
        {
          uint64_t v24 = *(void *)v22;
          uint64_t v25 = *(void *)(v22 + 8);
          char v26 = *(unsigned char *)(v22 + 16);
          sub_100190CC4(*(void *)v22, v25, v26);
          *uint64_t v21 = v24;
          v21[1] = v25;
          *((unsigned char *)v21 + 16) = v26;
          v21[3] = *(void *)(v22 + 24);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v39 = *(_OWORD *)(v22 + 16);
          *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
          *((_OWORD *)v21 + 1) = v39;
        }
        uint64_t v40 = *(void *)(v22 + 32);
        uint64_t v41 = *(void *)(v22 + 40);
        uint64_t v42 = *(void *)(v22 + 48);
        uint64_t v43 = *(void *)(v22 + 56);
        uint64_t v45 = *(void *)(v22 + 64);
        uint64_t v44 = *(void *)(v22 + 72);
        uint64_t v46 = *(void *)(v22 + 80);
        char v47 = *(unsigned char *)(v22 + 89);
        uint64_t v48 = *(unsigned __int8 *)(v22 + 88);
        sub_10033A9E8(v40, v41, v42, v43, v45, v44, v46, v48, v47);
        v21[4] = v40;
        v21[5] = v41;
        v21[6] = v42;
        v21[7] = v43;
        v21[8] = v45;
        v21[9] = v44;
        v21[10] = v46;
        *((unsigned char *)v21 + 88) = v48;
        *((unsigned char *)v21 + 89) = v47;
        uint64_t v4 = v341;
        a3 = v348;
        uint64_t v15 = v336;
        a1 = v328;
        goto LABEL_67;
      case 6u:
        uint64_t v23 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_19:
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        goto LABEL_67;
      case 7u:
        uint64_t v335 = v15;
        uint64_t v27 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            size_t v60 = *(void *)(*(void *)(v27 - 8) + 64);
            uint64_t v61 = v21;
LABEL_41:
            memcpy(v61, (const void *)v22, v60);
          }
          else
          {
            *uint64_t v21 = *(void *)v22;
            v21[1] = *(void *)(v22 + 8);
            long long v21[2] = *(void *)(v22 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_43:
          uint64_t v15 = v335;
LABEL_67:
          swift_storeEnumTagMultiPayload();
          break;
        }
        uint64_t v330 = v21;
        uint64_t v342 = v4;
        uint64_t v349 = a3;
        *uint64_t v21 = *(void *)v22;
        v21[1] = *(void *)(v22 + 8);
        uint64_t v49 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v50 = *(int *)(v49 + 20);
        uint64_t v51 = (char *)v21 + v50;
        uint64_t v52 = v22 + v50;
        uint64_t v53 = type metadata accessor for Location();
        uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        uint64_t v322 = (int *)v49;
        uint64_t v55 = *(int *)(v49 + 24);
        uint64_t v56 = (void *)((char *)v21 + v55);
        uint64_t v57 = (void *)(v22 + v55);
        uint64_t v58 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, (uint64_t)v58))
        {
          uint64_t v59 = sub_10017DF08(&qword_100E63850);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
          a3 = v349;
LABEL_66:
          uint64_t v110 = v322[7];
          uint64_t v111 = (void *)((char *)v21 + v110);
          uint64_t v112 = (void *)(v22 + v110);
          *uint64_t v111 = *v112;
          v111[1] = v112[1];
          uint64_t v113 = v322[8];
          uint64_t v114 = (uint64_t)v330 + v113;
          uint64_t v115 = v22 + v113;
          uint64_t v116 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 16);
          swift_bridgeObjectRetain();
          v117(v114, v115, v116);
          *((unsigned char *)v330 + v322[9]) = *(unsigned char *)(v22 + v322[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v15 = v335;
          uint64_t v4 = v342;
          goto LABEL_67;
        }
        *uint64_t v56 = *v57;
        v56[1] = v57[1];
        uint64_t v78 = v58[5];
        uint64_t v79 = (char *)v56 + v78;
        uint64_t v80 = (char *)v57 + v78;
        uint64_t v81 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
        {
          uint64_t v82 = sub_10017DF08(&qword_100E63730);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
        }
        uint64_t v83 = v58[6];
        uint64_t v84 = (char *)v56 + v83;
        uint64_t v85 = (char *)v57 + v83;
        uint64_t v86 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
        uint64_t v87 = v58[7];
        uint64_t v88 = (char *)v56 + v87;
        uint64_t v89 = (char *)v57 + v87;
        uint64_t v90 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90))
        {
          uint64_t v91 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          uint64_t v92 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v88, v89, v92);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v90);
        }
        uint64_t v21 = v330;
        uint64_t v93 = v58[8];
        uint64_t v94 = (void *)((char *)v56 + v93);
        uint64_t v95 = (void *)((char *)v57 + v93);
        uint64_t v96 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v97 = swift_getEnumCaseMultiPayload();
        if (v97 == 1)
        {
          uint64_t v98 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v98 - 8) + 16))(v94, v95, v98);
        }
        else
        {
          if (v97)
          {
            memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
            goto LABEL_56;
          }
          void *v94 = *v95;
          v94[1] = v95[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_56:
        uint64_t v99 = v58[9];
        uint64_t v100 = (char *)v56 + v99;
        uint64_t v101 = (char *)v57 + v99;
        uint64_t v102 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
        {
          uint64_t v103 = sub_10017DF08(&qword_100E63740);
          memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
          a3 = v349;
        }
        else
        {
          uint64_t v104 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v104))
          {
            uint64_t v105 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v100, v101, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v100, v101, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v104);
          }
          uint64_t v106 = *(int *)(v102 + 20);
          uint64_t v107 = &v100[v106];
          uint64_t v108 = &v101[v106];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v104))
          {
            uint64_t v109 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v107, v108, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v104);
          }
          a3 = v349;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, (uint64_t)v58);
        goto LABEL_66;
      default:
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v21, v22, v15);
        goto LABEL_67;
    }
  }
  uint64_t v118 = a3[8];
  uint64_t v119 = a1 + v118;
  uint64_t v120 = v4 + v118;
  uint64_t v121 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  int v122 = _s7Weather24LocationCompositionStateOwet_0(v119, 1, v121);
  int v123 = _s7Weather24LocationCompositionStateOwet_0(v120, 1, v121);
  if (v122)
  {
    if (!v123)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v119 = *(void *)v120;
          *(void *)(v119 + 8) = *(void *)(v120 + 8);
          swift_bridgeObjectRetain();
          goto LABEL_175;
        case 2u:
          uint64_t v125 = type metadata accessor for AttributedString();
          goto LABEL_86;
        case 3u:
          uint64_t v125 = sub_10017DF08(&qword_100E73808);
          goto LABEL_86;
        case 4u:
          long long v350 = a3;
          if (*(void *)(v120 + 8))
          {
            *(void *)uint64_t v119 = *(void *)v120;
            *(void *)(v119 + 8) = *(void *)(v120 + 8);
            *(void *)(v119 + 16) = *(void *)(v120 + 16);
            *(void *)(v119 + 24) = *(void *)(v120 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v139 = *(_OWORD *)(v120 + 16);
            *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
            *(_OWORD *)(v119 + 16) = v139;
          }
          uint64_t v140 = type metadata accessor for DetailComponentContainerViewModel();
          uint64_t v141 = *(int *)(v140 + 20);
          uint64_t v142 = (void *)(v119 + v141);
          uint64_t v143 = (void *)(v120 + v141);
          uint64_t v144 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v343 = v4;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v323 = v140;
            *uint64_t v142 = *v143;
            v142[1] = v143[1];
            uint64_t v337 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v145 = v337[5];
            id v324 = (char *)v142 + v145;
            uint64_t v146 = (char *)v143 + v145;
            uint64_t v147 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v146, 1, v147))
            {
              uint64_t v148 = sub_10017DF08(&qword_100E749B0);
              memcpy(v324, v146, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v324, v146, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v324, 0, 1, v147);
            }
            uint64_t v171 = v337[6];
            uint64_t v172 = (void *)((char *)v142 + v171);
            uint64_t v173 = (void *)((char *)v143 + v171);
            void *v172 = *v173;
            v172[1] = v173[1];
            uint64_t v174 = v337[7];
            uint64_t v325 = (char *)v142 + v174;
            uint64_t v175 = (char *)v143 + v174;
            uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
            swift_bridgeObjectRetain();
            v176(v325, v175, v147);
            uint64_t v177 = v337[8];
            uint64_t v178 = (char *)v142 + v177;
            uint64_t v179 = (char *)v143 + v177;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143 + v177, 1, v147))
            {
              uint64_t v180 = sub_10017DF08(&qword_100E749B0);
              memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
            }
            else
            {
              v176(v178, v179, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v147);
            }
            uint64_t v140 = v323;
            *((unsigned char *)v142 + v337[9]) = *((unsigned char *)v143 + v337[9]);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
          }
          uint64_t v181 = *(int *)(v140 + 24);
          uint64_t v182 = v119 + v181;
          v120 += v181;
          uint64_t v183 = type metadata accessor for DetailComponentAction();
          a3 = v350;
          if (_s7Weather24LocationCompositionStateOwet_0(v120, 1, v183))
          {
            size_t v169 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
            uint64_t v170 = (void *)v182;
            goto LABEL_119;
          }
          uint64_t v184 = type metadata accessor for URL();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 16))(v182, v120, v184);
          uint64_t v185 = sub_10017DF08(&qword_100E66478);
          *(unsigned char *)(v182 + *(int *)(v185 + 48)) = *(unsigned char *)(v120 + *(int *)(v185 + 48));
          _s7Weather24LocationCompositionStateOwst_0(v182, 0, 1, v183);
          goto LABEL_121;
        case 5u:
          uint64_t v343 = v4;
          uint64_t v351 = a3;
          uint64_t v334 = v121;
          if (*(void *)(v120 + 24))
          {
            uint64_t v126 = *(void *)v120;
            uint64_t v127 = *(void *)(v120 + 8);
            char v128 = *(unsigned char *)(v120 + 16);
            sub_100190CC4(*(void *)v120, v127, v128);
            *(void *)uint64_t v119 = v126;
            *(void *)(v119 + 8) = v127;
            *(unsigned char *)(v119 + 16) = v128;
            *(void *)(v119 + 24) = *(void *)(v120 + 24);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v149 = *(_OWORD *)(v120 + 16);
            *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
            *(_OWORD *)(v119 + 16) = v149;
          }
          uint64_t v150 = *(void *)(v120 + 32);
          uint64_t v151 = *(void *)(v120 + 40);
          uint64_t v152 = *(void *)(v120 + 48);
          uint64_t v153 = *(void *)(v120 + 56);
          uint64_t v155 = *(void *)(v120 + 64);
          uint64_t v154 = *(void *)(v120 + 72);
          uint64_t v156 = *(void *)(v120 + 80);
          char v338 = *(unsigned char *)(v120 + 89);
          uint64_t v157 = *(unsigned __int8 *)(v120 + 88);
          sub_10033A9E8(v150, v151, v152, v153, v155, v154, v156, v157, v338);
          *(void *)(v119 + 32) = v150;
          *(void *)(v119 + 40) = v151;
          *(void *)(v119 + 48) = v152;
          *(void *)(v119 + 56) = v153;
          *(void *)(v119 + 64) = v155;
          *(void *)(v119 + 72) = v154;
          *(void *)(v119 + 80) = v156;
          *(unsigned char *)(v119 + 88) = v157;
          *(unsigned char *)(v119 + 89) = v338;
          goto LABEL_174;
        case 6u:
          uint64_t v125 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_86:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16))(v119, v120, v125);
          goto LABEL_175;
        case 7u:
          uint64_t v343 = v4;
          uint64_t v129 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v130 = swift_getEnumCaseMultiPayload();
          if (v130 != 1)
          {
            if (v130)
            {
              size_t v169 = *(void *)(*(void *)(v129 - 8) + 64);
              uint64_t v170 = (void *)v119;
LABEL_119:
              memcpy(v170, (const void *)v120, v169);
            }
            else
            {
              *(void *)uint64_t v119 = *(void *)v120;
              *(void *)(v119 + 8) = *(void *)(v120 + 8);
              *(void *)(v119 + 16) = *(void *)(v120 + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
LABEL_121:
            uint64_t v4 = v343;
LABEL_175:
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0(v119, 0, 1, v121);
            goto LABEL_176;
          }
          uint64_t v334 = v121;
          uint64_t v351 = a3;
          *(void *)uint64_t v119 = *(void *)v120;
          *(void *)(v119 + 8) = *(void *)(v120 + 8);
          uint64_t v158 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v159 = *(int *)(v158 + 20);
          uint64_t v160 = v119 + v159;
          uint64_t v161 = v120 + v159;
          uint64_t v162 = type metadata accessor for Location();
          uint64_t v163 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 16);
          swift_bridgeObjectRetain();
          v163(v160, v161, v162);
          uint64_t v331 = (int *)v158;
          uint64_t v164 = *(int *)(v158 + 24);
          os_log_type_t v165 = (void *)(v119 + v164);
          uint64_t v166 = (void *)(v120 + v164);
          uint64_t v167 = (int *)type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, (uint64_t)v167))
          {
            uint64_t v168 = sub_10017DF08(&qword_100E63850);
            memcpy(v165, v166, *(void *)(*(void *)(v168 - 8) + 64));
            goto LABEL_173;
          }
          void *v165 = *v166;
          v165[1] = v166[1];
          uint64_t v218 = v167[5];
          uint64_t v219 = (char *)v165 + v218;
          uint64_t v220 = (char *)v166 + v218;
          uint64_t v221 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v220, 1, v221))
          {
            uint64_t v222 = sub_10017DF08(&qword_100E63730);
            memcpy(v219, v220, *(void *)(*(void *)(v222 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16))(v219, v220, v221);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v219, 0, 1, v221);
          }
          uint64_t v246 = v167[6];
          uint64_t v247 = (char *)v165 + v246;
          uint64_t v248 = (char *)v166 + v246;
          uint64_t v249 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 16))(v247, v248, v249);
          uint64_t v250 = v167[7];
          uint64_t v251 = (char *)v165 + v250;
          uint64_t v252 = (char *)v166 + v250;
          uint64_t v253 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v252, 1, v253))
          {
            uint64_t v254 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
          }
          else
          {
            uint64_t v255 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 16))(v251, v252, v255);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v251, 0, 1, v253);
          }
          uint64_t v256 = v167[8];
          char v257 = (void *)((char *)v165 + v256);
          uint64_t v258 = (void *)((char *)v166 + v256);
          uint64_t v259 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v260 = swift_getEnumCaseMultiPayload();
          if (v260 == 1)
          {
            uint64_t v261 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v261 - 8) + 16))(v257, v258, v261);
          }
          else
          {
            if (v260)
            {
              memcpy(v257, v258, *(void *)(*(void *)(v259 - 8) + 64));
              goto LABEL_156;
            }
            *char v257 = *v258;
            v257[1] = v258[1];
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
LABEL_156:
          uint64_t v262 = v167[9];
          uint64_t v263 = (char *)v165 + v262;
          uint64_t v264 = (char *)v166 + v262;
          uint64_t v265 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v265))
          {
            uint64_t v266 = sub_10017DF08(&qword_100E63740);
            memcpy(v263, v264, *(void *)(*(void *)(v266 - 8) + 64));
          }
          else
          {
            uint64_t v267 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v267))
            {
              uint64_t v268 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v263, v264, *(void *)(*(void *)(v268 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v263, v264, v267);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v267);
            }
            uint64_t v327 = (void *)v265;
            uint64_t v280 = *(int *)(v265 + 20);
            uint64_t v281 = &v263[v280];
            uint64_t v282 = &v264[v280];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v282, 1, v267))
            {
              uint64_t v283 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v281, v282, *(void *)(*(void *)(v283 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v281, v282, v267);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v281, 0, 1, v267);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, (uint64_t)v327);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, (uint64_t)v167);
LABEL_173:
          uint64_t v290 = v331[7];
          uint64_t v291 = (void *)(v119 + v290);
          uint64_t v292 = (void *)(v120 + v290);
          *uint64_t v291 = *v292;
          v291[1] = v292[1];
          uint64_t v293 = v331[8];
          uint64_t v294 = v119 + v293;
          uint64_t v295 = v120 + v293;
          uint64_t v296 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v297 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v296 - 8) + 16);
          swift_bridgeObjectRetain();
          v297(v294, v295, v296);
          *(unsigned char *)(v119 + v331[9]) = *(unsigned char *)(v120 + v331[9]);
          swift_storeEnumTagMultiPayload();
LABEL_174:
          uint64_t v4 = v343;
          a3 = v351;
          uint64_t v121 = v334;
          goto LABEL_175;
        default:
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v119, v120, v15);
          goto LABEL_175;
      }
    }
LABEL_74:
    uint64_t v124 = sub_10017DF08(&qword_100E73818);
    memcpy((void *)v119, (const void *)v120, *(void *)(*(void *)(v124 - 8) + 64));
    goto LABEL_176;
  }
  if (v123)
  {
    sub_100B20AE8(v119, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
    goto LABEL_74;
  }
  if (a1 == v4) {
    goto LABEL_176;
  }
  sub_100B20AE8(v119, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)uint64_t v119 = *(void *)v120;
      *(void *)(v119 + 8) = *(void *)(v120 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_143;
    case 2u:
      uint64_t v131 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 16))(v119, v120, v131);
      goto LABEL_143;
    case 3u:
      uint64_t v132 = sub_10017DF08(&qword_100E73808);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 16))(v119, v120, v132);
      goto LABEL_143;
    case 4u:
      uint64_t v352 = a3;
      if (*(void *)(v120 + 8))
      {
        *(void *)uint64_t v119 = *(void *)v120;
        *(void *)(v119 + 8) = *(void *)(v120 + 8);
        *(void *)(v119 + 16) = *(void *)(v120 + 16);
        *(void *)(v119 + 24) = *(void *)(v120 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v186 = *(_OWORD *)(v120 + 16);
        *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
        *(_OWORD *)(v119 + 16) = v186;
      }
      uint64_t v187 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v188 = *(int *)(v187 + 20);
      uint64_t v189 = (void *)(v119 + v188);
      uint64_t v190 = (void *)(v120 + v188);
      uint64_t v191 = type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t v346 = v4;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v332 = v187;
        *uint64_t v189 = *v190;
        v189[1] = v190[1];
        uint64_t v339 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v192 = v339[5];
        uint64_t v193 = (char *)v189 + v192;
        uint64_t v194 = (char *)v190 + v192;
        uint64_t v195 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v195))
        {
          uint64_t v196 = sub_10017DF08(&qword_100E749B0);
          memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v193, v194, v195);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v195);
        }
        uint64_t v223 = v339[6];
        uint64_t v224 = (void *)((char *)v189 + v223);
        uint64_t v225 = (void *)((char *)v190 + v223);
        *uint64_t v224 = *v225;
        v224[1] = v225[1];
        uint64_t v226 = v339[7];
        uint64_t v326 = (char *)v189 + v226;
        uint64_t v227 = (char *)v190 + v226;
        long long v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16);
        swift_bridgeObjectRetain();
        v228(v326, v227, v195);
        uint64_t v229 = v339[8];
        uint64_t v230 = (char *)v189 + v229;
        uint64_t v231 = (char *)v190 + v229;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v190 + v229, 1, v195))
        {
          uint64_t v232 = sub_10017DF08(&qword_100E749B0);
          memcpy(v230, v231, *(void *)(*(void *)(v232 - 8) + 64));
        }
        else
        {
          v228(v230, v231, v195);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v230, 0, 1, v195);
        }
        uint64_t v187 = v332;
        *((unsigned char *)v189 + v339[9]) = *((unsigned char *)v190 + v339[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v189, v190, *(void *)(*(void *)(v191 - 8) + 64));
      }
      uint64_t v233 = *(int *)(v187 + 24);
      uint64_t v234 = (void *)(v119 + v233);
      uint64_t v235 = (const void *)(v120 + v233);
      uint64_t v236 = type metadata accessor for DetailComponentAction();
      a3 = v352;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v235, 1, v236))
      {
        uint64_t v237 = sub_10017DF08(&qword_100E73810);
        memcpy(v234, v235, *(void *)(*(void *)(v237 - 8) + 64));
      }
      else
      {
        uint64_t v238 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v238 - 8) + 16))(v234, v235, v238);
        uint64_t v239 = sub_10017DF08(&qword_100E66478);
        *((unsigned char *)v234 + *(int *)(v239 + 48)) = *((unsigned char *)v235 + *(int *)(v239 + 48));
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v234, 0, 1, v236);
      }
      uint64_t v4 = v346;
      goto LABEL_143;
    case 5u:
      uint64_t v344 = v4;
      uint64_t v353 = a3;
      if (*(void *)(v120 + 24))
      {
        uint64_t v133 = *(void *)v120;
        uint64_t v134 = *(void *)(v120 + 8);
        char v135 = *(unsigned char *)(v120 + 16);
        sub_100190CC4(*(void *)v120, v134, v135);
        *(void *)uint64_t v119 = v133;
        *(void *)(v119 + 8) = v134;
        *(unsigned char *)(v119 + 16) = v135;
        *(void *)(v119 + 24) = *(void *)(v120 + 24);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v197 = *(_OWORD *)(v120 + 16);
        *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
        *(_OWORD *)(v119 + 16) = v197;
      }
      uint64_t v198 = *(void *)(v120 + 32);
      uint64_t v199 = *(void *)(v120 + 40);
      uint64_t v200 = *(void *)(v120 + 48);
      uint64_t v201 = *(void *)(v120 + 56);
      uint64_t v202 = *(void *)(v120 + 64);
      uint64_t v203 = *(void *)(v120 + 72);
      uint64_t v204 = *(void *)(v120 + 80);
      uint64_t v340 = v204;
      char v205 = *(unsigned char *)(v120 + 89);
      uint64_t v206 = *(unsigned __int8 *)(v120 + 88);
      sub_10033A9E8(v198, v199, v200, v201, v202, v203, v204, v206, v205);
      *(void *)(v119 + 32) = v198;
      *(void *)(v119 + 40) = v199;
      *(void *)(v119 + 48) = v200;
      *(void *)(v119 + 56) = v201;
      *(void *)(v119 + 64) = v202;
      *(void *)(v119 + 72) = v203;
      *(void *)(v119 + 80) = v340;
      *(unsigned char *)(v119 + 88) = v206;
      *(unsigned char *)(v119 + 89) = v205;
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v344;
      a3 = v353;
      goto LABEL_176;
    case 6u:
      uint64_t v136 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 16))(v119, v120, v136);
      goto LABEL_143;
    case 7u:
      uint64_t v345 = v4;
      uint64_t v137 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      int v138 = swift_getEnumCaseMultiPayload();
      if (v138 == 1)
      {
        uint64_t v354 = a3;
        *(void *)uint64_t v119 = *(void *)v120;
        *(void *)(v119 + 8) = *(void *)(v120 + 8);
        uint64_t v207 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v208 = *(int *)(v207 + 20);
        uint64_t v209 = v119 + v208;
        uint64_t v210 = v120 + v208;
        uint64_t v211 = type metadata accessor for Location();
        uint64_t v212 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v211 - 8) + 16);
        swift_bridgeObjectRetain();
        v212(v209, v210, v211);
        uint64_t v333 = (int *)v207;
        uint64_t v213 = *(int *)(v207 + 24);
        uint64_t v214 = (void *)(v119 + v213);
        int v215 = (void *)(v120 + v213);
        uint64_t v216 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v215, 1, v216))
        {
          uint64_t v217 = sub_10017DF08(&qword_100E63850);
          memcpy(v214, v215, *(void *)(*(void *)(v217 - 8) + 64));
LABEL_190:
          uint64_t v311 = v333[7];
          uint64_t v312 = (void *)(v119 + v311);
          uint64_t v313 = (void *)(v120 + v311);
          *uint64_t v312 = *v313;
          v312[1] = v313[1];
          uint64_t v314 = v333[8];
          uint64_t v315 = v119 + v314;
          uint64_t v316 = v120 + v314;
          uint64_t v317 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v318 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v317 - 8) + 16);
          swift_bridgeObjectRetain();
          v318(v315, v316, v317);
          *(unsigned char *)(v119 + v333[9]) = *(unsigned char *)(v120 + v333[9]);
          swift_storeEnumTagMultiPayload();
          a3 = v354;
          goto LABEL_191;
        }
        void *v214 = *v215;
        v214[1] = v215[1];
        uint64_t v240 = (int *)v216;
        uint64_t v241 = *(int *)(v216 + 20);
        uint64_t v242 = (char *)v214 + v241;
        uint64_t v243 = (char *)v215 + v241;
        uint64_t v244 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244))
        {
          uint64_t v245 = sub_10017DF08(&qword_100E63730);
          memcpy(v242, v243, *(void *)(*(void *)(v245 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 16))(v242, v243, v244);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v244);
        }
        uint64_t v269 = *(int *)(v216 + 24);
        int v270 = (char *)v214 + v269;
        uint64_t v271 = (char *)v215 + v269;
        uint64_t v272 = type metadata accessor for WeatherDataModel();
        uint64_t v273 = v270;
        uint64_t v274 = (uint64_t)v240;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 16))(v273, v271, v272);
        uint64_t v275 = v240[7];
        uint64_t v276 = (char *)v214 + v275;
        uint64_t v277 = (char *)v215 + v275;
        uint64_t v278 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, v278))
        {
          uint64_t v279 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
        }
        else
        {
          uint64_t v284 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16))(v276, v277, v284);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, v278);
        }
        uint64_t v285 = v240[8];
        uint64_t v286 = (void *)((char *)v214 + v285);
        uint64_t v287 = (void *)((char *)v215 + v285);
        uint64_t v288 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v289 = swift_getEnumCaseMultiPayload();
        if (v289 == 1)
        {
          uint64_t v299 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v299 - 8) + 16))(v286, v287, v299);
        }
        else
        {
          if (v289)
          {
            memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
            goto LABEL_180;
          }
          *uint64_t v286 = *v287;
          v286[1] = v287[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_180:
        uint64_t v300 = v240[9];
        uint64_t v301 = (char *)v214 + v300;
        uint64_t v302 = (char *)v215 + v300;
        uint64_t v303 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v302, 1, v303))
        {
          uint64_t v304 = sub_10017DF08(&qword_100E63740);
          memcpy(v301, v302, *(void *)(*(void *)(v304 - 8) + 64));
        }
        else
        {
          uint64_t v305 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v302, 1, v305))
          {
            uint64_t v306 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v301, v302, *(void *)(*(void *)(v306 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16))(v301, v302, v305);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v301, 0, 1, v305);
          }
          uint64_t v307 = *(int *)(v303 + 20);
          uint64_t v308 = &v301[v307];
          uint64_t v309 = &v302[v307];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v309, 1, v305))
          {
            uint64_t v310 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v308, v309, *(void *)(*(void *)(v310 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16))(v308, v309, v305);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v308, 0, 1, v305);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v301, 0, 1, v303);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v214, 0, 1, v274);
        goto LABEL_190;
      }
      if (v138)
      {
        memcpy((void *)v119, (const void *)v120, *(void *)(*(void *)(v137 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v119 = *(void *)v120;
        *(void *)(v119 + 8) = *(void *)(v120 + 8);
        *(void *)(v119 + 16) = *(void *)(v120 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
LABEL_191:
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = v345;
LABEL_176:
      *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(v4 + a3[9]);
      *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(v4 + a3[10]);
      return a1;
    default:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v119, v120, v15);
LABEL_143:
      swift_storeEnumTagMultiPayload();
      goto LABEL_176;
  }
}

uint64_t sub_100B1B460(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  unsigned __int8 v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for WeatherDescription();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E63758);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = v3[7];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v9 - 8) + 32))(v12, v13, v9);
      goto LABEL_47;
    case 2u:
      uint64_t v15 = type metadata accessor for AttributedString();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      goto LABEL_47;
    case 3u:
      uint64_t v16 = sub_10017DF08(&qword_100E73808);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v16 - 8) + 32))(v12, v13, v16);
      goto LABEL_47;
    case 4u:
      uint64_t v183 = v14;
      long long v17 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v17;
      uint64_t v18 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v19 = *(int *)(v18 + 20);
      uint64_t v20 = (_OWORD *)((char *)v12 + v19);
      uint64_t v21 = (_OWORD *)((char *)v13 + v19);
      uint64_t v22 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v177 = v3;
        *uint64_t v20 = *v21;
        uint64_t v179 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v23 = v179[5];
        __dst = (char *)v20 + v23;
        uint64_t v24 = (char *)v21 + v23;
        uint64_t v25 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v24, *(void *)(*(void *)(v26 - 8) + 64));
          uint64_t v27 = *(void (***)(void *, const void *, uint64_t))(v25 - 8);
        }
        else
        {
          uint64_t v162 = *(void (***)(void *, const void *, uint64_t))(v25 - 8);
          v162[4](__dst, v24, v25);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v25);
          uint64_t v27 = v162;
        }
        *(_OWORD *)((char *)v20 + v179[6]) = *(_OWORD *)((char *)v21 + v179[6]);
        uint64_t v163 = v27[4];
        v163((char *)v20 + v179[7], (char *)v21 + v179[7], v25);
        uint64_t v40 = v179[8];
        __dsta = (char *)v20 + v40;
        uint64_t v41 = (char *)v21 + v40;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21 + v40, 1, v25))
        {
          uint64_t v42 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dsta, v41, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          v163(__dsta, v41, v25);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v25);
        }
        uint64_t v3 = v177;
        *((unsigned char *)v20 + v179[9]) = *((unsigned char *)v21 + v179[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      uint64_t v14 = v183;
      uint64_t v47 = *(int *)(v18 + 24);
      uint64_t v48 = (char *)v12 + v47;
      uint64_t v49 = (char *)v13 + v47;
      uint64_t v50 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
      {
        uint64_t v51 = sub_10017DF08(&qword_100E73810);
        memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        uint64_t v52 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v48, v49, v52);
        uint64_t v53 = sub_10017DF08(&qword_100E66478);
        v48[*(int *)(v53 + 48)] = v49[*(int *)(v53 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
      }
      goto LABEL_47;
    case 6u:
      uint64_t v28 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(v12, v13, v28);
      goto LABEL_47;
    case 7u:
      uint64_t v29 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v184 = v14;
        *uint64_t v12 = *v13;
        uint64_t v30 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v31 = *(int *)(v30 + 20);
        uint64_t v32 = (char *)v12 + v31;
        uint64_t v33 = (char *)v13 + v31;
        uint64_t v34 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        uint64_t v168 = (int *)v30;
        uint64_t v35 = *(int *)(v30 + 24);
        uint64_t v36 = (_OWORD *)((char *)v12 + v35);
        uint64_t v37 = (_OWORD *)((char *)v13 + v35);
        uint64_t v38 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
        {
          uint64_t v39 = sub_10017DF08(&qword_100E63850);
          memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
          uint64_t v14 = v184;
        }
        else
        {
          _OWORD *v36 = *v37;
          uint64_t v180 = (int *)v38;
          uint64_t v43 = *(int *)(v38 + 20);
          __dstb = (char *)v36;
          uint64_t v164 = (char *)v36 + v43;
          uint64_t v44 = (char *)v37 + v43;
          uint64_t v45 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = sub_10017DF08(&qword_100E63730);
            memcpy(v164, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v164, v44, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v164, 0, 1, v45);
          }
          uint64_t v54 = v180[6];
          uint64_t v55 = &__dstb[v54];
          uint64_t v56 = (char *)v37 + v54;
          uint64_t v57 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
          uint64_t v58 = v180[7];
          os_log_type_t v165 = &__dstb[v58];
          uint64_t v59 = (char *)v37 + v58;
          uint64_t v60 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
          {
            uint64_t v61 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v165, v59, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            uint64_t v62 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v165, v59, v62);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, v60);
          }
          uint64_t v63 = v180[8];
          uint64_t v166 = &__dstb[v63];
          size_t v64 = (char *)v37 + v63;
          uint64_t v65 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v66 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v166, v64, v66);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v166, v64, *(void *)(*(void *)(v65 - 8) + 64));
          }
          uint64_t v67 = v180[9];
          uint64_t v68 = &__dstb[v67];
          uint64_t v69 = (char *)v37 + v67;
          uint64_t v70 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
          {
            uint64_t v71 = sub_10017DF08(&qword_100E63740);
            memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
            uint64_t v14 = v184;
          }
          else
          {
            uint64_t v160 = v70;
            uint64_t v167 = v68;
            uint64_t v72 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v72))
            {
              uint64_t v73 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v68, v69, *(void *)(*(void *)(v73 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v68, v69, v72);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v72);
            }
            uint64_t v74 = *(int *)(v160 + 20);
            uint64_t v75 = &v68[v74];
            uint64_t v76 = &v69[v74];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v72))
            {
              uint64_t v77 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v75, v76, v72);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v72);
            }
            uint64_t v14 = v184;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v160);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, (uint64_t)v180);
        }
        *(_OWORD *)((char *)v12 + v168[7]) = *(_OWORD *)((char *)v13 + v168[7]);
        uint64_t v78 = v168[8];
        uint64_t v79 = (char *)v12 + v78;
        uint64_t v80 = (char *)v13 + v78;
        uint64_t v81 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
        *((unsigned char *)v12 + v168[9]) = *((unsigned char *)v13 + v168[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v12, v13, *(void *)(*(void *)(v29 - 8) + 64));
      }
LABEL_47:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      break;
  }
  uint64_t v82 = v3[8];
  uint64_t v83 = (_OWORD *)(a1 + v82);
  uint64_t v84 = (_OWORD *)(a2 + v82);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v82, 1, v14))
  {
    uint64_t v85 = sub_10017DF08(&qword_100E73818);
    memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v9 - 8) + 32))(v83, v84, v9);
        goto LABEL_93;
      case 2u:
        uint64_t v86 = type metadata accessor for AttributedString();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v86 - 8) + 32))(v83, v84, v86);
        goto LABEL_93;
      case 3u:
        uint64_t v87 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v87 - 8) + 32))(v83, v84, v87);
        goto LABEL_93;
      case 4u:
        long long v88 = v84[1];
        *uint64_t v83 = *v84;
        v83[1] = v88;
        uint64_t v89 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v90 = *(int *)(v89 + 20);
        uint64_t v91 = (char *)v83 + v90;
        uint64_t v92 = (char *)v84 + v90;
        uint64_t v93 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v169 = v89;
          *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
          uint64_t v181 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v94 = v181[5];
          __dstc = &v91[v94];
          uint64_t v95 = &v92[v94];
          uint64_t v96 = type metadata accessor for URL();
          uint64_t v178 = v3;
          uint64_t v185 = v14;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
          {
            uint64_t v97 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dstc, v95, *(void *)(*(void *)(v97 - 8) + 64));
            uint64_t v98 = *(void *)(v96 - 8);
          }
          else
          {
            uint64_t v98 = *(void *)(v96 - 8);
            (*(void (**)(char *, char *, uint64_t))(v98 + 32))(__dstc, v95, v96);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v96);
          }
          *(_OWORD *)&v91[v181[6]] = *(_OWORD *)&v92[v181[6]];
          uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
          v112(&v91[v181[7]], &v92[v181[7]], v96);
          uint64_t v113 = v181[8];
          __dstd = &v91[v113];
          uint64_t v114 = &v92[v113];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v92[v113], 1, v96))
          {
            uint64_t v115 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dstd, v114, *(void *)(*(void *)(v115 - 8) + 64));
          }
          else
          {
            v112(__dstd, v114, v96);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstd, 0, 1, v96);
          }
          uint64_t v3 = v178;
          uint64_t v14 = v185;
          uint64_t v89 = v169;
          v91[v181[9]] = v92[v181[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
        }
        uint64_t v121 = *(int *)(v89 + 24);
        int v122 = (char *)v83 + v121;
        int v123 = (char *)v84 + v121;
        uint64_t v124 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, v124))
        {
          uint64_t v125 = sub_10017DF08(&qword_100E73810);
          memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
        }
        else
        {
          uint64_t v126 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v122, v123, v126);
          uint64_t v127 = sub_10017DF08(&qword_100E66478);
          v122[*(int *)(v127 + 48)] = v123[*(int *)(v127 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v124);
        }
        goto LABEL_93;
      case 6u:
        uint64_t v99 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v99 - 8) + 32))(v83, v84, v99);
        goto LABEL_93;
      case 7u:
        uint64_t v100 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v83 = *v84;
          uint64_t v101 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v102 = *(int *)(v101 + 20);
          uint64_t v103 = (char *)v83 + v102;
          uint64_t v104 = (char *)v84 + v102;
          uint64_t v105 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
          uint64_t v182 = (int *)v101;
          uint64_t v106 = *(int *)(v101 + 24);
          uint64_t v107 = (_OWORD *)((char *)v83 + v106);
          uint64_t v108 = (_OWORD *)((char *)v84 + v106);
          uint64_t v109 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
          {
            uint64_t v110 = sub_10017DF08(&qword_100E63850);
            memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
            uint64_t v111 = v182;
          }
          else
          {
            uint64_t v186 = v14;
            *uint64_t v107 = *v108;
            uint64_t v170 = (int *)v109;
            __dste = (char *)v107;
            uint64_t v116 = *(int *)(v109 + 20);
            uint64_t v117 = (char *)v107 + v116;
            uint64_t v118 = (char *)v108 + v116;
            uint64_t v119 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
            {
              uint64_t v120 = sub_10017DF08(&qword_100E63730);
              memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
            }
            uint64_t v128 = v170[6];
            uint64_t v129 = &__dste[v128];
            int v130 = (char *)v108 + v128;
            uint64_t v131 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
            uint64_t v132 = v170[7];
            uint64_t v133 = &__dste[v132];
            uint64_t v134 = (char *)v108 + v132;
            uint64_t v135 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, v135))
            {
              uint64_t v136 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v133, v134, *(void *)(*(void *)(v136 - 8) + 64));
            }
            else
            {
              uint64_t v137 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v133, v134, v137);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v133, 0, 1, v135);
            }
            uint64_t v138 = v170[8];
            long long v139 = &__dste[v138];
            uint64_t v140 = (char *)v108 + v138;
            uint64_t v141 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v142 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v139, v140, v142);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
            }
            uint64_t v143 = v170[9];
            uint64_t v144 = &__dste[v143];
            uint64_t v145 = (char *)v108 + v143;
            uint64_t v146 = type metadata accessor for WeatherDataOverrides();
            uint64_t v14 = v186;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
            {
              uint64_t v147 = sub_10017DF08(&qword_100E63740);
              memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
              uint64_t v111 = v182;
            }
            else
            {
              uint64_t v161 = v146;
              uint64_t v148 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v148))
              {
                uint64_t v149 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v144, v145, *(void *)(*(void *)(v149 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v144, v145, v148);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v148);
              }
              uint64_t v150 = *(int *)(v161 + 20);
              uint64_t v151 = &v144[v150];
              uint64_t v152 = &v145[v150];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v148))
              {
                uint64_t v153 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 32))(v151, v152, v148);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v148);
              }
              uint64_t v111 = v182;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v161);
              uint64_t v14 = v186;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dste, 0, 1, (uint64_t)v170);
          }
          *(_OWORD *)((char *)v83 + v111[7]) = *(_OWORD *)((char *)v84 + v111[7]);
          uint64_t v154 = v111[8];
          uint64_t v155 = (char *)v83 + v154;
          uint64_t v156 = (char *)v84 + v154;
          uint64_t v157 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
          *((unsigned char *)v83 + v111[9]) = *((unsigned char *)v84 + v111[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v83, v84, *(void *)(*(void *)(v100 - 8) + 64));
        }
LABEL_93:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v83, v84, *(void *)(*(void *)(v14 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v14);
  }
  uint64_t v158 = v3[10];
  *(unsigned char *)(a1 + v3[9]) = *(unsigned char *)(a2 + v3[9]);
  *(unsigned char *)(a1 + v158) = *(unsigned char *)(a2 + v158);
  return a1;
}

uint64_t sub_100B1CABC(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_10014D144(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for WeatherDescription();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E63758);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v12, v13, v14);
LABEL_7:
  if (a1 != a2)
  {
    uint64_t v19 = a3[7];
    uint64_t v20 = (_OWORD *)(a1 + v19);
    uint64_t v21 = (_OWORD *)(a2 + v19);
    sub_100B20AE8(a1 + v19, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
    uint64_t v22 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 32))(v20, v21, v14);
        goto LABEL_52;
      case 2u:
        uint64_t v23 = type metadata accessor for AttributedString();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
        goto LABEL_52;
      case 3u:
        uint64_t v24 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
        goto LABEL_52;
      case 4u:
        uint64_t v288 = a3;
        long long v25 = v21[1];
        *uint64_t v20 = *v21;
        v20[1] = v25;
        uint64_t v26 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v27 = *(int *)(v26 + 20);
        uint64_t v28 = (_OWORD *)((char *)v20 + v27);
        uint64_t v29 = (_OWORD *)((char *)v21 + v27);
        uint64_t v30 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v271 = v26;
          *uint64_t v28 = *v29;
          uint64_t v275 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v31 = v275[5];
          uint64_t v32 = (char *)v28 + v31;
          uint64_t v33 = (char *)v29 + v31;
          uint64_t v282 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v282))
          {
            uint64_t v34 = sub_10017DF08(&qword_100E749B0);
            memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
            uint64_t v35 = *(void (***)(void *, const void *, uint64_t))(v282 - 8);
          }
          else
          {
            __dste = *(void (***)(void *, const void *, uint64_t))(v282 - 8);
            __dste[4](v32, v33, v282);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v282);
            uint64_t v35 = __dste;
          }
          *(_OWORD *)((char *)v28 + v275[6]) = *(_OWORD *)((char *)v29 + v275[6]);
          __src = v35[4];
          __src((char *)v28 + v275[7], (char *)v29 + v275[7], v282);
          uint64_t v48 = v275[8];
          __dst = (char *)v28 + v48;
          uint64_t v49 = (char *)v29 + v48;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29 + v48, 1, v282))
          {
            uint64_t v50 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v49, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            __src(__dst, v49, v282);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v282);
          }
          *((unsigned char *)v28 + v275[9]) = *((unsigned char *)v29 + v275[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v26 = v271;
        }
        else
        {
          memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
        }
        uint64_t v55 = *(int *)(v26 + 24);
        uint64_t v56 = (char *)v20 + v55;
        uint64_t v57 = (char *)v21 + v55;
        uint64_t v58 = type metadata accessor for DetailComponentAction();
        a3 = v288;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = sub_10017DF08(&qword_100E73810);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          uint64_t v60 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v56, v57, v60);
          uint64_t v61 = sub_10017DF08(&qword_100E66478);
          v56[*(int *)(v61 + 48)] = v57[*(int *)(v61 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
        }
        goto LABEL_52;
      case 6u:
        uint64_t v36 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v36 - 8) + 32))(v20, v21, v36);
        goto LABEL_52;
      case 7u:
        uint64_t v37 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          int v289 = a3;
          *uint64_t v20 = *v21;
          uint64_t v38 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v39 = *(int *)(v38 + 20);
          uint64_t v40 = (char *)v20 + v39;
          uint64_t v41 = (char *)v21 + v39;
          uint64_t v42 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
          uint64_t v283 = (int *)v38;
          uint64_t v43 = *(int *)(v38 + 24);
          uint64_t v44 = (_OWORD *)((char *)v20 + v43);
          uint64_t v45 = (_OWORD *)((char *)v21 + v43);
          uint64_t v46 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
          {
            uint64_t v47 = sub_10017DF08(&qword_100E63850);
            memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
            a3 = v289;
          }
          else
          {
            *uint64_t v44 = *v45;
            uint64_t v272 = (int *)v46;
            uint64_t v51 = *(int *)(v46 + 20);
            __srca = (char *)v44 + v51;
            uint64_t v52 = (char *)v45 + v51;
            uint64_t v53 = type metadata accessor for Locale();
            __dsta = (char *)v45;
            uint64_t v266 = v44;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
            {
              uint64_t v54 = sub_10017DF08(&qword_100E63730);
              memcpy(__srca, v52, *(void *)(*(void *)(v54 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(__srca, v52, v53);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srca, 0, 1, v53);
            }
            uint64_t v62 = v272[6];
            __srcf = (char *)v44 + v62;
            uint64_t v63 = (char *)v45 + v62;
            uint64_t v64 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(__srcf, v63, v64);
            uint64_t v65 = v272[7];
            uint64_t v66 = (char *)v44 + v65;
            uint64_t v67 = &__dsta[v65];
            uint64_t v68 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
            {
              uint64_t v69 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
            }
            else
            {
              uint64_t v70 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v66, v67, v70);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
            }
            uint64_t v71 = v272[8];
            __srcb = (char *)v44 + v71;
            uint64_t v72 = &__dsta[v71];
            uint64_t v73 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v74 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(__srcb, v72, v74);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(__srcb, v72, *(void *)(*(void *)(v73 - 8) + 64));
            }
            uint64_t v75 = (uint64_t)v272;
            uint64_t v76 = v272[9];
            uint64_t v77 = (char *)v44 + v76;
            uint64_t v78 = &__dsta[v76];
            uint64_t v79 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
            {
              uint64_t v80 = sub_10017DF08(&qword_100E63740);
              memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
              a3 = v289;
              uint64_t v81 = (uint64_t)v266;
            }
            else
            {
              __dstb = (int *)v79;
              uint64_t v82 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v82))
              {
                uint64_t v83 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v77, v78, *(void *)(*(void *)(v83 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v77, v78, v82);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v82);
              }
              uint64_t v81 = (uint64_t)v266;
              uint64_t v84 = __dstb[5];
              uint64_t v250 = &v77[v84];
              __srcc = v77;
              uint64_t v85 = &v78[v84];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v78[v84], 1, v82))
              {
                uint64_t v86 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v250, v85, *(void *)(*(void *)(v86 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v250, v85, v82);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v250, 0, 1, v82);
              }
              a3 = v289;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srcc, 0, 1, (uint64_t)__dstb);
              uint64_t v75 = (uint64_t)v272;
            }
            _s7Weather24LocationCompositionStateOwst_0(v81, 0, 1, v75);
          }
          *(_OWORD *)((char *)v20 + v283[7]) = *(_OWORD *)((char *)v21 + v283[7]);
          uint64_t v87 = v283[8];
          long long v88 = (char *)v20 + v87;
          uint64_t v89 = (char *)v21 + v87;
          uint64_t v90 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
          *((unsigned char *)v20 + v283[9]) = *((unsigned char *)v21 + v283[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v20, v21, *(void *)(*(void *)(v37 - 8) + 64));
        }
LABEL_52:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        break;
    }
  }
  uint64_t v91 = a3[8];
  uint64_t v92 = (_OWORD *)(a1 + v91);
  uint64_t v93 = (_OWORD *)(a2 + v91);
  uint64_t v94 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  int v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v94);
  int v96 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94);
  if (v95)
  {
    if (!v96)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 32))(v92, v93, v14);
          goto LABEL_137;
        case 2u:
          uint64_t v98 = type metadata accessor for AttributedString();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v98 - 8) + 32))(v92, v93, v98);
          goto LABEL_137;
        case 3u:
          uint64_t v99 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v99 - 8) + 32))(v92, v93, v99);
          goto LABEL_137;
        case 4u:
          long long v100 = v93[1];
          _OWORD *v92 = *v93;
          v92[1] = v100;
          uint64_t v101 = type metadata accessor for DetailComponentContainerViewModel();
          uint64_t v102 = *(int *)(v101 + 20);
          uint64_t v103 = (_OWORD *)((char *)v92 + v102);
          uint64_t v104 = (_OWORD *)((char *)v93 + v102);
          uint64_t v105 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v267 = (void *)v101;
            uint64_t v290 = a3;
            *uint64_t v103 = *v104;
            uint64_t v284 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v106 = v284[5];
            uint64_t v107 = (char *)v103 + v106;
            uint64_t v108 = (char *)v104 + v106;
            uint64_t v109 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
            {
              uint64_t v110 = sub_10017DF08(&qword_100E749B0);
              memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
              uint64_t v111 = *(void (***)(void *, const void *, uint64_t))(v109 - 8);
            }
            else
            {
              uint64_t v276 = *(void (***)(void *, const void *, uint64_t))(v109 - 8);
              v276[4](v107, v108, v109);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
              uint64_t v111 = v276;
            }
            *(_OWORD *)((char *)v103 + v284[6]) = *(_OWORD *)((char *)v104 + v284[6]);
            __dstc = v111[4];
            __dstc((char *)v103 + v284[7], (char *)v104 + v284[7], v109);
            uint64_t v152 = v284[8];
            uint64_t v277 = (char *)v103 + v152;
            uint64_t v153 = (char *)v104 + v152;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104 + v152, 1, v109))
            {
              uint64_t v154 = sub_10017DF08(&qword_100E749B0);
              memcpy(v277, v153, *(void *)(*(void *)(v154 - 8) + 64));
            }
            else
            {
              __dstc(v277, v153, v109);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v277, 0, 1, v109);
            }
            uint64_t v101 = (uint64_t)v267;
            *((unsigned char *)v103 + v284[9]) = *((unsigned char *)v104 + v284[9]);
            swift_storeEnumTagMultiPayload();
            a3 = v290;
          }
          else
          {
            memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
          }
          uint64_t v160 = *(int *)(v101 + 24);
          uint64_t v161 = (char *)v92 + v160;
          uint64_t v162 = (char *)v93 + v160;
          uint64_t v163 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, v163))
          {
            uint64_t v164 = sub_10017DF08(&qword_100E73810);
            memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
          }
          else
          {
            uint64_t v165 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v161, v162, v165);
            uint64_t v166 = sub_10017DF08(&qword_100E66478);
            v161[*(int *)(v166 + 48)] = v162[*(int *)(v166 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v163);
          }
          goto LABEL_137;
        case 6u:
          uint64_t v112 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v112 - 8) + 32))(v92, v93, v112);
          goto LABEL_137;
        case 7u:
          uint64_t v113 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            _OWORD *v92 = *v93;
            uint64_t v114 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v115 = *(int *)(v114 + 20);
            uint64_t v116 = (char *)v92 + v115;
            uint64_t v117 = (char *)v93 + v115;
            uint64_t v118 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
            uint64_t v285 = (int *)v114;
            uint64_t v119 = *(int *)(v114 + 24);
            uint64_t v120 = (_OWORD *)((char *)v92 + v119);
            uint64_t v121 = (_OWORD *)((char *)v93 + v119);
            uint64_t v122 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v121, 1, v122))
            {
              uint64_t v123 = sub_10017DF08(&qword_100E63850);
              memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
              uint64_t v124 = v285;
            }
            else
            {
              uint64_t v292 = a3;
              *uint64_t v120 = *v121;
              uint64_t v273 = v120;
              uint64_t v278 = (int *)v122;
              uint64_t v155 = *(int *)(v122 + 20);
              uint64_t v156 = (char *)v120 + v155;
              uint64_t v157 = (char *)v121 + v155;
              uint64_t v158 = type metadata accessor for Locale();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, v158))
              {
                uint64_t v159 = sub_10017DF08(&qword_100E63730);
                memcpy(v156, v157, *(void *)(*(void *)(v159 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v156, v157, v158);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v156, 0, 1, v158);
              }
              uint64_t v175 = v278[6];
              uint64_t v176 = (char *)v273 + v175;
              uint64_t v177 = (char *)v121 + v175;
              uint64_t v178 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v176, v177, v178);
              uint64_t v179 = v278[7];
              uint64_t v180 = (char *)v273 + v179;
              uint64_t v181 = (char *)v121 + v179;
              uint64_t v182 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v181, 1, v182))
              {
                uint64_t v183 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v180, v181, *(void *)(*(void *)(v183 - 8) + 64));
              }
              else
              {
                uint64_t v191 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 32))(v180, v181, v191);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v180, 0, 1, v182);
              }
              uint64_t v192 = v278[8];
              uint64_t v193 = (char *)v273 + v192;
              uint64_t v194 = (char *)v121 + v192;
              uint64_t v195 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v196 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v193, v194, v196);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v193, v194, *(void *)(*(void *)(v195 - 8) + 64));
              }
              uint64_t v197 = (uint64_t)v273;
              uint64_t v198 = (uint64_t)v278;
              uint64_t v199 = v278[9];
              uint64_t v269 = (char *)v273 + v199;
              uint64_t v200 = (uint64_t)v121 + v199;
              uint64_t v201 = type metadata accessor for WeatherDataOverrides();
              __srcd = (char *)v200;
              int v202 = _s7Weather24LocationCompositionStateOwet_0(v200, 1, v201);
              a3 = v292;
              if (v202)
              {
                uint64_t v203 = sub_10017DF08(&qword_100E63740);
                memcpy(v269, __srcd, *(void *)(*(void *)(v203 - 8) + 64));
                uint64_t v124 = v285;
              }
              else
              {
                uint64_t v251 = (int *)v201;
                uint64_t v204 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srcd, 1, v204))
                {
                  uint64_t v205 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  uint64_t v206 = v269;
                  memcpy(v269, __srcd, *(void *)(*(void *)(v205 - 8) + 64));
                }
                else
                {
                  uint64_t v206 = v269;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 32))(v269, __srcd, v204);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v269, 0, 1, v204);
                }
                uint64_t v216 = v251[5];
                uint64_t v217 = &v206[v216];
                uint64_t v218 = &__srcd[v216];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srcd[v216], 1, v204))
                {
                  uint64_t v219 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 32))(v217, v218, v204);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v204);
                }
                uint64_t v124 = v285;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v269, 0, 1, (uint64_t)v251);
                uint64_t v197 = (uint64_t)v273;
                uint64_t v198 = (uint64_t)v278;
              }
              _s7Weather24LocationCompositionStateOwst_0(v197, 0, 1, v198);
            }
            *(_OWORD *)((char *)v92 + v124[7]) = *(_OWORD *)((char *)v93 + v124[7]);
            uint64_t v233 = v124[8];
            uint64_t v234 = (char *)v92 + v233;
            uint64_t v235 = (char *)v93 + v233;
            uint64_t v236 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
            *((unsigned char *)v92 + v124[9]) = *((unsigned char *)v93 + v124[9]);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v92, v93, *(void *)(*(void *)(v113 - 8) + 64));
          }
LABEL_137:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
      goto LABEL_149;
    }
    goto LABEL_59;
  }
  if (v96)
  {
    sub_100B20AE8((uint64_t)v92, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
LABEL_59:
    size_t v97 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73818) - 8) + 64);
LABEL_60:
    memcpy(v92, v93, v97);
    goto LABEL_149;
  }
  if (a1 != a2)
  {
    sub_100B20AE8((uint64_t)v92, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 32))(v92, v93, v14);
        break;
      case 2u:
        uint64_t v125 = type metadata accessor for AttributedString();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v125 - 8) + 32))(v92, v93, v125);
        break;
      case 3u:
        uint64_t v126 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v126 - 8) + 32))(v92, v93, v126);
        break;
      case 4u:
        long long v127 = v93[1];
        _OWORD *v92 = *v93;
        v92[1] = v127;
        uint64_t v128 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v129 = *(int *)(v128 + 20);
        int v130 = (_OWORD *)((char *)v92 + v129);
        uint64_t v131 = (_OWORD *)((char *)v93 + v129);
        uint64_t v132 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v268 = (void *)v128;
          uint64_t v291 = a3;
          *int v130 = *v131;
          uint64_t v286 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v133 = v286[5];
          uint64_t v134 = (char *)v130 + v133;
          uint64_t v135 = (char *)v131 + v133;
          uint64_t v136 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v136))
          {
            uint64_t v137 = sub_10017DF08(&qword_100E749B0);
            memcpy(v134, v135, *(void *)(*(void *)(v137 - 8) + 64));
            uint64_t v138 = *(void (***)(void *, const void *, uint64_t))(v136 - 8);
          }
          else
          {
            uint64_t v279 = *(void (***)(void *, const void *, uint64_t))(v136 - 8);
            v279[4](v134, v135, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v134, 0, 1, v136);
            uint64_t v138 = v279;
          }
          *(_OWORD *)((char *)v130 + v286[6]) = *(_OWORD *)((char *)v131 + v286[6]);
          __dstd = v138[4];
          __dstd((char *)v130 + v286[7], (char *)v131 + v286[7], v136);
          uint64_t v167 = v286[8];
          uint64_t v280 = (char *)v130 + v167;
          uint64_t v168 = (char *)v131 + v167;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131 + v167, 1, v136))
          {
            uint64_t v169 = sub_10017DF08(&qword_100E749B0);
            memcpy(v280, v168, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            __dstd(v280, v168, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v136);
          }
          uint64_t v128 = (uint64_t)v268;
          *((unsigned char *)v130 + v286[9]) = *((unsigned char *)v131 + v286[9]);
          swift_storeEnumTagMultiPayload();
          a3 = v291;
        }
        else
        {
          memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
        }
        uint64_t v184 = *(int *)(v128 + 24);
        uint64_t v185 = (char *)v92 + v184;
        uint64_t v186 = (char *)v93 + v184;
        uint64_t v187 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v186, 1, v187))
        {
          uint64_t v188 = sub_10017DF08(&qword_100E73810);
          memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
        }
        else
        {
          uint64_t v189 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 32))(v185, v186, v189);
          uint64_t v190 = sub_10017DF08(&qword_100E66478);
          v185[*(int *)(v190 + 48)] = v186[*(int *)(v190 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, v187);
        }
        break;
      case 6u:
        uint64_t v139 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v139 - 8) + 32))(v92, v93, v139);
        break;
      case 7u:
        uint64_t v140 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          _OWORD *v92 = *v93;
          uint64_t v141 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v142 = *(int *)(v141 + 20);
          uint64_t v143 = (char *)v92 + v142;
          uint64_t v144 = (char *)v93 + v142;
          uint64_t v145 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v143, v144, v145);
          uint64_t v287 = (int *)v141;
          uint64_t v146 = *(int *)(v141 + 24);
          uint64_t v147 = (_OWORD *)((char *)v92 + v146);
          uint64_t v148 = (_OWORD *)((char *)v93 + v146);
          uint64_t v149 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149))
          {
            uint64_t v150 = sub_10017DF08(&qword_100E63850);
            memcpy(v147, v148, *(void *)(*(void *)(v150 - 8) + 64));
            uint64_t v151 = v287;
          }
          else
          {
            uint64_t v293 = a3;
            _OWORD *v147 = *v148;
            uint64_t v274 = v147;
            uint64_t v281 = (int *)v149;
            uint64_t v170 = *(int *)(v149 + 20);
            uint64_t v171 = (char *)v147 + v170;
            uint64_t v172 = (char *)v148 + v170;
            uint64_t v173 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v173))
            {
              uint64_t v174 = sub_10017DF08(&qword_100E63730);
              memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 32))(v171, v172, v173);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v173);
            }
            uint64_t v207 = v281[6];
            uint64_t v208 = (char *)v274 + v207;
            uint64_t v209 = (char *)v148 + v207;
            uint64_t v210 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v208, v209, v210);
            uint64_t v211 = v281[7];
            uint64_t v212 = (char *)v274 + v211;
            uint64_t v213 = (char *)v148 + v211;
            uint64_t v214 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v214))
            {
              uint64_t v215 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
            }
            else
            {
              uint64_t v220 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 32))(v212, v213, v220);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v214);
            }
            uint64_t v221 = v281[8];
            uint64_t v222 = (char *)v274 + v221;
            uint64_t v223 = (char *)v148 + v221;
            uint64_t v224 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v225 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 32))(v222, v223, v225);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
            }
            uint64_t v226 = (uint64_t)v274;
            uint64_t v227 = (uint64_t)v281;
            uint64_t v228 = v281[9];
            int v270 = (char *)v274 + v228;
            uint64_t v229 = (uint64_t)v148 + v228;
            uint64_t v230 = type metadata accessor for WeatherDataOverrides();
            __srce = (char *)v229;
            int v231 = _s7Weather24LocationCompositionStateOwet_0(v229, 1, v230);
            a3 = v293;
            if (v231)
            {
              uint64_t v232 = sub_10017DF08(&qword_100E63740);
              memcpy(v270, __srce, *(void *)(*(void *)(v232 - 8) + 64));
              uint64_t v151 = v287;
            }
            else
            {
              uint64_t v252 = (int *)v230;
              uint64_t v237 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srce, 1, v237))
              {
                uint64_t v238 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                uint64_t v239 = v270;
                memcpy(v270, __srce, *(void *)(*(void *)(v238 - 8) + 64));
              }
              else
              {
                uint64_t v239 = v270;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v270, __srce, v237);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v270, 0, 1, v237);
              }
              uint64_t v240 = v252[5];
              uint64_t v241 = &v239[v240];
              uint64_t v242 = &__srce[v240];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srce[v240], 1, v237))
              {
                uint64_t v243 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v241, v242, *(void *)(*(void *)(v243 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v241, v242, v237);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v241, 0, 1, v237);
              }
              uint64_t v151 = v287;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v270, 0, 1, (uint64_t)v252);
              uint64_t v226 = (uint64_t)v274;
              uint64_t v227 = (uint64_t)v281;
            }
            _s7Weather24LocationCompositionStateOwst_0(v226, 0, 1, v227);
          }
          *(_OWORD *)((char *)v92 + v151[7]) = *(_OWORD *)((char *)v93 + v151[7]);
          uint64_t v244 = v151[8];
          uint64_t v245 = (char *)v92 + v244;
          uint64_t v246 = (char *)v93 + v244;
          uint64_t v247 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 32))(v245, v246, v247);
          *((unsigned char *)v92 + v151[9]) = *((unsigned char *)v93 + v151[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v92, v93, *(void *)(*(void *)(v140 - 8) + 64));
        }
        break;
      default:
        size_t v97 = *(void *)(*(void *)(v94 - 8) + 64);
        goto LABEL_60;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_149:
  uint64_t v248 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v248) = *(unsigned char *)(a2 + v248);
  return a1;
}

uint64_t sub_100B1ECC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B1ECDC);
}

uint64_t sub_100B1ECDC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_10017DF08(&qword_100E63758);
    sub_100162F30();
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a3[6];
    }
    else
    {
      type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v11 = v13;
        uint64_t v12 = a3[7];
      }
      else
      {
        uint64_t v11 = sub_10017DF08(&qword_100E73818);
        uint64_t v12 = a3[8];
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v12, a2, v11);
  }
}

uint64_t sub_100B1EDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B1EDD4);
}

uint64_t sub_100B1EDD4(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    sub_10017DF08(&qword_100E63758);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[6];
    }
    else
    {
      type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[7];
      }
      else
      {
        uint64_t v10 = sub_10017DF08(&qword_100E73818);
        uint64_t v11 = a4[8];
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ConditionDetailPlatterViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB1218);
}

void sub_100B1EEC8()
{
  sub_100B1F024(319, (unint64_t *)&qword_100E794B0, (void (*)(uint64_t))&type metadata accessor for WeatherDescription);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ConditionDetailPlatterViewModel.Body(319);
    if (v1 <= 0x3F)
    {
      sub_100B1F024(319, (unint64_t *)&unk_100EB1228, (void (*)(uint64_t))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100B1F024(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_100B1F07C()
{
  unint64_t result = qword_100EB1270;
  if (!qword_100EB1270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1270);
  }
  return result;
}

uint64_t sub_100B1F0C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v80 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v75 = v6;
  uint64_t v77 = sub_10017DF08(&qword_100EB1280);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100E73818);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100181B50(v13, v70);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v78 = (uint64_t)&v70 - v16;
  __chkstk_darwin(v15);
  uint64_t v79 = (uint64_t)&v70 - v17;
  uint64_t v18 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v81 = v19;
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_10017DF08(&qword_100E794E0);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_10012B938();
  uint64_t v26 = sub_10017DF08(&qword_100E63758);
  uint64_t v27 = sub_100109308(v26);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v70 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v70 - v34;
  uint64_t v36 = *a1;
  uint64_t v37 = *a2;
  uint64_t v38 = a2[1];
  int v39 = *((unsigned __int8 *)a2 + 16);
  if (!*((unsigned char *)a1 + 16))
  {
    if (*((unsigned char *)a2 + 16)) {
      goto LABEL_60;
    }
    goto LABEL_6;
  }
  if (*((unsigned char *)a1 + 16) == 1)
  {
    if (v39 != 1) {
      goto LABEL_60;
    }
LABEL_6:
    BOOL v40 = v36 == v37 && a1[1] == v38;
    if (!v40)
    {
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      char v42 = 0;
      if ((v41 & 1) == 0) {
        return v42 & 1;
      }
    }
LABEL_28:
    uint64_t v43 = a1[4];
    uint64_t v44 = a2[4];
    if (v43)
    {
      if (v44)
      {
        if (a1[3] != a2[3] || v43 != v44)
        {
          char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
          char v42 = 0;
          if ((v46 & 1) == 0) {
            return v42 & 1;
          }
        }
LABEL_37:
        uint64_t v72 = v23;
        uint64_t v74 = v10;
        uint64_t v47 = type metadata accessor for ConditionDetailPlatterViewModel(0);
        sub_10006DF38((uint64_t)a1 + *(int *)(v47 + 24), (uint64_t)v35, &qword_100E63758);
        uint64_t v73 = (int *)v47;
        sub_10006DF38((uint64_t)a2 + *(int *)(v47 + 24), (uint64_t)v33, &qword_100E63758);
        uint64_t v48 = v2 + *(int *)(v24 + 48);
        sub_10006DF38((uint64_t)v35, v2, &qword_100E63758);
        sub_10006DF38((uint64_t)v33, v48, &qword_100E63758);
        sub_10012B520(v2, 1, v18);
        if (v40)
        {
          sub_1001781AC((uint64_t)v33, &qword_100E63758);
          sub_1001781AC((uint64_t)v35, &qword_100E63758);
          sub_10012B520(v48, 1, v18);
          uint64_t v49 = v74;
          if (v40)
          {
            sub_1001781AC(v2, &qword_100E63758);
LABEL_48:
            uint64_t v60 = v73;
            if ((sub_100B20158((uint64_t)a1 + v73[7], (uint64_t)a2 + v73[7]) & 1) == 0) {
              goto LABEL_60;
            }
            uint64_t v61 = v79;
            sub_10006DF38((uint64_t)a1 + v60[8], v79, &qword_100E73818);
            uint64_t v62 = v78;
            sub_10006DF38((uint64_t)a2 + v60[8], v78, &qword_100E73818);
            uint64_t v63 = v49 + *(int *)(v77 + 48);
            sub_10006DF38(v61, v49, &qword_100E73818);
            sub_10006DF38(v62, v63, &qword_100E73818);
            uint64_t v64 = v80;
            sub_10012B520(v49, 1, v80);
            if (v40)
            {
              sub_1001781AC(v62, &qword_100E73818);
              sub_1001781AC(v61, &qword_100E73818);
              sub_10012B520(v63, 1, v64);
              if (v40)
              {
                sub_1001781AC(v49, &qword_100E73818);
                goto LABEL_59;
              }
            }
            else
            {
              uint64_t v65 = v76;
              sub_10006DF38(v49, v76, &qword_100E73818);
              sub_10012B520(v63, 1, v64);
              if (!v66)
              {
                uint64_t v67 = v75;
                sub_100B20B40(v63, v75, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
                char v68 = sub_100B20158(v65, v67);
                sub_100B20AE8(v67, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
                sub_1001781AC(v62, &qword_100E73818);
                sub_1001781AC(v61, &qword_100E73818);
                sub_100B20AE8(v65, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
                sub_1001781AC(v49, &qword_100E73818);
                if ((v68 & 1) == 0) {
                  goto LABEL_60;
                }
LABEL_59:
                if (*((unsigned __int8 *)a1 + v60[9]) == *((unsigned __int8 *)a2 + v60[9]))
                {
                  char v42 = *((unsigned char *)a1 + v60[10]) ^ *((unsigned char *)a2 + v60[10]) ^ 1;
                  return v42 & 1;
                }
                goto LABEL_60;
              }
              sub_1001781AC(v62, &qword_100E73818);
              sub_1001781AC(v61, &qword_100E73818);
              sub_100B20AE8(v65, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
            }
            uint64_t v53 = &qword_100EB1280;
            uint64_t v54 = v49;
            goto LABEL_46;
          }
        }
        else
        {
          sub_10006DF38(v2, (uint64_t)v30, &qword_100E63758);
          sub_10012B520(v48, 1, v18);
          if (!v50)
          {
            uint64_t v55 = v81;
            uint64_t v56 = v72;
            sub_10017EE68();
            v57();
            sub_100B20CDC((unint64_t *)&qword_100E794E8, (void (*)(uint64_t))&type metadata accessor for WeatherDescription);
            int v71 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
            v58(v56, v18);
            sub_1001781AC((uint64_t)v33, &qword_100E63758);
            sub_1001781AC((uint64_t)v35, &qword_100E63758);
            uint64_t v59 = sub_1001639CC();
            ((void (*)(uint64_t))v58)(v59);
            sub_1001781AC(v2, &qword_100E63758);
            uint64_t v49 = v74;
            if ((v71 & 1) == 0) {
              goto LABEL_60;
            }
            goto LABEL_48;
          }
          sub_1001781AC((uint64_t)v33, &qword_100E63758);
          sub_1001781AC((uint64_t)v35, &qword_100E63758);
          uint64_t v51 = sub_1001639CC();
          v52(v51);
        }
        uint64_t v53 = &qword_100E794E0;
        uint64_t v54 = v2;
LABEL_46:
        sub_1001781AC(v54, v53);
      }
    }
    else if (!v44)
    {
      goto LABEL_37;
    }
LABEL_60:
    char v42 = 0;
    return v42 & 1;
  }
  switch(v36)
  {
    case 1:
      if (v39 != 2) {
        goto LABEL_60;
      }
      char v42 = 0;
      if (v37 == 1) {
        goto LABEL_27;
      }
      break;
    case 2:
      if (v39 != 2) {
        goto LABEL_60;
      }
      char v42 = 0;
      if (v37 == 2) {
        goto LABEL_27;
      }
      break;
    case 3:
      if (v39 != 2) {
        goto LABEL_60;
      }
      char v42 = 0;
      if (v37 == 3) {
        goto LABEL_27;
      }
      break;
    case 4:
      if (v39 != 2) {
        goto LABEL_60;
      }
      char v42 = 0;
      if (v37 == 4)
      {
LABEL_27:
        if (!v38) {
          goto LABEL_28;
        }
      }
      break;
    default:
      char v42 = 0;
      if (v39 == 2 && !(v38 | v37)) {
        goto LABEL_28;
      }
      break;
  }
  return v42 & 1;
}

uint64_t sub_100B1F85C()
{
  uint64_t v61 = type metadata accessor for DetailComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v0);
  sub_100181B50(v1, v58);
  __chkstk_darwin(v2);
  uint64_t v59 = (uint64_t *)((char *)&v58 - v3);
  uint64_t v63 = type metadata accessor for AttributedString.CharacterView();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for AttributedString();
  sub_100179C0C();
  uint64_t v62 = v9;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v64 = v15;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E73818);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  sub_100162E4C();
  __chkstk_darwin(v26);
  uint64_t v28 = (uint64_t *)((char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v58 - v30;
  uint64_t v32 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_10006DF38(v65 + *(int *)(v32 + 32), v24, &qword_100E73818);
  sub_10012B520(v24, 1, v25);
  if (v33)
  {
    sub_1001781AC(v24, &qword_100E73818);
    return 0;
  }
  else
  {
    uint64_t v65 = v13;
    uint64_t v34 = v62;
    uint64_t v35 = sub_1001639CC();
    sub_100B20B40(v35, v36, v37);
    sub_100B20E88((uint64_t)v31, (uint64_t)v28, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_100B20AE8((uint64_t)v31, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
        return *v28;
      case 2:
        uint64_t v43 = v65;
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v34 + 32))(v65, v28, v8);
        uint64_t v39 = v43;
        AttributedString.characters.getter();
        sub_100B20CDC(&qword_100E6B650, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
        String.init<A>(_:)();
        sub_10019DCA0();
        uint64_t v41 = v43;
        uint64_t v42 = v8;
        goto LABEL_9;
      case 3:
      case 6:
      case 7:
        sub_100B20AE8((uint64_t)v31, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
        sub_100B20AE8((uint64_t)v28, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
        return 0;
      case 4:
        uint64_t v45 = v59;
        sub_100B20B40((uint64_t)v28, (uint64_t)v59, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
        uint64_t v46 = v45[1];
        if (v46)
        {
          uint64_t v7 = *v45;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v7 = 0;
        }
        uint64_t v57 = v60;
        sub_100B20E88((uint64_t)v45, v60, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
        if (!v46) {
          uint64_t v7 = sub_1008220CC();
        }
        sub_100B20AE8(v57, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
        sub_100B20AE8((uint64_t)v45, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
        uint64_t v44 = (uint64_t)v31;
        goto LABEL_19;
      case 5:
        sub_100B20AE8((uint64_t)v31, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
        uint64_t v47 = v28[4];
        uint64_t v48 = v28[5];
        uint64_t v49 = v28[6];
        uint64_t v50 = v28[7];
        uint64_t v51 = v28[8];
        uint64_t v52 = v28[9];
        uint64_t v53 = v28[10];
        char v54 = *((unsigned char *)v28 + 89);
        uint64_t v55 = *((unsigned __int8 *)v28 + 88);
        sub_100147E60(*v28, v28[1], v28[2], v28[3]);
        sub_10033AB48(v47, v48, v49, v50, v51, v52, v53, v55, v54);
        return 0;
      default:
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v64 + 32))(v19, v28, v14);
        uint64_t v39 = v19;
        WeatherDescription.string.getter();
        sub_10019DCA0();
        uint64_t v41 = v19;
        uint64_t v42 = v14;
LABEL_9:
        v40(v41, v42);
        uint64_t v44 = v39;
LABEL_19:
        sub_100B20AE8(v44, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
        break;
    }
  }
  return v7;
}

uint64_t sub_100B1FDD0(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for ConditionDetailPlatterViewModel.TextSection(0);

  return static AttributedString.== infix(_:_:)();
}

void sub_100B1FE4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4)
  {
    Swift::UInt v4 = 1;
    goto LABEL_5;
  }
  if (a4 == 1)
  {
    Swift::UInt v4 = 6;
LABEL_5:
    Hasher._combine(_:)(v4);
    String.hash(into:)();
    return;
  }
  switch(a2)
  {
    case 1:
      Swift::UInt v5 = 2;
      break;
    case 2:
      Swift::UInt v5 = 3;
      break;
    case 3:
      Swift::UInt v5 = 4;
      break;
    case 4:
      Swift::UInt v5 = 5;
      break;
    default:
      Swift::UInt v5 = 0;
      break;
  }
  Hasher._combine(_:)(v5);
}

Swift::Int sub_100B1FF28(uint64_t a1, uint64_t a2, char a3)
{
  Hasher.init(_seed:)();
  sub_100B1FE4C((uint64_t)v7, a1, a2, a3);
  return Hasher._finalize()();
}

Swift::Int sub_100B1FF90()
{
  return sub_100B1FF28(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100B1FF9C(uint64_t a1)
{
  sub_100B1FE4C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100B1FFA8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  sub_100B1FE4C((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100B20000(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a3)
  {
    if (!a6) {
      goto LABEL_11;
    }
    return 0;
  }
  if (a3 != 1)
  {
    switch(a1)
    {
      case 1:
        if (a6 != 2 || a4 != 1) {
          return 0;
        }
        break;
      case 2:
        if (a6 != 2 || a4 != 2) {
          return 0;
        }
        break;
      case 3:
        if (a6 != 2 || a4 != 3) {
          return 0;
        }
        break;
      case 4:
        if (a6 != 2 || a4 != 4) {
          return 0;
        }
        break;
      default:
        return a6 == 2 && !(a5 | a4);
    }
    return !a5;
  }
  if (a6 != 1) {
    return 0;
  }
LABEL_11:
  if (a1 != a4 || a2 != a5) {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return 1;
}

uint64_t sub_100B200F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_10018F6EC(v2, v3, v4);
}

unint64_t sub_100B2010C()
{
  unint64_t result = qword_100EB1278;
  if (!qword_100EB1278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1278);
  }
  return result;
}

uint64_t sub_100B20158(uint64_t a1, uint64_t a2)
{
  uint64_t v98 = a2;
  uint64_t v97 = a1;
  uint64_t v3 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  sub_100109328(v5);
  uint64_t v90 = type metadata accessor for PrecipitationTotalPlatterViewModel();
  sub_100179C0C();
  uint64_t v89 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  sub_100109328(v8);
  uint64_t v9 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v85 = (uint64_t *)v11;
  uint64_t v96 = sub_10017DF08(&qword_100E73808);
  sub_100179C0C();
  uint64_t v95 = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  sub_100109328(v14);
  uint64_t v94 = type metadata accessor for AttributedString();
  sub_100179C0C();
  uint64_t v93 = v15;
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109328(v17);
  uint64_t v88 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v87 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v21 = sub_100109328(v20);
  type metadata accessor for ConditionDetailPlatterViewModel.Body(v21);
  sub_100162E4C();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v92 = (uint64_t)v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v91 = (char *)v83 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)v83 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (void *)((char *)v83 - v31);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)v83 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)v83 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v41 = (void *)((char *)v83 - v40);
  __chkstk_darwin(v39);
  uint64_t v43 = (char *)v83 - v42;
  uint64_t v44 = sub_10017DF08(&qword_100EB1288);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_10012B938();
  uint64_t v47 = (uint64_t *)(v2 + *(int *)(v46 + 56));
  sub_100B20E88(v97, v2, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
  sub_100B20E88(v98, (uint64_t)v47, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100B20E88(v2, (uint64_t)v41, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      uint64_t v66 = *v41;
      uint64_t v65 = v41[1];
      if (sub_1001A29A8() != 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      uint64_t v67 = *v47;
      uint64_t v68 = v47[1];
      if (v66 == v67 && v65 == v68)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
        {
          sub_100B20AE8(v2, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
          goto LABEL_34;
        }
      }
      sub_100B20AE8(v2, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      char v56 = 1;
      return v56 & 1;
    case 2u:
      sub_100B20E88(v2, (uint64_t)v38, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      if (sub_1001A29A8() == 2)
      {
        uint64_t v48 = v93;
        uint64_t v49 = v83[3];
        uint64_t v50 = v94;
        sub_10017EE68();
        v51();
        char v52 = static AttributedString.== infix(_:_:)();
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v93 + 8))(v38, v94);
      goto LABEL_33;
    case 3u:
      sub_100B20E88(v2, (uint64_t)v35, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      if (sub_1001A29A8() == 3)
      {
        uint64_t v53 = v95;
        uint64_t v54 = v84;
        uint64_t v55 = v96;
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(v95 + 32))(v84, v47, v96);
        sub_10017DF08(&qword_100E774D8);
        sub_100B1519C();
        sub_100B20C38();
        char v56 = static NonEmpty<>.== infix(_:_:)();
        uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
        v57(v54, v55);
        v57((uint64_t)v35, v55);
        goto LABEL_37;
      }
      (*(void (**)(char *, uint64_t))(v95 + 8))(v35, v96);
      goto LABEL_33;
    case 4u:
      sub_100B20E88(v2, (uint64_t)v32, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      if (sub_1001A29A8() == 4)
      {
        uint64_t v58 = type metadata accessor for DetailComponentContainerViewModel;
        uint64_t v59 = v85;
        sub_100B20B40((uint64_t)v47, (uint64_t)v85, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
        char v56 = sub_1004B7C2C(v32, v59);
        sub_100B20AE8((uint64_t)v59, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
        uint64_t v60 = (uint64_t)v32;
        goto LABEL_12;
      }
      uint64_t v73 = type metadata accessor for DetailComponentContainerViewModel;
      uint64_t v74 = (uint64_t)v32;
      goto LABEL_29;
    case 5u:
      sub_100B20E88(v2, (uint64_t)v29, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      memcpy(__dst, v29, 0x5AuLL);
      if (sub_1001A29A8() == 5)
      {
        memcpy(v100, v47, 0x5AuLL);
        char v56 = sub_10033A39C((uint64_t)__dst, (uint64_t)v100);
        sub_100B20BA0((uint64_t)v100);
        sub_100B20BA0((uint64_t)__dst);
        goto LABEL_37;
      }
      sub_100B20BA0((uint64_t)__dst);
      goto LABEL_33;
    case 6u:
      uint64_t v38 = v91;
      sub_100B20E88(v2, (uint64_t)v91, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      if (sub_1001A29A8() != 6)
      {
        (*(void (**)(char *, uint64_t))(v89 + 8))(v38, v90);
        goto LABEL_33;
      }
      uint64_t v48 = v89;
      uint64_t v49 = v83[2];
      uint64_t v50 = v90;
      sub_10017EE68();
      v71();
      char v52 = static PrecipitationTotalPlatterViewModel.== infix(_:_:)();
LABEL_24:
      char v56 = v52;
      uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v72(v49, v50);
      v72((uint64_t)v38, v50);
      goto LABEL_37;
    case 7u:
      uint64_t v61 = v92;
      sub_100B20E88(v2, v92, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      if (sub_1001A29A8() == 7)
      {
        uint64_t v58 = type metadata accessor for ConditionDetailDynamicContentIdentifier;
        uint64_t v62 = v86;
        sub_100B20B40((uint64_t)v47, v86, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
        uint64_t v63 = sub_1001639CC();
        char v56 = sub_100A76C84(v63, v64);
        sub_100B20AE8(v62, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
        uint64_t v60 = v61;
LABEL_12:
        sub_100B20AE8(v60, (void (*)(void))v58);
        goto LABEL_37;
      }
      uint64_t v73 = type metadata accessor for ConditionDetailDynamicContentIdentifier;
      uint64_t v74 = v61;
LABEL_29:
      sub_100B20AE8(v74, (void (*)(void))v73);
      goto LABEL_33;
    default:
      sub_100B20E88(v2, (uint64_t)v43, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      if (sub_1001A29A8())
      {
        (*(void (**)(char *, uint64_t))(v87 + 8))(v43, v88);
LABEL_33:
        sub_1001781AC(v2, &qword_100EB1288);
LABEL_34:
        char v56 = 0;
      }
      else
      {
        uint64_t v75 = v87;
        uint64_t v76 = v83[1];
        uint64_t v77 = v88;
        sub_10017EE68();
        v78();
        char v56 = static WeatherDescription.== infix(_:_:)();
        uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
        v79(v76, v77);
        uint64_t v80 = sub_1001639CC();
        v79(v80, v81);
LABEL_37:
        sub_100B20AE8(v2, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
      }
      return v56 & 1;
  }
}

uint64_t sub_100B20ACC(uint64_t a1, uint64_t a2)
{
  return sub_100B20000(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_100B20AE8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100B20B40(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100B20BA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  char v9 = *(unsigned char *)(a1 + 89);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 88);
  sub_100147E60(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_10033AB48(v2, v3, v4, v5, v6, v7, v8, v10, v9);
  return a1;
}

unint64_t sub_100B20C38()
{
  unint64_t result = qword_100EB1290;
  if (!qword_100EB1290)
  {
    sub_10018C6DC(&qword_100E774D8);
    sub_100B20CDC(&qword_100EB1298, (void (*)(uint64_t))type metadata accessor for ConditionDetailPlatterViewModel.TextSection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1290);
  }
  return result;
}

uint64_t sub_100B20CDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConditionDetailPlatterViewModel.PlatterStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B20DF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionDetailPlatterViewModel.PlatterStyle()
{
  return &type metadata for ConditionDetailPlatterViewModel.PlatterStyle;
}

ValueMetadata *type metadata accessor for ConditionDetailPlatterViewModel.PlatterIdentifier()
{
  return &type metadata for ConditionDetailPlatterViewModel.PlatterIdentifier;
}

unint64_t sub_100B20E3C()
{
  unint64_t result = qword_100EB12A0;
  if (!qword_100EB12A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB12A0);
  }
  return result;
}

uint64_t sub_100B20E88(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t *sub_100B20EDC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v4 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v4[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      char v9 = (char *)v4 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[5];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (uint64_t *)((char *)v4 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (uint64_t *)((char *)v4 + v22);
    uint64_t v27 = (uint64_t *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100B210EC(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v6 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_100B21250(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_100B21414(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C((uint64_t)a1, &qword_100E65310);
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_100B2161C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  return a1;
}

void *sub_100B217BC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C((uint64_t)a1, &qword_100E65310);
    uint64_t v6 = sub_10017DF08(&qword_100E65310);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  swift_release();
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (void *)((char *)a2 + v20);
  *(void *)((char *)a1 + v20) = *v22;
  swift_bridgeObjectRelease();
  *((void *)v21 + 1) = v22[1];
  swift_release();
  return a1;
}

uint64_t sub_100B219A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B219B8);
}

uint64_t sub_100B219B8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E66CA0);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_7:
    uint64_t v9 = a1 + v12;
    goto LABEL_8;
  }
  type metadata accessor for TimeZone();
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_100B21A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B21AAC);
}

void sub_100B21AAC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E66CA0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for TimeZone();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) != a3)
      {
        *(void *)(a1 + a4[8]) = (a2 - 1);
        return;
      }
      uint64_t v10 = v15;
      uint64_t v14 = a4[7];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DailyForecastEditorView()
{
  uint64_t result = qword_100EB1300;
  if (!qword_100EB1300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100B21BD0()
{
  sub_1002307EC();
  if (v0 <= 0x3F)
  {
    sub_10001CB2C();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TimeZone();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100B21CF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B21D14(unint64_t a1)
{
  uint64_t v40 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = type metadata accessor for DayWeather();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v37 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v38 = (char *)&v33 - v12;
  uint64_t v13 = type metadata accessor for DailyForecastEditorView();
  uint64_t v14 = (uint64_t *)(v1 + *(int *)(v13 + 36));
  uint64_t v16 = *v14;
  uint64_t v15 = (void *)v14[1];
  v43._uint64_t countAndFlagsBits = v16;
  v43._object = v15;
  sub_10017DF08(&qword_100EB1398);
  uint64_t result = State.wrappedValue.getter();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(void *)(v41 + 16) <= a1)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  unint64_t v35 = a1;
  uint64_t v36 = v9;
  uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  unint64_t v19 = v41
      + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(void *)(v9 + 72) * a1;
  uint64_t v34 = v8;
  v18(v38, v19, v8);
  swift_bridgeObjectRelease();
  DayWeather.date.getter();
  uint64_t v20 = Date.formattedShortMonth(timeZone:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v24 = v40;
  v23(v7, v40);
  v43._uint64_t countAndFlagsBits = v20;
  v43._object = v22;
  uint64_t v33 = v13;
  Date.init(timeIntervalSince1970:)();
  DayWeather.date.getter();
  char v25 = Date.isSameDay(as:timeZone:)();
  v23(v7, v24);
  if (v25)
  {
    v26._uint64_t countAndFlagsBits = 0x297961646F742820;
    v26._object = (void *)0xE800000000000000;
    String.append(_:)(v26);
  }
  sub_10017DF08(&qword_100E66CA0);
  uint64_t v27 = v37;
  Forecast.subscript.getter();
  sub_100B237D8(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  uint64_t v28 = v38;
  uint64_t v29 = v34;
  char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v36 + 8);
  v31(v27, v29);
  if (v30)
  {
    v23(v39, v40);
    v31(v28, v29);
    return v43._countAndFlagsBits;
  }
  else
  {
    uint64_t v41 = 42;
    unint64_t v42 = 0xE100000000000000;
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    uint64_t v32 = v41;
    v23(v39, v40);
    v31(v28, v29);
  }
  return v32;
}

uint64_t sub_100B22120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v2 = type metadata accessor for DailyForecastEditorView();
  uint64_t v3 = sub_100164920(v2);
  uint64_t v48 = v4;
  uint64_t v47 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v45 = (uint64_t)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65388);
  sub_100179C0C();
  uint64_t v49 = v7;
  uint64_t v50 = v8;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v46 = v9;
  uint64_t v10 = type metadata accessor for InsetGroupedListStyle();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100EB1348);
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  sub_10017DF08(&qword_100EB1350);
  sub_100179C0C();
  uint64_t v41 = v24;
  uint64_t v42 = v25;
  __chkstk_darwin(v24);
  sub_1001626E0();
  sub_10017DF08(&qword_100EB1358);
  sub_100179C0C();
  uint64_t v43 = v26;
  uint64_t v44 = v27;
  __chkstk_darwin(v26);
  sub_100109314();
  v40[1] = v28;
  uint64_t v52 = v1;
  sub_10017DF08(&qword_100EB1360);
  sub_100B23324();
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  uint64_t v29 = sub_1001246C8(&qword_100EB1390, &qword_100EB1348);
  View.listStyle<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v53 = v17;
  uint64_t v54 = v10;
  uint64_t v55 = v29;
  char v56 = &protocol witness table for InsetGroupedListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v41;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v32 = v31;
  sub_100162F0C();
  v33();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v34 = v45;
  sub_100B23444(v40[2], v45);
  unint64_t v35 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v36 = swift_allocObject();
  sub_100B234AC(v34, v36 + v35);
  Button<>.init(_:action:)();
  uint64_t v53 = v32;
  uint64_t v54 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1001246C8(&qword_100E653A8, &qword_100E65388);
  View.navigationBarItems<A>(trailing:)();
  sub_100162F0C();
  v37();
  sub_100162F0C();
  return v38();
}

uint64_t sub_100B225F8()
{
  return Section<>.init(header:content:)();
}

uint64_t sub_100B226BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DailyForecastEditorView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(v5 + 44));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  sub_10017DF08(&qword_100EB1398);
  State.wrappedValue.getter();
  uint64_t v9 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  uint64_t v14 = 0;
  uint64_t v15 = v9;
  swift_getKeyPath();
  sub_100B23444(a1, (uint64_t)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  sub_100B234AC((uint64_t)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  sub_10017DF08(&qword_100E7FD68);
  sub_10017DF08(&qword_100EB1388);
  sub_100623494();
  sub_1001246C8(&qword_100EB1380, &qword_100EB1388);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100B22888@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = a3;
  uint64_t v5 = type metadata accessor for DailyForecastEditorView();
  uint64_t v49 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v50 = v6;
  uint64_t v51 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v58 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DayWeather();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v53 = (char *)&v43 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v55 = type metadata accessor for DayWeatherEditorView();
  __chkstk_darwin(v55);
  uint64_t v52 = (uint64_t *)((char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v19 = *a1;
  uint64_t v20 = (uint64_t *)(a2 + *(int *)(v5 + 36));
  uint64_t v21 = v20[1];
  uint64_t v61 = *v20;
  uint64_t v62 = v21;
  uint64_t v57 = sub_10017DF08(&qword_100EB1398);
  uint64_t result = State.wrappedValue.getter();
  unint64_t v60 = v19;
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v48 = v7;
  if (v60 >= *(void *)(v63 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  unint64_t v44 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v23 = v60;
  uint64_t v43 = *(void *)(v11 + 72) * v60;
  uint64_t v47 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v47(v17, v63 + v44 + v43, v10);
  swift_bridgeObjectRelease();
  DayWeather.date.getter();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v11 + 8);
  v46(v17, v10);
  uint64_t v59 = a2;
  uint64_t v24 = Date.formattedShortMonth(timeZone:)();
  uint64_t v45 = v25;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v48);
  uint64_t v26 = v20[1];
  uint64_t v61 = *v20;
  uint64_t v62 = v26;
  uint64_t result = State.wrappedValue.getter();
  if (v23 < *(void *)(v63 + 16))
  {
    uint64_t v57 = v24;
    uint64_t v27 = (void (*)(char *, char *, uint64_t))v47;
    v47(v17, v63 + v44 + v43, v10);
    swift_bridgeObjectRelease();
    uint64_t v28 = v51;
    sub_100B23444(v59, v51);
    unint64_t v29 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    unint64_t v30 = (v50 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = swift_allocObject();
    uint64_t v58 = v31;
    sub_100B234AC(v28, v31 + v29);
    *(void *)(v31 + v30) = v60;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v33 = v52;
    *uint64_t v52 = KeyPath;
    sub_10017DF08(&qword_100E65310);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = v55;
    unint64_t v35 = (uint64_t *)((char *)v33 + *(int *)(v55 + 20));
    uint64_t v36 = v45;
    *unint64_t v35 = v57;
    v35[1] = v36;
    v27((char *)v33 + *(int *)(v34 + 24), v17, v10);
    uint64_t v37 = v53;
    v27(v53, v17, v10);
    v27(v54, v37, v10);
    State.init(wrappedValue:)();
    uint64_t v38 = (uint64_t (*)(char *, uint64_t))v46;
    v46(v37, v10);
    uint64_t v39 = v38(v17, v10);
    uint64_t v40 = (uint64_t (**)(uint64_t))((char *)v33 + *(int *)(v34 + 28));
    uint64_t v41 = (uint64_t (*)(uint64_t))v58;
    *uint64_t v40 = sub_100B23754;
    v40[1] = v41;
    __chkstk_darwin(v39);
    uint64_t v42 = v60;
    *(&v43 - 2) = v59;
    *(&v43 - 1) = v42;
    sub_100B237D8(&qword_100EB13A0, (void (*)(uint64_t))type metadata accessor for DayWeatherEditorView);
    return NavigationLink.init(destination:label:)();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100B22E58(uint64_t a1, uint64_t a2, unint64_t a3)
{
  type metadata accessor for DailyForecastEditorView();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EB1398);
  State.wrappedValue.getter();
  uint64_t v5 = v8;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((a3 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = sub_100ABB62C();
  uint64_t v5 = result;
  if ((a3 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v5 + 16) > a3)
  {
    uint64_t v7 = type metadata accessor for DayWeather();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80))+ *(void *)(*(void *)(v7 - 8) + 72) * a3, a1, v7);
    State.wrappedValue.setter();
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100B22F98@<X0>(unint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_100B21D14(a1);
  sub_10014A85C();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_100B22FF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v2 - 8);
  uint64_t v20 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v19);
  char v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DailyForecastEditorView();
  uint64_t v12 = *(int *)(v11 + 36);
  uint64_t v13 = (void (**)(char *))(a1 + *(int *)(v11 + 32));
  uint64_t v14 = *v13;
  v17[1] = v13[1];
  uint64_t v18 = v14;
  v17[0] = a1;
  uint64_t v15 = *(void *)(a1 + v12 + 8);
  uint64_t v21 = *(void *)(a1 + v12);
  uint64_t v22 = v15;
  sub_10017DF08(&qword_100EB1398);
  State.wrappedValue.getter();
  Forecast.metadata.getter();
  type metadata accessor for DayWeather();
  sub_100B237D8(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_100B237D8(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_100B237D8(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  Forecast.init(_:metadata:)();
  v18(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_10017DF4C((uint64_t)v5, &qword_100E669A0);
}

uint64_t sub_100B2331C()
{
  return sub_100B225F8();
}

unint64_t sub_100B23324()
{
  unint64_t result = qword_100EB1368;
  if (!qword_100EB1368)
  {
    sub_10018C6DC(&qword_100EB1360);
    sub_100B233AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1368);
  }
  return result;
}

unint64_t sub_100B233AC()
{
  unint64_t result = qword_100EB1370;
  if (!qword_100EB1370)
  {
    sub_10018C6DC(&qword_100EB1378);
    sub_1001246C8(&qword_100EB1380, &qword_100EB1388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1370);
  }
  return result;
}

uint64_t sub_100B23444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DailyForecastEditorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B234AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DailyForecastEditorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B23510()
{
  uint64_t v1 = type metadata accessor for DailyForecastEditorView();
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_100B22FF8(v3);
}

uint64_t sub_100B23550()
{
  return sub_100B226BC(*(void *)(v0 + 16));
}

uint64_t sub_100B2355C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for DailyForecastEditorView();
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100B22888(a1, v7, a2);
}

uint64_t sub_100B235BC()
{
  type metadata accessor for DailyForecastEditorView();
  sub_100179CD4();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    unint64_t v4 = v0 + v2 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100179DC0();
    (*(void (**)(unint64_t))(v5 + 8))(v4);
  }
  sub_10017DF08(&qword_100E66CA0);
  sub_100179DC0();
  sub_100162F0C();
  v6();
  type metadata accessor for TimeZone();
  sub_100179DC0();
  sub_100162F0C();
  v7();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B23754(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DailyForecastEditorView();
  sub_100164920(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100B22E58(a1, v1 + v8, v9);
}

uint64_t sub_100B237D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100B22F98(*(void *)(v1 + 24), a1);
}

uint64_t sub_100B237D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B23820()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100B23978()
{
  if ((*(unsigned char *)(v0 + 112) & 1) == 0) {
    return *(double *)(v0 + 104);
  }
  *(void *)(v0 + 104) = 0x4074000000000000;
  *(unsigned char *)(v0 + 112) = 0;
  return 320.0;
}

uint64_t sub_100B2399C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v29[1] = a3;
  uint64_t v31 = a4;
  uint64_t v7 = sub_10017DF08(&qword_100EB15F8);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EB1650);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100EB1658);
  uint64_t v13 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  if (qword_100E62668 != -1) {
    uint64_t v14 = swift_once();
  }
  if (byte_100F51C48 == 1)
  {
    v29[0] = v29;
    __chkstk_darwin(v14);
    uint64_t v17 = sub_10017DF08(&qword_100EB1620);
    unint64_t v18 = sub_100B2B020();
    uint64_t v19 = sub_10018C6DC(&qword_100E7CFD0);
    uint64_t v32 = type metadata accessor for EmptyMatchedTransitionSourceConfiguration();
    uint64_t v33 = &protocol witness table for EmptyMatchedTransitionSourceConfiguration;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v32 = v19;
    uint64_t v33 = (void *)OpaqueTypeConformance2;
    uint64_t v28 = swift_getOpaqueTypeConformance2();
    View.matchedTransitionSource<A, B>(id:in:configuration:)();
    uint64_t v21 = v30;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v12, v16, v30);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = v7;
    uint64_t v33 = &type metadata for String;
    uint64_t v34 = v17;
    unint64_t v35 = v18;
    uint64_t v36 = &protocol witness table for String;
    uint64_t v37 = v28;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v21);
  }
  else
  {
    sub_10006DF38(v4, (uint64_t)v9, &qword_100EB15F8);
    sub_10006DF38((uint64_t)v9, (uint64_t)v12, &qword_100EB15F8);
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = sub_10018C6DC(&qword_100EB1620);
    unint64_t v24 = sub_100B2B020();
    uint64_t v25 = sub_10018C6DC(&qword_100E7CFD0);
    uint64_t v32 = type metadata accessor for EmptyMatchedTransitionSourceConfiguration();
    uint64_t v33 = &protocol witness table for EmptyMatchedTransitionSourceConfiguration;
    uint64_t v26 = swift_getOpaqueTypeConformance2();
    uint64_t v32 = v25;
    uint64_t v33 = (void *)v26;
    uint64_t v27 = swift_getOpaqueTypeConformance2();
    uint64_t v32 = v7;
    uint64_t v33 = &type metadata for String;
    uint64_t v34 = v23;
    unint64_t v35 = v24;
    uint64_t v36 = &protocol witness table for String;
    uint64_t v37 = v27;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_100178110((uint64_t)v9, &qword_100EB15F8);
  }
}

uint64_t sub_100B23E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for MapComponentView(0);
  uint64_t v5 = a2 + v4[5];
  *(void *)uint64_t v5 = swift_getKeyPath();
  *(unsigned char *)(v5 + 8) = 0;
  uint64_t v6 = a2 + v4[6];
  *(void *)uint64_t v6 = swift_getKeyPath();
  *(unsigned char *)(v6 + 8) = 0;
  uint64_t v7 = (uint64_t *)(a2 + v4[7]);
  type metadata accessor for ObservableResolver();
  sub_100B27010((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
  *uint64_t v7 = EnvironmentObject.init()();
  v7[1] = v8;
  unint64_t v9 = (uint64_t *)(a2 + v4[8]);
  *unint64_t v9 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a2 + v4[9];
  *(void *)uint64_t v10 = swift_getKeyPath();
  *(_WORD *)(v10 + 8) = 0;
  uint64_t v11 = a2 + v4[10];
  *(void *)uint64_t v11 = swift_getKeyPath();
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(unsigned char *)(v11 + 72) = 0;
  uint64_t v12 = a2 + v4[11];
  *(void *)uint64_t v12 = swift_getKeyPath();
  *(void *)(v12 + 8) = 0;
  *(_WORD *)(v12 + 16) = 0;
  uint64_t v13 = a2 + v4[12];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v13 = v15;
  *(void *)(v13 + 8) = v16;
  return sub_10021EE3C(a1, a2, (void (*)(void))type metadata accessor for MapComponentViewModel);
}

uint64_t sub_100B23FE8()
{
  type metadata accessor for MapComponentView(0);
  sub_10017DF08(&qword_100EB1660);
  State.wrappedValue.getter();
  if (v1 != 1) {
    return static Color.clear.getter();
  }
  static WeatherMapBackground.backgroundColor(for:)();
  return Color.init(_:)();
}

uint64_t sub_100B24068()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v1 - 8);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for MapComponentViewModel();
  sub_10006DF38(v0 + *(int *)(v10 + 24), v4, &qword_100E63850);
  if (_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5) == 1)
  {
    sub_100178110(v4, &qword_100E63850);
    return Dictionary.init(dictionaryLiteral:)();
  }
  else
  {
    sub_10021EE3C(v4, v9, (void (*)(void))type metadata accessor for WeatherData);
    sub_10017DF08(&qword_100EB1690);
    uint64_t v12 = (int *)(sub_10017DF08(&qword_100EB1698) - 8);
    unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100C251B0;
    char v15 = (uint64_t *)(v14 + v13);
    uint64_t v16 = (uint64_t)v15 + v12[14];
    uint64_t *v15 = Location.id.getter();
    v15[1] = v17;
    sub_100B2B174(v9, v16, (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v11 = Dictionary.init(dictionaryLiteral:)();
    sub_100B295A8(v9, (void (*)(void))type metadata accessor for WeatherData);
  }
  return v11;
}

uint64_t sub_100B242B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v114 = a1;
  uint64_t v113 = sub_10017DF08(&qword_100EB15E8);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v111 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v112 = v7;
  uint64_t v8 = type metadata accessor for MapComponentView(0);
  sub_100179C0C();
  uint64_t v101 = v9;
  __chkstk_darwin(v10);
  uint64_t v102 = v11;
  uint64_t v103 = (uint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ShouldShowMapModifier = type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier(0);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v99 = sub_10017DF08(&qword_100EB15F0);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  uint64_t v100 = sub_10017DF08(&qword_100EB15F8);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100EB1600);
  __chkstk_darwin(v25 - 8);
  sub_100109314();
  uint64_t v107 = v26;
  uint64_t v105 = sub_10017DF08(&qword_100E7A0D0);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v109 = v28;
  uint64_t v29 = sub_10017DF08(&qword_100E7A0D8);
  sub_100162E4C();
  __chkstk_darwin(v30);
  uint64_t v108 = (char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v110 = (uint64_t)&v96 - v33;
  uint64_t v104 = v8;
  uint64_t v34 = *(int *)(v8 + 24);
  uint64_t v106 = v1;
  uint64_t v35 = v1 + v34;
  uint64_t v36 = *(void *)v35;
  LOBYTE(v8) = *(unsigned char *)(v35 + 8);
  sub_100195B7C(*(void *)v35, v8);
  sub_10014E71C();
  int v38 = v37;
  sub_10018F6D8(v36, v8);
  if ((v38 & 0x10000) == 0)
  {
    *(void *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 8) = 0;
    swift_storeEnumTagMultiPayload();
    sub_100B2ADAC();
    return _ConditionalContent<>.init(storage:)();
  }
  uint64_t v97 = v29;
  uint64_t v98 = v5;
  uint64_t v40 = static Color.clear.getter();
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(unsigned char *)(v16 + 72) = 0;
  uint64_t v41 = (uint64_t *)(v16 + *(int *)(ShouldShowMapModifier + 20));
  *uint64_t v41 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = v16 + *(int *)(ShouldShowMapModifier + 24);
  *(void *)uint64_t v42 = swift_getKeyPath();
  *(unsigned char *)(v42 + 8) = 0;
  sub_100B2B174(v16, (uint64_t)v20 + *(int *)(v99 + 36), (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
  *uint64_t v20 = v40;
  sub_100B295A8(v16, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
  uint64_t v43 = v106;
  uint64_t v44 = v103;
  sub_100B2B174(v106, v103, (void (*)(void))type metadata accessor for MapComponentView);
  unint64_t v45 = (*(unsigned __int8 *)(v101 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
  uint64_t v46 = swift_allocObject();
  sub_10021EE3C(v44, v46 + v45, (void (*)(void))type metadata accessor for MapComponentView);
  uint64_t v47 = static Alignment.center.getter();
  uint64_t v49 = v48;
  sub_10006DF38((uint64_t)v20, v24, &qword_100EB15F0);
  uint64_t v50 = *(int *)(v100 + 36);
  uint64_t v103 = v24;
  uint64_t v51 = (void *)(v24 + v50);
  *uint64_t v51 = sub_100B2B63C;
  v51[1] = v46;
  v51[2] = v47;
  v51[3] = v49;
  sub_100178110((uint64_t)v20, &qword_100EB15F0);
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  unint64_t v115 = 0xD000000000000010;
  unint64_t v116 = 0x8000000100CAF480;
  type metadata accessor for MapComponentViewModel();
  v52._uint64_t countAndFlagsBits = Location.id.getter();
  String.append(_:)(v52);
  swift_bridgeObjectRelease();
  v53._uint64_t countAndFlagsBits = 45;
  v53._object = (void *)0xE100000000000000;
  String.append(_:)(v53);
  uint64_t v54 = v104;
  memcpy(__dst, (const void *)(v43 + *(int *)(v104 + 40)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  v55._uint64_t countAndFlagsBits = sub_10007DA60();
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  uint64_t v56 = v115;
  uint64_t v57 = v116;
  uint64_t v58 = v43 + *(int *)(v54 + 36);
  uint64_t v59 = *(void *)v58;
  uint64_t v60 = *(unsigned __int8 *)(v58 + 8);
  LOBYTE(v42) = *(unsigned char *)(v58 + 9);
  sub_100193DD4(*(void *)v58, v60, v42);
  sub_1005D2010();
  uint64_t v62 = v61;
  char v64 = v63;
  sub_10014D82C(v59, v60, v42);
  uint64_t v65 = v43;
  if (v64) {
    uint64_t v62 = Namespace.wrappedValue.getter();
  }
  sub_100B23FE8();
  uint64_t v66 = v107;
  uint64_t v67 = v103;
  sub_100B2399C(v56, v57, v62, v107);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100178110(v67, &qword_100EB15F8);
  char v68 = static Edge.Set.horizontal.getter();
  uint64_t v69 = v65 + *(int *)(v54 + 20);
  uint64_t v70 = *(void *)v69;
  char v71 = *(unsigned char *)(v69 + 8);
  sub_100195B7C(*(void *)v69, v71);
  sub_100149AE8();
  char v73 = v72;
  sub_10018F6D8(v70, v71);
  if (v73)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  if (qword_100E62248 != -1) {
LABEL_10:
  }
    swift_once();
LABEL_9:
  uint64_t v74 = v98;
  EdgeInsets.init(_all:)();
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  uint64_t v80 = v79;
  uint64_t v82 = v81;
  uint64_t v83 = v109;
  sub_10006DF38(v66, v109, &qword_100EB1600);
  uint64_t v84 = v83 + *(int *)(v105 + 36);
  *(unsigned char *)uint64_t v84 = v68;
  *(void *)(v84 + 8) = v76;
  *(void *)(v84 + 16) = v78;
  *(void *)(v84 + 24) = v80;
  *(void *)(v84 + 32) = v82;
  *(unsigned char *)(v84 + 40) = 0;
  sub_100178110(v66, &qword_100EB1600);
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162E4C();
  uint64_t v86 = v112;
  (*(void (**)(uint64_t, uint64_t))(v85 + 16))(v112, v65);
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v87 = (uint64_t)v108;
  sub_10048D650(v86, v88, v89, v90, v91, v92, v93, v94, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
    v107);
  sub_100B295A8(v86, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_100178110(v83, &qword_100E7A0D0);
  uint64_t v95 = v110;
  sub_10024D364(v87, v110, &qword_100E7A0D8);
  sub_10006DF38(v95, v74, &qword_100E7A0D8);
  swift_storeEnumTagMultiPayload();
  sub_100B2ADAC();
  _ConditionalContent<>.init(storage:)();
  return sub_100178110(v95, &qword_100E7A0D8);
}

uint64_t sub_100B24C44@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for MapComponentViewModel();
  __chkstk_darwin(v6);
  uint64_t v97 = (uint64_t)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E81480);
  __chkstk_darwin(v8 - 8);
  uint64_t v93 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WeatherMapDisplayMode();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for WeatherMap();
  uint64_t v98 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v94 = (char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_10017DF08(&qword_100EB1668);
  uint64_t v100 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v96 = (char *)v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EB1670);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v99 = (char *)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_10017DF08(&qword_100EB1678);
  __chkstk_darwin(v95);
  uint64_t v20 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100EB1680);
  __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  if (*a1 == 1)
  {
    uint64_t v86 = v17;
    uint64_t v87 = v16;
    uint64_t v88 = (uint64_t)v80 - v24;
    uint64_t v89 = v25;
    uint64_t v90 = v20;
    uint64_t v91 = v23;
    uint64_t v92 = a3;
    uint64_t v26 = *(int *)(sub_10017DF08(&qword_100E81488) + 48);
    uint64_t v27 = enum case for WeatherMapDisplayMode.SnapshotSizingBehavior.autoSizing(_:);
    uint64_t v28 = type metadata accessor for WeatherMapDisplayMode.SnapshotSizingBehavior();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v13, v27, v28);
    if (qword_100E62458 != -1) {
      swift_once();
    }
    *(void *)&v13[v26] = qword_100F51928;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for WeatherMapDisplayMode.snapshot(_:), v10);
    uint64_t v84 = type metadata accessor for MapComponentView(0);
    uint64_t v29 = a2 + *(int *)(v84 + 44);
    uint64_t v30 = *(void *)v29;
    uint64_t v31 = *(void *)(v29 + 8);
    uint64_t v32 = *(unsigned __int8 *)(v29 + 16);
    char v33 = *(unsigned char *)(v29 + 17);
    sub_10059793C(*(void *)v29, v31, v32, v33);
    sub_1005D21B4();
    uint64_t v83 = v34;
    uint64_t v82 = v35;
    int v81 = v36 & 1;
    sub_100597CD8(v30, v31, v32, v33);
    sub_10017DF08(&qword_100E81490);
    uint64_t v37 = type metadata accessor for Location();
    uint64_t v38 = *(void *)(v37 - 8);
    unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_100C251B0;
    uint64_t v41 = a2 + *(int *)(v6 + 20);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 16))(v40 + v39, v41, v37);
    type metadata accessor for WeatherMapOverlayKind();
    static Binding.constant(_:)();
    uint64_t v114 = Location.id.getter();
    unint64_t v115 = v42;
    sub_10017DF08(&qword_100E65F18);
    static Binding.constant(_:)();
    swift_bridgeObjectRelease();
    v80[1] = v110;
    sub_100B24068();
    type metadata accessor for WeatherData(0);
    type metadata accessor for WeatherDataModel();
    Dictionary.mapKeysAndValues<A, B>(_:)();
    swift_bridgeObjectRelease();
    uint64_t v114 = 0;
    unint64_t v115 = 0xE000000000000000;
    _StringGuts.grow(_:)(22);
    swift_bridgeObjectRelease();
    uint64_t v114 = 0xD000000000000013;
    unint64_t v115 = 0x8000000100CBE0B0;
    uint64_t v85 = v41;
    v43._uint64_t countAndFlagsBits = Location.name.getter();
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    v44._uint64_t countAndFlagsBits = 93;
    v44._object = (void *)0xE100000000000000;
    String.append(_:)(v44);
    uint64_t v45 = v84;
    uint64_t v46 = v94;
    WeatherMap.init(displayMode:preferredMapSize:locations:overlayKind:selectedLocationId:weatherData:options:cacheIdentifier:isPreferredForCachedInstance:debugIdentifier:)();
    uint64_t v47 = *(void *)(a2 + *(int *)(v45 + 28));
    if (v47)
    {
      uint64_t v48 = v97;
      sub_100B2B174(a2, v97, (void (*)(void))type metadata accessor for MapComponentViewModel);
      uint64_t v49 = a2 + *(int *)(v45 + 48);
      char v50 = *(unsigned char *)v49;
      unint64_t v51 = *(void *)(v49 + 8);
      LOBYTE(v114) = v50;
      unint64_t v115 = v51;
      swift_retain();
      sub_10017DF08(&qword_100EB1660);
      State.projectedValue.getter();
      Swift::String v52 = v109;
      uint64_t v53 = v110;
      char v54 = v111;
      uint64_t v55 = type metadata accessor for MapComponentWeatherMapDelegate(0);
      uint64_t v56 = (void *)swift_allocObject();
      v56[5] = type metadata accessor for ObservableResolver();
      v56[6] = &protocol witness table for ObservableResolver;
      v56[2] = v47;
      sub_10021EE3C(v48, (uint64_t)v56+ OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate_model, (void (*)(void))type metadata accessor for MapComponentViewModel);
      uint64_t v57 = (char *)v56
          + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate__loadingState;
      *(void *)uint64_t v57 = v52;
      *((void *)v57 + 1) = v53;
      v57[16] = v54;
      uint64_t v112 = v55;
      uint64_t v113 = sub_100B27010(&qword_100EB1688, (void (*)(uint64_t))type metadata accessor for MapComponentWeatherMapDelegate);
      uint64_t v109 = v56;
      uint64_t v58 = sub_100B27010((unint64_t *)&qword_100E81468, (void (*)(uint64_t))&type metadata accessor for WeatherMap);
      uint64_t v59 = v96;
      uint64_t v60 = v101;
      View.delegate(_:)();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v46, v60);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v109);
      uint64_t v114 = v60;
      unint64_t v115 = v58;
      swift_getOpaqueTypeConformance2();
      uint64_t v61 = v99;
      uint64_t v62 = v102;
      View.systemColorScheme()();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v59, v62);
      static UnitPoint.center.getter();
      uint64_t v63 = static AnyTransition.scale(scale:anchor:)();
      uint64_t v64 = v86;
      uint64_t v65 = (uint64_t)v90;
      uint64_t v66 = v87;
      (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v90, v61, v87);
      *(void *)(v65 + *(int *)(v95 + 36)) = v63;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v66);
      uint64_t v67 = Location.id.getter();
      uint64_t v69 = v68;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v71 = swift_getKeyPath();
      uint64_t v72 = swift_getKeyPath();
      char v108 = 0;
      char v105 = 0;
      char v104 = 0;
      uint64_t v73 = v89;
      sub_10006DF38(v65, v89, &qword_100EB1678);
      uint64_t v74 = v91;
      uint64_t v75 = v73 + *(int *)(v91 + 36);
      *(void *)uint64_t v75 = KeyPath;
      *(unsigned char *)(v75 + 8) = 0;
      *(unsigned char *)(v75 + 9) = v108;
      *(_DWORD *)(v75 + 10) = v106;
      *(_WORD *)(v75 + 14) = v107;
      *(void *)(v75 + 16) = v71;
      *(unsigned char *)(v75 + 24) = v105;
      *(_DWORD *)(v75 + 25) = v114;
      *(_DWORD *)(v75 + 28) = *(_DWORD *)((char *)&v114 + 3);
      *(void *)(v75 + 32) = v72;
      *(_OWORD *)(v75 + 88) = 0u;
      *(_OWORD *)(v75 + 72) = 0u;
      *(_OWORD *)(v75 + 56) = 0u;
      *(_OWORD *)(v75 + 40) = 0u;
      *(unsigned char *)(v75 + 104) = v104;
      *(_DWORD *)(v75 + 108) = *(_DWORD *)&v103[3];
      *(_DWORD *)(v75 + 105) = *(_DWORD *)v103;
      *(void *)(v75 + 112) = v67;
      *(void *)(v75 + 120) = v69;
      sub_100178110(v65, &qword_100EB1678);
      uint64_t v76 = v88;
      sub_10024D364(v73, v88, &qword_100EB1680);
      uint64_t v77 = v76;
      uint64_t v78 = v92;
      sub_10024D364(v77, v92, &qword_100EB1680);
      return _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v74);
    }
    else
    {
      type metadata accessor for ObservableResolver();
      sub_100B27010((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
    }
  }
  else
  {
    return _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v23);
  }
  return result;
}

uint64_t sub_100B25820()
{
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v26 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v25 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t ShouldShowMapModifier = type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier(0);
  __chkstk_darwin(ShouldShowMapModifier);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62668 != -1) {
    swift_once();
  }
  int v18 = byte_100F51C48;
  sub_100B2B174(v0, (uint64_t)v17, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
  if (v18 != 1)
  {
    sub_100B295A8((uint64_t)v17, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
LABEL_11:
    char v21 = 0;
    return v21 & 1;
  }
  sub_10019B2FC();
  uint64_t v19 = v26;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v11, enum case for UserInterfaceSizeClass.compact(_:), v1);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v1);
  uint64_t v20 = (uint64_t)&v5[*(int *)(v3 + 48)];
  sub_10006DF38((uint64_t)v14, (uint64_t)v5, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v11, v20, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v1) != 1)
  {
    sub_10006DF38((uint64_t)v5, (uint64_t)v8, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v1) != 1)
    {
      uint64_t v23 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v25, v20, v1);
      sub_100B27010(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v19 + 8);
      v24(v23, v1);
      sub_100178110((uint64_t)v11, &qword_100E65ED8);
      sub_100178110((uint64_t)v14, &qword_100E65ED8);
      sub_100B295A8((uint64_t)v17, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
      v24(v8, v1);
      sub_100178110((uint64_t)v5, &qword_100E65ED8);
      return v21 & 1;
    }
    sub_100178110((uint64_t)v11, &qword_100E65ED8);
    sub_100178110((uint64_t)v14, &qword_100E65ED8);
    sub_100B295A8((uint64_t)v17, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v1);
    goto LABEL_10;
  }
  sub_100178110((uint64_t)v11, &qword_100E65ED8);
  sub_100178110((uint64_t)v14, &qword_100E65ED8);
  sub_100B295A8((uint64_t)v17, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
  if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v1) != 1)
  {
LABEL_10:
    sub_100178110((uint64_t)v5, &qword_100E662F0);
    goto LABEL_11;
  }
  sub_100178110((uint64_t)v5, &qword_100E65ED8);
  char v21 = 1;
  return v21 & 1;
}

uint64_t sub_100B25D0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t)v2;
  uint64_t ShouldShowMapModifier = type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier(0);
  __chkstk_darwin(ShouldShowMapModifier);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v24[-v10];
  uint64_t v12 = sub_10017DF08(&qword_100EB1748);
  __chkstk_darwin(v12);
  uint64_t v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memcpy(__dst, v2, 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  int v15 = v24[57];
  sub_100B2B174(v3, (uint64_t)v11, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
  if (v15 == 3)
  {
    uint64_t v16 = &v11[*(int *)(ShouldShowMapModifier + 24)];
    uint64_t v17 = *(void *)v16;
    char v18 = v16[8];
    sub_100195B7C(*(void *)v16, v18);
    sub_1000C3D18();
    char v20 = v19;
    sub_10018F6D8(v17, v18);
    sub_100B2B174((uint64_t)v11, (uint64_t)v8, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
    if ((v20 & 0xC0) == 0x40) {
      char v21 = sub_100B25820();
    }
    else {
      char v21 = 1;
    }
    sub_100B295A8((uint64_t)v8, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
  }
  else
  {
    char v21 = 0;
  }
  sub_100B295A8((uint64_t)v11, (void (*)(void))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
  uint64_t v22 = sub_10017DF08(&qword_100EB1750);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v14, a1, v22);
  v14[*(int *)(v12 + 36)] = v21 & 1;
  return sub_10024D364((uint64_t)v14, a2, &qword_100EB1748);
}

void *sub_100B25FB4()
{
  return &unk_100EB1448;
}

char *sub_100B25FC0(char *result, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t v2 = result;
  if (*result)
  {
    char v3 = 1;
  }
  else
  {
    uint64_t result = (char *)a2(&v4);
    char v3 = v4;
  }
  *uint64_t v2 = v3;
  return result;
}

unsigned char *sub_100B26010@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100B25FB4();
  *a1 = *result;
  return result;
}

uint64_t sub_100B26040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100EB1758);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  unint64_t v36 = 0xD000000000000010;
  unint64_t v37 = 0x8000000100CAF480;
  uint64_t v7 = *(void *)(v2 + 112);
  uint64_t v8 = *(void **)(v2 + 120);
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 45;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  memcpy(__dst, (const void *)(v2 + 32), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  v11._uint64_t countAndFlagsBits = sub_10007DA60();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  unint64_t v12 = v36;
  unint64_t v13 = v37;
  uint64_t v14 = *(void *)v2;
  uint64_t v15 = *(unsigned __int8 *)(v2 + 8);
  char v16 = *(unsigned char *)(v2 + 9);
  sub_100193DD4(*(void *)v3, *(unsigned __int8 *)(v3 + 8), *(unsigned char *)(v3 + 9));
  sub_1005D2010();
  uint64_t v18 = v17;
  char v20 = v19;
  sub_10014D82C(v14, v15, v16);
  if (v20) {
    uint64_t v18 = Namespace.wrappedValue.getter();
  }
  uint64_t v21 = *(void *)(v3 + 16);
  char v22 = *(unsigned char *)(v3 + 24);
  sub_100195B7C(v21, v22);
  sub_100149AE8();
  char v24 = v23;
  sub_10018F6D8(v21, v22);
  if (v24) {
    int v25 = static MatchedGeometryProperties.frame.getter();
  }
  else {
    int v25 = 0;
  }
  static UnitPoint.center.getter();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = sub_10017DF08(&qword_100EB1760);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v6, v34, v30);
  uint64_t v31 = &v6[*(int *)(v4 + 36)];
  *(void *)uint64_t v31 = v12;
  *((void *)v31 + 1) = v13;
  *((void *)v31 + 2) = v18;
  *((_DWORD *)v31 + 6) = v25;
  *((void *)v31 + 4) = v27;
  *((void *)v31 + 5) = v29;
  v31[48] = 1;
  return sub_10024D364((uint64_t)v6, v35, &qword_100EB1758);
}

uint64_t sub_100B26300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_100B26040(a1, a2);
}

uint64_t sub_100B26354(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WeatherMap.Event();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_1001AB3E0();
  Swift::String v11 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_100B26FCC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E37CF8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100B27010((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v7, v18);
}

uint64_t sub_100B266F4(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for WeatherMap.Event();
  uint64_t v30 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v28 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for WeatherMapPurpose();
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Location.Identifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(a1 + 16), *(void *)(a1 + 40));
  sub_10017DF08(&qword_100E7CD18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v34)
  {
    sub_1001262E4(&v32, (uint64_t)v35);
    type metadata accessor for MapComponentViewModel();
    Location.identifier.getter();
    uint64_t v13 = Location.Identifier.id.getter();
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1001B1E64(v35, v36);
    *uint64_t v7 = v13;
    v7[1] = v15;
    uint64_t v16 = v27;
    (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for WeatherMapPurpose.snapshot(_:), v27);
    swift_bridgeObjectRetain();
    uint64_t v17 = v29;
    sub_100479018(v29, (uint64_t)v7);
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v16);
    uint64_t v18 = v30;
    uint64_t v19 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v28, v17, v3);
    int v20 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v19, v3);
    if (v20 == enum case for WeatherMap.Event.didFinishLoading(_:))
    {
      (*(void (**)(char *, uint64_t))(v18 + 96))(v19, v3);
      uint64_t v21 = *(void *)(a1
                      + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate__loadingState
                      + 8);
      char v22 = *(unsigned char *)(a1
                     + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate__loadingState
                     + 16);
      if (*v19 == 1)
      {
        *(void *)&long long v32 = *(void *)(a1
                                    + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate__loadingState);
        *((void *)&v32 + 1) = v21;
        char v33 = v22;
        char v23 = 1;
      }
      else
      {
        *(void *)&long long v32 = *(void *)(a1
                                    + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate__loadingState);
        *((void *)&v32 + 1) = v21;
        char v33 = v22;
        char v23 = 2;
      }
      char v31 = v23;
      sub_10017DF08(&qword_100EB1530);
      Binding.wrappedValue.setter();
      sub_1001B1E64(v35, v36);
      sub_100089C4C();
      goto LABEL_9;
    }
    if (v20 == enum case for WeatherMap.Event.overlay(_:))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v3);
      return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
    }
    if (v20 == enum case for WeatherMap.Event.willStartLoading(_:))
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void *)(a1
                      + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate__loadingState
                      + 8);
      char v25 = *(unsigned char *)(a1
                     + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate__loadingState
                     + 16);
      *(void *)&long long v32 = *(void *)(a1
                                  + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate__loadingState);
      *((void *)&v32 + 1) = v24;
      char v33 = v25;
      char v31 = 0;
      sub_10017DF08(&qword_100EB1530);
      Binding.wrappedValue.setter();
      return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
    }
    if (v20 == enum case for WeatherMap.Event.loadingWasInterruptedByUserInteraction(_:))
    {
LABEL_9:
      swift_bridgeObjectRelease();
      return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
    }
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100B26BAC(uint64_t a1, uint64_t a2)
{
  return sub_100418590(a1 + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate_model, a2 + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate_model);
}

uint64_t sub_100B26BC0()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  sub_100B295A8(v0 + OBJC_IVAR____TtC7WeatherP33_C14BAF130D1FBB6553AE19180CC1F33830MapComponentWeatherMapDelegate_model, (void (*)(void))type metadata accessor for MapComponentViewModel);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100B26C28()
{
  sub_100B26BC0();

  return swift_deallocClassInstance();
}

uint64_t sub_100B26C7C()
{
  return type metadata accessor for MapComponentWeatherMapDelegate(0);
}

uint64_t type metadata accessor for MapComponentWeatherMapDelegate(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB1488);
}

uint64_t sub_100B26CA4()
{
  uint64_t result = type metadata accessor for MapComponentViewModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MapComponentLoadingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B26E14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapComponentLoadingState()
{
  return &type metadata for MapComponentLoadingState;
}

unint64_t sub_100B26E50()
{
  unint64_t result = qword_100EB1520;
  if (!qword_100EB1520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1520);
  }
  return result;
}

uint64_t sub_100B26EB0(uint64_t a1)
{
  return sub_100B26354(a1);
}

uint64_t sub_100B26ED4(uint64_t *a1, uint64_t *a2)
{
  return sub_100B26BAC(*a1, *a2);
}

uint64_t sub_100B26EE0()
{
  return sub_100B27010(&qword_100EB1528, (void (*)(uint64_t))type metadata accessor for MapComponentWeatherMapDelegate);
}

uint64_t sub_100B26F28()
{
  uint64_t v1 = type metadata accessor for WeatherMap.Event();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

uint64_t sub_100B26FCC()
{
  uint64_t v1 = type metadata accessor for WeatherMap.Event();
  sub_1001627C0(v1);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_100B266F4(v3, v4);
}

uint64_t sub_100B27010(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100B27088(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    goto LABEL_33;
  }
  unsigned int v6 = a3;
  uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = (int *)type metadata accessor for MapComponentViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (char *)a1 + v9;
  Swift::String v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v16))
  {
    uint64_t v110 = v8;
    int v20 = v6;
    uint64_t v21 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v21;
    uint64_t v22 = v16[5];
    char v23 = (char *)v14 + v22;
    uint64_t v24 = (char *)v15 + v22;
    uint64_t v25 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E63730);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v27 = v16[6];
    uint64_t v28 = (char *)v14 + v27;
    uint64_t v29 = (char *)v15 + v27;
    uint64_t v30 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = v16[7];
    long long v32 = (char *)v14 + v31;
    char v33 = (char *)v15 + v31;
    uint64_t v34 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v36 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
    }
    uint64_t v37 = v16[8];
    uint64_t v38 = (void *)((char *)v14 + v37);
    unint64_t v39 = (void *)((char *)v15 + v37);
    uint64_t v40 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v43 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v38, v39, v43);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v42 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v42;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_17:
    uint64_t v44 = v16[9];
    uint64_t v45 = (char *)v14 + v44;
    uint64_t v46 = (char *)v15 + v44;
    uint64_t v47 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_10017DF08(&qword_100E63740);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
      unsigned int v6 = v20;
      uint64_t v8 = v110;
    }
    else
    {
      uint64_t v49 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v49))
      {
        uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v45, v46, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v49);
      }
      uint64_t v51 = *(int *)(v47 + 20);
      Swift::String v52 = &v45[v51];
      uint64_t v53 = &v46[v51];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v49))
      {
        uint64_t v54 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v52, v53, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v49);
      }
      unsigned int v6 = v20;
      uint64_t v8 = v110;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v16);
    goto LABEL_27;
  }
  uint64_t v17 = sub_10017DF08(&qword_100E63850);
  memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_27:
  uint64_t v55 = v8[7];
  uint64_t v56 = (void *)((char *)a1 + v55);
  uint64_t v57 = (void *)((char *)a2 + v55);
  uint64_t v58 = v57[1];
  *uint64_t v56 = *v57;
  v56[1] = v58;
  uint64_t v59 = v6[5];
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = *(void *)v61;
  char v63 = v61[8];
  swift_bridgeObjectRetain();
  sub_100195B7C(v62, v63);
  *(void *)uint64_t v60 = v62;
  v60[8] = v63;
  uint64_t v64 = v6[6];
  uint64_t v65 = (char *)a1 + v64;
  uint64_t v66 = (char *)a2 + v64;
  uint64_t v67 = *(void *)v66;
  char v68 = v66[8];
  sub_100195B7C(*(void *)v66, v68);
  *(void *)uint64_t v65 = v67;
  v65[8] = v68;
  uint64_t v69 = v6[7];
  uint64_t v70 = v6[8];
  uint64_t v71 = (void *)((char *)a1 + v69);
  uint64_t v72 = (void *)((char *)a2 + v69);
  uint64_t v73 = *v72;
  uint64_t v74 = v72[1];
  *uint64_t v71 = v73;
  v71[1] = v74;
  uint64_t v75 = (void *)((char *)a1 + v70);
  uint64_t v76 = (void *)((char *)a2 + v70);
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v77 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
    {
      uint64_t v78 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
    }
  }
  else
  {
    *uint64_t v75 = *v76;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = v6[9];
  uint64_t v80 = (char *)a1 + v79;
  int v81 = (char *)a2 + v79;
  uint64_t v82 = *(void *)v81;
  char v83 = v81[9];
  unsigned __int8 v84 = v81[8];
  sub_100193DD4(*(void *)v81, v84, v83);
  *(void *)uint64_t v80 = v82;
  v80[8] = v84;
  v80[9] = v83;
  uint64_t v85 = v6[10];
  uint64_t v86 = a2;
  char v108 = v6;
  uint64_t v109 = a2;
  uint64_t v87 = (char *)a1 + v85;
  uint64_t v88 = (char *)v86 + v85;
  uint64_t v89 = *(void *)v88;
  uint64_t v90 = *((void *)v88 + 1);
  uint64_t v91 = *((void *)v88 + 2);
  uint64_t v92 = *((void *)v88 + 3);
  uint64_t v93 = *((void *)v88 + 4);
  uint64_t v94 = *((void *)v88 + 5);
  uint64_t v96 = *((void *)v88 + 6);
  uint64_t v95 = *((void *)v88 + 7);
  uint64_t v111 = a1;
  uint64_t v97 = *((void *)v88 + 8);
  char v107 = v88[72];
  sub_1001910C8(*(void *)v88, v90, v91, v92, v93, v94, v96, v95, v97, v107);
  *(void *)uint64_t v87 = v89;
  *((void *)v87 + 1) = v90;
  *((void *)v87 + 2) = v91;
  *((void *)v87 + 3) = v92;
  *((void *)v87 + 4) = v93;
  *((void *)v87 + 5) = v94;
  *((void *)v87 + 6) = v96;
  *((void *)v87 + 7) = v95;
  *((void *)v87 + 8) = v97;
  v87[72] = v107;
  uint64_t v98 = v108[11];
  uint64_t v99 = (char *)v111 + v98;
  uint64_t v100 = (char *)v109 + v98;
  uint64_t v101 = *(void *)v100;
  uint64_t v102 = *((void *)v100 + 1);
  LOBYTE(v90) = v100[17];
  LOBYTE(v91) = v100[16];
  sub_10059793C(*(void *)v100, v102, v91, v90);
  *(void *)uint64_t v99 = v101;
  *((void *)v99 + 1) = v102;
  v99[16] = v91;
  v99[17] = v90;
  uint64_t v19 = v111;
  uint64_t v103 = v108[12];
  char v104 = (char *)v111 + v103;
  char v105 = (char *)v109 + v103;
  *char v104 = *v105;
  *((void *)v104 + 1) = *((void *)v105 + 1);
LABEL_33:
  swift_retain();
  return v19;
}

uint64_t sub_100B278C8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for MapComponentViewModel();
  uint64_t v6 = a1 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + *(int *)(v5 + 24);
  uint64_t v9 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, (uint64_t)v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + v9[5];
    uint64_t v11 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
    uint64_t v12 = v8 + v9[6];
    uint64_t v13 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = v8 + v9[7];
    uint64_t v15 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
    {
      uint64_t v16 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
    }
    uint64_t v17 = v8 + v9[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v19 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = v8 + v9[9];
    uint64_t v21 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21))
    {
      uint64_t v22 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v22)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
      }
      uint64_t v23 = v20 + *(int *)(v21 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v22)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v23, v22);
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  swift_release();
  uint64_t v24 = a1 + a2[8];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
    }
  }
  else
  {
    swift_release();
  }
  sub_10014D82C(*(void *)(a1 + a2[9]), *(unsigned __int8 *)(a1 + a2[9] + 8), *(unsigned char *)(a1 + a2[9] + 9));
  uint64_t v26 = a1 + a2[10];
  sub_10018CCC4(*(void *)v26, *(void *)(v26 + 8), *(void *)(v26 + 16), *(void *)(v26 + 24), *(void *)(v26 + 32), *(void *)(v26 + 40), *(void *)(v26 + 48), *(void *)(v26 + 56), *(void *)(v26 + 64), *(unsigned char *)(v26 + 72));
  sub_100597CD8(*(void *)(a1 + a2[11]), *(void *)(a1 + a2[11] + 8), *(unsigned __int8 *)(a1 + a2[11] + 16), *(unsigned char *)(a1 + a2[11] + 17));

  return swift_release();
}

uint64_t sub_100B27D28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MapComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63850);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_25;
  }
  int v106 = v7;
  uint64_t v17 = a3;
  uint64_t v18 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v18;
  uint64_t v19 = v15[5];
  uint64_t v20 = (char *)v13 + v19;
  uint64_t v21 = (char *)v14 + v19;
  uint64_t v22 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E63730);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v24 = v15[6];
  uint64_t v25 = (char *)v13 + v24;
  uint64_t v26 = (char *)v14 + v24;
  uint64_t v27 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = v15[7];
  uint64_t v29 = (char *)v13 + v28;
  uint64_t v30 = (char *)v14 + v28;
  uint64_t v31 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  uint64_t v34 = v15[8];
  uint64_t v35 = (void *)((char *)v13 + v34);
  uint64_t v36 = (void *)((char *)v14 + v34);
  uint64_t v37 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v40 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v35, v36, v40);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v39 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v39;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v41 = v15[9];
  uint64_t v42 = (char *)v13 + v41;
  uint64_t v43 = (char *)v14 + v41;
  uint64_t v44 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    uint64_t v45 = sub_10017DF08(&qword_100E63740);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v46))
    {
      uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v42, v43, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v46);
    }
    uint64_t v48 = *(int *)(v44 + 20);
    uint64_t v49 = &v42[v48];
    uint64_t v50 = &v43[v48];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v46))
    {
      uint64_t v51 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v49, v50, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v46);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
  a3 = v17;
  uint64_t v7 = v106;
LABEL_25:
  uint64_t v52 = v7[7];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = a3[5];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  uint64_t v59 = *(void *)v58;
  char v60 = *(unsigned char *)(v58 + 8);
  swift_bridgeObjectRetain();
  sub_100195B7C(v59, v60);
  *(void *)uint64_t v57 = v59;
  *(unsigned char *)(v57 + 8) = v60;
  uint64_t v61 = a3[6];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = *(void *)v63;
  char v65 = *(unsigned char *)(v63 + 8);
  sub_100195B7C(*(void *)v63, v65);
  *(void *)uint64_t v62 = v64;
  *(unsigned char *)(v62 + 8) = v65;
  uint64_t v66 = a3[7];
  uint64_t v67 = a3[8];
  char v68 = (void *)(a1 + v66);
  uint64_t v69 = (uint64_t *)(a2 + v66);
  uint64_t v70 = *v69;
  uint64_t v71 = v69[1];
  *char v68 = v70;
  v68[1] = v71;
  uint64_t v72 = (void *)(a1 + v67);
  uint64_t v73 = (void *)(a2 + v67);
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v74 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
    {
      uint64_t v75 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
    }
  }
  else
  {
    *uint64_t v72 = *v73;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v76 = a3[9];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = a2 + v76;
  uint64_t v79 = *(void *)v78;
  char v80 = *(unsigned char *)(v78 + 9);
  unsigned __int8 v81 = *(unsigned char *)(v78 + 8);
  sub_100193DD4(*(void *)v78, v81, v80);
  *(void *)uint64_t v77 = v79;
  *(unsigned char *)(v77 + 8) = v81;
  *(unsigned char *)(v77 + 9) = v80;
  uint64_t v82 = a3[10];
  uint64_t v83 = a2;
  char v107 = a3;
  uint64_t v108 = a2;
  uint64_t v84 = a1 + v82;
  uint64_t v85 = v83 + v82;
  uint64_t v86 = *(void *)v85;
  uint64_t v87 = *(void *)(v85 + 8);
  uint64_t v88 = *(void *)(v85 + 16);
  uint64_t v89 = *(void *)(v85 + 24);
  uint64_t v90 = *(void *)(v85 + 32);
  uint64_t v91 = *(void *)(v85 + 40);
  uint64_t v93 = *(void *)(v85 + 48);
  uint64_t v92 = *(void *)(v85 + 56);
  uint64_t v105 = a1;
  uint64_t v94 = *(void *)(v85 + 64);
  char v104 = *(unsigned char *)(v85 + 72);
  sub_1001910C8(*(void *)v85, v87, v88, v89, v90, v91, v93, v92, v94, v104);
  *(void *)uint64_t v84 = v86;
  *(void *)(v84 + 8) = v87;
  *(void *)(v84 + 16) = v88;
  *(void *)(v84 + 24) = v89;
  *(void *)(v84 + 32) = v90;
  *(void *)(v84 + 40) = v91;
  *(void *)(v84 + 48) = v93;
  *(void *)(v84 + 56) = v92;
  *(void *)(v84 + 64) = v94;
  *(unsigned char *)(v84 + 72) = v104;
  uint64_t v95 = v107[11];
  uint64_t v96 = v105 + v95;
  uint64_t v97 = v108 + v95;
  uint64_t v98 = *(void *)v97;
  uint64_t v99 = *(void *)(v97 + 8);
  LOBYTE(v87) = *(unsigned char *)(v97 + 17);
  LOBYTE(v88) = *(unsigned char *)(v97 + 16);
  sub_10059793C(*(void *)v97, v99, v88, v87);
  *(void *)uint64_t v96 = v98;
  *(void *)(v96 + 8) = v99;
  *(unsigned char *)(v96 + 16) = v88;
  *(unsigned char *)(v96 + 17) = v87;
  uint64_t v100 = v107[12];
  uint64_t v101 = v105 + v100;
  uint64_t v102 = v108 + v100;
  *(unsigned char *)uint64_t v101 = *(unsigned char *)v102;
  *(void *)(v101 + 8) = *(void *)(v102 + 8);
  swift_retain();
  return v105;
}

uint64_t sub_100B28510(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MapComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v9) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v15);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15);
  if (v9)
  {
    if (!v16)
    {
      uint64_t v177 = v7;
      uint64_t v17 = a3;
      *uint64_t v13 = *v14;
      v13[1] = v14[1];
      uint64_t v18 = v15[5];
      uint64_t v19 = (char *)v13 + v18;
      uint64_t v20 = (char *)v14 + v18;
      uint64_t v21 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E63730);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
      uint64_t v34 = v15[6];
      uint64_t v35 = (char *)v13 + v34;
      uint64_t v36 = (char *)v14 + v34;
      uint64_t v37 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      uint64_t v38 = v15[7];
      uint64_t v39 = (char *)v13 + v38;
      uint64_t v40 = (char *)v14 + v38;
      uint64_t v41 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        uint64_t v43 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v39, v40, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      uint64_t v44 = v15[8];
      uint64_t v45 = (void *)((char *)v13 + v44);
      uint64_t v46 = (void *)((char *)v14 + v44);
      uint64_t v47 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v49 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v45, v46, v49);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
          goto LABEL_23;
        }
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_23:
      uint64_t v50 = v15[9];
      uint64_t v51 = (char *)v13 + v50;
      uint64_t v52 = (char *)v14 + v50;
      uint64_t v53 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
      {
        uint64_t v54 = sub_10017DF08(&qword_100E63740);
        memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        uint64_t v55 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v55))
        {
          uint64_t v56 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v51, v52, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v55);
        }
        uint64_t v75 = *(int *)(v53 + 20);
        uint64_t v76 = &v51[v75];
        uint64_t v77 = &v52[v75];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v55))
        {
          uint64_t v78 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v76, v77, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v55);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v53);
      }
      a3 = v17;
      uint64_t v7 = v177;
      uint64_t v79 = (uint64_t)v13;
      uint64_t v80 = (uint64_t)v15;
      goto LABEL_46;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    sub_100B295A8((uint64_t)v13, (void (*)(void))type metadata accessor for WeatherData);
LABEL_7:
    uint64_t v23 = &qword_100E63850;
LABEL_8:
    size_t v24 = *(void *)(*(void *)(sub_10017DF08(v23) - 8) + 64);
    uint64_t v25 = v13;
    uint64_t v26 = v14;
LABEL_9:
    memcpy(v25, v26, v24);
    goto LABEL_69;
  }
  uint64_t v178 = v7;
  uint64_t v27 = a3;
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = v15[5];
  uint64_t v29 = (char *)v13 + v28;
  uint64_t v30 = (char *)v14 + v28;
  uint64_t v31 = type metadata accessor for Locale();
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  uint64_t v57 = *(void *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v29, v31);
LABEL_29:
    uint64_t v58 = sub_10017DF08(&qword_100E63730);
    memcpy(v29, v30, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v29, v30, v31);
LABEL_30:
  uint64_t v59 = v15[6];
  char v60 = (char *)v13 + v59;
  uint64_t v61 = (char *)v14 + v59;
  uint64_t v62 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 24))(v60, v61, v62);
  uint64_t v63 = v15[7];
  uint64_t v64 = (char *)v13 + v63;
  char v65 = (char *)v14 + v63;
  uint64_t v66 = sub_10017DF08(&qword_100E63738);
  LODWORD(v60) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if (v60)
  {
    if (!v67)
    {
      uint64_t v68 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v64, v65, v68);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v67)
  {
    sub_100178110((uint64_t)v64, &qword_100E63738);
LABEL_35:
    uint64_t v69 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v64, v65, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_36;
  }
  uint64_t v89 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 24))(v64, v65, v89);
LABEL_36:
  a3 = v27;
  if (a1 == a2) {
    goto LABEL_51;
  }
  uint64_t v70 = v15[8];
  uint64_t v71 = (void *)((char *)v13 + v70);
  uint64_t v72 = (void *)((char *)v14 + v70);
  sub_100B295A8((uint64_t)v13 + v70, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v73 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v74 = swift_getEnumCaseMultiPayload();
  if (v74 == 1)
  {
    uint64_t v81 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 16))(v71, v72, v81);
  }
  else
  {
    if (v74)
    {
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      goto LABEL_50;
    }
    *uint64_t v71 = *v72;
    v71[1] = v72[1];
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_50:
  a3 = v27;
LABEL_51:
  uint64_t v82 = v15[9];
  uint64_t v13 = (void *)((char *)v13 + v82);
  uint64_t v14 = (void *)((char *)v14 + v82);
  uint64_t v83 = type metadata accessor for WeatherDataOverrides();
  int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v83);
  int v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v83);
  if (v84)
  {
    if (v85)
    {
      uint64_t v86 = sub_10017DF08(&qword_100E63740);
      memcpy(v13, v14, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      uint64_t v87 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v87))
      {
        uint64_t v88 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v13, v14, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v87 - 8) + 16))(v13, v14, v87);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v87);
      }
      uint64_t v93 = *(int *)(v83 + 20);
      uint64_t v94 = (char *)v13 + v93;
      uint64_t v95 = (char *)v14 + v93;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14 + v93, 1, v87))
      {
        uint64_t v96 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v94, v95, v87);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v87);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v83);
      a3 = v27;
    }
    uint64_t v7 = v178;
    goto LABEL_69;
  }
  uint64_t v7 = v178;
  if (v85)
  {
    sub_100B295A8((uint64_t)v13, (void (*)(void))type metadata accessor for WeatherDataOverrides);
    uint64_t v23 = &qword_100E63740;
    goto LABEL_8;
  }
  uint64_t v90 = type metadata accessor for Date();
  int v91 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v90);
  int v92 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v90);
  if (v91)
  {
    if (!v92)
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v90 - 8) + 16))(v13, v14, v90);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v90);
      goto LABEL_80;
    }
    goto LABEL_79;
  }
  uint64_t v167 = *(void *)(v90 - 8);
  if (v92)
  {
    (*(void (**)(void *, uint64_t))(v167 + 8))(v13, v90);
LABEL_79:
    uint64_t v168 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v168 - 8) + 64));
    goto LABEL_80;
  }
  (*(void (**)(void *, void *, uint64_t))(v167 + 24))(v13, v14, v90);
LABEL_80:
  uint64_t v169 = *(int *)(v83 + 20);
  uint64_t v170 = (uint64_t)v13 + v169;
  uint64_t v171 = (uint64_t)v14 + v169;
  int v172 = _s7Weather24LocationCompositionStateOwet_0(v170, 1, v90);
  int v173 = _s7Weather24LocationCompositionStateOwet_0(v171, 1, v90);
  if (v172)
  {
    if (!v173)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 16))(v170, v171, v90);
      uint64_t v79 = v170;
      uint64_t v80 = v90;
LABEL_46:
      _s7Weather24LocationCompositionStateOwst_0(v79, 0, 1, v80);
      goto LABEL_69;
    }
    goto LABEL_85;
  }
  uint64_t v174 = *(void *)(v90 - 8);
  if (v173)
  {
    (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v170, v90);
LABEL_85:
    size_t v24 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v25 = (void *)v170;
    uint64_t v26 = (const void *)v171;
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v174 + 24))(v170, v171, v90);
LABEL_69:
  uint64_t v97 = v7[7];
  uint64_t v98 = (void *)(a1 + v97);
  uint64_t v99 = (void *)(a2 + v97);
  void *v98 = *v99;
  v98[1] = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v100 = a3[5];
  uint64_t v101 = a1 + v100;
  uint64_t v102 = a2 + v100;
  uint64_t v103 = *(void *)v102;
  char v104 = *(unsigned char *)(v102 + 8);
  sub_100195B7C(*(void *)v102, v104);
  uint64_t v105 = *(void *)v101;
  char v106 = *(unsigned char *)(v101 + 8);
  *(void *)uint64_t v101 = v103;
  *(unsigned char *)(v101 + 8) = v104;
  sub_10018F6D8(v105, v106);
  uint64_t v107 = a3[6];
  uint64_t v108 = a1 + v107;
  uint64_t v109 = a2 + v107;
  uint64_t v110 = *(void *)v109;
  char v111 = *(unsigned char *)(v109 + 8);
  sub_100195B7C(*(void *)v109, v111);
  uint64_t v112 = *(void *)v108;
  char v113 = *(unsigned char *)(v108 + 8);
  *(void *)uint64_t v108 = v110;
  *(unsigned char *)(v108 + 8) = v111;
  sub_10018F6D8(v112, v113);
  uint64_t v114 = a3[7];
  uint64_t v115 = a1 + v114;
  uint64_t v116 = a2 + v114;
  *(void *)(a1 + v114) = *(void *)(a2 + v114);
  swift_retain();
  swift_release();
  *(void *)(v115 + 8) = *(void *)(v116 + 8);
  if (a1 != a2)
  {
    uint64_t v117 = a3[8];
    uint64_t v118 = (void *)(a1 + v117);
    uint64_t v119 = (void *)(a2 + v117);
    sub_100178110(a1 + v117, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v120 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
      {
        uint64_t v121 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
      }
    }
    else
    {
      *uint64_t v118 = *v119;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v122 = a3[9];
  uint64_t v123 = a1 + v122;
  uint64_t v124 = a2 + v122;
  uint64_t v125 = *(void *)v124;
  char v126 = *(unsigned char *)(v124 + 9);
  unsigned __int8 v127 = *(unsigned char *)(v124 + 8);
  sub_100193DD4(*(void *)v124, v127, v126);
  uint64_t v128 = *(void *)v123;
  char v129 = *(unsigned char *)(v123 + 9);
  *(void *)uint64_t v123 = v125;
  uint64_t v130 = *(unsigned __int8 *)(v123 + 8);
  *(unsigned char *)(v123 + 8) = v127;
  *(unsigned char *)(v123 + 9) = v126;
  sub_10014D82C(v128, v130, v129);
  uint64_t v131 = a3[10];
  uint64_t v132 = a2;
  uint64_t v179 = a3;
  uint64_t v180 = a2;
  uint64_t v133 = a1 + v131;
  uint64_t v134 = v132 + v131;
  uint64_t v135 = *(void *)v134;
  uint64_t v136 = *(void *)(v134 + 8);
  uint64_t v137 = *(void *)(v134 + 16);
  uint64_t v138 = *(void *)(v134 + 24);
  uint64_t v139 = *(void *)(v134 + 32);
  uint64_t v140 = *(void *)(v134 + 40);
  uint64_t v142 = *(void *)(v134 + 48);
  uint64_t v141 = *(void *)(v134 + 56);
  uint64_t v176 = a1;
  uint64_t v143 = *(void *)(v134 + 64);
  char v175 = *(unsigned char *)(v134 + 72);
  sub_1001910C8(*(void *)v134, v136, v137, v138, v139, v140, v142, v141, v143, v175);
  uint64_t v144 = *(void *)v133;
  uint64_t v145 = *(void *)(v133 + 8);
  uint64_t v146 = *(void *)(v133 + 16);
  uint64_t v147 = *(void *)(v133 + 24);
  uint64_t v148 = *(void *)(v133 + 32);
  uint64_t v149 = *(void *)(v133 + 40);
  uint64_t v150 = *(void *)(v133 + 48);
  uint64_t v151 = *(void *)(v133 + 56);
  uint64_t v152 = *(void *)(v133 + 64);
  char v153 = *(unsigned char *)(v133 + 72);
  *(void *)uint64_t v133 = v135;
  *(void *)(v133 + 8) = v136;
  *(void *)(v133 + 16) = v137;
  *(void *)(v133 + 24) = v138;
  *(void *)(v133 + 32) = v139;
  *(void *)(v133 + 40) = v140;
  *(void *)(v133 + 48) = v142;
  *(void *)(v133 + 56) = v141;
  *(void *)(v133 + 64) = v143;
  *(unsigned char *)(v133 + 72) = v175;
  sub_10018CCC4(v144, v145, v146, v147, v148, v149, v150, v151, v152, v153);
  uint64_t v154 = v179[11];
  uint64_t v155 = v176 + v154;
  uint64_t v156 = v180 + v154;
  uint64_t v157 = *(void *)v156;
  uint64_t v158 = *(void *)(v156 + 8);
  LOBYTE(v136) = *(unsigned char *)(v156 + 17);
  LOBYTE(v137) = *(unsigned char *)(v156 + 16);
  sub_10059793C(*(void *)v156, v158, v137, v136);
  uint64_t v159 = *(void *)v155;
  uint64_t v160 = *(void *)(v155 + 8);
  char v161 = *(unsigned char *)(v155 + 17);
  *(void *)uint64_t v155 = v157;
  *(void *)(v155 + 8) = v158;
  uint64_t v162 = *(unsigned __int8 *)(v155 + 16);
  *(unsigned char *)(v155 + 16) = v137;
  *(unsigned char *)(v155 + 17) = v136;
  sub_100597CD8(v159, v160, v162, v161);
  uint64_t v163 = v179[12];
  uint64_t v164 = v176 + v163;
  uint64_t v165 = v180 + v163;
  *(unsigned char *)uint64_t v164 = *(unsigned char *)v165;
  *(void *)(v164 + 8) = *(void *)(v165 + 8);
  swift_retain();
  swift_release();
  return v176;
}

uint64_t sub_100B295A8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100B295FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MapComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63850);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v17 = v15[5];
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = (char *)v14 + v17;
    uint64_t v20 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_10017DF08(&qword_100E63730);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
    }
    uint64_t v22 = v15[6];
    uint64_t v23 = (char *)v13 + v22;
    size_t v24 = (char *)v14 + v22;
    uint64_t v25 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    uint64_t v26 = v15[7];
    uint64_t v27 = (char *)v13 + v26;
    uint64_t v28 = (char *)v14 + v26;
    uint64_t v29 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
    {
      uint64_t v30 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v27, v28, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
    }
    uint64_t v32 = v15[8];
    int v33 = (char *)v13 + v32;
    uint64_t v34 = (char *)v14 + v32;
    uint64_t v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    uint64_t v37 = v15[9];
    uint64_t v38 = (char *)v13 + v37;
    uint64_t v39 = (char *)v14 + v37;
    uint64_t v40 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
    {
      uint64_t v41 = sub_10017DF08(&qword_100E63740);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      uint64_t v42 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v42))
      {
        uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v38, v39, v42);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v42);
      }
      uint64_t v44 = *(int *)(v40 + 20);
      __dst = &v38[v44];
      uint64_t v45 = &v39[v44];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v42))
      {
        uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(__dst, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(__dst, v45, v42);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v42);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
  }
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v47 = a3[5];
  uint64_t v48 = a3[6];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
  *(void *)uint64_t v49 = *(void *)v50;
  uint64_t v51 = a1 + v48;
  uint64_t v52 = a2 + v48;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  *(void *)uint64_t v51 = *(void *)v52;
  uint64_t v53 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (const void *)(a2 + v53);
  uint64_t v56 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v57 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v57))
    {
      uint64_t v58 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v57 - 8) + 32))(v54, v55, v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v57);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  uint64_t v59 = a3[9];
  uint64_t v60 = a3[10];
  uint64_t v61 = a1 + v59;
  uint64_t v62 = a2 + v59;
  *(void *)uint64_t v61 = *(void *)v62;
  *(_WORD *)(v61 + 8) = *(_WORD *)(v62 + 8);
  memcpy((void *)(a1 + v60), (const void *)(a2 + v60), 0x49uLL);
  uint64_t v63 = a3[11];
  uint64_t v64 = a3[12];
  uint64_t v65 = a1 + v63;
  uint64_t v66 = a2 + v63;
  *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
  *(_WORD *)(v65 + 16) = *(_WORD *)(v66 + 16);
  *(_OWORD *)(a1 + v64) = *(_OWORD *)(a2 + v64);
  return a1;
}

uint64_t sub_100B29CC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MapComponentViewModel();
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v9) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v15);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15);
  if (v9)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      uint64_t v17 = v15[5];
      uint64_t v18 = &v13[v17];
      uint64_t v19 = &v14[v17];
      uint64_t v20 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_10017DF08(&qword_100E63730);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v33 = v15[6];
      uint64_t v34 = &v13[v33];
      uint64_t v35 = &v14[v33];
      uint64_t v36 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      uint64_t v37 = v15[7];
      uint64_t v38 = &v13[v37];
      uint64_t v39 = &v14[v37];
      uint64_t v40 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        uint64_t v42 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v38, v39, v42);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v43 = v15[8];
      uint64_t v44 = &v13[v43];
      uint64_t v45 = &v14[v43];
      uint64_t v46 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v47 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      uint64_t v48 = v15[9];
      uint64_t v49 = &v13[v48];
      uint64_t v50 = &v14[v48];
      uint64_t v51 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
      {
        size_t v52 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
        uint64_t v53 = v49;
        uint64_t v54 = v50;
LABEL_22:
        memcpy(v53, v54, v52);
LABEL_51:
        uint64_t v86 = (uint64_t)v13;
        uint64_t v87 = (uint64_t)v15;
LABEL_52:
        _s7Weather24LocationCompositionStateOwst_0(v86, 0, 1, v87);
        goto LABEL_53;
      }
      uint64_t v168 = v7;
      uint64_t v55 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v55))
      {
        uint64_t v56 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v49, v50, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v49, v50, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v55);
      }
      uint64_t v80 = *(int *)(v51 + 20);
      uint64_t v81 = &v49[v80];
      uint64_t v82 = &v50[v80];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v55))
      {
        uint64_t v83 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v81, v82, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v55);
      }
      uint64_t v7 = v168;
      uint64_t v84 = (uint64_t)v49;
      uint64_t v85 = v51;
      goto LABEL_50;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    sub_100B295A8((uint64_t)v13, (void (*)(void))type metadata accessor for WeatherData);
LABEL_7:
    uint64_t v22 = &qword_100E63850;
LABEL_8:
    size_t v23 = *(void *)(*(void *)(sub_10017DF08(v22) - 8) + 64);
    size_t v24 = v13;
    uint64_t v25 = v14;
LABEL_9:
    memcpy(v24, v25, v23);
    goto LABEL_53;
  }
  uint64_t v167 = v7;
  uint64_t v26 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = v15[5];
  uint64_t v28 = &v13[v27];
  uint64_t v29 = &v14[v27];
  uint64_t v30 = type metadata accessor for Locale();
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v57 = *(void *)(v30 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v30);
LABEL_27:
    uint64_t v58 = sub_10017DF08(&qword_100E63730);
    memcpy(v28, v29, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 40))(v28, v29, v30);
LABEL_28:
  uint64_t v59 = v15[6];
  uint64_t v60 = &v13[v59];
  uint64_t v61 = &v14[v59];
  uint64_t v62 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = v15[7];
  uint64_t v64 = &v13[v63];
  uint64_t v65 = &v14[v63];
  uint64_t v66 = sub_10017DF08(&qword_100E63738);
  LODWORD(v60) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if (v60)
  {
    if (!v67)
    {
      uint64_t v68 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v64, v65, v68);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v67)
  {
    sub_100178110((uint64_t)v64, &qword_100E63738);
LABEL_33:
    uint64_t v69 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v64, v65, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_34;
  }
  uint64_t v152 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 40))(v64, v65, v152);
LABEL_34:
  uint64_t v7 = v167;
  if (a1 != a2)
  {
    uint64_t v70 = v15[8];
    uint64_t v71 = &v13[v70];
    uint64_t v72 = &v14[v70];
    sub_100B295A8((uint64_t)&v13[v70], (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v73 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v74 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v71, v72, v74);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
  }
  uint64_t v75 = v15[9];
  v13 += v75;
  v14 += v75;
  uint64_t v15 = (int *)type metadata accessor for WeatherDataOverrides();
  int v76 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v15);
  int v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15);
  if (v76)
  {
    if (!v77)
    {
      uint64_t v78 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v78))
      {
        uint64_t v79 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v13, v14, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v13, v14, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v78);
      }
      uint64_t v156 = v15[5];
      uint64_t v157 = &v13[v156];
      uint64_t v158 = &v14[v156];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v14[v156], 1, v78))
      {
        size_t v52 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
        uint64_t v53 = v157;
        uint64_t v54 = v158;
        goto LABEL_22;
      }
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v157, v158, v78);
      uint64_t v84 = (uint64_t)v157;
      uint64_t v85 = v78;
LABEL_50:
      _s7Weather24LocationCompositionStateOwst_0(v84, 0, 1, v85);
      goto LABEL_51;
    }
    goto LABEL_44;
  }
  if (v77)
  {
    sub_100B295A8((uint64_t)v13, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_44:
    uint64_t v22 = &qword_100E63740;
    goto LABEL_8;
  }
  uint64_t v153 = type metadata accessor for Date();
  int v154 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v153);
  int v155 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v153);
  if (v154)
  {
    if (!v155)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v13, v14, v153);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v153);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  uint64_t v159 = *(void *)(v153 - 8);
  if (v155)
  {
    (*(void (**)(char *, uint64_t))(v159 + 8))(v13, v153);
LABEL_72:
    uint64_t v160 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v160 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v159 + 40))(v13, v14, v153);
LABEL_73:
  uint64_t v161 = v15[5];
  uint64_t v162 = (uint64_t)&v13[v161];
  uint64_t v163 = (uint64_t)&v14[v161];
  int v164 = _s7Weather24LocationCompositionStateOwet_0(v162, 1, v153);
  int v165 = _s7Weather24LocationCompositionStateOwet_0(v163, 1, v153);
  if (v164)
  {
    if (!v165)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 32))(v162, v163, v153);
      uint64_t v86 = v162;
      uint64_t v87 = v153;
      goto LABEL_52;
    }
    goto LABEL_78;
  }
  uint64_t v166 = *(void *)(v153 - 8);
  if (v165)
  {
    (*(void (**)(uint64_t, uint64_t))(v166 + 8))(v162, v153);
LABEL_78:
    size_t v23 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    size_t v24 = (void *)v162;
    uint64_t v25 = (const void *)v163;
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 40))(v162, v163, v153);
LABEL_53:
  uint64_t v88 = v7[7];
  uint64_t v89 = (void *)(a1 + v88);
  uint64_t v90 = (uint64_t *)(a2 + v88);
  uint64_t v92 = *v90;
  uint64_t v91 = v90[1];
  void *v89 = v92;
  v89[1] = v91;
  swift_bridgeObjectRelease();
  uint64_t v93 = a3[5];
  uint64_t v94 = a1 + v93;
  uint64_t v95 = (uint64_t *)(a2 + v93);
  uint64_t v96 = *v95;
  LOBYTE(v95) = *((unsigned char *)v95 + 8);
  uint64_t v97 = *(void *)v94;
  char v98 = *(unsigned char *)(v94 + 8);
  *(void *)uint64_t v94 = v96;
  *(unsigned char *)(v94 + 8) = (_BYTE)v95;
  sub_10018F6D8(v97, v98);
  uint64_t v99 = a3[6];
  uint64_t v100 = a1 + v99;
  uint64_t v101 = (uint64_t *)(a2 + v99);
  uint64_t v102 = *v101;
  LOBYTE(v101) = *((unsigned char *)v101 + 8);
  uint64_t v103 = *(void *)v100;
  char v104 = *(unsigned char *)(v100 + 8);
  *(void *)uint64_t v100 = v102;
  *(unsigned char *)(v100 + 8) = (_BYTE)v101;
  sub_10018F6D8(v103, v104);
  uint64_t v105 = a3[7];
  uint64_t v106 = a1 + v105;
  uint64_t v107 = a2 + v105;
  *(void *)(a1 + v105) = *(void *)(a2 + v105);
  swift_release();
  *(void *)(v106 + 8) = *(void *)(v107 + 8);
  if (a1 != a2)
  {
    uint64_t v108 = a3[8];
    uint64_t v109 = (void *)(a1 + v108);
    uint64_t v110 = (const void *)(a2 + v108);
    sub_100178110(a1 + v108, (uint64_t *)&unk_100EAA560);
    uint64_t v111 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v112 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, v112))
      {
        uint64_t v113 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v112 - 8) + 32))(v109, v110, v112);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, v112);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
    }
  }
  uint64_t v114 = a3[9];
  uint64_t v115 = a1 + v114;
  uint64_t v116 = (uint64_t *)(a2 + v114);
  uint64_t v117 = *v116;
  char v118 = *((unsigned char *)v116 + 8);
  LOBYTE(v116) = *((unsigned char *)v116 + 9);
  uint64_t v119 = *(void *)v115;
  char v120 = *(unsigned char *)(v115 + 9);
  *(void *)uint64_t v115 = v117;
  uint64_t v121 = *(unsigned __int8 *)(v115 + 8);
  *(unsigned char *)(v115 + 8) = v118;
  *(unsigned char *)(v115 + 9) = (_BYTE)v116;
  sub_10014D82C(v119, v121, v120);
  uint64_t v122 = a3[10];
  uint64_t v123 = a1 + v122;
  uint64_t v124 = a2 + v122;
  uint64_t v125 = *(void *)(v124 + 64);
  char v126 = *(unsigned char *)(v124 + 72);
  uint64_t v127 = *(void *)v123;
  uint64_t v128 = *(void *)(v123 + 8);
  uint64_t v129 = *(void *)(v123 + 16);
  uint64_t v130 = *(void *)(v123 + 24);
  uint64_t v131 = *(void *)(v123 + 32);
  uint64_t v132 = *(void *)(v123 + 40);
  uint64_t v133 = *(void *)(v123 + 48);
  uint64_t v134 = *(void *)(v123 + 56);
  uint64_t v135 = *(void *)(v123 + 64);
  char v136 = *(unsigned char *)(v123 + 72);
  long long v137 = *(_OWORD *)(v124 + 16);
  *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
  *(_OWORD *)(v123 + 16) = v137;
  long long v138 = *(_OWORD *)(v124 + 48);
  *(_OWORD *)(v123 + 32) = *(_OWORD *)(v124 + 32);
  *(_OWORD *)(v123 + 48) = v138;
  *(void *)(v123 + 64) = v125;
  *(unsigned char *)(v123 + 72) = v126;
  sub_10018CCC4(v127, v128, v129, v130, v131, v132, v133, v134, v135, v136);
  uint64_t v139 = a3[11];
  uint64_t v140 = a1 + v139;
  uint64_t v141 = a2 + v139;
  char v142 = *(unsigned char *)(v141 + 16);
  char v143 = *(unsigned char *)(v141 + 17);
  uint64_t v144 = *(void *)v140;
  uint64_t v145 = *(void *)(v140 + 8);
  char v146 = *(unsigned char *)(v140 + 17);
  *(_OWORD *)uint64_t v140 = *(_OWORD *)v141;
  uint64_t v147 = *(unsigned __int8 *)(v140 + 16);
  *(unsigned char *)(v140 + 16) = v142;
  *(unsigned char *)(v140 + 17) = v143;
  sub_100597CD8(v144, v145, v147, v146);
  uint64_t v148 = a3[12];
  uint64_t v149 = a1 + v148;
  uint64_t v150 = a2 + v148;
  *(unsigned char *)uint64_t v149 = *(unsigned char *)v150;
  *(void *)(v149 + 8) = *(void *)(v150 + 8);
  swift_release();
  return a1;
}

uint64_t sub_100B2ABD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B2ABEC);
}

uint64_t sub_100B2ABEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MapComponentViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_10:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 2147483646)
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    goto LABEL_10;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  int v11 = v10 - 1;
  if (v11 < 0) {
    int v11 = -1;
  }
  return (v11 + 1);
}

uint64_t sub_100B2ACAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B2ACC0);
}

void sub_100B2ACC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for MapComponentViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = a2;
      return;
    }
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v11 = a1 + *(int *)(a4 + 32);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100B2AD70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB16F8);
}

unint64_t sub_100B2ADAC()
{
  unint64_t result = qword_100EB1608;
  if (!qword_100EB1608)
  {
    sub_10018C6DC(&qword_100E7A0D8);
    sub_100B2AE58();
    sub_100B27010((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1608);
  }
  return result;
}

unint64_t sub_100B2AE58()
{
  unint64_t result = qword_100EB1610;
  if (!qword_100EB1610)
  {
    sub_10018C6DC(&qword_100E7A0D0);
    sub_100B2AED4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1610);
  }
  return result;
}

unint64_t sub_100B2AED4()
{
  unint64_t result = qword_100EB1618;
  if (!qword_100EB1618)
  {
    sub_10018C6DC(&qword_100EB1600);
    sub_10018C6DC(&qword_100EB15F8);
    sub_10018C6DC(&qword_100EB1620);
    sub_100B2B020();
    sub_10018C6DC(&qword_100E7CFD0);
    type metadata accessor for EmptyMatchedTransitionSourceConfiguration();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1618);
  }
  return result;
}

unint64_t sub_100B2B020()
{
  unint64_t result = qword_100EB1628;
  if (!qword_100EB1628)
  {
    sub_10018C6DC(&qword_100EB15F8);
    sub_100B2B0C0();
    sub_1001246C8(&qword_100EB1640, &qword_100EB1648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1628);
  }
  return result;
}

unint64_t sub_100B2B0C0()
{
  unint64_t result = qword_100EB1630;
  if (!qword_100EB1630)
  {
    sub_10018C6DC(&qword_100EB15F0);
    sub_100B27010(&qword_100EB1638, (void (*)(uint64_t))type metadata accessor for DetermineWhetherMapComponentShouldShowMapModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1630);
  }
  return result;
}

uint64_t sub_100B2B174(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100B2B1C8()
{
  uint64_t v1 = (int *)type metadata accessor for MapComponentView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162E4C();
  sub_100162F0C();
  v3();
  uint64_t v4 = type metadata accessor for MapComponentViewModel();
  type metadata accessor for Location();
  sub_100162E4C();
  sub_100162F0C();
  v5();
  uint64_t v6 = v2 + *(int *)(v4 + 24);
  uint64_t v7 = (int *)type metadata accessor for WeatherData(0);
  if (!sub_100181B70())
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[5];
    uint64_t v9 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    type metadata accessor for WeatherDataModel();
    sub_100162E4C();
    sub_100162F0C();
    v11();
    uint64_t v12 = v6 + v7[7];
    uint64_t v13 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
    {
      type metadata accessor for Date();
      sub_100162E4C();
      (*(void (**)(uint64_t))(v14 + 8))(v12);
    }
    uint64_t v15 = v6 + v7[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for WeatherStatisticsModel();
      sub_100162E4C();
      (*(void (**)(uint64_t))(v17 + 8))(v15);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = v6 + v7[9];
    uint64_t v19 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
    {
      uint64_t v20 = type metadata accessor for Date();
      if (!sub_100181B70())
      {
        sub_100162880();
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
      }
      uint64_t v22 = v18 + *(int *)(v19 + 20);
      if (!sub_100181B70())
      {
        sub_100162880();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v20);
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(v2 + v1[5]), *(unsigned char *)(v2 + v1[5] + 8));
  sub_10018F6D8(*(void *)(v2 + v1[6]), *(unsigned char *)(v2 + v1[6] + 8));
  swift_release();
  uint64_t v24 = v2 + v1[8];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25))
    {
      sub_100162880();
      sub_100162F0C();
      v26();
    }
  }
  else
  {
    swift_release();
  }
  sub_10014D82C(*(void *)(v2 + v1[9]), *(unsigned __int8 *)(v2 + v1[9] + 8), *(unsigned char *)(v2 + v1[9] + 9));
  uint64_t v27 = v2 + v1[10];
  sub_10018CCC4(*(void *)v27, *(void *)(v27 + 8), *(void *)(v27 + 16), *(void *)(v27 + 24), *(void *)(v27 + 32), *(void *)(v27 + 40), *(void *)(v27 + 48), *(void *)(v27 + 56), *(void *)(v27 + 64), *(unsigned char *)(v27 + 72));
  sub_100597CD8(*(void *)(v2 + v1[11]), *(void *)(v2 + v1[11] + 8), *(unsigned __int8 *)(v2 + v1[11] + 16), *(unsigned char *)(v2 + v1[11] + 17));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B2B63C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for MapComponentView(0);
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100B24C44(a1, v7, a2);
}

uint64_t sub_100B2B69C()
{
  return sub_1004F118C(*(double *)(v0 + 16));
}

uint64_t destroy for MapComponentMatchedGeometryEffectViewModifier(uint64_t a1)
{
  sub_10014D82C(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(unsigned char *)(a1 + 9));
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_10018CCC4(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MapComponentMatchedGeometryEffectViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 8);
  sub_100193DD4(*(void *)a2, v6, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 9) = v5;
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v7, v8);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a2 + 88);
  uint64_t v19 = *(void *)(a2 + 96);
  char v20 = *(unsigned char *)(a2 + 104);
  sub_1001910C8(v9, v10, v11, v12, v13, v14, v15, v16, v19, v20);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v19;
  *(unsigned char *)(a1 + 104) = v20;
  uint64_t v17 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v17;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MapComponentMatchedGeometryEffectViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 8);
  sub_100193DD4(*(void *)a2, v6, v5);
  uint64_t v7 = *(void *)a1;
  char v8 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = v4;
  uint64_t v9 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 9) = v5;
  sub_10014D82C(v7, v9, v8);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_10018F6D8(v12, v13);
  uint64_t v14 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 40);
  uint64_t v16 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  uint64_t v18 = *(void *)(a2 + 64);
  uint64_t v19 = *(void *)(a2 + 72);
  uint64_t v20 = *(void *)(a2 + 80);
  uint64_t v21 = *(void *)(a2 + 88);
  uint64_t v33 = *(void *)(a2 + 96);
  char v34 = *(unsigned char *)(a2 + 104);
  sub_1001910C8(v14, v15, v16, v17, v18, v19, v20, v21, v33, v34);
  uint64_t v22 = *(void *)(a1 + 32);
  uint64_t v23 = *(void *)(a1 + 40);
  uint64_t v24 = *(void *)(a1 + 48);
  uint64_t v25 = *(void *)(a1 + 56);
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v27 = *(void *)(a1 + 72);
  uint64_t v28 = *(void *)(a1 + 80);
  uint64_t v29 = *(void *)(a1 + 88);
  uint64_t v30 = *(void *)(a1 + 96);
  char v31 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = v19;
  *(void *)(a1 + 80) = v20;
  *(void *)(a1 + 88) = v21;
  *(void *)(a1 + 96) = v33;
  *(unsigned char *)(a1 + 104) = v34;
  sub_10018CCC4(v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MapComponentMatchedGeometryEffectViewModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = *(void *)a2;
  uint64_t v8 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 9) = v5;
  sub_10014D82C(v6, v8, v7);
  char v9 = *(unsigned char *)(a2 + 24);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v9;
  sub_10018F6D8(v10, v11);
  uint64_t v12 = *(void *)(a2 + 96);
  char v13 = *(unsigned char *)(a2 + 104);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  uint64_t v21 = *(void *)(a1 + 88);
  uint64_t v22 = *(void *)(a1 + 96);
  char v23 = *(unsigned char *)(a1 + 104);
  long long v24 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v24;
  long long v25 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v25;
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  sub_10018CCC4(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v26 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MapComponentMatchedGeometryEffectViewModifier(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 120);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MapComponentMatchedGeometryEffectViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 120) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapComponentMatchedGeometryEffectViewModifier()
{
  return &type metadata for MapComponentMatchedGeometryEffectViewModifier;
}

ValueMetadata *type metadata accessor for IsMapComponentMapVisiblePreferenceKey()
{
  return &type metadata for IsMapComponentMapVisiblePreferenceKey;
}

unint64_t sub_100B2BB20(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v26 = *(void *)(a2 + 64);
    char v27 = *(unsigned char *)(a2 + 72);
    sub_1001910C8(*(void *)a2, v7, v8, v9, v10, v11, v13, v12, v26, v27);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v26;
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    *(unsigned char *)(a1 + 72) = v27;
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = *(int *)(a3 + 24);
    uint64_t v21 = a1 + v20;
    uint64_t v22 = a2 + v20;
    uint64_t v23 = *(void *)v22;
    char v24 = *(unsigned char *)(v22 + 8);
    sub_100195B7C(*(void *)v22, v24);
    *(void *)uint64_t v21 = v23;
    *(unsigned char *)(v21 + 8) = v24;
  }
  return a1;
}

uint64_t sub_100B2BD50(uint64_t a1, uint64_t a2)
{
  sub_10018CCC4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_10018F6D8(v7, v8);
}

uint64_t sub_100B2BE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v24 = *(void *)(a2 + 64);
  char v25 = *(unsigned char *)(a2 + 72);
  sub_1001910C8(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v24, v25);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v24;
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *(unsigned char *)(a1 + 72) = v25;
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_100195B7C(*(void *)v20, v22);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  return a1;
}

uint64_t sub_100B2C02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v36 = *(void *)(a2 + 64);
  char v37 = *(unsigned char *)(a2 + 72);
  sub_1001910C8(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v36, v37);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 64);
  char v22 = *(unsigned char *)(a1 + 72);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v36;
  *(unsigned char *)(a1 + 72) = v37;
  sub_10018CCC4(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = *(int *)(a3 + 20);
    uint64_t v24 = (void *)(a1 + v23);
    char v25 = (void *)(a2 + v23);
    sub_100178110(a1 + v23, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      }
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = *(int *)(a3 + 24);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)v30;
  char v32 = *(unsigned char *)(v30 + 8);
  sub_100195B7C(*(void *)v30, v32);
  uint64_t v33 = *(void *)v29;
  char v34 = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v29 = v31;
  *(unsigned char *)(v29 + 8) = v32;
  sub_10018F6D8(v33, v34);
  return a1;
}

char *sub_100B2C254(char *a1, char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x49uLL);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  return a1;
}

uint64_t sub_100B2C3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 64);
  char v17 = *(unsigned char *)(a1 + 72);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = v7;
  sub_10018CCC4(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(a3 + 20);
    uint64_t v21 = (void *)(a1 + v20);
    char v22 = (const void *)(a2 + v20);
    sub_100178110(a1 + v20, (uint64_t *)&unk_100EAA560);
    uint64_t v23 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v24))
      {
        uint64_t v25 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v24);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  uint64_t v26 = *(int *)(a3 + 24);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  LOBYTE(v28) = *((unsigned char *)v28 + 8);
  uint64_t v30 = *(void *)v27;
  char v31 = *(unsigned char *)(v27 + 8);
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = (_BYTE)v28;
  sub_10018F6D8(v30, v31);
  return a1;
}

uint64_t sub_100B2C584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B2C598);
}

uint64_t sub_100B2C598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 72);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100B2C61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B2C630);
}

uint64_t sub_100B2C630(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 72) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_100B2C6B0()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100B2C754()
{
  unint64_t result = qword_100EB1738;
  if (!qword_100EB1738)
  {
    sub_10018C6DC(&qword_100EB1740);
    sub_100B2ADAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1738);
  }
  return result;
}

uint64_t sub_100B2C7D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B2C7EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100B2C80C()
{
  unint64_t result = qword_100EB1768;
  if (!qword_100EB1768)
  {
    sub_10018C6DC(&qword_100EB1748);
    sub_1001246C8(&qword_100EB1770, &qword_100EB1750);
    sub_1001246C8(&qword_100EB1778, &qword_100EB1780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1768);
  }
  return result;
}

unint64_t sub_100B2C8D4()
{
  unint64_t result = qword_100EB1788;
  if (!qword_100EB1788)
  {
    sub_10018C6DC(&qword_100EB1758);
    sub_1001246C8(&qword_100EB1790, &qword_100EB1760);
    sub_1001246C8(&qword_100E743F8, &qword_100E74400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1788);
  }
  return result;
}

uint64_t sub_100B2C998()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  sub_10017C83C();
  uint64_t v27 = v2;
  __chkstk_darwin(v3);
  sub_100152344();
  type metadata accessor for DispatchQoS();
  sub_10017C83C();
  uint64_t v25 = v5;
  uint64_t v26 = v4;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v23 = v9;
  sub_10017C83C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v17 = (char *)&v22 - v16;
  sub_1001AB3E0();
  long long v18 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  long long v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v9);
  aBlock[4] = sub_100B2D660;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E37E38;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v8, v26);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v23);
}

uint64_t sub_100B2CC68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v59 = type metadata accessor for OSSignpostID();
  sub_10017C83C();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  sub_10017C83C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  sub_1001AB3E0();
  *uint64_t v20 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v14);
  char v21 = _dispatchPreconditionTest(_:)();
  uint64_t v23 = *(void (**)(uint64_t *, uint64_t))(v16 + 8);
  uint64_t v22 = v16 + 8;
  v23(v20, v14);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v57 = v7;
  uint64_t v54 = v3 + 40;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v3 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_100A039A8(a1, a2, v24);
  char v27 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v25;
  }
  uint64_t v14 = a1;
  if (qword_100E627F8 != -1) {
    goto LABEL_9;
  }
LABEL_6:
  id v60 = (id)qword_100F51F00;
  OSSignpostID.init(_:)();
  static os_signpost_type_t.begin.getter();
  uint64_t v56 = v22;
  sub_10017DF08(&qword_100E64020);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100C25ED0;
  uint64_t v29 = *(void *)(v3 + 16);
  uint64_t v30 = v3;
  uint64_t v55 = v3;
  uint64_t v31 = (uint64_t)v13;
  uint64_t v32 = *(void *)(v30 + 24);
  *(void *)(v28 + 56) = &type metadata for String;
  unint64_t v33 = sub_10012B7C0();
  *(void *)(v28 + 32) = v29;
  *(void *)(v28 + 40) = v32;
  *(void *)(v28 + 96) = &type metadata for String;
  *(void *)(v28 + 104) = v33;
  *(void *)(v28 + 64) = v33;
  *(void *)(v28 + 72) = v14;
  *(void *)(v28 + 80) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v34 = a2;
  uint64_t v35 = v14;
  uint64_t v36 = v57;
  char v37 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  uint64_t v53 = v31;
  uint64_t v38 = v59;
  v37(v11, v31, v59);
  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  unint64_t v40 = (v58 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = v55;
  *(void *)(v41 + 16) = v60;
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v39, v11, v38);
  *(void *)(v41 + v40) = v42;
  uint64_t v43 = (uint64_t *)(v41 + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v43 = v35;
  v43[1] = v34;
  type metadata accessor for WireframeInterestToken();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 32) = 0;
  *(void *)(result + 16) = sub_100B2D5C0;
  *(void *)(result + 24) = v41;
  uint64_t v45 = v56 + 1;
  if (v56 == -1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v46 = result;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v47 = v60;
    swift_retain();
    sub_100248114(v45, v35, v34, v48, v49, v50, v51, v52, v53, v54);
    swift_endAccess();
    dispatch_group_enter(*(dispatch_group_t *)(v42 + 32));
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v53, v38);
    return v46;
  }
  return result;
}

void sub_100B2D0B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  static os_signpost_type_t.end.getter();
  sub_10017DF08(&qword_100E64020);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C25ED0;
  uint64_t v10 = a3[2];
  uint64_t v9 = a3[3];
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v11 = sub_10012B7C0();
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v9;
  *(void *)(v8 + 96) = &type metadata for String;
  *(void *)(v8 + 104) = v11;
  *(void *)(v8 + 64) = v11;
  *(void *)(v8 + 72) = a4;
  *(void *)(v8 + 80) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[4];

  dispatch_group_leave(v12);
}

void sub_100B2D1CC()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  sub_10017C83C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = (uint64_t *)(v5 - v4);
  sub_1001AB3E0();
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v0);
  char v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v6, v0);
  if (v7)
  {
    uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
    OS_dispatch_group.notifySyncIfEmpty(queue:block:)();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100B2D2E4()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100B2D314()
{
  sub_100B2D2E4();

  return swift_deallocClassInstance();
}

BOOL sub_100B2D348()
{
  return sub_1000AA078();
}

uint64_t sub_100B2D370(uint64_t a1, uint64_t a2)
{
  return sub_100B2CC68(a1, a2);
}

void sub_100B2D394()
{
}

uint64_t sub_100B2D3B8()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  sub_10017C83C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100152344();
  sub_1001AB3E0();
  uint64_t *v1 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v3);
  char v7 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v1, v3);
  if (v7)
  {
    if ((*(unsigned char *)(v2 + 32) & 1) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 16))(result);
      *(unsigned char *)(v2 + 32) = 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100B2D4B0()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100B2D4E8()
{
  uint64_t v1 = type metadata accessor for OSSignpostID();
  sub_10017C83C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100B2D5C0()
{
  uint64_t v1 = *(void *)(type metadata accessor for OSSignpostID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void **)(v0 + v3);
  char v7 = (uint64_t *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];

  sub_100B2D0B0(v4, v5, v6, v8, v9);
}

uint64_t sub_100B2D664()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v6 = &v23[-v5];
  id v7 = (id)WDWeatherLibraryDirectory();
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = [self mainBundle];
  sub_10001B480(v8);
  if (v9)
  {
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    uint64_t v10 = self;
    id v11 = [v10 defaultManager];
    URL.path.getter();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v13 = [v11 fileExistsAtPath:v12];

    if ((v13 & 1) == 0)
    {
      id v14 = [v10 defaultManager];
      URL._bridgeToObjectiveC()(v15);
      uint64_t v17 = v16;
      id v24 = 0;
      unsigned int v18 = [v14 createDirectoryAtURL:v16 withIntermediateDirectories:1 attributes:0 error:&v24];

      if (v18)
      {
        id v19 = v24;
      }
      else
      {
        id v21 = v24;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
      }
    }
    sub_100188430();
    URL.appendingPathComponent(_:)();
    uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
    v22(v3, v0);
    return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v6, v0);
  }
  else
  {
    sub_100188430();
    URL.appendingPathComponent(_:)();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  }
}

void sub_100B2D934()
{
  id v0 = [self defaultManager];
  URL.path.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v2 = [v0 fileExistsAtPath:v1];

  if (v2)
  {
    URL._bridgeToObjectiveC()(v3);
    uint64_t v5 = v4;
    id v9 = 0;
    unsigned int v6 = [v0 removeItemAtURL:v4 error:&v9];

    if (v6)
    {
      id v7 = v9;
    }
    else
    {
      id v8 = v9;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  Data.write(to:options:)();
}

uint64_t sub_100B2DA94()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_100B2DAB0()
{
  sub_100658530(v0 + qword_100EB1940);
  sub_1003FC164(*(void *)(v0 + qword_100EB1950), *(void *)(v0 + qword_100EB1950 + 8));
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100B2DB24()
{
  sub_100B2DAB0();

  return swift_deallocClassInstance();
}

uint64_t sub_100B2DB7C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_100B2DB84(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 104);
}

uint64_t sub_100B2DB8C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 112);
}

uint64_t sub_100B2DB94(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_100B2DB9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v79 = *(void *)(v2 - 8);
  uint64_t v80 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E663F0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v81 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E66418);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v78 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E66420);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v77 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E66428);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v17 = v16;
  uint64_t v18 = sub_10017DF08(&qword_100E66430);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v21 = v20;
  uint64_t v22 = sub_10017DF08(&qword_100E66438);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v25 = v24;
  uint64_t v26 = sub_10017DF08(&qword_100E66440);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v29 = v28;
  uint64_t v82 = a1;
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_100B2E068(v30, (uint64_t (*)(uint64_t))sub_100B2E99C);
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_100B2E068(v32, (uint64_t (*)(uint64_t))sub_100B2E1B8);
  sub_10011AD08();
  char v35 = v34;
  swift_bridgeObjectRelease();
  if ((v35 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_10011A5D0();
  char v37 = v36;
  swift_bridgeObjectRelease();
  if ((v37 & 1) == 0)
  {
LABEL_5:
    uint64_t v39 = type metadata accessor for AppConfigurationState();
    uint64_t v76 = v29;
    sub_100179C70(v29, v40, v41, v39);
    uint64_t v42 = type metadata accessor for EnvironmentState();
    uint64_t v75 = v25;
    sub_100179C70(v25, v43, v44, v42);
    uint64_t v45 = type metadata accessor for LocationsState();
    uint64_t v74 = v21;
    sub_100179C70(v21, v46, v47, v45);
    uint64_t v48 = type metadata accessor for NotificationsOptInState();
    uint64_t v73 = v17;
    sub_100179C70(v17, v49, v50, v48);
    uint64_t v51 = type metadata accessor for TimeState();
    uint64_t v52 = v77;
    uint64_t v55 = sub_100179C70(v77, v53, v54, v51);
    uint64_t v56 = type metadata accessor for ViewState(v55);
    uint64_t v57 = v78;
    uint64_t v60 = sub_100179C70(v78, v58, v59, v56);
    uint64_t v61 = type metadata accessor for ModalViewState(v60);
    uint64_t v62 = v81;
    _s7Weather24LocationCompositionStateOwst_0(v81, 1, 1, v61);
    UUID.init()();
    uint64_t v63 = UUID.uuidString.getter();
    uint64_t v65 = v64;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v4, v80);
    uint64_t v71 = v63;
    uint64_t v70 = v17;
    uint64_t v66 = v75;
    uint64_t v67 = v76;
    uint64_t v68 = v74;
    uint64_t v38 = sub_1001659F0(0, 3, v76, v75, v74, 0, 0, 0, 0, v70, v52, v57, v62, v71, v65, v31, v33, 0, 0,
            0,
            v82);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1001781AC(v62, &qword_100E663F0);
    sub_1001781AC(v57, &qword_100E66418);
    sub_1001781AC(v52, &qword_100E66420);
    sub_1001781AC(v73, &qword_100E66428);
    sub_1001781AC(v68, &qword_100E66430);
    sub_1001781AC(v66, &qword_100E66438);
    sub_1001781AC(v67, &qword_100E66440);
    return v38;
  }
  swift_release();
  swift_release();
  return 1;
}

uint64_t sub_100B2E068(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = v2;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    sub_1007F3004(0, v6, (uint64_t *)((char *)&v12 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0)));
    uint64_t v7 = sub_10017AFE4();
    uint64_t v8 = a2(v7);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v8;
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    sub_1007F3004(0, v6, v9);
    uint64_t v10 = sub_10017AFE4();
    uint64_t v4 = a2(v10);
    swift_slowDealloc();
  }
  return v4;
}

void sub_100B2E1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a2;
  uint64_t v62 = a1;
  uint64_t v72 = type metadata accessor for AvailableDataSets();
  uint64_t v4 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v68 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10017DF08(&qword_100E6A460);
  __chkstk_darwin(v77);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6A470);
  __chkstk_darwin(v8);
  uint64_t v82 = (uint64_t *)((char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v81 = type metadata accessor for LocationAvailableDataSetState(0);
  uint64_t v76 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v71 = (uint64_t *)((char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v70 = (uint64_t)&v60 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v60 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v63 = 0;
  int64_t v19 = 0;
  uint64_t v78 = a3;
  uint64_t v22 = *(void *)(a3 + 64);
  uint64_t v21 = a3 + 64;
  uint64_t v20 = v22;
  uint64_t v23 = 1 << *(unsigned char *)(v21 - 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v20;
  uint64_t v73 = v21;
  int64_t v74 = (unint64_t)(v23 + 63) >> 6;
  uint64_t v66 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v67 = v8;
  uint64_t v69 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v75 = (char *)&v60 - v17;
  uint64_t v64 = v15;
  uint64_t v65 = v7;
  while (v25)
  {
    uint64_t v80 = (v25 - 1) & v25;
    unint64_t v26 = __clz(__rbit64(v25)) | (v19 << 6);
LABEL_20:
    uint64_t v30 = *(void *)(v78 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(v78 + 48) + 16 * v26);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = *(void *)(v76 + 72);
    unint64_t v79 = v26;
    sub_1001573F0(v30 + v34 * v26, (uint64_t)v18, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    char v35 = v82;
    *uint64_t v82 = v32;
    v35[1] = v33;
    uint64_t v36 = (uint64_t)v35 + *(int *)(v8 + 48);
    sub_1001573F0((uint64_t)v18, v36, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    swift_storeEnumTagMultiPayload();
    char v37 = &v7[*(int *)(v77 + 48)];
    sub_1001573F0(v36, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    sub_1001573F0((uint64_t)v15, (uint64_t)v37, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        int v56 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRetain_n();
        uint64_t v18 = v75;
        unint64_t v25 = v80;
        if (v56 != 2) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
      uint64_t v39 = v71;
      sub_1001573F0((uint64_t)v7, (uint64_t)v71, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      uint64_t v40 = *v39;
      uint64_t v41 = v39[1];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
LABEL_38:
        uint64_t v18 = v75;
        unint64_t v25 = v80;
LABEL_39:
        sub_1001781AC((uint64_t)v7, &qword_100E6A460);
        goto LABEL_40;
      }
      uint64_t v42 = *(void *)v37;
      uint64_t v43 = *((void *)v37 + 1);
      BOOL v44 = v40 == v42 && v41 == v43;
      uint64_t v18 = v75;
      if (v44)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease_n();
        unint64_t v25 = v80;
      }
      else
      {
        char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v25 = v80;
        if ((v45 & 1) == 0) {
          goto LABEL_31;
        }
      }
LABEL_35:
      sub_100B2ECEC((uint64_t)v7, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      sub_100B2ECEC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      sub_1001781AC((uint64_t)v82, &qword_100E6A470);
      sub_100B2ECEC((uint64_t)v18, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v46 = v70;
      sub_1001573F0((uint64_t)v7, v70, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v57 = *v69;
        swift_bridgeObjectRetain_n();
        v57((char *)v46, v72);
        goto LABEL_38;
      }
      uint64_t v47 = v68;
      uint64_t v48 = v72;
      (*v66)(v68, v37, v72);
      sub_100B2E94C();
      uint64_t v49 = v46;
      swift_bridgeObjectRetain_n();
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v50 = v84;
      uint64_t v51 = v83;
      uint64_t v52 = *v69;
      uint64_t v53 = v47;
      uint64_t v7 = v65;
      (*v69)(v53, v48);
      uint64_t v54 = v49;
      uint64_t v15 = v64;
      uint64_t v55 = v48;
      uint64_t v8 = v67;
      v52((char *)v54, v55);
      uint64_t v18 = v75;
      unint64_t v25 = v80;
      if (v50 == v51) {
        goto LABEL_35;
      }
LABEL_31:
      sub_100B2ECEC((uint64_t)v7, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
LABEL_40:
      unint64_t v58 = v79;
      sub_100B2ECEC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      sub_1001781AC((uint64_t)v82, &qword_100E6A470);
      sub_100B2ECEC((uint64_t)v18, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
      swift_bridgeObjectRelease();
      *(void *)(v62 + ((v58 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v58;
      if (__OFADD__(v63++, 1))
      {
        __break(1u);
LABEL_43:
        sub_1007BF318(v62, v61, v63, v78);
        return;
      }
    }
  }
  int64_t v27 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v27 >= v74) {
    goto LABEL_43;
  }
  unint64_t v28 = *(void *)(v73 + 8 * v27);
  ++v19;
  if (v28) {
    goto LABEL_19;
  }
  int64_t v19 = v27 + 1;
  if (v27 + 1 >= v74) {
    goto LABEL_43;
  }
  unint64_t v28 = *(void *)(v73 + 8 * v19);
  if (v28) {
    goto LABEL_19;
  }
  int64_t v19 = v27 + 2;
  if (v27 + 2 >= v74) {
    goto LABEL_43;
  }
  unint64_t v28 = *(void *)(v73 + 8 * v19);
  if (v28)
  {
LABEL_19:
    uint64_t v80 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v19 << 6);
    goto LABEL_20;
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v74) {
    goto LABEL_43;
  }
  unint64_t v28 = *(void *)(v73 + 8 * v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v74) {
      goto LABEL_43;
    }
    unint64_t v28 = *(void *)(v73 + 8 * v19);
    ++v29;
    if (v28) {
      goto LABEL_19;
    }
  }
LABEL_45:
  __break(1u);
}

unint64_t sub_100B2E94C()
{
  unint64_t result = qword_100E6A478;
  if (!qword_100E6A478)
  {
    type metadata accessor for AvailableDataSets();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A478);
  }
  return result;
}

void sub_100B2E99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  uint64_t v29 = a1;
  uint64_t v35 = sub_10017DF08(&qword_100E6A488);
  __chkstk_darwin(v35);
  uint64_t v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - v10;
  int64_t v12 = 0;
  uint64_t v36 = a3;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v30 = 0;
  uint64_t v31 = a3 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v32 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_20;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v32) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v16 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_20:
    uint64_t v22 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v18);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    sub_1001573F0(*(void *)(v36 + 56) + *(void *)(v33 + 72) * v18, (uint64_t)v11, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    *uint64_t v5 = v24;
    v5[1] = v23;
    sub_1001573F0((uint64_t)v11, (uint64_t)v5 + *(int *)(v35 + 48), (void (*)(void))type metadata accessor for LocationWeatherDataState);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    sub_100866548();
    LOBYTE(v24) = v25;
    sub_100B2ECEC((uint64_t)v8, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_1001781AC((uint64_t)v5, &qword_100E6A488);
    sub_100B2ECEC((uint64_t)v11, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      *(void *)(v29 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v30++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1007BF3B8(v29, v28, v30, v36);
        return;
      }
    }
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100B2ECEC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t static LocationCompositionState.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v103 = (char *)a1;
  char v104 = (char *)a2;
  uint64_t v102 = type metadata accessor for LocationOfInterest();
  uint64_t v98 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v97 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10017DF08(&qword_100E7C580);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EF8();
  uint64_t v100 = v4;
  __chkstk_darwin(v5);
  uint64_t v99 = (char *)&v95 - v6;
  uint64_t v7 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v7 - 8);
  sub_100162EF8();
  uint64_t v96 = (char *)v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v95 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v95 - v13;
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v95 - v16;
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)&v95 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v95 - v22;
  type metadata accessor for LocationCompositionState();
  sub_100162E4C();
  __chkstk_darwin(v24);
  unint64_t v26 = (uint64_t *)((char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27);
  uint64_t v29 = (uint64_t *)((char *)&v95 - v28);
  uint64_t v30 = sub_10017DF08(&qword_100EB1A58);
  __chkstk_darwin(v30 - 8);
  int64_t v32 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (uint64_t *)&v32[*(int *)(v33 + 56)];
  sub_100B2F61C((uint64_t)v103, (uint64_t)v32);
  sub_100B2F61C((uint64_t)v104, (uint64_t)v34);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v96 = v17;
    uint64_t v103 = v20;
    char v104 = v32;
    uint64_t v53 = (uint64_t)v23;
    sub_100B2F61C((uint64_t)v32, (uint64_t)v29);
    uint64_t v55 = *v29;
    uint64_t v54 = v29[1];
    uint64_t v56 = v29[2];
    uint64_t v57 = v29[3];
    uint64_t v58 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
    uint64_t v59 = (char *)v29 + v58;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1001781AC((uint64_t)v29 + v58, &qword_100E63508);
      sub_10021A144(v55, v54);
      int64_t v32 = v104;
      goto LABEL_19;
    }
    uint64_t v100 = v55;
    uint64_t v95 = v56;
    uint64_t v60 = *v34;
    uint64_t v61 = v34[1];
    uint64_t v62 = (uint64_t)v34 + v58;
    uint64_t v63 = v34[2];
    uint64_t v64 = v34[3];
    uint64_t v65 = (uint64_t)v59;
    uint64_t v66 = v53;
    sub_10018CCD4(v65, v53);
    uint64_t v67 = (uint64_t)v103;
    sub_10018CCD4(v62, (uint64_t)v103);
    if (v54)
    {
      uint64_t v68 = v100;
      if (v61)
      {
        BOOL v69 = v100 == v60 && v54 == v61;
        if (!v69 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_60:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = sub_1001A29E0();
          goto LABEL_61;
        }
        if (v95 == v63 && v57 == v64)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if ((v71 & 1) == 0) {
            goto LABEL_60;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v82 = sub_1001A29E0();
        sub_10021A144(v82, v83);
LABEL_46:
        uint64_t v74 = (uint64_t)v99;
        uint64_t v84 = (uint64_t)&v99[*(int *)(v101 + 48)];
        sub_1006A1CBC(v66, (uint64_t)v99);
        sub_1006A1CBC(v67, v84);
        uint64_t v77 = v102;
        if (_s7Weather24LocationCompositionStateOwet_0(v74, 1, v102) == 1)
        {
          sub_10019AAC0();
          uint64_t v78 = v66;
          goto LABEL_48;
        }
        uint64_t v79 = (uint64_t)v96;
        sub_1006A1CBC(v74, (uint64_t)v96);
        sub_10017DC24();
        uint64_t v80 = v98;
        if (!v50)
        {
          uint64_t v92 = sub_100188448();
          v93(v92);
          sub_100B2F6DC();
          char v90 = sub_100180BE8();
          uint64_t v94 = *(void (**)(void))(v80 + 8);
          sub_1001791A0();
          v94();
          sub_10019AAC0();
          sub_1001781AC(v66, &qword_100E63508);
          ((void (*)(uint64_t, uint64_t))v94)(v79, v77);
LABEL_67:
          sub_1001781AC(v74, &qword_100E63508);
          if ((v90 & 1) == 0) {
            goto LABEL_64;
          }
          goto LABEL_68;
        }
        sub_100109420();
        uint64_t v81 = v66;
LABEL_54:
        sub_1001781AC(v81, &qword_100E63508);
        (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v77);
LABEL_55:
        uint64_t v85 = &qword_100E7C580;
        uint64_t v86 = v74;
LABEL_63:
        sub_1001781AC(v86, v85);
LABEL_64:
        sub_100B2F680((uint64_t)v104);
        return 0;
      }
    }
    else
    {
      uint64_t v68 = v100;
      if (!v61) {
        goto LABEL_46;
      }
    }
    sub_10021A144(v68, v54);
    uint64_t v72 = v60;
    uint64_t v73 = v61;
LABEL_61:
    sub_10021A144(v72, v73);
    sub_100109420();
    uint64_t v86 = v66;
    goto LABEL_62;
  }
  uint64_t v103 = v11;
  uint64_t v99 = v14;
  sub_100B2F61C((uint64_t)v32, (uint64_t)v26);
  uint64_t v35 = *v26;
  uint64_t v36 = v26[1];
  uint64_t v37 = v26[2];
  uint64_t v38 = v26[3];
  uint64_t v39 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
  uint64_t v40 = (char *)v26 + v39;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v95 = v38;
    char v104 = v32;
    uint64_t v41 = *v34;
    uint64_t v42 = v34[1];
    uint64_t v43 = (char *)v34 + v39;
    uint64_t v45 = v34[2];
    uint64_t v44 = v34[3];
    uint64_t v46 = (uint64_t)v40;
    uint64_t v47 = (uint64_t)v99;
    sub_10018CCD4(v46, (uint64_t)v99);
    uint64_t v48 = (uint64_t)v43;
    uint64_t v49 = (uint64_t)v103;
    sub_10018CCD4(v48, (uint64_t)v103);
    if (v36)
    {
      if (v42)
      {
        BOOL v50 = v35 == v41 && v36 == v42;
        if (!v50 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_57:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1001A132C();
          goto LABEL_58;
        }
        if (v37 == v45 && v95 == v44)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if ((v52 & 1) == 0) {
            goto LABEL_57;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1001A132C();
        goto LABEL_39;
      }
    }
    else if (!v42)
    {
LABEL_39:
      uint64_t v74 = v100;
      uint64_t v75 = v100 + *(int *)(v101 + 48);
      sub_1006A1CBC(v47, v100);
      sub_1006A1CBC(v49, v75);
      uint64_t v76 = v47;
      uint64_t v77 = v102;
      if (_s7Weather24LocationCompositionStateOwet_0(v74, 1, v102) == 1)
      {
        sub_10019AAC0();
        uint64_t v78 = v76;
LABEL_48:
        sub_1001781AC(v78, &qword_100E63508);
        sub_10017DC24();
        if (!v50) {
          goto LABEL_55;
        }
        sub_1001781AC(v74, &qword_100E63508);
LABEL_68:
        sub_100B2F680((uint64_t)v104);
        return 1;
      }
      uint64_t v79 = (uint64_t)v96;
      sub_1006A1CBC(v74, (uint64_t)v96);
      sub_10017DC24();
      uint64_t v80 = v98;
      if (!v50)
      {
        uint64_t v88 = sub_100188448();
        v89(v88);
        sub_100B2F6DC();
        char v90 = sub_100180BE8();
        uint64_t v91 = *(void (**)(void))(v80 + 8);
        sub_1001791A0();
        v91();
        sub_10019AAC0();
        sub_1001781AC(v76, &qword_100E63508);
        sub_1001791A0();
        v91();
        goto LABEL_67;
      }
      sub_100109420();
      uint64_t v81 = v76;
      goto LABEL_54;
    }
    sub_10021A144(v35, v36);
    sub_10021A144(v41, v42);
LABEL_58:
    sub_100109420();
    uint64_t v86 = v47;
LABEL_62:
    uint64_t v85 = &qword_100E63508;
    goto LABEL_63;
  }
  sub_1001781AC((uint64_t)v26 + v39, &qword_100E63508);
  sub_10021A144(v35, v36);
LABEL_19:
  sub_1001781AC((uint64_t)v32, &qword_100EB1A58);
  return 0;
}

uint64_t sub_100B2F61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationCompositionState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B2F680(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationCompositionState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100B2F6DC()
{
  unint64_t result = qword_100E7C588;
  if (!qword_100E7C588)
  {
    type metadata accessor for LocationOfInterest();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7C588);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for LocationCompositionState(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      if (v7)
      {
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v11 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v11;
      }
      uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
LABEL_13:
        uint64_t v18 = sub_10017DF08(&qword_100E63508);
        memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v7)
      {
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v16 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v16;
      }
      uint64_t v17 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
      uint64_t v13 = (char *)a1 + v17;
      uint64_t v14 = (char *)a2 + v17;
      uint64_t v15 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15)) {
        goto LABEL_13;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    goto LABEL_15;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void *assignWithCopy for LocationCompositionState(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100B2F680((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      if (v5)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v6 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v6;
      }
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
      {
LABEL_9:
        uint64_t v11 = sub_10017DF08(&qword_100E63508);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_13:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      if (v5)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v12 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v12;
      }
      uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
      uint64_t v8 = (char *)a1 + v13;
      uint64_t v9 = (char *)a2 + v13;
      uint64_t v10 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10)) {
        goto LABEL_9;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    goto LABEL_13;
  }
  return a1;
}

_OWORD *initializeWithTake for LocationCompositionState(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LocationOfInterest();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (EnumCaseMultiPayload != 1)
  {
    if (v10) {
      goto LABEL_3;
    }
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    goto LABEL_6;
  }
  if (!v10) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v11 = sub_10017DF08(&qword_100E63508);
  memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_6:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for LocationCompositionState(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_100B2F680((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    long long v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for LocationOfInterest();
    int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
    if (EnumCaseMultiPayload == 1)
    {
      if (v10)
      {
LABEL_4:
        uint64_t v11 = sub_10017DF08(&qword_100E63508);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_7:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else if (v10)
    {
      goto LABEL_4;
    }
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    goto LABEL_7;
  }
  return a1;
}

uint64_t destroy for LocationHeaderViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_100193004(v5, v6, v7, v8, v9);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v12;
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  uint64_t v14 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v14;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_WORD *)(a1 + 137) = *(_WORD *)(a2 + 137);
  uint64_t v15 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v15;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocationHeaderViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  sub_100193004(v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v13 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v8;
  sub_100191D78(v9, v10, v11, v12, v13);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  return a1;
}

void *initializeWithTake for LocationHeaderViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA2uLL);
}

uint64_t assignWithTake for LocationHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v5;
  sub_100191D78(v6, v7, v8, v9, v11);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
  uint64_t v17 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationHeaderViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 162))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationHeaderViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 160) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 162) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 162) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Right()
{
  return &type metadata for Right;
}

uint64_t sub_100B30400(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = sub_100162814();
  type metadata accessor for MainState._Storage(v2);
  sub_10011796C();
  return v3 & 1;
}

uint64_t sub_100B3044C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v151 = a1;
  type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v138 = v4;
  uint64_t v139 = v5;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v131 = v6;
  sub_100129064();
  uint64_t v132 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100164B64(v8, v130);
  uint64_t v9 = sub_10017DF08(&qword_100EAC4A0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v135 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  uint64_t v136 = (uint64_t)&v130 - v13;
  sub_100129064();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v15 = sub_100109308(active);
  __chkstk_darwin(v15);
  char v142 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100129064();
  uint64_t v147 = (void (*)(char *, uint64_t))type metadata accessor for ViewState.SecondaryViewState(v17);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  char v146 = v19;
  uint64_t v148 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_1001648EC(v21, v130);
  uint64_t v22 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100162EF8();
  uint64_t v137 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  uint64_t v144 = (uint64_t)&v130 - v26;
  sub_100129064();
  uint64_t v152 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v143 = v27;
  __chkstk_darwin(v28);
  sub_100162EF8();
  uint64_t v134 = v29;
  sub_1001626D4();
  __chkstk_darwin(v30);
  uint64_t v149 = (char *)&v130 - v31;
  sub_1001626D4();
  __chkstk_darwin(v32);
  uint64_t v150 = (char *)&v130 - v33;
  sub_1001626D4();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v130 - v35;
  uint64_t v37 = sub_10017DF08(&qword_100E639E8);
  uint64_t v38 = sub_100109308(v37);
  __chkstk_darwin(v38);
  sub_100162EF8();
  uint64_t v133 = v39;
  sub_1001626D4();
  uint64_t v41 = __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v130 - v42;
  __chkstk_darwin(v41);
  sub_100182D40();
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v130 - v45;
  uint64_t v47 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v141 = v48;
  __chkstk_darwin(v49);
  sub_1001626E0();
  uint64_t v52 = v51 - v50;
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v53);
  uint64_t v54 = sub_10017F948();
  uint64_t v55 = type metadata accessor for LocationPreviewViewState(v54);
  uint64_t v56 = sub_100109308(v55);
  __chkstk_darwin(v56);
  sub_10008B8C0();
  sub_10016688C();
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v144 = v47;
    sub_100159138(v1, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v57 = (uint64_t)v145;
    sub_10016688C();
    uint64_t v58 = v148;
    uint64_t v59 = v146;
    sub_10016688C();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100159138((uint64_t)v59, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_19:
      uint64_t v72 = v151;
      sub_100159138(v57, (void (*)(void))type metadata accessor for ViewState);
      goto LABEL_20;
    }
    uint64_t v66 = *v59;
    if (*(void *)(v57 + *(int *)(v58 + 36) + 8) == 1)
    {
      id v67 = [self currentDevice];
      [v67 userInterfaceIdiom];

      if ((*(unsigned char *)(v57 + *(int *)(v58 + 28)) & 1) == 0)
      {
        swift_release();
        goto LABEL_19;
      }
    }
    sub_100159138(v57, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v68 = (uint64_t)v142;
    sub_10016688C();
    uint64_t v69 = sub_10017F088();
    uint64_t v70 = v152;
    sub_10012B520(v69, v71, v152);
    if (v74)
    {
      swift_release();
      sub_100159138(v68, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      uint64_t v72 = v151;
LABEL_20:
      uint64_t v64 = type metadata accessor for PresentedLocation();
      uint64_t v65 = v72;
      goto LABEL_21;
    }
    uint64_t v76 = v143;
    uint64_t v77 = (uint64_t *)(v143 + 32);
    uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t))(v143 + 32);
    v78(v150, v68, v70);
    uint64_t v79 = v140;
    sub_10016688C();
    uint64_t v80 = v149;
    static CurrentLocation.placeholderIdentifier.getter();
    char v81 = static Location.Identifier.== infix(_:_:)();
    uint64_t v147 = *(void (**)(char *, uint64_t))(v76 + 8);
    uint64_t v148 = v76 + 8;
    v147(v80, v70);
    uint64_t v145 = (void (*)(uint64_t, uint64_t, uint64_t))v78;
    char v146 = v77;
    if (v81)
    {
      sub_10017DF08(&qword_100E63878);
      uint64_t v82 = v136;
      type metadata accessor for CurrentLocation();
      swift_storeEnumTagMultiPayload();
      uint64_t v83 = type metadata accessor for LocationOfInterest();
      sub_1001633C8(v83);
      uint64_t v84 = v138;
      (*(void (**)(uint64_t, void, uint64_t))(v139 + 104))(v82, enum case for LocationModel.current(_:), v138);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v85, v86, v87, v84);
    }
    else
    {
      uint64_t v95 = *(char **)(v79 + *(int *)(v132 + 24));
      uint64_t v96 = *((void *)v95 + 2);
      uint64_t v84 = v138;
      uint64_t v130 = v66;
      char v142 = v95;
      if (v96)
      {
        uint64_t v97 = *(void (**)(uint64_t, char *, uint64_t))(v139 + 16);
        uint64_t v98 = &v95[(*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80)];
        uint64_t v99 = (void (**)(uint64_t, uint64_t))(v139 + 8);
        uint64_t v100 = *(void *)(v139 + 72);
        swift_bridgeObjectRetain();
        uint64_t v101 = v131;
        while (1)
        {
          v97(v101, v98, v84);
          uint64_t v102 = v84;
          LocationModel.identifier.getter();
          char v103 = static Location.Identifier.== infix(_:_:)();
          sub_100163D04();
          v105(v104);
          if (v103) {
            break;
          }
          (*v99)(v101, v102);
          v98 += v100;
          --v96;
          uint64_t v84 = v102;
          if (!v96) {
            goto LABEL_28;
          }
        }
        uint64_t v82 = v136;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 32))(v136, v101, v102);
        sub_1001093B0();
        _s7Weather24LocationCompositionStateOwst_0(v106, v107, v108, v102);
        swift_bridgeObjectRelease();
        uint64_t v70 = v152;
        uint64_t v84 = v102;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_28:
        uint64_t v82 = v136;
        _s7Weather24LocationCompositionStateOwst_0(v136, 1, 1, v84);
        swift_bridgeObjectRelease();
        uint64_t v70 = v152;
      }
      uint64_t v76 = v143;
      uint64_t v79 = v140;
    }
    sub_100159138(v79, (void (*)(void))type metadata accessor for LocationsState);
    uint64_t v109 = v134;
    (*(void (**)(uint64_t, char *, uint64_t))(v76 + 16))(v134, v150, v70);
    uint64_t v110 = v135;
    sub_10006DF38(v82, v135, &qword_100EAC4A0);
    sub_10012B520(v110, 1, v84);
    uint64_t v111 = v151;
    uint64_t v112 = v137;
    if (v74)
    {
      swift_release();
      sub_100178110(v82, &qword_100EAC4A0);
      sub_100163D04();
      v114(v113);
      uint64_t v115 = v110;
      uint64_t v116 = &qword_100EAC4A0;
    }
    else
    {
      uint64_t v117 = v133;
      LocationModel.coalesceLocation.getter();
      sub_100162F0C();
      v119(v118);
      sub_10012B520(v117, 1, v144);
      if (!v120)
      {
        Location.identifier.getter();
        swift_release();
        sub_100178110(v82, &qword_100EAC4A0);
        sub_100163D04();
        v124(v123);
        sub_100162F0C();
        v126(v125);
        uint64_t v127 = 0;
LABEL_38:
        uint64_t v128 = v145;
        _s7Weather24LocationCompositionStateOwst_0(v112, v127, 1, v70);
        v128(v111, v109, v70);
        uint64_t v92 = type metadata accessor for PresentedLocation();
        sub_1001373E4(v112, v111 + *(int *)(v92 + 20));
        *(unsigned char *)(v111 + *(int *)(v92 + 24)) = 0;
LABEL_39:
        sub_1001093B0();
        uint64_t v64 = v92;
        return _s7Weather24LocationCompositionStateOwst_0(v65, v93, v94, v64);
      }
      swift_release();
      sub_100178110(v82, &qword_100EAC4A0);
      sub_100163D04();
      v122(v121);
      uint64_t v116 = &qword_100E639E8;
      uint64_t v115 = v117;
    }
    sub_100178110(v115, v116);
    uint64_t v127 = 1;
    goto LABEL_38;
  }
  uint64_t v60 = v52;
  uint64_t v61 = v144;
  sub_10016E3A8();
  sub_10081B708((uint64_t)v46);
  uint64_t v62 = sub_10017F088();
  sub_10012B520(v62, v63, v47);
  if (!v74)
  {
    uint64_t v73 = v141;
    (*(void (**)(uint64_t, char *, uint64_t))(v141 + 32))(v60, v46, v47);
    sub_100B31824(v2);
    Location.identifier.getter();
    sub_10006DF38(v2, (uint64_t)v43, &qword_100E639E8);
    sub_10012B520((uint64_t)v43, 1, v47);
    if (v74)
    {
      sub_100178110(v2, &qword_100E639E8);
      sub_10019D5DC();
      v75();
      sub_100159138(v3, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      sub_100178110((uint64_t)v43, &qword_100E639E8);
      uint64_t v89 = 1;
    }
    else
    {
      Location.identifier.getter();
      sub_100178110(v2, &qword_100E639E8);
      uint64_t v88 = *(void (**)(void))(v73 + 8);
      sub_10019D5DC();
      v88();
      sub_100159138(v3, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      sub_10019D5DC();
      v88();
      uint64_t v89 = 0;
    }
    uint64_t v91 = v151;
    uint64_t v90 = v152;
    _s7Weather24LocationCompositionStateOwst_0(v61, v89, 1, v152);
    (*(void (**)(uint64_t, char *, uint64_t))(v143 + 32))(v91, v36, v90);
    uint64_t v92 = type metadata accessor for PresentedLocation();
    sub_1001373E4(v61, v91 + *(int *)(v92 + 20));
    *(unsigned char *)(v91 + *(int *)(v92 + 24)) = 1;
    goto LABEL_39;
  }
  sub_100159138(v3, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_100178110((uint64_t)v46, &qword_100E639E8);
  uint64_t v64 = type metadata accessor for PresentedLocation();
  uint64_t v65 = v151;
LABEL_21:
  uint64_t v93 = 1;
  uint64_t v94 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v65, v93, v94, v64);
}

uint64_t sub_100B3109C()
{
  type metadata accessor for MainAction();
  sub_1001A134C();
  __chkstk_darwin(v4);
  sub_100181BAC();
  if (!v0) {
    return 0;
  }
  sub_1001A4A44();
  while (1)
  {
    sub_10016688C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v6 = type metadata accessor for MainAction;
    if (EnumCaseMultiPayload == 7)
    {
      type metadata accessor for ModalViewAction();
      int v7 = swift_getEnumCaseMultiPayload();
      uint64_t v6 = type metadata accessor for ModalViewAction;
      if (v7 == 5) {
        break;
      }
    }
    sub_100159138(v2, (void (*)(void))v6);
    v1 += v3;
    if (!--v0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  sub_100159138(v2, (void (*)(void))type metadata accessor for ModalViewAction);
  return 1;
}

uint64_t sub_100B311D0()
{
  type metadata accessor for MainAction();
  sub_1001A134C();
  __chkstk_darwin(v4);
  sub_100181BAC();
  if (!v0) {
    return 0;
  }
  sub_1001A4A44();
  while (1)
  {
    sub_10016688C();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v6 = type metadata accessor for MainAction;
    if (EnumCaseMultiPayload == 6)
    {
      type metadata accessor for ViewAction();
      int v7 = swift_getEnumCaseMultiPayload();
      uint64_t v6 = type metadata accessor for ViewAction;
      if (v7 == 1)
      {
        type metadata accessor for LocationViewerViewAction();
        int v8 = swift_getEnumCaseMultiPayload();
        uint64_t v6 = type metadata accessor for LocationViewerViewAction;
        if (!v8) {
          break;
        }
      }
    }
    sub_100159138(v2, (void (*)(void))v6);
    v1 += v3;
    if (!--v0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  sub_100159138(v2, (void (*)(void))type metadata accessor for LocationViewerViewAction);
  return 1;
}

uint64_t sub_100B3132C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C28110;
  strcpy((char *)(inited + 32), "appLifecycle");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(unsigned char *)(inited + 48) = *(unsigned char *)(a1 + 24);
  *(void *)(inited + 72) = &type metadata for AppLifecycleState;
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x8000000100C98BE0;
  *(void *)(inited + 120) = type metadata accessor for AppConfigurationState();
  sub_100170694((uint64_t *)(inited + 96));
  sub_10016688C();
  *(void *)(inited + 128) = 0x6D6E6F7269766E65;
  *(void *)(inited + 136) = 0xEB00000000746E65;
  *(void *)(inited + 168) = type metadata accessor for EnvironmentState();
  sub_100170694((uint64_t *)(inited + 144));
  swift_beginAccess();
  sub_10016688C();
  strcpy((char *)(inited + 176), "notifications");
  *(_WORD *)(inited + 190) = -4864;
  char v5 = *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
  char v8 = *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 24);
  *(void *)(inited + 216) = &type metadata for NotificationsState;
  uint64_t v9 = swift_allocObject();
  *(void *)(inited + 192) = v9;
  *(unsigned char *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = v6;
  *(unsigned char *)(v9 + 40) = v8;
  *(void *)(inited + 224) = 0xD000000000000012;
  *(void *)(inited + 232) = 0x8000000100C95FE0;
  *(void *)(inited + 264) = type metadata accessor for NotificationsOptInState();
  sub_100170694((uint64_t *)(inited + 240));
  sub_10016688C();
  strcpy((char *)(inited + 272), "modalViewState");
  *(unsigned char *)(inited + 287) = -18;
  *(void *)(inited + 312) = type metadata accessor for ModalViewState(0);
  sub_100170694((uint64_t *)(inited + 288));
  sub_10016688C();
  *(void *)(inited + 320) = 1701669236;
  *(void *)(inited + 328) = 0xE400000000000000;
  *(void *)(inited + 360) = type metadata accessor for TimeState();
  sub_100170694((uint64_t *)(inited + 336));
  sub_10016688C();
  *(void *)(inited + 368) = 2003134838;
  *(void *)(inited + 376) = 0xE400000000000000;
  *(void *)(inited + 408) = type metadata accessor for ViewState(0);
  sub_100170694((uint64_t *)(inited + 384));
  sub_10016688C();
  *(void *)(inited + 416) = 0x4472656874616577;
  *(void *)(inited + 424) = 0xEB00000000617461;
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  *(void *)(inited + 456) = &type metadata for WeatherDataState;
  uint64_t v14 = (void *)swift_allocObject();
  *(void *)(inited + 432) = v14;
  void v14[2] = v11;
  v14[3] = v10;
  void v14[4] = v12;
  v14[5] = v13;
  *(void *)(inited + 464) = 0x6174536775626564;
  *(void *)(inited + 472) = 0xEA00000000006574;
  char v15 = *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
  uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
  *(void *)(inited + 504) = &type metadata for DebugState;
  *(unsigned char *)(inited + 480) = v15;
  *(void *)(inited + 488) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100E7F4F8);
  a2[4] = sub_1001706F8();
  sub_100170694(a2);
  type metadata accessor for MainAction();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100B317E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B3132C(*v1, a1);
}

uint64_t sub_100B317E8()
{
  sub_100B31A68();

  return ShortDescribable.description.getter();
}

uint64_t sub_100B31824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationOfInterest();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PreviewLocation();
  __chkstk_darwin(v6);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10016688C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    LocationOfInterest.location.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v9 = 0;
  }
  else
  {
    sub_100159138((uint64_t)v8, (void (*)(void))type metadata accessor for PreviewLocation);
    uint64_t v9 = 1;
  }
  uint64_t v10 = type metadata accessor for Location();
  return _s7Weather24LocationCompositionStateOwst_0(a1, v9, 1, v10);
}

uint64_t sub_100B319E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100B31A20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_100B31A68()
{
  unint64_t result = qword_100EB1B10;
  if (!qword_100EB1B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1B10);
  }
  return result;
}

uint64_t sub_100B31AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v6 + 64) + 7;
  uint64_t v40 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v40 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11 & 0xF8 | 7;
  uint64_t v13 = (v11 & 0xF8) + 23;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v14 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v10 + 64) + 1;
  }
  int v15 = (v11 | v7) & 0x100000;
  if ((v12 | v7) != 7
    || v15 != 0
    || ((v14 + 7) & 0xFFFFFFFFFFFFFFF8)
     + ((v13
       + ((((((v9 + ((v7 + 10) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 39) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
     + 8 > 0x18)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v19 = v18 + (((v12 | v7) + 16) & ~(v12 | v7));
  }
  else
  {
    size_t __n = v14;
    uint64_t v36 = v5;
    uint64_t v37 = ~v12;
    uint64_t v38 = v14 + 7;
    uint64_t v20 = *(void *)a2;
    char v21 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v21);
    *(void *)a1 = v20;
    *(unsigned char *)(a1 + 8) = v21;
    *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
    uint64_t v39 = a1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((a1 + v8 + 10) & ~v8, (a2 + v8 + 10) & ~v8, v36);
    uint64_t v22 = (void *)((v9 + ((a1 + v8 + 10) & ~v8)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)((v9 + ((a2 + v8 + 10) & ~v8)) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    unint64_t v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = *(void *)v26;
    uint64_t v28 = *(void *)(v26 + 8);
    LOBYTE(v20) = *(unsigned char *)(v26 + 16);
    swift_retain();
    sub_100190CC4(v27, v28, v20);
    *(void *)unint64_t v25 = v27;
    *(void *)(v25 + 8) = v28;
    *(unsigned char *)(v25 + 16) = v20;
    *(void *)(v25 + 24) = *(void *)(v26 + 24);
    unint64_t v29 = (v25 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v26 + 39) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v29 = *(unsigned char *)v30;
    *(void *)(v29 + 8) = *(void *)(v30 + 8);
    uint64_t v31 = (void *)((v13 + v29) & v37);
    uint64_t v32 = (const void *)((v13 + v30) & v37);
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v40))
    {
      memcpy(v31, v32, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v31, v32, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v40);
    }
    uint64_t v19 = v39;
    *(void *)(((unint64_t)v31 + v38) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v32 + v38) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v19;
}

uint64_t sub_100B31DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 10 + a1) & ~v6;
  uint64_t v8 = (v6 + 10 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  uint64_t v10 = (_OWORD *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  int v11 = (_OWORD *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v11;
  uint64_t v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  int v15 = (_OWORD *)(((unint64_t)v12 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (_OWORD *)(((unint64_t)v13 + 39) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v15 = *v16;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(_DWORD *)(v18 + 80) & 0xF8;
  uint64_t v20 = v19 + 23;
  unint64_t v21 = (unint64_t)v15 + v19 + 23;
  unint64_t v22 = ~v19 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = v21 & v22;
  uint64_t v24 = ((unint64_t)v16 + v20) & v22;
  if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v17))
  {
    int v25 = *(_DWORD *)(v18 + 84);
    size_t v26 = *(void *)(v18 + 64);
    if (v25) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v26 + 1;
    }
    memcpy((void *)v23, (const void *)v24, v27);
  }
  else
  {
    unint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    uint64_t v28 = v18 + 32;
    v29(v23, v24, v17);
    _s7Weather24LocationCompositionStateOwst_0(v23, 0, 1, v17);
    int v25 = *(_DWORD *)(v28 + 52);
    size_t v26 = *(void *)(v28 + 32);
  }
  if (v25) {
    size_t v30 = v26;
  }
  else {
    size_t v30 = v26 + 1;
  }
  *(void *)(((v23 | 7) + v30) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v24 | 7) + v30) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100B31F7C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 10 + a1) & ~v12;
  uint64_t v14 = ((unint64_t)a2 + v12 + 10) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 24) + 7;
  uint64_t v16 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v15 + v14;
  unint64_t v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 23;
  *uint64_t v16 = *(_OWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v19 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  char v20 = *(unsigned char *)(v18 + 16);
  uint64_t v21 = *(void *)v19;
  uint64_t v22 = *(void *)(v19 + 8);
  char v23 = *(unsigned char *)(v19 + 16);
  *(_OWORD *)unint64_t v19 = *(_OWORD *)v18;
  *(unsigned char *)(v19 + 16) = v20;
  sub_100191924(v21, v22, v23);
  *(void *)(v19 + 24) = *(void *)(v18 + 24);
  swift_bridgeObjectRelease();
  unint64_t v24 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_release();
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v29 = v28 + 23;
  unint64_t v30 = v28 + 23 + v24;
  unint64_t v31 = ~v28 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = v30 & v31;
  uint64_t v33 = (v29 + v25) & v31;
  LODWORD(v25) = _s7Weather24LocationCompositionStateOwet_0(v30 & v31, 1, v26);
  int v34 = _s7Weather24LocationCompositionStateOwet_0(v33, 1, v26);
  if (v25)
  {
    if (!v34)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v32, v33, v26);
      _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, v26);
      goto LABEL_12;
    }
    int v35 = *(_DWORD *)(v27 + 84);
    size_t v36 = *(void *)(v27 + 64);
  }
  else
  {
    if (!v34)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40))(v32, v33, v26);
      goto LABEL_12;
    }
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, v26);
    int v35 = *(_DWORD *)(v27 + 84);
    size_t v36 = *(void *)(v27 + 64);
  }
  if (v35) {
    size_t v37 = v36;
  }
  else {
    size_t v37 = v36 + 1;
  }
  memcpy((void *)v32, (const void *)v33, v37);
LABEL_12:
  if (*(_DWORD *)(v27 + 84)) {
    uint64_t v38 = *(void *)(v27 + 64);
  }
  else {
    uint64_t v38 = *(void *)(v27 + 64) + 1;
  }
  *(void *)(((v32 | 7) + v38) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v33 | 7) + v38) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_100B32214(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  unsigned int v11 = v10 - 1;
  if (!v10) {
    unsigned int v11 = 0;
  }
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  if (v7 <= v11) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  if (v10) {
    uint64_t v15 = 7;
  }
  else {
    uint64_t v15 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v16 = v8;
  uint64_t v17 = *(void *)(v6 + 64) + 7;
  uint64_t v18 = *(_DWORD *)(v9 + 80) & 0xF8;
  unint64_t v19 = ~v18 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = v18 + 23;
  if (v13 < a2)
  {
    unint64_t v21 = ((v15 + *(void *)(*(void *)(v8 - 8) + 64)) & 0xFFFFFFFFFFFFFFF8)
        + ((v20
          + ((((((v17 + ((v14 + 10) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & v19)
        + 8;
    uint64_t v22 = v21 & 0xFFFFFFF8;
    if ((v21 & 0xFFFFFFF8) != 0) {
      unsigned int v23 = 2;
    }
    else {
      unsigned int v23 = a2 - v13 + 1;
    }
    if (v23 >= 0x10000) {
      unsigned int v24 = 4;
    }
    else {
      unsigned int v24 = 2;
    }
    if (v23 < 0x100) {
      unsigned int v24 = 1;
    }
    if (v23 >= 2) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 0;
    }
    switch(v25)
    {
      case 1:
        int v26 = *((unsigned __int8 *)a1 + v21);
        if (!v26) {
          break;
        }
        goto LABEL_32;
      case 2:
        int v26 = *(unsigned __int16 *)((char *)a1 + v21);
        if (v26) {
          goto LABEL_32;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100B324B8);
      case 4:
        int v26 = *(int *)((char *)a1 + v21);
        if (!v26) {
          break;
        }
LABEL_32:
        int v28 = v26 - 1;
        if (v22)
        {
          int v28 = 0;
          int v29 = *a1;
        }
        else
        {
          int v29 = 0;
        }
        return v13 + (v29 | v28) + 1;
      default:
        break;
    }
  }
  uint64_t v30 = ((unint64_t)a1 + v14 + 10) & ~v14;
  if (v7 == v13)
  {
    return _s7Weather24LocationCompositionStateOwet_0(v30, v7, v5);
  }
  else
  {
    unint64_t v31 = (uint64_t *)((v17 + v30) & 0xFFFFFFFFFFFFFFF8);
    if ((v12 & 0x80000000) != 0)
    {
      unsigned int v33 = _s7Weather24LocationCompositionStateOwet_0((v20 + (((((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & v19, v10, v16);
      if (v33 >= 2) {
        return v33 - 1;
      }
      else {
        return 0;
      }
    }
    else
    {
      uint64_t v32 = *v31;
      if ((unint64_t)*v31 >= 0xFFFFFFFF) {
        LODWORD(v32) = -1;
      }
      return (v32 + 1);
    }
  }
}

void sub_100B324CC(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = type metadata accessor for Date();
  int v11 = 0;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v9 > v15) {
    unsigned int v15 = v9;
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v18 = *(void *)(v8 + 64) + 7;
  uint64_t v19 = *(_DWORD *)(v12 + 80) & 0xF8;
  unint64_t v20 = ~v19 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = v19 + 23;
  unint64_t v22 = (v21
       + ((((((v18 + ((v17 + 10) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)) & v20;
  if (v13) {
    size_t v23 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  else {
    size_t v23 = *(void *)(*(void *)(v10 - 8) + 64) + 1;
  }
  unint64_t v24 = ((v23 + 7) & 0xFFFFFFFFFFFFFFF8) + v22 + 8;
  if (v16 < a3)
  {
    if (((v23 + 7) & 0xFFFFFFF8) + v22 == -8) {
      unsigned int v25 = a3 - v16 + 1;
    }
    else {
      unsigned int v25 = 2;
    }
    if (v25 >= 0x10000) {
      int v26 = 4;
    }
    else {
      int v26 = 2;
    }
    if (v25 < 0x100) {
      int v26 = 1;
    }
    if (v25 >= 2) {
      int v11 = v26;
    }
    else {
      int v11 = 0;
    }
  }
  if (a2 > v16)
  {
    if (((v23 + 7) & 0xFFFFFFF8) + v22 == -8) {
      int v27 = a2 - v16;
    }
    else {
      int v27 = 1;
    }
    if (((v23 + 7) & 0xFFFFFFF8) + v22 != -8)
    {
      int v28 = ~v16 + a2;
      bzero(a1, ((v23 + 7) & 0xFFFFFFFFFFFFFFF8) + v22 + 8);
      *a1 = v28;
    }
    switch(v11)
    {
      case 1:
        *((unsigned char *)a1 + v24) = v27;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v24) = v27;
        return;
      case 3:
        goto LABEL_68;
      case 4:
        *(_DWORD *)((char *)a1 + v24) = v27;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      *((unsigned char *)a1 + v24) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 2:
      *(_WORD *)((char *)a1 + v24) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_41;
    case 3:
LABEL_68:
      __break(1u);
      JUMPOUT(0x100B32840);
    case 4:
      *(_DWORD *)((char *)a1 + v24) = 0;
      goto LABEL_40;
    default:
LABEL_40:
      if (!a2) {
        return;
      }
LABEL_41:
      uint64_t v29 = ((unint64_t)a1 + v17 + 10) & ~v17;
      if (v9 == v16)
      {
        uint64_t v30 = a2;
        uint64_t v13 = v9;
        uint64_t v10 = v7;
LABEL_43:
        _s7Weather24LocationCompositionStateOwst_0(v29, v30, v13, v10);
        return;
      }
      unint64_t v31 = (void *)((v18 + v29) & 0xFFFFFFFFFFFFFFF8);
      if ((v15 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0)
        {
          uint64_t v32 = a2 ^ 0x80000000;
          v31[1] = 0;
        }
        else
        {
          uint64_t v32 = (a2 - 1);
        }
        *unint64_t v31 = v32;
        return;
      }
      uint64_t v33 = v21 + (((((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
      int v34 = (unsigned char *)(v33 & v20);
      if (v14 >= a2)
      {
        uint64_t v30 = (a2 + 1);
        uint64_t v29 = v33 & v20;
        goto LABEL_43;
      }
      if (v23 <= 3) {
        int v35 = ~(-1 << (8 * v23));
      }
      else {
        int v35 = -1;
      }
      if (v23)
      {
        int v36 = v35 & (~v14 + a2);
        if (v23 <= 3) {
          int v37 = v23;
        }
        else {
          int v37 = 4;
        }
        bzero(v34, v23);
        switch(v37)
        {
          case 2:
            *(_WORD *)int v34 = v36;
            break;
          case 3:
            *(_WORD *)int v34 = v36;
            v34[2] = BYTE2(v36);
            break;
          case 4:
            *(_DWORD *)int v34 = v36;
            break;
          default:
            *int v34 = v36;
            break;
        }
      }
      return;
  }
}

uint64_t sub_100B3287C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v101 = *(void *)(a1 - 8);
  uint64_t v96 = *(char **)(v101 + 64);
  uint64_t v3 = __chkstk_darwin(a1);
  uint64_t v93 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v87 = (char *)&v72 - v5;
  uint64_t v76 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v6 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v105 = *(void *)(a1 + 16);
  uint64_t v106 = v9;
  uint64_t v10 = v105;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v80 = *(void (***)(char *, uint64_t))(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v72 = (char *)&v72 - v11;
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v84 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v99 = (char *)&v72 - v13;
  uint64_t v105 = v10;
  uint64_t v106 = v9;
  uint64_t v98 = v10;
  uint64_t v73 = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v74 = OpaqueTypeConformance2;
  unint64_t v15 = sub_1000E8960();
  uint64_t v116 = OpaqueTypeConformance2;
  unint64_t v117 = v15;
  uint64_t v94 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v105 = v12;
  uint64_t v106 = WitnessTable;
  uint64_t v75 = v12;
  uint64_t v77 = WitnessTable;
  uint64_t v17 = swift_getOpaqueTypeMetadata2();
  uint64_t v81 = v17;
  uint64_t v88 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v100 = (char *)&v72 - v18;
  uint64_t v105 = v12;
  uint64_t v106 = WitnessTable;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  uint64_t v105 = v17;
  uint64_t v106 = v82;
  uint64_t v89 = &opaque type descriptor for <<opaque return type of View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)>>;
  uint64_t v85 = swift_getOpaqueTypeMetadata2();
  uint64_t v91 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v79 = (char *)&v72 - v19;
  uint64_t v90 = type metadata accessor for ModifiedContent();
  uint64_t v92 = *(void *)(v90 - 8);
  uint64_t v20 = __chkstk_darwin(v90);
  uint64_t v83 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v86 = (uint64_t)&v72 - v22;
  uint64_t v97 = a1;
  uint64_t v23 = v102;
  static AccessibilityChildBehavior.contain.getter();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v76);
  uint64_t v24 = v23 + *(int *)(a1 + 48);
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *(void *)(v24 + 8);
  LOBYTE(v12) = *(unsigned char *)(v24 + 16);
  uint64_t v27 = *(void *)(v24 + 24);
  long long v114 = 0u;
  long long v115 = 0u;
  sub_100190CC4(v26, v25, v12);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EA3A00);
  State.init(wrappedValue:)();
  uint64_t v29 = v105;
  uint64_t v28 = v106;
  uint64_t v30 = v107;
  uint64_t v31 = v108;
  uint64_t v76 = v109;
  uint64_t v105 = v26;
  uint64_t v106 = v25;
  LOBYTE(v107) = v12;
  uint64_t v108 = v27;
  uint64_t v109 = v29;
  uint64_t v110 = v28;
  uint64_t v111 = v30;
  uint64_t v112 = v31;
  uint64_t v113 = v76;
  uint64_t v32 = OpaqueTypeMetadata2;
  uint64_t v33 = v72;
  View.modifier<A>(_:)();
  sub_100191924(v26, v25, v12);
  swift_bridgeObjectRelease();
  sub_100147E60(v29, v28, v30, v31);
  swift_release();
  v80[1](v33, v32);
  uint64_t v34 = v101;
  uint64_t v36 = v101 + 16;
  int v35 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
  int v37 = v87;
  uint64_t v38 = v97;
  v35(v87, v102, v97);
  uint64_t v76 = v36;
  uint64_t v39 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v80 = (void (**)(char *, uint64_t))&v96[(v39 + 32) & ~v39];
  uint64_t v40 = (v39 + 32) & ~v39;
  OpaqueTypeMetadata2 = v40;
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = v98;
  uint64_t v43 = v73;
  *(void *)(v41 + 16) = v98;
  *(void *)(v41 + 24) = v43;
  uint64_t v44 = v41 + v40;
  uint64_t v45 = *(char **)(v34 + 32);
  uint64_t v101 = v34 + 32;
  uint64_t v96 = v45;
  uint64_t v46 = v37;
  ((void (*)(uint64_t, char *, uint64_t))v45)(v44, v37, v38);
  uint64_t v47 = v75;
  uint64_t v48 = v99;
  View.onTapGesture(count:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v48, v47);
  uint64_t v49 = v102;
  uint64_t v50 = v97;
  v35(v46, v102, v97);
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v42;
  *(void *)(v51 + 24) = v43;
  uint64_t v52 = OpaqueTypeMetadata2;
  ((void (*)(uint64_t, char *, uint64_t))v96)(v51 + OpaqueTypeMetadata2, v46, v50);
  uint64_t v53 = v93;
  v35(v93, v49, v50);
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v98;
  *(void *)(v54 + 24) = v43;
  uint64_t v55 = v53;
  uint64_t v56 = v50;
  ((void (*)(uint64_t, char *, uint64_t))v96)(v54 + v52, v55, v50);
  uint64_t v57 = v79;
  uint64_t v58 = v81;
  uint64_t v59 = v82;
  uint64_t v60 = v100;
  View.onLongPressGesture(minimumDuration:maximumDistance:pressing:perform:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v60, v58);
  uint64_t v61 = (char *)(v102 + *(int *)(v56 + 52));
  char v62 = *v61;
  uint64_t v63 = *((void *)v61 + 1);
  LOBYTE(v105) = v62;
  uint64_t v106 = v63;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  uint64_t v105 = v58;
  uint64_t v106 = v59;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = (uint64_t)v83;
  uint64_t v66 = v85;
  sub_100B336EC();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v57, v66);
  unint64_t v67 = sub_1000E7DD8();
  uint64_t v103 = v64;
  unint64_t v104 = v67;
  uint64_t v68 = v90;
  swift_getWitnessTable();
  uint64_t v69 = v86;
  sub_100121584(v65, v68, v86);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
  v70(v65, v68);
  sub_100121584(v69, v68, v95);
  return ((uint64_t (*)(uint64_t, uint64_t))v70)(v69, v68);
}

uint64_t sub_100B332F4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = type metadata accessor for WeatherComponentButton();
  sub_10017DF08(&qword_100E7DDF8);
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_100178254((uint64_t)v4, (uint64_t *)&unk_100E73CA0);
    BOOL v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v15 = v14;
    unsigned int v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v9, v5);
    v16(v11, v5);
    BOOL v13 = v15 > 0.3;
  }
  return (*(uint64_t (**)(BOOL))(a1 + *(int *)(v12 + 44)))(v13);
}

uint64_t sub_100B33508(char a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v10 - v7;
  if (a1)
  {
    Date.init()();
    uint64_t v9 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v9);
    type metadata accessor for WeatherComponentButton();
    sub_1001B4A34((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_100E73CA0);
    sub_10017DF08(&qword_100E7DDF8);
    State.wrappedValue.setter();
    return sub_100178254((uint64_t)v8, (uint64_t *)&unk_100E73CA0);
  }
  return result;
}

uint64_t sub_100B33634()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100B336A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for WeatherComponentButton();
  return (*(uint64_t (**)(uint64_t))(a1 + *(int *)(v6 + 44)))(a4);
}

uint64_t sub_100B336EC()
{
  return View.modifier<A>(_:)();
}

uint64_t *sub_100B33720(uint64_t *result)
{
  if (result[3])
  {
    sub_100190CC4(*result, result[1], result[2] & 1);
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100EB1C18);
    return (uint64_t *)State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_100B3379C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  uint64_t v6 = static Color.clear.getter();
  char v7 = static Edge.Set.all.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  uint64_t v8 = a1 + *(int *)(sub_10017DF08(&qword_100EB1C38) + 36);
  *(void *)uint64_t v8 = v6;
  *(unsigned char *)(v8 + 8) = v7;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100B338C0()
{
  return sub_100B338F0(0);
}

uint64_t sub_100B338CC(uint64_t a1)
{
  return sub_100B339D4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100B33634);
}

uint64_t sub_100B338E8()
{
  return sub_100B338F0(1);
}

uint64_t sub_100B338F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = type metadata accessor for WeatherComponentButton();
  sub_1001627C0(v5);
  return sub_100B336A8(v1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v3, v4, a1);
}

uint64_t sub_100B33954()
{
  uint64_t v1 = type metadata accessor for WeatherComponentButton();
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_100B332F4(v3);
}

uint64_t sub_100B339BC(uint64_t a1)
{
  return sub_100B339D4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100B33508);
}

uint64_t sub_100B339D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = type metadata accessor for WeatherComponentButton();
  sub_1001627C0(v6);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a2(a1, v8, v4, v5);
}

unsigned char *storeEnumTagSinglePayload for DefaultButtonStyleModifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B33B20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t assignWithTake for WeatherComponentButtonAccessibilityLabelModifier(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_100191924(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 56);
  if (!v8)
  {
    sub_10024ADC8(a1 + 32);
LABEL_5:
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    goto LABEL_6;
  }
  char v9 = *(unsigned char *)(a2 + 48);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v9;
  sub_100191924(v10, v11, v12);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherComponentButtonAccessibilityLabelModifier(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherComponentButtonAccessibilityLabelModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100B33CA4()
{
  return swift_getWitnessTable();
}

unint64_t sub_100B340C4()
{
  unint64_t result = qword_100EB1BD8;
  if (!qword_100EB1BD8)
  {
    sub_10018C6DC(&qword_100EA3A00);
    sub_100B34138();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1BD8);
  }
  return result;
}

unint64_t sub_100B34138()
{
  unint64_t result = qword_100EB1BE0;
  if (!qword_100EB1BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1BE0);
  }
  return result;
}

unint64_t sub_100B34184(uint64_t a1)
{
  unint64_t result = sub_100B341AC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100B341AC()
{
  unint64_t result = qword_100EB1C00;
  if (!qword_100EB1C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1C00);
  }
  return result;
}

uint64_t sub_100B341F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B34214()
{
  sub_100191924(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 72))
  {
    sub_100191924(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t *sub_100B3427C(uint64_t *result)
{
  return sub_100B33720(result);
}

unint64_t sub_100B34290()
{
  unint64_t result = qword_100EB1C90;
  if (!qword_100EB1C90)
  {
    sub_10018C6DC(&qword_100EB1C38);
    sub_1000E8A44(&qword_100E80328, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_1001246C8(&qword_100E825E0, &qword_100E825E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1C90);
  }
  return result;
}

uint64_t sub_100B34364(uint64_t a1, uint64_t a2)
{
  uint64_t v171 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E663E0);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v167 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E663D8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v166 = v8;
  uint64_t v175 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v164 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  long long v13 = (char *)&v164 - v12;
  uint64_t v179 = type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v165 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  uint64_t v170 = (uint64_t)&v164 - v17;
  uint64_t v18 = sub_10017DF08(&qword_100E663F0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v174 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E66418);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v173 = v23;
  uint64_t v24 = sub_10017DF08(&qword_100E66420);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v172 = v26;
  uint64_t v27 = sub_10017DF08(&qword_100E66428);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v176 = v29;
  uint64_t v30 = sub_10017DF08(&qword_100E66430);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v178 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E66438);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v177 = v35;
  uint64_t v36 = sub_10017DF08(&qword_100E66440);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v180 = v38;
  uint64_t v39 = type metadata accessor for ConditionDetailViewState();
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100162EF8();
  uint64_t v168 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  uint64_t v169 = (uint64_t)&v164 - v43;
  sub_1001626D4();
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v164 - v45;
  uint64_t v47 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)&v164 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v164 - v52;
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v164 - v55;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_100162E4C();
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)&v164 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  char v62 = (char *)&v164 - v61;
  uint64_t v181 = a1;
  uint64_t v63 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_10011A500(v63, (uint64_t)v56, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_10016E400((uint64_t)v56, (uint64_t)v62, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    sub_10011A500((uint64_t)v62, (uint64_t)v59, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_10016E400((uint64_t)v59, (uint64_t)v46, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      uint64_t v105 = type metadata accessor for AppConfigurationState();
      uint64_t v106 = sub_10017AA2C(v105);
      uint64_t v107 = v177;
      uint64_t v110 = sub_1001630C0(v177, v108, v109, v106);
      uint64_t v111 = v178;
      uint64_t v114 = sub_10017A5E0(v178, v112, v113, v110);
      uint64_t v115 = v176;
      uint64_t v118 = sub_10017A0E0(v176, v116, v117, v114);
      uint64_t v119 = v172;
      uint64_t v122 = sub_100163398(v172, v120, v121, v118);
      sub_100163D24(v122);
      uint64_t v123 = v174;
      sub_100B35088(v171, v174);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v123, 0, 1, v47);
      uint64_t v124 = sub_10019F7FC();
      uint64_t v125 = v180;
      uint64_t v102 = sub_100163034(v124, v126, v180, v107, v111, v127, v128, v129, v164, v165, v166, v167, v168, v169, v170, v171, v172, v173, v174,
               v175,
               v176);
      sub_1001781AC(v123, &qword_100E663F0);
      sub_1001781AC(v63, &qword_100E66418);
      sub_1001781AC(v119, &qword_100E66420);
      sub_1001781AC(v115, &qword_100E66428);
      sub_1001781AC(v111, &qword_100E66430);
      sub_1001781AC(v107, &qword_100E66438);
      sub_1001781AC(v125, &qword_100E66440);
      sub_100B35914((uint64_t)v46, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      uint64_t v103 = type metadata accessor for ModalViewState.LocationDetailModal;
      uint64_t v104 = (uint64_t)v62;
      goto LABEL_19;
    }
    sub_100B35914((uint64_t)v62, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t v64 = (uint64_t)v59;
    uint64_t v65 = type metadata accessor for ModalViewState.LocationDetailModal;
  }
  else
  {
    uint64_t v65 = type metadata accessor for ModalViewState;
    uint64_t v64 = (uint64_t)v56;
  }
  sub_100B35914(v64, (void (*)(void))v65);
  sub_10011A500(v63, (uint64_t)v53, (void (*)(void))type metadata accessor for ModalViewState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v67 = v179;
  if (EnumCaseMultiPayload)
  {
    uint64_t v68 = type metadata accessor for ModalViewState;
    uint64_t v69 = (uint64_t)v53;
  }
  else
  {
    uint64_t v70 = v170;
    sub_10016E400((uint64_t)v53, v170, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_10011A500(v70 + *(int *)(v67 + 20), (uint64_t)v13, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    uint64_t v71 = v175;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10016E400((uint64_t)v13, v169, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      uint64_t v72 = type metadata accessor for AppConfigurationState();
      uint64_t v73 = sub_10017AA2C(v72);
      uint64_t v76 = sub_1001630C0(v177, v74, v75, v73);
      uint64_t v79 = sub_10017A5E0(v178, v77, v78, v76);
      uint64_t v80 = v70;
      uint64_t v81 = v176;
      uint64_t v84 = sub_10017A0E0(v176, v82, v83, v79);
      uint64_t v85 = v172;
      uint64_t v88 = sub_100163398(v172, v86, v87, v84);
      sub_100163D24(v88);
      uint64_t v89 = type metadata accessor for PreviewLocation();
      uint64_t v90 = v166;
      _s7Weather24LocationCompositionStateOwst_0(v166, 1, 1, v89);
      uint64_t v91 = v167;
      sub_100B35088(v171, v167);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v91, 0, 1, v71);
      uint64_t v92 = v174;
      uint64_t v93 = v80;
      sub_1004E4A98(v90, v91, v174);
      sub_1001781AC(v91, &qword_100E663E0);
      sub_1001781AC(v90, &qword_100E663D8);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v47);
      uint64_t v94 = sub_10019F7FC();
      uint64_t v95 = v180;
      uint64_t v96 = v177;
      uint64_t v97 = v178;
      uint64_t v102 = sub_100163034(v94, v98, v180, v177, v178, v99, v100, v101, v164, v165, v166, v167, v168, v169, v170, v171, v172, v173, v174,
               v175,
               v176);
      sub_1001781AC(v92, &qword_100E663F0);
      sub_1001781AC(v63, &qword_100E66418);
      sub_1001781AC(v85, &qword_100E66420);
      sub_1001781AC(v81, &qword_100E66428);
      sub_1001781AC(v97, &qword_100E66430);
      sub_1001781AC(v96, &qword_100E66438);
      sub_1001781AC(v95, &qword_100E66440);
      sub_100B35914(v169, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      uint64_t v103 = type metadata accessor for LocationPreviewViewState;
      uint64_t v104 = v93;
      goto LABEL_19;
    }
    sub_100B35914(v70, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v68 = type metadata accessor for LocationPreviewModalViewState;
    uint64_t v69 = (uint64_t)v13;
  }
  sub_100B35914(v69, (void (*)(void))v68);
  sub_10011A500(v63, (uint64_t)v50, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_100B35914((uint64_t)v50, (void (*)(void))type metadata accessor for ModalViewState);
    goto LABEL_15;
  }
  uint64_t v130 = type metadata accessor for ModalViewState.MapViewModal(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v130) != 1)
  {
    uint64_t v131 = (uint64_t)v50;
    uint64_t v132 = v165;
    sub_10016E400(v131, v165, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v133 = v164;
    sub_10011A500(v132 + *(int *)(v67 + 20), v164, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    uint64_t v134 = v175;
    int v135 = swift_getEnumCaseMultiPayload();
    uint64_t v102 = v181;
    if (v135 != 1)
    {
      sub_100B35914(v132, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      sub_100B35914(v133, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      goto LABEL_16;
    }
    sub_10016E400(v133, v168, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v136 = type metadata accessor for AppConfigurationState();
    uint64_t v137 = sub_10017AA2C(v136);
    uint64_t v140 = sub_1001630C0(v177, v138, v139, v137);
    uint64_t v143 = sub_10017A5E0(v178, v141, v142, v140);
    uint64_t v146 = sub_10017A0E0(v176, v144, v145, v143);
    uint64_t v147 = v172;
    uint64_t v150 = sub_100163398(v172, v148, v149, v146);
    uint64_t v151 = v173;
    _s7Weather24LocationCompositionStateOwst_0(v173, 1, 1, v150);
    uint64_t v152 = type metadata accessor for PreviewLocation();
    uint64_t v153 = v166;
    _s7Weather24LocationCompositionStateOwst_0(v166, 1, 1, v152);
    uint64_t v154 = v167;
    sub_100B35088(v171, v167);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v154, 0, 1, v134);
    uint64_t v155 = v174;
    sub_1004E4A98(v153, v154, v174);
    sub_1001781AC(v154, &qword_100E663E0);
    sub_1001781AC(v153, &qword_100E663D8);
    _s7Weather24LocationCompositionStateOwst_0(v155, 0, 1, v130);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v155, 0, 1, v47);
    uint64_t v156 = v176;
    uint64_t v157 = v180;
    uint64_t v158 = v177;
    uint64_t v159 = v178;
    uint64_t v102 = sub_100163034(0, 3, v180, v177, v178, v160, v161, v162, 0, v176, v147, v151, v155, 0, 0, 0, 0, 0, 0,
             0,
             v102);
    sub_1001781AC(v155, &qword_100E663F0);
    sub_1001781AC(v151, &qword_100E66418);
    sub_1001781AC(v147, &qword_100E66420);
    sub_1001781AC(v156, &qword_100E66428);
    sub_1001781AC(v159, &qword_100E66430);
    sub_1001781AC(v158, &qword_100E66438);
    sub_1001781AC(v157, &qword_100E66440);
    sub_100B35914(v168, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v103 = type metadata accessor for LocationPreviewViewState;
    uint64_t v104 = v132;
LABEL_19:
    sub_100B35914(v104, (void (*)(void))v103);
    return v102;
  }
  sub_1001781AC((uint64_t)v50, &qword_100E663E8);
LABEL_15:
  uint64_t v102 = v181;
LABEL_16:
  swift_retain();
  return v102;
}

uint64_t sub_100B35088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v55 = type metadata accessor for DetailChartSelection();
  __chkstk_darwin(v55);
  uint64_t v52 = (uint64_t)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DetailCondition();
  uint64_t v53 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v51 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E711F8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v12 - 8);
  *(void *)&long long v54 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E7BD10);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ConditionDetailViewAction();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011A500(a1, (uint64_t)v23, (void (*)(void))type metadata accessor for ConditionDetailViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v27 = v53;
      uint64_t v28 = v51;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v51, v23, v4);
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v16, v28, v4);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v4);
      uint64_t v29 = type metadata accessor for Location();
      uint64_t v30 = v54;
      _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v17);
      long long v58 = 0u;
      long long v59 = 0u;
      char v60 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v55);
      sub_1004D5580();
      sub_1001781AC((uint64_t)v8, &qword_100E711F8);
      sub_1001781AC((uint64_t)v11, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC(v30, &qword_100E639E8);
      sub_1001781AC((uint64_t)v16, &qword_100E7BD10);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v28, v4);
      break;
    case 2u:
      uint64_t v31 = v52;
      sub_10016E400((uint64_t)v23, v52, (void (*)(void))type metadata accessor for DetailChartSelection);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v4);
      uint64_t v32 = type metadata accessor for Location();
      uint64_t v33 = v54;
      _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v17);
      long long v58 = 0u;
      long long v59 = 0u;
      char v60 = 1;
      sub_10011A500(v31, (uint64_t)v8, (void (*)(void))type metadata accessor for DetailChartSelection);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v55);
      sub_1004D5580();
      sub_1001781AC((uint64_t)v8, &qword_100E711F8);
      sub_1001781AC((uint64_t)v11, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC(v33, &qword_100E639E8);
      sub_1001781AC((uint64_t)v16, &qword_100E7BD10);
      uint64_t result = sub_100B35914(v31, (void (*)(void))type metadata accessor for DetailChartSelection);
      break;
    case 3u:
      uint64_t v35 = v56;
      uint64_t v34 = v57;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v56, v57, v4);
      uint64_t v36 = (int *)type metadata accessor for ConditionDetailViewState();
      uint64_t v37 = v36[5];
      uint64_t v38 = v34 + v37;
      uint64_t v39 = v35 + v37;
      uint64_t v40 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v39, v38, v40);
      sub_1001C7278(v34 + v36[6], v35 + v36[6]);
      uint64_t v41 = v36[8];
      uint64_t v42 = (long long *)(v34 + v36[7]);
      long long v54 = *v42;
      uint64_t v43 = *((void *)v42 + 2);
      uint64_t v44 = *((void *)v42 + 3);
      char v45 = *((unsigned char *)v42 + 32);
      uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v35 + v41, 1, 1, v55);
      char v46 = *(unsigned char *)(v34 + v36[9]);
      uint64_t v47 = v35 + v36[7];
      *(_OWORD *)uint64_t v47 = v54;
      *(void *)(v47 + 16) = v43;
      *(void *)(v47 + 24) = v44;
      *(unsigned char *)(v47 + 32) = v45;
      *(unsigned char *)(v35 + v36[9]) = v46;
      break;
    case 4u:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v4);
      uint64_t v48 = type metadata accessor for Location();
      uint64_t v49 = v54;
      _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v17);
      long long v58 = 0u;
      long long v59 = 0u;
      char v60 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v55);
      sub_1004D5580();
      sub_1001781AC((uint64_t)v8, &qword_100E711F8);
      sub_1001781AC((uint64_t)v11, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC(v49, &qword_100E639E8);
      uint64_t result = sub_1001781AC((uint64_t)v16, &qword_100E7BD10);
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v23, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v4);
      uint64_t v24 = type metadata accessor for Location();
      uint64_t v25 = v54;
      _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, v24);
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v11, v20, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v17);
      long long v58 = 0u;
      long long v59 = 0u;
      char v60 = 1;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v55);
      sub_1004D5580();
      sub_1001781AC((uint64_t)v8, &qword_100E711F8);
      sub_1001781AC((uint64_t)v11, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC(v25, &qword_100E639E8);
      sub_1001781AC((uint64_t)v16, &qword_100E7BD10);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      break;
  }
  return result;
}

uint64_t sub_100B35914(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100B3596C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v16 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10011C760();
  *(double *)a7 = a8;
  sub_1001262E4(a1, a7 + 8);
  *(void *)(a7 + 48) = a2;
  swift_beginAccess();
  *(double *)(a7 + 56) = sub_1009D98A0();
  *(double *)(a7 + 64) = sub_1009D9900();
  *(void *)(a7 + 72) = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) init];
  uint64_t v20 = (int *)type metadata accessor for ScrubberView(0);
  sub_100B3EFA0(a3, a7 + v20[10], (void (*)(void))type metadata accessor for ScrubberViewModel);
  uint64_t v21 = (_OWORD *)(a7 + v20[11]);
  State.init(wrappedValue:)();
  *uint64_t v21 = v27;
  uint64_t v22 = a7 + v20[12];
  sub_10017DF08(&qword_100E66038);
  State.init(wrappedValue:)();
  *(void *)uint64_t v22 = v27;
  *(unsigned char *)(v22 + 8) = BYTE8(v27);
  *(void *)(v22 + 16) = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v8, a4, v16);
  State.init(wrappedValue:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a4, v16);
  sub_100163D48();
  sub_1001A1AC4();
  uint64_t v23 = a7 + v20[15];
  State.init(wrappedValue:)();
  *(_OWORD *)uint64_t v23 = v27;
  *(void *)(v23 + 16) = v28;
  sub_100163D48();
  sub_1001A1AC4();
  uint64_t v24 = a7 + v20[17];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v24 = v27;
  *(void *)(v24 + 8) = *((void *)&v27 + 1);
  sub_10024D364(a5, a7 + v20[18], &qword_100E98608);
  return sub_10024D364(a6, a7 + v20[19], &qword_100E63BF0);
}

uint64_t type metadata accessor for ScrubberView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB1DC8);
}

ValueMetadata *type metadata accessor for OffsetBound()
{
  return &type metadata for OffsetBound;
}

uint64_t sub_100B35C48(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v54 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v54 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    long long v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 8, (uint64_t)(a2 + 1));
    *(void *)(v4 + 48) = a2[6];
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v8 = (void *)a2[9];
    *(void *)(v4 + 72) = v8;
    uint64_t v9 = a3[10];
    uint64_t v10 = (void *)(v4 + v9);
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    v10[1] = v12;
    uint64_t v13 = *(int *)(type metadata accessor for ScrubberViewModel(0) + 24);
    uint64_t v60 = v11 + v13;
    char v62 = (char *)v10 + v13;
    uint64_t v14 = type metadata accessor for TimeZone();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_retain();
    id v16 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v62, v60, v14);
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)(v4 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v4 + v18;
    uint64_t v23 = (uint64_t)a2 + v18;
    *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
    *(void *)uint64_t v22 = *(void *)v23;
    *(void *)(v22 + 16) = *(void *)(v23 + 16);
    uint64_t v24 = a3[13];
    uint64_t v25 = v4 + v24;
    uint64_t v26 = (uint64_t)a2 + v24;
    uint64_t v27 = type metadata accessor for Date();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_retain();
    swift_retain();
    uint64_t v61 = v27;
    v28(v25, v26, v27);
    uint64_t v29 = sub_10017DF08(&qword_100EB1D68);
    *(void *)(v25 + *(int *)(v29 + 28)) = *(void *)(v26 + *(int *)(v29 + 28));
    uint64_t v30 = a3[14];
    uint64_t v31 = a3[15];
    uint64_t v32 = (void *)(v4 + v30);
    uint64_t v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = v4 + v31;
    uint64_t v36 = (uint64_t)a2 + v31;
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *(void *)(v35 + 16) = *(void *)(v36 + 16);
    uint64_t v37 = a3[16];
    uint64_t v38 = a3[17];
    uint64_t v39 = (void *)(v4 + v37);
    uint64_t v40 = (uint64_t *)((char *)a2 + v37);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    uint64_t v42 = v4 + v38;
    uint64_t v43 = (uint64_t)a2 + v38;
    *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
    *(void *)(v42 + 8) = *(void *)(v43 + 8);
    uint64_t v63 = a3;
    uint64_t v44 = a3[18];
    char v45 = (void *)(v4 + v44);
    uint64_t v46 = (uint64_t)a2 + v44;
    uint64_t v47 = *(uint64_t *)((char *)a2 + v44 + 8);
    *char v45 = *(uint64_t *)((char *)a2 + v44);
    v45[1] = v47;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v48 = *(int *)(sub_10017DF08(&qword_100E98608) + 32);
    uint64_t v49 = (char *)v45 + v48;
    uint64_t v50 = (const void *)(v46 + v48);
    uint64_t v51 = type metadata accessor for ScrubberDateSelection();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
    {
      uint64_t v52 = sub_10017DF08(&qword_100E668C0);
      memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
      uint64_t v53 = v63;
    }
    else
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v61))
      {
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        v28((uint64_t)v49, (uint64_t)v50, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v61);
      }
      uint64_t v53 = v63;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
    }
    uint64_t v55 = v53[19];
    uint64_t v56 = (void *)(v4 + v55);
    uint64_t v57 = (uint64_t *)((char *)a2 + v55);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    }
    else
    {
      *uint64_t v56 = *v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100B360AC(uint64_t a1, int *a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  swift_release();

  uint64_t v4 = a1 + a2[10];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for ScrubberViewModel(0) + 24);
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  uint64_t v7 = a1 + a2[13];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  sub_10017DF08(&qword_100EB1D68);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = a1 + a2[18];
  swift_release();
  swift_release();
  uint64_t v11 = v10 + *(int *)(sub_10017DF08(&qword_100E98608) + 32);
  uint64_t v12 = type metadata accessor for ScrubberDateSelection();
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)
    && !_s7Weather24LocationCompositionStateOwet_0(v11, 1, v8))
  {
    v9(v11, v8);
  }
  uint64_t v13 = a1 + a2[19];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for LayoutDirection();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100B36318(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = a3[10];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a2 + v8 + 8);
  *uint64_t v9 = *(void *)(a2 + v8);
  v9[1] = v11;
  uint64_t v12 = *(int *)(type metadata accessor for ScrubberViewModel(0) + 24);
  uint64_t v57 = v10 + v12;
  long long v59 = (char *)v9 + v12;
  uint64_t v13 = type metadata accessor for TimeZone();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_retain();
  id v15 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v59, v57, v13);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a1 + v17;
  uint64_t v22 = a2 + v17;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  uint64_t v23 = a3[13];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  swift_retain();
  swift_retain();
  uint64_t v58 = v26;
  v27(v24, v25, v26);
  uint64_t v28 = sub_10017DF08(&qword_100EB1D68);
  *(void *)(v24 + *(int *)(v28 + 28)) = *(void *)(v25 + *(int *)(v28 + 28));
  uint64_t v29 = a3[14];
  uint64_t v30 = a3[15];
  uint64_t v31 = (void *)(a1 + v29);
  uint64_t v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = a1 + v30;
  uint64_t v35 = a2 + v30;
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  uint64_t v36 = a3[16];
  uint64_t v37 = a3[17];
  uint64_t v38 = (void *)(a1 + v36);
  uint64_t v39 = (void *)(a2 + v36);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = a1 + v37;
  uint64_t v42 = a2 + v37;
  *(unsigned char *)uint64_t v41 = *(unsigned char *)v42;
  *(void *)(v41 + 8) = *(void *)(v42 + 8);
  uint64_t v60 = a3;
  uint64_t v43 = a3[18];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)(a2 + v43 + 8);
  *uint64_t v44 = *(void *)(a2 + v43);
  v44[1] = v46;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v47 = *(int *)(sub_10017DF08(&qword_100E98608) + 32);
  uint64_t v48 = (char *)v44 + v47;
  uint64_t v49 = (const void *)(v45 + v47);
  uint64_t v50 = type metadata accessor for ScrubberDateSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
  {
    uint64_t v51 = sub_10017DF08(&qword_100E668C0);
    memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v58))
    {
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      v27((uint64_t)v48, (uint64_t)v49, v58);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v58);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
  }
  uint64_t v52 = v60[19];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (void *)(a2 + v52);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v55 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
  }
  else
  {
    *uint64_t v53 = *v54;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100B36718(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  sub_1000C1E18(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  long long v6 = (void *)a2[9];
  uint64_t v7 = (void *)a1[9];
  a1[9] = v6;
  id v8 = v6;

  uint64_t v9 = a3[10];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v10 + 1) = *((void *)v11 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(type metadata accessor for ScrubberViewModel(0) + 24);
  uint64_t v13 = &v10[v12];
  uint64_t v14 = &v11[v12];
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_retain();
  swift_release();
  uint64_t v19 = a3[12];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  *((void *)v20 + 2) = *((void *)v21 + 2);
  swift_retain();
  swift_release();
  uint64_t v23 = a3[13];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v60 = *(void *)(v26 - 8);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v60 + 24);
  v27(v24, v25, v26);
  uint64_t v28 = sub_10017DF08(&qword_100EB1D68);
  *(void *)&v24[*(int *)(v28 + 28)] = *(void *)&v25[*(int *)(v28 + 28)];
  swift_retain();
  swift_release();
  uint64_t v29 = a3[14];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_retain();
  swift_release();
  uint64_t v32 = a3[15];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  swift_retain();
  swift_release();
  uint64_t v35 = a3[16];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  void *v36 = *v37;
  v36[1] = v37[1];
  swift_retain();
  swift_release();
  uint64_t v38 = a3[17];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  *uint64_t v39 = *v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  swift_retain();
  swift_release();
  uint64_t v41 = a3[18];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  *(void *)((char *)a1 + v41) = *(void *)((char *)a2 + v41);
  swift_retain();
  swift_release();
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_retain();
  swift_release();
  uint64_t v44 = *(int *)(sub_10017DF08(&qword_100E98608) + 32);
  uint64_t v45 = &v42[v44];
  uint64_t v46 = &v43[v44];
  uint64_t v47 = type metadata accessor for ScrubberDateSelection();
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v47);
  int v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47);
  if (v48)
  {
    if (!v49)
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v26))
      {
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v45, v46, v26);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v26);
      }
      uint64_t v53 = (uint64_t)v45;
      uint64_t v54 = v47;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v49)
  {
    sub_100B4042C((uint64_t)v45, (void (*)(void))type metadata accessor for ScrubberDateSelection);
LABEL_7:
    size_t v50 = *(void *)(*(void *)(sub_10017DF08(&qword_100E668C0) - 8) + 64);
LABEL_8:
    memcpy(v45, v46, v50);
    goto LABEL_15;
  }
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v26);
  int v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v26);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v45, v46, v26);
      uint64_t v53 = (uint64_t)v45;
      uint64_t v54 = v26;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v53, 0, 1, v54);
      goto LABEL_15;
    }
    goto LABEL_23;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v26);
LABEL_23:
    size_t v50 = *(void *)(*(void *)(v47 - 8) + 64);
    goto LABEL_8;
  }
  v27(v45, v46, v26);
LABEL_15:
  if (a1 != a2)
  {
    uint64_t v55 = a3[19];
    uint64_t v56 = (void *)((char *)a1 + v55);
    uint64_t v57 = (void *)((char *)a2 + v55);
    sub_100178110((uint64_t)a1 + v55, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    }
    else
    {
      *uint64_t v56 = *v57;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B36CA0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = a3[10];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for ScrubberViewModel(0) + 24);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  uint64_t v17 = a3[13];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v18, v19, v20);
  uint64_t v22 = sub_10017DF08(&qword_100EB1D68);
  *(void *)(v18 + *(int *)(v22 + 28)) = *(void *)(v19 + *(int *)(v22 + 28));
  uint64_t v23 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  uint64_t v26 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  uint64_t v27 = a3[18];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(a2 + v27 + 8);
  *uint64_t v28 = *(void *)(a2 + v27);
  v28[1] = v30;
  uint64_t v31 = *(int *)(sub_10017DF08(&qword_100E98608) + 32);
  uint64_t v32 = (char *)v28 + v31;
  uint64_t v33 = (const void *)(v29 + v31);
  uint64_t v34 = type metadata accessor for ScrubberDateSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E668C0);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v20))
    {
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      v21((uint64_t)v32, (uint64_t)v33, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v20);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  uint64_t v36 = a3[19];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  uint64_t v39 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100B36FD8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  uint64_t v8 = a3[10];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(type metadata accessor for ScrubberViewModel(0) + 24);
  uint64_t v12 = v9 + v11;
  uint64_t v13 = v10 + v11;
  uint64_t v14 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_release();
  uint64_t v18 = a3[12];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  swift_release();
  uint64_t v21 = a3[13];
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v25 = *(void (**)(void *, const void *, uint64_t))(v59 + 40);
  v25(v22, v23, v24);
  uint64_t v26 = sub_10017DF08(&qword_100EB1D68);
  *(void *)&v22[*(int *)(v26 + 28)] = *(void *)&v23[*(int *)(v26 + 28)];
  swift_release();
  uint64_t v27 = a3[14];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_release();
  uint64_t v30 = a3[15];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(void *)(v31 + 16) = *(void *)(v32 + 16);
  swift_release();
  uint64_t v33 = a3[16];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_release();
  uint64_t v36 = a3[17];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(unsigned char *)uint64_t v37 = *(unsigned char *)v38;
  *(void *)(v37 + 8) = *(void *)(v38 + 8);
  swift_release();
  uint64_t v39 = a3[18];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(void *)(a1 + v39) = *(void *)(a2 + v39);
  swift_release();
  *(void *)(v40 + 8) = *(void *)(v41 + 8);
  swift_release();
  uint64_t v42 = *(int *)(sub_10017DF08(&qword_100E98608) + 32);
  uint64_t v43 = (void *)(v40 + v42);
  uint64_t v44 = (const void *)(v41 + v42);
  uint64_t v45 = type metadata accessor for ScrubberDateSelection();
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
  int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
  if (v46)
  {
    if (!v47)
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v24))
      {
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v59 + 32))(v43, v44, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v24);
      }
      uint64_t v51 = (uint64_t)v43;
      uint64_t v52 = v45;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v47)
  {
    sub_100B4042C((uint64_t)v43, (void (*)(void))type metadata accessor for ScrubberDateSelection);
LABEL_7:
    size_t v48 = *(void *)(*(void *)(sub_10017DF08(&qword_100E668C0) - 8) + 64);
LABEL_8:
    memcpy(v43, v44, v48);
    goto LABEL_15;
  }
  int v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v24);
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v24);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, const void *, uint64_t))(v59 + 32))(v43, v44, v24);
      uint64_t v51 = (uint64_t)v43;
      uint64_t v52 = v24;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v51, 0, 1, v52);
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v59 + 8))(v43, v24);
LABEL_22:
    size_t v48 = *(void *)(*(void *)(v45 - 8) + 64);
    goto LABEL_8;
  }
  v25(v43, v44, v24);
LABEL_15:
  if (a1 != a2)
  {
    uint64_t v53 = a3[19];
    uint64_t v54 = (void *)(a1 + v53);
    uint64_t v55 = (const void *)(a2 + v53);
    sub_100178110(a1 + v53, &qword_100E62CB8);
    uint64_t v56 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v57 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v57 - 8) + 32))(v54, v55, v57);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100B3750C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B37520);
}

uint64_t sub_100B37520(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for ScrubberViewModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[10];
    }
    else
    {
      sub_10017DF08(&qword_100EB1D68);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[13];
      }
      else
      {
        sub_10017DF08(&qword_100E98608);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[18];
        }
        else
        {
          uint64_t v10 = sub_10017DF08(&qword_100E63BF0);
          uint64_t v11 = a3[19];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100B37620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B37634);
}

uint64_t sub_100B37634(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    type metadata accessor for ScrubberViewModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[10];
    }
    else
    {
      sub_10017DF08(&qword_100EB1D68);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[13];
      }
      else
      {
        sub_10017DF08(&qword_100E98608);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[18];
        }
        else
        {
          uint64_t v10 = sub_10017DF08(&qword_100E63BF0);
          uint64_t v11 = a4[19];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100B37730()
{
  type metadata accessor for ScrubberViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100B37988(319, &qword_100EB1DD8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F)
    {
      sub_100B3792C();
      if (v2 <= 0x3F)
      {
        sub_100B37988(319, (unint64_t *)&qword_100E63C70, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100B3792C()
{
  if (!qword_100EB1DE0)
  {
    sub_10018C6DC(&qword_100E668C0);
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EB1DE0);
    }
  }
}

void sub_100B37988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100B379EC()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_100B37A08()
{
  id result = sub_100B37A28();
  qword_100EB1D58 = (uint64_t)result;
  return result;
}

id sub_100B37A28()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

id sub_100B37AB4()
{
  id result = sub_100B37AD4();
  qword_100EB1D60 = (uint64_t)result;
  return result;
}

id sub_100B37AD4()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Date.uses24HourTime()();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

void sub_100B37B80()
{
  sub_100162EA0();
  uint64_t v32 = v1;
  uint64_t v2 = type metadata accessor for ScrubberView(0);
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v30 + 64);
  __chkstk_darwin(v2);
  uint64_t v29 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E668C0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08(&qword_100EB1E48);
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  uint64_t v11 = (uint64_t *)(v10 - v9);
  uint64_t v12 = sub_10017DF08(&qword_100EB1E50);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100EB1E58);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  *uint64_t v11 = static Alignment.center.getter();
  v11[1] = v22;
  uint64_t v23 = sub_10017DF08(&qword_100EB1E60);
  sub_100B37F0C(v0, (char *)v11 + *(int *)(v23 + 44));
  sub_10006DF38((uint64_t)v11, v16, &qword_100EB1E48);
  *(_WORD *)(v16 + *(int *)(v13 + 44)) = 256;
  sub_100178110((uint64_t)v11, &qword_100EB1E48);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006DF38(v16, v21, &qword_100EB1E50);
  uint64_t v24 = (_OWORD *)(v21 + *(int *)(v17 + 36));
  long long v25 = v34;
  *uint64_t v24 = v33;
  v24[1] = v25;
  v24[2] = v35;
  sub_100178110(v16, &qword_100EB1E50);
  sub_10017DF08(&qword_100E98608);
  Binding.wrappedValue.getter();
  uint64_t v26 = v29;
  sub_100B3F0AC(v0, v29, (void (*)(void))type metadata accessor for ScrubberView);
  unint64_t v27 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v28 = swift_allocObject();
  sub_100B3EFA0(v26, v28 + v27, (void (*)(void))type metadata accessor for ScrubberView);
  sub_100B409F0(&qword_100EB1E68, &qword_100EB1E58, (void (*)(void))sub_100B3F00C);
  sub_100802F34();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178110(v7, &qword_100E668C0);
  sub_100178110(v21, &qword_100EB1E58);
  sub_100162694();
}

uint64_t sub_100B37F0C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v174 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100EB1E98);
  __chkstk_darwin(v3 - 8);
  uint64_t v170 = (uint64_t *)((char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = sub_10017DF08(&qword_100EB1EA0) - 8;
  __chkstk_darwin(v173);
  uint64_t v171 = (uint64_t)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v172 = (uint64_t)&v133 - v7;
  uint64_t v168 = type metadata accessor for Date();
  uint64_t v169 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v167 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_10017DF08(&qword_100E70BA8);
  uint64_t v166 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v164 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ScrubberView(0);
  uint64_t v177 = *(void *)(v10 - 8);
  uint64_t v176 = *(void *)(v177 + 64);
  uint64_t v11 = (int *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v153 = (uint64_t)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = (void (*)(void))type metadata accessor for AccessibilityTraits();
  uint64_t v140 = *((void *)v175 - 1);
  uint64_t v141 = (char *)v175 - 8;
  uint64_t v142 = v140;
  __chkstk_darwin((char *)v175 - 8);
  uint64_t v145 = (uint64_t (*)(uint64_t))((char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v134 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v14 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v16 = (char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10017DF08(&qword_100EB1EA8);
  uint64_t v137 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v18 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_10017DF08(&qword_100EB1EB0);
  __chkstk_darwin(v178);
  int v135 = (char *)&v133 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v138 = (char *)&v133 - v21;
  __chkstk_darwin(v22);
  uint64_t v139 = (char *)&v133 - v23;
  __chkstk_darwin(v24);
  uint64_t v179 = (char *)&v133 - v25;
  __chkstk_darwin(v26);
  uint64_t v146 = (char *)&v133 - v27;
  uint64_t v149 = sub_10017DF08(&qword_100EB1EB8) - 8;
  __chkstk_darwin(v149);
  uint64_t v147 = (uint64_t)&v133 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10017DF08(&qword_100EB1EC0);
  __chkstk_darwin(v151);
  uint64_t v148 = (uint64_t)&v133 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_10017DF08(&qword_100EB1EC8);
  uint64_t v156 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v150 = (char *)&v133 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_10017DF08(&qword_100EB1ED0) - 8;
  __chkstk_darwin(v155);
  uint64_t v154 = (char *)&v133 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_10017DF08(&qword_100EB1ED8);
  __chkstk_darwin(v159);
  uint64_t v158 = (uint64_t)&v133 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_10017DF08(&qword_100EB1EE0);
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v160 = (char *)&v133 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v161 = (char *)&v133 - v35;
  uint64_t v36 = static HorizontalAlignment.leading.getter();
  uint64_t v37 = (uint64_t *)(a1 + v11[18]);
  uint64_t v38 = *v37;
  uint64_t v39 = v37[1];
  uint64_t v181 = v38;
  uint64_t v182 = v39;
  uint64_t v143 = sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  uint64_t v40 = v188;
  uint64_t v41 = a1 + v11[19];
  char v42 = *(unsigned char *)v41;
  uint64_t v43 = *(void *)(v41 + 8);
  LOBYTE(v181) = v42;
  uint64_t v182 = v43;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  char v44 = v188;
  uint64_t v152 = v11;
  uint64_t v45 = v11[12];
  uint64_t v46 = v11[13];
  uint64_t v47 = a1;
  uint64_t v180 = a1;
  uint64_t v48 = *(void *)(a1 + v45);
  uint64_t v144 = (uint64_t *)(v47 + v46);
  uint64_t v49 = *(void *)(v47 + v46 + 8);
  uint64_t v188 = *(void *)(v47 + v46);
  uint64_t v189 = v49;
  swift_bridgeObjectRetain();
  State.wrappedValue.getter();
  uint64_t v181 = v36;
  uint64_t v182 = 0;
  char v183 = 0;
  uint64_t v184 = v40;
  char v185 = v44;
  uint64_t v186 = v48;
  uint64_t v187 = 0;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v50 = sub_10017DF08(&qword_100EB1EE8);
  uint64_t v51 = sub_1001246C8(&qword_100EB1EF0, &qword_100EB1EE8);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v134);
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v52 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v54 = v53;
  char v56 = v55 & 1;
  uint64_t v181 = v50;
  uint64_t v182 = v51;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = (uint64_t)v135;
  uint64_t v58 = v136;
  View.accessibilityHint(_:)();
  sub_100191924(v52, v54, v56);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v18, v58);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v59 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v61 = v60;
  LOBYTE(v52) = v62 & 1;
  uint64_t v63 = (uint64_t)v138;
  ModifiedContent<>.accessibilityLabel(_:)();
  sub_100191924(v59, v61, v52);
  swift_bridgeObjectRelease();
  sub_100178110(v57, &qword_100EB1EB0);
  sub_10017DF08((uint64_t *)&unk_100EAAE80);
  uint64_t v64 = v142;
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_100C251B0;
  static AccessibilityTraits.updatesFrequently.getter();
  uint64_t v181 = v65;
  sub_100B3F100(&qword_100E742F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  sub_10017DF08((uint64_t *)&unk_100EAAE90);
  sub_1001246C8(&qword_100E74300, (uint64_t *)&unk_100EAAE90);
  uint64_t v66 = v145;
  uint64_t v67 = v175;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v68 = (uint64_t)v139;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(uint64_t (*)(uint64_t), void (*)(void)))(v64 + 8))(v66, v67);
  sub_100178110(v63, &qword_100EB1EB0);
  uint64_t v69 = v180;
  uint64_t v70 = sub_100B392B0();
  uint64_t v72 = v71;
  LOBYTE(v66) = v73 & 1;
  ModifiedContent<>.accessibilityValue(_:)();
  sub_100191924(v70, v72, (char)v66);
  swift_bridgeObjectRelease();
  sub_100178110(v68, &qword_100EB1EB0);
  uint64_t v74 = v153;
  uint64_t v175 = (void (*)(void))type metadata accessor for ScrubberView;
  sub_100B3F0AC(v69, v153, (void (*)(void))type metadata accessor for ScrubberView);
  uint64_t v75 = *(unsigned __int8 *)(v177 + 80);
  uint64_t v76 = (v75 + 16) & ~v75;
  v176 += v76;
  uint64_t v177 = v75 | 7;
  uint64_t v77 = swift_allocObject();
  uint64_t v78 = v76;
  uint64_t v145 = type metadata accessor for ScrubberView;
  sub_100B3EFA0(v74, v77 + v76, (void (*)(void))type metadata accessor for ScrubberView);
  uint64_t v79 = (uint64_t)v146;
  uint64_t v80 = (uint64_t)v179;
  ModifiedContent<>.accessibilityAdjustableAction(_:)();
  swift_release();
  sub_100178110(v80, &qword_100EB1EB0);
  sub_100B3F0AC(v69, v74, (void (*)(void))type metadata accessor for ScrubberView);
  uint64_t v81 = swift_allocObject();
  uint64_t v142 = v78;
  uint64_t v82 = v74;
  sub_100B3EFA0(v74, v81 + v78, (void (*)(void))type metadata accessor for ScrubberView);
  uint64_t v83 = v147;
  sub_10006DF38(v79, v147, &qword_100EB1EB0);
  uint64_t v84 = (void *)(v83 + *(int *)(v149 + 44));
  void *v84 = sub_100B39C40;
  v84[1] = 0;
  v84[2] = sub_100B404C4;
  v84[3] = v81;
  sub_100178110(v79, &qword_100EB1EB0);
  uint64_t v85 = v148;
  sub_10006DF38(v83, v148, &qword_100EB1EB8);
  *(unsigned char *)(v85 + *(int *)(v151 + 36)) = 0;
  sub_100178110(v83, &qword_100EB1EB8);
  uint64_t v86 = v164;
  sub_100B3A558();
  static GestureMask.all.getter();
  sub_100B40500();
  sub_1001246C8(&qword_100E70BE0, &qword_100E70BA8);
  uint64_t v87 = v150;
  uint64_t v88 = v165;
  View.gesture<A>(_:including:)();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v86, v88);
  sub_100178110(v85, &qword_100EB1EC0);
  uint64_t v89 = v82;
  uint64_t v90 = v82;
  uint64_t v91 = v175;
  sub_100B3F0AC(v69, v90, v175);
  uint64_t v92 = swift_allocObject();
  uint64_t v93 = v92 + v78;
  uint64_t v94 = v145;
  sub_100B3EFA0(v89, v93, (void (*)(void))v145);
  uint64_t v95 = v156;
  uint64_t v96 = (uint64_t)v154;
  uint64_t v97 = v157;
  (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v154, v87, v157);
  int v98 = (uint64_t (**)())(v96 + *(int *)(v155 + 44));
  char *v98 = sub_100B40750;
  v98[1] = (uint64_t (*)())v92;
  v98[2] = 0;
  v98[3] = 0;
  (*(void (**)(char *, uint64_t))(v95 + 8))(v87, v97);
  uint64_t v99 = v144[1];
  uint64_t v181 = *v144;
  uint64_t v182 = v99;
  State.wrappedValue.getter();
  uint64_t v100 = v188;
  uint64_t v101 = v180;
  sub_100B3F0AC(v180, v89, v91);
  uint64_t v102 = swift_allocObject();
  uint64_t v103 = v142;
  sub_100B3EFA0(v89, v102 + v142, (void (*)(void))v94);
  uint64_t v104 = v158;
  sub_10006DF38(v96, v158, &qword_100EB1ED0);
  uint64_t v105 = (void *)(v104 + *(int *)(v159 + 36));
  *uint64_t v105 = v100;
  v105[1] = sub_100B4078C;
  v105[2] = v102;
  v105[3] = v100;
  sub_100178110(v96, &qword_100EB1ED0);
  sub_10017DF08(&qword_100EB1D68);
  uint64_t v106 = v167;
  State.wrappedValue.getter();
  sub_100B3F0AC(v101, v89, v175);
  uint64_t v107 = swift_allocObject();
  sub_100B3EFA0(v89, v107 + v103, (void (*)(void))v94);
  sub_100B40850();
  sub_100B3F100((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v108 = v160;
  uint64_t v109 = v168;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v169 + 8))(v106, v109);
  sub_100178110(v104, &qword_100EB1ED8);
  uint64_t v110 = v162;
  uint64_t v111 = v161;
  uint64_t v112 = v108;
  uint64_t v113 = v163;
  (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v161, v108, v163);
  uint64_t v114 = static HorizontalAlignment.center.getter();
  uint64_t v115 = (uint64_t)v170;
  *uint64_t v170 = v114;
  *(void *)(v115 + 8) = 0;
  *(unsigned char *)(v115 + 16) = 1;
  uint64_t v116 = sub_10017DF08(&qword_100EB1F30);
  sub_100B3B47C(v180, v115 + *(int *)(v116 + 44));
  LOBYTE(v89) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v118 = v117;
  uint64_t v120 = v119;
  uint64_t v122 = v121;
  uint64_t v124 = v123;
  uint64_t v125 = v171;
  sub_10006DF38(v115, v171, &qword_100EB1E98);
  uint64_t v126 = v125 + *(int *)(v173 + 44);
  *(unsigned char *)uint64_t v126 = v89;
  *(void *)(v126 + 8) = v118;
  *(void *)(v126 + 16) = v120;
  *(void *)(v126 + 24) = v122;
  *(void *)(v126 + 32) = v124;
  *(unsigned char *)(v126 + 40) = 0;
  sub_100178110(v115, &qword_100EB1E98);
  uint64_t v127 = v172;
  sub_10024D364(v125, v172, &qword_100EB1EA0);
  uint64_t v128 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  v128(v112, v111, v113);
  sub_10006DF38(v127, v125, &qword_100EB1EA0);
  uint64_t v129 = v174;
  v128(v174, v112, v113);
  uint64_t v130 = sub_10017DF08(&qword_100EB1F38);
  sub_10006DF38(v125, (uint64_t)&v129[*(int *)(v130 + 48)], &qword_100EB1EA0);
  sub_100178110(v127, &qword_100EB1EA0);
  uint64_t v131 = *(void (**)(char *, uint64_t))(v110 + 8);
  v131(v111, v113);
  sub_100178110(v125, &qword_100EB1EA0);
  return ((uint64_t (*)(char *, uint64_t))v131)(v112, v113);
}

uint64_t sub_100B392B0()
{
  uint64_t v1 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for ScrubberView(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v44 - v13;
  uint64_t v15 = (uint64_t *)(v0 + *(int *)(v2 + 44));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  v44[3] = v16;
  v44[4] = v17;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  sub_100B3C4D0((uint64_t)v7, *(double *)&v44[5]);
  sub_100B3F0AC(v0, (uint64_t)v4, (void (*)(void))type metadata accessor for ScrubberView);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_10017DF08(&qword_100EB1D68);
    State.wrappedValue.getter();
    sub_100B4042C((uint64_t)v4, (void (*)(void))type metadata accessor for ScrubberView);
    sub_100178110((uint64_t)v7, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    sub_100B4042C((uint64_t)v4, (void (*)(void))type metadata accessor for ScrubberView);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  }
  static Date.now.getter();
  Date.distance(to:)();
  double v19 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v11, v8);
  if (fabs(v19) >= 1800.0)
  {
    if (qword_100E62B40 != -1) {
      swift_once();
    }
    uint64_t v21 = (void *)qword_100EB1D60;
    type metadata accessor for ScrubberViewModel(0);
    Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
    [v21 setTimeZone:isa];

    if (qword_100E62B38 != -1) {
      swift_once();
    }
    uint64_t v23 = (void *)qword_100EB1D58;
    Class v24 = TimeZone._bridgeToObjectiveC()().super.isa;
    [v23 setTimeZone:v24];

    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
    uint64_t v26 = (void *)qword_100EB1D60;
    Class v27 = Date._bridgeToObjectiveC()().super.isa;
    id v28 = [v26 stringFromDate:v27];

    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    v32._uint64_t countAndFlagsBits = v29;
    v32._object = v31;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v32);
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 8236;
    v33._object = (void *)0xE200000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v33);
    uint64_t v34 = (void *)qword_100EB1D58;
    Class v35 = Date._bridgeToObjectiveC()().super.isa;
    id v36 = [v34 stringFromDate:v35];

    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    v40._uint64_t countAndFlagsBits = v37;
    v40._object = v39;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v40);
    swift_bridgeObjectRelease();
    v41._uint64_t countAndFlagsBits = 0;
    v41._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v41);
    LocalizedStringKey.init(stringInterpolation:)();
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
  }
  uint64_t v42 = Text.init(_:tableName:bundle:comment:)();
  v20(v14, v8);
  return v42;
}

uint64_t sub_100B39814(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityAdjustmentDirection();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EB1FB0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LayoutDirection();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ScrubberView(0);
  sub_1001FF23C();
  uint64_t v15 = &v9[*(int *)(v7 + 56)];
  uint64_t v16 = v13;
  uint64_t v17 = v38;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v16, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v15, v17, v3);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v9, v10);
  if (v18 == enum case for LayoutDirection.leftToRight(_:))
  {
    int v19 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v15, v3);
    double v20 = -1.0;
    if (v19 == enum case for AccessibilityAdjustmentDirection.increment(_:)) {
      goto LABEL_9;
    }
    int v21 = enum case for AccessibilityAdjustmentDirection.decrement(_:);
    double v20 = 1.0;
    goto LABEL_7;
  }
  if (v18 != enum case for LayoutDirection.rightToLeft(_:))
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
    double v20 = 0.0;
    goto LABEL_9;
  }
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v15, v3);
  double v20 = 1.0;
  if (v19 != enum case for AccessibilityAdjustmentDirection.increment(_:))
  {
    int v21 = enum case for AccessibilityAdjustmentDirection.decrement(_:);
    double v20 = -1.0;
LABEL_7:
    if (v19 != v21) {
      goto LABEL_8;
    }
  }
LABEL_9:
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  double v22 = v20 * (*(double *)(v2 + 64) + *(double *)(v2 + 56));
  uint64_t v23 = (uint64_t *)(v2 + *(int *)(v14 + 44));
  uint64_t v24 = v23[1];
  uint64_t v39 = *v23;
  uint64_t v40 = v24;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  double v25 = v41;
  uint64_t v27 = sub_100B3C720(v22 + v41);
  if (v28)
  {
    uint64_t v29 = v26;
    uint64_t v30 = v37;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v37, enum case for AccessibilityAdjustmentDirection.increment(_:), v3);
    char v31 = static AccessibilityAdjustmentDirection.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v30, v3);
    if (v31) {
      uint64_t v27 = v29;
    }
  }
  double v32 = sub_100B3C9F0(*(double *)&v27);
  uint64_t v34 = v23[1];
  uint64_t v39 = *v23;
  uint64_t v33 = v39;
  uint64_t v40 = v34;
  double v41 = v32;
  State.wrappedValue.setter();
  uint64_t v39 = v33;
  uint64_t v40 = v34;
  State.wrappedValue.getter();
  sub_100B3CAA4(v25, v41);
  uint64_t v39 = v33;
  uint64_t v40 = v34;
  State.wrappedValue.getter();
  return sub_100B3AA10(v41);
}

uint64_t sub_100B39C40@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocalCoordinateSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.local.getter();
  GeometryProxy.frame<A>(in:)();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v7;
  a1[1] = v9;
  a1[2] = v11;
  a1[3] = v13;
  return result;
}

uint64_t sub_100B39D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = sub_100B39F34(a2);
  uint64_t v8 = type metadata accessor for ScrubberView(0);
  uint64_t v9 = (uint64_t *)(a2 + *(int *)(v8 + 56));
  uint64_t v11 = v9[1];
  uint64_t v22 = *v9;
  uint64_t v10 = v22;
  uint64_t v23 = v11;
  double v20 = v7;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.setter();
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  State.wrappedValue.getter();
  double v12 = 0.0 - v20 * 0.5;
  sub_10017DF08(&qword_100EB1D68);
  State.wrappedValue.getter();
  double v13 = sub_100B3CD78((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  double v14 = sub_1009D9900();
  uint64_t v15 = (double *)(a2 + *(int *)(v8 + 64));
  double v16 = *v15;
  uint64_t v17 = *((void *)v15 + 1);
  double v19 = v12 + v13 + v14 * 0.5;
  double v20 = v16;
  uint64_t v21 = v17;
  State.wrappedValue.setter();
  sub_100B39F94();
  return sub_100B3A10C();
}

double sub_100B39F34(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + *(int *)(type metadata accessor for ScrubberView(0) + 40) + 8) + 16);
  if (v2) {
    return *(double *)(a1 + 56) * (double)(v2 - 1) + *(double *)(a1 + 64) * (double)v2;
  }
  else {
    return 0.0;
  }
}

uint64_t sub_100B39F94()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ScrubberView(0);
  sub_10017DF08(&qword_100EB1D68);
  State.wrappedValue.getter();
  double v6 = sub_100B3CD78((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  double v7 = *(double *)(v0 + 64) + *(double *)(v0 + 56);
  double v8 = v6 / v7;
  double v9 = sub_100B3EB08(v7 * floor(v6 / v7));
  double v10 = sub_100B3EB08(v7 * floor(v8 + 1.0));
  uint64_t v11 = (long long *)(v0 + *(int *)(v5 + 60));
  uint64_t v12 = *((void *)v11 + 2);
  long long v15 = *v11;
  uint64_t v16 = v12;
  *(double *)double v14 = v9;
  *(double *)&v14[1] = v10;
  sub_10017DF08(&qword_100EB1E80);
  return State.wrappedValue.setter();
}

uint64_t sub_100B3A10C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v36 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Class v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100E64D60);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  double v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  double v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - v11;
  __chkstk_darwin(v13);
  long long v15 = (char *)&v33 - v14;
  uint64_t v16 = type metadata accessor for ScrubberView(0);
  uint64_t v17 = (uint64_t *)(v0 + *(int *)(v16 + 44));
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  uint64_t v38 = v18;
  uint64_t v39 = v19;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  sub_100B3C4D0((uint64_t)v15, v40);
  uint64_t v37 = v0;
  sub_10017DF08(&qword_100EB1D68);
  State.wrappedValue.getter();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v1);
  uint64_t v20 = (uint64_t)&v6[*(int *)(v4 + 56)];
  sub_10006DF38((uint64_t)v15, (uint64_t)v6, (uint64_t *)&unk_100E73CA0);
  sub_10006DF38((uint64_t)v12, v20, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v1) == 1)
  {
    sub_100178110((uint64_t)v12, (uint64_t *)&unk_100E73CA0);
    sub_100178110((uint64_t)v15, (uint64_t *)&unk_100E73CA0);
    int v21 = _s7Weather24LocationCompositionStateOwet_0(v20, 1, v1);
    if (v21 == 1) {
      uint64_t v22 = (uint64_t *)&unk_100E73CA0;
    }
    else {
      uint64_t v22 = &qword_100E64D60;
    }
    if (v21 == 1) {
      char v23 = -1;
    }
    else {
      char v23 = 0;
    }
  }
  else
  {
    uint64_t v24 = v9;
    sub_10006DF38((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v1) == 1)
    {
      sub_100178110((uint64_t)v12, (uint64_t *)&unk_100E73CA0);
      sub_100178110((uint64_t)v15, (uint64_t *)&unk_100E73CA0);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v1);
      char v23 = 0;
      uint64_t v22 = &qword_100E64D60;
    }
    else
    {
      double v25 = v35;
      uint64_t v26 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v35, v20, v1);
      sub_100B3F100((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
      char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v34 = v24;
      char v23 = v27;
      char v28 = *(void (**)(char *, uint64_t))(v26 + 8);
      v28(v25, v1);
      uint64_t v22 = (uint64_t *)&unk_100E73CA0;
      sub_100178110((uint64_t)v12, (uint64_t *)&unk_100E73CA0);
      sub_100178110((uint64_t)v15, (uint64_t *)&unk_100E73CA0);
      v28(v34, v1);
    }
  }
  sub_100178110((uint64_t)v6, v22);
  uint64_t v29 = (char *)(v37 + *(int *)(v16 + 68));
  char v30 = *v29;
  uint64_t v31 = *((void *)v29 + 1);
  LOBYTE(v38) = *v29;
  uint64_t v39 = v31;
  sub_10017DF08(&qword_100E65950);
  uint64_t result = State.wrappedValue.getter();
  if ((v23 & 1) != LOBYTE(v40))
  {
    LOBYTE(v38) = v30;
    uint64_t v39 = v31;
    LOBYTE(v40) = v23 & 1;
    return State.wrappedValue.setter();
  }
  return result;
}

void sub_100B3A558()
{
  sub_100162EA0();
  uint64_t v21 = v0;
  uint64_t v26 = v1;
  uint64_t v2 = type metadata accessor for ScrubberView(0);
  uint64_t v3 = sub_100164920(v2);
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocalCoordinateSpace();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10011C760();
  type metadata accessor for DragGesture();
  sub_100179C0C();
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  __chkstk_darwin(v10);
  sub_1001626E0();
  sub_10017DF08(&qword_100E70BA0);
  sub_100179C0C();
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  __chkstk_darwin(v12);
  sub_1001626E0();
  static CoordinateSpaceProtocol<>.local.getter();
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  uint64_t v20 = type metadata accessor for ScrubberView;
  sub_100B3F0AC(v0, (uint64_t)v8, (void (*)(void))type metadata accessor for ScrubberView);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  sub_100B3EFA0((uint64_t)v8, v15 + v14, (void (*)(void))type metadata accessor for ScrubberView);
  sub_100B3F100(&qword_100E70BC8, (void (*)(uint64_t))&type metadata accessor for DragGesture);
  sub_100B3F100(&qword_100E70BD0, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
  Gesture<>.onChanged(_:)();
  swift_release();
  sub_100162F0C();
  v16();
  sub_100B3F0AC(v21, (uint64_t)v8, (void (*)(void))v20);
  uint64_t v17 = swift_allocObject();
  sub_100B3EFA0((uint64_t)v8, v17 + v14, (void (*)(void))type metadata accessor for ScrubberView);
  sub_1001246C8(&qword_100E70BD8, &qword_100E70BA0);
  Gesture.onEnded(_:)();
  swift_release();
  sub_100162F0C();
  v18();
  sub_100162694();
}

uint64_t sub_100B3A8A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ScrubberView(0);
  sub_10017DF08(&qword_100EB1D68);
  State.wrappedValue.getter();
  double v7 = sub_100B3CD78((uint64_t)v5);
  double v8 = sub_100B3EB08(v7);
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(v6 + 44));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  double v15 = v8;
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = v9[1];
  uint64_t v16 = *v9;
  uint64_t v17 = v12;
  State.wrappedValue.getter();
  sub_100B3AA10(v15);
  return sub_100B3A10C();
}

uint64_t sub_100B3AA10(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E67240);
  __chkstk_darwin(v4 - 8);
  char v56 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E64D60);
  __chkstk_darwin(v6);
  double v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for MoonDetailSelectedDate();
  __chkstk_darwin(v58);
  uint64_t v57 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v51 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v51 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v60 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v54 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v59 = (char *)&v51 - v24;
  uint64_t v25 = type metadata accessor for ScrubberView(0);
  __chkstk_darwin(v25 - 8);
  char v27 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = *(unsigned char *)(v2[6] + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_offset + 8);
  sub_100B3F0AC((uint64_t)v2, (uint64_t)v27, (void (*)(void))type metadata accessor for ScrubberView);
  if ((v28 & 1) != 0
    || (uint64_t v29 = *((void *)v27 + 6) + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_offset, (*(unsigned char *)(v29 + 8) & 1) != 0))
  {
    sub_100B4042C((uint64_t)v27, (void (*)(void))type metadata accessor for ScrubberView);
  }
  else
  {
    double v37 = *(double *)v29;
    uint64_t result = sub_100B4042C((uint64_t)v27, (void (*)(void))type metadata accessor for ScrubberView);
    if (v37 == a1) {
      return result;
    }
  }
  sub_100B3C4D0((uint64_t)v20, a1);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21) == 1) {
    return sub_100178110((uint64_t)v20, (uint64_t *)&unk_100E73CA0);
  }
  double v32 = v59;
  uint64_t v31 = v60;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
  v51(v59, v20, v21);
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  uint64_t v53 = v31 + 16;
  v52(v17, v32, v21);
  uint64_t v33 = 1;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v21);
  uint64_t v34 = v2[6] + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_selectedDate;
  swift_beginAccess();
  if (!_s7Weather24LocationCompositionStateOwet_0(v34, 1, v58))
  {
    uint64_t v35 = v57;
    sub_100B3F0AC(v34, v57, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    sub_10085FC7C((uint64_t)v14);
    sub_100B4042C(v35, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    uint64_t v33 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, v33, 1, v21);
  uint64_t v36 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10006DF38((uint64_t)v17, (uint64_t)v8, (uint64_t *)&unk_100E73CA0);
  sub_10006DF38((uint64_t)v14, v36, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v21) == 1)
  {
    sub_100178110((uint64_t)v14, (uint64_t *)&unk_100E73CA0);
    sub_100178110((uint64_t)v17, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v21) == 1)
    {
      sub_100178110((uint64_t)v8, (uint64_t *)&unk_100E73CA0);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v59, v21);
    }
    goto LABEL_15;
  }
  uint64_t v38 = v55;
  sub_10006DF38((uint64_t)v8, v55, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v21) == 1)
  {
    sub_100178110((uint64_t)v14, (uint64_t *)&unk_100E73CA0);
    sub_100178110((uint64_t)v17, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v38, v21);
LABEL_15:
    sub_100178110((uint64_t)v8, &qword_100E64D60);
    goto LABEL_18;
  }
  uint64_t v39 = v54;
  v51(v54, (char *)v36, v21);
  sub_100B3F100((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
  char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
  double v41 = *(void (**)(char *, uint64_t))(v60 + 8);
  v41(v39, v21);
  sub_100178110((uint64_t)v14, (uint64_t *)&unk_100E73CA0);
  sub_100178110((uint64_t)v17, (uint64_t *)&unk_100E73CA0);
  v41((char *)v38, v21);
  sub_100178110((uint64_t)v8, (uint64_t *)&unk_100E73CA0);
  if (v40) {
    return ((uint64_t (*)(char *, uint64_t))v41)(v59, v21);
  }
LABEL_18:
  uint64_t v42 = v2[6];
  uint64_t v43 = (uint64_t)v56;
  char v44 = v59;
  uint64_t v45 = (void (*)(uint64_t, char *, uint64_t))v52;
  v52(v56, v59, v21);
  uint64_t v46 = v58;
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v43, 0, 1, v46);
  uint64_t v47 = v42 + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_selectedDate;
  swift_beginAccess();
  sub_100B40B44(v43, v47);
  swift_endAccess();
  sub_1001B1E64(v2 + 1, v2[4]);
  uint64_t v48 = v57;
  v45(v57, v44, v21);
  swift_storeEnumTagMultiPayload();
  char v49 = sub_100B3C334();
  sub_100792B10(v48, v49);
  sub_100B4042C(v48, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v44, v21);
  uint64_t v50 = v2[6] + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_offset;
  *(double *)uint64_t v50 = a1;
  *(unsigned char *)(v50 + 8) = 0;
  return result;
}

uint64_t sub_100B3B1E0(double *a1)
{
  double v1 = sub_100B3B210(*a1);
  return sub_100B3AA10(v1);
}

double sub_100B3B210(double a1)
{
  type metadata accessor for ScrubberView(0);
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  if (vabdd_f64(a1, v3) < 5.0)
  {
    State.wrappedValue.getter();
    return v3;
  }
  return a1;
}

uint64_t sub_100B3B2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ScrubberView(0);
  uint64_t v9 = (uint64_t *)(a3 + *(int *)(v8 + 56));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v22 = v10;
  uint64_t v23 = v11;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  double v12 = 0.0 - v20 * 0.5;
  sub_10017DF08(&qword_100EB1D68);
  State.wrappedValue.getter();
  double v13 = sub_100B3CD78((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  double v14 = sub_1009D9900();
  uint64_t v15 = (double *)(a3 + *(int *)(v8 + 64));
  double v16 = *v15;
  uint64_t v17 = *((void *)v15 + 1);
  double v19 = v12 + v13 + v14 * 0.5;
  double v20 = v16;
  uint64_t v21 = v17;
  State.wrappedValue.setter();
  sub_100B39F94();
  return sub_100B3A10C();
}

uint64_t sub_100B3B47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB1F40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10017DF08(&qword_100EB1F48);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  double v13 = (char *)&v20 - v12;
  *uint64_t v6 = static Alignment.center.getter();
  v6[1] = v14;
  uint64_t v15 = sub_10017DF08(&qword_100EB1F50);
  sub_100B3B66C(a1, (uint64_t)v6 + *(int *)(v15 + 44));
  swift_beginAccess();
  double v16 = sub_1009D9900() * 0.5;
  sub_10006DF38((uint64_t)v6, (uint64_t)v10, &qword_100EB1F40);
  uint64_t v17 = &v10[*(int *)(v8 + 44)];
  *(double *)uint64_t v17 = v16;
  *((void *)v17 + 1) = 0;
  sub_100178110((uint64_t)v6, &qword_100EB1F40);
  sub_10024D364((uint64_t)v10, (uint64_t)v13, &qword_100EB1F48);
  sub_10006DF38((uint64_t)v13, (uint64_t)v10, &qword_100EB1F48);
  sub_10006DF38((uint64_t)v10, a2, &qword_100EB1F48);
  uint64_t v18 = a2 + *(int *)(sub_10017DF08(&qword_100EB1F58) + 48);
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  sub_100178110((uint64_t)v13, &qword_100EB1F48);
  return sub_100178110((uint64_t)v10, &qword_100EB1F48);
}

uint64_t sub_100B3B66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v74 = a2;
  uint64_t v2 = sub_10017DF08(&qword_100EB1F60);
  __chkstk_darwin(v2 - 8);
  uint64_t v75 = &v56[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v72 = &v56[-v5];
  __chkstk_darwin(v6);
  char v73 = &v56[-v7];
  uint64_t v8 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v8 - 8);
  uint64_t v70 = &v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v69 = type metadata accessor for BlendMode();
  uint64_t v10 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v12 = &v56[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Image.ResizingMode();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  double v16 = &v56[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v60 = sub_10017DF08(&qword_100EB1F68);
  __chkstk_darwin(v60);
  uint64_t v18 = &v56[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = sub_10017DF08(&qword_100EB1F70);
  __chkstk_darwin(v19 - 8);
  uint64_t v77 = &v56[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v76 = &v56[-v22];
  unint64_t v68 = 0x8000000100CBE6E0;
  Image.init(systemName:)();
  unsigned int v67 = enum case for Image.ResizingMode.stretch(_:);
  uint64_t v23 = *(void (**)(void))(v14 + 104);
  uint64_t v65 = v14 + 104;
  uint64_t v66 = (void (*)(unsigned char *, void, uint64_t))v23;
  uint64_t v62 = v13;
  v23(v16);
  uint64_t v61 = v16;
  uint64_t v59 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
  uint64_t v63 = v14 + 8;
  uint64_t v64 = v24;
  v24(v16, v13);
  swift_beginAccess();
  sub_1009D98C0();
  sub_1009D98E0();
  sub_1009D98C0();
  sub_1009D98E0();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v25 = v90;
  int v57 = v91;
  uint64_t v26 = v92;
  LOBYTE(v13) = v93;
  uint64_t v27 = v94;
  uint64_t v28 = v95;
  uint64_t v58 = v10;
  uint64_t v29 = v69;
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v12, enum case for BlendMode.destinationOut(_:), v69);
  char v30 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
  uint64_t v31 = (uint64_t)v70;
  v30(v70, v12, v29);
  sub_100B3F0AC(v31, (uint64_t)&v18[*(int *)(v60 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v18 = v59;
  *((void *)v18 + 1) = 0;
  *((_WORD *)v18 + 8) = 257;
  *((void *)v18 + 3) = v25;
  v18[32] = v57;
  *((void *)v18 + 5) = v26;
  v18[48] = v13;
  *((void *)v18 + 7) = v27;
  *((void *)v18 + 8) = v28;
  swift_retain();
  sub_100B4042C(v31, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v12, v29);
  swift_release();
  sub_100B409F0(&qword_100EB1F78, &qword_100EB1F68, (void (*)(void))sub_100B40A6C);
  double v32 = v77;
  View.accessibilityHidden(_:)();
  sub_100178110((uint64_t)v18, &qword_100EB1F68);
  sub_10024D364((uint64_t)v32, (uint64_t)v76, &qword_100EB1F70);
  Image.init(systemName:)();
  uint64_t v33 = v61;
  uint64_t v34 = v62;
  v66(v61, v67, v62);
  uint64_t v35 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  v64(v33, v34);
  sub_1009D98C0();
  sub_1009D98C0();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v36 = v96;
  char v37 = v97;
  uint64_t v38 = v98;
  char v39 = v99;
  uint64_t v40 = v100;
  uint64_t v41 = v101;
  uint64_t v42 = (char *)(v71 + *(int *)(type metadata accessor for ScrubberView(0) + 68));
  char v43 = *v42;
  uint64_t v44 = *((void *)v42 + 1);
  LOBYTE(v78) = v43;
  uint64_t v79 = v44;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  if (v89 == 1)
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E7B3F8);
    static UIColor.macSafeSystemCyan.getter();
    uint64_t v45 = Color.init(_:)();
  }
  else
  {
    uint64_t v45 = static Color.white.getter();
  }
  uint64_t v46 = v45;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v78 = v35;
  uint64_t v79 = 0;
  __int16 v80 = 257;
  uint64_t v81 = v36;
  char v82 = v37;
  uint64_t v83 = v38;
  char v84 = v39;
  uint64_t v85 = v40;
  uint64_t v86 = v41;
  uint64_t v87 = KeyPath;
  uint64_t v88 = v46;
  sub_10017DF08(&qword_100EB1F90);
  sub_100B40AA4();
  uint64_t v48 = (uint64_t)v72;
  View.accessibilityHidden(_:)();
  swift_release();
  swift_release();
  swift_release();
  char v49 = v73;
  sub_10024D364(v48, (uint64_t)v73, &qword_100EB1F60);
  uint64_t v50 = v76;
  uint64_t v51 = v77;
  sub_10006DF38((uint64_t)v76, (uint64_t)v77, &qword_100EB1F70);
  uint64_t v52 = v75;
  sub_10006DF38((uint64_t)v49, (uint64_t)v75, &qword_100EB1F60);
  uint64_t v53 = v74;
  sub_10006DF38((uint64_t)v51, v74, &qword_100EB1F70);
  uint64_t v54 = sub_10017DF08(&qword_100EB1FA0);
  sub_10006DF38((uint64_t)v52, v53 + *(int *)(v54 + 48), &qword_100EB1F60);
  sub_100178110((uint64_t)v49, &qword_100EB1F60);
  sub_100178110((uint64_t)v50, &qword_100EB1F70);
  sub_100178110((uint64_t)v52, &qword_100EB1F60);
  return sub_100178110((uint64_t)v51, &qword_100EB1F70);
}

uint64_t sub_100B3BF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E668C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v38 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v36 - v14;
  uint64_t v16 = type metadata accessor for ScrubberDateSelection();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v36 - v20;
  sub_10006DF38(a2, (uint64_t)v15, &qword_100E668C0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16) == 1) {
    return sub_100178110((uint64_t)v15, &qword_100E668C0);
  }
  sub_100B3EFA0((uint64_t)v15, (uint64_t)v21, (void (*)(void))type metadata accessor for ScrubberDateSelection);
  sub_100B3F0AC((uint64_t)v21, (uint64_t)v18, (void (*)(void))type metadata accessor for ScrubberDateSelection);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v5) == 1)
  {
    uint64_t v23 = type metadata accessor for ScrubberView(0);
    sub_10017DF08(&qword_100EB1D68);
    State.wrappedValue.getter();
    double v24 = sub_100B3CD78((uint64_t)v7);
    double v25 = sub_100B3EB08(v24);
    uint64_t v26 = (uint64_t *)(a3 + *(int *)(v23 + 44));
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    double v39 = v25;
    uint64_t v40 = v27;
    uint64_t v41 = v28;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.setter();
    uint64_t v29 = v37;
  }
  else
  {
    uint64_t v29 = v37;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v7, v18, v5);
    double v30 = sub_100B3CD78((uint64_t)v7);
    double v31 = sub_100B3EB08(v30);
    double v32 = (uint64_t *)(a3 + *(int *)(type metadata accessor for ScrubberView(0) + 44));
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    double v39 = v31;
    uint64_t v40 = v33;
    uint64_t v41 = v34;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.setter();
  }
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v5);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v16);
  type metadata accessor for ScrubberView(0);
  sub_10006DF38((uint64_t)v12, v38, &qword_100E668C0);
  sub_10017DF08(&qword_100E98608);
  Binding.wrappedValue.setter();
  sub_100178110((uint64_t)v12, &qword_100E668C0);
  sub_1001B1E64((void *)(a3 + 8), *(void *)(a3 + 32));
  char v35 = sub_100B3C334();
  sub_100792CC0(v35);
  sub_100B3A10C();
  return sub_100B4042C((uint64_t)v21, (void (*)(void))type metadata accessor for ScrubberDateSelection);
}

uint64_t sub_100B3C334()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ScrubberView(0);
  sub_10017DF08(&qword_100EB1D68);
  State.wrappedValue.getter();
  double v6 = sub_100B3CD78((uint64_t)v4);
  double v7 = sub_100B3EB08(v6);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  double v8 = *v0 * 0.5;
  uint64_t v9 = (uint64_t *)((char *)v0 + *(int *)(v5 + 44));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v14 = *v9;
  uint64_t v15 = v11;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  if (v7 + v8 < v16) {
    return 1;
  }
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  State.wrappedValue.getter();
  return 2 * (v16 >= v7 + 0.0 - v8);
}

void sub_100B3C4D0(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v5 = type metadata accessor for ScrubberHour(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  double v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScrubberView(0);
  uint64_t v10 = (long long *)(v2 + *(int *)(v9 + 60));
  uint64_t v11 = *((void *)v10 + 2);
  long long v19 = *v10;
  uint64_t v20 = v11;
  sub_10017DF08(&qword_100EB1E80);
  State.wrappedValue.getter();
  if (v21 > a2 && v22 < a2)
  {
    sub_10017DF08(&qword_100EB1D68);
    State.wrappedValue.getter();
    uint64_t v18 = type metadata accessor for Date();
    uint64_t v16 = a1;
    uint64_t v17 = 0;
LABEL_12:
    _s7Weather24LocationCompositionStateOwst_0(v16, v17, 1, v18);
    return;
  }
  double v13 = floor(sub_100B3EB08(a2) / (*(double *)(v2 + 64) + *(double *)(v2 + 56)));
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v13 < 9.22337204e18)
  {
    uint64_t v14 = *(void *)(v2 + *(int *)(v9 + 40) + 8);
    if (*(void *)(v14 + 16) <= (unint64_t)(uint64_t)v13)
    {
      uint64_t v18 = type metadata accessor for Date();
      uint64_t v16 = a1;
      uint64_t v17 = 1;
    }
    else
    {
      sub_100B3F0AC(v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * (uint64_t)v13, (uint64_t)v8, (void (*)(void))type metadata accessor for ScrubberHour);
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, v8, v15);
      uint64_t v16 = a1;
      uint64_t v17 = 0;
      uint64_t v18 = v15;
    }
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_100B3C720(double a1)
{
  uint64_t v3 = type metadata accessor for ScrubberView(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = sub_100B3EB08(a1);
  double v11 = *(double *)(v1 + 64) + *(double *)(v1 + 56);
  double v12 = v10 / v11;
  double v13 = floor(v10 / v11);
  if (v12 == v13)
  {
    double v14 = sub_100B3EB08(v11 * v12);
  }
  else
  {
    double v14 = sub_100B3EB08(v11 * v13);
    double v15 = sub_100B3EB08(v11 * floor(v12 + 1.0));
    sub_10017DF08(&qword_100EB1D68);
    State.wrappedValue.getter();
    double v16 = sub_100B3CD78((uint64_t)v9);
    double v17 = sub_100B3EB08(v16);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v18 = sub_100B3EB08(v14);
    double v19 = sub_100B3EB08(v17);
    sub_100B3F0AC(v1, (uint64_t)v5, (void (*)(void))type metadata accessor for ScrubberView);
    if (v18 >= v19)
    {
      sub_100B4042C((uint64_t)v5, (void (*)(void))type metadata accessor for ScrubberView);
    }
    else
    {
      uint64_t v20 = &v5[*(int *)(v3 + 56)];
      uint64_t v22 = *((void *)v20 + 1);
      uint64_t v27 = *(void *)v20;
      uint64_t v21 = v27;
      uint64_t v28 = v22;
      sub_10017DF08(&qword_100E64490);
      State.wrappedValue.getter();
      double v23 = v29 * 0.5 - v17;
      uint64_t v27 = v21;
      uint64_t v28 = v22;
      State.wrappedValue.getter();
      double v24 = v29 * 0.5 - v15;
      sub_100B4042C((uint64_t)v5, (void (*)(void))type metadata accessor for ScrubberView);
      if (v23 < v24) {
        double v14 = v17;
      }
    }
  }
  return *(void *)&v14;
}

double sub_100B3C9F0(double a1)
{
  type metadata accessor for ScrubberView(0);
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  double v3 = *(double *)(v1 + 64);
  double v4 = sub_100B3EB08(a1);
  double v5 = 0.0;
  if (v4 < 0.0) {
    return sub_100B3EB08(v5);
  }
  double v5 = v7 - v3;
  if (v7 - v3 < v4) {
    return sub_100B3EB08(v5);
  }
  return a1;
}

uint64_t sub_100B3CAA4(double a1, double a2)
{
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v5 - 8);
  double v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  double v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  double v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  double v19 = (char *)&v27 - v18;
  unsigned int v20 = [self capabilitiesForHardware] supportsHaptics];
  uint64_t result = swift_unknownObjectRelease();
  if (v20)
  {
    sub_100B3C4D0((uint64_t)v10, a1);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
    {
      uint64_t v22 = (uint64_t)v10;
      return sub_100178110(v22, (uint64_t *)&unk_100E73CA0);
    }
    double v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v23(v19, v10, v11);
    sub_100B3C4D0((uint64_t)v7, a2);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v11) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v11);
      uint64_t v22 = (uint64_t)v7;
      return sub_100178110(v22, (uint64_t *)&unk_100E73CA0);
    }
    v23(v16, v7, v11);
    double v24 = 1.0;
    switch(sub_100B3D7D0((uint64_t)v19, (uint64_t)v16, v2))
    {
      case 1u:
        double v24 = 0.7;
        goto LABEL_10;
      case 2u:
        double v24 = 0.3;
        goto LABEL_10;
      case 3u:
        goto LABEL_11;
      default:
LABEL_10:
        double v25 = *(void **)(v2 + 72);
        [v25 prepare];
        [v25 impactOccurredWithIntensity:v24];
LABEL_11:
        uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
        v26(v16, v11);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v26)(v19, v11);
        break;
    }
  }
  return result;
}

double sub_100B3CD78(uint64_t a1)
{
  uint64_t v88 = type metadata accessor for Date();
  uint64_t v90 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v85 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v87 = (char *)&v84 - v5;
  uint64_t v94 = sub_10017DF08(&qword_100EB1E88);
  __chkstk_darwin(v94);
  uint64_t v84 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v86 = (uint64_t)&v84 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v84 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100EB1E90);
  __chkstk_darwin(v12 - 8);
  char v93 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v97 = (uint64_t)&v84 - v15;
  uint64_t v16 = sub_10017DF08(&qword_100E7FA28);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for ScrubberHour(0);
  uint64_t v19 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  char v89 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  double v23 = (char *)&v84 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v84 - v25;
  __chkstk_darwin(v27);
  double v29 = (char *)&v84 - v28;
  __chkstk_darwin(v30);
  double v32 = (char *)&v84 - v31;
  uint64_t v95 = v1 + *(int *)(type metadata accessor for ScrubberView(0) + 40);
  uint64_t v96 = v1;
  uint64_t v33 = *(void *)(v95 + 8);
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    uint64_t v92 = v11;
    uint64_t v35 = a1;
    uint64_t v36 = v19;
    uint64_t v37 = v33 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v91 = v36;
    uint64_t v38 = *(void *)(v36 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100B3F0AC(v37, (uint64_t)v29, (void (*)(void))type metadata accessor for ScrubberHour);
      if (static Date.== infix(_:_:)()) {
        break;
      }
      sub_100B4042C((uint64_t)v29, (void (*)(void))type metadata accessor for ScrubberHour);
      v37 += v38;
      if (!--v34)
      {
        uint64_t v39 = 1;
        goto LABEL_8;
      }
    }
    sub_100B3EFA0((uint64_t)v29, (uint64_t)v18, (void (*)(void))type metadata accessor for ScrubberHour);
    uint64_t v39 = 0;
LABEL_8:
    a1 = v35;
    uint64_t v19 = v91;
    uint64_t v11 = v92;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = 1;
  }
  uint64_t v40 = v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, v39, 1, v98);
  swift_bridgeObjectRelease();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v40);
  uint64_t v42 = v97;
  if (v41 == 1)
  {
    sub_100178110((uint64_t)v18, &qword_100E7FA28);
    uint64_t v44 = (uint64_t)v93;
    uint64_t v43 = v94;
    uint64_t v45 = v96;
  }
  else
  {
    uint64_t v91 = a1;
    uint64_t v46 = v19;
    sub_100B3EFA0((uint64_t)v18, (uint64_t)v32, (void (*)(void))type metadata accessor for ScrubberHour);
    uint64_t v47 = *(void *)(v95 + 8);
    uint64_t v48 = *(void *)(v47 + 16);
    if (v48)
    {
      uint64_t v49 = v47 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
      uint64_t v50 = *(void *)(v46 + 72);
      swift_bridgeObjectRetain();
      uint64_t v51 = 0;
      while (1)
      {
        sub_100B3F0AC(v49, (uint64_t)v26, (void (*)(void))type metadata accessor for ScrubberHour);
        if ((static Date.== infix(_:_:)() & 1) != 0 && v26[*(int *)(v98 + 20)] == v32[*(int *)(v98 + 20)]) {
          break;
        }
        sub_100B4042C((uint64_t)v26, (void (*)(void))type metadata accessor for ScrubberHour);
        ++v51;
        v49 += v50;
        if (v48 == v51)
        {
          swift_bridgeObjectRelease();
          uint64_t v42 = v97;
          goto LABEL_17;
        }
      }
      sub_100B4042C((uint64_t)v26, (void (*)(void))type metadata accessor for ScrubberHour);
      swift_bridgeObjectRelease();
      double v61 = (*(double *)(v96 + 64) + *(double *)(v96 + 56)) * (double)v51;
      sub_100B4042C((uint64_t)v32, (void (*)(void))type metadata accessor for ScrubberHour);
      return v61;
    }
LABEL_17:
    sub_100B4042C((uint64_t)v32, (void (*)(void))type metadata accessor for ScrubberHour);
    uint64_t v44 = (uint64_t)v93;
    uint64_t v43 = v94;
    uint64_t v45 = v96;
    uint64_t v19 = v46;
  }
  sub_100B3EB80(v45, v42);
  sub_10006DF38(v42, v44, &qword_100EB1E90);
  if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v43) == 1)
  {
    sub_100178110(v42, &qword_100EB1E90);
    uint64_t v52 = v44;
LABEL_27:
    sub_100178110(v52, &qword_100EB1E90);
    return 0.0;
  }
  uint64_t v53 = *(int *)(v43 + 48);
  uint64_t v54 = (uint64_t)&v11[v53];
  uint64_t v55 = v44 + v53;
  sub_100B3EFA0(v44, (uint64_t)v11, (void (*)(void))type metadata accessor for ScrubberHour);
  sub_100B3EFA0(v55, v54, (void (*)(void))type metadata accessor for ScrubberHour);
  uint64_t v56 = *(void *)(v95 + 8);
  uint64_t v57 = *(void *)(v56 + 16);
  if (!v57) {
    goto LABEL_26;
  }
  char v93 = (char *)((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  uint64_t v58 = (uint64_t)&v93[v56];
  uint64_t v59 = *(void *)(v19 + 72);
  swift_bridgeObjectRetain();
  uint64_t v60 = 0;
  while (1)
  {
    sub_100B3F0AC(v58, (uint64_t)v23, (void (*)(void))type metadata accessor for ScrubberHour);
    if ((static Date.== infix(_:_:)() & 1) != 0 && v23[*(int *)(v98 + 20)] == v11[*(int *)(v98 + 20)]) {
      break;
    }
    sub_100B4042C((uint64_t)v23, (void (*)(void))type metadata accessor for ScrubberHour);
    ++v60;
    v58 += v59;
    if (v57 == v60)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  sub_100B4042C((uint64_t)v23, (void (*)(void))type metadata accessor for ScrubberHour);
  swift_bridgeObjectRelease();
  uint64_t v63 = *(void *)(v95 + 8);
  uint64_t v64 = *(void *)(v63 + 16);
  if (!v64)
  {
LABEL_26:
    sub_100178110((uint64_t)v11, &qword_100EB1E88);
    uint64_t v52 = v42;
    goto LABEL_27;
  }
  double v65 = (*(double *)(v96 + 64) + *(double *)(v96 + 56)) * (double)v60;
  uint64_t v66 = (uint64_t)&v93[v63];
  swift_bridgeObjectRetain();
  uint64_t v67 = 0;
  uint64_t v68 = (uint64_t)v89;
  while (1)
  {
    sub_100B3F0AC(v66, v68, (void (*)(void))type metadata accessor for ScrubberHour);
    if ((static Date.== infix(_:_:)() & 1) != 0
      && *(unsigned __int8 *)(v68 + *(int *)(v98 + 20)) == *(unsigned __int8 *)(v54 + *(int *)(v98 + 20)))
    {
      break;
    }
    sub_100B4042C(v68, (void (*)(void))type metadata accessor for ScrubberHour);
    ++v67;
    v66 += v59;
    if (v64 == v67) {
      goto LABEL_25;
    }
  }
  uint64_t v92 = v11;
  sub_100B4042C(v68, (void (*)(void))type metadata accessor for ScrubberHour);
  swift_bridgeObjectRelease();
  double v69 = (*(double *)(v96 + 64) + *(double *)(v96 + 56)) * (double)v67;
  uint64_t v70 = v86;
  uint64_t v71 = v86 + *(int *)(v94 + 48);
  sub_100B3F0AC((uint64_t)v11, v86, (void (*)(void))type metadata accessor for ScrubberHour);
  sub_100B3F0AC(v54, v71, (void (*)(void))type metadata accessor for ScrubberHour);
  uint64_t v72 = v90 + 16;
  uint64_t v98 = *(void *)(v90 + 16);
  uint64_t v74 = v87;
  uint64_t v73 = v88;
  ((void (*)(char *, uint64_t, uint64_t))v98)(v87, v71, v88);
  uint64_t v96 = v72;
  sub_100B4042C(v71, (void (*)(void))type metadata accessor for ScrubberHour);
  uint64_t v75 = v84;
  uint64_t v95 = v84 + *(int *)(v94 + 48);
  uint64_t v76 = v95;
  sub_100B3F0AC((uint64_t)v92, v84, (void (*)(void))type metadata accessor for ScrubberHour);
  sub_100B3F0AC(v54, v76, (void (*)(void))type metadata accessor for ScrubberHour);
  uint64_t v77 = v85;
  ((void (*)(char *, uint64_t, uint64_t))v98)(v85, v75, v73);
  sub_100B4042C(v75, (void (*)(void))type metadata accessor for ScrubberHour);
  Date.timeIntervalSince(_:)();
  double v79 = v78;
  __int16 v80 = *(void (**)(char *, uint64_t))(v90 + 8);
  v90 += 8;
  v80(v77, v73);
  v80(v74, v73);
  sub_100B4042C(v95, (void (*)(void))type metadata accessor for ScrubberHour);
  sub_100B4042C(v70, (void (*)(void))type metadata accessor for ScrubberHour);
  uint64_t v81 = v70 + *(int *)(v94 + 48);
  sub_100B3F0AC((uint64_t)v92, v70, (void (*)(void))type metadata accessor for ScrubberHour);
  sub_100B3F0AC(v54, v81, (void (*)(void))type metadata accessor for ScrubberHour);
  ((void (*)(char *, uint64_t, uint64_t))v98)(v74, v70, v73);
  sub_100B4042C(v70, (void (*)(void))type metadata accessor for ScrubberHour);
  Date.timeIntervalSince(_:)();
  double v83 = v82;
  v80(v74, v73);
  sub_100B4042C(v81, (void (*)(void))type metadata accessor for ScrubberHour);
  sub_100178110((uint64_t)v92, &qword_100EB1E88);
  sub_100178110(v97, &qword_100EB1E90);
  return v65 + (v69 - v65) * (v83 / v79);
}

uint64_t sub_100B3D7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B3F100((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
  if (dispatch thunk of static Equatable.== infix(_:_:)()) {
    return 3;
  }
  type metadata accessor for ScrubberView(0);
  sub_10017DF08(&qword_100EB1D68);
  State.wrappedValue.getter();
  char v11 = static Date.> infix(_:_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v7 + 8);
  v12(v9, v6);
  if (v11)
  {
    State.wrappedValue.getter();
    sub_100B3F100((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
    char v13 = dispatch thunk of static Comparable.< infix(_:_:)();
    v12(v9, v6);
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  State.wrappedValue.getter();
  char v14 = static Date.< infix(_:_:)();
  v12(v9, v6);
  if (v14)
  {
    State.wrappedValue.getter();
    sub_100B3F100((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
    char v15 = dispatch thunk of static Comparable.< infix(_:_:)();
    v12(v9, v6);
    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  if (sub_100B3DA90(a3, a1, a2)) {
    return 1;
  }
  return 2;
}

BOOL sub_100B3DA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ScrubberDay(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v14 - 8);
  uint64_t v30 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ScrubberView(0);
  uint64_t v17 = *(void *)(a1 + *(int *)(v16 + 40));
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v28 = a2;
    uint64_t v29 = a3;
    uint64_t v33 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1007F32E8();
    unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v27 = v17;
    uint64_t v20 = v17 + v19;
    uint64_t v21 = *(void *)(v7 + 72);
    uint64_t v31 = v11 + 32;
    uint64_t v32 = v21;
    do
    {
      sub_100B3F0AC(v20, (uint64_t)v9, (void (*)(void))type metadata accessor for ScrubberDay);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v9, v10);
      sub_100B4042C((uint64_t)v9, (void (*)(void))type metadata accessor for ScrubberDay);
      uint64_t v22 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F32E8();
        uint64_t v22 = v33;
      }
      unint64_t v23 = v22[2];
      if (v23 >= v22[3] >> 1)
      {
        sub_1007F32E8();
        uint64_t v22 = v33;
      }
      v22[2] = v23 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v23, v13, v10);
      uint64_t v33 = v22;
      v20 += v32;
      --v18;
    }
    while (v18);
    uint64_t v16 = swift_bridgeObjectRelease();
    a2 = v28;
    a3 = v29;
  }
  __chkstk_darwin(v16);
  *(&v27 - 2) = a2;
  *(&v27 - 1) = a3;
  uint64_t v24 = (uint64_t)v30;
  sub_100354A4C();
  swift_bridgeObjectRelease();
  BOOL v25 = _s7Weather24LocationCompositionStateOwet_0(v24, 1, v10) != 1;
  sub_100178110(v24, (uint64_t *)&unk_100E73CA0);
  return v25;
}

BOOL sub_100B3DE14()
{
  BOOL result = 1;
  if ((static Date.> infix(_:_:)() & 1) == 0
    || (type metadata accessor for Date(),
        sub_100B3F100((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date), (dispatch thunk of static Comparable.< infix(_:_:)() & 1) != 0))
  {
    if ((static Date.< infix(_:_:)() & 1) == 0) {
      return 0;
    }
    type metadata accessor for Date();
    sub_100B3F100((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (dispatch thunk of static Comparable.< infix(_:_:)()) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B3DF30()
{
  type metadata accessor for ScrubberView(0);
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  DragGesture.Value.translation.getter();
  double v1 = v0;
  sub_10017DF08(&qword_100EB1FA8);
  State.wrappedValue.getter();
  if (v9)
  {
    State.wrappedValue.getter();
    return State.wrappedValue.setter();
  }
  else
  {
    double v3 = 0.0 - v1;
    double v4 = sub_100B3E880(v8, v3);
    sub_100B3E9C0(v3);
    double v5 = sub_100B3C9F0(v4);
    sub_100B3E0F0(0.5, v5);
    double v7 = v6;
    State.wrappedValue.getter();
    if (v8 != v7) {
      State.wrappedValue.setter();
    }
    sub_100B3A10C();
    return sub_100B3CAA4(v8, v5);
  }
}

void sub_100B3E0F0(double a1, double a2)
{
  double v2 = a2 / a1;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 >= 9.22337204e18) {
LABEL_7:
  }
    __break(1u);
}

uint64_t sub_100B3E140(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  __chkstk_darwin(v3);
  uint64_t v46 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  __chkstk_darwin(v5);
  double v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ScrubberView(0);
  uint64_t v9 = v8 - 8;
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v45 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v44 - v16;
  uint64_t v18 = (void ***)(a2 + *(int *)(v9 + 52));
  unint64_t v19 = *v18;
  uint64_t v20 = (uint64_t)v18[1];
  aBlock = v19;
  uint64_t v53 = v20;
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  double v21 = v58;
  double v22 = sub_100B3E744();
  uint64_t v23 = a2 + *(int *)(v9 + 56);
  uint64_t v24 = *(void ***)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t))(v23 + 16);
  aBlock = v24;
  LOBYTE(v53) = v25;
  uint64_t v54 = v26;
  sub_10017DF08(&qword_100EB1FA8);
  uint64_t result = State.wrappedValue.getter();
  if ((v59 & 1) == 0)
  {
    double v28 = sub_100B3E880(v58, v22);
    BOOL v29 = sub_100B3E9C0(v22);
    double v30 = COERCE_DOUBLE(sub_100B3C720(v28));
    double v32 = v30;
    double v34 = v33;
    if (!v29) {
      double v34 = v30;
    }
    if (v31) {
      double v32 = v34;
    }
    double v35 = sub_100B3C9F0(v32);
    uint64_t v36 = static Animation.spring(response:dampingFraction:blendDuration:)();
    __chkstk_darwin(v36);
    *(&v44 - 2) = (void (*)(char *, uint64_t))a2;
    *((double *)&v44 - 1) = v35;
    withAnimation<A>(_:_:)();
    swift_release();
    sub_100B3A10C();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v37 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v12 + 8);
    v44(v14, v51);
    sub_100B3F0AC(a2, (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ScrubberView);
    unint64_t v38 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    unint64_t v39 = (v10 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    sub_100B3EFA0((uint64_t)v11, v40 + v38, (void (*)(void))type metadata accessor for ScrubberView);
    *(double *)(v40 + v39) = v21;
    *(double *)(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8)) = v35;
    uint64_t v56 = sub_100B40E98;
    uint64_t v57 = v40;
    aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v54 = sub_10010A4D4;
    uint64_t v55 = &unk_100E385E0;
    int v41 = _Block_copy(&aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100B3F100((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
    uint64_t v42 = v46;
    uint64_t v43 = v50;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v43);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v48);
    return ((uint64_t (*)(char *, uint64_t))v44)(v17, v51);
  }
  return result;
}

double sub_100B3E744()
{
  DragGesture.Value.predictedEndLocation.getter();
  double v1 = v0;
  DragGesture.Value.location.getter();
  double v3 = (v1 - v2) * 4.0;
  DragGesture.Value.location.getter();
  if (fabs(v3) <= 100.0) {
    DragGesture.Value.translation.getter();
  }
  else {
    DragGesture.Value.predictedEndTranslation.getter();
  }
  return 0.0 - v4;
}

uint64_t sub_100B3E7B0()
{
  return State.wrappedValue.setter();
}

double sub_100B3E880(double a1, double a2)
{
  uint64_t v4 = type metadata accessor for LayoutDirection();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrubberView(0);
  sub_1001FF23C();
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for LayoutDirection.leftToRight(_:)) {
    return a1 - a2;
  }
  if (v8 == enum case for LayoutDirection.rightToLeft(_:)) {
    return a1 + a2;
  }
  double v9 = a1 - a2;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

BOOL sub_100B3E9C0(double a1)
{
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrubberView(0);
  sub_1001FF23C();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for LayoutDirection.leftToRight(_:)) {
    return a1 > 0.0;
  }
  if (v6 == enum case for LayoutDirection.rightToLeft(_:)) {
    return a1 < 0.0;
  }
  BOOL v7 = a1 > 0.0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

double sub_100B3EB08(double a1)
{
  type metadata accessor for ScrubberView(0);
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  return v3 * 0.5 - a1;
}

uint64_t sub_100B3EB80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7FA28);
  __chkstk_darwin(v4 - 8);
  int v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ScrubberHour(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v36 = a1 + *(int *)(type metadata accessor for ScrubberView(0) + 40);
  uint64_t v17 = *(void *)(v36 + 8);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v34 = v8;
    uint64_t v35 = a2;
    uint64_t v19 = v17 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v20 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100B3F0AC(v19, (uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberHour);
      if (static Date.> infix(_:_:)()) {
        break;
      }
      sub_100B4042C((uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberHour);
      v19 += v20;
      if (!--v18)
      {
        uint64_t v21 = 1;
        goto LABEL_8;
      }
    }
    sub_100B3EFA0((uint64_t)v13, (uint64_t)v6, (void (*)(void))type metadata accessor for ScrubberHour);
    uint64_t v21 = 0;
LABEL_8:
    uint64_t v8 = v34;
    a2 = v35;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, v21, 1, v7);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_100178110((uint64_t)v6, &qword_100E7FA28);
LABEL_18:
    uint64_t v27 = sub_10017DF08(&qword_100EB1E88);
    uint64_t v28 = a2;
    uint64_t v29 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v28, v29, 1, v27);
  }
  sub_100B3EFA0((uint64_t)v6, (uint64_t)v16, (void (*)(void))type metadata accessor for ScrubberHour);
  uint64_t v22 = *(void *)(v36 + 8);
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23) {
    goto LABEL_17;
  }
  uint64_t v24 = v22 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v25 = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  while (1)
  {
    sub_100B3F0AC(v24, (uint64_t)v10, (void (*)(void))type metadata accessor for ScrubberHour);
    if ((static Date.== infix(_:_:)() & 1) != 0 && v10[*(int *)(v7 + 20)] == v16[*(int *)(v7 + 20)]) {
      break;
    }
    sub_100B4042C((uint64_t)v10, (void (*)(void))type metadata accessor for ScrubberHour);
    ++v26;
    v24 += v25;
    if (v23 == v26)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  sub_100B4042C((uint64_t)v10, (void (*)(void))type metadata accessor for ScrubberHour);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_17:
    sub_100B4042C((uint64_t)v16, (void (*)(void))type metadata accessor for ScrubberHour);
    goto LABEL_18;
  }
  if ((unint64_t)(v26 - 1) < *(void *)(v22 + 16))
  {
    uint64_t v31 = sub_10017DF08(&qword_100EB1E88);
    uint64_t v32 = a2 + *(int *)(v31 + 48);
    sub_100B3F0AC(v24 - v25, a2, (void (*)(void))type metadata accessor for ScrubberHour);
    sub_100B3EFA0((uint64_t)v16, v32, (void (*)(void))type metadata accessor for ScrubberHour);
    uint64_t v28 = a2;
    uint64_t v29 = 0;
    uint64_t v27 = v31;
    return _s7Weather24LocationCompositionStateOwst_0(v28, v29, 1, v27);
  }
  __break(1u);
  return result;
}

uint64_t sub_100B3EFA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100B3EFF4(uint64_t a1, uint64_t a2)
{
  return sub_100B407E4(a1, a2, sub_100B3BF2C);
}

unint64_t sub_100B3F00C()
{
  unint64_t result = qword_100EB1E70;
  if (!qword_100EB1E70)
  {
    sub_10018C6DC(&qword_100EB1E50);
    sub_1001246C8(&qword_100EB1E78, &qword_100EB1E48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1E70);
  }
  return result;
}

uint64_t sub_100B3F0AC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100B3F100(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B3F148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(void *)a2 = static VerticalAlignment.top.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  sub_10017DF08(&qword_100EB1FC8);
  uint64_t v8 = swift_allocObject();
  *(double *)(v8 + 16) = a3;
  *(double *)(v8 + 24) = a4;
  *(void *)(v8 + 32) = a1;
  swift_bridgeObjectRetain_n();
  sub_10017DF08(&qword_100EB1FD0);
  type metadata accessor for Date();
  sub_10017DF08(&qword_100EB1FD8);
  sub_1001246C8(&qword_100EB1FE0, &qword_100EB1FD0);
  sub_100B41230();
  sub_100B3F100(&qword_100EB1FF8, (void (*)(uint64_t))type metadata accessor for ScrubberDay);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100B3F2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v51 = a3;
  uint64_t v9 = type metadata accessor for ScrubberDay(0);
  __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EB2000);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = &qword_100E7FA30;
  uint64_t v16 = sub_10017DF08(&qword_100E7FA30);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v44 - v23;
  uint64_t v47 = type metadata accessor for ScrubberDayContainerView(0);
  __chkstk_darwin(v47);
  uint64_t v26 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10017DF08(&qword_100EB1FD8);
  __chkstk_darwin(v48);
  uint64_t v46 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a2;
  sub_10043FA04(a2, (uint64_t)v24);
  uint64_t v49 = a1;
  sub_100B3F0AC(a1, (uint64_t)v21, (void (*)(void))type metadata accessor for ScrubberDay);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v9);
  uint64_t v28 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10006DF38((uint64_t)v24, (uint64_t)v14, &qword_100E7FA30);
  sub_10006DF38((uint64_t)v21, v28, &qword_100E7FA30);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v9) == 1)
  {
    sub_100178110((uint64_t)v21, &qword_100E7FA30);
    sub_100178110((uint64_t)v24, &qword_100E7FA30);
    if (_s7Weather24LocationCompositionStateOwet_0(v28, 1, v9) == 1)
    {
      char v29 = -1;
    }
    else
    {
      uint64_t v15 = &qword_100EB2000;
      char v29 = 0;
    }
  }
  else
  {
    uint64_t v30 = (uint64_t)v45;
    sub_10006DF38((uint64_t)v14, (uint64_t)v18, &qword_100E7FA30);
    if (_s7Weather24LocationCompositionStateOwet_0(v28, 1, v9) == 1)
    {
      sub_100178110((uint64_t)v21, &qword_100E7FA30);
      sub_100178110((uint64_t)v24, &qword_100E7FA30);
      sub_100B4042C((uint64_t)v18, (void (*)(void))type metadata accessor for ScrubberDay);
      char v29 = 0;
      uint64_t v15 = &qword_100EB2000;
    }
    else
    {
      sub_100B3EFA0(v28, v30, (void (*)(void))type metadata accessor for ScrubberDay);
      if (static Date.== infix(_:_:)() & 1) != 0 && (sub_100BDBD68(), (v31))
      {
        uint64_t v32 = *(int *)(v9 + 24);
        uint64_t v33 = *(void *)&v18[v32];
        uint64_t v34 = *(void *)&v18[v32 + 8];
        uint64_t v35 = (void *)(v30 + v32);
        BOOL v36 = v33 == *v35 && v34 == v35[1];
        if (v36 || (char v29 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
          char v29 = v18[*(int *)(v9 + 28)] ^ *(unsigned char *)(v30 + *(int *)(v9 + 28)) ^ 1;
        }
      }
      else
      {
        char v29 = 0;
      }
      sub_100B4042C(v30, (void (*)(void))type metadata accessor for ScrubberDay);
      sub_100178110((uint64_t)v21, &qword_100E7FA30);
      sub_100178110((uint64_t)v24, &qword_100E7FA30);
      sub_100B4042C((uint64_t)v18, (void (*)(void))type metadata accessor for ScrubberDay);
    }
  }
  uint64_t v37 = v49;
  uint64_t v39 = v47;
  uint64_t v38 = v48;
  uint64_t v40 = (uint64_t)v46;
  sub_100178110((uint64_t)v14, v15);
  sub_100B3F0AC(v37, (uint64_t)&v26[*(int *)(v39 + 20)], (void (*)(void))type metadata accessor for ScrubberDay);
  *uint64_t v26 = v29 & 1;
  sub_100B3F810(v37, a4, a5);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100B3F0AC((uint64_t)v26, v40, (void (*)(void))type metadata accessor for ScrubberDayContainerView);
  int v41 = (_OWORD *)(v40 + *(int *)(v38 + 36));
  long long v42 = v53;
  *int v41 = v52;
  v41[1] = v42;
  v41[2] = v54;
  sub_100B4042C((uint64_t)v26, (void (*)(void))type metadata accessor for ScrubberDayContainerView);
  return sub_10024D364(v40, v51, &qword_100EB1FD8);
}

double sub_100B3F810(uint64_t a1, double a2, double a3)
{
  uint64_t v5 = sub_10017DF08(&qword_100E7FA28);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for ScrubberDay(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v18 = *(int *)(v17 + 20);
  unint64_t v19 = *(void *)(*(void *)(a1 + v18) + 16);
  sub_100B3F0AC(a1, (uint64_t)&v25 - v15, (void (*)(void))type metadata accessor for ScrubberDay);
  if (v19 < 2)
  {
    sub_100B4042C((uint64_t)v16, (void (*)(void))type metadata accessor for ScrubberDay);
    goto LABEL_5;
  }
  sub_10043F90C(*(void *)&v16[*(int *)(v11 + 20)], (uint64_t)v10);
  sub_100B4042C((uint64_t)v16, (void (*)(void))type metadata accessor for ScrubberDay);
  uint64_t v20 = type metadata accessor for ScrubberHour(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v20) == 1)
  {
    sub_100178110((uint64_t)v10, &qword_100E7FA28);
LABEL_5:
    sub_100B3F0AC(a1, (uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberDay);
LABEL_6:
    sub_100B4042C((uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberDay);
    goto LABEL_7;
  }
  char v23 = v10[*(int *)(v20 + 20)];
  sub_100B4042C((uint64_t)v10, (void (*)(void))type metadata accessor for ScrubberHour);
  sub_100B3F0AC(a1, (uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberDay);
  if ((v23 & 1) == 0) {
    goto LABEL_6;
  }
  sub_100304214(*(void *)&v13[*(int *)(v11 + 20)], (uint64_t)v7);
  sub_100B4042C((uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberDay);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v20) == 1)
  {
    sub_100178110((uint64_t)v7, &qword_100E7FA28);
  }
  else
  {
    char v24 = v7[*(int *)(v20 + 20)];
    sub_100B4042C((uint64_t)v7, (void (*)(void))type metadata accessor for ScrubberHour);
    if (v24)
    {
      uint64_t v21 = *(void *)(*(void *)(a1 + v18) + 16) - 1;
      return (double)v21 * a3;
    }
  }
LABEL_7:
  uint64_t v21 = *(void *)(*(void *)(a1 + v18) + 16);
  return (double)v21 * a3;
}

uint64_t sub_100B3FB04@<X0>(uint64_t a1@<X8>)
{
  return sub_100B3F148(*(void *)(v1 + 16), a1, *(double *)v1, *(double *)(v1 + 8));
}

uint64_t sub_100B3FB10()
{
  uint64_t v1 = type metadata accessor for ColorRenderingMode();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EB20A8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v8 = sub_10017DF08(&qword_100EB20B0);
  sub_100B3FCD0(v0, (uint64_t)&v7[*(int *)(v8 + 44)]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ColorRenderingMode.nonLinear(_:), v1);
  sub_1001246C8(&qword_100EB20B8, &qword_100EB20A8);
  View.drawingGroup(opaque:colorMode:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100178110((uint64_t)v7, &qword_100EB20A8);
}

uint64_t sub_100B3FCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ScrubberDay(0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ScrubberDayView();
  uint64_t v11 = (int *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EB20C0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v44 - v19;
  uint64_t v21 = a1 + *(int *)(type metadata accessor for ScrubberDayContainerView(0) + 20);
  sub_100B3F0AC(v21, (uint64_t)v9, (void (*)(void))type metadata accessor for ScrubberDay);
  swift_beginAccess();
  double v22 = sub_1009D9900();
  double v23 = sub_1009D98A0();
  *(void *)&v13[v11[9]] = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  sub_100B3EFA0((uint64_t)v9, (uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberDay);
  *(double *)&v13[v11[7]] = v22;
  *(double *)&v13[v11[8]] = v23;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_100B3F0AC((uint64_t)v13, (uint64_t)v17, (void (*)(void))type metadata accessor for ScrubberDayView);
  char v24 = &v17[*(int *)(v15 + 44)];
  long long v25 = v52;
  *(_OWORD *)char v24 = v51;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v53;
  sub_100B4042C((uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberDayView);
  uint64_t v47 = v20;
  sub_10024D364((uint64_t)v17, (uint64_t)v20, &qword_100EB20C0);
  uint64_t v26 = (uint64_t *)(v21 + *(int *)(v7 + 32));
  uint64_t v27 = v26[1];
  uint64_t v49 = *v26;
  uint64_t v50 = v27;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v28 = Text.init<A>(_:)();
  uint64_t v30 = v29;
  char v32 = v31;
  uint64_t v44 = v33;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = v45;
  uint64_t v36 = v46;
  (*(void (**)(char *, void))(v45 + 104))(v5, enum case for Font.TextStyle.footnote(_:));
  if (*(unsigned char *)(v21 + *(int *)(v7 + 36)) == 1) {
    static Font.Weight.semibold.getter();
  }
  else {
    static Font.Weight.regular.getter();
  }
  char v37 = v32 & 1;
  uint64_t v38 = static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v36);
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = (uint64_t)v47;
  sub_10006DF38((uint64_t)v47, (uint64_t)v17, &qword_100EB20C0);
  uint64_t v41 = v48;
  sub_10006DF38((uint64_t)v17, v48, &qword_100EB20C0);
  uint64_t v42 = v41 + *(int *)(sub_10017DF08(&qword_100EB20C8) + 48);
  *(void *)uint64_t v42 = v28;
  *(void *)(v42 + 8) = v30;
  *(unsigned char *)(v42 + 16) = v37;
  *(void *)(v42 + 24) = v44;
  *(void *)(v42 + 32) = KeyPath;
  *(void *)(v42 + 40) = 1;
  *(unsigned char *)(v42 + 48) = 0;
  *(void *)(v42 + 56) = v39;
  *(void *)(v42 + 64) = v38;
  sub_100190CC4(v28, v30, v37);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100178110(v40, &qword_100EB20C0);
  sub_100191924(v28, v30, v37);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100178110((uint64_t)v17, &qword_100EB20C0);
}

void *sub_100B401A0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = static HorizontalAlignment.center.getter();
  sub_100B4023C(a1, a2, v10, a4);
  memcpy(&__src[7], v10, 0x98uLL);
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  return memcpy((void *)(a3 + 17), __src, 0x9FuLL);
}

uint64_t sub_100B4023C@<X0>(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X8>, double a4@<D0>)
{
  swift_beginAccess();
  sub_1009D9934();
  sub_1009D9934();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v24 = v45;
  uint64_t v6 = v47;
  char v7 = v48;
  uint64_t v9 = v49;
  uint64_t v8 = v50;
  uint64_t v10 = static Color.cyan.getter();
  char v11 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v27 = v46;
  if (a1) {
    double v20 = 0.0;
  }
  else {
    double v20 = 1.0;
  }
  double v21 = sub_1009D9900();
  double v22 = sub_1009D98A0();
  __src[0] = v45;
  LOBYTE(__src[1]) = v46;
  __src[2] = v47;
  LOBYTE(__src[3]) = v48;
  __src[4] = v49;
  __src[5] = v50;
  __src[6] = v10;
  LOBYTE(__src[7]) = v11;
  __src[8] = v13;
  __src[9] = v15;
  __src[10] = v17;
  __src[11] = v19;
  LOBYTE(__src[12]) = 0;
  *(double *)&void __src[13] = a4;
  __src[14] = 0;
  *(double *)&void __src[15] = v20;
  memcpy(a3, __src, 0x80uLL);
  *((double *)a3 + 16) = v21;
  *((double *)a3 + 17) = v22;
  a3[18] = a2;
  sub_100B410E0((uint64_t)__src);
  uint64_t v29 = v24;
  char v30 = v27;
  uint64_t v31 = v6;
  char v32 = v7;
  uint64_t v33 = v9;
  uint64_t v34 = v8;
  uint64_t v35 = v10;
  char v36 = v11;
  uint64_t v37 = v13;
  uint64_t v38 = v15;
  uint64_t v39 = v17;
  uint64_t v40 = v19;
  char v41 = 0;
  double v42 = a4;
  uint64_t v43 = 0;
  double v44 = v20;
  swift_bridgeObjectRetain();
  return sub_100B4110C((uint64_t)&v29);
}

void *sub_100B4041C@<X0>(uint64_t a1@<X8>)
{
  return sub_100B401A0(*(unsigned char *)(v1 + 8), *(void *)(v1 + 16), a1, *(double *)v1);
}

uint64_t sub_100B4042C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100B40484(uint64_t a1)
{
  return sub_100B39814(a1);
}

uint64_t sub_100B404C4()
{
  sub_10018846C();
  uint64_t v0 = sub_10017238C();

  return sub_100B39D4C(v0, v1);
}

unint64_t sub_100B40500()
{
  unint64_t result = qword_100EB1EF8;
  if (!qword_100EB1EF8)
  {
    sub_10018C6DC(&qword_100EB1EC0);
    sub_100B405A0();
    sub_1001246C8(&qword_100E80338, &qword_100E80340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1EF8);
  }
  return result;
}

unint64_t sub_100B405A0()
{
  unint64_t result = qword_100EB1F00;
  if (!qword_100EB1F00)
  {
    sub_10018C6DC(&qword_100EB1EB8);
    sub_100B40640();
    sub_1001246C8(&qword_100E81F10, &qword_100E81F18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1F00);
  }
  return result;
}

unint64_t sub_100B40640()
{
  unint64_t result = qword_100EB1F08;
  if (!qword_100EB1F08)
  {
    sub_10018C6DC(&qword_100EB1EB0);
    sub_10018C6DC(&qword_100EB1EE8);
    sub_1001246C8(&qword_100EB1EF0, &qword_100EB1EE8);
    swift_getOpaqueTypeConformance2();
    sub_100B3F100((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1F08);
  }
  return result;
}

uint64_t sub_100B40750()
{
  sub_10018846C();
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100B3A8A4(v2);
}

uint64_t sub_100B4078C()
{
  sub_10018846C();
  uint64_t v0 = (double *)sub_10017238C();

  return sub_100B3B1E0(v0);
}

uint64_t sub_100B407CC(uint64_t a1, uint64_t a2)
{
  return sub_100B407E4(a1, a2, sub_100B3B2BC);
}

uint64_t sub_100B407E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_10018846C();
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7);
}

unint64_t sub_100B40850()
{
  unint64_t result = qword_100EB1F10;
  if (!qword_100EB1F10)
  {
    sub_10018C6DC(&qword_100EB1ED8);
    sub_100B408F0();
    sub_1001246C8(&qword_100EB1F20, &qword_100EB1F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1F10);
  }
  return result;
}

unint64_t sub_100B408F0()
{
  unint64_t result = qword_100EB1F18;
  if (!qword_100EB1F18)
  {
    sub_10018C6DC(&qword_100EB1ED0);
    sub_10018C6DC(&qword_100EB1EC0);
    sub_10018C6DC(&qword_100E70BA8);
    sub_100B40500();
    sub_1001246C8(&qword_100E70BE0, &qword_100E70BA8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1F18);
  }
  return result;
}

uint64_t sub_100B409F0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B40A6C()
{
  return sub_100B409F0(&qword_100EB1F80, &qword_100EB1F88, (void (*)(void))sub_1003332F4);
}

unint64_t sub_100B40AA4()
{
  unint64_t result = qword_100EB1F98;
  if (!qword_100EB1F98)
  {
    sub_10018C6DC(&qword_100EB1F90);
    sub_100B40A6C();
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1F98);
  }
  return result;
}

uint64_t sub_100B40B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E67240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B40BB0(uint64_t a1)
{
  return sub_100B40BE4(a1, (uint64_t (*)(uint64_t))sub_100B3DF30);
}

uint64_t sub_100B40BCC(uint64_t a1)
{
  return sub_100B40BE4(a1, (uint64_t (*)(uint64_t))sub_100B3E140);
}

uint64_t sub_100B40BE4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  sub_10018846C();
  uint64_t v2 = sub_10017238C();

  return a2(v2);
}

uint64_t sub_100B40C34()
{
  return sub_100B3E7B0();
}

uint64_t sub_100B40C54()
{
  sub_100162EA0();
  type metadata accessor for ScrubberView(0);
  sub_100179CD4();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + 8);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ScrubberViewModel(0);
  type metadata accessor for TimeZone();
  sub_100162E4C();
  sub_100162F0C();
  v4();
  sub_100181BE8();
  sub_1001A3650();
  uint64_t v5 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v7 = *(void (**)(uint64_t))(v6 + 8);
  uint64_t v8 = sub_100185804();
  v7(v8);
  sub_10017DF08(&qword_100EB1D68);
  swift_release();
  sub_100181BE8();
  sub_1001A3650();
  sub_100181BE8();
  sub_100181BE8();
  uint64_t v9 = v3 + *(int *)(v0 + 72);
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(sub_10017DF08(&qword_100E98608) + 32);
  uint64_t v11 = type metadata accessor for ScrubberDateSelection();
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)
    && !_s7Weather24LocationCompositionStateOwet_0(v10, 1, v5))
  {
    ((void (*)(uint64_t, uint64_t))v7)(v10, v5);
  }
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100162E4C();
    sub_100162F0C();
    v12();
  }
  else
  {
    swift_release();
  }
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100B40E98()
{
  uint64_t v1 = type metadata accessor for ScrubberView(0);
  sub_100164920(v1);
  unint64_t v4 = (*(void *)(v3 + 64)
      + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100B3CAA4(*(double *)(v0 + v4), *(double *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

BOOL sub_100B40F0C()
{
  return sub_100B3DE14();
}

uint64_t sub_100B40F30(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScrubberContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScrubberContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ScrubberContentView()
{
  return &type metadata for ScrubberContentView;
}

uint64_t sub_100B41018()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B410C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B410E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100B4110C(uint64_t a1)
{
  return a1;
}

void *assignWithCopy for ScrubberAndTextView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ScrubberAndTextView()
{
  return &type metadata for ScrubberAndTextView;
}

uint64_t sub_100B41194()
{
  return sub_1001246C8(&qword_100EB1FB8, &qword_100EB1FC0);
}

uint64_t sub_100B411D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B411EC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100B41224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B3F2BC(a1, *(void *)(v2 + 32), a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

unint64_t sub_100B41230()
{
  unint64_t result = qword_100EB1FE8;
  if (!qword_100EB1FE8)
  {
    sub_10018C6DC(&qword_100EB1FD8);
    sub_100B3F100(&qword_100EB1FF0, (void (*)(uint64_t))type metadata accessor for ScrubberDayContainerView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1FE8);
  }
  return result;
}

uint64_t type metadata accessor for ScrubberDayContainerView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB2060);
}

uint64_t *sub_100B412FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    uint64_t v9 = (int *)type metadata accessor for ScrubberDay(0);
    *(void *)&v6[v9[5]] = *(void *)&v7[v9[5]];
    uint64_t v10 = v9[6];
    uint64_t v11 = &v6[v10];
    uint64_t v12 = &v7[v10];
    uint64_t v13 = *((void *)v12 + 1);
    *uint64_t v11 = *(void *)v12;
    v11[1] = v13;
    v6[v9[7]] = v7[v9[7]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_100B4140C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for ScrubberDay(0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unsigned char *sub_100B4149C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for ScrubberDay(0);
  *(void *)&v5[v8[5]] = *(void *)&v6[v8[5]];
  uint64_t v9 = v8[6];
  uint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  v5[v8[7]] = v6[v8[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_100B4155C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for ScrubberDay(0);
  *(void *)&v5[v8[5]] = *(void *)&v6[v8[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v8[6];
  uint64_t v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[v8[7]] = v6[v8[7]];
  return a1;
}

unsigned char *sub_100B41640(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for ScrubberDay(0);
  *(void *)&v5[v8[5]] = *(void *)&v6[v8[5]];
  *(_OWORD *)&v5[v8[6]] = *(_OWORD *)&v6[v8[6]];
  v5[v8[7]] = v6[v8[7]];
  return a1;
}

unsigned char *sub_100B416E8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  uint64_t v8 = (int *)type metadata accessor for ScrubberDay(0);
  *(void *)&v5[v8[5]] = *(void *)&v6[v8[5]];
  swift_bridgeObjectRelease();
  uint64_t v9 = v8[6];
  uint64_t v10 = &v5[v9];
  uint64_t v11 = (uint64_t *)&v6[v9];
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v5[v8[7]] = v6[v8[7]];
  return a1;
}

uint64_t sub_100B417AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B417C0);
}

uint64_t sub_100B417C0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for ScrubberDay(0);
    uint64_t v11 = (uint64_t)&a1[*(int *)(a3 + 20)];
    return _s7Weather24LocationCompositionStateOwet_0(v11, a2, v10);
  }
}

uint64_t sub_100B41848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B4185C);
}

unsigned char *sub_100B4185C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for ScrubberDay(0);
    uint64_t v8 = (uint64_t)&v5[*(int *)(a4 + 20)];
    return (unsigned char *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100B418D8()
{
  uint64_t result = type metadata accessor for ScrubberDay(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B41970()
{
  return sub_1001246C8(&qword_100EB2098, &qword_100EB20A0);
}

uint64_t sub_100B419AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B419E0()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100B41A64(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for ListViewAction();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2) {
          goto LABEL_16;
        }
        if (EnumCaseMultiPayload) {
          goto LABEL_26;
        }
        uint64_t v9 = type metadata accessor for LocationModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = sub_10017DF08(&qword_100E6F640);
        *((unsigned char *)a1 + *(int *)(v10 + 48)) = *((unsigned char *)a2 + *(int *)(v10 + 48));
        goto LABEL_35;
      case 1u:
        uint64_t v7 = type metadata accessor for LocationViewerViewAction();
        int v12 = swift_getEnumCaseMultiPayload();
        if (v12 == 2)
        {
LABEL_16:
          uint64_t v20 = type metadata accessor for Location.Identifier();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        }
        else if (v12 == 1)
        {
          uint64_t v21 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        }
        else
        {
          if (v12)
          {
LABEL_26:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            goto LABEL_36;
          }
          uint64_t v13 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        }
LABEL_35:
        swift_storeEnumTagMultiPayload();
LABEL_36:
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v7 = type metadata accessor for SearchViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v14 = type metadata accessor for CodableError();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
            goto LABEL_35;
          case 1u:
            *a1 = *a2;
            swift_bridgeObjectRetain();
            goto LABEL_35;
          case 2u:
            uint64_t v24 = a2[1];
            *a1 = *a2;
            a1[1] = v24;
            swift_bridgeObjectRetain();
            goto LABEL_35;
          case 3u:
          case 6u:
            uint64_t v25 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
            goto LABEL_35;
          case 4u:
            uint64_t v26 = type metadata accessor for LocationOfInterest();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
            goto LABEL_35;
          case 5u:
            uint64_t v28 = (void *)*a2;
            uint64_t v27 = a2[1];
            *a1 = *a2;
            a1[1] = v27;
            uint64_t v29 = a2[3];
            a1[2] = a2[2];
            a1[3] = v29;
            uint64_t v30 = a2[5];
            a1[4] = a2[4];
            a1[5] = v30;
            a1[6] = a2[6];
            uint64_t v31 = type metadata accessor for SearchLocation();
            uint64_t v32 = *(int *)(v31 + 32);
            __dst = (char *)a1 + v32;
            uint64_t v42 = v31;
            uint64_t v33 = (char *)a2 + v32;
            uint64_t v34 = type metadata accessor for Location();
            id v35 = v28;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
            {
              uint64_t v36 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v33, *(void *)(*(void *)(v36 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(__dst, v33, v34);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v34);
            }
            uint64_t v37 = *(int *)(v42 + 36);
            uint64_t v38 = (char *)a1 + v37;
            uint64_t v39 = (char *)a2 + v37;
            *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
            v38[16] = v39[16];
            goto LABEL_35;
          default:
            goto LABEL_26;
        }
      case 4u:
        uint64_t v15 = type metadata accessor for InteractiveMapViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 2u:
          case 4u:
            uint64_t v23 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
            goto LABEL_24;
          case 3u:
            uint64_t v22 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
LABEL_24:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        goto LABEL_36;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
        *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
        uint64_t v16 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for DynamicTypeSize();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        goto LABEL_36;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

void *sub_100B423F0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B42CE0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for ListViewAction();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2) {
          goto LABEL_15;
        }
        if (EnumCaseMultiPayload) {
          goto LABEL_25;
        }
        uint64_t v8 = type metadata accessor for LocationModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = sub_10017DF08(&qword_100E6F640);
        *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
        goto LABEL_34;
      case 1u:
        uint64_t v6 = type metadata accessor for LocationViewerViewAction();
        int v10 = swift_getEnumCaseMultiPayload();
        if (v10 == 2)
        {
LABEL_15:
          uint64_t v18 = type metadata accessor for Location.Identifier();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        }
        else if (v10 == 1)
        {
          uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        }
        else
        {
          if (v10)
          {
LABEL_25:
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
            goto LABEL_35;
          }
          uint64_t v11 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        }
LABEL_34:
        swift_storeEnumTagMultiPayload();
LABEL_35:
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v6 = type metadata accessor for SearchViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v12 = type metadata accessor for CodableError();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
            goto LABEL_34;
          case 1u:
            *a1 = *a2;
            swift_bridgeObjectRetain();
            goto LABEL_34;
          case 2u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            goto LABEL_34;
          case 3u:
          case 6u:
            uint64_t v22 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
            goto LABEL_34;
          case 4u:
            uint64_t v23 = type metadata accessor for LocationOfInterest();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
            goto LABEL_34;
          case 5u:
            uint64_t v24 = (void *)*a2;
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            a1[6] = a2[6];
            uint64_t v25 = type metadata accessor for SearchLocation();
            uint64_t v26 = *(int *)(v25 + 32);
            uint64_t v36 = v25;
            __dst = (char *)a1 + v26;
            uint64_t v27 = (char *)a2 + v26;
            uint64_t v28 = type metadata accessor for Location();
            id v29 = v24;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
            {
              uint64_t v30 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(__dst, v27, v28);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v28);
            }
            uint64_t v31 = *(int *)(v36 + 36);
            uint64_t v32 = (char *)a1 + v31;
            uint64_t v33 = (char *)a2 + v31;
            long long v34 = *(_OWORD *)v33;
            unsigned char v32[16] = v33[16];
            *(_OWORD *)uint64_t v32 = v34;
            goto LABEL_34;
          default:
            goto LABEL_25;
        }
      case 4u:
        uint64_t v13 = type metadata accessor for InteractiveMapViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 2u:
          case 4u:
            uint64_t v21 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
            goto LABEL_23;
          case 3u:
            uint64_t v20 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_23:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        goto LABEL_35;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
        *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
        uint64_t v14 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = type metadata accessor for DynamicTypeSize();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        goto LABEL_35;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_100B42CE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100B42D3C(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for ListViewAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2) {
        goto LABEL_14;
      }
      if (EnumCaseMultiPayload) {
        goto LABEL_18;
      }
      uint64_t v8 = type metadata accessor for LocationModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_10017DF08(&qword_100E6F640);
      *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
      goto LABEL_30;
    case 1u:
      uint64_t v6 = type metadata accessor for LocationViewerViewAction();
      int v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 2)
      {
LABEL_14:
        uint64_t v18 = type metadata accessor for Location.Identifier();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      }
      else if (v11 == 1)
      {
        uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      }
      else
      {
        if (v11)
        {
LABEL_18:
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
          goto LABEL_31;
        }
        uint64_t v12 = type metadata accessor for LocationModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      }
LABEL_30:
      swift_storeEnumTagMultiPayload();
LABEL_31:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 3u:
      uint64_t v6 = type metadata accessor for SearchViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v10 = type metadata accessor for CodableError();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
          goto LABEL_30;
        case 3u:
        case 6u:
          uint64_t v20 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          goto LABEL_30;
        case 4u:
          uint64_t v21 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
          goto LABEL_30;
        case 5u:
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v22 = type metadata accessor for SearchLocation();
          uint64_t v23 = *(int *)(v22 + 32);
          uint64_t v24 = (char *)a1 + v23;
          uint64_t v25 = (char *)a2 + v23;
          uint64_t v26 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
          {
            uint64_t v27 = sub_10017DF08(&qword_100E639E8);
            memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
          }
          uint64_t v30 = *(int *)(v22 + 36);
          uint64_t v31 = (char *)a1 + v30;
          uint64_t v32 = (char *)a2 + v30;
          *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
          v31[16] = v32[16];
          goto LABEL_30;
        default:
          goto LABEL_18;
      }
    case 4u:
      uint64_t v13 = type metadata accessor for InteractiveMapViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 4u:
          uint64_t v29 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
          goto LABEL_26;
        case 3u:
          uint64_t v28 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          break;
      }
      goto LABEL_31;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
      *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
      uint64_t v14 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_31;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

void *sub_100B43588(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B42CE0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for ListViewAction();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2) {
          goto LABEL_15;
        }
        if (EnumCaseMultiPayload) {
          goto LABEL_19;
        }
        uint64_t v8 = type metadata accessor for LocationModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = sub_10017DF08(&qword_100E6F640);
        *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
        goto LABEL_31;
      case 1u:
        uint64_t v6 = type metadata accessor for LocationViewerViewAction();
        int v11 = swift_getEnumCaseMultiPayload();
        if (v11 == 2)
        {
LABEL_15:
          uint64_t v18 = type metadata accessor for Location.Identifier();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        }
        else if (v11 == 1)
        {
          uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        }
        else
        {
          if (v11)
          {
LABEL_19:
            memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
            goto LABEL_32;
          }
          uint64_t v12 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        }
LABEL_31:
        swift_storeEnumTagMultiPayload();
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v6 = type metadata accessor for SearchViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v10 = type metadata accessor for CodableError();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
            goto LABEL_31;
          case 3u:
          case 6u:
            uint64_t v20 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
            goto LABEL_31;
          case 4u:
            uint64_t v21 = type metadata accessor for LocationOfInterest();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
            goto LABEL_31;
          case 5u:
            *a1 = *a2;
            *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
            *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
            *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
            uint64_t v22 = type metadata accessor for SearchLocation();
            uint64_t v23 = *(int *)(v22 + 32);
            uint64_t v24 = (char *)a1 + v23;
            uint64_t v25 = (char *)a2 + v23;
            uint64_t v26 = type metadata accessor for Location();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
            {
              uint64_t v27 = sub_10017DF08(&qword_100E639E8);
              memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
            }
            uint64_t v30 = *(int *)(v22 + 36);
            uint64_t v31 = (char *)a1 + v30;
            uint64_t v32 = (char *)a2 + v30;
            *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
            v31[16] = v32[16];
            goto LABEL_31;
          default:
            goto LABEL_19;
        }
      case 4u:
        uint64_t v13 = type metadata accessor for InteractiveMapViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 2u:
          case 4u:
            uint64_t v29 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
            goto LABEL_27;
          case 3u:
            uint64_t v28 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
LABEL_27:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        goto LABEL_32;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
        *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
        uint64_t v14 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = type metadata accessor for DynamicTypeSize();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_32;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_100B43DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - v14;
  LocationSearchEntityFromStringResolver.init()();
  double v17 = v16;
  double v19 = v18;
  id v20 = [self modernManager];
  if (v20)
  {
    uint64_t v21 = v20;
    id v22 = [v20 activeTileGroup];
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v33 = v10;
      id v24 = [v22 mapAttributionURLForCoordinate:v17, v19];
      uint64_t v34 = a1;
      if (v24)
      {
        uint64_t v25 = v24;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v26 = v33;
        uint64_t v27 = v13;
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
        v28(v8, v27, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v9);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1)
        {
          v28(v15, v8, v9);
          uint64_t v29 = URL.absoluteString.getter();
          uint64_t v31 = v30;

          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v9);
          *a3 = v29;
          a3[1] = v31;
          return result;
        }
      }
      else
      {
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v9);
      }

      sub_100658530((uint64_t)v8);
      a1 = v34;
    }
    else
    {
    }
  }
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100B44094()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100B440CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B43DE4(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_100B440D8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100097814(v6, qword_100F523D8);
  sub_1002102B0(v6, (uint64_t)qword_100F523D8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100B442B8()
{
  uint64_t HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100162EB8();
  swift_getKeyPath();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  sub_10017DF08(&qword_100EB22C0);
  sub_10017DF08(&qword_100EB22C8);
  sub_100B47B5C();
  sub_1001246C8(&qword_100EB22D0, &qword_100EB22C0);
  sub_1001246C8(&qword_100EB22D8, &qword_100EB22C8);
  sub_1001246C8(&qword_100EB22E0, &qword_100EB22A8);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)();
}

uint64_t sub_100B44468()
{
  uint64_t v0 = sub_10017DF08(&qword_100EB22C0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - v5;
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB2308);
  sub_100B47B5C();
  sub_1001246C8(&qword_100EB2310, &qword_100EB2308);
  ParameterSummarySwitchCondition.init(_:_:)();
  sub_1001246C8(&qword_100EB22D0, &qword_100EB22C0);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t sub_100B44658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100EB2318);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  uint64_t v25 = v2;
  __chkstk_darwin(v1);
  id v22 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v23 = (char *)v19 - v5;
  uint64_t v21 = sub_10017DF08(&qword_100EB2320);
  uint64_t v27 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v20 = (char *)v19 - v9;
  char v28 = 0;
  uint64_t v10 = sub_10017DF08(&qword_100EB22C8);
  v19[1] = sub_100B47B5C();
  sub_100B47E48();
  sub_1001246C8(&qword_100EB22D8, &qword_100EB22C8);
  v19[2] = v10;
  ParameterSummaryCaseCondition.init(_:_:)();
  sub_1001246C8(&qword_100EB2328, &qword_100EB2320);
  uint64_t v11 = v21;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v27 + 8);
  v27 += 8;
  v12(v7, v11);
  uint64_t v13 = v22;
  ParameterSummaryDefaultCaseCondition.init(_:)();
  sub_1001246C8(&qword_100EB2330, &qword_100EB2318);
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)();
  double v16 = *(void (**)(char *, uint64_t))(v25 + 8);
  v16(v13, v15);
  double v17 = v20;
  static ParameterSummaryCaseBuilder.buildBlock<A, B>(_:_:)();
  v16(v14, v15);
  return ((uint64_t (*)(char *, uint64_t))v12)(v17, v11);
}

uint64_t sub_100B44A08@<X0>(uint64_t a1@<X8>)
{
  return sub_100B44BD8((uint64_t)sub_100B44A20, a1);
}

uint64_t sub_100B44A20()
{
  swift_getKeyPath();
  sub_100B47B5C();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  swift_getKeyPath();
  swift_retain();
  uint64_t v1 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C31780;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v3 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100B44B20()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100B44B44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100B44B20();
  *a1 = result;
  return result;
}

uint64_t sub_100B44B70()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100B44B94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100B44B70();
  *a1 = result;
  return result;
}

uint64_t sub_100B44BC0@<X0>(uint64_t a1@<X8>)
{
  return sub_100B44BD8((uint64_t)sub_100B44EAC, a1);
}

uint64_t sub_100B44BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[0] = a1;
  v19[1] = a2;
  uint64_t v2 = sub_10017DF08(&qword_100EB22E8);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001626E0();
  sub_10017DF08(&qword_100EB22F0);
  sub_100162880();
  __chkstk_darwin(v4);
  sub_100162EB8();
  uint64_t v5 = sub_10017DF08(&qword_100EB22C8);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v19 - v12;
  sub_100B47B5C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._uint64_t countAndFlagsBits = 0x206E65704FLL;
  v14._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB22F8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v15._uint64_t countAndFlagsBits = 0x736C696174656420;
  v15._object = (void *)0xED000020726F6620;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB2300);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v16);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:_:)();
  sub_1001246C8(&qword_100EB22D8, &qword_100EB22C8);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  double v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v17)(v13, v5);
}

uint64_t sub_100B44EAC()
{
  swift_getKeyPath();
  sub_100B47B5C();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100C31F30;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100B44F74@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  uint64_t v1 = sub_10017DF08(&qword_100EB22E8);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10017DF08(&qword_100EB22F0);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_10017DF08(&qword_100EB22C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v15 - v8;
  sub_100B47B5C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._uint64_t countAndFlagsBits = 0x206E65704FLL;
  v10._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB22F8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v11._uint64_t countAndFlagsBits = 0x20726F6620;
  v11._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB2300);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v12);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_1001246C8(&qword_100EB22D8, &qword_100EB22C8);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v6, v3);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v13)(v9, v3);
}

uint64_t sub_100B45278()
{
  uint64_t v0 = sub_10017DF08(&qword_100EB2340);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_10017DF08(&qword_100EB2338);
  sub_100097814(v1, qword_100F523F0);
  sub_1002102B0(v1, (uint64_t)qword_100F523F0);
  sub_100B47B5C();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x8000000100CBEB60;
  v2._uint64_t countAndFlagsBits = 0xD000000000000021;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB22F8);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 63;
  v3._object = (void *)0xE100000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB2300);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._uint64_t countAndFlagsBits = 38;
  v4._object = (void *)0xE100000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB2348);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._uint64_t countAndFlagsBits = 0x3D6574616426;
  v5._object = (void *)0xE600000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EB2350);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v6);
  return IntentURLRepresentation.init(stringInterpolation:)();
}

uint64_t sub_100B4549C()
{
  if (qword_100E62B50 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100EB2338);

  return sub_1002102B0(v0, (uint64_t)qword_100F523F0);
}

uint64_t sub_100B45504()
{
  uint64_t v74 = sub_10017DF08(&qword_100E62D50);
  sub_100179C0C();
  uint64_t v73 = v0;
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v72 = v2;
  uint64_t v86 = type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  uint64_t v88 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v85 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v84 = (uint64_t)v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v87 = (uint64_t)v70 - v10;
  uint64_t v11 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100179C0C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = type metadata accessor for Locale();
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v25 = type metadata accessor for String.LocalizationValue();
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  uint64_t v27 = sub_10017EEAC();
  uint64_t v83 = v27;
  sub_100162880();
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = sub_10017DF08(&qword_100E62CD0);
  sub_10019DCB4(v32, (uint64_t)&v95);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v34 = v18 + 104;
  uint64_t v33 = *(void (**)(uint64_t))(v18 + 104);
  uint64_t v35 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unsigned int v77 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v78 = v16;
  v33(v22);
  uint64_t v79 = v34;
  uint64_t v76 = v33;
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_100163D6C();
  static Locale.current.getter();
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v22, v35, v16);
  uint64_t v36 = v15;
  sub_100180C28();
  _s7Weather24LocationCompositionStateOwst_0(v15, 0, 1, v27);
  uint64_t v37 = type metadata accessor for IntentDialog();
  uint64_t v80 = v37;
  long long v90 = 0u;
  long long v91 = 0u;
  char v92 = 0;
  _s7Weather24LocationCompositionStateOwst_0(v87, 1, 1, v37);
  _s7Weather24LocationCompositionStateOwst_0(v84, 1, 1, v37);
  unsigned int v81 = enum case for InputConnectionBehavior.default(_:);
  double v82 = *(void (**)(uint64_t))(v88 + 104);
  v88 += 104;
  v82(v85);
  sub_10017DF08(&qword_100E62CD8);
  sub_1001246C8(&qword_100E62CE0, &qword_100E62CD8);
  sub_100232310();
  uint64_t v75 = v31;
  uint64_t v71 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:resolvers:)();
  uint64_t v38 = sub_10017DF08(&qword_100EB22A8);
  sub_10019DCB4(v38, (uint64_t)&v94);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v39 = v77;
  uint64_t v40 = v78;
  char v41 = (void (*)(uint64_t, uint64_t, uint64_t))v76;
  ((void (*)(uint64_t, void, uint64_t))v76)(v22, v77, v78);
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v41(v22, v39, v40);
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v70[0] = v36;
  sub_1001D2294(v36);
  char v89 = 7;
  sub_100181514();
  uint64_t v42 = v80;
  _s7Weather24LocationCompositionStateOwst_0(v43, v44, v45, v80);
  sub_100181514();
  _s7Weather24LocationCompositionStateOwst_0(v46, v47, v48, v42);
  uint64_t v49 = v85;
  uint64_t v50 = v86;
  ((void (*)(uint64_t, void, uint64_t))v82)(v85, v81, v86);
  sub_100B47EFC();
  v70[2] = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v51 = sub_10017DF08(&qword_100EB22B0);
  sub_10019DCB4(v51, (uint64_t)&v93);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v52 = v77;
  uint64_t v53 = v78;
  long long v54 = (void (*)(uint64_t, uint64_t, uint64_t))v76;
  ((void (*)(uint64_t, void, uint64_t))v76)(v22, v77, v78);
  sub_100180C28();
  sub_100163D6C();
  static Locale.current.getter();
  v54(v22, v52, v53);
  uint64_t v55 = v70[0];
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_1001D2294(v55);
  char v89 = 0;
  sub_100181514();
  uint64_t v56 = v80;
  _s7Weather24LocationCompositionStateOwst_0(v57, v58, v59, v80);
  sub_100181514();
  _s7Weather24LocationCompositionStateOwst_0(v60, v61, v62, v56);
  ((void (*)(uint64_t, void, uint64_t))v82)(v49, v81, v50);
  sub_100B484E4();
  uint64_t v84 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v63 = sub_10017DF08(&qword_100E62D58);
  sub_10019DCB4(v63, (uint64_t)&v93);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v64 = v77;
  uint64_t v65 = v78;
  v54(v22, v77, v78);
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_100163D6C();
  static Locale.current.getter();
  v54(v22, v64, v65);
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_1001D2294(v55);
  sub_100181514();
  _s7Weather24LocationCompositionStateOwst_0(v66, v67, v68, v80);
  (*(void (**)(uint64_t, void, uint64_t))(v73 + 104))(v72, enum case for IntentParameter.DateKind.dateTime<A>(_:), v74);
  ((void (*)(uint64_t, void, uint64_t))v82)(v85, v81, v86);
  IntentParameter<>.init(title:description:kind:requestValueDialog:inputConnectionBehavior:)();
  return v71;
}

uint64_t sub_100B45DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100B4549C();
  uint64_t v3 = sub_10017DF08(&qword_100EB2338);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v2, v3);
}

uint64_t sub_100B45E1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100B4704C(&qword_100E62B48, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100F523D8);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v2, v3);
}

uint64_t sub_100B45EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_100B48C4C();
  *uint64_t v4 = v2;
  v4[1] = sub_100547E08;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_100B45F70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100B45504();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_100B45F9C(uint64_t a1)
{
  unint64_t v2 = sub_100B47B5C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100B45FD8(uint64_t a1)
{
  return sub_100B46F10(a1, qword_100F52408);
}

uint64_t sub_100B45FFC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6B3E0);
  __chkstk_darwin(v0 - 8);
  uint64_t v34 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EB2298);
  uint64_t v9 = sub_10017DF08(&qword_100EB22A0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = *(void *)(v10 + 72);
  uint64_t v39 = v9 - 8;
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v32 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_100C34ED0;
  unint64_t v40 = v12 + v11;
  *(unsigned char *)(v12 + v11) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  uint64_t v43 = sub_10017DF08(&qword_100E7F258);
  uint64_t v13 = *(void *)(v6 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = v13;
  uint64_t v35 = (v14 + 32) & ~v14;
  uint64_t v41 = v14 | 7;
  uint64_t v42 = 3 * v13;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C33BA0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v33 = v15;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v37 = v8;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v16 = v38;
  uint64_t v17 = v39;
  unint64_t v18 = v40;
  uint64_t v30 = v40 + v38 + *(int *)(v39 + 56);
  *(unsigned char *)(v40 + v38) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  unint64_t v31 = 0xE900000000000074;
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v19 = (unsigned char *)(v18 + 2 * v16);
  uint64_t v29 = &v19[*(int *)(v17 + 56)];
  *uint64_t v19 = 2;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v36 = v5;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  uint64_t v20 = v33;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C367B0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v30 = 5 * v20;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v21 = v38;
  unint64_t v22 = v40;
  uint64_t v23 = (unsigned char *)(v40 + 3 * v38);
  uint64_t v29 = &v23[*(int *)(v39 + 56)];
  *uint64_t v23 = 3;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v5);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C25ED0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(unsigned char *)(v22 + 4 * v21) = 4;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v36);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C349B0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v24 = v38;
  unint64_t v25 = v40;
  *(unsigned char *)(v40 + 5 * v38) = 5;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v26 = v36;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v36);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(unsigned char *)(v25 + 6 * v24) = 6;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v26);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C31870;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  type metadata accessor for DisplayRepresentation();
  sub_100B47FEC();
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  qword_100F52420 = result;
  return result;
}

uint64_t *sub_100B46A70()
{
  if (qword_100E62B60 != -1) {
    swift_once();
  }
  return &qword_100F52420;
}

uint64_t sub_100B46ABC()
{
  uint64_t result = sub_1001A1AD8();
  switch(v1)
  {
    case 1:
      uint64_t result = sub_10017B014();
      break;
    case 2:
      uint64_t result = 0xD000000000000012;
      break;
    case 3:
      uint64_t result = sub_1001A1384();
      break;
    case 4:
      uint64_t result = 0x7865646E497675;
      break;
    case 5:
      uint64_t result = 0x696C696269736976;
      break;
    case 6:
      uint64_t result = 1684957559;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100B46B68(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08D48, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

uint64_t sub_100B46BB4()
{
  uint64_t result = sub_1001A1AD8();
  switch(v1)
  {
    case 1:
      uint64_t result = sub_10017B014();
      break;
    case 2:
      uint64_t result = 0x7469706963657270;
      break;
    case 3:
      uint64_t result = sub_1001A1384();
      break;
    case 4:
      uint64_t result = 6911605;
      break;
    case 5:
      uint64_t result = 0x696C696269736976;
      break;
    case 6:
      uint64_t result = 1684957559;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100B46C60(unsigned __int8 *a1, char *a2)
{
  return sub_10088A37C(*a1, *a2);
}

Swift::Int sub_100B46C6C()
{
  return sub_1006528B8(*v0);
}

uint64_t sub_100B46C74(uint64_t a1)
{
  return sub_1002C254C(a1, *v1);
}

Swift::Int sub_100B46C7C(uint64_t a1)
{
  return sub_1002C47E4(a1, *v1);
}

unint64_t sub_100B46C84@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100B46B68(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100B46CB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100B46BB4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100B46CE0()
{
  uint64_t v2 = sub_100B46ABC();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1002F11CC(v3, v0, v2, v1);
}

uint64_t sub_100B46D6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100B4704C(&qword_100E62B58, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100F52408);
  uint64_t v3 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v2, v3);
}

uint64_t sub_100B46E10(uint64_t a1)
{
  unint64_t v2 = sub_100B47EFC();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100B46E5C()
{
  sub_100B46A70();

  return swift_bridgeObjectRetain();
}

uint64_t sub_100B46E8C(uint64_t a1)
{
  unint64_t v2 = sub_100B47E98();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100B46ED8(void *a1@<X8>)
{
  *a1 = &off_100E08CF8;
}

uint64_t sub_100B46EE8(uint64_t a1)
{
  return sub_100B46F10(a1, static TemperatureKind.typeDisplayRepresentation);
}

uint64_t sub_100B46F10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10017EEAC();
  sub_100162880();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v7 = type metadata accessor for TypeDisplayRepresentation();
  sub_100097814(v7, a2);
  sub_1002102B0(v7, (uint64_t)a2);
  LocalizedStringResource.init(stringLiteral:)();
  sub_100181514();
  _s7Weather24LocationCompositionStateOwst_0(v8, v9, v10, v5);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t TemperatureKind.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_100B4704C(&qword_100E62B68, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static TemperatureKind.typeDisplayRepresentation);
}

uint64_t sub_100B4704C(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return sub_1002102B0(v5, a3);
}

uint64_t static TemperatureKind.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100E62B68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static TemperatureKind.typeDisplayRepresentation);
  swift_beginAccess();
  sub_100162880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v2);
}

uint64_t static TemperatureKind.typeDisplayRepresentation.setter(uint64_t a1)
{
  if (qword_100E62B68 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static TemperatureKind.typeDisplayRepresentation);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static TemperatureKind.typeDisplayRepresentation.modify())()
{
  if (qword_100E62B68 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_1002102B0(v0, (uint64_t)static TemperatureKind.typeDisplayRepresentation);
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_100B472F0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6B3E0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v2;
  uint64_t v3 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v5;
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v20 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_10017DF08(&qword_100EB2358);
  uint64_t v8 = (int *)(sub_10017DF08(&qword_100EB2360) - 8);
  uint64_t v9 = *(void *)v8;
  uint64_t v21 = *(void *)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v23 = v11;
  *(_OWORD *)(v11 + 16) = xmmword_100C25ED0;
  unint64_t v12 = v11 + v10;
  unint64_t v18 = v11 + v10 + v8[14];
  *(unsigned char *)(v11 + v10) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v6);
  uint64_t v19 = type metadata accessor for DisplayRepresentation.Image();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v19);
  sub_10017DF08(&qword_100E7F258);
  uint64_t v22 = 3 * *(void *)(v7 + 72);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C33BA0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v13 = (uint64_t)v17;
  uint64_t v14 = (uint64_t)v16;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(unsigned char *)(v12 + v21) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v20);
  _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v19);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C4F040;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  type metadata accessor for DisplayRepresentation();
  sub_100B48620();
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  static TemperatureKind.caseDisplayRepresentations = result;
  return result;
}

uint64_t *TemperatureKind.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_100E62B70 != -1) {
    swift_once();
  }
  return &static TemperatureKind.caseDisplayRepresentations;
}

uint64_t static TemperatureKind.caseDisplayRepresentations.getter()
{
  if (qword_100E62B70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static TemperatureKind.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_100E62B70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static TemperatureKind.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TemperatureKind.caseDisplayRepresentations.modify())()
{
  if (qword_100E62B70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t TemperatureKind.urlRepresentationParameter.getter(char a1)
{
  strcpy((char *)v6, "temperature=");
  BYTE5(v6[1]) = 0;
  HIWORD(v6[1]) = -5120;
  BOOL v1 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v2 = 0x746E657261707061;
  }
  else {
    uint64_t v2 = 0x6C6175746361;
  }
  if (v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  else {
    unint64_t v3 = 0xE800000000000000;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  return v6[0];
}

uint64_t TemperatureKind.rawValue.getter(char a1)
{
  if (a1) {
    return 0x746E657261707061;
  }
  else {
    return 0x6C6175746361;
  }
}

Weather::TemperatureKind_optional __swiftcall TemperatureKind.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07148, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = Weather_TemperatureKind_apparent;
  }
  else {
    v4.value = Weather_TemperatureKind_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static TemperatureKind.allCases.getter()
{
  return &off_100E08E10;
}

unint64_t sub_100B47B5C()
{
  unint64_t result = qword_100EB2178;
  if (!qword_100EB2178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2178);
  }
  return result;
}

unint64_t sub_100B47BAC()
{
  unint64_t result = qword_100EB2180;
  if (!qword_100EB2180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2180);
  }
  return result;
}

unint64_t sub_100B47BFC()
{
  unint64_t result = qword_100EB2188;
  if (!qword_100EB2188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2188);
  }
  return result;
}

uint64_t sub_100B47C48()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100B47C68()
{
  unint64_t result = qword_100EB2198;
  if (!qword_100EB2198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2198);
  }
  return result;
}

unint64_t sub_100B47CB8()
{
  unint64_t result = qword_100EB21A0;
  if (!qword_100EB21A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21A0);
  }
  return result;
}

unint64_t sub_100B47D08()
{
  unint64_t result = qword_100EB21A8;
  if (!qword_100EB21A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21A8);
  }
  return result;
}

unint64_t sub_100B47D58()
{
  unint64_t result = qword_100EB21B0;
  if (!qword_100EB21B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21B0);
  }
  return result;
}

unint64_t sub_100B47DA8()
{
  unint64_t result = qword_100EB21C0;
  if (!qword_100EB21C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21C0);
  }
  return result;
}

unint64_t sub_100B47DF8()
{
  unint64_t result = qword_100EB21C8;
  if (!qword_100EB21C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21C8);
  }
  return result;
}

unint64_t sub_100B47E48()
{
  unint64_t result = qword_100EB21D0;
  if (!qword_100EB21D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21D0);
  }
  return result;
}

unint64_t sub_100B47E98()
{
  unint64_t result = qword_100EB21D8;
  if (!qword_100EB21D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21D8);
  }
  return result;
}

uint64_t sub_100B47EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100B48490(a1, a2, a3, (void (*)(void))sub_100B47EFC);
}

unint64_t sub_100B47EFC()
{
  unint64_t result = qword_100EB21E0;
  if (!qword_100EB21E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21E0);
  }
  return result;
}

unint64_t sub_100B47F4C()
{
  unint64_t result = qword_100EB21E8;
  if (!qword_100EB21E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21E8);
  }
  return result;
}

unint64_t sub_100B47F9C()
{
  unint64_t result = qword_100EB21F0;
  if (!qword_100EB21F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21F0);
  }
  return result;
}

unint64_t sub_100B47FEC()
{
  unint64_t result = qword_100EB21F8;
  if (!qword_100EB21F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB21F8);
  }
  return result;
}

uint64_t sub_100B48038()
{
  return sub_1001246C8(&qword_100EB2200, &qword_100EB2208);
}

uint64_t sub_100B48074(char *a1, char *a2)
{
  return sub_10088AC6C(*a1, *a2);
}

unint64_t sub_100B48084()
{
  unint64_t result = qword_100EB2210;
  if (!qword_100EB2210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2210);
  }
  return result;
}

Swift::Int sub_100B480D0()
{
  return sub_1006527C4();
}

uint64_t sub_100B480D8()
{
  return sub_1002C2B2C();
}

Swift::Int sub_100B480E0()
{
  return sub_1002C4494();
}

Weather::TemperatureKind_optional sub_100B480E8@<W0>(Swift::String *a1@<X0>, Weather::TemperatureKind_optional *a2@<X8>)
{
  result.value = TemperatureKind.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100B48118@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TemperatureKind.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100B48148()
{
  unint64_t result = qword_100EB2218;
  if (!qword_100EB2218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2218);
  }
  return result;
}

unint64_t sub_100B48198()
{
  unint64_t result = qword_100EB2220;
  if (!qword_100EB2220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2220);
  }
  return result;
}

unint64_t sub_100B481E8()
{
  unint64_t result = qword_100EB2228;
  if (!qword_100EB2228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2228);
  }
  return result;
}

uint64_t sub_100B48234()
{
  uint64_t v3 = TemperatureKind.urlRepresentationParameter.getter(*v0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  return sub_1002F11CC(v4, v1, v3, v2);
}

unint64_t sub_100B482C0()
{
  unint64_t result = qword_100EB2238;
  if (!qword_100EB2238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2238);
  }
  return result;
}

unint64_t sub_100B48310()
{
  unint64_t result = qword_100EB2240;
  if (!qword_100EB2240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2240);
  }
  return result;
}

unint64_t sub_100B48360()
{
  unint64_t result = qword_100EB2248;
  if (!qword_100EB2248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2248);
  }
  return result;
}

unint64_t sub_100B483B0()
{
  unint64_t result = qword_100EB2250;
  if (!qword_100EB2250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2250);
  }
  return result;
}

uint64_t sub_100B483FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = TemperatureKind.typeDisplayRepresentation.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v3 = type metadata accessor for TypeDisplayRepresentation();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_100B48478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100B48490(a1, a2, a3, (void (*)(void))sub_100B484E4);
}

uint64_t sub_100B48490(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100B484E4()
{
  unint64_t result = qword_100EB2258;
  if (!qword_100EB2258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2258);
  }
  return result;
}

uint64_t sub_100B48530(uint64_t a1)
{
  unint64_t v2 = sub_100B484E4();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100B48580()
{
  unint64_t result = qword_100EB2260;
  if (!qword_100EB2260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2260);
  }
  return result;
}

unint64_t sub_100B485D0()
{
  unint64_t result = qword_100EB2268;
  if (!qword_100EB2268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2268);
  }
  return result;
}

unint64_t sub_100B48620()
{
  unint64_t result = qword_100EB2270;
  if (!qword_100EB2270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2270);
  }
  return result;
}

uint64_t sub_100B4866C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100B486B8(uint64_t a1)
{
  unint64_t v2 = sub_100B483B0();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100B48704()
{
  return sub_1001246C8(&qword_100EB2278, &qword_100EB2280);
}

void sub_100B48740(void *a1@<X8>)
{
  *a1 = &off_100E08E10;
}

unsigned char *storeEnumTagSinglePayload for TemperatureKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B4881CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for TemperatureKind()
{
}

unsigned char *sub_100B48850(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B4891CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

void type metadata accessor for SpecificConditionKind()
{
}

void *sub_100B48950(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100B489A8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100B48A38(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

void type metadata accessor for OpenWeatherSpecificConditionIntent()
{
}

uint64_t sub_100B48A9C()
{
  return sub_1001246C8(&qword_100EB2288, &qword_100EB2290);
}

uint64_t sub_100B48AD8()
{
  uint64_t v0 = sub_10017DF08(&qword_100E7F270);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = sub_10054963C();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)();
  sub_100549688();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)();
  sub_1002F0EBC();
  static ResolverSpecificationBuilder.buildPartialBlock<A>(first:)();
  v6[0] = v4;
  v6[1] = &type metadata for LocationSearchEntityFromStringResolver;
  static ResolverSpecificationBuilder.buildPartialBlock<A, each B>(accumulated:next:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

unint64_t sub_100B48C4C()
{
  unint64_t result = qword_100EB22B8;
  if (!qword_100EB22B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB22B8);
  }
  return result;
}

uint64_t sub_100B48CA8(uint64_t a1, long long *a2, long long *a3, long long *a4)
{
  *(void *)(v4 + 16) = a1;
  sub_1001262E4(a2, v4 + 24);
  sub_1001262E4(a3, v4 + 64);
  sub_1001262E4(a4, v4 + 104);
  return v4;
}

uint64_t sub_100B48D04()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 104);
  return v0;
}

uint64_t sub_100B48D3C()
{
  sub_100B48D04();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GeocodeWeatherService()
{
  return self;
}

uint64_t sub_100B48D94(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a2;
  uint64_t v56 = type metadata accessor for WeatherServiceCaching.Options();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v57 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100EABE00);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v54 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100EABE08);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v51 = v10;
  type metadata accessor for WeatherServiceFetchOptions();
  sub_100179C0C();
  uint64_t v58 = v12;
  uint64_t v59 = v11;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v55 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100EB2420);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherServiceLocationOptions();
  sub_100179C0C();
  uint64_t v47 = v19;
  uint64_t v48 = v18;
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v21 = v20;
  type metadata accessor for ProductRequirementsFactory.AppGeoRequiredProducts();
  sub_100179C0C();
  uint64_t v52 = v23;
  uint64_t v53 = v22;
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)v45 - v29;
  WeatherDataRequestOptions.timeZone.getter();
  sub_1001B1E64(v2 + 3, v2[6]);
  uint64_t v49 = v30;
  uint64_t v50 = v25;
  dispatch thunk of ProductRequirementsFactoryType.appGeoRequiredProducts(for:)();
  WeatherDataRequestOptions.locationOptions.getter();
  uint64_t v31 = type metadata accessor for WeatherRequestLocationOptions();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v31) == 1)
  {
    sub_1001781AC((uint64_t)v17, &qword_100EB2420);
  }
  else
  {
    WeatherRequestLocationOptions.decimalPrecision.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8))(v17, v31);
  }
  sub_1001B1E64(v2 + 8, v2[11]);
  dispatch thunk of LocationManagerType.limitsPrecision.getter();
  uint64_t v32 = v21;
  uint64_t v46 = v21;
  WeatherServiceLocationOptions.init(decimalPrecision:limitsPrecision:)();
  WeatherDataRequestOptions.timeZone.getter();
  uint64_t v33 = v47;
  uint64_t v34 = v48;
  uint64_t v35 = v51;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v51, v32, v48);
  _s7Weather24LocationCompositionStateOwst_0(v35, 0, 1, v34);
  v45[1] = WeatherDataRequestOptions.treatmentIdentifiers.getter();
  uint64_t v36 = type metadata accessor for WeatherNetworkActivity();
  _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, v36);
  WeatherDataRequestOptions.needsTwilightData.getter();
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_100B4BA54();
  sub_10017DF08(&qword_100EABE18);
  sub_100B4BAA4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v37 = v55;
  uint64_t v38 = WeatherServiceFetchOptions.init(countryCode:timeZone:locationOptions:cachingOptions:treatmentIdentifiers:networkActivity:needsMarineData:needsTwilightData:)();
  __chkstk_darwin(v38);
  uint64_t v39 = v60;
  v45[-4] = v2;
  v45[-3] = v39;
  unint64_t v40 = v50;
  uint64_t v43 = v50;
  uint64_t v44 = v37;
  sub_10017DF08(&qword_100EB2428);
  swift_allocObject();
  uint64_t v41 = Promise.init(resolver:)();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v46, v34);
  sub_1001781AC((uint64_t)v49, &qword_100E6D1D8);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v37, v59);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
  return v41;
}

uint64_t sub_100B492E8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v74 = a8;
  uint64_t v49 = a6;
  uint64_t v48 = a5;
  uint64_t v54 = a4;
  id v59 = a3;
  uint64_t v52 = a2;
  uint64_t v56 = a1;
  uint64_t v8 = sub_10017DF08(&qword_100EB2430);
  uint64_t v75 = *(void *)(v8 - 8);
  uint64_t v76 = v8;
  __chkstk_darwin(v8);
  uint64_t v78 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EABE30);
  uint64_t v72 = *(void *)(v10 - 8);
  uint64_t v73 = v10;
  __chkstk_darwin(v10);
  uint64_t v41 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100EABE38);
  uint64_t v70 = *(void *)(v12 - 8);
  uint64_t v71 = v12;
  __chkstk_darwin(v12);
  uint64_t v42 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EABE40);
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v69 = v14;
  __chkstk_darwin(v14);
  uint64_t v43 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EABE48);
  uint64_t v66 = *(void *)(v16 - 8);
  uint64_t v67 = v16;
  __chkstk_darwin(v16);
  uint64_t v44 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EABE50);
  uint64_t v64 = *(void *)(v18 - 8);
  uint64_t v65 = v18;
  __chkstk_darwin(v18);
  uint64_t v45 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100EABE58);
  uint64_t v62 = *(void *)(v20 - 8);
  uint64_t v63 = v20;
  __chkstk_darwin(v20);
  uint64_t v46 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100EABE60);
  uint64_t v60 = *(void *)(v22 - 8);
  uint64_t v61 = v22;
  __chkstk_darwin(v22);
  uint64_t v47 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10017DF08(&qword_100EABE68);
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  unsigned int v77 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10017DF08(&qword_100EABE70);
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v79 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10017DF08(&qword_100EABE78);
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v80 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = *(void *)(v48 + 16);
  ProductRequirementsFactory.AppGeoRequiredProducts.current.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.minutely.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.hourly.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.daily.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.airQuality.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.changes.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.alerts.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.availability.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.news.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.historicalComparisons.getter();
  ProductRequirementsFactory.AppGeoRequiredProducts.locationInfo.getter();
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v49;
  uint64_t v29 = v56;
  void v27[2] = v49;
  v27[3] = v29;
  id v30 = v59;
  v27[4] = v52;
  v27[5] = v30;
  v27[6] = v54;
  uint64_t v56 = type metadata accessor for CurrentWeather();
  id v59 = v28;
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E6E8F8);
  sub_10017DF08(&qword_100E66CC8);
  sub_10017DF08(&qword_100E66CA0);
  sub_10017DF08(&qword_100E885C0);
  sub_10017DF08(&qword_100E6D1C8);
  sub_10017DF08(&qword_100E957B8);
  type metadata accessor for WeatherAvailability();
  sub_10017DF08(&qword_100EABE80);
  sub_10017DF08(&qword_100E6B8B8);
  type metadata accessor for LocationInfo();
  uint64_t v31 = v78;
  uint64_t v32 = v41;
  uint64_t v33 = v42;
  uint64_t v34 = v43;
  uint64_t v35 = v47;
  uint64_t v36 = v46;
  uint64_t v37 = v45;
  uint64_t v38 = v44;
  WeatherService.fetchWeather<A, B, C, D, E, F, G, H, I, J, K>(for:including:_:_:_:_:_:_:_:_:_:_:options:completion:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v31, v76);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v32, v73);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v71);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v69);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v38, v67);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v65);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v63);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v61);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v77, v58);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v79, v55);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v80, v51);
}

uint64_t sub_100B49C5C(uint64_t a1, void (*a2)(char *, uint64_t), void (*a3)(char *), uint64_t a4, void (*a5)(void))
{
  uint64_t v218 = a4;
  uint64_t v215 = a3;
  uint64_t v219 = a2;
  uint64_t v7 = sub_10017DF08(&qword_100EB2438);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v213 = (char *)&v164 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = (void (*)(char *, uint64_t))type metadata accessor for Date();
  __chkstk_darwin(v211);
  uint64_t v212 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v225 = (void (*)(char *, uint64_t))((char *)&v164 - v14);
  uint64_t v15 = type metadata accessor for Metadata();
  __chkstk_darwin(v15 - 8);
  uint64_t v220 = (char *)&v164 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = type metadata accessor for LocationInfo();
  uint64_t v216 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v223 = (char *)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int *)sub_10017DF08(&qword_100EB2440);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v164 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v221 = (char *)&v164 - v22;
  __chkstk_darwin(v23);
  uint64_t v222 = (char *)&v164 - v24;
  __chkstk_darwin(v25);
  uint64_t v230 = (char *)&v164 - v26;
  __chkstk_darwin(v27);
  uint64_t v227 = (char *)&v164 - v28;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v164 - v30;
  uint64_t v32 = sub_10017DF08(&qword_100EB2448);
  __chkstk_darwin(v32);
  uint64_t v34 = (uint64_t *)((char *)&v164 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001262FC(a1, (uint64_t)v34, &qword_100EB2448);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    a5(*v34);
    return swift_errorRelease();
  }
  else
  {
    uint64_t v36 = v18[12];
    uint64_t v207 = v9;
    uint64_t v37 = (uint64_t)&v31[v36];
    uint64_t v248 = &v31[v36];
    uint64_t v38 = v18[16];
    uint64_t v39 = &v31[v38];
    uint64_t v40 = v18[20];
    uint64_t v41 = &v31[v40];
    uint64_t v245 = &v31[v40];
    uint64_t v246 = &v31[v38];
    uint64_t v42 = v18[24];
    uint64_t v252 = &v31[v42];
    uint64_t v43 = v18[28];
    uint64_t v254 = &v31[v43];
    uint64_t v44 = v18[36];
    uint64_t v250 = &v31[v44];
    uint64_t v45 = v18[40];
    uint64_t v244 = &v31[v45];
    uint64_t v46 = v18[44];
    uint64_t v251 = &v31[v46];
    uint64_t v47 = v18[48];
    uint64_t v249 = &v31[v47];
    uint64_t v48 = (uint64_t)v34 + v36;
    uint64_t v49 = (char *)v34 + v38;
    uint64_t v239 = (void (*)(char *, char *, uint64_t))((char *)v34 + v40);
    uint64_t v240 = (uint64_t)v34 + v42;
    uint64_t v258 = (uint64_t)v34 + v43;
    uint64_t v50 = v18[32];
    uint64_t v241 = (void (*)(char *, char *, uint64_t))((char *)v34 + v44);
    uint64_t v242 = (uint64_t)v34 + v45;
    uint64_t v255 = (uint64_t)v34 + v46;
    uint64_t v243 = (char *)v34 + v47;
    uint64_t v257 = type metadata accessor for CurrentWeather();
    uint64_t v224 = *(void *)(v257 - 8);
    (*(void (**)(char *, void *, uint64_t))(v224 + 32))(v31, v34, v257);
    sub_10020E72C(v48, v37, &qword_100E6E8F8);
    uint64_t v253 = sub_10017DF08(&qword_100E66CC8);
    uint64_t v51 = *(void *)(v253 - 8);
    uint64_t v214 = v20;
    uint64_t v226 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v39, v49, v253);
    uint64_t v256 = sub_10017DF08(&qword_100E66CA0);
    uint64_t v229 = *(void *)(v256 - 8);
    (*(void (**)(char *, void *, uint64_t))(v229 + 32))(v41, v239, v256);
    sub_10020E72C(v240, (uint64_t)v252, &qword_100E885C0);
    sub_10020E72C(v258, (uint64_t)v254, &qword_100E6D1C8);
    uint64_t v235 = *(void *)((char *)v34 + v50);
    uint64_t v247 = v31;
    *(void *)&v31[v50] = v235;
    uint64_t v258 = type metadata accessor for WeatherAvailability();
    uint64_t v238 = *(void *)(v258 - 8);
    (*(void (**)(char *, void *, uint64_t))(v238 + 32))(v250, v241, v258);
    sub_10020E72C(v242, (uint64_t)v244, &qword_100EABE80);
    sub_10020E72C(v255, (uint64_t)v251, &qword_100E6B8B8);
    uint64_t v228 = type metadata accessor for LocationInfo();
    uint64_t v255 = *(void *)(v228 - 8);
    (*(void (**)(char *, char *, uint64_t))(v255 + 32))(v249, v243, v228);
    uint64_t v52 = v227;
    uint64_t v206 = (uint64_t)&v227[v18[12]];
    uint64_t v53 = v206;
    uint64_t v205 = &v227[v18[16]];
    uint64_t v54 = (uint64_t)v205;
    uint64_t v204 = &v227[v18[20]];
    uint64_t v55 = (uint64_t)v204;
    uint64_t v203 = &v227[v18[24]];
    uint64_t v56 = (uint64_t)v203;
    int v202 = &v227[v18[28]];
    uint64_t v57 = (uint64_t)v202;
    uint64_t v242 = v18[32];
    uint64_t v201 = &v227[v18[36]];
    uint64_t v58 = (uint64_t)v201;
    uint64_t v209 = &v227[v18[40]];
    uint64_t v208 = &v227[v18[44]];
    id v59 = &v227[v18[48]];
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v224 + 16);
    uint64_t v240 = v224 + 16;
    uint64_t v241 = v60;
    v60(v227, v31, v257);
    sub_1001262FC((uint64_t)v248, v53, &qword_100E6E8F8);
    uint64_t v234 = *(void (**)(uint64_t, char *, uint64_t))(v226 + 16);
    uint64_t v243 = (char *)(v226 + 16);
    v234(v54, v246, v253);
    uint64_t v236 = *(void (**)(uint64_t, char *, uint64_t))(v229 + 16);
    uint64_t v233 = v229 + 16;
    v236(v55, v245, v256);
    sub_1001262FC((uint64_t)v252, v56, &qword_100E885C0);
    sub_1001262FC((uint64_t)v254, v57, &qword_100E6D1C8);
    uint64_t v61 = v235;
    *(void *)&v52[v242] = v235;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v238 + 16);
    uint64_t v232 = v238 + 16;
    uint64_t v239 = v62;
    v62((char *)v58, v250, v258);
    uint64_t v63 = (uint64_t)v244;
    sub_1001262FC((uint64_t)v244, (uint64_t)v209, &qword_100EABE80);
    sub_1001262FC((uint64_t)v251, (uint64_t)v208, &qword_100E6B8B8);
    uint64_t v64 = v255;
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v255 + 16);
    uint64_t v242 = v255 + 16;
    int v231 = v65;
    uint64_t v66 = v228;
    v65(v59, v249, v228);
    swift_bridgeObjectRetain();
    LocationInfo.date.getter();
    uint64_t v67 = *(void (**)(char *, uint64_t))(v64 + 8);
    uint64_t v255 = v64 + 8;
    uint64_t v237 = v67;
    v67(v59, v66);
    uint64_t v68 = v230;
    uint64_t v200 = &v230[v18[12]];
    uint64_t v69 = (uint64_t)v200;
    uint64_t v199 = &v230[v18[16]];
    uint64_t v70 = v199;
    uint64_t v198 = &v230[v18[20]];
    uint64_t v71 = (uint64_t)v198;
    uint64_t v197 = &v230[v18[24]];
    uint64_t v72 = (uint64_t)v197;
    uint64_t v210 = &v230[v18[28]];
    uint64_t v194 = v18[32];
    uint64_t v193 = &v230[v18[36]];
    uint64_t v196 = &v230[v18[40]];
    uint64_t v73 = (uint64_t)v196;
    uint64_t v195 = &v230[v18[44]];
    uint64_t v74 = &v230[v18[48]];
    v241(v230, v247, v257);
    sub_1001262FC((uint64_t)v248, v69, &qword_100E6E8F8);
    v234((uint64_t)v70, v246, v253);
    v236(v71, v245, v256);
    sub_1001262FC((uint64_t)v252, v72, &qword_100E885C0);
    sub_1001262FC((uint64_t)v254, (uint64_t)v210, &qword_100E6D1C8);
    *(void *)&v68[v194] = v61;
    uint64_t v75 = v193;
    uint64_t v76 = v258;
    v239(v193, v250, v258);
    sub_1001262FC(v63, v73, &qword_100EABE80);
    uint64_t v77 = (uint64_t)v195;
    sub_1001262FC((uint64_t)v251, (uint64_t)v195, &qword_100E6B8B8);
    uint64_t v78 = v228;
    v231(v74, v249, v228);
    LocationInfo.expiration.getter();
    v237(v74, v78);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v213, 1, 1, (uint64_t)v211);
    uint64_t v79 = v219;
    [v219 coordinate];
    [v79 coordinate];
    uint64_t v80 = type metadata accessor for Metadata.Units();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 1, 1, v80);
    Metadata.init(readTime:expireTime:reportedTime:version:latitude:longitude:language:providerName:providerLogo:temporarilyUnavailable:units:attributionURL:)();
    sub_1001781AC(v77, &qword_100E6B8B8);
    sub_1001781AC((uint64_t)v196, &qword_100EABE80);
    uint64_t v225 = *(void (**)(char *, uint64_t))(v238 + 8);
    v238 += 8;
    v225(v75, v76);
    sub_1001781AC((uint64_t)v210, &qword_100E6D1C8);
    sub_1001781AC((uint64_t)v197, &qword_100E885C0);
    uint64_t v81 = v229 + 8;
    double v82 = *(void (**)(char *, uint64_t))(v229 + 8);
    uint64_t v83 = v256;
    v82(v198, v256);
    uint64_t v211 = v82;
    uint64_t v229 = v81;
    uint64_t v84 = v226 + 8;
    uint64_t v85 = *(char **)(v226 + 8);
    uint64_t v86 = v253;
    ((void (*)(char *, uint64_t))v85)(v199, v253);
    uint64_t v210 = v85;
    uint64_t v226 = v84;
    sub_1001781AC((uint64_t)v200, &qword_100E6E8F8);
    uint64_t v87 = v224 + 8;
    uint64_t v88 = *(void (**)(char *, uint64_t))(v224 + 8);
    uint64_t v89 = v257;
    v88(v230, v257);
    uint64_t v219 = v88;
    uint64_t v224 = v87;
    sub_1001781AC((uint64_t)v208, &qword_100E6B8B8);
    sub_1001781AC((uint64_t)v209, &qword_100EABE80);
    v225(v201, v258);
    sub_1001781AC((uint64_t)v202, &qword_100E6D1C8);
    sub_1001781AC((uint64_t)v203, &qword_100E885C0);
    v82(v204, v83);
    uint64_t v90 = v86;
    ((void (*)(char *, uint64_t))v85)(v205, v86);
    sub_1001781AC(v206, &qword_100E6E8F8);
    long long v91 = v227;
    v88(v227, v89);
    char v92 = v91;
    uint64_t v93 = (uint64_t)&v91[v18[12]];
    uint64_t v204 = (char *)v93;
    uint64_t v203 = &v92[v18[16]];
    uint64_t v94 = (uint64_t)v203;
    int v202 = &v92[v18[20]];
    uint64_t v95 = (uint64_t)v202;
    uint64_t v201 = &v92[v18[24]];
    uint64_t v96 = (uint64_t)v201;
    uint64_t v200 = &v92[v18[28]];
    uint64_t v97 = (uint64_t)v200;
    uint64_t v208 = (char *)v18[32];
    uint64_t v199 = &v92[v18[36]];
    uint64_t v98 = v199;
    uint64_t v213 = &v92[v18[40]];
    uint64_t v212 = &v92[v18[44]];
    uint64_t v209 = &v92[v18[48]];
    v241(v92, v247, v89);
    sub_1001262FC((uint64_t)v248, v93, &qword_100E6E8F8);
    v234(v94, v246, v90);
    v236(v95, v245, v256);
    sub_1001262FC((uint64_t)v252, v96, &qword_100E885C0);
    sub_1001262FC((uint64_t)v254, v97, &qword_100E6D1C8);
    *(void *)&v208[(void)v92] = v235;
    v239(v98, v250, v258);
    sub_1001262FC((uint64_t)v244, (uint64_t)v213, &qword_100EABE80);
    sub_1001262FC((uint64_t)v251, (uint64_t)v212, &qword_100E6B8B8);
    uint64_t v99 = (uint64_t)v209;
    uint64_t v100 = v228;
    v231(v209, v249, v228);
    uint64_t v190 = LocationInfo.primaryName.getter();
    uint64_t v189 = v101;
    v237((char *)v99, v100);
    uint64_t v102 = v230;
    uint64_t v198 = &v230[v18[12]];
    uint64_t v103 = (uint64_t)v198;
    uint64_t v197 = &v230[v18[16]];
    uint64_t v104 = (uint64_t)v197;
    uint64_t v196 = &v230[v18[20]];
    uint64_t v105 = (uint64_t)v196;
    uint64_t v195 = &v230[v18[24]];
    uint64_t v106 = (uint64_t)v195;
    uint64_t v194 = (uint64_t)&v230[v18[28]];
    uint64_t v107 = v194;
    uint64_t v208 = (char *)v18[32];
    uint64_t v193 = &v230[v18[36]];
    uint64_t v108 = v193;
    uint64_t v192 = &v230[v18[40]];
    uint64_t v109 = (uint64_t)v192;
    uint64_t v209 = &v230[v18[44]];
    uint64_t v110 = &v230[v18[48]];
    v241(v230, v247, v257);
    sub_1001262FC((uint64_t)v248, v103, &qword_100E6E8F8);
    v234(v104, v246, v253);
    v236(v105, v245, v256);
    sub_1001262FC((uint64_t)v252, v106, &qword_100E885C0);
    sub_1001262FC((uint64_t)v254, v107, &qword_100E6D1C8);
    *(void *)&v208[(void)v102] = v235;
    v239(v108, v250, v258);
    sub_1001262FC((uint64_t)v244, v109, &qword_100EABE80);
    sub_1001262FC((uint64_t)v251, (uint64_t)v209, &qword_100E6B8B8);
    uint64_t v111 = v228;
    v231(v110, v249, v228);
    uint64_t v183 = LocationInfo.secondaryName.getter();
    uint64_t v182 = v112;
    uint64_t v113 = v110;
    uint64_t v114 = v111;
    v237(v113, v111);
    uint64_t v115 = v222;
    uint64_t v191 = &v222[v18[12]];
    uint64_t v116 = (uint64_t)v191;
    uint64_t v188 = &v222[v18[16]];
    uint64_t v117 = v188;
    uint64_t v187 = &v222[v18[20]];
    uint64_t v118 = v187;
    uint64_t v186 = &v222[v18[24]];
    uint64_t v119 = (uint64_t)v186;
    char v185 = &v222[v18[28]];
    uint64_t v120 = (uint64_t)v185;
    uint64_t v206 = v18[32];
    uint64_t v184 = &v222[v18[36]];
    uint64_t v121 = v184;
    uint64_t v207 = &v222[v18[40]];
    uint64_t v208 = &v222[v18[44]];
    uint64_t v122 = &v222[v18[48]];
    v241(v222, v247, v257);
    sub_1001262FC((uint64_t)v248, v116, &qword_100E6E8F8);
    v234((uint64_t)v117, v246, v253);
    v236((uint64_t)v118, v245, v256);
    sub_1001262FC((uint64_t)v252, v119, &qword_100E885C0);
    sub_1001262FC((uint64_t)v254, v120, &qword_100E6D1C8);
    *(void *)&v115[v206] = v235;
    v239(v121, v250, v258);
    sub_1001262FC((uint64_t)v244, (uint64_t)v207, &qword_100EABE80);
    sub_1001262FC((uint64_t)v251, (uint64_t)v208, &qword_100E6B8B8);
    v231(v122, v249, v114);
    uint64_t v176 = LocationInfo.preciseName.getter();
    uint64_t v175 = v123;
    v237(v122, v114);
    uint64_t v124 = v221;
    uint64_t v181 = &v221[v18[12]];
    uint64_t v125 = (uint64_t)v181;
    uint64_t v180 = &v221[v18[16]];
    uint64_t v126 = v180;
    uint64_t v179 = &v221[v18[20]];
    uint64_t v127 = v179;
    uint64_t v178 = &v221[v18[24]];
    uint64_t v128 = (uint64_t)v178;
    uint64_t v177 = &v221[v18[28]];
    uint64_t v129 = (uint64_t)v177;
    uint64_t v173 = v18[32];
    uint64_t v174 = &v221[v18[36]];
    uint64_t v130 = v174;
    uint64_t v205 = &v221[v18[40]];
    uint64_t v206 = (uint64_t)&v221[v18[44]];
    uint64_t v131 = &v221[v18[48]];
    v241(v221, v247, v257);
    sub_1001262FC((uint64_t)v248, v125, &qword_100E6E8F8);
    uint64_t v132 = v126;
    uint64_t v133 = v253;
    v234((uint64_t)v132, v246, v253);
    v236((uint64_t)v127, v245, v256);
    sub_1001262FC((uint64_t)v252, v128, &qword_100E885C0);
    sub_1001262FC((uint64_t)v254, v129, &qword_100E6D1C8);
    *(void *)&v124[v173] = v235;
    v239(v130, v250, v258);
    sub_1001262FC((uint64_t)v244, (uint64_t)v205, &qword_100EABE80);
    sub_1001262FC((uint64_t)v251, v206, &qword_100E6B8B8);
    v231(v131, v249, v114);
    uint64_t v172 = LocationInfo.countryCode.getter();
    uint64_t v170 = v134;
    v237(v131, v114);
    int v135 = v214;
    uint64_t v173 = (uint64_t)&v214[v18[12]];
    uint64_t v136 = v173;
    uint64_t v171 = &v214[v18[16]];
    uint64_t v137 = v171;
    uint64_t v169 = &v214[v18[20]];
    uint64_t v138 = v169;
    uint64_t v139 = (uint64_t)&v214[v18[24]];
    uint64_t v168 = &v214[v18[28]];
    uint64_t v140 = (uint64_t)v168;
    uint64_t v165 = v18[32];
    uint64_t v141 = &v214[v18[36]];
    uint64_t v166 = &v214[v18[40]];
    uint64_t v167 = &v214[v18[44]];
    uint64_t v142 = &v214[v18[48]];
    v241(v214, v247, v257);
    sub_1001262FC((uint64_t)v248, v136, &qword_100E6E8F8);
    v234((uint64_t)v137, v246, v133);
    uint64_t v143 = v256;
    v236((uint64_t)v138, v245, v256);
    uint64_t v144 = v139;
    sub_1001262FC((uint64_t)v252, v139, &qword_100E885C0);
    sub_1001262FC((uint64_t)v254, v140, &qword_100E6D1C8);
    *(void *)&v135[v165] = v235;
    uint64_t v145 = v258;
    v239(v141, v250, v258);
    uint64_t v146 = (uint64_t)v166;
    sub_1001262FC((uint64_t)v244, (uint64_t)v166, &qword_100EABE80);
    uint64_t v147 = (uint64_t)v167;
    sub_1001262FC((uint64_t)v251, (uint64_t)v167, &qword_100E6B8B8);
    uint64_t v148 = v228;
    v231(v142, v249, v228);
    swift_bridgeObjectRelease();
    LocationInfo.timeZone.getter();
    v237(v142, v148);
    LocationInfo.init(metadata:primaryName:secondaryName:preciseName:countryCode:timeZone:)();
    sub_1001781AC(v147, &qword_100E6B8B8);
    sub_1001781AC(v146, &qword_100EABE80);
    uint64_t v149 = v225;
    v225(v141, v145);
    sub_1001781AC((uint64_t)v168, &qword_100E6D1C8);
    sub_1001781AC(v144, &qword_100E885C0);
    uint64_t v150 = v143;
    uint64_t v151 = v211;
    v211(v169, v143);
    uint64_t v152 = v253;
    uint64_t v153 = v210;
    ((void (*)(char *, uint64_t))v210)(v171, v253);
    sub_1001781AC(v173, &qword_100E6E8F8);
    uint64_t v154 = v257;
    v219(v214, v257);
    sub_1001781AC(v206, &qword_100E6B8B8);
    sub_1001781AC((uint64_t)v205, &qword_100EABE80);
    v149(v174, v258);
    sub_1001781AC((uint64_t)v177, &qword_100E6D1C8);
    sub_1001781AC((uint64_t)v178, &qword_100E885C0);
    v151(v179, v150);
    ((void (*)(char *, uint64_t))v153)(v180, v152);
    sub_1001781AC((uint64_t)v181, &qword_100E6E8F8);
    uint64_t v155 = v219;
    v219(v221, v154);
    sub_1001781AC((uint64_t)v208, &qword_100E6B8B8);
    sub_1001781AC((uint64_t)v207, &qword_100EABE80);
    uint64_t v156 = v258;
    v225(v184, v258);
    sub_1001781AC((uint64_t)v185, &qword_100E6D1C8);
    sub_1001781AC((uint64_t)v186, &qword_100E885C0);
    v151(v187, v150);
    uint64_t v157 = v253;
    ((void (*)(char *, uint64_t))v153)(v188, v253);
    sub_1001781AC((uint64_t)v191, &qword_100E6E8F8);
    v155(v222, v154);
    sub_1001781AC((uint64_t)v209, &qword_100E6B8B8);
    sub_1001781AC((uint64_t)v192, &qword_100EABE80);
    uint64_t v158 = v225;
    v225(v193, v156);
    sub_1001781AC(v194, &qword_100E6D1C8);
    sub_1001781AC((uint64_t)v195, &qword_100E885C0);
    uint64_t v159 = v256;
    uint64_t v160 = v211;
    v211(v196, v256);
    uint64_t v161 = v210;
    ((void (*)(char *, uint64_t))v210)(v197, v157);
    sub_1001781AC((uint64_t)v198, &qword_100E6E8F8);
    uint64_t v162 = v219;
    v219(v230, v154);
    sub_1001781AC((uint64_t)v212, &qword_100E6B8B8);
    sub_1001781AC((uint64_t)v213, &qword_100EABE80);
    v158(v199, v258);
    sub_1001781AC((uint64_t)v200, &qword_100E6D1C8);
    sub_1001781AC((uint64_t)v201, &qword_100E885C0);
    v160(v202, v159);
    ((void (*)(char *, uint64_t))v161)(v203, v157);
    sub_1001781AC((uint64_t)v204, &qword_100E6E8F8);
    v162(v227, v257);
    uint64_t v163 = v223;
    v215(v223);
    (*(void (**)(char *, uint64_t))(v216 + 8))(v163, v217);
    return sub_1001781AC((uint64_t)v247, &qword_100EB2440);
  }
}

uint64_t sub_100B4BA30(uint64_t a1, uint64_t a2)
{
  return sub_100B48D94(a1, a2);
}

unint64_t sub_100B4BA54()
{
  unint64_t result = qword_100EABE10;
  if (!qword_100EABE10)
  {
    type metadata accessor for WeatherServiceCaching.Options();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EABE10);
  }
  return result;
}

unint64_t sub_100B4BAA4()
{
  unint64_t result = qword_100EABE20;
  if (!qword_100EABE20)
  {
    sub_10018C6DC(&qword_100EABE18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EABE20);
  }
  return result;
}

uint64_t sub_100B4BAF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100B492E8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_100B4BB04()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B4BB4C(uint64_t a1)
{
  return sub_100B49C5C(a1, *(void (**)(char *, uint64_t))(v1 + 16), *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

ValueMetadata *type metadata accessor for GCDSerialDispatchQueue()
{
  return &type metadata for GCDSerialDispatchQueue;
}

uint64_t sub_100B4BBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1001D9C10(a1, a3);
}

uint64_t sub_100B4BC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B4BBD4(a1, *(void *)(v2 + 16), a2);
}

void *sub_100B4BC40(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v19;
  }
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v9 = *(void *)((char *)a2 + v8);
  v9[1] = v11;
  uint64_t v12 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (char *)v9 + v13;
  uint64_t v15 = &v10[v13];
  uint64_t v16 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E63730);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v20 = v12[6];
  uint64_t v21 = (char *)v9 + v20;
  uint64_t v22 = &v10[v20];
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = v12[7];
  uint64_t v25 = (char *)v9 + v24;
  uint64_t v26 = &v10[v24];
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    uint64_t v28 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v25, v26, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  uint64_t v30 = v12[8];
  uint64_t v31 = (void *)((char *)v9 + v30);
  uint64_t v32 = &v10[v30];
  uint64_t v33 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v35 = *((void *)v32 + 1);
    *uint64_t v31 = *(void *)v32;
    v31[1] = v35;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v37 = v12[9];
  uint64_t v38 = (char *)v9 + v37;
  uint64_t v39 = &v10[v37];
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_10017DF08(&qword_100E63740);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v42))
    {
      uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v42);
    }
    uint64_t v44 = *(int *)(v40 + 20);
    uint64_t v45 = &v38[v44];
    uint64_t v46 = &v39[v44];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v42))
    {
      uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v45, v46, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v42);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v207 = a3;
  uint64_t v48 = a3[6];
  uint64_t v209 = a1;
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v208 = a2;
  uint64_t v50 = (char *)a2 + v48;
  uint64_t v51 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  uint64_t v52 = type metadata accessor for PreprocessedWeatherData();
  *(void *)&v49[*(int *)(v52 + 20)] = *(void *)&v50[*(int *)(v52 + 20)];
  uint64_t v210 = v49;
  uint64_t v211 = (int *)v52;
  uint64_t v53 = *(int *)(v52 + 24);
  uint64_t v54 = &v49[v53];
  uint64_t v212 = v50;
  uint64_t v55 = &v50[v53];
  uint64_t v56 = *(void *)&v50[v53 + 8];
  *(void *)uint64_t v54 = *(void *)&v50[v53];
  *((void *)v54 + 1) = v56;
  uint64_t v57 = *(void *)&v50[v53 + 24];
  *((void *)v54 + 2) = *(void *)&v50[v53 + 16];
  *((void *)v54 + 3) = v57;
  uint64_t v58 = *(void *)&v50[v53 + 40];
  *((void *)v54 + 4) = *(void *)&v50[v53 + 32];
  *((void *)v54 + 5) = v58;
  uint64_t v59 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v60 = *(int *)(v59 + 28);
  uint64_t v61 = &v54[v60];
  uint64_t v62 = &v55[v60];
  uint64_t v63 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
  {
    uint64_t v64 = sub_10017DF08(&qword_100E63750);
    memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    uint64_t v65 = *((void *)v62 + 1);
    *(void *)uint64_t v61 = *(void *)v62;
    *((void *)v61 + 1) = v65;
    uint64_t v66 = *(int *)(v63 + 20);
    uint64_t v67 = &v61[v66];
    uint64_t v68 = &v62[v66];
    uint64_t v69 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v205 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
    swift_bridgeObjectRetain();
    v205(v67, v68, v69);
    uint64_t v70 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v67[v70[5]] = *(void *)&v68[v70[5]];
    *(void *)&v67[v70[6]] = *(void *)&v68[v70[6]];
    *(void *)&v67[v70[7]] = *(void *)&v68[v70[7]];
    uint64_t v71 = v70[8];
    uint64_t v72 = &v67[v71];
    uint64_t v73 = &v68[v71];
    uint64_t v75 = *(void *)v73;
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = v75;
    *((void *)v72 + 1) = v74;
    v67[v70[9]] = v68[v70[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
  }
  uint64_t v76 = *(int *)(v59 + 32);
  uint64_t v77 = &v54[v76];
  uint64_t v78 = &v55[v76];
  uint64_t v79 = *((void *)v78 + 1);
  *(void *)uint64_t v77 = *(void *)v78;
  *((void *)v77 + 1) = v79;
  uint64_t v80 = v211[7];
  uint64_t v81 = &v210[v80];
  double v82 = &v212[v80];
  *(void *)&v210[v80] = *(void *)&v212[v80];
  uint64_t v83 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v84 = &v81[v83];
  uint64_t v85 = &v82[v83];
  uint64_t v86 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v199 = v86;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
  {
    uint64_t v87 = sub_10017DF08(&qword_100E63758);
    memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
  }
  uint64_t v88 = v211[8];
  uint64_t v89 = &v210[v88];
  uint64_t v90 = &v212[v88];
  uint64_t v91 = *(void *)&v212[v88 + 8];
  *(void *)uint64_t v89 = *(void *)&v212[v88];
  *((void *)v89 + 1) = v91;
  uint64_t v92 = *(void *)&v212[v88 + 24];
  *((void *)v89 + 2) = *(void *)&v212[v88 + 16];
  *((void *)v89 + 3) = v92;
  uint64_t v93 = *(void *)&v212[v88 + 40];
  *((void *)v89 + 4) = *(void *)&v212[v88 + 32];
  *((void *)v89 + 5) = v93;
  uint64_t v94 = *(void *)&v212[v88 + 56];
  *((void *)v89 + 6) = *(void *)&v212[v88 + 48];
  *((void *)v89 + 7) = v94;
  uint64_t v95 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v96 = &v89[v95];
  uint64_t v97 = &v90[v95];
  uint64_t v98 = type metadata accessor for Date();
  uint64_t v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v203 = v99;
  uint64_t v204 = v98;
  v99(v96, v97, v98);
  uint64_t v100 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v101 = *(int *)(v100 + 20);
  uint64_t v102 = &v96[v101];
  uint64_t v103 = &v97[v101];
  uint64_t v104 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104))
  {
    uint64_t v105 = sub_10017DF08(&qword_100E63760);
    memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
  }
  uint64_t v106 = *(int *)(v100 + 24);
  uint64_t v107 = &v96[v106];
  uint64_t v108 = &v97[v106];
  uint64_t v109 = type metadata accessor for BackgroundMoonData();
  uint64_t v206 = v100;
  uint64_t v201 = v109;
  uint64_t v202 = v104;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
  {
    uint64_t v110 = sub_10017DF08(&qword_100E63768);
    memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
  }
  uint64_t v111 = v211[9];
  uint64_t v112 = &v210[v111];
  uint64_t v113 = &v212[v111];
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)uint64_t v112 = *(void *)v113;
  *((void *)v112 + 1) = v114;
  uint64_t v115 = *((void *)v113 + 3);
  *((void *)v112 + 2) = *((void *)v113 + 2);
  *((void *)v112 + 3) = v115;
  uint64_t v116 = *((void *)v113 + 5);
  *((void *)v112 + 4) = *((void *)v113 + 4);
  *((void *)v112 + 5) = v116;
  uint64_t v117 = *((void *)v113 + 7);
  *((void *)v112 + 6) = *((void *)v113 + 6);
  *((void *)v112 + 7) = v117;
  uint64_t v118 = *((void *)v113 + 9);
  *((void *)v112 + 8) = *((void *)v113 + 8);
  *((void *)v112 + 9) = v118;
  uint64_t v119 = *((void *)v113 + 11);
  *((void *)v112 + 10) = *((void *)v113 + 10);
  *((void *)v112 + 11) = v119;
  uint64_t v120 = *((void *)v113 + 13);
  *((void *)v112 + 12) = *((void *)v113 + 12);
  *((void *)v112 + 13) = v120;
  uint64_t v121 = v211[10];
  uint64_t v122 = &v210[v121];
  uint64_t v123 = &v212[v121];
  uint64_t v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v197(v122, v123, v199);
  uint64_t v124 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v125 = &v122[v124];
  uint64_t v126 = &v123[v124];
  uint64_t v127 = *((void *)v126 + 1);
  *(void *)uint64_t v125 = *(void *)v126;
  *((void *)v125 + 1) = v127;
  uint64_t v128 = v211[11];
  uint64_t v129 = &v210[v128];
  uint64_t v130 = &v212[v128];
  uint64_t v131 = *((void *)v130 + 1);
  *(void *)uint64_t v129 = *(void *)v130;
  *((void *)v129 + 1) = v131;
  uint64_t v132 = *((void *)v130 + 3);
  *((void *)v129 + 2) = *((void *)v130 + 2);
  *((void *)v129 + 3) = v132;
  uint64_t v133 = *((void *)v130 + 5);
  *((void *)v129 + 4) = *((void *)v130 + 4);
  *((void *)v129 + 5) = v133;
  uint64_t v134 = v211[12];
  int v135 = &v210[v134];
  uint64_t v136 = &v212[v134];
  uint64_t v137 = type metadata accessor for PressureTrend();
  uint64_t v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v138(v135, v136, v137);
  uint64_t v139 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v140 = v139[5];
  uint64_t v141 = &v135[v140];
  uint64_t v142 = &v136[v140];
  uint64_t v143 = *((void *)v142 + 1);
  *(void *)uint64_t v141 = *(void *)v142;
  *((void *)v141 + 1) = v143;
  uint64_t v144 = v139[6];
  uint64_t v145 = &v135[v144];
  uint64_t v146 = &v136[v144];
  uint64_t v200 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v200;
  uint64_t v147 = v139[7];
  uint64_t v148 = &v135[v147];
  uint64_t v149 = &v136[v147];
  uint64_t v198 = *((void *)v149 + 1);
  *(void *)uint64_t v148 = *(void *)v149;
  *((void *)v148 + 1) = v198;
  *(void *)&v135[v139[8]] = *(void *)&v136[v139[8]];
  uint64_t v150 = v139[9];
  uint64_t v151 = &v135[v150];
  uint64_t v152 = &v136[v150];
  uint64_t v196 = *((void *)v152 + 1);
  *(void *)uint64_t v151 = *(void *)v152;
  *((void *)v151 + 1) = v196;
  uint64_t v153 = v211[13];
  uint64_t v154 = &v210[v153];
  uint64_t v155 = &v212[v153];
  uint64_t v156 = *((void *)v155 + 1);
  *(void *)uint64_t v154 = *(void *)v155;
  *((void *)v154 + 1) = v156;
  uint64_t v157 = *((void *)v155 + 3);
  *((void *)v154 + 2) = *((void *)v155 + 2);
  *((void *)v154 + 3) = v157;
  uint64_t v158 = *((void *)v155 + 5);
  *((void *)v154 + 4) = *((void *)v155 + 4);
  *((void *)v154 + 5) = v158;
  uint64_t v159 = *((void *)v155 + 7);
  *((void *)v154 + 6) = *((void *)v155 + 6);
  *((void *)v154 + 7) = v159;
  uint64_t v160 = *((void *)v155 + 9);
  *((void *)v154 + 8) = *((void *)v155 + 8);
  *((void *)v154 + 9) = v160;
  uint64_t v161 = *((void *)v155 + 11);
  *((void *)v154 + 10) = *((void *)v155 + 10);
  *((void *)v154 + 11) = v161;
  uint64_t v162 = *((void *)v155 + 13);
  *((void *)v154 + 12) = *((void *)v155 + 12);
  *((void *)v154 + 13) = v162;
  uint64_t v163 = *((void *)v155 + 15);
  *((void *)v154 + 14) = *((void *)v155 + 14);
  *((void *)v154 + 15) = v163;
  uint64_t v164 = *((void *)v155 + 17);
  *((void *)v154 + 16) = *((void *)v155 + 16);
  *((void *)v154 + 17) = v164;
  uint64_t v165 = *((void *)v155 + 19);
  *((void *)v154 + 18) = *((void *)v155 + 18);
  *((void *)v154 + 19) = v165;
  uint64_t v166 = *((void *)v155 + 21);
  *((void *)v154 + 20) = *((void *)v155 + 20);
  *((void *)v154 + 21) = v166;
  uint64_t v167 = *((void *)v155 + 23);
  *((void *)v154 + 22) = *((void *)v155 + 22);
  *((void *)v154 + 23) = v167;
  uint64_t v168 = *((void *)v155 + 25);
  *((void *)v154 + 24) = *((void *)v155 + 24);
  *((void *)v154 + 25) = v168;
  *((_OWORD *)v154 + 13) = *((_OWORD *)v155 + 13);
  *((void *)v154 + 28) = *((void *)v155 + 28);
  uint64_t v169 = v211[14];
  uint64_t v170 = &v210[v169];
  uint64_t v171 = &v212[v169];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v203(v170, v171, v204);
  uint64_t v172 = *(int *)(v206 + 20);
  uint64_t v173 = &v170[v172];
  uint64_t v174 = &v171[v172];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v171[v172], 1, v202))
  {
    uint64_t v175 = sub_10017DF08(&qword_100E63760);
    memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v173, v174, v202);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v202);
  }
  uint64_t v176 = *(int *)(v206 + 24);
  uint64_t v177 = &v170[v176];
  uint64_t v178 = &v171[v176];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v171[v176], 1, v201))
  {
    uint64_t v179 = sub_10017DF08(&qword_100E63768);
    memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(v177, v178, v201);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, v201);
  }
  uint64_t v180 = v211[15];
  uint64_t v181 = &v210[v180];
  uint64_t v182 = &v212[v180];
  uint64_t v183 = *((void *)v182 + 1);
  *(void *)uint64_t v181 = *(void *)v182;
  *((void *)v181 + 1) = v183;
  uint64_t v184 = *((void *)v182 + 3);
  *((void *)v181 + 2) = *((void *)v182 + 2);
  *((void *)v181 + 3) = v184;
  uint64_t v185 = *((void *)v182 + 5);
  *((void *)v181 + 4) = *((void *)v182 + 4);
  *((void *)v181 + 5) = v185;
  uint64_t v186 = *((void *)v182 + 7);
  *((void *)v181 + 6) = *((void *)v182 + 6);
  *((void *)v181 + 7) = v186;
  uint64_t v187 = *((void *)v182 + 9);
  *((void *)v181 + 8) = *((void *)v182 + 8);
  *((void *)v181 + 9) = v187;
  uint64_t v188 = *((void *)v182 + 11);
  *((void *)v181 + 10) = *((void *)v182 + 10);
  *((void *)v181 + 11) = v188;
  uint64_t v189 = *((void *)v182 + 13);
  *((void *)v181 + 12) = *((void *)v182 + 12);
  *((void *)v181 + 13) = v189;
  uint64_t v190 = v207[7];
  uint64_t v191 = (void *)((char *)v209 + v190);
  uint64_t v192 = (void *)((char *)v208 + v190);
  type metadata accessor for NewsDataModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v191 = *v192;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v193 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v193 - 8) + 16))(v191, v192, v193);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v194 = v207[9];
  uint64_t v19 = v209;
  *((unsigned char *)v209 + v207[8]) = *((unsigned char *)v208 + v207[8]);
  *((unsigned char *)v209 + v194) = *((unsigned char *)v208 + v194);
  return v19;
}

uint64_t sub_100B4CBF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v204 = a3;
  uint64_t v7 = a3[5];
  uint64_t v206 = a1;
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v205 = a2;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = v11[6];
  uint64_t v18 = (char *)v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = v11[7];
  uint64_t v22 = (char *)v8 + v21;
  uint64_t v23 = (const void *)(v9 + v21);
  uint64_t v24 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v27 = v11[8];
  uint64_t v28 = (void *)((char *)v8 + v27);
  uint64_t v29 = (void *)(v9 + v27);
  uint64_t v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v32 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v32;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_13:
  uint64_t v34 = v11[9];
  uint64_t v35 = (char *)v8 + v34;
  uint64_t v36 = (char *)(v9 + v34);
  uint64_t v37 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100E63740);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v39))
    {
      uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v39);
    }
    uint64_t v41 = *(int *)(v37 + 20);
    uint64_t v42 = &v35[v41];
    uint64_t v43 = &v36[v41];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v39))
    {
      uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v42, v43, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v45 = v204[6];
  uint64_t v46 = v206 + v45;
  uint64_t v47 = v205 + v45;
  uint64_t v48 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  uint64_t v49 = type metadata accessor for PreprocessedWeatherData();
  *(void *)(v46 + *(int *)(v49 + 20)) = *(void *)(v47 + *(int *)(v49 + 20));
  uint64_t v207 = v46;
  uint64_t v208 = (int *)v49;
  uint64_t v50 = *(int *)(v49 + 24);
  uint64_t v51 = (void *)(v46 + v50);
  uint64_t v209 = v47;
  uint64_t v52 = v47 + v50;
  uint64_t v53 = *(void *)(v47 + v50 + 8);
  *uint64_t v51 = *(void *)(v47 + v50);
  v51[1] = v53;
  uint64_t v54 = *(void *)(v47 + v50 + 24);
  v51[2] = *(void *)(v47 + v50 + 16);
  v51[3] = v54;
  uint64_t v55 = *(void *)(v47 + v50 + 40);
  v51[4] = *(void *)(v47 + v50 + 32);
  v51[5] = v55;
  uint64_t v56 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v57 = *(int *)(v56 + 28);
  uint64_t v58 = (void *)((char *)v51 + v57);
  uint64_t v59 = (void *)(v52 + v57);
  uint64_t v60 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
  {
    uint64_t v61 = sub_10017DF08(&qword_100E63750);
    memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    uint64_t v62 = v59[1];
    *uint64_t v58 = *v59;
    v58[1] = v62;
    uint64_t v63 = *(int *)(v60 + 20);
    uint64_t v64 = (char *)v58 + v63;
    uint64_t v65 = (char *)v59 + v63;
    uint64_t v66 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v202 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
    swift_bridgeObjectRetain();
    v202(v64, v65, v66);
    uint64_t v67 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v64[v67[5]] = *(void *)&v65[v67[5]];
    *(void *)&v64[v67[6]] = *(void *)&v65[v67[6]];
    *(void *)&v64[v67[7]] = *(void *)&v65[v67[7]];
    uint64_t v68 = v67[8];
    uint64_t v69 = &v64[v68];
    uint64_t v70 = &v65[v68];
    uint64_t v72 = *(void *)v70;
    uint64_t v71 = *((void *)v70 + 1);
    *(void *)uint64_t v69 = v72;
    *((void *)v69 + 1) = v71;
    v64[v67[9]] = v65[v67[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
  }
  uint64_t v73 = *(int *)(v56 + 32);
  uint64_t v74 = (void *)((char *)v51 + v73);
  uint64_t v75 = (void *)(v52 + v73);
  uint64_t v76 = v75[1];
  *uint64_t v74 = *v75;
  v74[1] = v76;
  uint64_t v77 = v208[7];
  uint64_t v78 = v207 + v77;
  uint64_t v79 = v209 + v77;
  *(void *)(v207 + v77) = *(void *)(v209 + v77);
  uint64_t v80 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v81 = (void *)(v78 + v80);
  double v82 = (const void *)(v79 + v80);
  uint64_t v83 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v196 = v83;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
  {
    uint64_t v84 = sub_10017DF08(&qword_100E63758);
    memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  }
  uint64_t v85 = v208[8];
  uint64_t v86 = (void *)(v207 + v85);
  uint64_t v87 = v209 + v85;
  uint64_t v88 = *(void *)(v209 + v85 + 8);
  void *v86 = *(void *)(v209 + v85);
  v86[1] = v88;
  uint64_t v89 = *(void *)(v209 + v85 + 24);
  v86[2] = *(void *)(v209 + v85 + 16);
  v86[3] = v89;
  uint64_t v90 = *(void *)(v209 + v85 + 40);
  v86[4] = *(void *)(v209 + v85 + 32);
  v86[5] = v90;
  uint64_t v91 = *(void *)(v209 + v85 + 56);
  v86[6] = *(void *)(v209 + v85 + 48);
  v86[7] = v91;
  uint64_t v92 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v93 = (char *)v86 + v92;
  uint64_t v94 = v87 + v92;
  uint64_t v95 = type metadata accessor for Date();
  uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v200 = v96;
  uint64_t v201 = v95;
  v96((uint64_t)v93, v94, v95);
  uint64_t v97 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v98 = *(int *)(v97 + 20);
  uint64_t v99 = &v93[v98];
  uint64_t v100 = (const void *)(v94 + v98);
  uint64_t v101 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
  {
    uint64_t v102 = sub_10017DF08(&qword_100E63760);
    memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
  }
  uint64_t v103 = *(int *)(v97 + 24);
  uint64_t v104 = &v93[v103];
  uint64_t v105 = (const void *)(v94 + v103);
  uint64_t v106 = type metadata accessor for BackgroundMoonData();
  uint64_t v203 = v97;
  uint64_t v198 = v106;
  uint64_t v199 = v101;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v106))
  {
    uint64_t v107 = sub_10017DF08(&qword_100E63768);
    memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v106);
  }
  uint64_t v108 = v208[9];
  uint64_t v109 = (void *)(v207 + v108);
  uint64_t v110 = (void *)(v209 + v108);
  uint64_t v111 = v110[1];
  *uint64_t v109 = *v110;
  v109[1] = v111;
  uint64_t v112 = v110[3];
  v109[2] = v110[2];
  v109[3] = v112;
  uint64_t v113 = v110[5];
  v109[4] = v110[4];
  v109[5] = v113;
  uint64_t v114 = v110[7];
  v109[6] = v110[6];
  v109[7] = v114;
  uint64_t v115 = v110[9];
  v109[8] = v110[8];
  v109[9] = v115;
  uint64_t v116 = v110[11];
  v109[10] = v110[10];
  v109[11] = v116;
  uint64_t v117 = v110[13];
  v109[12] = v110[12];
  v109[13] = v117;
  uint64_t v118 = v208[10];
  uint64_t v119 = v207 + v118;
  uint64_t v120 = v209 + v118;
  uint64_t v194 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v194(v119, v120, v196);
  uint64_t v121 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v122 = (void *)(v119 + v121);
  uint64_t v123 = (void *)(v120 + v121);
  uint64_t v124 = v123[1];
  *uint64_t v122 = *v123;
  v122[1] = v124;
  uint64_t v125 = v208[11];
  uint64_t v126 = (void *)(v207 + v125);
  uint64_t v127 = (void *)(v209 + v125);
  uint64_t v128 = v127[1];
  void *v126 = *v127;
  v126[1] = v128;
  uint64_t v129 = v127[3];
  v126[2] = v127[2];
  v126[3] = v129;
  uint64_t v130 = v127[5];
  v126[4] = v127[4];
  v126[5] = v130;
  uint64_t v131 = v208[12];
  uint64_t v132 = v207 + v131;
  uint64_t v133 = v209 + v131;
  uint64_t v134 = type metadata accessor for PressureTrend();
  int v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v135(v132, v133, v134);
  uint64_t v136 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v137 = v136[5];
  uint64_t v138 = (void *)(v132 + v137);
  uint64_t v139 = (void *)(v133 + v137);
  uint64_t v140 = v139[1];
  *uint64_t v138 = *v139;
  v138[1] = v140;
  uint64_t v141 = v136[6];
  uint64_t v142 = (void *)(v132 + v141);
  uint64_t v143 = (void *)(v133 + v141);
  uint64_t v197 = v143[1];
  *uint64_t v142 = *v143;
  v142[1] = v197;
  uint64_t v144 = v136[7];
  uint64_t v145 = (void *)(v132 + v144);
  uint64_t v146 = (void *)(v133 + v144);
  uint64_t v195 = v146[1];
  *uint64_t v145 = *v146;
  v145[1] = v195;
  *(void *)(v132 + v136[8]) = *(void *)(v133 + v136[8]);
  uint64_t v147 = v136[9];
  uint64_t v148 = (void *)(v132 + v147);
  uint64_t v149 = (void *)(v133 + v147);
  uint64_t v193 = v149[1];
  void *v148 = *v149;
  v148[1] = v193;
  uint64_t v150 = v208[13];
  uint64_t v151 = v207 + v150;
  uint64_t v152 = v209 + v150;
  uint64_t v153 = *(void *)(v152 + 8);
  *(void *)uint64_t v151 = *(void *)v152;
  *(void *)(v151 + 8) = v153;
  uint64_t v154 = *(void *)(v152 + 24);
  *(void *)(v151 + 16) = *(void *)(v152 + 16);
  *(void *)(v151 + 24) = v154;
  uint64_t v155 = *(void *)(v152 + 40);
  *(void *)(v151 + 32) = *(void *)(v152 + 32);
  *(void *)(v151 + 40) = v155;
  uint64_t v156 = *(void *)(v152 + 56);
  *(void *)(v151 + 48) = *(void *)(v152 + 48);
  *(void *)(v151 + 56) = v156;
  uint64_t v157 = *(void *)(v152 + 72);
  *(void *)(v151 + 64) = *(void *)(v152 + 64);
  *(void *)(v151 + 72) = v157;
  uint64_t v158 = *(void *)(v152 + 88);
  *(void *)(v151 + 80) = *(void *)(v152 + 80);
  *(void *)(v151 + 88) = v158;
  uint64_t v159 = *(void *)(v152 + 104);
  *(void *)(v151 + 96) = *(void *)(v152 + 96);
  *(void *)(v151 + 104) = v159;
  uint64_t v160 = *(void *)(v152 + 120);
  *(void *)(v151 + 112) = *(void *)(v152 + 112);
  *(void *)(v151 + 120) = v160;
  uint64_t v161 = *(void *)(v152 + 136);
  *(void *)(v151 + 128) = *(void *)(v152 + 128);
  *(void *)(v151 + 136) = v161;
  uint64_t v162 = *(void *)(v152 + 152);
  *(void *)(v151 + 144) = *(void *)(v152 + 144);
  *(void *)(v151 + 152) = v162;
  uint64_t v163 = *(void *)(v152 + 168);
  *(void *)(v151 + 160) = *(void *)(v152 + 160);
  *(void *)(v151 + 168) = v163;
  uint64_t v164 = *(void *)(v152 + 184);
  *(void *)(v151 + 176) = *(void *)(v152 + 176);
  *(void *)(v151 + 184) = v164;
  uint64_t v165 = *(void *)(v152 + 200);
  *(void *)(v151 + 192) = *(void *)(v152 + 192);
  *(void *)(v151 + 200) = v165;
  *(_OWORD *)(v151 + 208) = *(_OWORD *)(v152 + 208);
  *(void *)(v151 + 224) = *(void *)(v152 + 224);
  uint64_t v166 = v208[14];
  uint64_t v167 = v207 + v166;
  uint64_t v168 = v209 + v166;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v200(v167, v168, v201);
  uint64_t v169 = *(int *)(v203 + 20);
  uint64_t v170 = (void *)(v167 + v169);
  uint64_t v171 = (const void *)(v168 + v169);
  if (_s7Weather24LocationCompositionStateOwet_0(v168 + v169, 1, v199))
  {
    uint64_t v172 = sub_10017DF08(&qword_100E63760);
    memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v199 - 8) + 16))(v170, v171, v199);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v199);
  }
  uint64_t v173 = *(int *)(v203 + 24);
  uint64_t v174 = (void *)(v167 + v173);
  uint64_t v175 = (const void *)(v168 + v173);
  if (_s7Weather24LocationCompositionStateOwet_0(v168 + v173, 1, v198))
  {
    uint64_t v176 = sub_10017DF08(&qword_100E63768);
    memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v198 - 8) + 16))(v174, v175, v198);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v198);
  }
  uint64_t v177 = v208[15];
  uint64_t v178 = (void *)(v207 + v177);
  uint64_t v179 = (void *)(v209 + v177);
  uint64_t v180 = v179[1];
  void *v178 = *v179;
  v178[1] = v180;
  uint64_t v181 = v179[3];
  v178[2] = v179[2];
  v178[3] = v181;
  uint64_t v182 = v179[5];
  v178[4] = v179[4];
  v178[5] = v182;
  uint64_t v183 = v179[7];
  v178[6] = v179[6];
  v178[7] = v183;
  uint64_t v184 = v179[9];
  v178[8] = v179[8];
  v178[9] = v184;
  uint64_t v185 = v179[11];
  v178[10] = v179[10];
  v178[11] = v185;
  uint64_t v186 = v179[13];
  v178[12] = v179[12];
  v178[13] = v186;
  uint64_t v187 = v204[7];
  uint64_t v188 = (void *)(v206 + v187);
  uint64_t v189 = (void *)(v205 + v187);
  type metadata accessor for NewsDataModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v188 = *v189;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v190 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v190 - 8) + 16))(v188, v189, v190);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v191 = v204[9];
  uint64_t result = v206;
  *(unsigned char *)(v206 + v204[8]) = *(unsigned char *)(v205 + v204[8]);
  *(unsigned char *)(v206 + v191) = *(unsigned char *)(v205 + v191);
  return result;
}

uint64_t sub_100B4DB68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v19 = v10[6];
  uint64_t v20 = (char *)v8 + v19;
  uint64_t v21 = v9 + v19;
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = v10[7];
  uint64_t v24 = (char *)v8 + v23;
  uint64_t v25 = (const void *)(v9 + v23);
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      uint64_t v29 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v24, v25, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_1001781AC((uint64_t)v24, &qword_100E63738);
LABEL_12:
    uint64_t v30 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 24))(v24, v25, v48);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v31 = v10[8];
  uint64_t v32 = (void *)((char *)v8 + v31);
  uint64_t v33 = (void *)(v9 + v31);
  sub_100B4F484((uint64_t)v8 + v31, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v32 = *v33;
    v32[1] = v33[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_20:
  uint64_t v37 = v10[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v42)
  {
    sub_100B4F484((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    uint64_t v47 = v39;
LABEL_27:
    memcpy(v46, v47, v45);
    goto LABEL_39;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v38, v39, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
      goto LABEL_90;
    }
    goto LABEL_89;
  }
  uint64_t v186 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v186 + 8))(v38, v49);
LABEL_89:
    uint64_t v187 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v187 - 8) + 64));
    goto LABEL_90;
  }
  (*(void (**)(char *, char *, uint64_t))(v186 + 24))(v38, v39, v49);
LABEL_90:
  uint64_t v188 = *(int *)(v40 + 20);
  uint64_t v189 = &v38[v188];
  uint64_t v190 = (uint64_t)&v39[v188];
  int v191 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v38[v188], 1, v49);
  int v192 = _s7Weather24LocationCompositionStateOwet_0(v190, 1, v49);
  if (v191)
  {
    if (!v192)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v189, v190, v49);
      uint64_t v56 = (uint64_t)v189;
      uint64_t v57 = v49;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_39;
    }
    goto LABEL_95;
  }
  uint64_t v193 = *(void *)(v49 - 8);
  if (v192)
  {
    (*(void (**)(char *, uint64_t))(v193 + 8))(v189, v49);
LABEL_95:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v46 = v189;
    uint64_t v47 = (const void *)v190;
    goto LABEL_27;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v193 + 24))(v189, v190, v49);
LABEL_39:
  uint64_t v58 = a3[6];
  uint64_t v196 = a1;
  uint64_t v59 = a1 + v58;
  uint64_t v60 = a2 + v58;
  uint64_t v61 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
  uint64_t v62 = type metadata accessor for PreprocessedWeatherData();
  *(void *)(v59 + *(int *)(v62 + 20)) = *(void *)(v60 + *(int *)(v62 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v200 = (int *)v62;
  uint64_t v201 = v60;
  uint64_t v63 = *(int *)(v62 + 24);
  uint64_t v64 = (void *)(v59 + v63);
  uint64_t v65 = (void *)(v60 + v63);
  *uint64_t v64 = *(void *)(v60 + v63);
  v64[1] = *(void *)(v60 + v63 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[2] = v65[2];
  v64[3] = v65[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[4] = v65[4];
  v64[5] = v65[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v67 = *(int *)(v66 + 28);
  uint64_t v68 = (void *)((char *)v64 + v67);
  uint64_t v69 = (void *)((char *)v65 + v67);
  uint64_t v70 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v71 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v70);
  int v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70);
  uint64_t v194 = a3;
  uint64_t v195 = a2;
  if (v71)
  {
    if (!v72)
    {
      *uint64_t v68 = *v69;
      v68[1] = v69[1];
      uint64_t v73 = *(int *)(v70 + 20);
      uint64_t v74 = (char *)v68 + v73;
      uint64_t v75 = (char *)v69 + v73;
      uint64_t v76 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
      swift_bridgeObjectRetain();
      v198(v74, v75, v76);
      uint64_t v77 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v74[v77[5]] = *(void *)&v75[v77[5]];
      *(void *)&v74[v77[6]] = *(void *)&v75[v77[6]];
      *(void *)&v74[v77[7]] = *(void *)&v75[v77[7]];
      uint64_t v78 = v77[8];
      uint64_t v79 = &v74[v78];
      uint64_t v80 = &v75[v78];
      *(void *)uint64_t v79 = *(void *)v80;
      *((void *)v79 + 1) = *((void *)v80 + 1);
      v74[v77[9]] = v75[v77[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v72)
  {
    sub_100B4F484((uint64_t)v68, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_44:
    uint64_t v81 = sub_10017DF08(&qword_100E63750);
    memcpy(v68, v69, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_45;
  }
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v178 = *(int *)(v70 + 20);
  uint64_t v179 = (char *)v68 + v178;
  uint64_t v180 = (char *)v69 + v178;
  uint64_t v181 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 24))(v179, v180, v181);
  uint64_t v182 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v179[v182[5]] = *(void *)&v180[v182[5]];
  *(void *)&v179[v182[6]] = *(void *)&v180[v182[6]];
  *(void *)&v179[v182[7]] = *(void *)&v180[v182[7]];
  uint64_t v183 = v182[8];
  uint64_t v184 = &v179[v183];
  uint64_t v185 = &v180[v183];
  *(void *)uint64_t v184 = *(void *)v185;
  *((void *)v184 + 1) = *((void *)v185 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v179[v182[9]] = v180[v182[9]];
LABEL_45:
  uint64_t v82 = *(int *)(v66 + 32);
  uint64_t v83 = (void *)((char *)v64 + v82);
  uint64_t v84 = (void *)((char *)v65 + v82);
  *uint64_t v83 = *v84;
  v83[1] = v84[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = v200[7];
  uint64_t v86 = v59 + v85;
  uint64_t v87 = v201 + v85;
  *(void *)(v59 + v85) = *(void *)(v201 + v85);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v89 = (void *)(v86 + v88);
  uint64_t v90 = (const void *)(v87 + v88);
  uint64_t v91 = type metadata accessor for WeatherDescription();
  int v92 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v91);
  int v93 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91);
  if (v92)
  {
    if (!v93)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v91);
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  uint64_t v94 = *(void *)(v91 - 8);
  if (v93)
  {
    (*(void (**)(void *, uint64_t))(v94 + 8))(v89, v91);
LABEL_50:
    uint64_t v95 = sub_10017DF08(&qword_100E63758);
    memcpy(v89, v90, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(void *, const void *, uint64_t))(v94 + 24))(v89, v90, v91);
LABEL_51:
  uint64_t v96 = v200[8];
  uint64_t v97 = (void *)(v59 + v96);
  uint64_t v98 = (void *)(v201 + v96);
  void *v97 = *(void *)(v201 + v96);
  v97[1] = *(void *)(v201 + v96 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97[2] = v98[2];
  v97[3] = v98[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97[4] = v98[4];
  v97[5] = v98[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97[6] = v98[6];
  v97[7] = v98[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v99 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v100 = (char *)v97 + v99;
  uint64_t v101 = (char *)v98 + v99;
  uint64_t v102 = type metadata accessor for Date();
  uint64_t v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 24);
  v197(v100, v101, v102);
  uint64_t v103 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v104 = *(int *)(v103 + 20);
  uint64_t v105 = &v100[v104];
  uint64_t v106 = &v101[v104];
  uint64_t v107 = type metadata accessor for Elevation();
  int v108 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v107);
  int v109 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v110 = *(void *)(v107 - 8);
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v110 + 8))(v105, v107);
LABEL_56:
    uint64_t v111 = sub_10017DF08(&qword_100E63760);
    memcpy(v105, v106, *(void *)(*(void *)(v111 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(char *, char *, uint64_t))(v110 + 24))(v105, v106, v107);
LABEL_57:
  uint64_t v112 = *(int *)(v103 + 24);
  uint64_t v113 = &v100[v112];
  uint64_t v114 = &v101[v112];
  uint64_t v115 = type metadata accessor for BackgroundMoonData();
  int v116 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v115);
  int v117 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115);
  uint64_t v199 = v103;
  if (v116)
  {
    if (!v117)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  uint64_t v118 = *(void *)(v115 - 8);
  if (v117)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v113, v115);
LABEL_62:
    uint64_t v119 = sub_10017DF08(&qword_100E63768);
    memcpy(v113, v114, *(void *)(*(void *)(v119 - 8) + 64));
    goto LABEL_63;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v113, v114, v115);
LABEL_63:
  uint64_t v120 = v200[9];
  uint64_t v121 = (void *)(v59 + v120);
  uint64_t v122 = (void *)(v201 + v120);
  void *v121 = *(void *)(v201 + v120);
  v121[1] = *(void *)(v201 + v120 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[2] = v122[2];
  v121[3] = v122[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[4] = v122[4];
  v121[5] = v122[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[6] = v122[6];
  v121[7] = v122[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[8] = v122[8];
  v121[9] = v122[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[10] = v122[10];
  v121[11] = v122[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[12] = v122[12];
  v121[13] = v122[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v123 = v200[10];
  uint64_t v124 = v59 + v123;
  uint64_t v125 = v201 + v123;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 24))(v59 + v123, v201 + v123, v91);
  uint64_t v126 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v127 = (void *)(v124 + v126);
  uint64_t v128 = (void *)(v125 + v126);
  *uint64_t v127 = *v128;
  v127[1] = v128[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v129 = v200[11];
  uint64_t v130 = (void *)(v59 + v129);
  uint64_t v131 = (void *)(v201 + v129);
  *uint64_t v130 = *(void *)(v201 + v129);
  v130[1] = *(void *)(v201 + v129 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v130[2] = v131[2];
  v130[3] = v131[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v130[4] = v131[4];
  v130[5] = v131[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v132 = v200[12];
  uint64_t v133 = v59 + v132;
  uint64_t v134 = v201 + v132;
  uint64_t v135 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 24))(v133, v134, v135);
  uint64_t v136 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v137 = v136[5];
  uint64_t v138 = (void *)(v133 + v137);
  uint64_t v139 = (void *)(v134 + v137);
  *uint64_t v138 = *v139;
  v138[1] = v139[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v140 = v136[6];
  uint64_t v141 = (void *)(v133 + v140);
  uint64_t v142 = (void *)(v134 + v140);
  *uint64_t v141 = *v142;
  v141[1] = v142[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v143 = v136[7];
  uint64_t v144 = (void *)(v133 + v143);
  uint64_t v145 = (void *)(v134 + v143);
  void *v144 = *v145;
  v144[1] = v145[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v133 + v136[8]) = *(void *)(v134 + v136[8]);
  uint64_t v146 = v136[9];
  uint64_t v147 = (void *)(v133 + v146);
  uint64_t v148 = (void *)(v134 + v146);
  void *v147 = *v148;
  v147[1] = v148[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v149 = v200[13];
  uint64_t v150 = (void *)(v59 + v149);
  uint64_t v151 = (void *)(v201 + v149);
  *uint64_t v150 = *(void *)(v201 + v149);
  v150[1] = *(void *)(v201 + v149 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[2] = v151[2];
  v150[3] = v151[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[4] = v151[4];
  v150[5] = v151[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[6] = v151[6];
  v150[7] = v151[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[8] = v151[8];
  v150[9] = v151[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[10] = v151[10];
  v150[11] = v151[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[12] = v151[12];
  v150[13] = v151[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[14] = v151[14];
  v150[15] = v151[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[16] = v151[16];
  v150[17] = v151[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[18] = v151[18];
  v150[19] = v151[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[20] = v151[20];
  v150[21] = v151[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[22] = v151[22];
  v150[23] = v151[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[24] = v151[24];
  v150[25] = v151[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[26] = v151[26];
  v150[27] = v151[27];
  v150[28] = v151[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v152 = v200[14];
  uint64_t v153 = v59 + v152;
  uint64_t v154 = v201 + v152;
  v197((char *)(v59 + v152), (char *)(v201 + v152), v102);
  uint64_t v155 = *(int *)(v199 + 20);
  uint64_t v156 = (void *)(v153 + v155);
  uint64_t v157 = (const void *)(v154 + v155);
  int v158 = _s7Weather24LocationCompositionStateOwet_0(v153 + v155, 1, v107);
  int v159 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, v107);
  if (v158)
  {
    uint64_t v160 = v59;
    if (!v159)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v107 - 8) + 16))(v156, v157, v107);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v156, 0, 1, v107);
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  uint64_t v161 = *(void *)(v107 - 8);
  uint64_t v160 = v59;
  if (v159)
  {
    (*(void (**)(void *, uint64_t))(v161 + 8))(v156, v107);
LABEL_68:
    uint64_t v162 = sub_10017DF08(&qword_100E63760);
    memcpy(v156, v157, *(void *)(*(void *)(v162 - 8) + 64));
    goto LABEL_69;
  }
  (*(void (**)(void *, const void *, uint64_t))(v161 + 24))(v156, v157, v107);
LABEL_69:
  uint64_t v163 = *(int *)(v199 + 24);
  uint64_t v164 = (void *)(v153 + v163);
  uint64_t v165 = (const void *)(v154 + v163);
  int v166 = _s7Weather24LocationCompositionStateOwet_0(v153 + v163, 1, v115);
  int v167 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v165, 1, v115);
  if (v166)
  {
    if (!v167)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v115 - 8) + 16))(v164, v165, v115);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v164, 0, 1, v115);
      goto LABEL_75;
    }
    goto LABEL_74;
  }
  uint64_t v168 = *(void *)(v115 - 8);
  if (v167)
  {
    (*(void (**)(void *, uint64_t))(v168 + 8))(v164, v115);
LABEL_74:
    uint64_t v169 = sub_10017DF08(&qword_100E63768);
    memcpy(v164, v165, *(void *)(*(void *)(v169 - 8) + 64));
    goto LABEL_75;
  }
  (*(void (**)(void *, const void *, uint64_t))(v168 + 24))(v164, v165, v115);
LABEL_75:
  uint64_t v170 = v200[15];
  uint64_t v171 = (void *)(v160 + v170);
  uint64_t v172 = (void *)(v201 + v170);
  void *v171 = *(void *)(v201 + v170);
  v171[1] = *(void *)(v201 + v170 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[2] = v172[2];
  v171[3] = v172[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[4] = v172[4];
  v171[5] = v172[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[6] = v172[6];
  v171[7] = v172[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[8] = v172[8];
  v171[9] = v172[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[10] = v172[10];
  v171[11] = v172[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[12] = v172[12];
  v171[13] = v172[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v196 != v195)
  {
    uint64_t v173 = v194[7];
    uint64_t v174 = (void *)(v196 + v173);
    uint64_t v175 = (void *)(v195 + v173);
    sub_100B4F484(v196 + v173, (void (*)(void))type metadata accessor for NewsDataModel);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v174 = *v175;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v176 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(v196 + v194[8]) = *(unsigned char *)(v195 + v194[8]);
  *(unsigned char *)(v196 + v194[9]) = *(unsigned char *)(v195 + v194[9]);
  return v196;
}

uint64_t sub_100B4F484(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100B4F4DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v10[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = v10[7];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (const void *)(v9 + v20);
  uint64_t v23 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v21, v22, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v26 = v10[8];
  int v27 = (void *)(v8 + v26);
  int v28 = (const void *)(v9 + v26);
  uint64_t v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v31 = v10[9];
  uint64_t v32 = (char *)(v8 + v31);
  uint64_t v33 = (char *)(v9 + v31);
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E63740);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    uint64_t v38 = *(int *)(v34 + 20);
    uint64_t v39 = &v32[v38];
    uint64_t v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  uint64_t v123 = a3;
  uint64_t v124 = a2;
  uint64_t v42 = a3[6];
  uint64_t v125 = a1;
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  uint64_t v46 = (int *)type metadata accessor for PreprocessedWeatherData();
  *(void *)(v43 + v46[5]) = *(void *)(v44 + v46[5]);
  uint64_t v47 = v46[6];
  uint64_t v48 = (_OWORD *)(v43 + v47);
  uint64_t v49 = v44 + v47;
  long long v50 = *(_OWORD *)(v44 + v47 + 16);
  *uint64_t v48 = *(_OWORD *)(v44 + v47);
  v48[1] = v50;
  v48[2] = *(_OWORD *)(v44 + v47 + 32);
  uint64_t v51 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v52 = *(int *)(v51 + 28);
  uint64_t v53 = (_OWORD *)((char *)v48 + v52);
  uint64_t v54 = (_OWORD *)(v49 + v52);
  uint64_t v55 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
  {
    uint64_t v56 = sub_10017DF08(&qword_100E63750);
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    *uint64_t v53 = *v54;
    uint64_t v57 = *(int *)(v55 + 20);
    uint64_t v58 = (char *)v53 + v57;
    uint64_t v59 = (char *)v54 + v57;
    uint64_t v60 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
    uint64_t v61 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v58[v61[5]] = *(void *)&v59[v61[5]];
    *(void *)&v58[v61[6]] = *(void *)&v59[v61[6]];
    *(void *)&v58[v61[7]] = *(void *)&v59[v61[7]];
    *(_OWORD *)&v58[v61[8]] = *(_OWORD *)&v59[v61[8]];
    v58[v61[9]] = v59[v61[9]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
  }
  *(_OWORD *)((char *)v48 + *(int *)(v51 + 32)) = *(_OWORD *)(v49 + *(int *)(v51 + 32));
  uint64_t v62 = v46[7];
  uint64_t v63 = v43 + v62;
  uint64_t v64 = v44 + v62;
  *(void *)(v43 + v62) = *(void *)(v44 + v62);
  uint64_t v65 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v66 = (void *)(v63 + v65);
  uint64_t v67 = (const void *)(v64 + v65);
  uint64_t v68 = type metadata accessor for WeatherDescription();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
  {
    uint64_t v69 = sub_10017DF08(&qword_100E63758);
    memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
  }
  uint64_t v70 = v46[8];
  int v71 = (_OWORD *)(v43 + v70);
  uint64_t v72 = v44 + v70;
  long long v73 = *(_OWORD *)(v44 + v70 + 16);
  *int v71 = *(_OWORD *)(v44 + v70);
  v71[1] = v73;
  long long v74 = *(_OWORD *)(v44 + v70 + 48);
  v71[2] = *(_OWORD *)(v44 + v70 + 32);
  v71[3] = v74;
  uint64_t v75 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v76 = (char *)v71 + v75;
  uint64_t v77 = v72 + v75;
  uint64_t v78 = type metadata accessor for Date();
  uint64_t v121 = *(void (**)(char *, uint64_t))(*(void *)(v78 - 8) + 32);
  uint64_t v122 = v78;
  v121(v76, v77);
  uint64_t v79 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v80 = *(int *)(v79 + 20);
  uint64_t v81 = &v76[v80];
  uint64_t v82 = (const void *)(v77 + v80);
  uint64_t v83 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
  {
    uint64_t v84 = sub_10017DF08(&qword_100E63760);
    memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  }
  uint64_t v85 = *(int *)(v79 + 24);
  uint64_t v86 = &v76[v85];
  uint64_t v87 = (const void *)(v77 + v85);
  uint64_t v88 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v88))
  {
    uint64_t v89 = sub_10017DF08(&qword_100E63768);
    memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v88);
  }
  memcpy((void *)(v43 + v46[9]), (const void *)(v44 + v46[9]), 0x70uLL);
  uint64_t v90 = v46[10];
  uint64_t v91 = v43 + v90;
  uint64_t v92 = v44 + v90;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 32))(v43 + v90, v44 + v90, v68);
  uint64_t v93 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  *(_OWORD *)(v91 + *(int *)(v93 + 20)) = *(_OWORD *)(v92 + *(int *)(v93 + 20));
  uint64_t v94 = v46[11];
  uint64_t v95 = (_OWORD *)(v43 + v94);
  uint64_t v96 = (_OWORD *)(v44 + v94);
  long long v97 = v96[1];
  _OWORD *v95 = *v96;
  v95[1] = v97;
  v95[2] = v96[2];
  uint64_t v98 = v46[12];
  uint64_t v99 = v43 + v98;
  uint64_t v100 = v44 + v98;
  uint64_t v101 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
  uint64_t v102 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  *(_OWORD *)(v99 + v102[5]) = *(_OWORD *)(v100 + v102[5]);
  *(_OWORD *)(v99 + v102[6]) = *(_OWORD *)(v100 + v102[6]);
  *(_OWORD *)(v99 + v102[7]) = *(_OWORD *)(v100 + v102[7]);
  *(void *)(v99 + v102[8]) = *(void *)(v100 + v102[8]);
  *(_OWORD *)(v99 + v102[9]) = *(_OWORD *)(v100 + v102[9]);
  memcpy((void *)(v43 + v46[13]), (const void *)(v44 + v46[13]), 0xE8uLL);
  uint64_t v103 = v46[14];
  uint64_t v104 = v43 + v103;
  uint64_t v105 = v44 + v103;
  ((void (*)(uint64_t, uint64_t, uint64_t))v121)(v43 + v103, v44 + v103, v122);
  uint64_t v106 = *(int *)(v79 + 20);
  uint64_t v107 = (void *)(v104 + v106);
  int v108 = (const void *)(v105 + v106);
  if (_s7Weather24LocationCompositionStateOwet_0(v105 + v106, 1, v83))
  {
    uint64_t v109 = sub_10017DF08(&qword_100E63760);
    memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v107, v108, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v83);
  }
  uint64_t v110 = *(int *)(v79 + 24);
  uint64_t v111 = (void *)(v104 + v110);
  uint64_t v112 = (const void *)(v105 + v110);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v88))
  {
    uint64_t v113 = sub_10017DF08(&qword_100E63768);
    memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v88 - 8) + 32))(v111, v112, v88);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v88);
  }
  memcpy((void *)(v43 + v46[15]), (const void *)(v44 + v46[15]), 0x70uLL);
  uint64_t v114 = v123[7];
  uint64_t v115 = (void *)(v125 + v114);
  int v116 = (const void *)(v124 + v114);
  uint64_t v117 = type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
  }
  else
  {
    uint64_t v118 = type metadata accessor for News();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v118 - 8) + 32))(v115, v116, v118);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v119 = v123[9];
  *(unsigned char *)(v125 + v123[8]) = *(unsigned char *)(v124 + v123[8]);
  *(unsigned char *)(v125 + v119) = *(unsigned char *)(v124 + v119);
  return v125;
}

uint64_t sub_100B500CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[6];
  uint64_t v21 = (char *)v8 + v20;
  uint64_t v22 = v9 + v20;
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = v11[7];
  uint64_t v25 = (char *)v8 + v24;
  uint64_t v26 = (const void *)(v9 + v24);
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      uint64_t v30 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v25, v26, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_1001781AC((uint64_t)v25, &qword_100E63738);
LABEL_12:
    uint64_t v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 40))(v25, v26, v48);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v32 = v11[8];
    uint64_t v33 = (char *)v8 + v32;
    uint64_t v34 = (const void *)(v9 + v32);
    sub_100B4F484((uint64_t)v8 + v32, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  uint64_t v37 = v11[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v42)
  {
    sub_100B4F484((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    uint64_t v47 = v39;
LABEL_24:
    memcpy(v46, v47, v45);
    goto LABEL_36;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v38, v39, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
      goto LABEL_86;
    }
    goto LABEL_85;
  }
  uint64_t v234 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v234 + 8))(v38, v49);
LABEL_85:
    uint64_t v235 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v235 - 8) + 64));
    goto LABEL_86;
  }
  (*(void (**)(char *, char *, uint64_t))(v234 + 40))(v38, v39, v49);
LABEL_86:
  uint64_t v236 = *(int *)(v40 + 20);
  uint64_t v237 = &v38[v236];
  uint64_t v238 = (uint64_t)&v39[v236];
  int v239 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v38[v236], 1, v49);
  int v240 = _s7Weather24LocationCompositionStateOwet_0(v238, 1, v49);
  if (v239)
  {
    if (!v240)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v237, v238, v49);
      uint64_t v56 = (uint64_t)v237;
      uint64_t v57 = v49;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_36;
    }
    goto LABEL_91;
  }
  uint64_t v241 = *(void *)(v49 - 8);
  if (v240)
  {
    (*(void (**)(char *, uint64_t))(v241 + 8))(v237, v49);
LABEL_91:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v46 = v237;
    uint64_t v47 = (const void *)v238;
    goto LABEL_24;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v241 + 40))(v237, v238, v49);
LABEL_36:
  uint64_t v243 = a3;
  uint64_t v244 = a2;
  uint64_t v58 = a3[6];
  uint64_t v245 = a1;
  uint64_t v59 = a1 + v58;
  uint64_t v60 = a2 + v58;
  uint64_t v61 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 40))(v59, v60, v61);
  uint64_t v62 = (int *)type metadata accessor for PreprocessedWeatherData();
  *(void *)(v59 + v62[5]) = *(void *)(v60 + v62[5]);
  swift_bridgeObjectRelease();
  uint64_t v63 = v62[6];
  uint64_t v64 = (void *)(v59 + v63);
  uint64_t v65 = (void *)(v60 + v63);
  uint64_t v66 = *(void *)(v60 + v63 + 8);
  *uint64_t v64 = *(void *)(v60 + v63);
  v64[1] = v66;
  swift_bridgeObjectRelease();
  uint64_t v67 = v65[3];
  v64[2] = v65[2];
  v64[3] = v67;
  swift_bridgeObjectRelease();
  uint64_t v68 = v65[5];
  v64[4] = v65[4];
  v64[5] = v68;
  swift_bridgeObjectRelease();
  uint64_t v69 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v70 = *(int *)(v69 + 28);
  int v71 = (void *)((char *)v64 + v70);
  uint64_t v72 = (void *)((char *)v65 + v70);
  uint64_t v73 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v73);
  int v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73);
  if (v74)
  {
    if (!v75)
    {
      *(_OWORD *)int v71 = *(_OWORD *)v72;
      uint64_t v76 = *(int *)(v73 + 20);
      uint64_t v77 = (char *)v71 + v76;
      uint64_t v78 = (char *)v72 + v76;
      uint64_t v79 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
      uint64_t v80 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v77[v80[5]] = *(void *)&v78[v80[5]];
      *(void *)&v77[v80[6]] = *(void *)&v78[v80[6]];
      *(void *)&v77[v80[7]] = *(void *)&v78[v80[7]];
      *(_OWORD *)&v77[v80[8]] = *(_OWORD *)&v78[v80[8]];
      v77[v80[9]] = v78[v80[9]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v75)
  {
    sub_100B4F484((uint64_t)v71, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_41:
    uint64_t v81 = sub_10017DF08(&qword_100E63750);
    memcpy(v71, v72, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_42;
  }
  uint64_t v223 = v72[1];
  *int v71 = *v72;
  v71[1] = v223;
  swift_bridgeObjectRelease();
  uint64_t v224 = *(int *)(v73 + 20);
  uint64_t v225 = (char *)v71 + v224;
  uint64_t v226 = (char *)v72 + v224;
  uint64_t v227 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 40))(v225, v226, v227);
  uint64_t v228 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v225[v228[5]] = *(void *)&v226[v228[5]];
  *(void *)&v225[v228[6]] = *(void *)&v226[v228[6]];
  *(void *)&v225[v228[7]] = *(void *)&v226[v228[7]];
  uint64_t v229 = v228[8];
  uint64_t v230 = &v225[v229];
  int v231 = &v226[v229];
  uint64_t v233 = *(void *)v231;
  uint64_t v232 = *((void *)v231 + 1);
  *(void *)uint64_t v230 = v233;
  *((void *)v230 + 1) = v232;
  swift_bridgeObjectRelease();
  v225[v228[9]] = v226[v228[9]];
LABEL_42:
  uint64_t v82 = *(int *)(v69 + 32);
  uint64_t v83 = (void *)((char *)v64 + v82);
  uint64_t v84 = (void *)((char *)v65 + v82);
  uint64_t v86 = *v84;
  uint64_t v85 = v84[1];
  *uint64_t v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = v62[7];
  uint64_t v88 = v59 + v87;
  uint64_t v89 = v60 + v87;
  *(void *)(v59 + v87) = *(void *)(v60 + v87);
  swift_bridgeObjectRelease();
  uint64_t v90 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v91 = (void *)(v88 + v90);
  uint64_t v92 = (const void *)(v89 + v90);
  uint64_t v93 = type metadata accessor for WeatherDescription();
  int v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v93);
  int v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93);
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v93);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  uint64_t v96 = *(void *)(v93 - 8);
  if (v95)
  {
    (*(void (**)(void *, uint64_t))(v96 + 8))(v91, v93);
LABEL_47:
    uint64_t v97 = sub_10017DF08(&qword_100E63758);
    memcpy(v91, v92, *(void *)(*(void *)(v97 - 8) + 64));
    goto LABEL_48;
  }
  (*(void (**)(void *, const void *, uint64_t))(v96 + 40))(v91, v92, v93);
LABEL_48:
  uint64_t v98 = v62[8];
  uint64_t v99 = (void *)(v59 + v98);
  uint64_t v100 = (void *)(v60 + v98);
  uint64_t v101 = *(void *)(v60 + v98 + 8);
  *uint64_t v99 = *(void *)(v60 + v98);
  v99[1] = v101;
  swift_bridgeObjectRelease();
  uint64_t v102 = v100[3];
  v99[2] = v100[2];
  v99[3] = v102;
  swift_bridgeObjectRelease();
  uint64_t v103 = v100[5];
  v99[4] = v100[4];
  uint64_t v99[5] = v103;
  swift_bridgeObjectRelease();
  uint64_t v104 = v100[7];
  v99[6] = v100[6];
  v99[7] = v104;
  swift_bridgeObjectRelease();
  uint64_t v105 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v106 = (char *)v99 + v105;
  uint64_t v107 = (char *)v100 + v105;
  uint64_t v242 = type metadata accessor for Date();
  uint64_t v246 = *(void (**)(char *, char *))(*(void *)(v242 - 8) + 40);
  v246(v106, v107);
  uint64_t v247 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v108 = *(int *)(v247 + 20);
  uint64_t v109 = &v106[v108];
  uint64_t v110 = &v107[v108];
  uint64_t v111 = type metadata accessor for Elevation();
  LODWORD(v100) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v111);
  int v112 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, v111);
  if (v100)
  {
    if (!v112)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, v111);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  uint64_t v113 = *(void *)(v111 - 8);
  if (v112)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v109, v111);
LABEL_53:
    uint64_t v114 = sub_10017DF08(&qword_100E63760);
    memcpy(v109, v110, *(void *)(*(void *)(v114 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v113 + 40))(v109, v110, v111);
LABEL_54:
  uint64_t v115 = *(int *)(v247 + 24);
  int v116 = &v106[v115];
  uint64_t v117 = &v107[v115];
  uint64_t v118 = type metadata accessor for BackgroundMoonData();
  int v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v118);
  int v120 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118);
  if (v119)
  {
    if (!v120)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  uint64_t v121 = *(void *)(v118 - 8);
  if (v120)
  {
    (*(void (**)(char *, uint64_t))(v121 + 8))(v116, v118);
LABEL_59:
    uint64_t v122 = sub_10017DF08(&qword_100E63768);
    memcpy(v116, v117, *(void *)(*(void *)(v122 - 8) + 64));
    goto LABEL_60;
  }
  (*(void (**)(char *, char *, uint64_t))(v121 + 40))(v116, v117, v118);
LABEL_60:
  uint64_t v123 = v62[9];
  uint64_t v124 = (void *)(v59 + v123);
  uint64_t v125 = (void *)(v60 + v123);
  uint64_t v126 = *(void *)(v60 + v123 + 8);
  void *v124 = *(void *)(v60 + v123);
  v124[1] = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = v125[3];
  v124[2] = v125[2];
  v124[3] = v127;
  swift_bridgeObjectRelease();
  uint64_t v128 = v125[5];
  v124[4] = v125[4];
  v124[5] = v128;
  swift_bridgeObjectRelease();
  uint64_t v129 = v125[7];
  v124[6] = v125[6];
  v124[7] = v129;
  swift_bridgeObjectRelease();
  uint64_t v130 = v125[9];
  v124[8] = v125[8];
  v124[9] = v130;
  swift_bridgeObjectRelease();
  uint64_t v131 = v125[11];
  v124[10] = v125[10];
  v124[11] = v131;
  swift_bridgeObjectRelease();
  uint64_t v132 = v125[13];
  v124[12] = v125[12];
  v124[13] = v132;
  swift_bridgeObjectRelease();
  uint64_t v133 = v62[10];
  uint64_t v134 = v59 + v133;
  uint64_t v135 = v60 + v133;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 40))(v59 + v133, v60 + v133, v93);
  uint64_t v136 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v137 = (void *)(v134 + v136);
  uint64_t v138 = (uint64_t *)(v135 + v136);
  uint64_t v140 = *v138;
  uint64_t v139 = v138[1];
  *uint64_t v137 = v140;
  v137[1] = v139;
  swift_bridgeObjectRelease();
  uint64_t v141 = v62[11];
  uint64_t v142 = (void *)(v59 + v141);
  uint64_t v143 = (void *)(v60 + v141);
  uint64_t v144 = *(void *)(v60 + v141 + 8);
  *uint64_t v142 = *(void *)(v60 + v141);
  v142[1] = v144;
  swift_bridgeObjectRelease();
  uint64_t v145 = v143[3];
  v142[2] = v143[2];
  v142[3] = v145;
  swift_bridgeObjectRelease();
  uint64_t v146 = v143[5];
  v142[4] = v143[4];
  v142[5] = v146;
  swift_bridgeObjectRelease();
  uint64_t v147 = v62[12];
  uint64_t v148 = v59 + v147;
  uint64_t v149 = v60 + v147;
  uint64_t v150 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 40))(v148, v149, v150);
  uint64_t v151 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v152 = v151[5];
  uint64_t v153 = (void *)(v148 + v152);
  uint64_t v154 = (uint64_t *)(v149 + v152);
  uint64_t v156 = *v154;
  uint64_t v155 = v154[1];
  *uint64_t v153 = v156;
  v153[1] = v155;
  swift_bridgeObjectRelease();
  uint64_t v157 = v151[6];
  int v158 = (void *)(v148 + v157);
  int v159 = (uint64_t *)(v149 + v157);
  uint64_t v161 = *v159;
  uint64_t v160 = v159[1];
  *int v158 = v161;
  v158[1] = v160;
  swift_bridgeObjectRelease();
  uint64_t v162 = v151[7];
  uint64_t v163 = (void *)(v148 + v162);
  uint64_t v164 = (uint64_t *)(v149 + v162);
  uint64_t v166 = *v164;
  uint64_t v165 = v164[1];
  void *v163 = v166;
  v163[1] = v165;
  swift_bridgeObjectRelease();
  *(void *)(v148 + v151[8]) = *(void *)(v149 + v151[8]);
  uint64_t v167 = v151[9];
  uint64_t v168 = (void *)(v148 + v167);
  uint64_t v169 = (uint64_t *)(v149 + v167);
  uint64_t v171 = *v169;
  uint64_t v170 = v169[1];
  void *v168 = v171;
  v168[1] = v170;
  swift_bridgeObjectRelease();
  uint64_t v172 = v62[13];
  uint64_t v173 = (void *)(v59 + v172);
  uint64_t v174 = (void *)(v60 + v172);
  uint64_t v175 = *(void *)(v60 + v172 + 8);
  *uint64_t v173 = *(void *)(v60 + v172);
  v173[1] = v175;
  swift_bridgeObjectRelease();
  uint64_t v176 = v174[3];
  v173[2] = v174[2];
  v173[3] = v176;
  swift_bridgeObjectRelease();
  uint64_t v177 = v174[5];
  v173[4] = v174[4];
  v173[5] = v177;
  swift_bridgeObjectRelease();
  uint64_t v178 = v174[7];
  v173[6] = v174[6];
  v173[7] = v178;
  swift_bridgeObjectRelease();
  uint64_t v179 = v174[9];
  v173[8] = v174[8];
  v173[9] = v179;
  swift_bridgeObjectRelease();
  uint64_t v180 = v174[11];
  v173[10] = v174[10];
  v173[11] = v180;
  swift_bridgeObjectRelease();
  uint64_t v181 = v174[13];
  v173[12] = v174[12];
  v173[13] = v181;
  swift_bridgeObjectRelease();
  uint64_t v182 = v174[15];
  v173[14] = v174[14];
  v173[15] = v182;
  swift_bridgeObjectRelease();
  uint64_t v183 = v174[17];
  v173[16] = v174[16];
  v173[17] = v183;
  swift_bridgeObjectRelease();
  uint64_t v184 = v174[19];
  v173[18] = v174[18];
  v173[19] = v184;
  swift_bridgeObjectRelease();
  uint64_t v185 = v174[21];
  v173[20] = v174[20];
  v173[21] = v185;
  swift_bridgeObjectRelease();
  uint64_t v186 = v174[23];
  v173[22] = v174[22];
  v173[23] = v186;
  swift_bridgeObjectRelease();
  uint64_t v187 = v174[25];
  v173[24] = v174[24];
  v173[25] = v187;
  swift_bridgeObjectRelease();
  v173[26] = v174[26];
  uint64_t v188 = v174[28];
  v173[27] = v174[27];
  v173[28] = v188;
  swift_bridgeObjectRelease();
  uint64_t v189 = v62[14];
  uint64_t v190 = v59 + v189;
  uint64_t v191 = v60 + v189;
  ((void (*)(uint64_t, uint64_t, uint64_t))v246)(v59 + v189, v60 + v189, v242);
  uint64_t v192 = *(int *)(v247 + 20);
  uint64_t v193 = (void *)(v190 + v192);
  uint64_t v194 = (const void *)(v191 + v192);
  int v195 = _s7Weather24LocationCompositionStateOwet_0(v190 + v192, 1, v111);
  int v196 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v111);
  if (v195)
  {
    if (!v196)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v111 - 8) + 32))(v193, v194, v111);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v111);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  uint64_t v197 = *(void *)(v111 - 8);
  if (v196)
  {
    (*(void (**)(void *, uint64_t))(v197 + 8))(v193, v111);
LABEL_65:
    uint64_t v198 = sub_10017DF08(&qword_100E63760);
    memcpy(v193, v194, *(void *)(*(void *)(v198 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(void *, const void *, uint64_t))(v197 + 40))(v193, v194, v111);
LABEL_66:
  uint64_t v199 = *(int *)(v247 + 24);
  uint64_t v200 = (void *)(v190 + v199);
  uint64_t v201 = (const void *)(v191 + v199);
  int v202 = _s7Weather24LocationCompositionStateOwet_0(v190 + v199, 1, v118);
  int v203 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v201, 1, v118);
  if (v202)
  {
    if (!v203)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v118 - 8) + 32))(v200, v201, v118);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v200, 0, 1, v118);
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  uint64_t v204 = *(void *)(v118 - 8);
  if (v203)
  {
    (*(void (**)(void *, uint64_t))(v204 + 8))(v200, v118);
LABEL_71:
    uint64_t v205 = sub_10017DF08(&qword_100E63768);
    memcpy(v200, v201, *(void *)(*(void *)(v205 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(void *, const void *, uint64_t))(v204 + 40))(v200, v201, v118);
LABEL_72:
  uint64_t v206 = v62[15];
  uint64_t v207 = (void *)(v59 + v206);
  uint64_t v208 = (void *)(v60 + v206);
  uint64_t v209 = *(void *)(v60 + v206 + 8);
  *uint64_t v207 = *(void *)(v60 + v206);
  v207[1] = v209;
  swift_bridgeObjectRelease();
  uint64_t v210 = v208[3];
  v207[2] = v208[2];
  v207[3] = v210;
  swift_bridgeObjectRelease();
  uint64_t v211 = v208[5];
  v207[4] = v208[4];
  v207[5] = v211;
  swift_bridgeObjectRelease();
  uint64_t v212 = v208[7];
  v207[6] = v208[6];
  v207[7] = v212;
  swift_bridgeObjectRelease();
  uint64_t v213 = v208[9];
  v207[8] = v208[8];
  v207[9] = v213;
  swift_bridgeObjectRelease();
  uint64_t v214 = v208[11];
  v207[10] = v208[10];
  v207[11] = v214;
  swift_bridgeObjectRelease();
  uint64_t v215 = v208[13];
  v207[12] = v208[12];
  v207[13] = v215;
  swift_bridgeObjectRelease();
  if (v245 != v244)
  {
    uint64_t v216 = v243[7];
    uint64_t v217 = (void *)(v245 + v216);
    uint64_t v218 = (const void *)(v244 + v216);
    sub_100B4F484(v245 + v216, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v219 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
    }
    else
    {
      uint64_t v220 = type metadata accessor for News();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v220 - 8) + 32))(v217, v218, v220);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v221 = v243[9];
  *(unsigned char *)(v245 + v243[8]) = *(unsigned char *)(v244 + v243[8]);
  *(unsigned char *)(v245 + v221) = *(unsigned char *)(v244 + v221);
  return v245;
}

uint64_t sub_100B5166C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B51680);
}

uint64_t sub_100B51680(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for WeatherData(0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      type metadata accessor for PreprocessedWeatherData();
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        type metadata accessor for NewsDataModel();
        sub_100162F30();
        if (*(_DWORD *)(v16 + 84) != a2)
        {
          unsigned int v18 = *(unsigned __int8 *)(a1 + a3[8]);
          if (v18 >= 2) {
            return v18 - 1;
          }
          else {
            return 0;
          }
        }
        uint64_t v8 = v15;
        uint64_t v12 = a3[7];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100B51778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B5178C);
}

void sub_100B5178C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for WeatherData(0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for PreprocessedWeatherData();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        type metadata accessor for NewsDataModel();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) != a3)
        {
          *(unsigned char *)(a1 + a4[8]) = a2 + 1;
          return;
        }
        uint64_t v10 = v17;
        uint64_t v14 = a4[7];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

id sub_100B51888()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather45DebugNotificationFetchSchedulesViewController____lazy_storage___dateFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Weather45DebugNotificationFetchSchedulesViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7Weather45DebugNotificationFetchSchedulesViewController____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    [v4 setDateStyle:1];
    [v4 setTimeStyle:1];
    int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100B51924(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Weather45DebugNotificationFetchSchedulesViewController____lazy_storage___dateFormatter] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Weather45DebugNotificationFetchSchedulesViewController_fetchSchedules] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DebugNotificationFetchSchedulesViewController();
  return [super initWithStyle:2];
}

void sub_100B51974()
{
  *(void *)&v0[OBJC_IVAR____TtC7Weather45DebugNotificationFetchSchedulesViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100B519F4()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DebugNotificationFetchSchedulesViewController();
  [super viewDidLoad];
  id v1 = [v0 tableView];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10056AF64();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v4 = String._bridgeToObjectiveC()();
    [v2 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v4];

    sub_10040BF9C(0x6353206863746546, 0xEF73656C75646568, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100B51B18()
{
  return *(void *)(*(void *)(v0
                               + OBJC_IVAR____TtC7Weather45DebugNotificationFetchSchedulesViewController_fetchSchedules)
                   + 16);
}

unint64_t sub_100B51B50(void *a1)
{
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v80 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v81 = (char *)&v77 - v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v77 - v8;
  uint64_t v10 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FetchScheduleEntity();
  sub_100179C0C();
  uint64_t v82 = v17;
  uint64_t v83 = v16;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v20 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v22 = [a1 dequeueReusableCellWithIdentifier:v20 forIndexPath:isa];

  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC7Weather45DebugNotificationFetchSchedulesViewController_fetchSchedules);
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (result >= *(void *)(v23 + 16))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v79 = v22;
  (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v19, v23+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * result, v83);
  static UIListContentConfiguration.subtitleCell()();
  uint64_t v84 = 91;
  unint64_t v85 = 0xE100000000000000;
  FetchScheduleEntity.valid.getter();
  dispatch thunk of Column.value.getter();
  unint64_t result = swift_release();
  if (v88 == 2)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v77 = v12;
  uint64_t v78 = v10;
  if (v88) {
    uint64_t v25 = 0x64696C6156;
  }
  else {
    uint64_t v25 = 0x64696C61766E49;
  }
  if (v88) {
    unint64_t v26 = 0xE500000000000000;
  }
  else {
    unint64_t v26 = 0xE700000000000000;
  }
  unint64_t v27 = v26;
  String.append(_:)(*(Swift::String *)&v25);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 8285;
  v28._object = (void *)0xE200000000000000;
  String.append(_:)(v28);
  FetchScheduleEntity.id.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  unint64_t v29 = sub_100633398(v88, v89);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = v29;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  UIListContentConfiguration.text.setter();
  uint64_t v33 = (void (*)(uint64_t))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.numberOfLines.setter();
  uint64_t v34 = sub_10017DC48();
  v33(v34);
  uint64_t v35 = (void (*)(uint64_t))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.lineBreakMode.setter();
  uint64_t v36 = sub_10017DC48();
  v35(v36);
  uint64_t v84 = 0;
  unint64_t v85 = 0xE000000000000000;
  _StringGuts.grow(_:)(58);
  v37._uint64_t countAndFlagsBits = 0x3A64657461657243;
  v37._object = (void *)0xE900000000000020;
  String.append(_:)(v37);
  id v38 = sub_100B51888();
  FetchScheduleEntity.created.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v39 = type metadata accessor for Date();
  unint64_t result = sub_100179F0C((uint64_t)v9);
  if (v40) {
    goto LABEL_17;
  }
  Class v41 = Date._bridgeToObjectiveC()().super.isa;
  int v42 = *(void (**)(void))(*(void *)(v39 - 8) + 8);
  sub_1001802C0();
  v42();
  id v43 = sub_10019F84C();

  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;

  v47._uint64_t countAndFlagsBits = v44;
  v47._object = v46;
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v48._uint64_t countAndFlagsBits = 0x696669646F4D0A20;
  v48._object = (void *)0xEC000000203A6465;
  String.append(_:)(v48);
  id v49 = sub_100B51888();
  FetchScheduleEntity.modified.getter();
  uint64_t v50 = (uint64_t)v81;
  dispatch thunk of Column.value.getter();
  swift_release();
  unint64_t result = sub_100179F0C(v50);
  if (v40)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  Class v51 = Date._bridgeToObjectiveC()().super.isa;
  sub_1001802C0();
  v42();
  id v52 = sub_10019F84C();

  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v55 = v54;

  v56._uint64_t countAndFlagsBits = v53;
  v56._object = v55;
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  v57._uint64_t countAndFlagsBits = 0x7564656863530A20;
  v57._object = (void *)0xED0000203A64656CLL;
  String.append(_:)(v57);
  id v58 = sub_100B51888();
  FetchScheduleEntity.date.getter();
  uint64_t v59 = (uint64_t)v80;
  dispatch thunk of Column.value.getter();
  swift_release();
  unint64_t result = sub_100179F0C(v59);
  if (!v40)
  {
    Class v60 = Date._bridgeToObjectiveC()().super.isa;
    sub_1001802C0();
    v42();
    id v61 = sub_10019F84C();

    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v64 = v63;

    v65._uint64_t countAndFlagsBits = v62;
    v65._object = v64;
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    v66._object = (void *)0x8000000100C9E3C0;
    v66._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v66);
    FetchScheduleEntity.subscription.getter();
    dispatch thunk of Column.value.getter();
    swift_release();
    unint64_t v67 = sub_100633398(v88, v89);
    uint64_t v69 = v68;
    swift_bridgeObjectRelease();
    v70._uint64_t countAndFlagsBits = v67;
    v70._object = v69;
    String.append(_:)(v70);
    swift_bridgeObjectRelease();
    UIListContentConfiguration.secondaryText.setter();
    int v71 = (void (*)(uint64_t))UIListContentConfiguration.secondaryTextProperties.modify();
    UIListContentConfiguration.TextProperties.numberOfLines.setter();
    uint64_t v72 = sub_10017DC48();
    v71(v72);
    uint64_t v73 = v78;
    uint64_t v86 = v78;
    uint64_t v87 = &protocol witness table for UIListContentConfiguration;
    int v74 = sub_100170694(&v84);
    uint64_t v75 = v77;
    (*(void (**)(uint64_t *, char *, uint64_t))(v77 + 16))(v74, v15, v73);
    uint64_t v76 = v79;
    UITableViewCell.contentConfiguration.setter();
    [v76 setSelectionStyle:0];
    (*(void (**)(char *, uint64_t))(v75 + 8))(v15, v73);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v19, v83);
    return (unint64_t)v76;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_100B52354()
{
}

void sub_100B52394()
{
}

id sub_100B523EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugNotificationFetchSchedulesViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for DebugNotificationFetchSchedulesViewController()
{
  return self;
}

unint64_t sub_100B52490(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v27 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_100195B7C(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = *(void *)(a2 + v11 + 8);
    *(void *)uint64_t v12 = *(void *)(a2 + v11);
    *(void *)(v12 + 8) = v14;
    uint64_t v15 = *(void *)(a2 + v11 + 24);
    *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
    *(void *)(v12 + 24) = v15;
    uint64_t v16 = *(void *)(a2 + v11 + 40);
    *(void *)(v12 + 32) = *(void *)(a2 + v11 + 32);
    *(void *)(v12 + 40) = v16;
    uint64_t v17 = *(void *)(a2 + v11 + 56);
    *(void *)(v12 + 48) = *(void *)(a2 + v11 + 48);
    *(void *)(v12 + 56) = v17;
    uint64_t v18 = *(void *)(a2 + v11 + 72);
    *(void *)(v12 + 64) = *(void *)(a2 + v11 + 64);
    *(void *)(v12 + 72) = v18;
    uint64_t v19 = *(void *)(a2 + v11 + 88);
    *(void *)(v12 + 80) = *(void *)(a2 + v11 + 80);
    *(void *)(v12 + 88) = v19;
    uint64_t v20 = *(void *)(a2 + v11 + 104);
    *(void *)(v12 + 96) = *(void *)(a2 + v11 + 96);
    *(void *)(v12 + 104) = v20;
    uint64_t v21 = *(void *)(a2 + v11 + 120);
    *(void *)(v12 + 112) = *(void *)(a2 + v11 + 112);
    *(void *)(v12 + 120) = v21;
    uint64_t v22 = *(void *)(a2 + v11 + 136);
    *(void *)(v12 + 128) = *(void *)(a2 + v11 + 128);
    *(void *)(v12 + 136) = v22;
    uint64_t v23 = *(void *)(a2 + v11 + 152);
    *(void *)(v12 + 144) = *(void *)(a2 + v11 + 144);
    *(void *)(v12 + 152) = v23;
    uint64_t v24 = *(void *)(a2 + v11 + 168);
    *(void *)(v12 + 160) = *(void *)(a2 + v11 + 160);
    *(void *)(v12 + 168) = v24;
    *(_OWORD *)(v12 + 176) = *(_OWORD *)(a2 + v11 + 176);
    *(void *)(v12 + 192) = *(void *)(a2 + v11 + 192);
    uint64_t v32 = type metadata accessor for WindComponentViewModel();
    uint64_t v25 = *(int *)(v32 + 68);
    uint64_t v30 = v13 + v25;
    uint64_t v31 = v12 + v25;
    uint64_t v26 = type metadata accessor for WindComponentCompassViewModel();
    unint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v31, v30, v26);
    *(void *)(v12 + *(int *)(v32 + 72)) = *(void *)(v13 + *(int *)(v32 + 72));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100B526C4(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
  uint64_t v6 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}