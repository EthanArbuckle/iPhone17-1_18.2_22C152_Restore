_OWORD *sub_1006E7AD8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    *a1 = *a2;
    v6 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for PreviewLocation();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)v7 = *(void *)v8;
      *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
      *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
      v12 = type metadata accessor for SearchLocation();
      v13 = *(int *)(v12 + 32);
      v14 = &v7[v13];
      v15 = &v8[v13];
      v16 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        v17 = sub_10017DF08(&qword_100E639E8);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      v19 = *(int *)(v12 + 36);
      v20 = &v7[v19];
      v21 = &v8[v19];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      v20[16] = v21[16];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v18 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v7, v8, v18);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v11 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1006E7D70(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006E5438((uint64_t)a1, (void (*)(void))type metadata accessor for ToolbarSearchViewModel.State);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E8DA90) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for PreviewLocation();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)v7 = *(void *)v8;
        *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
        *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
        *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
        uint64_t v12 = type metadata accessor for SearchLocation();
        uint64_t v13 = *(int *)(v12 + 32);
        v14 = &v7[v13];
        v15 = &v8[v13];
        uint64_t v16 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = sub_10017DF08(&qword_100E639E8);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
        }
        uint64_t v19 = *(int *)(v12 + 36);
        v20 = &v7[v19];
        v21 = &v8[v19];
        *(_OWORD *)v20 = *(_OWORD *)v21;
        v20[16] = v21[16];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v7, v8, v18);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_15:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v11 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_15;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006E802C()
{
  v3 = &unk_100C51F20;
  v4 = &unk_100C51F38;
  v5 = &unk_100C51F50;
  uint64_t result = type metadata accessor for PreviewLocation();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v2;
    v7 = &unk_100C51F38;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_1006E80F0()
{
  sub_10020D948(v0, (uint64_t)v9);
  uint64_t v1 = sub_1000DF0C4((uint64_t)v9, v10);
  __n128 v2 = __chkstk_darwin(v1);
  v4 = (uint64_t **)&v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(uint64_t **, __n128))(v5 + 16))(v4, v2);
  id v6 = sub_1006E8964(*v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v9);
  return v6;
}

id sub_1006E81D0()
{
  id v0 = [self systemFontOfSize:60.0];
  uint64_t v1 = self;
  id v2 = [v1 configurationWithFont:v0 scale:-1];

  id v3 = [self systemBlueColor];
  id v4 = [v1 configurationWithHierarchicalColor:v3];

  sub_10013CAA4();
  id v44 = v2;
  id v5 = sub_1003C55B4(0x616C732E6C6C6562, 0xEF6C6C69662E6873, v2);
  v42 = v4;
  v43 = v5;
  if (v5) {
    id v6 = [v5 imageByApplyingSymbolConfiguration:v4];
  }
  else {
    id v6 = 0;
  }
  v7 = self;
  id v8 = [v7 mainBundle];
  sub_10017C720();
  uint64_t v11 = sub_100188050(v9, v10, (uint64_t)"Local weather notifications are off.");
  uint64_t v13 = v12;

  id v14 = [v7 mainBundle];
  sub_10017C720();
  uint64_t v17 = sub_100188050(v15, v16, (uint64_t)"Weather needs permission to always use your location to send you notifications about local weather. You can enable this in Settings.");
  uint64_t v19 = v18;

  id v20 = objc_allocWithZone((Class)OBWelcomeController);
  id v41 = v6;
  id v21 = sub_1003C59A8(v11, v13, v17, v19, v6);
  id v22 = [self boldButton];
  id v23 = [v7 mainBundle];
  sub_10017C720();
  sub_10019EE1C();
  unint64_t v24 = 0xD00000000000001FLL;
  Swift::String v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, v27, v28, *(Swift::String *)(&v40 - 1));

  sub_1003C5A48(v29._countAndFlagsBits, (uint64_t)v29._object, 0, v22);
  sub_10017DF08(&qword_100E8DC18);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v22 addTarget:v45 action:"goToSettingsButtonTapped" forControlEvents:64];

  id v30 = [v21 buttonTray];
  [v30 addButton:v22];

  id v31 = [self linkButton];
  id v32 = [v7 mainBundle];
  sub_10017C720();
  sub_10019EE1C();
  Swift::String v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, v35, v36, v46);

  sub_1003C5A48(v37._countAndFlagsBits, (uint64_t)v37._object, 0, v31);
  UIViewControllerRepresentableContext.coordinator.getter();
  [v31 addTarget:v45 action:"notNowButtonTapped" forControlEvents:64];

  id v38 = [v21 buttonTray];
  [v38 addButton:v31];

  [v21 setModalPresentationStyle:2];
  return v21;
}

id sub_1006E8644()
{
  return sub_1006E81D0();
}

id sub_1006E865C@<X0>(void *a1@<X8>)
{
  id result = sub_1006E80F0();
  *a1 = result;
  return result;
}

uint64_t sub_1006E8684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1006E8918();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1006E86E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1006E8918();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1006E874C()
{
}

uint64_t sub_1006E87D4(uint64_t (*a1)(void))
{
  sub_1001B1E64((void *)(v1 + OBJC_IVAR____TtCV7Weather33NotificationLoweredPermissionView11Coordinator_interactor), *(void *)(v1 + OBJC_IVAR____TtCV7Weather33NotificationLoweredPermissionView11Coordinator_interactor + 24));
  return a1();
}

uint64_t type metadata accessor for NotificationLoweredPermissionView.Coordinator()
{
  return self;
}

ValueMetadata *type metadata accessor for NotificationLoweredPermissionView()
{
  return &type metadata for NotificationLoweredPermissionView;
}

unint64_t sub_1006E88CC()
{
  unint64_t result = qword_100E8DC08;
  if (!qword_100E8DC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DC08);
  }
  return result;
}

unint64_t sub_1006E8918()
{
  unint64_t result = qword_100E8DC10;
  if (!qword_100E8DC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DC10);
  }
  return result;
}

id sub_1006E8964(uint64_t *a1)
{
  uint64_t v1 = *a1;
  v14[3] = v1;
  v14[4] = &off_100E1CED0;
  v14[0] = a1;
  id v2 = (objc_class *)type metadata accessor for NotificationLoweredPermissionView.Coordinator();
  id v3 = objc_allocWithZone(v2);
  uint64_t v4 = sub_1000DF0C4((uint64_t)v14, v1);
  __n128 v5 = __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v12 - v6);
  (*(void (**)(char *, __n128))(v8 + 16))((char *)&v12 - v6, v5);
  uint64_t v9 = *v7;
  v13[3] = v1;
  v13[4] = &off_100E1CED0;
  v13[0] = v9;
  sub_10020D948((uint64_t)v13, (uint64_t)v3 + OBJC_IVAR____TtCV7Weather33NotificationLoweredPermissionView11Coordinator_interactor);
  v12.receiver = v3;
  v12.super_class = v2;
  id v10 = [super init];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
  return v10;
}

uint64_t sub_1006E8ABC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006E8AFC()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1006E8B34()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006E8B6C()
{
  uint64_t v1 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

uint64_t sub_1006E8C14()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1006E8C54()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

double sub_1006E8CB8@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006E8CD8(a1, a2);
}

uint64_t sub_1006E8CC0()
{
  return sub_1006E8E04();
}

double sub_1006E8CC8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006E8F7C(a1, a2);
}

double sub_1006E8CD0@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006E8CD8(a1, a2);
}

double sub_1006E8CD8@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = a1[1];
  long long v13 = *a1;
  long long v14 = v4;
  sub_1006FE770((uint64_t)&v13, (uint64_t)v16);
  uint64_t v15 = *((void *)&v14 + 1);
  long long v11 = a1[2];
  char v12 = *((unsigned char *)a1 + 48);
  sub_1006FE7CC((uint64_t)v16);
  sub_1004D360C((uint64_t)&v15);
  sub_1000618F8((uint64_t)&v11);
  sub_10017DF08(&qword_100E6DE28);
  sub_10022F2CC();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v6;
  *(_OWORD *)a2 = v6;
  *(_OWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 48) = v9;
  *(unsigned char *)(a2 + 49) = v10;
  return result;
}

uint64_t sub_1006E8DFC()
{
  return sub_1006E8E04();
}

uint64_t sub_1006E8E04()
{
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E65210);
  sub_1002828E4();
  _ConditionalContent<>.init(storage:)();
  return v1;
}

double sub_1006E8E90@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v8 = *a1;
  sub_1000618F8((uint64_t)&v8);
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E8CB58);
  sub_10024D5E4((uint64_t)&qword_100E8CB50);
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v4;
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = v7;
  return result;
}

double sub_1006E8F74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006E8F7C(a1, a2);
}

double sub_1006E8F7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 48) & 1;
  sub_100190CC4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16) & 1);
  swift_bridgeObjectRetain();
  sub_100190CC4(v3, v4, v5);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E8F118);
  sub_10024D5E4((uint64_t)&unk_100E8F120);
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v7;
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  *(_OWORD *)(a2 + 48) = v10;
  *(unsigned char *)(a2 + 64) = v11;
  return result;
}

void sub_1006E9080()
{
  sub_10010977C();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  char v5 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFFFELL);
  if (v1 == 1)
  {
    uint64_t TupleTypeMetadata = *v5;
  }
  else
  {
    __chkstk_darwin(v0);
    sub_1001626E0();
    long long v9 = (void *)(v8 - v7);
    if (v2)
    {
      long long v10 = v5;
      char v11 = v9;
      uint64_t v12 = v2;
      do
      {
        uint64_t v13 = *v10++;
        *v11++ = v13;
        --v12;
      }
      while (v12);
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  sub_100162880();
  __chkstk_darwin(v14);
  sub_10016279C();
  if (v2)
  {
    uint64_t v15 = TupleTypeMetadata + 32;
    uint64_t v16 = v2;
    do
    {
      ++v5;
      v3 += 8;
      sub_100162880();
      (*(void (**)(void))(v17 + 16))();
      v15 += 16;
      --v16;
    }
    while (v16);
  }
  sub_100127C2C();
  TupleView.init(_:)();
  sub_100162714();
}

uint64_t sub_1006E91C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v19[0] = a6;
  v19[1] = a7;
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for _LayoutRoot();
  __n128 v17 = __chkstk_darwin(v16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, v7, a3, v17);
  _LayoutRoot.init(_:)();
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = a5;
  v19[7] = v19[0];
  v19[8] = a1;
  v19[9] = a2;
  swift_getWitnessTable();
  return _VariadicView.Tree.init(_:content:)();
}

uint64_t sub_1006E9370@<X0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1000E390C(a1, a2, a3, &qword_100E8DCB8, (uint64_t)sub_100224A10, a4);
}

uint64_t sub_1006E9390@<X0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_1000E390C(a1, a2, a3, &qword_100E870A8, (uint64_t)sub_100874A4C, a4);
}

uint64_t sub_1006E93B0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1006E93DC(a1, a2, a3);
}

uint64_t sub_1006E93DC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    unsigned __int16 v3 = a1;
    swift_retain();
    Transaction.animation.setter();
    Transaction.animationFrameInterval.setter();
    uint64_t v4 = sub_100231A98(v3);
    if (v4)
    {
      Transaction.animationFrameInterval.setter();
      uint64_t v4 = Transaction.animationReason.setter();
    }
    __chkstk_darwin(v4);
    swift_retain();
    withTransaction<A>(_:_:)();
    swift_release();
    return swift_release();
  }
  else
  {
    __chkstk_darwin(a1);
    return withTransaction<A>(_:_:)();
  }
}

void sub_1006E952C(double *a1@<X8>)
{
  *a1 = sub_100348788();
}

uint64_t sub_1006E9558()
{
  return sub_1003487C4();
}

uint64_t sub_1006E9580(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  swift_bridgeObjectRetain();
  sub_1000E3D20();
  uint64_t v8 = *(void *)(*v3 + 16);
  sub_1000E3D08(v8);
  uint64_t v9 = *v3;
  *(void *)(v9 + 16) = v8 + 1;
  uint64_t v10 = v9 + 16 * v8;
  *(void *)(v10 + 32) = sub_1006FE758;
  *(void *)(v10 + 40) = v7;
  uint64_t *v3 = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  v13[0] = v6;
  uint64_t v14 = &type metadata for LocationViewPresentationKind;
  uint64_t v15 = sub_1006FE768;
  uint64_t v16 = v11;
  return sub_1000E3D38((uint64_t)v13, (uint64_t)&type metadata for LocationViewPresentationKind);
}

uint64_t sub_1006E9694(char a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1 & 1;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  swift_bridgeObjectRetain();
  sub_1000E3D20();
  uint64_t v8 = *(void *)(*v3 + 16);
  sub_1000E3D08(v8);
  uint64_t v9 = *v3;
  *(void *)(v9 + 16) = v8 + 1;
  uint64_t v10 = v9 + 16 * v8;
  *(void *)(v10 + 32) = sub_1006FC4A0;
  *(void *)(v10 + 40) = v7;
  uint64_t *v3 = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = v6;
  v13[0] = v6;
  uint64_t v14 = &type metadata for InteractiveMapPresentationContext;
  uint64_t v15 = sub_1006FC4B0;
  uint64_t v16 = v11;
  return sub_1000E3D38((uint64_t)v13, (uint64_t)&type metadata for InteractiveMapPresentationContext);
}

uint64_t sub_1006E97A8()
{
  uint64_t v0 = sub_1001AEB70();
  return sub_100182AB8(v0);
}

uint64_t sub_1006E97D4()
{
  return sub_1003D93C0();
}

uint64_t sub_1006E97FC(unsigned char *a1)
{
  sub_10017B374();
  uint64_t result = v2();
  if (*a1 != v4) {
    *a1 = v4;
  }
  return result;
}

uint64_t sub_1006E9844(uint64_t a1, void (*a2)(__n128))
{
  uint64_t v3 = sub_100127C8C();
  uint64_t v4 = type metadata accessor for LocationViewGeometry(v3);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10016278C();
  uint64_t v8 = (const void *)(v6 - v7);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - v11;
  a2(v10);
  sub_10015176C();
  char v13 = sub_1000E57D4(v8, v12);
  sub_100151660();
  if (v13) {
    return sub_100151660();
  }
  sub_100151660();
  sub_100179C64();
  return sub_1001516CC();
}

uint64_t sub_1006E9988(uint64_t *a1)
{
  sub_10017B374();
  uint64_t result = v2();
  uint64_t v4 = v14;
  if (!a1[3])
  {
    if (!v15) {
      return result;
    }
LABEL_11:
    *a1 = v12;
    a1[1] = v13;
    a1[2] = v4;
    a1[3] = v15;
    return result;
  }
  if (!v15)
  {
    sub_100191924(*a1, a1[1], a1[2] & 1);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100147E1C(*a1, a1[1], a1[2], a1[3]);
  uint64_t v5 = sub_100127C2C();
  sub_100190CC4(v5, v6, v14 & 1);
  swift_bridgeObjectRetain();
  char v7 = static Text.== infix(_:_:)();
  uint64_t v8 = sub_100127C2C();
  sub_100191924(v8, v9, v14 & 1);
  swift_bridgeObjectRelease();
  sub_1001EC424();
  if ((v7 & 1) == 0)
  {
    uint64_t result = sub_1001EC424();
    uint64_t v4 = v14;
    goto LABEL_11;
  }
  uint64_t v10 = sub_100127C2C();

  return sub_100147E60(v10, v11, v14, v15);
}

uint64_t sub_1006E9AE8()
{
  uint64_t v0 = EnvironmentValues.accessibilityVoiceOverEnabled.getter();
  return sub_100182AB8(v0);
}

uint64_t sub_1006E9B14@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.displayScale.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1006E9B40()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_1006E9B68(unsigned __int8 *a1)
{
  return sub_1001AE8CC(*a1);
}

uint64_t sub_1006E9B90(void *a1)
{
  return dispatch thunk of ContextType.use<A>(_:for:name:)();
}

uint64_t sub_1006E9C04(void *a1)
{
  return dispatch thunk of ContextType.use<A>(_:for:name:)();
}

uint64_t sub_1006E9C78(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (a2) {
    a2(a1);
  }
  return sub_1006E9694(a4 & 1, a5, a6);
}

BOOL sub_1006E9CDC(uint64_t a1, unsigned __int8 a2)
{
  sub_1001643C8(a1, (uint64_t)v5);
  return swift_dynamicCast() && v4 != 2 && ((v4 ^ a2) & 1) == 0;
}

uint64_t sub_1006E9D58(uint64_t a1)
{
  uint64_t v58 = a1;
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v52 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  v51 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for Location.Identifier();
  uint64_t v4 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationViewerViewModel();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v11 - 8);
  v54 = (char *)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LocationModel();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v49 = (char *)v47 - v18;
  uint64_t v50 = v1;
  sub_1001520F8();
  uint64_t v19 = *(void *)&v10[*(int *)(v8 + 28)];
  swift_bridgeObjectRetain();
  sub_100151660();
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v53 = v2;
  uint64_t v55 = v14;
  if (v20)
  {
    uint64_t v22 = *(void *)(v14 + 16);
    uint64_t v21 = v14 + 16;
    *(void *)&long long v56 = v22;
    uint64_t v23 = v19 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
    v47[1] = v19;
    uint64_t v48 = v4;
    unint64_t v24 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v25 = *(void *)(v21 + 56);
    swift_bridgeObjectRetain();
    uint64_t v26 = v13;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v56)(v16, v23, v26);
      uint64_t v27 = v26;
      LocationModel.identifier.getter();
      char v28 = static Location.Identifier.== infix(_:_:)();
      (*v24)(v6, v57);
      if (v28) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v21 - 8))(v16, v27);
      v23 += v25;
      --v20;
      uint64_t v26 = v27;
      if (!v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = 1;
        uint64_t v4 = v48;
        uint64_t v14 = v55;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v54;
    uint64_t v14 = v55;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v16, v27);
    uint64_t v29 = 0;
    uint64_t v4 = v48;
    uint64_t v26 = v27;
  }
  else
  {
    uint64_t v29 = 1;
    uint64_t v26 = v13;
LABEL_7:
    uint64_t v30 = (uint64_t)v54;
  }
  _s7Weather24LocationCompositionStateOwst_0(v30, v29, 1, v26);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v26) == 1)
  {
    sub_10017DF4C(v30, &qword_100EAC4A0);
  }
  else
  {
    uint64_t v31 = (uint64_t)v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v49, v30, v26);
    uint64_t v32 = v50;
    id v33 = *(id *)(v50 + 64);
    Swift::String_optional v34 = v51;
    OSSignpostID.init(log:)();
    LODWORD(v48) = static os_signpost_type_t.event.getter();
    sub_10017DF08(&qword_100E64020);
    uint64_t v35 = swift_allocObject();
    long long v56 = xmmword_100C251B0;
    *(_OWORD *)(v35 + 16) = xmmword_100C251B0;
    v54 = (char *)v26;
    uint64_t v36 = LocationModel.name.getter();
    uint64_t v38 = v37;
    *(void *)(v35 + 56) = &type metadata for String;
    unint64_t v39 = sub_10012B7C0();
    *(void *)(v35 + 64) = v39;
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v38;
    os_signpost(_:dso:log:name:signpostID:_:_:)();
    swift_bridgeObjectRelease();
    static os_signpost_type_t.begin.getter();
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v56;
    uint64_t v41 = LocationModel.name.getter();
    *(void *)(v40 + 56) = &type metadata for String;
    *(void *)(v40 + 64) = v39;
    *(void *)(v40 + 32) = v41;
    *(void *)(v40 + 40) = v42;
    os_signpost(_:dso:log:name:signpostID:_:_:)();
    swift_bridgeObjectRelease();
    sub_1001B1E64((void *)(v32 + 24), *(void *)(v32 + 48));
    sub_1006DBA50(v31);
    static os_signpost_type_t.end.getter();
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = v56;
    uint64_t v44 = LocationModel.name.getter();
    *(void *)(v43 + 56) = &type metadata for String;
    *(void *)(v43 + 64) = v39;
    *(void *)(v43 + 32) = v44;
    *(void *)(v43 + 40) = v45;
    os_signpost(_:dso:log:name:signpostID:_:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v53);
    (*(void (**)(uint64_t, char *))(v55 + 8))(v31, v54);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v58, v57);
}

uint64_t sub_1006EA3E8()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  uint64_t v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_971182080BE1A8931C9C36EF48C83CFF28LocationViewerBindingWrapper___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1006EA464()
{
  sub_1006EA3E8();

  return swift_deallocClassInstance();
}

uint64_t sub_1006EA4B8()
{
  return type metadata accessor for LocationViewerBindingWrapper(0);
}

uint64_t sub_1006EA4C0()
{
  uint64_t v0 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  sub_100097814(v0, qword_100E8DE78);
  sub_1002102B0(v0, (uint64_t)qword_100E8DE78);
  sub_100127C8C();
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  SettingReader.read<A>(_:)();
  swift_release();

  return swift_release();
}

uint64_t sub_1006EA564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v40 = a1;
  uint64_t v45 = a2;
  uint64_t v4 = type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v41 = *(void *)(v42 + 64);
  __chkstk_darwin(v4);
  unint64_t v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v44);
  uint64_t v38 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08(&qword_100E8E318);
  __chkstk_darwin(v43);
  uint64_t v8 = (uint64_t *)((char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for LocationViewerViewModel();
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001520F8();
  uint64_t v13 = &v12[*(int *)(v10 + 64)];
  uint64_t v15 = *((void *)v13 + 4);
  uint64_t v14 = *((void *)v13 + 5);
  swift_bridgeObjectRetain();
  sub_100151660();
  sub_1001520F8();
  uint64_t v16 = &v12[*(int *)(v10 + 64)];
  uint64_t v18 = *(void *)v16;
  uint64_t v17 = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  sub_100151660();
  uint64_t v46 = v18;
  uint64_t v47 = v17;
  sub_10014A85C();
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v33 = v19;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v37 = v22;
  LODWORD(v18) = v24 & 1;
  uint64_t v34 = sub_1006EB370();
  uint64_t v35 = v25;
  uint64_t v27 = v26;
  uint64_t v36 = v28;
  double v29 = sub_1006EB46C(v3, v15, v14, 0, (uint64_t)_swiftEmptyArrayStorage, v19, v21, v18, v23, v34, v26, v25, v28);
  uint64_t *v8 = static Alignment.topTrailing.getter();
  v8[1] = v30;
  uint64_t v31 = sub_10017DF08(&qword_100E8E570);
  sub_1006EB7C0(v3, v40, (uint64_t)v8 + *(int *)(v31 + 44), v29);
  sub_1001EFFBC();
  sub_10015176C();
  swift_allocObject();
  sub_1001516CC();
  sub_10024D5E4((uint64_t)&unk_100E8E320);
  sub_10015180C((uint64_t)&unk_100E65FF0);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100147E60(v34, v27, v35, v36);
  sub_100191924(v33, v21, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100151660();
  return sub_10017DF4C((uint64_t)v8, &qword_100E8E318);
}

uint64_t sub_1006EA9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v72 = a3;
  uint64_t v69 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v69);
  v68 = (double *)((char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = type metadata accessor for LocationModel();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  v60 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v9 - 8);
  v59 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for Location.Identifier();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v58 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v73 = sub_10017DF08(&qword_100E8E330);
  uint64_t v12 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E8E2A8);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E8E298);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10017DF08(&qword_100E8E548);
  __chkstk_darwin(v74);
  char v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10017DF08(&qword_100E8E550);
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  v65 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10017DF08(&qword_100E8E558);
  __chkstk_darwin(v63);
  v64 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E31A0(a2, (uint64_t)v14);
  uint64_t v27 = (int *)type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v28 = a1 + v27[24];
  long long v29 = *(_OWORD *)(v28 + 16);
  v78[0] = *(_OWORD *)v28;
  v78[1] = v29;
  v78[2] = *(_OWORD *)(v28 + 32);
  char v79 = *(unsigned char *)(v28 + 48);
  sub_10024D364((uint64_t)v78, (uint64_t)v80, &qword_100E63DB0);
  sub_1000FDCE8((uint64_t)v80);
  sub_1000FDD60();
  sub_1000FDCE8((uint64_t)v78);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v30 = v73;
  (*(void (**)(char *, char *, void))(v12 + 16))(v18, v14, v73);
  uint64_t v31 = *(int *)(v16 + 44);
  uint64_t v32 = (uint64_t)v24;
  uint64_t v33 = &v18[v31];
  long long v34 = v76;
  *(_OWORD *)uint64_t v33 = v75;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v77;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v30);
  uint64_t v35 = *(void *)(a1 + v27[16]);
  uint64_t v36 = a1 + v27[20];
  uint64_t v37 = *(int *)(v20 + 44);
  uint64_t v38 = v58;
  unint64_t v39 = &v22[v37];
  long long v73 = *(_OWORD *)(a1 + v27[19]);
  sub_1001E9994(v36, (uint64_t)&v22[v37 + 24]);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v40 = Namespace.wrappedValue.getter();
  *(void *)unint64_t v39 = v35;
  *(_OWORD *)(v39 + 8) = v73;
  *((void *)v39 + 8) = v40;
  type metadata accessor for WeatherVFXConditionBackground();
  sub_10015180C((uint64_t)&qword_100E70F28);
  *((void *)v39 + 9) = EnvironmentObject.init()();
  *((void *)v39 + 10) = v41;
  sub_10024D364((uint64_t)v18, (uint64_t)v22, &qword_100E8E2A8);
  sub_10006DF38((uint64_t)v22, (uint64_t)v24, &qword_100E8E298);
  *(void *)&v24[*(int *)(v74 + 36)] = 0x40B3880000000000;
  sub_10017DF4C((uint64_t)v22, &qword_100E8E298);
  uint64_t v42 = v59;
  sub_1001520F8();
  uint64_t v43 = v61;
  uint64_t v44 = v60;
  uint64_t v45 = v62;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v42, v62);
  sub_100151660();
  LocationModel.identifier.getter();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  if (qword_100E62270 != -1) {
    swift_once();
  }
  uint64_t v46 = type metadata accessor for RoundedCornerStyle();
  uint64_t v47 = sub_1002102B0(v46, (uint64_t)qword_100F51370);
  uint64_t v48 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))((char *)v68 + *(int *)(v69 + 20), v47, v46);
  *uint64_t v48 = a4;
  v48[1] = a4;
  static MatchedGeometryProperties.position.getter();
  static MatchedGeometryProperties.clipRect.getter();
  static UnitPoint.top.getter();
  sub_1006F4398();
  sub_10015180C((uint64_t)&qword_100E63A28);
  sub_10015180C((uint64_t)&unk_100E8E568);
  v49 = v65;
  uint64_t v50 = v71;
  View.matchedGeometryEffect<A, B>(id:in:clipShape:properties:anchor:isSource:)();
  sub_100151660();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v38, v50);
  sub_10017DF4C(v32, &qword_100E8E548);
  uint64_t v51 = static SafeAreaRegions.all.getter();
  LOBYTE(v46) = static Edge.Set.all.getter();
  uint64_t v52 = v66;
  uint64_t v53 = (uint64_t)v64;
  uint64_t v54 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v64, v49, v67);
  uint64_t v55 = v53 + *(int *)(v63 + 36);
  *(void *)uint64_t v55 = v51;
  *(unsigned char *)(v55 + 8) = v46;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v49, v54);
  return sub_10024D364(v53, v72, &qword_100E8E558);
}

uint64_t sub_1006EB370()
{
  uint64_t v0 = type metadata accessor for LocationViewerViewModel();
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  uint64_t v4 = &v3[*(int *)(v1 + 64)];
  uint64_t v6 = *((void *)v4 + 2);
  uint64_t v5 = *((void *)v4 + 3);
  swift_bridgeObjectRetain();
  sub_100151660();
  if (!v5) {
    return 0;
  }
  v8[0] = v6;
  v8[1] = v5;
  sub_10014A85C();
  return Text.init<A>(_:)();
}

double sub_1006EB46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  int v47 = a8;
  uint64_t v48 = a6;
  uint64_t v49 = a7;
  uint64_t v46 = a9;
  uint64_t v14 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1 + *(int *)(type metadata accessor for MeasuredLocationViewerView(0) + 56);
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  sub_100149AE8();
  char v21 = v20;
  sub_10018F6D8(v18, v19);
  sub_1000CF838(v21 & 1);
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  uint64_t v27 = type metadata accessor for Text.WritingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v27);
  Text.Measurements.size(of:in:writingMode:)();
  double v29 = v28;
  sub_100191924(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  sub_10017DF4C((uint64_t)v16, &qword_100E63DB8);
  static Font.largeTitle.getter();
  uint64_t v30 = Text.font(_:)();
  uint64_t v32 = v31;
  LOBYTE(v18) = v33;
  swift_release();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v27);
  Text.Measurements.size(of:in:writingMode:)();
  double v35 = v34;
  sub_100191924(v30, v32, v18 & 1);
  swift_bridgeObjectRelease();
  sub_10017DF4C((uint64_t)v16, &qword_100E63DB8);
  double v36 = v29 + v35;
  if (a13)
  {
    uint64_t v48 = a10;
    uint64_t v49 = a11;
    sub_100190CC4(a10, a11, a12 & 1);
    swift_bridgeObjectRetain();
    static Font.headline.getter();
    Font.smallCaps()();
    swift_release();
    char v50 = a12 & 1;
    uint64_t v37 = Text.font(_:)();
    uint64_t v39 = v38;
    uint64_t v40 = v27;
    char v42 = v41;
    swift_release();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v40);
    Text.Measurements.size(of:in:writingMode:)();
    double v44 = v43;
    sub_100191924(v37, v39, v42 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(v48, v49, a12 & 1);
    swift_bridgeObjectRelease();
    sub_10017DF4C((uint64_t)v16, &qword_100E63DB8);
    double v36 = v36 + v44;
  }
  return ceil(v36);
}

uint64_t sub_1006EB7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v6 = sub_10017DF08(&qword_100E8E578);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (uint64_t *)((char *)&v40 - v10);
  uint64_t v12 = sub_10017DF08(&qword_100E8E580);
  uint64_t v13 = (int *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - v17;
  uint64_t v19 = static Color.clear.getter();
  char v20 = (int *)type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v21 = *(void *)(a1 + v20[16]);
  uint64_t v22 = v20[19];
  uint64_t v23 = a1 + v20[20];
  long long v42 = *(_OWORD *)(a1 + v22);
  sub_1001E9994(v23, (uint64_t)&__src[3]);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v24 = Namespace.wrappedValue.getter();
  __src[0] = v21;
  *(_OWORD *)&__src[1] = v42;
  __src[8] = v24;
  type metadata accessor for WeatherVFXConditionBackground();
  sub_10015180C((uint64_t)&qword_100E70F28);
  __src[9] = EnvironmentObject.init()();
  __src[10] = v25;
  sub_1006F44E8((uint64_t)__src, (uint64_t)&__dst[1]);
  __dst[0] = v19;
  sub_1006F4520((uint64_t)__src);
  uint64_t v26 = static SafeAreaRegions.all.getter();
  char v27 = static Edge.Set.all.getter();
  sub_10006DF38((uint64_t)__dst, (uint64_t)__src, &qword_100E8E588);
  __src[12] = v26;
  LOBYTE(__src[13]) = v27;
  sub_10017DF4C((uint64_t)__dst, &qword_100E8E588);
  memcpy(__dst, __src, 0x69uLL);
  double v28 = (uint64_t *)&v18[v13[18]];
  *double v28 = swift_getKeyPath();
  sub_10017DF08(&qword_100E82B30);
  swift_storeEnumTagMultiPayload();
  double v29 = (uint64_t *)&v18[v13[19]];
  *double v29 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = &v18[v13[20]];
  *(void *)uint64_t v30 = swift_getKeyPath();
  *(_OWORD *)(v30 + 8) = 0u;
  *(_OWORD *)(v30 + 24) = 0u;
  *(_OWORD *)(v30 + 40) = 0u;
  *(_OWORD *)(v30 + 56) = 0u;
  v30[72] = 0;
  uint64_t v31 = &v18[v13[21]];
  *(void *)uint64_t v31 = swift_getKeyPath();
  *((void *)v31 + 1) = 0;
  *((void *)v31 + 2) = 0;
  *((void *)v31 + 3) = 0;
  v31[32] = 0;
  *(double *)uint64_t v18 = a4;
  *((void *)v18 + 1) = 0x4046000000000000;
  uint64_t v32 = &v18[v13[16]];
  *(void *)uint64_t v32 = static VerticalAlignment.center.getter();
  *((void *)v32 + 1) = 0;
  v32[16] = 0;
  uint64_t v33 = (uint64_t)&v32[*(int *)(sub_10017DF08(&qword_100E8E590) + 44)];
  *uint64_t v11 = static Alignment.center.getter();
  v11[1] = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E8E598);
  sub_1006EBC48(a1, v40, (uint64_t)v11 + *(int *)(v35 + 44));
  sub_10006DF38((uint64_t)v11, (uint64_t)v9, &qword_100E8E578);
  sub_10006DF38((uint64_t)v9, v33, &qword_100E8E578);
  uint64_t v36 = v33 + *(int *)(sub_10017DF08(&qword_100E8E5A0) + 48);
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 0;
  sub_10017DF4C((uint64_t)v11, &qword_100E8E578);
  sub_10017DF4C((uint64_t)v9, &qword_100E8E578);
  sub_1006EBF88(a1, (uint64_t)&v18[v13[17]], a4);
  sub_10006DF38((uint64_t)__dst, (uint64_t)__src, &qword_100E8E5A8);
  sub_10006DF38((uint64_t)v18, (uint64_t)v16, &qword_100E8E580);
  uint64_t v37 = v41;
  sub_10006DF38((uint64_t)__src, v41, &qword_100E8E5A8);
  uint64_t v38 = sub_10017DF08(&qword_100E8E5B0);
  sub_10006DF38((uint64_t)v16, v37 + *(int *)(v38 + 48), &qword_100E8E580);
  sub_10017DF4C((uint64_t)v18, &qword_100E8E580);
  sub_10017DF4C((uint64_t)__dst, &qword_100E8E5A8);
  sub_10017DF4C((uint64_t)v16, &qword_100E8E580);
  return sub_10017DF4C((uint64_t)__src, &qword_100E8E5A8);
}

uint64_t sub_1006EBC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v32 = a3;
  uint64_t v4 = sub_10017DF08(&qword_100E8E5B8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E8E5C0);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v31 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E8E330);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E8E5C8);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v29 - v22;
  sub_1000E31A0(v30, (uint64_t)v16);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v16, v13);
  *(void *)&v21[*(int *)(v18 + 44)] = 0;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_10024D364((uint64_t)v21, (uint64_t)v23, &qword_100E8E5C8);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v24 = sub_10017DF08(&qword_100E8E5D0);
  sub_1006EC5C4(a1, (uint64_t)&v6[*(int *)(v24 + 44)]);
  sub_10006DF38((uint64_t)v6, (uint64_t)v12, &qword_100E8E5B8);
  *(void *)&v12[*(int *)(v8 + 44)] = 0x3FF0000000000000;
  sub_10017DF4C((uint64_t)v6, &qword_100E8E5B8);
  sub_10006DF38((uint64_t)v23, (uint64_t)v21, &qword_100E8E5C8);
  uint64_t v25 = v31;
  sub_10006DF38((uint64_t)v12, v31, &qword_100E8E5C0);
  uint64_t v26 = v32;
  sub_10006DF38((uint64_t)v21, v32, &qword_100E8E5C8);
  uint64_t v27 = sub_10017DF08(&qword_100E8E5D8);
  sub_10006DF38(v25, v26 + *(int *)(v27 + 48), &qword_100E8E5C0);
  sub_10017DF4C((uint64_t)v12, &qword_100E8E5C0);
  sub_10017DF4C((uint64_t)v23, &qword_100E8E5C8);
  sub_10017DF4C(v25, &qword_100E8E5C0);
  return sub_10017DF4C((uint64_t)v21, &qword_100E8E5C8);
}

uint64_t sub_1006EBF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v32 = a2;
  uint64_t v5 = type metadata accessor for LocationModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Location.Identifier();
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for PinnedMapView(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (double *)((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001E9994(a1 + *(int *)(v18 + 68), (uint64_t)v33);
  sub_1001520F8();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  sub_100151660();
  LocationModel.identifier.getter();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v19 = a1 + *(int *)(v18 + 28);
  uint64_t v20 = *(void *)v19;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 8);
  LOBYTE(v5) = *(unsigned char *)(v19 + 9);
  sub_100193DD4(*(void *)v19, v21, v5);
  sub_1005D2010();
  uint64_t v23 = v22;
  LOBYTE(v8) = v24;
  sub_10014D82C(v20, v21, v5);
  if (v8) {
    uint64_t v23 = Namespace.wrappedValue.getter();
  }
  sub_1001262E4(v33, (uint64_t)v17);
  v17[5] = a3;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))((char *)v17 + v15[6], v14, v31);
  *(void *)((char *)v17 + v15[7]) = v23;
  uint64_t v25 = (uint64_t *)((char *)v17 + v15[8]);
  *uint64_t v25 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (char *)v17 + v15[9];
  *(void *)uint64_t v26 = swift_getKeyPath();
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(_OWORD *)(v26 + 40) = 0u;
  *(_OWORD *)(v26 + 56) = 0u;
  v26[72] = 0;
  uint64_t v27 = (char *)v17 + v15[10];
  *(void *)uint64_t v27 = swift_getKeyPath();
  v27[8] = 0;
  return sub_1001516CC();
}

void sub_1006EC31C()
{
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_10017C83C();
  __chkstk_darwin(v0);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62A08 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (LOBYTE(aBlock[0]) == 1)
  {
    char v6 = 1;
    sub_10017DF08(&qword_100E65950);
    State.wrappedValue.setter();
    uint64_t v1 = self;
    sub_100179C64();
    sub_10015176C();
    uint64_t v2 = swift_allocObject();
    sub_1001516CC();
    aBlock[4] = sub_1006F44A4;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003169EC;
    aBlock[3] = &unk_100E24510;
    uint64_t v3 = _Block_copy(aBlock);
    swift_release();
    id v4 = [v1 scheduledTimerWithTimeInterval:0 repeats:v3 block:0.5];
    _Block_release(v3);
  }
}

uint64_t sub_1006EC55C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1006EC5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PageControl(0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E8E5E0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E8E5E8);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)v36 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v36 - v19;
  sub_1000FCA70((uint64_t)v6);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10015176C();
  uint64_t v21 = &v10[*(int *)(v8 + 44)];
  long long v22 = v36[1];
  *(_OWORD *)uint64_t v21 = v36[0];
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v36[2];
  sub_100151660();
  LOBYTE(v8) = static Edge.Set.bottom.getter();
  uint64_t v23 = a1 + *(int *)(type metadata accessor for MeasuredLocationViewerView(0) + 52);
  long long v24 = *(_OWORD *)(v23 + 16);
  v37[0] = *(_OWORD *)v23;
  v37[1] = v24;
  char v38 = *(unsigned char *)(v23 + 32);
  sub_10024D364((uint64_t)v37, (uint64_t)v39, &qword_100E63F98);
  sub_1000FA648((uint64_t)v39, (void (*)(void, void, void, void, void))sub_100190CD4);
  sub_1000FA688();
  sub_1000FA648((uint64_t)v37, (void (*)(void, void, void, void, void))sub_100191934);
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_10006DF38((uint64_t)v10, (uint64_t)v18, &qword_100E8E5E0);
  uint64_t v33 = &v18[*(int *)(v12 + 44)];
  *uint64_t v33 = v8;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  sub_10017DF4C((uint64_t)v10, &qword_100E8E5E0);
  sub_10024D364((uint64_t)v18, (uint64_t)v20, &qword_100E8E5E8);
  sub_10006DF38((uint64_t)v20, (uint64_t)v15, &qword_100E8E5E8);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v34 = sub_10017DF08(&qword_100E8E5F0);
  sub_10006DF38((uint64_t)v15, a2 + *(int *)(v34 + 48), &qword_100E8E5E8);
  sub_10017DF4C((uint64_t)v20, &qword_100E8E5E8);
  return sub_10017DF4C((uint64_t)v15, &qword_100E8E5E8);
}

uint64_t sub_1006EC904(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();
  __n128 v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return sub_1006E9D58((uint64_t)v5);
}

uint64_t sub_1006EC9D0(uint64_t a1)
{
  if (qword_100E62308 != -1) {
    a1 = swift_once();
  }
  uint64_t v1 = qword_100F51490;
  if (qword_100E62668 != -1) {
    a1 = swift_once();
  }
  __chkstk_darwin(a1);
  return sub_1006E93DC(1, v1, (v2 & 1) == 0);
}

void sub_1006ECAD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001B1E64((void *)(a1 + *(int *)(v2 + 68)), *(void *)(a1 + *(int *)(v2 + 68) + 24));
  sub_1006DBB6C();
  UIAccessibilityNotifications v3 = UIAccessibilityScreenChangedNotification;

  UIAccessibilityPostNotification(v3, 0);
}

uint64_t sub_1006ECB38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = sub_10017DF08(&qword_100E71020);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocationViewerViewModel();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001520F8();
  int v12 = v11[*(int *)(v9 + 40)];
  sub_100151660();
  if (v12 < 0)
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v16 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v28 = v17;
    uint64_t v29 = v16;
    v26[1] = v18;
    uint64_t v27 = v19;
    LocalizedStringKey.init(stringLiteral:)();
    Text.init(_:tableName:bundle:comment:)();
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v20 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    static Alert.Button.default(_:action:)();
    sub_100191924(v20, v22, v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = type metadata accessor for Alert.Button();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v25);
    return Alert.init(title:message:dismissButton:)();
  }
  else
  {
    sub_10015176C();
    uint64_t v13 = ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
    uint64_t v14 = (char *)swift_allocObject();
    sub_1001516CC();
    v14[v13] = v12;
    sub_1003DCB10(v12 + 3, (uint64_t)LocationSearchEntityFromStringResolver.init(), 0, (char *)sub_1006F3D30, v14, a1);
    return swift_release();
  }
}

void sub_1006ECF0C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001B1E64((void *)(a1 + *(int *)(v4 + 68)), *(void *)(a1 + *(int *)(v4 + 68) + 24));
  sub_1006DBE34(a2);
}

uint64_t sub_1006ECF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for MeasuredLocationViewerView(0);
  v24[2] = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v28 = sub_10017DF08(&qword_100E8E500);
  uint64_t v26 = *(void *)(v28 - 8);
  uint64_t v4 = __chkstk_darwin(v28);
  uint64_t v27 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v25 = (char *)v24 - v6;
  uint64_t v7 = type metadata accessor for ConditionPickerMenuViewModel(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for ConditionPickerMenuView();
  uint64_t v10 = __chkstk_darwin(v9);
  int v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  sub_1001520F8();
  sub_10015176C();
  sub_100151660();
  sub_1006ED40C();
  sub_1001516CC();
  sub_10015176C();
  swift_allocObject();
  sub_1001516CC();
  uint64_t v30 = a1;
  sub_10017DF08(&qword_100E8E508);
  sub_1006F41D4();
  uint64_t v13 = v25;
  Button.init(action:label:)();
  v24[1] = v12;
  sub_10015176C();
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  uint64_t v17 = v28;
  v16(v27, v13, v28);
  uint64_t v18 = v29;
  sub_10015176C();
  uint64_t v19 = (int *)sub_10017DF08(&qword_100E8E518);
  uint64_t v20 = v18 + v19[12];
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  v16((char *)(v18 + v19[16]), v15, v17);
  uint64_t v21 = v18 + v19[20];
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v13, v17);
  sub_100151660();
  v22(v15, v17);
  return sub_100151660();
}

uint64_t sub_1006ED40C()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView(0);
  __chkstk_darwin(v0 - 8);
  sub_10015176C();
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = &protocol witness table for MainActor;
  sub_1001516CC();
  sub_10015176C();
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = &protocol witness table for MainActor;
  sub_1001516CC();
  sub_10017DF08(&qword_100E63A50);
  return Binding.init(get:set:)();
}

uint64_t sub_1006ED5E8()
{
  uint64_t v2 = sub_100162814();
  uint64_t v3 = type metadata accessor for MeasuredLocationViewerView(v2);
  sub_1001B1E64((void *)(v1 + *(int *)(v3 + 68)), *(void *)(v1 + *(int *)(v3 + 68) + 24));
  return v0();
}

uint64_t sub_1006ED628@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v5);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  sub_100151660();
  Image.init(systemName:)();
  uint64_t v6 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v6);
  static Font.system(size:weight:design:)();
  sub_10017DF4C((uint64_t)v4, &qword_100E63F80);
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_1006E8E04();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 24) = v13 & 1;
  return result;
}

uint64_t sub_1006ED8B8(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for LocationViewerViewModel();
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    uint64_t v10 = type metadata accessor for MeasuredLocationViewerView(0);
    sub_1001520F8();
    int v11 = v9[*(int *)(v6 + 32)];
    sub_100151660();
    sub_1001B1E64((void *)(a4 + *(int *)(v10 + 68)), *(void *)(a4 + *(int *)(v10 + 68) + 24));
    if (v11 < 0) {
      return sub_1006DC180();
    }
    else {
      return sub_1006DBF30();
    }
  }
  return result;
}

uint64_t sub_1006ED9AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ConditionPickerMenuViewModel(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v6);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  sub_10015176C();
  sub_100151660();
  sub_10006DF38((uint64_t)&v5[*(int *)(v3 + 28)], a1, &qword_100E63A50);
  return sub_100151660();
}

uint64_t sub_1006EDB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v19[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001E9994(a4 + *(int *)(v13 + 68), (uint64_t)v19);
  sub_1001B1E64(v19, v19[3]);
  sub_1001520F8();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  sub_100151660();
  uint64_t v14 = LocationModel.id.getter();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1006DBF38(a1, v14, v16);
  swift_bridgeObjectRelease();
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
}

uint64_t sub_1006EDCCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  sub_10018C6DC(&qword_100E8ED18);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  type metadata accessor for Optional();
  swift_getTupleTypeMetadata2();
  uint64_t v5 = type metadata accessor for TupleView();
  sub_10024D5E4((uint64_t)&unk_100E8ED20);
  uint64_t v69 = v5;
  uint64_t v6 = type metadata accessor for _VariadicView.Tree();
  uint64_t v72 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v70 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v71 = (uint64_t)&v59 - v9;
  uint64_t v66 = type metadata accessor for LocationRegularViewLayout();
  __chkstk_darwin(v66);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v22 = *(void *)(a1 + 32);
  uint64_t v23 = *(void *)(a1 + 40);
  uint64_t v68 = v4;
  uint64_t v24 = v4;
  uint64_t v25 = v62;
  uint64_t v67 = v3;
  uint64_t v65 = v22;
  uint64_t v64 = v23;
  sub_1006EE3C8((uint64_t)v62, v24, v3, v22, v23);
  uint64_t v63 = v26;
  uint64_t v27 = (char *)v25 + *(int *)(a1 + 76);
  long long v28 = *((_OWORD *)v27 + 1);
  v85[0] = *(_OWORD *)v27;
  v85[1] = v28;
  char v86 = v27[32];
  sub_10024D364((uint64_t)v85, (uint64_t)v87, &qword_100E63F98);
  sub_1000FA648((uint64_t)v87, (void (*)(void, void, void, void, void))sub_100190CD4);
  sub_1000FA688();
  uint64_t v61 = v29;
  uint64_t v60 = v30;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_1000FA648((uint64_t)v85, (void (*)(void, void, void, void, void))sub_100191934);
  sub_1005D2588();
  sub_10006DF38((uint64_t)&v21[*(int *)(v16 + 28)], (uint64_t)v14, &qword_100E63A10);
  uint64_t v35 = type metadata accessor for ContentStatusBanner();
  LODWORD(v16) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v35);
  sub_10017DF4C((uint64_t)v14, &qword_100E63A10);
  sub_100151660();
  uint64_t v36 = 0;
  if (v16 != 1)
  {
    sub_1005D2588();
    uint64_t v36 = *((void *)v18 + 1);
    sub_100151660();
  }
  uint64_t v37 = *v25;
  memcpy(__dst, (char *)v25 + *(int *)(a1 + 72), 0x49uLL);
  sub_1001F4E98((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001F4E98((uint64_t)__dst);
  uint64_t v38 = v76;
  long long v59 = v77;
  uint64_t v39 = v78;
  char v40 = v79;
  uint64_t v41 = v80;
  __int16 v42 = v81;
  uint64_t v43 = v82;
  uint64_t v44 = v83;
  uint64_t v45 = v66;
  sub_1001EFFBC();
  *((void *)v11 + 3) = v39;
  *(void *)uint64_t v11 = v38;
  *(_OWORD *)(v11 + 8) = v59;
  v11[32] = v40;
  *((void *)v11 + 5) = v41;
  *((_WORD *)v11 + 24) = v42;
  *((void *)v11 + 7) = v43;
  *((void *)v11 + 8) = v44;
  uint64_t v46 = &v11[*(int *)(v45 + 24)];
  uint64_t v47 = v60;
  *(void *)uint64_t v46 = v61;
  *((void *)v46 + 1) = v47;
  *((void *)v46 + 2) = v32;
  *((void *)v46 + 3) = v34;
  uint64_t v48 = v63;
  *((void *)v46 + 4) = v36;
  *((void *)v46 + 5) = v48;
  *((void *)v46 + 6) = v37;
  __chkstk_darwin(v49);
  uint64_t v50 = v67;
  *((void *)&v59 - 6) = v68;
  *((void *)&v59 - 5) = v50;
  uint64_t v51 = v64;
  *((void *)&v59 - 4) = v65;
  *((void *)&v59 - 3) = v51;
  *((void *)&v59 - 2) = v25;
  unint64_t v52 = sub_10015180C((uint64_t)&unk_100E8ED28);
  uint64_t v53 = v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v55 = v70;
  sub_1006E91C8((uint64_t)sub_1006FC4B8, (uint64_t)(&v59 - 4), v45, v53, v52, WitnessTable, v70);
  sub_100151660();
  unint64_t v74 = sub_10024D5E4((uint64_t)&unk_100E8ED30);
  uint64_t v75 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v56 = v71;
  sub_100121584(v55, v6, v71);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v57(v55, v6);
  sub_100121584(v56, v6, v73);
  return ((uint64_t (*)(uint64_t, uint64_t))v57)(v56, v6);
}

uint64_t sub_1006EE3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v19 - v15;
  v19[0] = a2;
  v19[1] = a3;
  v19[2] = a4;
  v19[3] = a5;
  type metadata accessor for LocationViewerLayoutContainer();
  sub_1005D2588();
  sub_10006DF38((uint64_t)&v16[*(int *)(v13 + 28)], (uint64_t)v11, &qword_100E63A10);
  uint64_t v17 = type metadata accessor for ContentStatusBanner();
  LODWORD(a4) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v17);
  sub_10017DF4C((uint64_t)v11, &qword_100E63A10);
  uint64_t result = sub_100151660();
  if (a4 != 1)
  {
    uint64_t result = DeviceSupportsStickyHeaders();
    if (result)
    {
      sub_1005D2588();
      return sub_100151660();
    }
  }
  return result;
}

uint64_t sub_1006EE5A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a6;
  uint64_t v38 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for Optional();
  uint64_t v41 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v43 = (char *)&v38 - v16;
  uint64_t v39 = *(void *)(a2 - 8);
  __chkstk_darwin(v17);
  __int16 v42 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v38 - v20;
  uint64_t v52 = a2;
  uint64_t v53 = (char *)a3;
  uint64_t v54 = a4;
  uint64_t v55 = a5;
  uint64_t v22 = a5;
  uint64_t v23 = type metadata accessor for LocationViewerLayoutContainer();
  uint64_t v24 = a1 + *(int *)(v23 + 56);
  char v40 = v21;
  uint64_t v25 = a2;
  uint64_t v44 = a4;
  sub_100121584(v24, a2, (uint64_t)v21);
  if (sub_1006EE9A0(v23))
  {
    uint64_t v26 = a1 + *(int *)(v23 + 60);
    uint64_t v27 = v22;
    sub_100121584(v26, a3, (uint64_t)v12);
    sub_100121584((uint64_t)v12, a3, (uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, a3);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, a3);
    long long v28 = v43;
  }
  else
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 1, 1, a3);
    long long v28 = v43;
    uint64_t v27 = v22;
  }
  sub_1000CA354();
  uint64_t v29 = v41;
  uint64_t v38 = *(void *)(v41 + 8);
  ((void (*)(char *, uint64_t))v38)(v14, v46);
  uint64_t v30 = v39;
  uint64_t v31 = v40;
  uint64_t v32 = v42;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v42, v40, v25);
  uint64_t v52 = (uint64_t)v32;
  uint64_t v33 = v46;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v14, v28, v46);
  uint64_t v53 = v14;
  uint64_t v50 = v25;
  uint64_t v51 = v33;
  uint64_t v47 = v27;
  uint64_t v48 = v44;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1006E9080();
  uint64_t v34 = v28;
  uint64_t v35 = (void (*)(char *, uint64_t))v38;
  ((void (*)(char *, uint64_t))v38)(v34, v33);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v30 + 8);
  v36(v31, v25);
  v35(v14, v33);
  return ((uint64_t (*)(char *, uint64_t))v36)(v32, v25);
}

BOOL sub_1006EE9A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = *(void *)(a1 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memcpy(__dst, (const void *)(v1 + *(int *)(a1 + 72)), 0x49uLL);
  sub_1001F4E98((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001F4E98((uint64_t)__dst);
  int v9 = v12[57];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  if (v9 == 3)
  {
    BOOL v10 = 0;
  }
  else
  {
    sub_1001EFFBC();
    BOOL v10 = sub_10058BCBC();
    sub_100151660();
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, a1);
  return v10;
}

uint64_t sub_1006EEB70()
{
  swift_getKeyPath();
  sub_10015180C((uint64_t)&unk_100E8E1B0);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1006EEC10()
{
  return swift_release();
}

uint64_t sub_1006EEC80()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_1006EED3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v18[-v7];
  int v9 = *(void **)(v1 + 24);
  if (v9)
  {
    id v10 = v9;
    if ([v10 isValid])
    {
      static Date.now.getter();
      Date.addingTimeInterval(_:)();
      uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
      v11(v6, v2);
      v12.super.isa = Date._bridgeToObjectiveC()().super.isa;
      v11(v8, v2);
      [v10 setFireDate:v12.super.isa];

      goto LABEL_7;
    }
  }
  if (static Accessibility.shouldAlwaysShowHoverUI.getter()) {
    goto LABEL_8;
  }
  static Date.now.getter();
  Date.addingTimeInterval(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  id v14 = objc_allocWithZone((Class)NSTimer);
  id v15 = sub_1001BA224((uint64_t)v8, 0, (uint64_t)sub_1006FC624, v13, 0.0);
  id v16 = [self mainRunLoop];
  [v16 addTimer:v15 forMode:NSDefaultRunLoopMode];

  v12.super.isa = *(Class *)(v1 + 24);
  *(void *)(v1 + 24) = v15;
LABEL_7:

LABEL_8:
  uint64_t result = sub_1006EEB70();
  if ((result & 1) == 0)
  {
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_1006EEFD0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void **)(result + 24);
    *(void *)(result + 24) = 0;

    static Animation.linear.getter();
    withAnimation<A>(_:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1006EF074()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7WeatherP33_971182080BE1A8931C9C36EF48C83CFF23PageControlDisplayState___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1006EF11C()
{
  return type metadata accessor for PageControlDisplayState(0);
}

uint64_t sub_1006EF124()
{
  type metadata accessor for LocationViewPage(0);
  swift_retain();
  sub_100230A60();
  swift_release();
  sub_10021DB34();

  return swift_release();
}

uint64_t sub_1006EF190()
{
  uint64_t v1 = sub_10017DF08(&qword_100E8EC20);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E8EC28);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0 + *(int *)(type metadata accessor for PinnedMapView(0) + 40);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  sub_100195B7C(*(void *)v7, v9);
  sub_1000C3D18();
  char v11 = v10;
  sub_10018F6D8(v8, v9);
  if ((v11 & 0xC0) == 0x40)
  {
    swift_storeEnumTagMultiPayload();
    sub_1006FBCA4();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_1006EF360((uint64_t)v3);
    sub_10006DF38((uint64_t)v3, (uint64_t)v6, &qword_100E8EC20);
    swift_storeEnumTagMultiPayload();
    sub_1006FBCA4();
    _ConditionalContent<>.init(storage:)();
    return sub_10017DF4C((uint64_t)v3, &qword_100E8EC20);
  }
}

uint64_t sub_1006EF360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v107 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityActionKind();
  uint64_t v103 = *(void *)(v3 - 8);
  uint64_t v104 = v3;
  __chkstk_darwin(v3);
  v102 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PinnedMapView(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E8EC50);
  __chkstk_darwin(v9 - 8);
  v105 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10017DF08(&qword_100E8EC40);
  __chkstk_darwin(v101);
  v106 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EFFBC();
  char v15 = sub_10058BF64();
  sub_100151660();
  if (v15) {
    int v16 = static Edge.Set.bottom.getter();
  }
  else {
    int v16 = Edge.Set.init(rawValue:)();
  }
  int v98 = v16;
  uint64_t v17 = static Alignment.center.getter();
  uint64_t v93 = v18;
  uint64_t v94 = v17;
  sub_10015176C();
  uint64_t v19 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v20 = (v19 + 16) & ~v19;
  uint64_t v95 = v19 | 7;
  uint64_t v96 = v20 + v7;
  uint64_t v21 = swift_allocObject();
  uint64_t v97 = v20;
  uint64_t v92 = v21;
  sub_1001516CC();
  uint64_t KeyPath = swift_getKeyPath();
  static UnitPoint.center.getter();
  static AnyTransition.scale(scale:anchor:)();
  static UnitPoint.center.getter();
  static AnyTransition.scale(scale:anchor:)();
  static AnyTransition.asymmetric(insertion:removal:)();
  swift_release();
  swift_release();
  if (qword_100E62458 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_100F51928;
  if (qword_100E62460 != -1) {
    swift_once();
  }
  v111[0] = v22;
  v108[0] = qword_100F51930;
  sub_1004035F0();
  static AnyTransition.modifier<A>(active:identity:)();
  uint64_t v90 = AnyTransition.combined(with:)();
  swift_release();
  swift_release();
  v111[0] = 0;
  v111[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v111[0] = 0xD000000000000010;
  v111[1] = 0x8000000100CAF480;
  v23._countAndFlagsBits = Location.Identifier.id.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 45;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  uint64_t v25 = (const void *)(v2 + *(int *)(v5 + 36));
  memcpy(__dst, v25, 0x49uLL);
  sub_1001F4E98((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001F4E98((uint64_t)__dst);
  v26._countAndFlagsBits = sub_10007DA60();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  uint64_t v88 = v111[1];
  uint64_t v89 = v111[0];
  uint64_t v27 = *(int *)(v5 + 28);
  uint64_t v100 = v2;
  uint64_t v87 = *(void *)(v2 + v27);
  int v86 = static MatchedGeometryProperties.frame.getter();
  static UnitPoint.center.getter();
  uint64_t v84 = v29;
  uint64_t v85 = v28;
  sub_1001EFFBC();
  BOOL v30 = sub_10058BE08();
  sub_100151660();
  if (v30)
  {
    memcpy(v123, v25, 0x49uLL);
    sub_1001F4E98((uint64_t)v123);
    sub_1001BEAF4();
    sub_1001F4E98((uint64_t)v123);
    sub_1001EFFBC();
    sub_1009F3538((uint64_t)v14);
    sub_100151660();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v31 = v117;
  uint64_t v82 = v118;
  uint64_t v83 = v116;
  char v32 = v119;
  uint64_t v80 = v121;
  uint64_t v81 = v120;
  unsigned __int8 v33 = static Edge.Set.leading.getter();
  unsigned __int8 v34 = static Edge.Set.trailing.getter();
  char v35 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v33) {
    char v35 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v34) {
    char v35 = Edge.Set.init(rawValue:)();
  }
  v99 = v8;
  sub_1001EFFBC();
  BOOL v36 = sub_10058BE08();
  sub_100151660();
  if (v36)
  {
    memcpy(v122, v25, 0x49uLL);
    sub_1001F4E98((uint64_t)v122);
    sub_1001BEAF4();
    sub_1001F4E98((uint64_t)v122);
  }
  char v115 = 0;
  char v114 = v31;
  char v113 = v32;
  EdgeInsets.init(_all:)();
  uint64_t v78 = v38;
  uint64_t v79 = v37;
  uint64_t v76 = v40;
  uint64_t v77 = v39;
  char v41 = static Edge.Set.trailing.getter();
  sub_1001EFFBC();
  sub_10058BF64();
  sub_100151660();
  char v42 = v115;
  char v43 = v114;
  char v44 = v113;
  char v112 = 0;
  EdgeInsets.init(_all:)();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  char v53 = static Edge.Set.bottom.getter();
  sub_1001EFFBC();
  sub_10058BF64();
  sub_100151660();
  char v54 = v112;
  char v109 = 0;
  EdgeInsets.init(_all:)();
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  char v63 = v109;
  char v110 = 0;
  uint64_t v64 = static SafeAreaRegions.all.getter();
  v108[0] = v94;
  v108[1] = v93;
  v108[2] = KeyPath;
  LOBYTE(v108[3]) = v42;
  v108[4] = sub_1006FC14C;
  v108[5] = v92;
  v108[6] = v90;
  v108[7] = v89;
  v108[8] = v88;
  v108[9] = v87;
  LODWORD(v108[10]) = v86;
  v108[11] = v85;
  v108[12] = v84;
  LOBYTE(v108[13]) = 1;
  v108[14] = v83;
  LOBYTE(v108[15]) = v43;
  v108[16] = v82;
  LOBYTE(v108[17]) = v44;
  v108[18] = v81;
  v108[19] = v80;
  LOBYTE(v108[20]) = v35;
  v108[21] = v79;
  v108[22] = v78;
  v108[23] = v77;
  v108[24] = v76;
  LOBYTE(v108[25]) = v54;
  LOBYTE(v108[26]) = v41;
  v108[27] = v46;
  v108[28] = v48;
  v108[29] = v50;
  v108[30] = v52;
  LOBYTE(v108[31]) = v63;
  LOBYTE(v108[32]) = v53;
  v108[33] = v56;
  v108[34] = v58;
  v108[35] = v60;
  v108[36] = v62;
  LOBYTE(v108[37]) = v110;
  v108[38] = v64;
  LOWORD(v108[39]) = v98;
  uint64_t v65 = v102;
  static AccessibilityActionKind.escape.getter();
  sub_10015176C();
  swift_allocObject();
  sub_1001516CC();
  sub_10017DF08(&qword_100E8EC60);
  sub_1001CB570((uint64_t)&unk_100E8EC58);
  uint64_t v66 = (uint64_t)v105;
  View.accessibilityAction(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v65, v104);
  memcpy(v111, v108, 0x13AuLL);
  sub_1006FC398((uint64_t)v111);
  uint64_t v67 = (uint64_t)v106;
  uint64_t v68 = (uint64_t *)&v106[*(int *)(v101 + 36)];
  uint64_t *v68 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = (int *)type metadata accessor for ComputePinnedMapSizeViewModifier(0);
  uint64_t v70 = (char *)v68 + v69[5];
  *(void *)uint64_t v70 = swift_getKeyPath();
  *(_OWORD *)(v70 + 8) = 0u;
  *(_OWORD *)(v70 + 24) = 0u;
  *(_OWORD *)(v70 + 33) = 0u;
  uint64_t v71 = (char *)v68 + v69[6];
  *(void *)uint64_t v71 = swift_getKeyPath();
  *(_OWORD *)(v71 + 8) = 0u;
  *(_OWORD *)(v71 + 24) = 0u;
  *(_OWORD *)(v71 + 40) = 0u;
  *(_OWORD *)(v71 + 56) = 0u;
  v71[72] = 0;
  uint64_t v72 = (char *)v68 + v69[7];
  *(void *)uint64_t v72 = swift_getKeyPath();
  v72[8] = 0;
  sub_10024D364(v66, v67, &qword_100E8EC50);
  uint64_t v73 = v107;
  sub_10006DF38(v67, v107, &qword_100E8EC40);
  *(void *)(v73 + *(int *)(sub_10017DF08(&qword_100E8EC20) + 36)) = 0x3FF0000000000000;
  return sub_10017DF4C(v67, &qword_100E8EC40);
}

uint64_t sub_1006EFEB4@<X0>(uint64_t (**a1)(void)@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v60 = a1;
  uint64_t v66 = a2;
  uint64_t v63 = sub_10017DF08(&qword_100E8ECF0);
  __chkstk_darwin(v63);
  uint64_t v64 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10017DF08(&qword_100E8ECF8);
  __chkstk_darwin(v62);
  uint64_t v65 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v61);
  uint64_t v7 = (double *)((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for WeatherMapDisplayMode();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100E74480);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10017DF08(&qword_100E74488);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  char v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10017DF08(&qword_100E744A0);
  __chkstk_darwin(v55);
  uint64_t v67 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(unsigned char *)(v17 + 32) = 1;
  *(void *)(v17 + 40) = 0;
  *(void *)(v17 + 48) = 0;
  sub_1000E390C((void (*)(long long *))sub_100404CAC, (uint64_t)sub_1006F06BC, 0, &qword_100E870A8, (uint64_t)sub_100874A4C, (uint64_t)v68);
  uint64_t v18 = sub_10017DF08(&qword_100E74490);
  unint64_t v19 = sub_10024D5E4((uint64_t)&unk_100E74498);
  View.systemColorScheme()();
  sub_10017DF4C((uint64_t)v68, &qword_100E74490);
  if (qword_100E62958 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1002102B0(v8, (uint64_t)qword_100F521D8);
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v20, v8);
  __chkstk_darwin(v21);
  *(&v54 - 2) = (uint64_t)v60;
  *(void *)&v68[0] = v18;
  *((void *)&v68[0] + 1) = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = v57;
  View.buttons(_:buttons:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v22);
  uint64_t v23 = v61;
  Swift::String v24 = (char *)v7 + *(int *)(v61 + 20);
  uint64_t v25 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v26 = type metadata accessor for RoundedCornerStyle();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);
  v27(v24, v25, v26);
  double *v7 = a3;
  v7[1] = a3;
  uint64_t v28 = v67;
  uint64_t v29 = v67 + *(int *)(v55 + 36);
  sub_10015176C();
  *(_WORD *)(v29 + *(int *)(sub_10017DF08(&qword_100E744A8) + 36)) = 256;
  uint64_t v30 = v58;
  uint64_t v31 = v28;
  uint64_t v32 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v31, v15, v59);
  uint64_t v60 = &type metadata accessor for RoundedRectangle;
  sub_100151660();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v32);
  v27((char *)v7 + *(int *)(v23 + 20), v25, v26);
  double *v7 = a3;
  v7[1] = a3;
  static Color.black.getter();
  uint64_t v33 = Color.opacity(_:)();
  swift_release();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v34 = (uint64_t)v65;
  sub_10015176C();
  double v35 = *(double *)v68 * 0.5;
  uint64_t v36 = (uint64_t)v64;
  sub_10015176C();
  *(double *)(v36 + *(int *)(type metadata accessor for RoundedRectangle._Inset() + 20)) = v35;
  uint64_t v37 = v36 + *(int *)(sub_10017DF08(&qword_100E79DA0) + 36);
  long long v38 = v68[1];
  *(_OWORD *)uint64_t v37 = v68[0];
  *(_OWORD *)(v37 + 16) = v38;
  *(void *)(v37 + 32) = v69;
  uint64_t v39 = v63;
  *(void *)(v36 + *(int *)(v63 + 52)) = v33;
  *(_WORD *)(v36 + *(int *)(v39 + 56)) = 256;
  uint64_t v40 = static Alignment.center.getter();
  uint64_t v42 = v41;
  uint64_t v43 = v34 + *(int *)(v62 + 68);
  char v44 = (uint64_t *)(v43 + *(int *)(sub_10017DF08(&qword_100E8ED00) + 36));
  *char v44 = v40;
  v44[1] = v42;
  sub_10024D364(v36, v43, &qword_100E8ECF0);
  sub_100151660();
  uint64_t v45 = static Alignment.center.getter();
  uint64_t v47 = v46;
  uint64_t v48 = sub_10017DF08(&qword_100E8ED08);
  uint64_t v49 = v66;
  uint64_t v50 = v66 + *(int *)(v48 + 36);
  sub_10006DF38(v34, v50, &qword_100E8ECF8);
  uint64_t v51 = (uint64_t *)(v50 + *(int *)(sub_10017DF08(&qword_100E8ED10) + 36));
  uint64_t *v51 = v45;
  v51[1] = v47;
  uint64_t v52 = v67;
  sub_10006DF38(v67, v49, &qword_100E744A0);
  sub_10017DF4C(v34, &qword_100E8ECF8);
  return sub_10017DF4C(v52, &qword_100E744A0);
}

uint64_t sub_1006F06BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  if (qword_100E62958 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for WeatherMapDisplayMode();
  uint64_t v4 = sub_1002102B0(v3, (uint64_t)qword_100F521D8);
  return sub_1009ABB90(v4, 0xD000000000000012, 0x8000000100C52220, a2);
}

uint64_t sub_1006F0750(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ButtonGroup.Alignment();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for ButtonGroup();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v3 + 104))(v5, enum case for ButtonGroup.Alignment.leading(_:), v2, v8);
  uint64_t v16 = a1;
  ButtonGroup.init(alignment:buttons:)();
  uint64_t v11 = static ButtonGroupsBuilder.buildExpression(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v6);
  sub_10017DF08(&qword_100E744B0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100C251B0;
  *(void *)(v12 + 32) = v11;
  uint64_t v13 = static ButtonGroupsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1006F0930(uint64_t a1)
{
  v31[2] = a1;
  uint64_t v1 = type metadata accessor for PinnedMapView(0);
  uint64_t v33 = *(void *)(v1 - 8);
  uint64_t v2 = *(void *)(v33 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v36 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ButtonGroup.Button.Content();
  v31[0] = v3;
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v4 = v32;
  __chkstk_darwin(v3);
  uint64_t v6 = (Swift::String *)((char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ButtonGroup.Button();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  uint64_t v38 = v8;
  __chkstk_darwin(v7);
  double v35 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v31 - v11;
  id v34 = self;
  id v13 = [v34 mainBundle];
  v39._object = (void *)0x8000000100C9E620;
  v14._countAndFlagsBits = 1701736260;
  v14._object = (void *)0xE400000000000000;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0xD000000000000022;
  Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v39);

  *uint64_t v6 = v16;
  uint64_t v17 = *(void (**)(Swift::String *, void, uint64_t))(v4 + 104);
  v17(v6, enum case for ButtonGroup.Button.Content.title(_:), v3);
  v31[1] = type metadata accessor for PinnedMapView;
  sub_10015176C();
  swift_allocObject();
  sub_1001516CC();
  static ButtonGroup.Button.dismiss(_:identifier:handler:)();
  swift_release();
  uint64_t v18 = v31[0];
  (*(void (**)(Swift::String *, void))(v32 + 8))(v6, v31[0]);
  uint64_t v19 = static ButtonsBuilder.buildExpression(_:)();
  uint64_t v32 = *(void *)(v38 + 8);
  uint64_t v33 = v19;
  v38 += 8;
  ((void (*)(char *, uint64_t))v32)(v12, v37);
  v6->_countAndFlagsBits = 0xD000000000000022;
  v6->_object = (void *)0x8000000100CAF4A0;
  v17(v6, enum case for ButtonGroup.Button.Content.image(_:), v18);
  sub_10015176C();
  swift_allocObject();
  sub_1001516CC();
  uint64_t v20 = v35;
  ButtonGroup.Button.init(_:identifier:handler:)();
  id v21 = [v34 mainBundle];
  v22._countAndFlagsBits = 0xD000000000000015;
  v40._countAndFlagsBits = 0xD000000000000038;
  v40._object = (void *)0x8000000100C9E6A0;
  v22._object = (void *)0x8000000100C9E680;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v40);

  ButtonGroup.Button.accessibilityLabel(_:)();
  swift_bridgeObjectRelease();
  Swift::String v24 = v20;
  uint64_t v25 = v37;
  uint64_t v26 = (void (*)(char *, uint64_t))v32;
  ((void (*)(char *, uint64_t))v32)(v24, v37);
  uint64_t v27 = static ButtonsBuilder.buildExpression(_:)();
  v26(v12, v25);
  sub_10017DF08(&qword_100E744B8);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100C25ED0;
  *(void *)(v28 + 32) = v33;
  *(void *)(v28 + 40) = v27;
  uint64_t v29 = static ButtonsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1006F0E54(void *a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1006F0E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ComputePinnedMapSizeViewModifier(0);
  __chkstk_darwin(v4 - 8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10015176C();
  uint64_t v6 = swift_allocObject();
  sub_1001516CC();
  uint64_t v7 = sub_10017DF08(&qword_100E8F088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t result = sub_10017DF08(&qword_100E8F090);
  uint64_t v9 = (uint64_t *)(a2 + *(int *)(result + 36));
  *uint64_t v9 = KeyPath;
  v9[1] = (uint64_t)sub_1006FE440;
  v9[2] = v6;
  return result;
}

void sub_1006F1020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ComputePinnedMapSizeViewModifier(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2 + *(int *)(v10 + 28);
  uint64_t v12 = *(void *)v11;
  char v13 = *(unsigned char *)(v11 + 8);
  sub_100195B7C(*(void *)v11, v13);
  sub_1000C3D18();
  char v15 = v14;
  sub_10018F6D8(v12, v13);
  sub_10015176C();
  if ((v15 & 0xC0) == 0x40)
  {
    sub_100151660();
  }
  else
  {
    memcpy(__dst, &v9[*(int *)(v7 + 24)], 0x49uLL);
    sub_1001F4E98((uint64_t)__dst);
    sub_1001BEAF4();
    sub_1001F4E98((uint64_t)__dst);
    sub_100151660();
    if (v25[49] != 3)
    {
      memcpy(v25, (const void *)(a2 + *(int *)(v7 + 24)), 0x49uLL);
      sub_1001F4E98((uint64_t)v25);
      sub_1001BEAF4();
      sub_1001F4E98((uint64_t)v25);
      if (v29 == 4)
      {
        sub_1001F4E98((uint64_t)v25);
        sub_1001BEAF4();
        sub_1001F4E98((uint64_t)v25);
        double v16 = v30 * 0.0;
        sub_1000C4E58();
        double v18 = v17 + v16 + sub_1000E0E84();
      }
      else
      {
        sub_1001F4E98((uint64_t)v25);
        sub_1001BEAF4();
        sub_1001F4E98((uint64_t)v25);
        double v19 = v28;
        sub_1001F4E98((uint64_t)v25);
        sub_1001BEAF4();
        sub_1001F4E98((uint64_t)v25);
        double v18 = v19 - sub_1000E0B50() + -20.0;
      }
      if (v18 >= 0.0)
      {
        sub_1001F4E98((uint64_t)v25);
        sub_1001BEAF4();
        sub_1001F4E98((uint64_t)v25);
        if (v24[49] == 4)
        {
          sub_1001F4E98((uint64_t)v25);
          sub_1001BEAF4();
          sub_1001F4E98((uint64_t)v25);
          sub_1001EFFBC();
          double v20 = sub_1009F3538((uint64_t)v6);
          sub_100151660();
        }
        else
        {
          uint64_t v21 = a2 + *(int *)(v7 + 20);
          long long v22 = *(_OWORD *)(v21 + 16);
          v26[0] = *(_OWORD *)v21;
          v26[1] = v22;
          _DWORD v26[2] = *(_OWORD *)(v21 + 32);
          char v27 = *(unsigned char *)(v21 + 48);
          sub_10024D364((uint64_t)v26, (uint64_t)v24, &qword_100E63DB0);
          sub_1000FDCE8((uint64_t)v24);
          sub_1000FDD60();
          sub_1000FDCE8((uint64_t)v26);
          double v20 = v23[2] + v23[3] + v23[5];
        }
        *(double *)a1 = v18;
        *(double *)(a1 + 8) = v20;
        *(unsigned char *)(a1 + 16) = 0;
      }
    }
  }
}

uint64_t sub_1006F14D0(double *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScenePhase();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v24 - v9;
  uint64_t v11 = type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  __chkstk_darwin(v12 - 8);
  char v14 = (double *)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = 0;
  uint64_t v26 = a1;
  double v15 = *a1;
  uint64_t v16 = a2 + *(int *)(v11 + 24);
  sub_10017DF08(&qword_100E8EF18);
  v24[1] = v16;
  State.wrappedValue.getter();
  double v17 = *v14;
  sub_100151660();
  uint64_t v25 = a2;
  sub_10015176C();
  if (v15 == v17)
  {
    sub_1000F80DC();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for ScenePhase.background(_:), v4);
    sub_10015180C((uint64_t)&qword_100EAA8E0);
    char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
    double v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v8, v4);
    v19(v10, v4);
    uint64_t v20 = sub_100151660();
    uint64_t v22 = v25;
    uint64_t v21 = v26;
    if ((v18 & 1) == 0)
    {
      State.wrappedValue.getter();
      sub_1000E21C8();
      sub_100151660();
      uint64_t v20 = Transaction.animation.setter();
    }
  }
  else
  {
    uint64_t v20 = sub_100151660();
    uint64_t v22 = v25;
    uint64_t v21 = v26;
  }
  __chkstk_darwin(v20);
  v24[-2] = v22;
  v24[-1] = v21;
  swift_retain();
  withTransaction<A>(_:_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1006F187C()
{
  uint64_t v0 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  __chkstk_darwin(v1);
  sub_10015176C();
  type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  sub_10015176C();
  sub_10017DF08(&qword_100E8EF18);
  State.wrappedValue.setter();
  return sub_100151660();
}

uint64_t sub_1006F1998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  sub_10017C83C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62530 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1002102B0(v2, (uint64_t)qword_100E8DE78);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:), v2);
  LOBYTE(v8) = sub_10012F990(v8, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  if (v8)
  {
    char v9 = CGSize.isLandscape.getter();
    type metadata accessor for TargetWindowSizeClass();
    sub_100162E4C();
    if (v9) {
      uint64_t v11 = (unsigned int *)&enum case for TargetWindowSizeClass.landscapeRegular(_:);
    }
    else {
      uint64_t v11 = (unsigned int *)&enum case for TargetWindowSizeClass.portraitRegular(_:);
    }
    return (*(uint64_t (**)(uint64_t, void))(v10 + 104))(a1, *v11);
  }
  else
  {
    uint64_t v12 = enum case for TargetWindowSizeClass.compact(_:);
    type metadata accessor for TargetWindowSizeClass();
    sub_100162E4C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 104))(a1, v12);
  }
}

uint64_t sub_1006F1B84()
{
  uint64_t v1 = type metadata accessor for LocationViewerViewModel();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100162758();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - v4;
  sub_1001520F8();
  sub_1001520F8();
  char v6 = sub_1000ABE8C((uint64_t)v5, v0);
  sub_100151660();
  sub_100151660();
  return v6 & 1;
}

void *initializeWithTake for LocationViewerView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB1uLL);
}

uint64_t assignWithTake for LocationViewerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_unknownObjectRelease();
  *(void *)(a1 + 72) = v5;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v7 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v7;
  swift_release();
  char v8 = *(unsigned char *)(a2 + 176);
  uint64_t v9 = *(void *)(a1 + 168);
  char v10 = *(unsigned char *)(a1 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = v8;
  sub_10018F6D8(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationViewerView(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 177))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationViewerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 177) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1006F1DEC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    uint64_t v17 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    char v8 = *((unsigned char *)a2 + 16);
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    swift_retain();
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
      *(unsigned char *)(v10 + 17) = *(unsigned char *)(v11 + 17);
      *(unsigned char *)(v10 + 18) = *(unsigned char *)(v11 + 18);
      uint64_t v12 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v13 = v10 + v12;
      uint64_t v14 = v11 + v12;
      uint64_t v15 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = a1 + v18;
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = *(void *)v20;
    char v22 = *(unsigned char *)(v20 + 9);
    unsigned __int8 v23 = *(unsigned char *)(v20 + 8);
    sub_100193DD4(*(void *)v20, v23, v22);
    *(void *)uint64_t v19 = v21;
    *(unsigned char *)(v19 + 8) = v23;
    *(unsigned char *)(v19 + 9) = v22;
    uint64_t v24 = a3[8];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = a3[9];
    char v29 = (void *)(a1 + v28);
    double v30 = (uint64_t *)((char *)a2 + v28);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      }
    }
    else
    {
      *char v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = a3[10];
    uint64_t v34 = a1 + v33;
    uint64_t v35 = (uint64_t)a2 + v33;
    uint64_t v36 = *(void *)v35;
    char v37 = *(unsigned char *)(v35 + 8);
    sub_100195B7C(*(void *)v35, v37);
    *(void *)uint64_t v34 = v36;
    *(unsigned char *)(v34 + 8) = v37;
    uint64_t v38 = a3[11];
    uint64_t v39 = a1 + v38;
    uint64_t v40 = (uint64_t)a2 + v38;
    uint64_t v41 = *(void *)v40;
    char v42 = *(unsigned char *)(v40 + 8);
    sub_100195B7C(*(void *)v40, v42);
    *(void *)uint64_t v39 = v41;
    *(unsigned char *)(v39 + 8) = v42;
    uint64_t v43 = a3[12];
    uint64_t v44 = a1 + v43;
    uint64_t v45 = (uint64_t)a2 + v43;
    uint64_t v46 = *(void *)v45;
    char v47 = *(unsigned char *)(v45 + 8);
    sub_100195B7C(*(void *)v45, v47);
    *(void *)uint64_t v44 = v46;
    *(unsigned char *)(v44 + 8) = v47;
    uint64_t v48 = a3[13];
    uint64_t v49 = a1 + v48;
    uint64_t v50 = (uint64_t)a2 + v48;
    uint64_t v51 = *(void *)v50;
    uint64_t v52 = *(void *)(v50 + 8);
    uint64_t v53 = *(void *)(v50 + 16);
    uint64_t v54 = *(void *)(v50 + 24);
    char v55 = *(unsigned char *)(v50 + 32);
    sub_100190CD4(*(void *)v50, v52, v53, v54, v55);
    *(void *)uint64_t v49 = v51;
    *(void *)(v49 + 8) = v52;
    *(void *)(v49 + 16) = v53;
    *(void *)(v49 + 24) = v54;
    *(unsigned char *)(v49 + 32) = v55;
    uint64_t v56 = a3[14];
    uint64_t v57 = a1 + v56;
    uint64_t v58 = (uint64_t)a2 + v56;
    uint64_t v59 = *(void *)v58;
    LOBYTE(v52) = *(unsigned char *)(v58 + 8);
    sub_100195B7C(*(void *)v58, v52);
    *(void *)uint64_t v57 = v59;
    *(unsigned char *)(v57 + 8) = v52;
    uint64_t v60 = a3[15];
    uint64_t v61 = a3[16];
    uint64_t v62 = (void *)(a1 + v60);
    uint64_t v63 = (uint64_t *)((char *)a2 + v60);
    uint64_t v64 = v63[1];
    *uint64_t v62 = *v63;
    v62[1] = v64;
    *(void *)(a1 + v61) = *(uint64_t *)((char *)a2 + v61);
    uint64_t v65 = a3[17];
    uint64_t v66 = a1 + v65;
    uint64_t v67 = (uint64_t)a2 + v65;
    long long v68 = *(_OWORD *)((char *)a2 + v65 + 24);
    *(_OWORD *)(a1 + v65 + 24) = v68;
    uint64_t v69 = v68;
    uint64_t v70 = **(void (***)(uint64_t, uint64_t, uint64_t))(v68 - 8);
    swift_retain();
    swift_retain();
    v70(v66, v67, v69);
    uint64_t v71 = a3[19];
    *(void *)(a1 + a3[18]) = *(uint64_t *)((char *)a2 + a3[18]);
    *(_OWORD *)(a1 + v71) = *(_OWORD *)((char *)a2 + v71);
    uint64_t v72 = a3[20];
    uint64_t v73 = a1 + v72;
    uint64_t v74 = (uint64_t)a2 + v72;
    long long v75 = *(_OWORD *)((char *)a2 + v72 + 24);
    *(_OWORD *)(a1 + v72 + 24) = v75;
    uint64_t v76 = v75;
    uint64_t v77 = **(void (***)(uint64_t, uint64_t, uint64_t))(v75 - 8);
    swift_unknownObjectRetain();
    v77(v73, v74, v76);
    uint64_t v78 = a3[21];
    long long v79 = *(_OWORD *)((char *)a2 + v78 + 24);
    *(_OWORD *)(a1 + v78 + 24) = v79;
    (**(void (***)(void))(v79 - 8))();
    uint64_t v80 = a3[22];
    uint64_t v81 = a1 + v80;
    uint64_t v82 = (uint64_t)a2 + v80;
    uint64_t v83 = type metadata accessor for Text.Measurements();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    uint64_t v84 = a3[23];
    uint64_t v85 = a3[24];
    uint64_t v86 = a1 + v84;
    uint64_t v87 = (uint64_t *)((char *)a2 + v84);
    uint64_t v88 = *v87;
    LOBYTE(v87) = *((unsigned char *)v87 + 8);
    *(void *)uint64_t v86 = v88;
    *(unsigned char *)(v86 + 8) = (_BYTE)v87;
    uint64_t v110 = a1;
    uint64_t v89 = a3;
    uint64_t v90 = v110 + v85;
    uint64_t v91 = *(uint64_t *)((char *)a2 + v85);
    uint64_t v92 = *(uint64_t *)((char *)a2 + v85 + 8);
    uint64_t v93 = *(uint64_t *)((char *)a2 + v85 + 16);
    uint64_t v94 = *(uint64_t *)((char *)a2 + v85 + 24);
    uint64_t v95 = *(uint64_t *)((char *)a2 + v85 + 32);
    uint64_t v96 = *(uint64_t *)((char *)a2 + v85 + 40);
    char v97 = *((unsigned char *)a2 + v85 + 48);
    swift_retain();
    sub_100193D54(v91, v92, v93, v94, v95, v96, v97);
    *(void *)uint64_t v90 = v91;
    *(void *)(v90 + 8) = v92;
    *(void *)(v90 + 16) = v93;
    *(void *)(v90 + 24) = v94;
    *(void *)(v90 + 32) = v95;
    *(void *)(v90 + 40) = v96;
    *(unsigned char *)(v90 + 48) = v97;
    uint64_t v98 = v89[25];
    uint64_t v99 = v89[26];
    uint64_t v100 = v110 + v98;
    uint64_t v101 = (uint64_t)a2 + v98;
    *(unsigned char *)uint64_t v100 = *(unsigned char *)v101;
    *(void *)(v100 + 8) = *(void *)(v101 + 8);
    uint64_t v102 = v110 + v99;
    uint64_t v103 = *(uint64_t *)((char *)a2 + v99);
    uint64_t v104 = *(uint64_t *)((char *)a2 + v99 + 8);
    LOBYTE(v93) = *((unsigned char *)a2 + v99 + 16);
    swift_retain();
    sub_100195B88();
    *(void *)uint64_t v102 = v103;
    *(void *)(v102 + 8) = v104;
    *(unsigned char *)(v102 + 16) = v93;
    uint64_t v105 = v89[27];
    uint64_t v106 = v89[28];
    uint64_t v17 = v110;
    uint64_t v107 = *(void **)((char *)a2 + v105);
    *(void *)(v110 + v105) = v107;
    *(void *)(v110 + v106) = *(uint64_t *)((char *)a2 + v106);
    id v108 = v107;
  }
  swift_retain();
  return v17;
}

uint64_t sub_1006F2480(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = a3[6];
  char v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)char v8 = *(_OWORD *)v9;
    v8[16] = v9[16];
    v8[17] = v9[17];
    v8[18] = v9[18];
    uint64_t v11 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    uint64_t v14 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_WORD *)(v17 + 8) = *(_WORD *)(v18 + 8);
  uint64_t v19 = (void *)(a1 + v16);
  uint64_t v20 = (const void *)(a2 + v16);
  uint64_t v21 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27))
    {
      uint64_t v28 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v27);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  uint64_t v29 = a3[10];
  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  uint64_t v35 = a3[12];
  uint64_t v36 = a3[13];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = a2 + v36;
  *(unsigned char *)(v39 + 32) = *(unsigned char *)(v40 + 32);
  long long v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  uint64_t v42 = a3[14];
  uint64_t v43 = a3[15];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(void *)uint64_t v44 = *(void *)v45;
  *(_OWORD *)(a1 + v43) = *(_OWORD *)(a2 + v43);
  uint64_t v46 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  *(void *)(v47 + 32) = *(void *)(v48 + 32);
  uint64_t v50 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v50) = *(_OWORD *)(a2 + v50);
  uint64_t v51 = a3[20];
  uint64_t v52 = a3[21];
  uint64_t v53 = a1 + v51;
  uint64_t v54 = a2 + v51;
  long long v55 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v55;
  *(void *)(v53 + 32) = *(void *)(v54 + 32);
  uint64_t v56 = a1 + v52;
  uint64_t v57 = (long long *)(a2 + v52);
  *(void *)(v56 + 32) = *((void *)v57 + 4);
  long long v58 = *v57;
  long long v59 = v57[1];
  uint64_t v60 = a3[22];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  *(_OWORD *)uint64_t v56 = v58;
  *(_OWORD *)(v56 + 16) = v59;
  uint64_t v63 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
  uint64_t v64 = a3[23];
  uint64_t v65 = a3[24];
  uint64_t v66 = a1 + v64;
  uint64_t v67 = a2 + v64;
  *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
  *(void *)uint64_t v66 = *(void *)v67;
  uint64_t v68 = a1 + v65;
  uint64_t v69 = (long long *)(a2 + v65);
  *(unsigned char *)(v68 + 48) = *((unsigned char *)v69 + 48);
  long long v70 = v69[2];
  long long v71 = *v69;
  *(_OWORD *)(v68 + 16) = v69[1];
  *(_OWORD *)(v68 + 32) = v70;
  *(_OWORD *)uint64_t v68 = v71;
  uint64_t v72 = a3[26];
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
  *(unsigned char *)(v73 + 16) = *(unsigned char *)(v74 + 16);
  uint64_t v75 = a3[28];
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  *(void *)(a1 + v75) = *(void *)(a2 + v75);
  return a1;
}

uint64_t sub_1006F2910(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[6];
    char v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_10017DF4C(a1 + v7, &qword_100E63BD0);
    uint64_t v10 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)char v8 = *(_OWORD *)v9;
      v8[16] = v9[16];
      v8[17] = v9[17];
      v8[18] = v9[18];
      uint64_t v11 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  char v19 = *((unsigned char *)v17 + 8);
  LOBYTE(v17) = *((unsigned char *)v17 + 9);
  uint64_t v20 = *(void *)v16;
  char v21 = *(unsigned char *)(v16 + 9);
  *(void *)uint64_t v16 = v18;
  uint64_t v22 = *(unsigned __int8 *)(v16 + 8);
  *(unsigned char *)(v16 + 8) = v19;
  *(unsigned char *)(v16 + 9) = (_BYTE)v17;
  sub_10014D82C(v20, v22, v21);
  if (a1 != a2)
  {
    uint64_t v23 = a3[8];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (const void *)(a2 + v23);
    sub_10017DF4C(a1 + v23, &qword_100E63BC8);
    uint64_t v26 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    uint64_t v28 = a3[9];
    uint64_t v29 = (void *)(a1 + v28);
    uint64_t v30 = (const void *)(a2 + v28);
    sub_10017DF4C(a1 + v28, (uint64_t *)&unk_100EAA560);
    uint64_t v31 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v32))
      {
        uint64_t v33 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v29, v30, v32);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v32);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
  }
  uint64_t v34 = a3[10];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  LOBYTE(v36) = *((unsigned char *)v36 + 8);
  uint64_t v38 = *(void *)v35;
  char v39 = *(unsigned char *)(v35 + 8);
  *(void *)uint64_t v35 = v37;
  *(unsigned char *)(v35 + 8) = (_BYTE)v36;
  sub_10018F6D8(v38, v39);
  uint64_t v40 = a3[11];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v43 = *v42;
  LOBYTE(v42) = *((unsigned char *)v42 + 8);
  uint64_t v44 = *(void *)v41;
  char v45 = *(unsigned char *)(v41 + 8);
  *(void *)uint64_t v41 = v43;
  *(unsigned char *)(v41 + 8) = (_BYTE)v42;
  sub_10018F6D8(v44, v45);
  uint64_t v46 = a3[12];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = (uint64_t *)(a2 + v46);
  uint64_t v49 = *v48;
  LOBYTE(v48) = *((unsigned char *)v48 + 8);
  uint64_t v50 = *(void *)v47;
  char v51 = *(unsigned char *)(v47 + 8);
  *(void *)uint64_t v47 = v49;
  *(unsigned char *)(v47 + 8) = (_BYTE)v48;
  sub_10018F6D8(v50, v51);
  uint64_t v52 = a3[13];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  char v55 = *(unsigned char *)(v54 + 32);
  uint64_t v56 = *(void *)v53;
  uint64_t v57 = *(void *)(v53 + 8);
  uint64_t v58 = *(void *)(v53 + 16);
  uint64_t v59 = *(void *)(v53 + 24);
  char v60 = *(unsigned char *)(v53 + 32);
  long long v61 = *(_OWORD *)(v54 + 16);
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
  *(_OWORD *)(v53 + 16) = v61;
  *(unsigned char *)(v53 + 32) = v55;
  sub_100191934(v56, v57, v58, v59, v60);
  uint64_t v62 = a3[14];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = (uint64_t *)(a2 + v62);
  uint64_t v65 = *v64;
  LOBYTE(v64) = *((unsigned char *)v64 + 8);
  uint64_t v66 = *(void *)v63;
  char v67 = *(unsigned char *)(v63 + 8);
  *(void *)uint64_t v63 = v65;
  *(unsigned char *)(v63 + 8) = (_BYTE)v64;
  sub_10018F6D8(v66, v67);
  uint64_t v68 = a3[15];
  uint64_t v69 = (void *)(a1 + v68);
  long long v70 = (uint64_t *)(a2 + v68);
  uint64_t v72 = *v70;
  uint64_t v71 = v70[1];
  *uint64_t v69 = v72;
  v69[1] = v71;
  swift_release();
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_release();
  uint64_t v73 = a3[17];
  uint64_t v74 = a1 + v73;
  uint64_t v75 = a2 + v73;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v73);
  long long v76 = *(_OWORD *)(v75 + 16);
  *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
  *(_OWORD *)(v74 + 16) = v76;
  *(void *)(v74 + 32) = *(void *)(v75 + 32);
  uint64_t v77 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v78 = a1 + v77;
  uint64_t v79 = *(void *)(a2 + v77 + 8);
  *(void *)(a1 + v77) = *(void *)(a2 + v77);
  swift_unknownObjectRelease();
  *(void *)(v78 + 8) = v79;
  uint64_t v80 = a3[20];
  uint64_t v81 = a1 + v80;
  uint64_t v82 = a2 + v80;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v80);
  long long v83 = *(_OWORD *)(v82 + 16);
  *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
  *(_OWORD *)(v81 + 16) = v83;
  *(void *)(v81 + 32) = *(void *)(v82 + 32);
  uint64_t v84 = a3[21];
  uint64_t v85 = a1 + v84;
  uint64_t v86 = a2 + v84;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v84);
  long long v87 = *(_OWORD *)(v86 + 16);
  *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
  *(_OWORD *)(v85 + 16) = v87;
  *(void *)(v85 + 32) = *(void *)(v86 + 32);
  uint64_t v88 = a3[22];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  uint64_t v91 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 40))(v89, v90, v91);
  uint64_t v92 = a3[23];
  uint64_t v93 = a1 + v92;
  uint64_t v94 = (uint64_t *)(a2 + v92);
  uint64_t v95 = *v94;
  LOBYTE(v94) = *((unsigned char *)v94 + 8);
  *(void *)uint64_t v93 = v95;
  *(unsigned char *)(v93 + 8) = (_BYTE)v94;
  swift_release();
  uint64_t v96 = a3[24];
  uint64_t v97 = a1 + v96;
  uint64_t v98 = a2 + v96;
  char v99 = *(unsigned char *)(v98 + 48);
  uint64_t v100 = *(void *)v97;
  uint64_t v101 = *(void *)(v97 + 8);
  uint64_t v102 = *(void *)(v97 + 16);
  uint64_t v103 = *(void *)(v97 + 24);
  uint64_t v104 = *(void *)(v97 + 32);
  uint64_t v105 = *(void *)(v97 + 40);
  char v106 = *(unsigned char *)(v97 + 48);
  long long v107 = *(_OWORD *)(v98 + 16);
  *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
  *(_OWORD *)(v97 + 16) = v107;
  *(_OWORD *)(v97 + 32) = *(_OWORD *)(v98 + 32);
  *(unsigned char *)(v97 + 48) = v99;
  sub_10014DC00(v100, v101, v102, v103, v104, v105, v106);
  uint64_t v108 = a3[25];
  uint64_t v109 = a1 + v108;
  uint64_t v110 = a2 + v108;
  *(unsigned char *)uint64_t v109 = *(unsigned char *)v110;
  *(void *)(v109 + 8) = *(void *)(v110 + 8);
  swift_release();
  uint64_t v111 = a3[26];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  char v114 = *(unsigned char *)(v113 + 16);
  *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
  *(unsigned char *)(v112 + 16) = v114;
  sub_10018F6E4();
  uint64_t v115 = a3[27];
  uint64_t v116 = *(void **)(a1 + v115);
  *(void *)(a1 + v115) = *(void *)(a2 + v115);

  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  swift_release();
  return a1;
}

uint64_t sub_1006F2EF8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    sub_10018AF04();
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v8 + 84) == v3)
    {
      uint64_t v7 = a3[8];
    }
    else
    {
      sub_10017DF08((uint64_t *)&unk_100EAA540);
      sub_100162F30();
      if (*(_DWORD *)(v9 + 84) == v3)
      {
        uint64_t v7 = a3[9];
      }
      else
      {
        if (v3 == 0x7FFFFFFF) {
          return sub_100163020(*(void *)(v4 + a3[15] + 8));
        }
        type metadata accessor for Text.Measurements();
        uint64_t v7 = a3[22];
      }
    }
  }
  uint64_t v11 = sub_10017F118(v7);

  return _s7Weather24LocationCompositionStateOwet_0(v11, v12, v13);
}

void sub_1006F2FE8()
{
  sub_100150288();
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    sub_100152410();
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v5 + 84) != v3)
    {
      sub_10017DF08((uint64_t *)&unk_100EAA540);
      sub_100162F30();
      if (*(_DWORD *)(v6 + 84) != v3)
      {
        if (v3 == 0x7FFFFFFF)
        {
          *(void *)(v1 + *(int *)(v2 + 60) + 8) = (v0 - 1);
          return;
        }
        type metadata accessor for Text.Measurements();
      }
    }
  }
  sub_1001650E4();

  _s7Weather24LocationCompositionStateOwst_0(v7, v8, v9, v10);
}

uint64_t sub_1006F30E0()
{
  uint64_t v0 = sub_1001C0CD0();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F310C(unsigned __int8 *a1)
{
  return sub_10029A150(*a1);
}

uint64_t sub_1006F3134(unsigned __int8 *a1)
{
  return sub_10029A150(*a1);
}

void *sub_1006F3164@<X0>(void *a1@<X8>)
{
  sub_10019C1F0((uint64_t)__src);
  return memcpy(a1, __src, 0x48uLL);
}

uint64_t sub_1006F31A8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_10011C058(a1, a2, a3, a4, a5, a6, a7, a8, v9, __src[0]);
  return sub_100074B88(__src);
}

void sub_1006F31E0(double *a1@<X8>)
{
  *a1 = sub_1008E40E4();
}

uint64_t sub_1006F320C()
{
  return sub_1008E4120();
}

uint64_t sub_1006F3234()
{
  uint64_t v0 = EnvironmentValues.accessibilitySwitchControlEnabled.getter();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F3260()
{
  uint64_t v0 = EnvironmentValues.accessibilityEnabled.getter();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F328C()
{
  return EnvironmentValues.accessibilityEnabled.setter();
}

uint64_t sub_1006F32B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void (*)(void))__chkstk_darwin(v6);
  uint64_t v11 = (char *)&v14 - v10;
  v9();
  sub_100121584((uint64_t)v8, a2, (uint64_t)v11);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a2);
  sub_100121584((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a2);
}

uint64_t sub_1006F33E8()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1006F340C()
{
  sub_100127C8C();
  type metadata accessor for Image.Scale();
  sub_10017C83C();
  __chkstk_darwin(v1);
  int v3 = sub_10019B5D4(v2, v6);
  v4(v3, v0);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_1006F3494(void *a1)
{
  return sub_1006E9B90(a1);
}

BOOL sub_1006F349C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_1006E9CDC(a1, *a2);
}

uint64_t sub_1006F34C4(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  return sub_1006E9C78(a1, a2, a3, *a4, a5, a6);
}

uint64_t sub_1006F34CC(void *a1)
{
  return sub_1006E9C04(a1);
}

BOOL sub_1006F34D4(uint64_t a1, unsigned __int8 *a2)
{
  return sub_1006E9CDC(a1, *a2);
}

uint64_t sub_1006F34FC()
{
  return sub_100199A24();
}

uint64_t sub_1006F3520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10019CE9C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for DisplayMetrics, (uint64_t)type metadata accessor for DisplayMetrics, (uint64_t (*)(char *))sub_1001CB24C);
}

uint64_t sub_1006F3580()
{
  uint64_t v0 = EnvironmentValues.accessibilityVoiceOverEnabled.getter();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F35AC()
{
  uint64_t v0 = EnvironmentValues.accessibilitySwitchControlEnabled.getter();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F35E0()
{
  uint64_t v0 = sub_10019C008();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F3618()
{
  return sub_1001AEA00();
}

uint64_t sub_1006F363C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10019CE9C(a1, a2, a3, a4, type metadata accessor for ContentStatusBannerPresentationMetrics, (uint64_t)type metadata accessor for ContentStatusBannerPresentationMetrics, (uint64_t (*)(char *))sub_1001AE938);
}

uint64_t sub_1006F3690()
{
  sub_100162EA0();
  uint64_t v1 = (int *)type metadata accessor for MeasuredLocationViewerView(0);
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  sub_100179EF0();
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v0 + v3;
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_100163380() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100179DC0();
    sub_100162F0C();
    v10();
  }
  else
  {
    swift_release();
  }
  unint64_t v11 = v3 + v5 + v8;
  sub_10014D82C(*(void *)(v9 + v1[7]), *(unsigned __int8 *)(v9 + v1[7] + 8), *(unsigned char *)(v9 + v1[7] + 9));
  sub_10017DF08(&qword_100E63BC8);
  if (sub_100163380() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v12();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_100163380() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_1001632AC(v13))
    {
      sub_100162880();
      sub_100162F0C();
      v14();
    }
  }
  else
  {
    swift_release();
  }
  sub_10017B358(v1[10]);
  sub_10017B358(v1[11]);
  sub_10017B358(v1[12]);
  uint64_t v15 = v9 + v1[13];
  sub_100191934(*(void *)v15, *(void *)(v15 + 8), *(void *)(v15 + 16), *(void *)(v15 + 24), *(unsigned char *)(v15 + 32));
  sub_10017B358(v1[14]);
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v9 + v1[17]);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v9 + v1[20]);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v9 + v1[21]);
  type metadata accessor for Text.Measurements();
  sub_100179DC0();
  sub_100162F0C();
  v16();
  swift_release();
  uint64_t v17 = v9 + v1[24];
  sub_10014DC00(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(unsigned char *)(v17 + 48));
  swift_release();
  sub_10018F6E4();

  swift_release();
  unint64_t v18 = v0 + (v11 & ~v8) + *(int *)(v6 + 20);
  uint64_t v19 = type metadata accessor for ContentStatusBanner();
  if (!sub_100181EF0(v19))
  {
    if (*(void *)(v18 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = type metadata accessor for Date();
    if (!sub_100181EF0(v20))
    {
      sub_100162880();
      uint64_t v21 = sub_1001CA884();
      v22(v21);
    }
  }
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_1006F3A08@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v5 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_100164920(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  sub_1001627C0(v10);
  uint64_t v12 = v2 + ((v7 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  return sub_1006EA9C4(v2 + v7, v12, a1, a2);
}

void sub_1006F3AA8(double *a1@<X8>)
{
  *a1 = sub_100348788();
}

uint64_t sub_1006F3AD4()
{
  return sub_1003487C4();
}

uint64_t sub_1006F3AFC()
{
  uint64_t v0 = sub_1001AE918();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F3B28(unsigned __int8 *a1)
{
  return sub_1001AE8CC(*a1);
}

uint64_t sub_1006F3B50@<X0>(uint64_t a1@<X8>)
{
  return sub_1006ECB38(a1);
}

uint64_t sub_1006F3B58()
{
  sub_10010977C();
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_100179EF0();
  swift_release();
  sub_100188768();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100179DC0();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_10019D788();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }
  sub_100109404();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v2))
    {
      sub_100162880();
      sub_100162F0C();
      v3();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001801E4();
  sub_1001A6918();
  sub_100186B00();
  sub_100183E00();
  sub_100179DC0();
  sub_100162F0C();
  v4();
  sub_1001D2520();
  sub_100163804();
  sub_1001A17C4();
  sub_100184748();
  sub_100162714();
  return swift_deallocObject();
}

void sub_1006F3D30()
{
  uint64_t v1 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_100164920(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unsigned __int8 v7 = *(unsigned char *)(v0 + v6 + *(void *)(v5 + 64));

  sub_1006ECF0C(v0 + v6, v7);
}

uint64_t sub_1006F3D98()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001627C0(v0);
  uint64_t v1 = (unsigned char *)sub_1001891BC();

  return sub_1006ED8B8(v1, v2, v3, v4);
}

uint64_t sub_1006F3DDC()
{
  return sub_10019A4B8();
}

uint64_t sub_1006F3E04()
{
  sub_100162EA0();
  uint64_t v1 = (int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_100179EF0();
  uint64_t v3 = v0 + v1[7] + ((v2 + 16) & ~v2);
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  if (!sub_100129098(v4))
  {
    if (*(void *)(v3 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v3 + *(int *)(((v2 + 16) & ~v2) + 0x18);
    uint64_t v6 = type metadata accessor for Date();
    if (!sub_100129098(v6))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, (v2 + 16) & ~v2);
    }
  }
  swift_release();
  sub_100188768();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100179DC0();
    sub_100162F0C();
    v8();
  }
  else
  {
    swift_release();
  }
  sub_10019D788();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100179DC0();
    sub_100162F0C();
    v9();
  }
  else
  {
    swift_release();
  }
  sub_100109404();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v10))
    {
      sub_100162880();
      sub_100162F0C();
      v11();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001801E4();
  sub_1001A6918();
  sub_100186B00();
  sub_100183E00();
  sub_100179DC0();
  sub_100162F0C();
  v12();
  sub_1001D2520();
  sub_100163804();
  sub_1001A17C4();
  sub_100184748();
  sub_1001093E8();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_1006F40A0()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1006F40C8@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.displayScale.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1006F40F4()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_1006F4120()
{
  return sub_1006F4194();
}

uint64_t sub_1006F4148()
{
  return sub_1006FC570((uint64_t)type metadata accessor for MeasuredLocationViewerView, sub_1006EC9D0);
}

uint64_t sub_1006F417C()
{
  return sub_1006F4194();
}

uint64_t sub_1006F4194()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001627C0(v0);
  sub_1001A4B78(*(unsigned __int8 *)(v1 + 80));
  return sub_1006ED5E8();
}

uint64_t sub_1006F41CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1006ED628(a1);
}

unint64_t sub_1006F41D4()
{
  unint64_t result = qword_100E8E510;
  if (!qword_100E8E510)
  {
    sub_10018C6DC(&qword_100E8E508);
    sub_1002828E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E510);
  }
  return result;
}

uint64_t sub_1006F4254()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001627C0(v0);
  sub_1001891A4();

  return sub_1006ED9AC(v1);
}

uint64_t sub_1006F429C()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_1001891BC();

  return sub_1006EDB04(v1, v2, v3, v4);
}

void sub_1006F42E0()
{
  sub_1006ECAD8(*(void *)(v0 + 16));
}

uint64_t sub_1006F42E8()
{
  uint64_t v0 = sub_1001AEB70();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F4314()
{
  return sub_1003D93C0();
}

uint64_t sub_1006F433C()
{
  uint64_t v0 = EnvironmentValues.accessibilityEnabled.getter();
  return sub_100182AB8(v0);
}

uint64_t sub_1006F4368()
{
  return EnvironmentValues.accessibilityEnabled.setter();
}

unint64_t sub_1006F4398()
{
  unint64_t result = qword_100E8E560;
  if (!qword_100E8E560)
  {
    sub_10018C6DC(&qword_100E8E548);
    sub_1001CB570((uint64_t)&unk_100E8E290);
    sub_10024D5E4((uint64_t)&unk_100EAAEC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E560);
  }
  return result;
}

uint64_t sub_1006F4474()
{
  return sub_1006FBB34((uint64_t)type metadata accessor for MeasuredLocationViewerView, (uint64_t (*)(void))sub_1006EC31C);
}

uint64_t sub_1006F44A4()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001627C0(v0);
  sub_10017238C();

  return sub_1006EC55C();
}

uint64_t sub_1006F44E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1006F4520(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006F4550@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10019CD60();
  *a1 = result;
  return result;
}

uint64_t sub_1006F457C()
{
  return sub_10019CCF4();
}

uint64_t sub_1006F45A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1006F4610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1006F4674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1006F46D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1006F473C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1006F47A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F47B4);
}

uint64_t sub_1006F47B4()
{
  uint64_t v2 = sub_100182528();

  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_1006F47F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F4804);
}

uint64_t sub_1006F4804()
{
  sub_100182528();
  sub_1001650E4();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

ValueMetadata *_s52ContentStatusBannerPresentationMetricsEnvironmentKeyVMa()
{
  return &_s52ContentStatusBannerPresentationMetricsEnvironmentKeyVN;
}

uint64_t *sub_1006F4850(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    uint64_t *v4 = v7;
    *((unsigned char *)v4 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)v4 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (uint64_t *)((char *)v4 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1006F4A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1006F4B6C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_10017DF4C(a1 + v10, (uint64_t *)&unk_100EAA560);
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t *)((char *)a2 + v16);
  *(void *)(a1 + v16) = *v18;
  swift_release();
  *(void *)(v17 + 8) = v18[1];
  swift_release();
  return a1;
}

uint64_t sub_1006F4D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F4D20);
}

uint64_t sub_1006F4D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001097B4();
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) != v3) {
    return sub_100163020(*(void *)(v4 + *(int *)(a3 + 24)));
  }
  uint64_t v7 = sub_10017F118(*(int *)(a3 + 20));

  return _s7Weather24LocationCompositionStateOwet_0(v7, v8, v9);
}

uint64_t sub_1006F4DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F4DB4);
}

void sub_1006F4DB4()
{
  sub_100150288();
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
  }
}

uint64_t *assignWithTake for LocationViewerViewVFXEnvironment(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1006F4E54(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_10018F6E4);
}

uint64_t *sub_1006F4E54(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t *sub_1006F4EA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    uint64_t v13 = *((void *)v10 + 2);
    uint64_t v14 = *((void *)v10 + 3);
    uint64_t v15 = *((void *)v10 + 4);
    uint64_t v16 = *((void *)v10 + 5);
    uint64_t v17 = *((void *)v10 + 6);
    uint64_t v18 = *((void *)v10 + 7);
    uint64_t v21 = *((void *)v10 + 8);
    char v22 = v10[72];
    sub_1001910C8(*(void *)v10, v12, v13, v14, v15, v16, v17, v18, v21, v22);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    *((void *)v9 + 2) = v13;
    *((void *)v9 + 3) = v14;
    *((void *)v9 + 4) = v15;
    *((void *)v9 + 5) = v16;
    *((void *)v9 + 6) = v17;
    *((void *)v9 + 7) = v18;
    *((void *)v9 + 8) = v21;
    v9[72] = v22;
  }
  return a1;
}

uint64_t sub_1006F4FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x49uLL);
  return a1;
}

uint64_t sub_1006F507C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 64);
  char v11 = *(unsigned char *)(v9 + 72);
  uint64_t v12 = *(void *)v8;
  uint64_t v13 = *(void *)(v8 + 8);
  uint64_t v14 = *(void *)(v8 + 16);
  uint64_t v15 = *(void *)(v8 + 24);
  uint64_t v16 = *(void *)(v8 + 32);
  uint64_t v17 = *(void *)(v8 + 40);
  uint64_t v18 = *(void *)(v8 + 48);
  uint64_t v19 = *(void *)(v8 + 56);
  uint64_t v20 = *(void *)(v8 + 64);
  char v21 = *(unsigned char *)(v8 + 72);
  long long v22 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v22;
  long long v23 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v23;
  *(void *)(v8 + 64) = v10;
  *(unsigned char *)(v8 + 72) = v11;
  sub_10018CCC4(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t sub_1006F5144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F5158);
}

uint64_t sub_1006F5158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100127C8C();
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_1001790C4(*(unsigned __int8 *)(v3 + *(int *)(a3 + 20) + 72));
  }

  return _s7Weather24LocationCompositionStateOwet_0(v3, a2, v6);
}

uint64_t sub_1006F51D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F51EC);
}

void sub_1006F51EC(uint64_t a1, char a2, int a3, uint64_t a4)
{
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 72) = -a2;
  }
}

uint64_t *sub_1006F5274(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    uint64_t v8 = type metadata accessor for ContentStatusBanner();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = sub_10017DF08(&qword_100E63A10);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      *(unsigned char *)uint64_t v6 = *(unsigned char *)v7;
      uint64_t v11 = v7 + 1;
      unint64_t v12 = v7[2];
      if (v12 >= 2)
      {
        v6[1] = *v11;
        v6[2] = v12;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v6 + 1) = *(_OWORD *)v11;
      }
      uint64_t v13 = *(int *)(v8 + 24);
      uint64_t v14 = (char *)v6 + v13;
      uint64_t v15 = (char *)v7 + v13;
      uint64_t v16 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

_OWORD *sub_1006F5448(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08(&qword_100E63A10);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    unsigned char *v5 = *v6;
    *(_OWORD *)(v5 + 8) = *(_OWORD *)(v6 + 8);
    uint64_t v9 = *(int *)(v7 + 24);
    uint64_t v10 = &v5[v9];
    uint64_t v11 = &v6[v9];
    uint64_t v12 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_1006F55A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_10017DF08(&qword_100E63A10);

  return _s7Weather24LocationCompositionStateOwet_0(v4, a2, v5);
}

uint64_t sub_1006F55F8()
{
  sub_10017DF08(&qword_100E63A10);
  sub_1001650E4();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

void *sub_1006F5648(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v4[5] = a2[5];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for Location.Identifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      v13[16] = *(unsigned char *)(v14 + 16);
      v13[17] = *(unsigned char *)(v14 + 17);
      v13[18] = *(unsigned char *)(v14 + 18);
      uint64_t v15 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v16 = &v13[v15];
      uint64_t v17 = v14 + v15;
      uint64_t v18 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *(void *)uint64_t v13 = *(void *)v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[9];
    uint64_t v38 = a2;
    char v39 = a3;
    char v21 = (char *)v4 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *(void *)(v22 + 8);
    uint64_t v25 = *(void *)(v22 + 16);
    uint64_t v26 = *(void *)(v22 + 24);
    uint64_t v27 = *(void *)(v22 + 32);
    uint64_t v28 = *(void *)(v22 + 40);
    uint64_t v30 = *(void *)(v22 + 48);
    uint64_t v29 = *(void *)(v22 + 56);
    uint64_t v36 = *(void *)(v22 + 64);
    char v37 = *(unsigned char *)(v22 + 72);
    sub_1001910C8(*(void *)v22, v24, v25, v26, v27, v28, v30, v29, v36, v37);
    *(void *)char v21 = v23;
    *((void *)v21 + 1) = v24;
    *((void *)v21 + 2) = v25;
    *((void *)v21 + 3) = v26;
    *((void *)v21 + 4) = v27;
    *((void *)v21 + 5) = v28;
    *((void *)v21 + 6) = v30;
    *((void *)v21 + 7) = v29;
    *((void *)v21 + 8) = v36;
    v21[72] = v37;
    uint64_t v31 = v39[10];
    uint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (uint64_t)v38 + v31;
    uint64_t v34 = *(void *)v33;
    LOBYTE(v29) = *(unsigned char *)(v33 + 8);
    sub_100195B7C(*(void *)v33, v29);
    *(void *)uint64_t v32 = v34;
    v32[8] = v29;
  }
  return v4;
}

uint64_t sub_1006F58EC(uint64_t a1, int *a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[9];
  sub_10018CCC4(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(unsigned char *)(v9 + 72));
  uint64_t v10 = a1 + a2[10];
  uint64_t v11 = *(void *)v10;
  char v12 = *(unsigned char *)(v10 + 8);

  return sub_10018F6D8(v11, v12);
}

uint64_t sub_1006F5A2C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
    *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
    *(unsigned char *)(v12 + 18) = *(unsigned char *)(v13 + 18);
    uint64_t v14 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v15 = v12 + v14;
    uint64_t v16 = v13 + v14;
    uint64_t v17 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *(void *)uint64_t v12 = *(void *)v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a3[9];
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  uint64_t v23 = *(void *)(v20 + 16);
  uint64_t v24 = *(void *)(v20 + 24);
  uint64_t v25 = *(void *)(v20 + 32);
  uint64_t v26 = *(void *)(v20 + 40);
  uint64_t v28 = *(void *)(v20 + 48);
  uint64_t v27 = *(void *)(v20 + 56);
  uint64_t v36 = a1;
  uint64_t v29 = *(void *)(v20 + 64);
  char v35 = *(unsigned char *)(v20 + 72);
  sub_1001910C8(*(void *)v20, v22, v23, v24, v25, v26, v28, v27, v29, v35);
  *(void *)uint64_t v19 = v21;
  *(void *)(v19 + 8) = v22;
  *(void *)(v19 + 16) = v23;
  *(void *)(v19 + 24) = v24;
  *(void *)(v19 + 32) = v25;
  *(void *)(v19 + 40) = v26;
  *(void *)(v19 + 48) = v28;
  *(void *)(v19 + 56) = v27;
  *(void *)(v19 + 64) = v29;
  *(unsigned char *)(v19 + 72) = v35;
  uint64_t v30 = v38[10];
  uint64_t v31 = v36 + v30;
  uint64_t v32 = v37 + v30;
  uint64_t v33 = *(void *)v32;
  LOBYTE(v27) = *(unsigned char *)(v32 + 8);
  sub_100195B7C(*(void *)v32, v27);
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = v27;
  return v36;
}

uint64_t *sub_1006F5C78(uint64_t *a1, uint64_t *a2, int *a3)
{
  sub_1000C1E18(a1, a2);
  a1[5] = a2[5];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  if (a1 != a2)
  {
    uint64_t v10 = a3[8];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    sub_10017DF4C((uint64_t)a1 + v10, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *((void *)v11 + 1) = *((void *)v12 + 1);
      v11[16] = v12[16];
      v11[17] = v12[17];
      v11[18] = v12[18];
      uint64_t v13 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v14 = &v11[v13];
      uint64_t v15 = &v12[v13];
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = a3[9];
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  uint64_t v21 = *((void *)v19 + 1);
  uint64_t v22 = *((void *)v19 + 2);
  uint64_t v23 = *((void *)v19 + 3);
  uint64_t v24 = *((void *)v19 + 4);
  uint64_t v25 = *((void *)v19 + 5);
  uint64_t v27 = *((void *)v19 + 6);
  uint64_t v26 = *((void *)v19 + 7);
  uint64_t v47 = a1;
  uint64_t v28 = *((void *)v19 + 8);
  char v46 = v19[72];
  sub_1001910C8(*(void *)v19, v21, v22, v23, v24, v25, v27, v26, v28, v46);
  uint64_t v29 = *(void *)v18;
  uint64_t v30 = *((void *)v18 + 1);
  uint64_t v31 = *((void *)v18 + 2);
  uint64_t v32 = *((void *)v18 + 3);
  uint64_t v33 = *((void *)v18 + 4);
  uint64_t v34 = *((void *)v18 + 5);
  uint64_t v35 = *((void *)v18 + 6);
  uint64_t v36 = *((void *)v18 + 7);
  uint64_t v37 = *((void *)v18 + 8);
  char v38 = v18[72];
  *(void *)uint64_t v18 = v20;
  *((void *)v18 + 1) = v21;
  *((void *)v18 + 2) = v22;
  *((void *)v18 + 3) = v23;
  *((void *)v18 + 4) = v24;
  *((void *)v18 + 5) = v25;
  *((void *)v18 + 6) = v27;
  *((void *)v18 + 7) = v26;
  *((void *)v18 + 8) = v28;
  v18[72] = v46;
  sub_10018CCC4(v29, v30, v31, v32, v33, v34, v35, v36, v37, v38);
  uint64_t v39 = v49[10];
  uint64_t v40 = (char *)v47 + v39;
  uint64_t v41 = (char *)v48 + v39;
  uint64_t v42 = *(void *)v41;
  LOBYTE(v26) = v41[8];
  sub_100195B7C(*(void *)v41, v26);
  uint64_t v43 = *(void *)v40;
  char v44 = v40[8];
  *(void *)uint64_t v40 = v42;
  v40[8] = v26;
  sub_10018F6D8(v43, v44);
  return v47;
}

uint64_t sub_1006F5EE8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    v13[16] = v14[16];
    v13[17] = v14[17];
    v13[18] = v14[18];
    uint64_t v16 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v17 = &v13[v16];
    uint64_t v18 = &v14[v16];
    uint64_t v19 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  memcpy((void *)(a1 + a3[9]), (const void *)(a2 + a3[9]), 0x49uLL);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  return a1;
}

uint64_t sub_1006F6090(uint64_t a1, uint64_t a2, int *a3)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  if (a1 != a2)
  {
    uint64_t v11 = a3[8];
    uint64_t v12 = (char *)(a1 + v11);
    uint64_t v13 = (char *)(a2 + v11);
    sub_10017DF4C(a1 + v11, &qword_100E63BD0);
    uint64_t v14 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      v12[16] = v13[16];
      v12[17] = v13[17];
      v12[18] = v13[18];
      uint64_t v15 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v16 = &v12[v15];
      uint64_t v17 = &v13[v15];
      uint64_t v18 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(v21 + 64);
  char v23 = *(unsigned char *)(v21 + 72);
  uint64_t v24 = *(void *)v20;
  uint64_t v25 = *(void *)(v20 + 8);
  uint64_t v26 = *(void *)(v20 + 16);
  uint64_t v27 = *(void *)(v20 + 24);
  uint64_t v28 = *(void *)(v20 + 32);
  uint64_t v29 = *(void *)(v20 + 40);
  uint64_t v30 = *(void *)(v20 + 48);
  uint64_t v31 = *(void *)(v20 + 56);
  uint64_t v32 = *(void *)(v20 + 64);
  char v33 = *(unsigned char *)(v20 + 72);
  long long v34 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v34;
  long long v35 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v35;
  *(void *)(v20 + 64) = v22;
  *(unsigned char *)(v20 + 72) = v23;
  sub_10018CCC4(v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v36 = a3[10];
  uint64_t v37 = a1 + v36;
  char v38 = (uint64_t *)(a2 + v36);
  uint64_t v39 = *v38;
  LOBYTE(v38) = *((unsigned char *)v38 + 8);
  uint64_t v40 = *(void *)v37;
  char v41 = *(unsigned char *)(v37 + 8);
  *(void *)uint64_t v37 = v39;
  *(unsigned char *)(v37 + 8) = (_BYTE)v38;
  sub_10018F6D8(v40, v41);
  return a1;
}

uint64_t sub_1006F62B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F62C4);
}

uint64_t sub_1006F62C4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 24));
  }
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    sub_10018AF04();
  }
  else
  {
    sub_10017DF08(&qword_100E63BF8);
    uint64_t v7 = *(int *)(a3 + 32);
  }
  uint64_t v8 = sub_10017F118(v7);

  return _s7Weather24LocationCompositionStateOwet_0(v8, v9, v10);
}

uint64_t sub_1006F6360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F6374);
}

void sub_1006F6374()
{
  sub_1001097B4();
  if (v2 == 0x7FFFFFFF)
  {
    *(void *)(v1 + 24) = (v0 - 1);
  }
  else
  {
    int v3 = v2;
    type metadata accessor for Location.Identifier();
    sub_100162F30();
    if (*(_DWORD *)(v4 + 84) == v3) {
      sub_100152410();
    }
    else {
      sub_10017DF08(&qword_100E63BF8);
    }
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
}

uint64_t *sub_1006F6414(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v106 = *(void *)(a3 + 16);
  uint64_t v103 = *(void *)(v106 - 8);
  int v3 = *(_DWORD *)(v103 + 80);
  uint64_t v4 = v3;
  uint64_t v104 = *(void *)(a3 + 24);
  uint64_t v102 = *(void *)(v104 - 8);
  int v5 = *(_DWORD *)(v102 + 80);
  uint64_t v101 = *(void *)(v103 + 64);
  uint64_t v6 = *(void *)(v102 + 64);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v92 = v8;
  uint64_t v10 = v9;
  uint64_t v11 = v9 | 7;
  uint64_t v100 = v6;
  unint64_t v12 = (v11 + v6 + ((v101 + v5 + ((v4 + 16) & ~v4)) & ~(unint64_t)v5)) & ~v11;
  uint64_t v97 = v7;
  uint64_t v98 = v9 + 16;
  unsigned int v99 = *(_DWORD *)(v8 + 84);
  uint64_t v96 = v9 + 24;
  unint64_t v13 = v96 & ~(unint64_t)v9;
  size_t v14 = *(void *)(v8 + 64);
  if (!v99) {
    ++v14;
  }
  size_t v94 = v14;
  unint64_t v95 = v96 & ~(unint64_t)v9;
  size_t __n = v13 + v14;
  unint64_t v15 = v13 + v14 + (v98 & ~v11);
  if (v15 <= 8) {
    uint64_t v16 = 8;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = type metadata accessor for DynamicTypeSize();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = (v16 + (v19 | 7) + 1 + v12) & ~(v19 | 7);
  if (((v19 + 19) & ~v19) + *(void *)(v18 + 64) <= 8) {
    uint64_t v21 = 8;
  }
  else {
    uint64_t v21 = ((v19 + 19) & ~v19) + *(void *)(v18 + 64);
  }
  unint64_t v22 = ((v20 + v21 + 1 + 87) & 0xFFFFFFFFFFFFFFF8) + 33;
  unint64_t v23 = v5 | (unint64_t)v3 | v9 | v19;
  if (v23 > 7 || ((v5 | v3 | v9 | *(_DWORD *)(v18 + 80)) & 0x100000) != 0 || v22 > 0x18)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    uint64_t v27 = v26 + ((v23 & 0xF8 ^ 0x1F8) & (v23 + 16));
    swift_retain();
    return (uint64_t *)v27;
  }
  uint64_t v91 = *(_DWORD *)(v18 + 80);
  uint64_t v28 = v19 | 7;
  uint64_t v89 = v17;
  uint64_t v90 = v16 + (v19 | 7) + 1;
  uint64_t v88 = *(void *)(v17 - 8);
  uint64_t v29 = ~v11;
  *a1 = *a2;
  uint64_t v30 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  uint64_t v32 = ((unint64_t)v30 + v4 + 8) & ~v4;
  uint64_t v33 = ((unint64_t)v31 + v4 + 8) & ~v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v32, v33, v106);
  unint64_t v34 = (v32 + v101 + v5) & ~(unint64_t)v5;
  unint64_t v35 = (v33 + v101 + v5) & ~(unint64_t)v5;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v102 + 16))(v34, v35, v104);
  uint64_t v36 = (_OWORD *)((v34 + v100 + v11) & v29);
  uint64_t v37 = (unsigned __int8 *)((v35 + v100 + v11) & v29);
  unsigned int v38 = v37[v16];
  unsigned int v39 = v38 - 2;
  uint64_t v40 = v16;
  if (v38 < 2)
  {
    uint64_t v42 = v21 + 1;
  }
  else
  {
    if (v16 <= 3) {
      uint64_t v41 = v16;
    }
    else {
      uint64_t v41 = 4;
    }
    uint64_t v42 = v21 + 1;
    switch(v41)
    {
      case 1:
        int v43 = *v37;
        goto LABEL_28;
      case 2:
        int v43 = *(unsigned __int16 *)v37;
        goto LABEL_28;
      case 3:
        int v43 = *(unsigned __int16 *)v37 | (v37[2] << 16);
        goto LABEL_28;
      case 4:
        int v43 = *(_DWORD *)v37;
LABEL_28:
        if (v16 < 4) {
          unsigned int v38 = (v43 | (v39 << (8 * v16))) + 2;
        }
        else {
          unsigned int v38 = v43 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v44 = ~v28;
  if (v38 == 1)
  {
    uint64_t v45 = ~v10;
    *uint64_t v36 = *(_OWORD *)v37;
    char v46 = (unsigned char *)(((unint64_t)v36 + v98) & v29);
    uint64_t v47 = (unsigned char *)((unint64_t)&v37[v98] & v29);
    if (v99 > 0x7FFFFFFE)
    {
      if (_s7Weather24LocationCompositionStateOwet_0((unint64_t)&v47[v96] & v45, v99, v97) <= 1)
      {
LABEL_36:
        uint64_t v49 = v47 + 8;
        *char v46 = *v47;
        uint64_t v50 = v46 + 8;
        uint64_t v109 = v44;
        if (*(void *)(((unint64_t)&v37[v98] & v29) + 0x10) < 0xFFFFFFFFuLL)
        {
          *(_OWORD *)uint64_t v50 = *v49;
        }
        else
        {
          *(void *)uint64_t v50 = *(void *)v49;
          *((void *)v50 + 1) = *(void *)(((unint64_t)&v37[v98] & v29) + 0x10);
          swift_bridgeObjectRetain();
        }
        uint64_t v56 = (void *)((v96 + (((unint64_t)v36 + v98) & v29)) & v45);
        uint64_t v57 = (const void *)((unint64_t)&v47[v96] & v45);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v97))
        {
          size_t v55 = v94;
          memcpy(v56, v57, v94);
          uint64_t v52 = v91;
          unint64_t v54 = v95;
          uint64_t v53 = v98 & ~v11;
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v92 + 16))(v56, v57, v97);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v97);
          uint64_t v52 = v91;
          unint64_t v54 = v95;
          uint64_t v53 = v98 & ~v11;
          size_t v55 = v94;
        }
        uint64_t v51 = v90;
        uint64_t v44 = v109;
        goto LABEL_46;
      }
    }
    else
    {
      unint64_t v48 = *(void *)(((unint64_t)&v37[v98] & v29) + 0x10);
      if (v48 >= 0xFFFFFFFF) {
        LODWORD(v48) = -1;
      }
      if ((v48 + 1) < 3) {
        goto LABEL_36;
      }
    }
    memcpy(v46, v47, __n);
    uint64_t v51 = v90;
    uint64_t v52 = v91;
    unint64_t v54 = v95;
    uint64_t v53 = v98 & ~v11;
    size_t v55 = v94;
LABEL_46:
    unint64_t v58 = v53 + v54 + v55;
    if (v58 <= 8) {
      unint64_t v58 = 8;
    }
    *((unsigned char *)v36 + v58) = 1;
    goto LABEL_49;
  }
  *(void *)uint64_t v36 = *(void *)v37;
  *((unsigned char *)v36 + v40) = 0;
  swift_retain();
  uint64_t v51 = v90;
  uint64_t v52 = v91;
LABEL_49:
  uint64_t v59 = (void *)(((unint64_t)v36 + v51) & v44);
  char v60 = (unsigned __int8 *)((unint64_t)&v37[v51] & v44);
  unsigned int v61 = v60[v21];
  unsigned int v62 = v61 - 2;
  if (v61 >= 2)
  {
    if (v21 <= 3) {
      uint64_t v63 = v21;
    }
    else {
      uint64_t v63 = 4;
    }
    switch(v63)
    {
      case 1:
        int v64 = *v60;
        goto LABEL_58;
      case 2:
        int v64 = *(unsigned __int16 *)v60;
        goto LABEL_58;
      case 3:
        int v64 = *(unsigned __int16 *)((unint64_t)&v37[v51] & v44) | (*(unsigned __int8 *)(((unint64_t)&v37[v51] & v44)
                                                                                             + 2) << 16);
        goto LABEL_58;
      case 4:
        int v64 = *(_DWORD *)v60;
LABEL_58:
        int v65 = (v64 | (v62 << (8 * v21))) + 2;
        unsigned int v61 = v64 + 2;
        if (v21 < 4) {
          unsigned int v61 = v65;
        }
        break;
      default:
        break;
    }
  }
  void *v59 = *(void *)v60;
  if (v61 == 1)
  {
    unint64_t v66 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v67 = (unint64_t)(v60 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v66 = *(void *)v67;
    *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
    *(unsigned char *)(v66 + 9) = *(unsigned char *)(v67 + 9);
    *(unsigned char *)(v66 + 10) = *(unsigned char *)(v67 + 10);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v88 + 16))((v52 + 11 + v66) & ~v52, (v52 + 11 + v67) & ~v52, v89);
    char v68 = 1;
  }
  else
  {
    swift_retain();
    char v68 = 0;
  }
  *((unsigned char *)v59 + v21) = v68;
  uint64_t v69 = (char *)v59 + v42;
  long long v107 = (char *)v59 + v42;
  uint64_t v110 = &v60[v42];
  unint64_t v70 = (unint64_t)&v60[v42 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v71 = *(void *)v70;
  uint64_t v72 = *(void *)(v70 + 8);
  unint64_t v73 = (unint64_t)(v69 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v74 = *(void *)(v70 + 16);
  uint64_t v75 = *(void *)(v70 + 24);
  uint64_t v76 = *(void *)(v70 + 32);
  uint64_t v77 = *(void *)(v70 + 40);
  uint64_t v78 = *(void *)(v70 + 48);
  uint64_t v79 = *(void *)(v70 + 56);
  uint64_t v80 = *(void *)(v70 + 64);
  char v105 = *(unsigned char *)(v70 + 72);
  sub_1001910C8(*(void *)v70, v72, v74, v75, v76, v77, v78, v79, v80, v105);
  *(void *)unint64_t v73 = v71;
  *(void *)(v73 + 8) = v72;
  *(void *)(v73 + 16) = v74;
  *(void *)(v73 + 24) = v75;
  *(void *)(v73 + 32) = v76;
  *(void *)(v73 + 40) = v77;
  *(void *)(v73 + 48) = v78;
  *(void *)(v73 + 56) = v79;
  *(void *)(v73 + 64) = v80;
  *(unsigned char *)(v73 + 72) = v105;
  unint64_t v81 = (unint64_t)(v107 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v82 = (unint64_t)(v110 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v83 = *(void *)v82;
  uint64_t v84 = *(void *)(v82 + 8);
  uint64_t v85 = *(void *)(v82 + 16);
  uint64_t v86 = *(void *)(v82 + 24);
  LOBYTE(v76) = *(unsigned char *)(v82 + 32);
  sub_100190CD4(*(void *)v82, v84, v85, v86, v76);
  *(void *)unint64_t v81 = v83;
  *(void *)(v81 + 8) = v84;
  *(void *)(v81 + 16) = v85;
  *(void *)(v81 + 24) = v86;
  *(unsigned char *)(v81 + 32) = v76;
  return a1;
}

uint64_t sub_1006F6BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v5);
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v5 + *(void *)(v4 + 56) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v8);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v8 + v9 + (v12 | 7)) & ~(v12 | 7);
  uint64_t v14 = *(unsigned int *)(v11 + 84);
  uint64_t v15 = v12 + 24;
  uint64_t v16 = *(void *)(v11 + 64);
  if (!v14) {
    ++v16;
  }
  unint64_t v17 = v16 + ((v12 + 24) & ~v12) + ((v12 + 16) & ~(v12 | 7));
  if (v17 <= 8) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = v17;
  }
  unsigned int v19 = *(unsigned __int8 *)(v13 + v18);
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *(unsigned __int8 *)v13;
        goto LABEL_15;
      case 2:
        int v22 = *(unsigned __int16 *)v13;
        goto LABEL_15;
      case 3:
        int v22 = *(unsigned __int16 *)v13 | (*(unsigned __int8 *)(v13 + 2) << 16);
        goto LABEL_15;
      case 4:
        int v22 = *(_DWORD *)v13;
LABEL_15:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 != 1)
  {
    swift_release();
    goto LABEL_29;
  }
  uint64_t v24 = ~v12;
  uint64_t v25 = (v12 + 16 + v13) & ~(v12 | 7);
  if (v14 > 0x7FFFFFFE)
  {
    if (_s7Weather24LocationCompositionStateOwet_0((v15 + v25) & v24, v14, v10) > 1) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(((v12 + 16 + v13) & ~(v12 | 7)) + 0x10);
  if (v26 >= 0xFFFFFFFF) {
    LODWORD(v26) = -1;
  }
  if ((v26 + 1) < 3)
  {
LABEL_25:
    if (*(void *)(v25 + 16) >= 0xFFFFFFFFuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = (v15 + v25) & v24;
    if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v27, v10);
    }
  }
LABEL_29:
  uint64_t v28 = type metadata accessor for DynamicTypeSize();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v31 = (v13 | 1) + v18 + (v30 | 7);
  uint64_t v32 = v31 & ~(v30 | 7);
  if (((v30 + 19) & (unint64_t)~v30) + *(void *)(v29 + 64) <= 8) {
    uint64_t v33 = 8;
  }
  else {
    uint64_t v33 = ((v30 + 19) & ~v30) + *(void *)(*(void *)(v28 - 8) + 64);
  }
  unsigned int v34 = *(unsigned __int8 *)(v32 + v33);
  unsigned int v35 = v34 - 2;
  if (v34 >= 2)
  {
    if (v33 <= 3) {
      uint64_t v36 = v33;
    }
    else {
      uint64_t v36 = 4;
    }
    switch(v36)
    {
      case 1:
        int v37 = *(unsigned __int8 *)v32;
        goto LABEL_41;
      case 2:
        int v37 = *(unsigned __int16 *)v32;
        goto LABEL_41;
      case 3:
        int v37 = *(unsigned __int16 *)v32 | (*(unsigned __int8 *)((v31 & ~(v30 | 7)) + 2) << 16);
        goto LABEL_41;
      case 4:
        int v37 = *(_DWORD *)v32;
LABEL_41:
        int v38 = (v37 | (v35 << (8 * v33))) + 2;
        unsigned int v34 = v37 + 2;
        if (v33 < 4) {
          unsigned int v34 = v38;
        }
        break;
      default:
        break;
    }
  }
  if (v34 == 1) {
    (*(void (**)(unint64_t, uint64_t))(v29 + 8))((v30 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 11) & ~v30, v28);
  }
  else {
    swift_release();
  }
  uint64_t v39 = (v32 | 1) + v33;
  unint64_t v40 = (v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10018CCC4(*(void *)v40, *(void *)(v40 + 8), *(void *)(v40 + 16), *(void *)(v40 + 24), *(void *)(v40 + 32), *(void *)(v40 + 40), *(void *)(v40 + 48), *(void *)(v40 + 56), *(void *)(v40 + 64), *(unsigned char *)(v40 + 72));
  unint64_t v41 = (v39 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = *(void *)v41;
  uint64_t v43 = *(void *)(v41 + 8);
  uint64_t v44 = *(void *)(v41 + 16);
  uint64_t v45 = *(void *)(v41 + 24);
  char v46 = *(unsigned char *)(v41 + 32);

  return sub_100191934(v42, v43, v44, v45, v46);
}

void *sub_1006F6FF8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 16;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 48);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12 + 16;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (v15 + v9) & ~v14;
  uint64_t v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v16, v17);
  uint64_t v18 = *(void *)(v13 + 48);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (v21 | 7) + v18;
  int v23 = (void *)((v22 + v16) & ~(v21 | 7));
  uint64_t v24 = (unsigned __int8 *)((v22 + v17) & ~(v21 | 7));
  uint64_t v25 = v21 + 16;
  uint64_t v27 = *(unsigned int *)(v20 + 84);
  uint64_t v28 = v21 + 24;
  uint64_t v29 = (v21 + 24) & ~v21;
  if (v27) {
    uint64_t v30 = *(void *)(v20 + 64);
  }
  else {
    uint64_t v30 = *(void *)(v20 + 64) + 1;
  }
  size_t v31 = v29 + v30;
  uint64_t v26 = (v21 + 16) & ~(v21 | 7);
  if ((unint64_t)(v29 + v30 + v26) <= 8) {
    uint64_t v32 = 8;
  }
  else {
    uint64_t v32 = v29 + v30 + v26;
  }
  unsigned int v33 = v24[v32];
  unsigned int v34 = v33 - 2;
  if (v33 >= 2)
  {
    if (v32 <= 3) {
      uint64_t v35 = v32;
    }
    else {
      uint64_t v35 = 4;
    }
    switch(v35)
    {
      case 1:
        int v36 = *v24;
        goto LABEL_16;
      case 2:
        int v36 = *(unsigned __int16 *)v24;
        goto LABEL_16;
      case 3:
        int v36 = *(unsigned __int16 *)v24 | (v24[2] << 16);
        goto LABEL_16;
      case 4:
        int v36 = *(_DWORD *)v24;
LABEL_16:
        int v37 = (v36 | (v34 << (8 * v32))) + 2;
        unsigned int v33 = v36 + 2;
        if (v32 < 4) {
          unsigned int v33 = v37;
        }
        break;
      default:
        break;
    }
  }
  if (v33 != 1)
  {
    *int v23 = *(void *)v24;
    *((unsigned char *)v23 + v32) = 0;
    swift_retain();
    goto LABEL_38;
  }
  size_t __n = v30;
  uint64_t v91 = (v21 + 24) & ~v21;
  uint64_t v87 = (v21 + 16) & ~(v21 | 7);
  uint64_t v38 = ~(v21 | 7);
  uint64_t v39 = ~v21;
  *(_OWORD *)int v23 = *(_OWORD *)v24;
  unint64_t v40 = (void *)(((unint64_t)v23 + v25) & v38);
  unint64_t v41 = (unsigned char *)((unint64_t)&v24[v25] & v38);
  if (v27 <= 0x7FFFFFFE)
  {
    unint64_t v42 = *(void *)(((unint64_t)&v24[v25] & v38) + 0x10);
    if (v42 >= 0xFFFFFFFF) {
      LODWORD(v42) = -1;
    }
    if ((v42 + 1) < 3)
    {
      uint64_t v43 = v41 + 8;
      goto LABEL_27;
    }
LABEL_29:
    memcpy(v40, v41, v31);
    uint64_t v46 = v87;
LABEL_34:
    size_t v49 = __n;
    uint64_t v50 = v91;
    goto LABEL_35;
  }
  uint64_t v86 = ~v21;
  if (_s7Weather24LocationCompositionStateOwet_0((unint64_t)&v41[v28] & v39, v27, v19) > 1) {
    goto LABEL_29;
  }
  uint64_t v43 = v41 + 8;
  uint64_t v39 = v86;
LABEL_27:
  *(unsigned char *)unint64_t v40 = *v41;
  uint64_t v44 = v40 + 1;
  if (*((void *)v43 + 1) < 0xFFFFFFFFuLL)
  {
    *uint64_t v44 = *(_OWORD *)v43;
  }
  else
  {
    *(void *)uint64_t v44 = *(void *)v43;
    v40[2] = *((void *)v43 + 1);
    uint64_t v45 = v39;
    swift_bridgeObjectRetain();
    uint64_t v39 = v45;
  }
  uint64_t v46 = v87;
  uint64_t v47 = (void *)(((unint64_t)v40 + v28) & v39);
  unint64_t v48 = (const void *)((unint64_t)&v41[v28] & v39);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v19))
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v47, v48, v19);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v19);
    goto LABEL_34;
  }
  size_t v49 = __n;
  memcpy(v47, v48, __n);
  uint64_t v50 = v91;
LABEL_35:
  unint64_t v51 = v46 + v50 + v49;
  if (v51 <= 8) {
    unint64_t v51 = 8;
  }
  *((unsigned char *)v23 + v51) = 1;
LABEL_38:
  uint64_t v52 = type metadata accessor for DynamicTypeSize();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned __int8 *)(v53 + 80);
  uint64_t v55 = v32 + (v54 | 7) + 1;
  uint64_t v56 = (void *)(((unint64_t)v23 + v55) & ~(v54 | 7));
  uint64_t v57 = (unsigned __int8 *)((unint64_t)&v24[v55] & ~(v54 | 7));
  if (((v54 + 19) & (unint64_t)~v54) + *(void *)(v53 + 64) <= 8) {
    uint64_t v58 = 8;
  }
  else {
    uint64_t v58 = ((v54 + 19) & ~v54) + *(void *)(v53 + 64);
  }
  unsigned int v59 = v57[v58];
  unsigned int v60 = v59 - 2;
  if (v59 >= 2)
  {
    if (v58 <= 3) {
      uint64_t v61 = v58;
    }
    else {
      uint64_t v61 = 4;
    }
    switch(v61)
    {
      case 1:
        int v62 = *v57;
        goto LABEL_50;
      case 2:
        int v62 = *(unsigned __int16 *)v57;
        goto LABEL_50;
      case 3:
        int v62 = *(unsigned __int16 *)((unint64_t)&v24[v55] & ~(v54 | 7)) | (*(unsigned __int8 *)(((unint64_t)&v24[v55] & ~(v54 | 7)) + 2) << 16);
        goto LABEL_50;
      case 4:
        int v62 = *(_DWORD *)v57;
LABEL_50:
        int v63 = (v62 | (v60 << (8 * v58))) + 2;
        unsigned int v59 = v62 + 2;
        if (v58 < 4) {
          unsigned int v59 = v63;
        }
        break;
      default:
        break;
    }
  }
  *uint64_t v56 = *(void *)v57;
  if (v59 == 1)
  {
    unint64_t v64 = ((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = (unint64_t)(v57 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v64 = *(void *)v65;
    *(unsigned char *)(v64 + 8) = *(unsigned char *)(v65 + 8);
    *(unsigned char *)(v64 + 9) = *(unsigned char *)(v65 + 9);
    *(unsigned char *)(v64 + 10) = *(unsigned char *)(v65 + 10);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v53 + 16))((v54 + 11 + v64) & ~v54, (v54 + 11 + v65) & ~v54, v52);
    char v66 = 1;
  }
  else
  {
    swift_retain();
    char v66 = 0;
  }
  *((unsigned char *)v56 + v58) = v66;
  uint64_t v67 = v58 + 1;
  uint64_t v92 = &v57[v58 + 1];
  unint64_t v68 = (unint64_t)(v92 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = *(void *)v68;
  uint64_t v70 = *(void *)(v68 + 8);
  size_t __na = (size_t)v56 + v67;
  unint64_t v71 = ((unint64_t)v56 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v72 = *(void *)(v68 + 16);
  uint64_t v73 = *(void *)(v68 + 24);
  uint64_t v74 = *(void *)(v68 + 32);
  uint64_t v75 = *(void *)(v68 + 40);
  uint64_t v76 = *(void *)(v68 + 48);
  uint64_t v77 = *(void *)(v68 + 56);
  uint64_t v78 = *(void *)(v68 + 64);
  char v88 = *(unsigned char *)(v68 + 72);
  sub_1001910C8(*(void *)v68, v70, v72, v73, v74, v75, v76, v77, v78, v88);
  *(void *)unint64_t v71 = v69;
  *(void *)(v71 + 8) = v70;
  *(void *)(v71 + 16) = v72;
  *(void *)(v71 + 24) = v73;
  *(void *)(v71 + 32) = v74;
  *(void *)(v71 + 40) = v75;
  *(void *)(v71 + 48) = v76;
  *(void *)(v71 + 56) = v77;
  *(void *)(v71 + 64) = v78;
  *(unsigned char *)(v71 + 72) = v88;
  unint64_t v79 = (__na + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v80 = (unint64_t)(v92 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v81 = *(void *)v80;
  uint64_t v82 = *(void *)(v80 + 8);
  uint64_t v83 = *(void *)(v80 + 16);
  uint64_t v84 = *(void *)(v80 + 24);
  LOBYTE(v74) = *(unsigned char *)(v80 + 32);
  sub_100190CD4(*(void *)v80, v82, v83, v84, v74);
  *(void *)unint64_t v79 = v81;
  *(void *)(v79 + 8) = v82;
  *(void *)(v79 + 16) = v83;
  *(void *)(v79 + 24) = v84;
  *(unsigned char *)(v79 + 32) = v74;
  return a1;
}

void *sub_1006F761C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 40);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 40);
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v21;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = (v23 | 7) + v19;
  uint64_t v25 = ~(v23 | 7);
  uint64_t v26 = (unsigned __int8 *)((v24 + v17) & v25);
  uint64_t v27 = (unsigned __int8 *)((v24 + v18) & v25);
  uint64_t v28 = (v23 + 24) & ~v23;
  v127 = a1;
  if (v26 == v27)
  {
    LODWORD(v31) = *(_DWORD *)(v21 + 84);
    uint64_t v40 = *(void *)(v21 + 64);
    uint64_t v41 = (v23 + 16) & v25;
    goto LABEL_66;
  }
  uint64_t v29 = v23 + 16;
  uint64_t v30 = (v23 + 16) & v25;
  uint64_t v31 = *(unsigned int *)(v21 + 84);
  if (v31) {
    unsigned int v32 = v31 - 1;
  }
  else {
    unsigned int v32 = 0;
  }
  uint64_t v33 = *(void *)(v21 + 64);
  if (v31) {
    size_t v34 = *(void *)(v21 + 64);
  }
  else {
    size_t v34 = v33 + 1;
  }
  if (v34 + v28 + v30 <= 8) {
    uint64_t v35 = 8;
  }
  else {
    uint64_t v35 = v34 + v28 + v30;
  }
  unsigned int v36 = v26[v35];
  unsigned int v37 = v36 - 2;
  if (v36 >= 2)
  {
    if (v35 <= 3) {
      uint64_t v38 = v35;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *v26;
        goto LABEL_21;
      case 2:
        int v39 = *(unsigned __int16 *)v26;
        goto LABEL_21;
      case 3:
        int v39 = *(unsigned __int16 *)v26 | (v26[2] << 16);
        goto LABEL_21;
      case 4:
        int v39 = *(_DWORD *)v26;
LABEL_21:
        if (v35 < 4) {
          unsigned int v36 = (v39 | (v37 << (8 * v35))) + 2;
        }
        else {
          unsigned int v36 = v39 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v120 = (v23 + 24) & ~v23;
  uint64_t v121 = ~v23;
  uint64_t v118 = v33;
  uint64_t v119 = (v23 + 16) & v25;
  uint64_t v123 = v23 + 24;
  uint64_t v125 = v20;
  size_t __n = v34 + v28;
  size_t v117 = v34;
  if (v36 != 1)
  {
    unsigned int v43 = v32;
    swift_release();
    goto LABEL_36;
  }
  unint64_t v42 = (unint64_t)&v26[v29] & v25;
  unsigned int v43 = v32;
  if (v32 > 0x7FFFFFFD)
  {
    if (_s7Weather24LocationCompositionStateOwet_0((v23 + 24 + v42) & v121, v31, v20) > 1) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
  unint64_t v44 = *(void *)(((unint64_t)&v26[v29] & v25) + 0x10);
  if (v44 >= 0xFFFFFFFF) {
    LODWORD(v44) = -1;
  }
  if ((v44 + 1) < 3)
  {
LABEL_32:
    if (*(void *)(((unint64_t)&v26[v29] & v25) + 0x10) >= 0xFFFFFFFFuLL) {
      swift_bridgeObjectRelease();
    }
    if (!_s7Weather24LocationCompositionStateOwet_0((v123 + v42) & v121, 1, v125)) {
      (*(void (**)(unint64_t, uint64_t))(v22 + 8))((v123 + v42) & v121, v125);
    }
  }
LABEL_36:
  unsigned int v45 = v27[v35];
  unsigned int v46 = v45 - 2;
  if (v45 >= 2)
  {
    if (v35 <= 3) {
      uint64_t v47 = v35;
    }
    else {
      uint64_t v47 = 4;
    }
    switch(v47)
    {
      case 1:
        int v48 = *v27;
        goto LABEL_45;
      case 2:
        int v48 = *(unsigned __int16 *)v27;
        goto LABEL_45;
      case 3:
        int v48 = *(unsigned __int16 *)v27 | (v27[2] << 16);
        goto LABEL_45;
      case 4:
        int v48 = *(_DWORD *)v27;
LABEL_45:
        if (v35 < 4) {
          unsigned int v45 = (v48 | (v46 << (8 * v35))) + 2;
        }
        else {
          unsigned int v45 = v48 + 2;
        }
        break;
      default:
        break;
    }
  }
  if (v45 != 1)
  {
    *(void *)uint64_t v26 = *(void *)v27;
    v26[v35] = 0;
    swift_retain();
    uint64_t v41 = v119;
    uint64_t v28 = v120;
    uint64_t v40 = v118;
    goto LABEL_66;
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  size_t v49 = (void *)((unint64_t)&v26[v29] & v25);
  uint64_t v50 = (void *)((unint64_t)&v27[v29] & v25);
  if (v43 > 0x7FFFFFFD)
  {
    uint64_t v52 = v123;
    if (_s7Weather24LocationCompositionStateOwet_0(((unint64_t)v50 + v123) & v121, v31, v125) > 1)
    {
LABEL_53:
      memcpy(v49, v50, __n);
LABEL_62:
      uint64_t v41 = v119;
      uint64_t v28 = v120;
      size_t v57 = v117;
      uint64_t v40 = v118;
      goto LABEL_63;
    }
  }
  else
  {
    unint64_t v51 = *(void *)(((unint64_t)&v27[v29] & v25) + 0x10);
    if (v51 >= 0xFFFFFFFF) {
      LODWORD(v51) = -1;
    }
    uint64_t v52 = v123;
    if ((v51 + 1) >= 3) {
      goto LABEL_53;
    }
  }
  uint64_t v53 = v50 + 1;
  *(unsigned char *)size_t v49 = *(unsigned char *)v50;
  uint64_t v54 = v49 + 1;
  if (v50[2] < 0xFFFFFFFFuLL)
  {
    _OWORD *v54 = *v53;
  }
  else
  {
    *(void *)uint64_t v54 = *(void *)v53;
    v49[2] = v50[2];
    swift_bridgeObjectRetain();
  }
  uint64_t v55 = (void *)(((unint64_t)v49 + v52) & v121);
  uint64_t v56 = (const void *)(((unint64_t)v50 + v52) & v121);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v125))
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v55, v56, v125);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v125);
    goto LABEL_62;
  }
  size_t v57 = v117;
  memcpy(v55, v56, v117);
  uint64_t v41 = v119;
  uint64_t v28 = v120;
  uint64_t v40 = v118;
LABEL_63:
  unint64_t v58 = v41 + v28 + v57;
  if (v58 <= 8) {
    unint64_t v58 = 8;
  }
  v26[v58] = 1;
LABEL_66:
  unint64_t v59 = v41 + v28 + v40;
  if (!v31) {
    ++v59;
  }
  if (v59 <= 8) {
    uint64_t v60 = 8;
  }
  else {
    uint64_t v60 = v59;
  }
  uint64_t v61 = type metadata accessor for DynamicTypeSize();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = v62;
  uint64_t v64 = *(unsigned __int8 *)(v62 + 80);
  uint64_t v65 = v60 + (v64 | 7) + 1;
  char v66 = (unsigned __int8 *)((unint64_t)&v26[v65] & ~(v64 | 7));
  uint64_t v67 = (unsigned __int8 *)((unint64_t)&v27[v65] & ~(v64 | 7));
  if (v66 == v67)
  {
    if (*(void *)(v62 + 64) + ((v64 + 19) & (unint64_t)~v64) <= 8) {
      uint64_t v69 = 8;
    }
    else {
      uint64_t v69 = *(void *)(v62 + 64) + ((v64 + 19) & ~v64);
    }
  }
  else
  {
    uint64_t v68 = v61;
    if (*(void *)(v62 + 64) + ((v64 + 19) & (unint64_t)~v64) <= 8) {
      uint64_t v69 = 8;
    }
    else {
      uint64_t v69 = *(void *)(v62 + 64) + ((v64 + 19) & ~v64);
    }
    unsigned int v70 = v66[v69];
    unsigned int v71 = v70 - 2;
    if (v70 >= 2)
    {
      if (v69 <= 3) {
        uint64_t v72 = v69;
      }
      else {
        uint64_t v72 = 4;
      }
      switch(v72)
      {
        case 1:
          int v73 = *v66;
          goto LABEL_87;
        case 2:
          int v73 = *(unsigned __int16 *)v66;
          goto LABEL_87;
        case 3:
          int v73 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          goto LABEL_87;
        case 4:
          int v73 = *(_DWORD *)v66;
LABEL_87:
          int v74 = (v73 | (v71 << (8 * v69))) + 2;
          unsigned int v70 = v73 + 2;
          if (v69 < 4) {
            unsigned int v70 = v74;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v75 = ~v64;
    if (v70 == 1) {
      (*(void (**)(unint64_t, uint64_t))(v63 + 8))((v64 + ((unint64_t)(v66 + 15) & 0xFFFFFFFFFFFFFFF8) + 11) & v75, v61);
    }
    else {
      swift_release();
    }
    unsigned int v76 = v67[v69];
    unsigned int v77 = v76 - 2;
    if (v76 >= 2)
    {
      if (v69 <= 3) {
        uint64_t v78 = v69;
      }
      else {
        uint64_t v78 = 4;
      }
      switch(v78)
      {
        case 1:
          int v79 = *v67;
          goto LABEL_101;
        case 2:
          int v79 = *(unsigned __int16 *)v67;
          goto LABEL_101;
        case 3:
          int v79 = *(unsigned __int16 *)v67 | (v67[2] << 16);
          goto LABEL_101;
        case 4:
          int v79 = *(_DWORD *)v67;
LABEL_101:
          int v80 = (v79 | (v77 << (8 * v69))) + 2;
          unsigned int v76 = v79 + 2;
          if (v69 < 4) {
            unsigned int v76 = v80;
          }
          break;
        default:
          break;
      }
    }
    *(void *)char v66 = *(void *)v67;
    if (v76 == 1)
    {
      unint64_t v81 = (unint64_t)(v66 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v82 = (unint64_t)(v67 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v81 = *(void *)v82;
      *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
      *(unsigned char *)(v81 + 9) = *(unsigned char *)(v82 + 9);
      *(unsigned char *)(v81 + 10) = *(unsigned char *)(v82 + 10);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v63 + 16))((v64 + 11 + v81) & v75, (v64 + 11 + v82) & v75, v68);
      v66[v69] = 1;
    }
    else
    {
      v66[v69] = 0;
      swift_retain();
    }
  }
  v126 = &v67[v69 + 1];
  unint64_t v83 = (unint64_t)(v126 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v84 = *(void *)v83;
  uint64_t v85 = *(void *)(v83 + 8);
  v124 = &v66[v69 + 1];
  unint64_t v86 = (unint64_t)(v124 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = *(void *)(v83 + 16);
  uint64_t v88 = *(void *)(v83 + 24);
  uint64_t v89 = *(void *)(v83 + 32);
  uint64_t v90 = *(void *)(v83 + 40);
  uint64_t v91 = *(void *)(v83 + 48);
  uint64_t v92 = *(void *)(v83 + 56);
  uint64_t v93 = *(void *)(v83 + 64);
  char v122 = *(unsigned char *)(v83 + 72);
  sub_1001910C8(*(void *)v83, v85, v87, v88, v89, v90, v91, v92, v93, v122);
  uint64_t v94 = *(void *)v86;
  uint64_t v95 = *(void *)(v86 + 8);
  uint64_t v96 = *(void *)(v86 + 16);
  uint64_t v97 = *(void *)(v86 + 24);
  uint64_t v98 = *(void *)(v86 + 32);
  uint64_t v99 = *(void *)(v86 + 40);
  uint64_t v100 = *(void *)(v86 + 48);
  uint64_t v101 = *(void *)(v86 + 56);
  uint64_t v102 = *(void *)(v86 + 64);
  char v103 = *(unsigned char *)(v86 + 72);
  *(void *)unint64_t v86 = v84;
  *(void *)(v86 + 8) = v85;
  *(void *)(v86 + 16) = v87;
  *(void *)(v86 + 24) = v88;
  *(void *)(v86 + 32) = v89;
  *(void *)(v86 + 40) = v90;
  *(void *)(v86 + 48) = v91;
  *(void *)(v86 + 56) = v92;
  *(void *)(v86 + 64) = v93;
  *(unsigned char *)(v86 + 72) = v122;
  sub_10018CCC4(v94, v95, v96, v97, v98, v99, v100, v101, v102, v103);
  unint64_t v104 = (unint64_t)(v124 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v105 = (unint64_t)(v126 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v106 = *(void *)v105;
  uint64_t v107 = *(void *)(v105 + 8);
  uint64_t v108 = *(void *)(v105 + 16);
  uint64_t v109 = *(void *)(v105 + 24);
  LOBYTE(v89) = *(unsigned char *)(v105 + 32);
  sub_100190CD4(*(void *)v105, v107, v108, v109, v89);
  uint64_t v110 = *(void *)v104;
  uint64_t v111 = *(void *)(v104 + 8);
  uint64_t v112 = *(void *)(v104 + 16);
  uint64_t v113 = *(void *)(v104 + 24);
  char v114 = *(unsigned char *)(v104 + 32);
  *(void *)unint64_t v104 = v106;
  *(void *)(v104 + 8) = v107;
  *(void *)(v104 + 16) = v108;
  *(void *)(v104 + 24) = v109;
  *(unsigned char *)(v104 + 32) = v89;
  sub_100191934(v110, v111, v112, v113, v114);
  return v127;
}

void *sub_1006F7EF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 32);
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = (v22 | 7) + v19;
  uint64_t v24 = (void *)((v23 + v17) & ~(v22 | 7));
  uint64_t v25 = (unsigned __int8 *)((v23 + v18) & ~(v22 | 7));
  uint64_t v26 = v22 + 16;
  uint64_t v27 = (v22 + 16) & ~(v22 | 7);
  uint64_t v28 = *(unsigned int *)(v21 + 84);
  uint64_t v29 = v22 + 24;
  uint64_t v30 = (v22 + 24) & ~v22;
  if (v28) {
    uint64_t v31 = *(void *)(v21 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v21 + 64) + 1;
  }
  size_t v32 = v30 + v31;
  if ((unint64_t)(v30 + v31 + v27) <= 8) {
    uint64_t v33 = 8;
  }
  else {
    uint64_t v33 = v30 + v31 + v27;
  }
  unsigned int v34 = v25[v33];
  unsigned int v35 = v34 - 2;
  if (v34 >= 2)
  {
    if (v33 <= 3) {
      uint64_t v36 = v33;
    }
    else {
      uint64_t v36 = 4;
    }
    switch(v36)
    {
      case 1:
        int v37 = *v25;
        goto LABEL_16;
      case 2:
        int v37 = *(unsigned __int16 *)v25;
        goto LABEL_16;
      case 3:
        int v37 = *(unsigned __int16 *)v25 | (v25[2] << 16);
        goto LABEL_16;
      case 4:
        int v37 = *(_DWORD *)v25;
LABEL_16:
        int v38 = (v37 | (v35 << (8 * v33))) + 2;
        unsigned int v34 = v37 + 2;
        if (v33 < 4) {
          unsigned int v34 = v38;
        }
        break;
      default:
        break;
    }
  }
  if (v34 != 1)
  {
    char v44 = 0;
    *uint64_t v24 = *(void *)v25;
    uint64_t v45 = v33;
    goto LABEL_36;
  }
  size_t __n = v31;
  int v79 = v4;
  uint64_t v39 = ~(v22 | 7);
  uint64_t v40 = ~v22;
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  uint64_t v41 = (unsigned char *)(((unint64_t)v24 + v26) & v39);
  unint64_t v42 = (unsigned char *)((unint64_t)&v25[v26] & v39);
  if (v28 > 0x7FFFFFFE)
  {
    uint64_t v76 = (v22 + 24) & ~v22;
    uint64_t v77 = (v22 + 16) & ~(v22 | 7);
    if (_s7Weather24LocationCompositionStateOwet_0((unint64_t)&v42[v29] & v40, v28, v20) > 1)
    {
      memcpy(v41, v42, v32);
LABEL_31:
      uint64_t v4 = v79;
      uint64_t v50 = v76;
      uint64_t v49 = v77;
      goto LABEL_32;
    }
  }
  else
  {
    unint64_t v43 = *(void *)(((unint64_t)&v25[v26] & v39) + 0x10);
    if (v43 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    if ((v43 + 1) >= 3)
    {
      uint64_t v51 = v27;
      uint64_t v52 = v30;
      memcpy(v41, v42, v32);
      uint64_t v50 = v52;
      uint64_t v49 = v51;
      uint64_t v4 = v79;
LABEL_32:
      size_t v48 = __n;
      goto LABEL_33;
    }
    uint64_t v76 = v30;
    uint64_t v77 = v27;
  }
  *uint64_t v41 = *v42;
  *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
  unsigned int v46 = (const void *)((unint64_t)&v42[v29] & v40);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v20))
  {
    (*(void (**)(unint64_t, const void *, uint64_t))(v21 + 32))((unint64_t)&v41[v29] & v40, v46, v20);
    _s7Weather24LocationCompositionStateOwst_0((unint64_t)&v41[v29] & v40, 0, 1, v20);
    goto LABEL_31;
  }
  uint64_t v47 = (void *)((unint64_t)&v41[v29] & v40);
  size_t v48 = __n;
  memcpy(v47, v46, __n);
  uint64_t v4 = v79;
  uint64_t v50 = v76;
  uint64_t v49 = v77;
LABEL_33:
  unint64_t v53 = v49 + v50 + v48;
  uint64_t v45 = 8;
  if (v53 > 8) {
    uint64_t v45 = v53;
  }
  char v44 = 1;
LABEL_36:
  *((unsigned char *)v24 + v45) = v44;
  uint64_t v54 = type metadata accessor for DynamicTypeSize();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(unsigned __int8 *)(v55 + 80);
  uint64_t v57 = v33 + (v56 | 7) + 1;
  unint64_t v58 = (void *)(((unint64_t)v24 + v57) & ~(v56 | 7));
  unint64_t v59 = (unsigned __int8 *)((unint64_t)&v25[v57] & ~(v56 | 7));
  if (((v56 + 19) & (unint64_t)~v56) + *(void *)(v55 + 64) <= 8) {
    uint64_t v60 = 8;
  }
  else {
    uint64_t v60 = ((v56 + 19) & ~v56) + *(void *)(v55 + 64);
  }
  unsigned int v61 = v59[v60];
  unsigned int v62 = v61 - 2;
  if (v61 >= 2)
  {
    if (v60 <= 3) {
      uint64_t v63 = v60;
    }
    else {
      uint64_t v63 = 4;
    }
    switch(v63)
    {
      case 1:
        int v64 = *v59;
        goto LABEL_48;
      case 2:
        int v64 = *(unsigned __int16 *)v59;
        goto LABEL_48;
      case 3:
        int v64 = *(unsigned __int16 *)((unint64_t)&v25[v57] & ~(v56 | 7)) | (*(unsigned __int8 *)(((unint64_t)&v25[v57] & ~(v56 | 7)) + 2) << 16);
        goto LABEL_48;
      case 4:
        int v64 = *(_DWORD *)v59;
LABEL_48:
        int v65 = (v64 | (v62 << (8 * v60))) + 2;
        unsigned int v61 = v64 + 2;
        if (v60 < 4) {
          unsigned int v61 = v65;
        }
        break;
      default:
        break;
    }
  }
  if (v61 == 1)
  {
    *unint64_t v58 = *(void *)v59;
    unint64_t v66 = ((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v67 = (unint64_t)(v59 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v66 = *(void *)v67;
    *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
    *(unsigned char *)(v66 + 9) = *(unsigned char *)(v67 + 9);
    *(unsigned char *)(v66 + 10) = *(unsigned char *)(v67 + 10);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v55 + 32))((v56 + 11 + v66) & ~v56, (v56 + 11 + v67) & ~v56, v54);
    char v68 = 1;
  }
  else
  {
    char v68 = 0;
    *unint64_t v58 = *(void *)v59;
  }
  *((unsigned char *)v58 + v60) = v68;
  uint64_t v69 = (char *)v58 + v60 + 1;
  unsigned int v70 = &v59[v60 + 1];
  memcpy((void *)((unint64_t)(v69 + 7) & 0xFFFFFFFFFFFFFFF8), (const void *)((unint64_t)(v70 + 7) & 0xFFFFFFFFFFFFFFF8), 0x49uLL);
  unint64_t v71 = (unint64_t)(v69 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v72 = (unint64_t)(v70 + 87) & 0xFFFFFFFFFFFFFFF8;
  char v73 = *(unsigned char *)(v72 + 32);
  long long v74 = *(_OWORD *)(v72 + 16);
  *(_OWORD *)unint64_t v71 = *(_OWORD *)v72;
  *(_OWORD *)(v71 + 16) = v74;
  *(unsigned char *)(v71 + 32) = v73;
  return v4;
}

void *sub_1006F8474(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 24);
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v21;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = (v23 | 7) + v19;
  uint64_t v25 = ~(v23 | 7);
  uint64_t v26 = (unsigned __int8 *)((v24 + v17) & v25);
  uint64_t v27 = (unsigned __int8 *)((v24 + v18) & v25);
  uint64_t v28 = v23 + 24;
  uint64_t v29 = (v23 + 24) & ~v23;
  uint64_t v121 = a1;
  if (v26 == v27)
  {
    LODWORD(v31) = *(_DWORD *)(v21 + 84);
    uint64_t v41 = *(void *)(v21 + 64);
    uint64_t v42 = (v23 + 16) & v25;
    goto LABEL_61;
  }
  uint64_t v30 = v23 + 16;
  uint64_t v31 = *(unsigned int *)(v21 + 84);
  if (v31) {
    unsigned int v32 = v31 - 1;
  }
  else {
    unsigned int v32 = 0;
  }
  if (v31) {
    uint64_t v33 = *(void *)(v21 + 64);
  }
  else {
    uint64_t v33 = *(void *)(v21 + 64) + 1;
  }
  size_t v115 = v33;
  uint64_t v116 = *(void *)(v21 + 64);
  size_t v34 = v33 + v29;
  unint64_t v35 = v33 + v29 + ((v23 + 16) & v25);
  if (v35 <= 8) {
    uint64_t v36 = 8;
  }
  else {
    uint64_t v36 = v35;
  }
  unsigned int v37 = v26[v36];
  unsigned int v38 = v37 - 2;
  uint64_t v117 = (v23 + 16) & v25;
  uint64_t v118 = (v23 + 24) & ~v23;
  if (v37 >= 2)
  {
    if (v36 <= 3) {
      uint64_t v39 = v36;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *v26;
        goto LABEL_21;
      case 2:
        int v40 = *(unsigned __int16 *)v26;
        goto LABEL_21;
      case 3:
        int v40 = *(unsigned __int16 *)v26 | (v26[2] << 16);
        goto LABEL_21;
      case 4:
        int v40 = *(_DWORD *)v26;
LABEL_21:
        int v43 = (v40 | (v38 << (8 * v36))) + 2;
        unsigned int v37 = v40 + 2;
        if (v36 < 4) {
          unsigned int v37 = v43;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v119 = ~v23;
  uint64_t v120 = v20;
  size_t __n = v34;
  if (v37 != 1)
  {
    unsigned int v45 = v32;
    swift_release();
    goto LABEL_35;
  }
  unint64_t v44 = (unint64_t)&v26[v30] & v25;
  unsigned int v45 = v32;
  if (v32 > 0x7FFFFFFD)
  {
    if (_s7Weather24LocationCompositionStateOwet_0((v28 + v44) & v119, v31, v20) > 1) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  unint64_t v46 = *(void *)(((unint64_t)&v26[v30] & v25) + 0x10);
  if (v46 >= 0xFFFFFFFF) {
    LODWORD(v46) = -1;
  }
  if ((v46 + 1) < 3)
  {
LABEL_31:
    if (*(void *)(((unint64_t)&v26[v30] & v25) + 0x10) >= 0xFFFFFFFFuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = (v28 + v44) & v119;
    if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v120)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v47, v120);
    }
  }
LABEL_35:
  unsigned int v48 = v27[v36];
  unsigned int v49 = v48 - 2;
  if (v48 >= 2)
  {
    if (v36 <= 3) {
      uint64_t v50 = v36;
    }
    else {
      uint64_t v50 = 4;
    }
    switch(v50)
    {
      case 1:
        int v51 = *v27;
        goto LABEL_44;
      case 2:
        int v51 = *(unsigned __int16 *)v27;
        goto LABEL_44;
      case 3:
        int v51 = *(unsigned __int16 *)v27 | (v27[2] << 16);
        goto LABEL_44;
      case 4:
        int v51 = *(_DWORD *)v27;
LABEL_44:
        int v52 = (v51 | (v49 << (8 * v36))) + 2;
        unsigned int v48 = v51 + 2;
        if (v36 < 4) {
          unsigned int v48 = v52;
        }
        break;
      default:
        break;
    }
  }
  if (v48 != 1)
  {
    *(void *)uint64_t v26 = *(void *)v27;
    v26[v36] = 0;
    uint64_t v42 = v117;
    uint64_t v29 = v118;
    uint64_t v41 = v116;
    goto LABEL_61;
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  unint64_t v53 = (unsigned char *)((unint64_t)&v26[v30] & v25);
  uint64_t v54 = (unsigned char *)((unint64_t)&v27[v30] & v25);
  if (v45 > 0x7FFFFFFD)
  {
    uint64_t v56 = v120;
    if (_s7Weather24LocationCompositionStateOwet_0((unint64_t)&v54[v28] & v119, v31, v120) > 1)
    {
LABEL_51:
      memcpy(v53, v54, __n);
LABEL_57:
      uint64_t v42 = v117;
      uint64_t v29 = v118;
      size_t v59 = v115;
      uint64_t v41 = v116;
      goto LABEL_58;
    }
  }
  else
  {
    unint64_t v55 = *(void *)(((unint64_t)&v27[v30] & v25) + 0x10);
    if (v55 >= 0xFFFFFFFF) {
      LODWORD(v55) = -1;
    }
    uint64_t v56 = v120;
    if ((v55 + 1) >= 3) {
      goto LABEL_51;
    }
  }
  *unint64_t v53 = *v54;
  *(_OWORD *)(v53 + 8) = *(_OWORD *)(v54 + 8);
  uint64_t v57 = (void *)((unint64_t)&v53[v28] & v119);
  unint64_t v58 = (const void *)((unint64_t)&v54[v28] & v119);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v56))
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v57, v58, v56);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v56);
    goto LABEL_57;
  }
  size_t v59 = v115;
  memcpy(v57, v58, v115);
  uint64_t v42 = v117;
  uint64_t v29 = v118;
  uint64_t v41 = v116;
LABEL_58:
  unint64_t v60 = v42 + v29 + v59;
  if (v60 <= 8) {
    unint64_t v60 = 8;
  }
  v26[v60] = 1;
LABEL_61:
  unint64_t v61 = v42 + v29 + v41;
  if (!v31) {
    ++v61;
  }
  if (v61 <= 8) {
    uint64_t v62 = 8;
  }
  else {
    uint64_t v62 = v61;
  }
  uint64_t v63 = type metadata accessor for DynamicTypeSize();
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = v64;
  uint64_t v66 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v67 = v62 + (v66 | 7) + 1;
  char v68 = (unsigned __int8 *)((unint64_t)&v26[v67] & ~(v66 | 7));
  uint64_t v69 = (unsigned __int8 *)((unint64_t)&v27[v67] & ~(v66 | 7));
  if (v68 == v69)
  {
    if (*(void *)(v64 + 64) + ((v66 + 19) & (unint64_t)~v66) <= 8) {
      uint64_t v71 = 8;
    }
    else {
      uint64_t v71 = *(void *)(v64 + 64) + ((v66 + 19) & ~v66);
    }
  }
  else
  {
    uint64_t v70 = v63;
    if (*(void *)(v64 + 64) + ((v66 + 19) & (unint64_t)~v66) <= 8) {
      uint64_t v71 = 8;
    }
    else {
      uint64_t v71 = *(void *)(v64 + 64) + ((v66 + 19) & ~v66);
    }
    unsigned int v72 = v68[v71];
    unsigned int v73 = v72 - 2;
    if (v72 >= 2)
    {
      if (v71 <= 3) {
        uint64_t v74 = v71;
      }
      else {
        uint64_t v74 = 4;
      }
      switch(v74)
      {
        case 1:
          int v75 = *v68;
          goto LABEL_82;
        case 2:
          int v75 = *(unsigned __int16 *)v68;
          goto LABEL_82;
        case 3:
          int v75 = *(unsigned __int16 *)v68 | (v68[2] << 16);
          goto LABEL_82;
        case 4:
          int v75 = *(_DWORD *)v68;
LABEL_82:
          int v76 = (v75 | (v73 << (8 * v71))) + 2;
          unsigned int v72 = v75 + 2;
          if (v71 < 4) {
            unsigned int v72 = v76;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v77 = ~v66;
    if (v72 == 1) {
      (*(void (**)(unint64_t, uint64_t))(v65 + 8))((v66 + ((unint64_t)(v68 + 15) & 0xFFFFFFFFFFFFFFF8) + 11) & v77, v63);
    }
    else {
      swift_release();
    }
    unsigned int v78 = v69[v71];
    unsigned int v79 = v78 - 2;
    if (v78 >= 2)
    {
      if (v71 <= 3) {
        uint64_t v80 = v71;
      }
      else {
        uint64_t v80 = 4;
      }
      switch(v80)
      {
        case 1:
          int v81 = *v69;
          goto LABEL_96;
        case 2:
          int v81 = *(unsigned __int16 *)v69;
          goto LABEL_96;
        case 3:
          int v81 = *(unsigned __int16 *)v69 | (v69[2] << 16);
          goto LABEL_96;
        case 4:
          int v81 = *(_DWORD *)v69;
LABEL_96:
          int v82 = (v81 | (v79 << (8 * v71))) + 2;
          unsigned int v78 = v81 + 2;
          if (v71 < 4) {
            unsigned int v78 = v82;
          }
          break;
        default:
          break;
      }
    }
    *(void *)char v68 = *(void *)v69;
    if (v78 == 1)
    {
      unint64_t v83 = (unint64_t)(v68 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v84 = (unint64_t)(v69 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v83 = *(void *)v84;
      *(unsigned char *)(v83 + 8) = *(unsigned char *)(v84 + 8);
      *(unsigned char *)(v83 + 9) = *(unsigned char *)(v84 + 9);
      *(unsigned char *)(v83 + 10) = *(unsigned char *)(v84 + 10);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v65 + 32))((v66 + 11 + v83) & v77, (v66 + 11 + v84) & v77, v70);
      v68[v71] = 1;
    }
    else
    {
      v68[v71] = 0;
    }
  }
  uint64_t v85 = &v69[v71 + 1];
  unint64_t v86 = (unint64_t)(v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = *(void *)(v86 + 64);
  char v88 = *(unsigned char *)(v86 + 72);
  uint64_t v89 = &v68[v71 + 1];
  unint64_t v90 = (unint64_t)(v89 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v91 = *(void *)v90;
  uint64_t v92 = *(void *)(v90 + 8);
  uint64_t v93 = *(void *)(v90 + 16);
  uint64_t v94 = *(void *)(v90 + 24);
  uint64_t v95 = *(void *)(v90 + 32);
  uint64_t v96 = *(void *)(v90 + 40);
  uint64_t v97 = *(void *)(v90 + 48);
  uint64_t v98 = *(void *)(v90 + 56);
  uint64_t v99 = *(void *)(v90 + 64);
  char v100 = *(unsigned char *)(v90 + 72);
  long long v101 = *(_OWORD *)(v86 + 16);
  long long v102 = *(_OWORD *)(v86 + 32);
  long long v103 = *(_OWORD *)(v86 + 48);
  *(_OWORD *)unint64_t v90 = *(_OWORD *)v86;
  *(_OWORD *)(v90 + 16) = v101;
  *(_OWORD *)(v90 + 32) = v102;
  *(_OWORD *)(v90 + 48) = v103;
  *(void *)(v90 + 64) = v87;
  *(unsigned char *)(v90 + 72) = v88;
  sub_10018CCC4(v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
  unint64_t v104 = (unint64_t)(v85 + 87) & 0xFFFFFFFFFFFFFFF8;
  char v105 = *(unsigned char *)(v104 + 32);
  unint64_t v106 = (unint64_t)(v89 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v107 = *(void *)v106;
  uint64_t v108 = *(void *)(v106 + 8);
  uint64_t v109 = *(void *)(v106 + 16);
  uint64_t v110 = *(void *)(v106 + 24);
  char v111 = *(unsigned char *)(v106 + 32);
  long long v112 = *(_OWORD *)(v104 + 16);
  *(_OWORD *)unint64_t v106 = *(_OWORD *)v104;
  *(_OWORD *)(v106 + 16) = v112;
  *(unsigned char *)(v106 + 32) = v105;
  sub_100191934(v107, v108, v109, v110, v111);
  return v121;
}

uint64_t sub_1006F8C90(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v33 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v33 - 8);
  uint64_t v31 = *(void *)(a3 + 24);
  uint64_t v4 = *(void *)(v31 - 8);
  unsigned int v32 = *(_DWORD *)(v4 + 84);
  unsigned int v34 = *(_DWORD *)(v3 + 84);
  if (v32 <= v34) {
    unsigned int v5 = *(_DWORD *)(v3 + 84);
  }
  else {
    unsigned int v5 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v6 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v7 | 7;
  int v9 = *(_DWORD *)(v6 + 84);
  uint64_t v36 = *(void *)(v6 + 64);
  if (v5 <= 0xFE) {
    unsigned int v5 = 254;
  }
  uint64_t v10 = *(void *)(type metadata accessor for DynamicTypeSize() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  if (((v11 + 19) & (unint64_t)~v11) + v12 <= 8) {
    uint64_t v13 = 8;
  }
  else {
    uint64_t v13 = ((v11 + 19) & ~v11) + v12;
  }
  uint64_t v14 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v4 + 80);
  if (v9) {
    uint64_t v17 = v36;
  }
  else {
    uint64_t v17 = v36 + 1;
  }
  unint64_t v18 = ((v7 + 16) & ~(v7 | 7)) + ((v7 + 24) & ~v7) + v17;
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v19 = *(void *)(v4 + 64) + v8;
  if (v5 < a2)
  {
    unint64_t v20 = ((v13 + ((v18 + (v11 | 7) + ((v19 + ((v15 + v16 + ((v14 + 16) & ~v14)) & ~v16)) & ~v8) + 1) & ~(v11 | 7)) + 88) & 0xFFFFFFFFFFFFFFF8)
        + 33;
    if (v20 < 4) {
      unsigned int v21 = ((a2 - v5 + 255) >> (8 * v20)) + 1;
    }
    else {
      unsigned int v21 = 2;
    }
    if (v21 >= 0x10000) {
      LODWORD(v22) = 4;
    }
    else {
      LODWORD(v22) = 2;
    }
    if (v21 < 0x100) {
      LODWORD(v22) = 1;
    }
    if (v21 >= 2) {
      uint64_t v22 = v22;
    }
    else {
      uint64_t v22 = 0;
    }
    switch(v22)
    {
      case 1:
        int v23 = a1[v20];
        if (!a1[v20]) {
          break;
        }
        goto LABEL_32;
      case 2:
        int v23 = *(unsigned __int16 *)&a1[v20];
        if (*(_WORD *)&a1[v20]) {
          goto LABEL_32;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1006F9024);
      case 4:
        int v23 = *(_DWORD *)&a1[v20];
        if (!v23) {
          break;
        }
LABEL_32:
        int v25 = (v23 - 1) << (8 * v20);
        if (v20 >= 4) {
          int v25 = 0;
        }
        if (v20 == 1) {
          int v26 = *a1;
        }
        else {
          int v26 = *(_DWORD *)a1;
        }
        return v5 + (v26 | v25) + 1;
      default:
        break;
    }
  }
  unint64_t v27 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v14 + 8) & ~v14;
  uint64_t v28 = v34;
  if (v34 == v5)
  {
    uint64_t v29 = v33;
  }
  else
  {
    unint64_t v27 = (v27 + v15 + v16) & ~v16;
    uint64_t v28 = v32;
    if (v32 != v5)
    {
      unsigned int v30 = *(unsigned __int8 *)(((v19 + v27) & ~v8) + v18);
      if (v30 >= 2) {
        return (v30 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v29 = v31;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v27, v28, v29);
}

void sub_1006F9038(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v41 = *(void *)(a4 + 16);
  uint64_t v4 = *(void *)(v41 - 8);
  uint64_t v39 = *(void *)(a4 + 24);
  uint64_t v5 = *(void *)(v39 - 8);
  unsigned int v42 = *(_DWORD *)(v4 + 84);
  unsigned int v40 = *(_DWORD *)(v5 + 84);
  if (v40 <= v42) {
    unsigned int v6 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v6 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v7 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  int v10 = *(_DWORD *)(v7 + 84);
  uint64_t v44 = *(void *)(v7 + 64);
  if (v6 <= 0xFE) {
    unsigned int v6 = 254;
  }
  uint64_t v11 = *(void *)(type metadata accessor for DynamicTypeSize() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  if (((v12 + 19) & (unint64_t)~v12) + v13 <= 8) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = ((v12 + 19) & ~v12) + v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = *(void *)(v4 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = *(void *)(v5 + 64) + v9;
  if (v10) {
    uint64_t v19 = v44;
  }
  else {
    uint64_t v19 = v44 + 1;
  }
  unint64_t v20 = v19 + ((v8 + 24) & ~v8) + ((v8 + 16) & ~(v8 | 7));
  if (v20 <= 8) {
    unint64_t v20 = 8;
  }
  size_t v21 = ((v14 + ((v20 + (v12 | 7) + ((v18 + ((v16 + v17 + ((v15 + 16) & ~v15)) & ~v17)) & ~v9) + 1) & ~(v12 | 7)) + 88) & 0xFFFFFFFFFFFFFFF8)
      + 33;
  char v22 = 8 * v21;
  if (v6 >= a3)
  {
    int v25 = 0;
  }
  else
  {
    if (v21 <= 3) {
      unsigned int v23 = ((a3 - v6 + 255) >> v22) + 1;
    }
    else {
      unsigned int v23 = 2;
    }
    if (v23 >= 0x10000) {
      int v24 = 4;
    }
    else {
      int v24 = 2;
    }
    if (v23 < 0x100) {
      int v24 = 1;
    }
    if (v23 >= 2) {
      int v25 = v24;
    }
    else {
      int v25 = 0;
    }
  }
  if (v6 < a2)
  {
    if (v21 < 4) {
      unsigned int v26 = ((~v6 + a2) >> v22) + 1;
    }
    else {
      unsigned int v26 = 1;
    }
    if (v21 >= 4) {
      unsigned int v27 = ~v6 + a2;
    }
    else {
      unsigned int v27 = (~(_BYTE)v6 + a2);
    }
    bzero(a1, v21);
    if (v21 == 1) {
      *a1 = v27;
    }
    else {
      *(_DWORD *)a1 = v27;
    }
    switch(v25)
    {
      case 1:
        a1[v21] = v26;
        return;
      case 2:
        *(_WORD *)&a1[v21] = v26;
        return;
      case 3:
        goto LABEL_70;
      case 4:
        *(_DWORD *)&a1[v21] = v26;
        return;
      default:
        return;
    }
  }
  switch(v25)
  {
    case 1:
      a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)&a1[v21] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_70:
      __break(1u);
      JUMPOUT(0x1006F94B4);
    case 4:
      *(_DWORD *)&a1[v21] = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (!a2) {
        return;
      }
LABEL_44:
      unint64_t v29 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v15 + 8) & ~v15;
      uint64_t v30 = v42;
      if (v42 == v6)
      {
        uint64_t v31 = a2;
        uint64_t v32 = v41;
LABEL_48:
        _s7Weather24LocationCompositionStateOwst_0(v29, v31, v30, v32);
        return;
      }
      unint64_t v29 = (v29 + v16 + v17) & ~v17;
      uint64_t v30 = v40;
      if (v40 == v6)
      {
        uint64_t v31 = a2;
        uint64_t v32 = v39;
        goto LABEL_48;
      }
      uint64_t v28 = ~v9;
      unint64_t v33 = (v18 + v29) & ~v9;
      if (a2 > 0xFE)
      {
        size_t v34 = (v20 + 1);
        int v35 = -1 << (8 * (v20 + 1));
        if (v34 <= 3) {
          int v36 = ~v35;
        }
        else {
          int v36 = -1;
        }
        if (v34)
        {
          int v37 = v36 & (a2 - 255);
          if (v34 <= 3) {
            int v38 = v34;
          }
          else {
            int v38 = 4;
          }
          bzero((void *)((v18 + v29) & v28), v34);
          switch(v38)
          {
            case 2:
              *(_WORD *)unint64_t v33 = v37;
              break;
            case 3:
              *(_WORD *)unint64_t v33 = v37;
              *(unsigned char *)(v33 + 2) = BYTE2(v37);
              break;
            case 4:
              *(_DWORD *)unint64_t v33 = v37;
              break;
            default:
              *(unsigned char *)unint64_t v33 = v37;
              break;
          }
        }
      }
      else
      {
        *(unsigned char *)(v33 + v20) = -(char)a2;
      }
      return;
  }
}

uint64_t assignWithTake for LocationViewerViewWeatherConditionBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = v4;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t *sub_1006F9578(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Location.Identifier();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    LOBYTE(v19) = v19[8];
    *(void *)uint64_t v18 = v20;
    v18[8] = (char)v19;
  }
  swift_retain();
  return a1;
}

void *sub_1006F9790(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  return a1;
}

void *sub_1006F9950(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    sub_10017DF4C((uint64_t)a1 + v10, (uint64_t *)&unk_100EAA560);
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  LOBYTE(v18) = v18[8];
  *(void *)uint64_t v17 = v19;
  v17[8] = (char)v18;
  swift_release();
  return a1;
}

uint64_t sub_1006F9B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F9B68);
}

uint64_t sub_1006F9B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E8D8D0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(v4 + *(int *)(a3 + 20)));
    }
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_10018AF04();
    uint64_t v9 = v4 + v11;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_1006F9C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F9C20);
}

void sub_1006F9C20()
{
  sub_100150288();
  sub_10017DF08(&qword_100E8D8D0);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    sub_100162B34();
  }
  else
  {
    if (v3 == 0x7FFFFFFF)
    {
      *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
      return;
    }
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_100152410();
  }
  sub_1001650E4();

  _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
}

void *sub_1006F9CBC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for LocationModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    uint64_t v11 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
    uint64_t v12 = &v9[v11];
    uint64_t v13 = &v10[v11];
    uint64_t v14 = type metadata accessor for ContentStatusBanner();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E63A10);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      *uint64_t v12 = *v13;
      uint64_t v17 = v13 + 8;
      unint64_t v18 = *((void *)v13 + 2);
      if (v18 >= 2)
      {
        *((void *)v12 + 1) = *v17;
        *((void *)v12 + 2) = v18;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v12 + 8) = *(_OWORD *)v17;
      }
      uint64_t v19 = *(int *)(v14 + 24);
      uint64_t v20 = &v12[v19];
      size_t v21 = &v13[v19];
      uint64_t v22 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v24 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
    uint64_t v25 = a3[9];
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    unsigned int v26 = (void *)((char *)a1 + v25);
    unsigned int v27 = (void *)((char *)a2 + v25);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
      {
        uint64_t v29 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      }
    }
    else
    {
      *unsigned int v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[10];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *(void *)v32;
    LOBYTE(v32) = v32[8];
    *(void *)uint64_t v31 = v33;
    v31[8] = (char)v32;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1006FA01C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v11 = (unsigned char *)(v8 + v10);
  uint64_t v12 = (unsigned char *)(v9 + v10);
  uint64_t v13 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E63A10);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *uint64_t v11 = *v12;
    *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
    uint64_t v15 = *(int *)(v13 + 24);
    uint64_t v16 = &v11[v15];
    uint64_t v17 = &v12[v15];
    uint64_t v18 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v20 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v25))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v25);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  return a1;
}

uint64_t sub_1006FA310(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = type metadata accessor for ContentStatusBanner();
  int v14 = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
      *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
      uint64_t v16 = *(int *)(v13 + 24);
      uint64_t v17 = (void *)(v11 + v16);
      uint64_t v18 = (const void *)(v12 + v16);
      uint64_t v19 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v26 = v11;
      uint64_t v27 = v13;
      goto LABEL_15;
    }
    goto LABEL_7;
  }
  if (v15)
  {
    sub_100151660();
LABEL_7:
    size_t v21 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v22 = (void *)v11;
    uint64_t v23 = (const void *)v12;
LABEL_8:
    memcpy(v22, v23, v21);
    goto LABEL_16;
  }
  *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
  uint64_t v24 = (_OWORD *)(v12 + 8);
  if (*(void *)(v11 + 16) < 2uLL) {
    goto LABEL_12;
  }
  unint64_t v25 = *(void *)(v12 + 16);
  if (v25 < 2)
  {
    sub_10027B4D4(v11 + 8);
LABEL_12:
    *(_OWORD *)(v11 + 8) = *v24;
    goto LABEL_25;
  }
  *(void *)(v11 + 8) = *(void *)v24;
  *(void *)(v11 + 16) = v25;
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v40 = *(int *)(v13 + 24);
  uint64_t v41 = v11 + v40;
  uint64_t v42 = v12 + v40;
  uint64_t v43 = type metadata accessor for Date();
  int v44 = _s7Weather24LocationCompositionStateOwet_0(v41, 1, v43);
  int v45 = _s7Weather24LocationCompositionStateOwet_0(v42, 1, v43);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      uint64_t v26 = v41;
      uint64_t v27 = v43;
LABEL_15:
      _s7Weather24LocationCompositionStateOwst_0(v26, 0, 1, v27);
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  uint64_t v46 = *(void *)(v43 - 8);
  if (v45)
  {
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v41, v43);
LABEL_30:
    size_t v21 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v22 = (void *)v41;
    uint64_t v23 = (const void *)v42;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 40))(v41, v42, v43);
LABEL_16:
  uint64_t v28 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v29 = a3[9];
    uint64_t v30 = (void *)(a1 + v29);
    uint64_t v31 = (const void *)(a2 + v29);
    sub_10017DF4C(a1 + v29, (uint64_t *)&unk_100EAA560);
    uint64_t v32 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v33))
      {
        uint64_t v34 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v33);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
  }
  uint64_t v35 = a3[10];
  uint64_t v36 = a1 + v35;
  int v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  LOBYTE(v37) = *((unsigned char *)v37 + 8);
  *(void *)uint64_t v36 = v38;
  *(unsigned char *)(v36 + 8) = (_BYTE)v37;
  swift_release();
  return a1;
}

uint64_t sub_1006FA7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006FA7DC);
}

uint64_t sub_1006FA7DC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100182528();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    type metadata accessor for ContentStatusBannerPresentationMetrics(0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == v3)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      if (v3 == 254)
      {
        unsigned int v13 = *(unsigned __int8 *)(v4 + a3[7]);
        if (v13 >= 2) {
          return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
        }
        else {
          return 0;
        }
      }
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA540);
      uint64_t v12 = a3[9];
    }
    uint64_t v9 = v4 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_1006FA8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006FA8C8);
}

void sub_1006FA8C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_100182528();
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_100162B34();
  }
  else
  {
    type metadata accessor for ContentStatusBannerPresentationMetrics(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) != a3)
    {
      if (a3 == 254)
      {
        *(unsigned char *)(v5 + *(int *)(a4 + 28)) = v4 + 1;
        return;
      }
      sub_10017DF08((uint64_t *)&unk_100EAA540);
    }
  }
  sub_1001650E4();

  _s7Weather24LocationCompositionStateOwst_0(v10, v11, v12, v13);
}

uint64_t *sub_1006FA984(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for ContentStatusBanner();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E63A10);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = a2 + 1;
      unint64_t v11 = a2[2];
      if (v11 >= 2)
      {
        a1[1] = *v10;
        a1[2] = v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 1) = *(_OWORD *)v10;
      }
      uint64_t v12 = *(int *)(v7 + 24);
      uint64_t v13 = (char *)a1 + v12;
      int v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v17 = a3[5];
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    uint64_t v19 = a3[6];
    uint64_t v20 = (char *)a1 + v19;
    size_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *((void *)v21 + 1);
    uint64_t v24 = *((void *)v21 + 2);
    uint64_t v25 = *((void *)v21 + 3);
    char v26 = v21[32];
    sub_100190CD4(*(void *)v21, v23, v24, v25, v26);
    *(void *)uint64_t v20 = v22;
    *((void *)v20 + 1) = v23;
    *((void *)v20 + 2) = v24;
    *((void *)v20 + 3) = v25;
    v20[32] = v26;
    uint64_t v27 = a3[7];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      v28[16] = v29[16];
      v28[17] = v29[17];
      v28[18] = v29[18];
      uint64_t v30 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v31 = &v28[v30];
      uint64_t v32 = &v29[v30];
      uint64_t v33 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      *(void *)uint64_t v28 = *(void *)v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = a3[8];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    char v37 = *((unsigned char *)a2 + v34);
    uint64_t v38 = (char *)a1 + v34;
    *uint64_t v38 = v37;
    uint64_t v39 = v38 + 8;
    uint64_t v40 = v36 + 8;
    unint64_t v41 = *((void *)v36 + 2);
    if (v41 >= 2)
    {
      *((void *)v35 + 1) = *v40;
      *((void *)v35 + 2) = v41;
      swift_bridgeObjectRetain();
    }
    else
    {
      *uint64_t v39 = *(_OWORD *)v40;
    }
    uint64_t v42 = *(int *)(v7 + 24);
    uint64_t v43 = &v35[v42];
    int v44 = &v36[v42];
    uint64_t v45 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
    uint64_t v47 = sub_10017DF08(&qword_100E8EAB0);
    *(void *)&v35[*(int *)(v47 + 28)] = *(void *)&v36[*(int *)(v47 + 28)];
  }
  swift_retain();
  return a1;
}

unsigned char *sub_1006FAD98(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E63A10);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    uint64_t v8 = *(int *)(v6 + 24);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = a3[5];
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((void *)v15 + 4) = *((void *)v16 + 4);
  long long v18 = &a1[v14];
  uint64_t v19 = &a2[v14];
  v18[32] = v19[32];
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)long long v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    v22[16] = v23[16];
    v22[17] = v23[17];
    v22[18] = v23[18];
    uint64_t v25 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    char v26 = &v22[v25];
    uint64_t v27 = &v23[v25];
    uint64_t v28 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  uint64_t v29 = a3[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *uint64_t v30 = a2[v29];
  *(_OWORD *)(v30 + 8) = *(_OWORD *)&a2[v29 + 8];
  uint64_t v32 = *(int *)(v6 + 24);
  uint64_t v33 = &v30[v32];
  uint64_t v34 = &v31[v32];
  uint64_t v35 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
  {
    uint64_t v36 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
  }
  uint64_t v37 = sub_10017DF08(&qword_100E8EAB0);
  *(void *)&v30[*(int *)(v37 + 28)] = *(void *)&v31[*(int *)(v37 + 28)];
  return a1;
}

uint64_t sub_1006FB0D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (void *)(a1 + v9);
      uint64_t v11 = (const void *)(a2 + v9);
      uint64_t v12 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v19 = a1;
      uint64_t v20 = v6;
      goto LABEL_15;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_100151660();
LABEL_7:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v15 = (void *)a1;
    uint64_t v16 = (const void *)a2;
LABEL_8:
    memcpy(v15, v16, v14);
    goto LABEL_16;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v17 = (_OWORD *)(a2 + 8);
  if (*(void *)(a1 + 16) < 2uLL) {
    goto LABEL_12;
  }
  unint64_t v18 = *(void *)(a2 + 16);
  if (v18 < 2)
  {
    sub_10027B4D4(a1 + 8);
LABEL_12:
    *(_OWORD *)(a1 + 8) = *v17;
    goto LABEL_34;
  }
  *(void *)(a1 + 8) = *(void *)v17;
  *(void *)(a1 + 16) = v18;
  swift_bridgeObjectRelease();
LABEL_34:
  uint64_t v59 = *(int *)(v6 + 24);
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = type metadata accessor for Date();
  int v63 = _s7Weather24LocationCompositionStateOwet_0(v60, 1, v62);
  int v64 = _s7Weather24LocationCompositionStateOwet_0(v61, 1, v62);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
      uint64_t v19 = v60;
      uint64_t v20 = v62;
LABEL_15:
      _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v20);
      goto LABEL_16;
    }
    goto LABEL_39;
  }
  uint64_t v65 = *(void *)(v62 - 8);
  if (v64)
  {
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v60, v62);
LABEL_39:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v15 = (void *)v60;
    uint64_t v16 = (const void *)v61;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 40))(v60, v61, v62);
LABEL_16:
  uint64_t v21 = a3[5];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v21);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  uint64_t v25 = a3[6];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  char v28 = *(unsigned char *)(v27 + 32);
  uint64_t v29 = *(void *)v26;
  uint64_t v30 = *(void *)(v26 + 8);
  uint64_t v31 = *(void *)(v26 + 16);
  uint64_t v32 = *(void *)(v26 + 24);
  char v33 = *(unsigned char *)(v26 + 32);
  long long v34 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v34;
  *(unsigned char *)(v26 + 32) = v28;
  sub_100191934(v29, v30, v31, v32, v33);
  if (a1 != a2)
  {
    uint64_t v35 = a3[7];
    uint64_t v36 = (char *)(a1 + v35);
    uint64_t v37 = (char *)(a2 + v35);
    sub_10017DF4C(a1 + v35, &qword_100E63BD0);
    uint64_t v38 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      v36[16] = v37[16];
      v36[17] = v37[17];
      v36[18] = v37[18];
      uint64_t v39 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v40 = &v36[v39];
      unint64_t v41 = &v37[v39];
      uint64_t v42 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
  }
  uint64_t v43 = a3[8];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v46 = (_OWORD *)(a1 + v43 + 8);
  uint64_t v47 = (_OWORD *)(v45 + 8);
  if (*(void *)(a1 + v43 + 16) < 2uLL) {
    goto LABEL_23;
  }
  unint64_t v48 = *(void *)(v45 + 16);
  if (v48 < 2)
  {
    sub_10027B4D4((uint64_t)v46);
LABEL_23:
    *uint64_t v46 = *v47;
    goto LABEL_25;
  }
  *(void *)(v44 + 8) = *(void *)v47;
  *(void *)(v44 + 16) = v48;
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v49 = *(int *)(v6 + 24);
  uint64_t v50 = (void *)(v44 + v49);
  int v51 = (const void *)(v45 + v49);
  uint64_t v52 = type metadata accessor for Date();
  int v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v52);
  int v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52);
  if (!v53)
  {
    uint64_t v55 = *(void *)(v52 - 8);
    if (!v54)
    {
      (*(void (**)(void *, const void *, uint64_t))(v55 + 40))(v50, v51, v52);
      goto LABEL_31;
    }
    (*(void (**)(void *, uint64_t))(v55 + 8))(v50, v52);
    goto LABEL_30;
  }
  if (v54)
  {
LABEL_30:
    uint64_t v56 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v50, v51, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
LABEL_31:
  uint64_t v57 = sub_10017DF08(&qword_100E8EAB0);
  *(void *)(v44 + *(int *)(v57 + 28)) = *(void *)(v45 + *(int *)(v57 + 28));
  swift_release();
  return a1;
}

uint64_t sub_1006FB6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006FB6B8);
}

uint64_t sub_1006FB6B8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1001097B4();
  sub_10017DF08(&qword_100E63A10);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(v4 + a3[5] + 24));
    }
    sub_10017DF08(&qword_100E63BF8);
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[7];
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E8EAB0);
      uint64_t v13 = a3[8];
    }
    uint64_t v9 = v4 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_1006FB78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006FB7A0);
}

void sub_1006FB7A0()
{
  sub_100150288();
  sub_10017DF08(&qword_100E63A10);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    sub_100162B34();
  }
  else
  {
    if (v3 == 0x7FFFFFFF)
    {
      *(void *)(v1 + *(int *)(v2 + 20) + 24) = (v0 - 1);
      return;
    }
    sub_10017DF08(&qword_100E63BF8);
    sub_100162F30();
    if (*(_DWORD *)(v5 + 84) != v3) {
      sub_10017DF08(&qword_100E8EAB0);
    }
  }
  sub_1001650E4();

  _s7Weather24LocationCompositionStateOwst_0(v6, v7, v8, v9);
}

uint64_t sub_1006FB86C()
{
  return sub_100126084();
}

uint64_t sub_1006FB934()
{
  return sub_100126084();
}

unint64_t sub_1006FB988()
{
  return sub_10015180C((uint64_t)&unk_100E8EB60);
}

unint64_t sub_1006FB9D0(uint64_t a1)
{
  unint64_t result = sub_1006FB9F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1006FB9F8()
{
  unint64_t result = qword_100E8EB80;
  if (!qword_100E8EB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EB80);
  }
  return result;
}

uint64_t sub_1006FBA44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006FBA88()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1006FBAA4()
{
  return sub_10015180C((uint64_t)&qword_100E63A28);
}

uint64_t sub_1006FBAF0()
{
  return sub_10006B57C();
}

uint64_t sub_1006FBB08()
{
  return sub_1006FBB34((uint64_t)&type metadata accessor for PrimitiveButtonStyleConfiguration, (uint64_t (*)(void))&PrimitiveButtonStyleConfiguration.trigger());
}

uint64_t sub_1006FBB34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = sub_10018E040();
  v4(v3);
  return a2();
}

uint64_t sub_1006FBB9C()
{
  sub_10010977C();
  type metadata accessor for PageControlDisplayStateModifier(0);
  sub_100179EF0();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10018F6D8(*(void *)(v0 + v2), *(unsigned char *)(v0 + v2 + 8));
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v3))
    {
      sub_100162880();
      sub_100162F0C();
      v4();
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  sub_1001093E8();
  sub_100162714();
  return swift_deallocObject();
}

unint64_t sub_1006FBCA4()
{
  unint64_t result = qword_100E8EC30;
  if (!qword_100E8EC30)
  {
    sub_10018C6DC(&qword_100E8EC20);
    sub_1006FBD44();
    sub_10024D5E4((uint64_t)&unk_100EAAEC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EC30);
  }
  return result;
}

unint64_t sub_1006FBD44()
{
  unint64_t result = qword_100E8EC38;
  if (!qword_100E8EC38)
  {
    sub_10018C6DC(&qword_100E8EC40);
    sub_1006FBDF0();
    sub_10015180C((uint64_t)&unk_100E8ECE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EC38);
  }
  return result;
}

unint64_t sub_1006FBDF0()
{
  unint64_t result = qword_100E8EC48;
  if (!qword_100E8EC48)
  {
    sub_10018C6DC(&qword_100E8EC50);
    sub_1001CB570((uint64_t)&unk_100E8EC58);
    sub_10015180C((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EC48);
  }
  return result;
}

unint64_t sub_1006FBED4()
{
  return sub_1001C1C7C((uint64_t)&unk_100E8EC68);
}

unint64_t sub_1006FBF04()
{
  return sub_1001C1C7C((uint64_t)&unk_100E8EC78);
}

unint64_t sub_1006FBF34()
{
  return sub_1001C1C7C((uint64_t)&unk_100E8EC88);
}

unint64_t sub_1006FBF64()
{
  return sub_1001C1C7C((uint64_t)&unk_100E8EC98);
}

unint64_t sub_1006FBF94()
{
  return sub_1001C1C7C((uint64_t)&unk_100E8ECA8);
}

unint64_t sub_1006FBFC4()
{
  unint64_t result = qword_100E8ECB8;
  if (!qword_100E8ECB8)
  {
    sub_10018C6DC(&qword_100E8ECC0);
    sub_1006FC064();
    sub_10024D5E4((uint64_t)&unk_100E743F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8ECB8);
  }
  return result;
}

unint64_t sub_1006FC064()
{
  unint64_t result = qword_100E8ECC8;
  if (!qword_100E8ECC8)
  {
    sub_10018C6DC(&qword_100E8ECD0);
    sub_10024D5E4((uint64_t)&unk_100E8ECD8);
    sub_10024D5E4((uint64_t)&qword_100E64438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8ECC8);
  }
  return result;
}

uint64_t type metadata accessor for ComputePinnedMapSizeViewModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8EED8);
}

uint64_t sub_1006FC14C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v5 = type metadata accessor for PinnedMapView(0);
  sub_1001627C0(v5);
  uint64_t v7 = (uint64_t (**)(void))(v2
                          + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));

  return sub_1006EFEB4(v7, a1, a2);
}

void sub_1006FC1AC(double *a1@<X8>)
{
  *a1 = sub_1008E40E4();
}

uint64_t sub_1006FC1D8()
{
  return sub_1008E4120();
}

uint64_t sub_1006FC204()
{
  uint64_t v1 = type metadata accessor for PinnedMapView(0);
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3);
  type metadata accessor for Location.Identifier();
  sub_100179DC0();
  sub_100162F0C();
  v4();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_100163380() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100179DC0();
    sub_100162F0C();
    v5();
  }
  else
  {
    swift_release();
  }
  sub_100162B00(*(int *)(v1 + 36));
  sub_10018F6D8(*(void *)(v3 + *(int *)(v1 + 40)), *(unsigned char *)(v3 + *(int *)(v1 + 40) + 8));
  sub_100164ABC();

  return swift_deallocObject();
}

uint64_t sub_1006FC34C()
{
  return sub_1006FC364();
}

uint64_t sub_1006FC364()
{
  uint64_t v0 = sub_100127C8C();
  uint64_t v1 = type metadata accessor for PinnedMapView(v0);
  sub_1001627C0(v1);
  uint64_t v3 = (void *)sub_1001A4B78(*(unsigned __int8 *)(v2 + 80));
  return sub_1006F0E54(v3, v4);
}

uint64_t sub_1006FC398(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006FC3F0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006FC438()
{
  return sub_1006F0750(*(void *)(v0 + 16));
}

uint64_t sub_1006FC440()
{
  return sub_1006F0930(*(void *)(v0 + 16));
}

uint64_t sub_1006FC450()
{
  return sub_1006FC364();
}

uint64_t sub_1006FC468()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006FC4A0(void *a1)
{
  return sub_1006F34CC(a1);
}

BOOL sub_1006FC4B0(uint64_t a1)
{
  return sub_1006F34D4(a1, (unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1006FC4B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1006EE5A8(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1006FC4C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1006F32B4(*(void *)(v1 + 48), *(void *)(v1 + 24), a1);
}

uint64_t sub_1006FC4E0()
{
  uint64_t v0 = sub_1006EEB70();
  return sub_100182AB8(v0);
}

uint64_t sub_1006FC50C()
{
  return sub_1006EEC10();
}

uint64_t sub_1006FC544()
{
  return sub_1006FC570((uint64_t)type metadata accessor for LocationViewPage, (uint64_t (*)(uint64_t))sub_1006EF124);
}

uint64_t sub_1006FC570(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_10018E040();
  uint64_t v5 = *(void *)(v4(v3) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a2(v6);
}

uint64_t sub_1006FC5EC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1006FC624()
{
  return sub_1006EEFD0();
}

uint64_t sub_1006FC62C()
{
  return sub_1006EEC10();
}

uint64_t sub_1006FC658()
{
  return sub_1006EEC10();
}

uint64_t sub_1006FC684()
{
  type metadata accessor for LocationModel();
  sub_100179DC0();
  sub_100162F0C();
  v0();
  swift_bridgeObjectRelease();
  sub_100188D90();

  return swift_deallocObject();
}

uint64_t sub_1006FC714()
{
  return sub_10006B57C();
}

uint64_t sub_1006FC73C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
      *(unsigned char *)(a1 + 18) = *((unsigned char *)a2 + 18);
      uint64_t v7 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = (uint64_t)a2 + v7;
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v42 = a3;
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(void *)(v14 + 24);
    uint64_t v19 = *(void *)(v14 + 32);
    uint64_t v20 = *(void *)(v14 + 40);
    char v21 = *(unsigned char *)(v14 + 48);
    sub_100193D54(*(void *)v14, v16, v17, v18, v19, v20, v21);
    *(void *)uint64_t v13 = v15;
    *(void *)(v13 + 8) = v16;
    *(void *)(v13 + 16) = v17;
    *(void *)(v13 + 24) = v18;
    *(void *)(v13 + 32) = v19;
    *(void *)(v13 + 40) = v20;
    *(unsigned char *)(v13 + 48) = v21;
    uint64_t v22 = *(int *)(v42 + 24);
    uint64_t v23 = a2;
    unint64_t v41 = a2;
    uint64_t v24 = a1 + v22;
    uint64_t v25 = (uint64_t)v23 + v22;
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    uint64_t v28 = *(void *)(v25 + 16);
    uint64_t v29 = *(void *)(v25 + 24);
    uint64_t v30 = *(void *)(v25 + 32);
    uint64_t v31 = *(void *)(v25 + 40);
    uint64_t v33 = *(void *)(v25 + 48);
    uint64_t v32 = *(void *)(v25 + 56);
    uint64_t v39 = *(void *)(v25 + 64);
    char v40 = *(unsigned char *)(v25 + 72);
    sub_1001910C8(*(void *)v25, v27, v28, v29, v30, v31, v33, v32, v39, v40);
    *(void *)uint64_t v24 = v26;
    *(void *)(v24 + 8) = v27;
    *(void *)(v24 + 16) = v28;
    *(void *)(v24 + 24) = v29;
    *(void *)(v24 + 32) = v30;
    *(void *)(v24 + 40) = v31;
    *(void *)(v24 + 48) = v33;
    *(void *)(v24 + 56) = v32;
    *(void *)(v24 + 64) = v39;
    *(unsigned char *)(v24 + 72) = v40;
    uint64_t v34 = *(int *)(v42 + 28);
    uint64_t v35 = a1 + v34;
    uint64_t v36 = (uint64_t)v41 + v34;
    uint64_t v37 = *(void *)v36;
    LOBYTE(v32) = *(unsigned char *)(v36 + 8);
    sub_100195B7C(*(void *)v36, v32);
    *(void *)uint64_t v35 = v37;
    *(unsigned char *)(v35 + 8) = v32;
  }
  return a1;
}

uint64_t sub_1006FC998(uint64_t a1, int *a2)
{
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[5];
  sub_10014DC00(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(unsigned char *)(v6 + 48));
  uint64_t v7 = a1 + a2[6];
  sub_10018CCC4(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);

  return sub_10018F6D8(v9, v10);
}

uint64_t sub_1006FCAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
    uint64_t v6 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v41 = a3;
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v16 = *(void *)(v12 + 24);
  uint64_t v17 = *(void *)(v12 + 32);
  uint64_t v18 = *(void *)(v12 + 40);
  char v19 = *(unsigned char *)(v12 + 48);
  sub_100193D54(*(void *)v12, v14, v15, v16, v17, v18, v19);
  *(void *)uint64_t v11 = v13;
  *(void *)(v11 + 8) = v14;
  *(void *)(v11 + 16) = v15;
  *(void *)(v11 + 24) = v16;
  *(void *)(v11 + 32) = v17;
  *(void *)(v11 + 40) = v18;
  *(unsigned char *)(v11 + 48) = v19;
  uint64_t v20 = *(int *)(v41 + 24);
  uint64_t v21 = a2;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v22 = a1 + v20;
  uint64_t v23 = v21 + v20;
  uint64_t v24 = *(void *)v23;
  uint64_t v25 = *(void *)(v23 + 8);
  uint64_t v26 = *(void *)(v23 + 16);
  uint64_t v27 = *(void *)(v23 + 24);
  uint64_t v28 = *(void *)(v23 + 32);
  uint64_t v29 = *(void *)(v23 + 40);
  uint64_t v31 = *(void *)(v23 + 48);
  uint64_t v30 = *(void *)(v23 + 56);
  uint64_t v32 = *(void *)(v23 + 64);
  char v38 = *(unsigned char *)(v23 + 72);
  sub_1001910C8(*(void *)v23, v25, v26, v27, v28, v29, v31, v30, v32, v38);
  *(void *)uint64_t v22 = v24;
  *(void *)(v22 + 8) = v25;
  *(void *)(v22 + 16) = v26;
  *(void *)(v22 + 24) = v27;
  *(void *)(v22 + 32) = v28;
  *(void *)(v22 + 40) = v29;
  *(void *)(v22 + 48) = v31;
  *(void *)(v22 + 56) = v30;
  *(void *)(v22 + 64) = v32;
  *(unsigned char *)(v22 + 72) = v38;
  uint64_t v33 = *(int *)(v41 + 28);
  uint64_t v34 = v39 + v33;
  uint64_t v35 = v40 + v33;
  uint64_t v36 = *(void *)v35;
  LOBYTE(v30) = *(unsigned char *)(v35 + 8);
  sub_100195B7C(*(void *)v35, v30);
  *(void *)uint64_t v34 = v36;
  *(unsigned char *)(v34 + 8) = v30;
  return v39;
}

uint64_t sub_1006FCCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C(a1, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
      *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
      uint64_t v6 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v60 = a3;
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v16 = *(void *)(v12 + 24);
  uint64_t v17 = *(void *)(v12 + 32);
  uint64_t v18 = *(void *)(v12 + 40);
  char v19 = *(unsigned char *)(v12 + 48);
  sub_100193D54(*(void *)v12, v14, v15, v16, v17, v18, v19);
  uint64_t v20 = *(void *)v11;
  uint64_t v21 = *(void *)(v11 + 8);
  uint64_t v22 = *(void *)(v11 + 16);
  uint64_t v23 = *(void *)(v11 + 24);
  uint64_t v24 = *(void *)(v11 + 32);
  uint64_t v25 = *(void *)(v11 + 40);
  char v26 = *(unsigned char *)(v11 + 48);
  *(void *)uint64_t v11 = v13;
  *(void *)(v11 + 8) = v14;
  *(void *)(v11 + 16) = v15;
  *(void *)(v11 + 24) = v16;
  *(void *)(v11 + 32) = v17;
  *(void *)(v11 + 40) = v18;
  *(unsigned char *)(v11 + 48) = v19;
  sub_10014DC00(v20, v21, v22, v23, v24, v25, v26);
  uint64_t v27 = *(int *)(v60 + 24);
  uint64_t v28 = a2;
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  uint64_t v29 = a1 + v27;
  uint64_t v30 = v28 + v27;
  uint64_t v31 = *(void *)v30;
  uint64_t v32 = *(void *)(v30 + 8);
  uint64_t v33 = *(void *)(v30 + 16);
  uint64_t v34 = *(void *)(v30 + 24);
  uint64_t v35 = *(void *)(v30 + 32);
  uint64_t v36 = *(void *)(v30 + 40);
  uint64_t v38 = *(void *)(v30 + 48);
  uint64_t v37 = *(void *)(v30 + 56);
  uint64_t v39 = *(void *)(v30 + 64);
  char v57 = *(unsigned char *)(v30 + 72);
  sub_1001910C8(*(void *)v30, v32, v33, v34, v35, v36, v38, v37, v39, v57);
  uint64_t v40 = *(void *)v29;
  uint64_t v41 = *(void *)(v29 + 8);
  uint64_t v42 = *(void *)(v29 + 16);
  uint64_t v43 = *(void *)(v29 + 24);
  uint64_t v44 = *(void *)(v29 + 32);
  uint64_t v45 = *(void *)(v29 + 40);
  uint64_t v46 = *(void *)(v29 + 48);
  uint64_t v47 = *(void *)(v29 + 56);
  uint64_t v48 = *(void *)(v29 + 64);
  char v49 = *(unsigned char *)(v29 + 72);
  *(void *)uint64_t v29 = v31;
  *(void *)(v29 + 8) = v32;
  *(void *)(v29 + 16) = v33;
  *(void *)(v29 + 24) = v34;
  *(void *)(v29 + 32) = v35;
  *(void *)(v29 + 40) = v36;
  *(void *)(v29 + 48) = v38;
  *(void *)(v29 + 56) = v37;
  *(void *)(v29 + 64) = v39;
  *(unsigned char *)(v29 + 72) = v57;
  sub_10018CCC4(v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
  uint64_t v50 = *(int *)(v60 + 28);
  uint64_t v51 = v58 + v50;
  uint64_t v52 = v59 + v50;
  uint64_t v53 = *(void *)v52;
  LOBYTE(v37) = *(unsigned char *)(v52 + 8);
  sub_100195B7C(*(void *)v52, v37);
  uint64_t v54 = *(void *)v51;
  char v55 = *(unsigned char *)(v51 + 8);
  *(void *)uint64_t v51 = v53;
  *(unsigned char *)(v51 + 8) = v37;
  sub_10018F6D8(v54, v55);
  return v58;
}

char *sub_1006FCF28(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    a1[17] = a2[17];
    a1[18] = a2[18];
    uint64_t v7 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v11];
  uint64_t v14 = &a2[v11];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  v13[48] = v14[48];
  memcpy(&a1[v12], &a2[v12], 0x49uLL);
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  return a1;
}

char *sub_1006FD07C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C((uint64_t)a1, &qword_100E63BD0);
    uint64_t v6 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      uint64_t v7 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  char v14 = v13[48];
  uint64_t v15 = *(void *)v12;
  uint64_t v16 = *((void *)v12 + 1);
  uint64_t v17 = *((void *)v12 + 2);
  uint64_t v18 = *((void *)v12 + 3);
  uint64_t v19 = *((void *)v12 + 4);
  uint64_t v20 = *((void *)v12 + 5);
  char v21 = v12[48];
  long long v22 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v22;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v14;
  sub_10014DC00(v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = a3[6];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *((void *)v25 + 8);
  char v27 = v25[72];
  uint64_t v28 = *(void *)v24;
  uint64_t v29 = *((void *)v24 + 1);
  uint64_t v30 = *((void *)v24 + 2);
  uint64_t v31 = *((void *)v24 + 3);
  uint64_t v32 = *((void *)v24 + 4);
  uint64_t v33 = *((void *)v24 + 5);
  uint64_t v34 = *((void *)v24 + 6);
  uint64_t v35 = *((void *)v24 + 7);
  uint64_t v36 = *((void *)v24 + 8);
  char v37 = v24[72];
  long long v38 = *((_OWORD *)v25 + 1);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v38;
  long long v39 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v39;
  *((void *)v24 + 8) = v26;
  unsigned char v24[72] = v27;
  sub_10018CCC4(v28, v29, v30, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v40 = a3[7];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = *(void *)v42;
  LOBYTE(v42) = v42[8];
  uint64_t v44 = *(void *)v41;
  char v45 = v41[8];
  *(void *)uint64_t v41 = v43;
  v41[8] = (char)v42;
  sub_10018F6D8(v44, v45);
  return a1;
}

uint64_t sub_1006FD250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006FD264);
}

uint64_t sub_1006FD264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_1001790C4(*(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 48));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_1006FD2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006FD300);
}

void sub_1006FD300()
{
  sub_100150288();
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20) + 48) = -v0;
  }
}

void sub_1006FD380()
{
  sub_10002FD50(319, (unint64_t *)&qword_100E63C80, (uint64_t (*)(uint64_t))type metadata accessor for DisplayMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1006FD458(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_100190CD4(*(void *)a2, v8, v9, v10, v11);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (void *)(a1 + v12);
    char v14 = (void *)(a2 + v12);
    sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = a2 + v17;
    *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
    uint64_t v20 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
    char v21 = (void *)(v18 + v20);
    long long v22 = (void *)(v19 + v20);
    uint64_t v23 = type metadata accessor for ContentStatusBanner();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_10017DF08(&qword_100E63A10);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      *(unsigned char *)char v21 = *(unsigned char *)v22;
      uint64_t v25 = v22 + 1;
      unint64_t v26 = v22[2];
      if (v26 >= 2)
      {
        v21[1] = *v25;
        v21[2] = v26;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v21 + 1) = *(_OWORD *)v25;
      }
      uint64_t v27 = *(int *)(v23 + 24);
      uint64_t v28 = (char *)v21 + v27;
      uint64_t v29 = (char *)v22 + v27;
      uint64_t v30 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v32 = sub_10017DF08(&qword_100E8EF18);
    *(void *)(v18 + *(int *)(v32 + 28)) = *(void *)(v19 + *(int *)(v32 + 28));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1006FD728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v15 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v16 = (unsigned char *)(v13 + v15);
  uint64_t v17 = (unsigned char *)(v14 + v15);
  uint64_t v18 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E63A10);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *uint64_t v16 = *v17;
    *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
    uint64_t v20 = *(int *)(v18 + 24);
    char v21 = &v16[v20];
    long long v22 = &v17[v20];
    uint64_t v23 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v25 = sub_10017DF08(&qword_100E8EF18);
  *(void *)(v13 + *(int *)(v25 + 28)) = *(void *)(v14 + *(int *)(v25 + 28));
  return a1;
}

uint64_t sub_1006FD974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v6;
  sub_100191934(v7, v8, v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_10017DF4C(a1 + v13, &qword_100EAA740);
    uint64_t v16 = sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v21 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v22 = v19 + v21;
  uint64_t v23 = v20 + v21;
  uint64_t v24 = type metadata accessor for ContentStatusBanner();
  int v25 = _s7Weather24LocationCompositionStateOwet_0(v22, 1, v24);
  int v26 = _s7Weather24LocationCompositionStateOwet_0(v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
      *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
      uint64_t v27 = *(int *)(v24 + 24);
      uint64_t v28 = (void *)(v22 + v27);
      uint64_t v29 = (const void *)(v23 + v27);
      uint64_t v30 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v37 = v22;
      uint64_t v38 = v24;
      goto LABEL_19;
    }
    goto LABEL_11;
  }
  if (v26)
  {
    sub_100151660();
LABEL_11:
    size_t v32 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v33 = (void *)v22;
    uint64_t v34 = (const void *)v23;
    goto LABEL_12;
  }
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  uint64_t v35 = (void *)(v23 + 8);
  if (*(void *)(v22 + 16) >= 2uLL)
  {
    unint64_t v36 = *(void *)(v23 + 16);
    if (v36 >= 2)
    {
      *(void *)(v22 + 8) = *v35;
      *(void *)(v22 + 16) = v36;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_10027B4D4(v22 + 8);
  }
  *(_OWORD *)(v22 + 8) = *(_OWORD *)v35;
LABEL_22:
  uint64_t v41 = *(int *)(v24 + 24);
  uint64_t v42 = v22 + v41;
  uint64_t v43 = v23 + v41;
  uint64_t v44 = type metadata accessor for Date();
  int v45 = _s7Weather24LocationCompositionStateOwet_0(v42, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0(v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      uint64_t v37 = v42;
      uint64_t v38 = v44;
LABEL_19:
      _s7Weather24LocationCompositionStateOwst_0(v37, 0, 1, v38);
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v47 = *(void *)(v44 - 8);
    if (!v46)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 40))(v42, v43, v44);
      goto LABEL_20;
    }
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v42, v44);
  }
  size_t v32 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v33 = (void *)v42;
  uint64_t v34 = (const void *)v43;
LABEL_12:
  memcpy(v33, v34, v32);
LABEL_20:
  uint64_t v39 = sub_10017DF08(&qword_100E8EF18);
  *(void *)(v19 + *(int *)(v39 + 28)) = *(void *)(v20 + *(int *)(v39 + 28));
  swift_release();
  return a1;
}

uint64_t sub_1006FDD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006FDDA8);
}

uint64_t sub_1006FDDA8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 == 254) {
    return sub_1001790C4(*(unsigned __int8 *)(a1 + 32));
  }
  sub_10017DF08(&qword_100E6DC20);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
  }
  else
  {
    sub_10017DF08(&qword_100E8EF18);
    sub_10018AF04();
  }
  uint64_t v8 = sub_10017F118(v7);

  return _s7Weather24LocationCompositionStateOwet_0(v8, v9, v10);
}

uint64_t sub_1006FDE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006FDE58);
}

void sub_1006FDE58()
{
  sub_1001097B4();
  if (v2 == 254)
  {
    *(unsigned char *)(v1 + 32) = -v0;
  }
  else
  {
    int v3 = v2;
    sub_10017DF08(&qword_100E6DC20);
    sub_100162F30();
    if (*(_DWORD *)(v4 + 84) != v3)
    {
      sub_10017DF08(&qword_100E8EF18);
      sub_100152410();
    }
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
}

uint64_t sub_1006FDF08()
{
  return sub_100126084();
}

uint64_t sub_1006FE044()
{
  return sub_100126084();
}

unint64_t sub_1006FE150()
{
  unint64_t result = qword_100E8F010;
  if (!qword_100E8F010)
  {
    sub_10018C6DC(&qword_100E8F018);
    sub_1006FBCA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F010);
  }
  return result;
}

uint64_t sub_1006FE1CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1006FE2F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006FE31C()
{
  uint64_t v1 = (int *)type metadata accessor for ComputePinnedMapSizeViewModifier(0);
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100179DC0();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + v1[5];
  sub_10014DC00(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(unsigned char *)(v5 + 48));
  sub_100162B00(v1[6]);
  sub_10018F6D8(*(void *)(v3 + v1[7]), *(unsigned char *)(v3 + v1[7] + 8));
  sub_100164ABC();

  return swift_deallocObject();
}

void sub_1006FE440()
{
  uint64_t v0 = sub_100127C8C();
  uint64_t v1 = type metadata accessor for ComputePinnedMapSizeViewModifier(v0);
  sub_1001627C0(v1);
  uint64_t v2 = sub_10017238C();

  sub_1006F1020(v2, v3);
}

uint64_t sub_1006FE480()
{
  sub_10010977C();
  uint64_t v1 = type metadata accessor for ContentStatusBannerPresentationViewModifier(0);
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_100191934(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + v3 + 16), *(void *)(v0 + v3 + 24), *(unsigned char *)(v0 + v3 + 32));
  sub_10017DF08(&qword_100EAA740);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ScenePhase();
    sub_100179DC0();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  unint64_t v5 = v0 + v3 + *(int *)(v1 + 24);
  unint64_t v6 = v5 + *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v7 = type metadata accessor for ContentStatusBanner();
  if (!sub_100181EF0(v7))
  {
    if (*(void *)(v6 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v8 = type metadata accessor for Date();
    if (!sub_100181EF0(v8))
    {
      sub_100162880();
      uint64_t v9 = sub_1001CA884();
      v10(v9);
    }
  }
  sub_10017DF08(&qword_100E8EF18);
  swift_release();
  sub_100188D90();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_1006FE5F0()
{
  uint64_t v0 = sub_100127C8C();
  uint64_t v1 = type metadata accessor for ContentStatusBannerPresentationViewModifier(v0);
  sub_1001627C0(v1);
  uint64_t v2 = (double *)sub_10017238C();

  return sub_1006F14D0(v2, v3);
}

uint64_t sub_1006FE630()
{
  return sub_1006F187C();
}

unint64_t sub_1006FE650()
{
  unint64_t result = qword_100E8F0E8;
  if (!qword_100E8F0E8)
  {
    sub_10018C6DC(&qword_100E8F090);
    sub_10024D5E4((uint64_t)&unk_100E8F0F0);
    sub_10024D5E4((uint64_t)&unk_100E8F0F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F0E8);
  }
  return result;
}

unint64_t sub_1006FE714()
{
  return sub_1001C1C7C((uint64_t)&unk_100E8F108);
}

uint64_t sub_1006FE758(void *a1)
{
  return sub_1006F3494(a1);
}

BOOL sub_1006FE768(uint64_t a1)
{
  return sub_1006F349C(a1, (unsigned __int8 *)(v1 + 16));
}

uint64_t sub_1006FE770(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1006FE7CC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006FE804()
{
  return sub_100227304();
}

uint64_t sub_1006FE81C()
{
  return sub_100227350();
}

uint64_t sub_1006FE834@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v74 = a3;
  uint64_t v4 = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  sub_100179C0C();
  uint64_t v63 = v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v70 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v68 = v11;
  type metadata accessor for PrecipitationTotalPlatterViewModel();
  sub_100179C0C();
  uint64_t v66 = v13;
  uint64_t v67 = v12;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v75 = v14;
  uint64_t v15 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v17 = v16;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v65 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v23 = *(int *)(type metadata accessor for ConditionDetailInput.Input(0) + 32);
  unint64_t v73 = a1;
  uint64_t v24 = *(void (**)(char *))(v17 + 16);
  uint64_t v64 = a1 + v23;
  v24(v22);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v22, v15);
  int v26 = enum case for DetailCondition.conditions(_:);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v27(v22, v15);
  if (v25 == v26
    || (uint64_t v28 = v65,
        (*(void (**)(char *, void, uint64_t))(v17 + 104))(v65, enum case for DetailCondition.precipitationTotal(_:), v15), char v29 = static DetailCondition.== infix(_:_:)(), v27(v28, v15), (v29 & 1) != 0))
  {
    uint64_t v30 = v69 + 2;
    uint64_t v31 = v69[5];
    uint64_t v69 = (void *)v69[6];
    sub_1001B1E64(v30, v31);
    size_t v32 = (void *)ConditionUnits.precipitationTotal.getter();
    uint64_t v33 = v68;
    Location.timeZone.getter();
    dispatch thunk of PrecipitationTotalPlatterViewModelFactoryType.makeModel(currentWeather:dayWeather:unit:timeZone:)();

    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v33, v72);
    unint64_t v34 = *(void *)(PrecipitationTotalPlatterViewModel.sections.getter() + 16);
    swift_bridgeObjectRelease();
    uint64_t v35 = PrecipitationTotalPlatterViewModel.sections.getter();
    uint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      unint64_t v73 = v34;
      uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t))(v63 + 16);
      unint64_t v38 = v35 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
      uint64_t v39 = (void (**)(char *, uint64_t))(v63 + 8);
      uint64_t v40 = *(void *)(v63 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        v37(v8, v38, v4);
        unint64_t v41 = *(void *)(PrecipitationTotalPlatterViewModel.SectionModel.rows.getter() + 16);
        swift_bridgeObjectRelease();
        (*v39)(v8, v4);
        if (v41 >= 2) {
          break;
        }
        v38 += v40;
        if (!--v36)
        {
          swift_bridgeObjectRelease_n();
          unint64_t v34 = v73;
          uint64_t v42 = v74;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v42 = v74;
      uint64_t v44 = v66;
      uint64_t v43 = v67;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v42 = v74;
LABEL_9:
      uint64_t v44 = v66;
      uint64_t v43 = v67;
      if (v34 <= 1)
      {
        int v45 = (objc_class *)[self mainBundle];
        unint64_t v46 = 0xD000000000000027;
        unint64_t v47 = 0xD000000000000073;
        unint64_t v61 = 0x8000000100CAF5C0;
        unint64_t v48 = 0x8000000100CAF570;
        unint64_t v49 = 0x8000000100CAF5A0;
        v50.super.isa = v45;
        unint64_t v51 = 0xD000000000000013;
LABEL_14:
        Swift::String v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v46, (Swift::String_optional)0, v50, *(Swift::String *)&v51, *(Swift::String *)&v47);

        uint64_t v56 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
        uint64_t v57 = v42 + v56[6];
        uint64_t v58 = type metadata accessor for WeatherDescription();
        _s7Weather24LocationCompositionStateOwst_0(v57, 1, 1, v58);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v42 + v56[7], v75, v43);
        uint64_t v59 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v42 + v56[8], 1, 1, v59);
        *(_OWORD *)uint64_t v42 = xmmword_100C53150;
        *(unsigned char *)(v42 + 16) = 2;
        *(Swift::String *)(v42 + 24) = v55;
        *(unsigned char *)(v42 + v56[9]) = 0;
        *(unsigned char *)(v42 + v56[10]) = 0;
        uint64_t v53 = v42;
        uint64_t v54 = 0;
        uint64_t v52 = (uint64_t)v56;
        return _s7Weather24LocationCompositionStateOwst_0(v53, v54, 1, v52);
      }
    }
    int v45 = (objc_class *)[self mainBundle];
    unint64_t v46 = 0xD000000000000014;
    unint64_t v47 = 0xD000000000000043;
    unint64_t v61 = 0x8000000100CAF660;
    unint64_t v48 = 0x8000000100CAF640;
    v50.super.isa = v45;
    unint64_t v51 = 0;
    unint64_t v49 = 0xE000000000000000;
    goto LABEL_14;
  }
  uint64_t v52 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v53 = v74;
  uint64_t v54 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v53, v54, 1, v52);
}

uint64_t sub_1006FEE08()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PrecipitationTotalConditionDetailPlatterViewModelFactory()
{
  return self;
}

uint64_t *sub_1006FEE64(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundTimeData();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E63760);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for BackgroundMoonData();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_10017DF08(&qword_100E63768);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t sub_1006FF07C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v4 = a1 + *(int *)(v3 + 20);
  uint64_t v5 = type metadata accessor for Elevation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(v3 + 24);
  uint64_t v7 = type metadata accessor for BackgroundMoonData();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t sub_1006FF1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Elevation();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E63760);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(v5 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for BackgroundMoonData();
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 24))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = sub_10017DF08(&qword_100E63768);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t sub_1006FF484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E63760);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(v5 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63768);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_1006FF64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Elevation();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E63760);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = *(int *)(v5 + 24);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for BackgroundMoonData();
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v17 - 8);
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v15, v16, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = sub_10017DF08(&qword_100E63768);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t sub_1006FF91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006FF930);
}

uint64_t sub_1006FF930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundTimeData();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1006FF978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006FF98C);
}

uint64_t sub_1006FF98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundTimeData();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_1006FF9DC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x61746144656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1006FFA64()
{
  return 0x61746144656D6974;
}

uint64_t sub_1006FFA7C(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E8F278);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1001B1E64(a1, a1[3]);
  sub_1006FFE9C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for WeatherConditionBackgroundTimeData();
  sub_1006FFEE8(&qword_100E8F280);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_1006FFBAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundTimeData();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v20 = v6 - v5;
  uint64_t v7 = sub_10017DF08(&qword_100E8F260);
  sub_100179C0C();
  uint64_t v19 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_1001B1E64(a1, a1[3]);
  sub_1006FFE9C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_1006FFEE8(&qword_100E8F270);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v7);
    sub_1001503A0(v20, v16, (uint64_t (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
    sub_1001503A0(v16, a2, (uint64_t (*)(void))type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
}

uint64_t sub_1006FFDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006FF9DC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1006FFDF0(uint64_t a1)
{
  unint64_t v2 = sub_1006FFE9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006FFE2C(uint64_t a1)
{
  unint64_t v2 = sub_1006FFE9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006FFE68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006FFBAC(a1, a2);
}

uint64_t sub_1006FFE80(void *a1)
{
  return sub_1006FFA7C(a1);
}

unint64_t sub_1006FFE9C()
{
  unint64_t result = qword_100E8F268;
  if (!qword_100E8F268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F268);
  }
  return result;
}

uint64_t sub_1006FFEE8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherConditionBackgroundPreprocessedDataModel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1006FFFC8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel.CodingKeys()
{
  return &type metadata for WeatherConditionBackgroundPreprocessedDataModel.CodingKeys;
}

unint64_t sub_100700004()
{
  unint64_t result = qword_100E8F288;
  if (!qword_100E8F288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F288);
  }
  return result;
}

unint64_t sub_100700054()
{
  unint64_t result = qword_100E8F290;
  if (!qword_100E8F290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F290);
  }
  return result;
}

unint64_t sub_1007000A4()
{
  unint64_t result = qword_100E8F298;
  if (!qword_100E8F298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F298);
  }
  return result;
}

uint64_t sub_1007000F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100700144(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1007001D4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007002B4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10070033C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10070037C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for MessageCoverViewModel()
{
}

uint64_t sub_1007003E0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(unsigned char *)a1 == 0;
  if (*(unsigned char *)a1) {
    uint64_t v5 = 0x656369746F6ELL;
  }
  else {
    uint64_t v5 = 0x616D7269666E6F63;
  }
  if (v4) {
    unint64_t v6 = 0xEC0000006E6F6974;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v7 = 0x656369746F6ELL;
  }
  else {
    uint64_t v7 = 0x616D7269666E6F63;
  }
  if (*(unsigned char *)a2) {
    unint64_t v8 = 0xE600000000000000;
  }
  else {
    unint64_t v8 = 0xEC0000006E6F6974;
  }
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  BOOL v12 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (v12 || (char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v13 & 1) != 0))
  {
    BOOL v14 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
    if (v14 || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v15 & 1) != 0))
    {
      BOOL v16 = *(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48);
      if (v16 || (char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v17 & 1) != 0))
      {
        uint64_t v18 = *(void *)(a1 + 72);
        uint64_t v19 = *(void *)(a2 + 72);
        if (v18)
        {
          if (v19)
          {
            uint64_t v20 = *(void *)(a1 + 56);
            uint64_t v21 = *(void *)(a1 + 64);
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = *(void *)(a2 + 64);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            LOBYTE(v20) = sub_100701574(v20, v21, v18, v22, v23, v19);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v20)
            {
LABEL_38:
              if (*(void *)(a1 + 80) == *(void *)(a2 + 80) && *(void *)(a1 + 88) == *(void *)(a2 + 88)) {
                return 1;
              }
              return _stringCompareWithSmolCheck(_:_:expecting:)();
            }
          }
        }
        else if (!v19)
        {
          goto LABEL_38;
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1007005D4@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C31870;
  *(void *)(inited + 32) = 0x6D496D6574737973;
  *(void *)(inited + 40) = 0xEF656D614E656761;
  long long v11 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(inited + 48) = v11;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x656C746974;
  *(void *)(inited + 88) = 0xE500000000000000;
  long long v4 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(inited + 96) = v4;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x6567617373656DLL;
  *(void *)(inited + 136) = 0xE700000000000000;
  long long v9 = *(_OWORD *)(v1 + 40);
  long long v10 = v4;
  *(_OWORD *)(inited + 144) = v9;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0x6E6F69746361;
  *(void *)(inited + 184) = 0xE600000000000000;
  sub_1007020E8(v1 + 56, (uint64_t)v8);
  sub_1007020E8((uint64_t)v8, (uint64_t)&v12);
  if (v13)
  {
    sub_10070217C(&v12, (uint64_t)&v14);
    uint64_t v7 = &unk_100E24EF8;
    sub_10070217C(&v14, (uint64_t)&v6);
    sub_100098DB4(&v6, (_OWORD *)(inited + 192));
  }
  else
  {
    *(void *)(inited + 216) = &type metadata for String;
    *(void *)(inited + 192) = 7104878;
    *(void *)(inited + 200) = 0xE300000000000000;
  }
  sub_10006AD9C((uint64_t)&v11);
  sub_10006AD9C((uint64_t)&v10);
  sub_10006AD9C((uint64_t)&v9);
  sub_100702150((uint64_t)v8);
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E8F2B8);
  a1[4] = sub_100047B30(&qword_100E8F2C0, &qword_100E8F2B8);
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1007007E0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07B98, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100700834(char a1)
{
  if (a1) {
    return 0x656369746F6ELL;
  }
  else {
    return 0x616D7269666E6F63;
  }
}

uint64_t sub_100700870(char *a1, char *a2)
{
  return sub_10088A548(*a1, *a2);
}

Swift::Int sub_10070087C()
{
  return sub_1006528AC();
}

uint64_t sub_100700884()
{
  return sub_1002C2644();
}

Swift::Int sub_10070088C()
{
  return sub_1002C4770();
}

uint64_t sub_100700894@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1007007E0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1007008C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100700834(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1007008F0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100700950()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1007009A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x747465536E65706FLL && a2 == 0xEC00000073676E69)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100700A40()
{
  return 0x747465536E65706FLL;
}

uint64_t sub_100700A60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100700B28(char a1)
{
  if (a1) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_100700B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007009A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100700B70(uint64_t a1)
{
  unint64_t v2 = sub_10070222C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100700BAC(uint64_t a1)
{
  unint64_t v2 = sub_10070222C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100700BE8()
{
  return sub_100700B28(*v0);
}

uint64_t sub_100700BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100700A60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100700C18(uint64_t a1)
{
  unint64_t v2 = sub_100702278();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100700C54(uint64_t a1)
{
  unint64_t v2 = sub_100702278();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100700C90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684957547 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D496D6574737973 && a2 == 0xEF656D614E656761;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6F43746E65636361 && a2 == 0xEE00786548726F6CLL)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100700F28(char a1)
{
  uint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6D496D6574737973;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 4:
      uint64_t result = 0x6E6F69746361;
      break;
    case 5:
      uint64_t result = 0x6F43746E65636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100700FFC(void *a1)
{
  char v3 = v1;
  uint64_t v5 = sub_10017DF08(&qword_100E8F348);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  sub_1001B1E64(a1, a1[3]);
  sub_10070235C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v13[0] = *v3;
  char v14 = 0;
  sub_100702440();
  sub_1001A0D18();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    sub_10019F014(1);
    sub_10019F014(2);
    sub_10019F014(3);
    sub_1007020E8((uint64_t)(v3 + 56), (uint64_t)v15);
    sub_1007020E8((uint64_t)v15, (uint64_t)v13);
    char v14 = 4;
    sub_10070248C();
    sub_1001A0D18();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10019F014(5);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_10070119C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10017DF08(&qword_100E8F328);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10011C760();
  sub_1001B1E64(a1, a1[3]);
  sub_10070235C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_1007023A8();
  sub_1001816A4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v22 = sub_100180278();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_100180278();
  char v27 = v24;
  uint64_t v8 = v7;
  LOBYTE(v24) = 3;
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  uint64_t v23 = v10;
  uint64_t v20 = sub_100180278();
  uint64_t v12 = v11;
  sub_1007023F4();
  swift_bridgeObjectRetain();
  sub_1001816A4();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_100180278();
  uint64_t v15 = v14;
  uint64_t v19 = v13;
  uint64_t v16 = sub_10017D310();
  v17(v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v27;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v23;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v12;
  *(void *)(a2 + 56) = v24;
  *(void *)(a2 + 64) = v25;
  *(void *)(a2 + 72) = v26;
  *(void *)(a2 + 80) = v19;
  *(void *)(a2 + 88) = v15;
  return result;
}

uint64_t sub_100701574(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11 = sub_100342FFC(a1);
  uint64_t v13 = v12;
  if (v11 == sub_100342FFC(a4) && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v16 & 1) == 0) {
      return result;
    }
  }
  if (a2 == a5 && a3 == a6) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_100701670()
{
  return sub_100700F28(*v0);
}

uint64_t sub_100701678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100700C90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007016A0(uint64_t a1)
{
  unint64_t v2 = sub_10070235C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007016DC(uint64_t a1)
{
  unint64_t v2 = sub_10070235C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100701718@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_10070119C(a1, (uint64_t)v5);
  if (!v2) {
    return memcpy(a2, v5, 0x60uLL);
  }
  return result;
}

uint64_t sub_100701764(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_100700FFC(a1);
}

uint64_t sub_1007017B8(uint64_t a1, uint64_t a2)
{
  return sub_100701574(*(unsigned char *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t sub_1007017D4@<X0>(uint64_t *a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_1007005D4(a1);
}

uint64_t sub_100701818()
{
  sub_100702194();

  return ShortDescribable.description.getter();
}

uint64_t sub_100701854@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  *(void *)(inited + 72) = &type metadata for SystemSettingLocation;
  *(unsigned char *)(inited + 48) = a1;
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100E8F2D0);
  a2[4] = sub_100047B30(&qword_100E8F2D8, &qword_100E8F2D0);
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100701948(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E8F310);
  sub_100179C0C();
  uint64_t v15 = v4;
  __chkstk_darwin(v5);
  sub_10011C760();
  uint64_t v6 = sub_10017DF08(&qword_100E8F318);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  sub_1001B1E64(a1, a1[3]);
  sub_10070222C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100702278();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  sub_100702310();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v14) {
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
}

uint64_t sub_100701B1C(void *a1)
{
  sub_10017DF08(&qword_100E8F2E8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v4 = sub_10017DF08(&qword_100E8F2F0);
  sub_100179C0C();
  uint64_t v27 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1[4];
  sub_1001B1E64(a1, a1[3]);
  sub_10070222C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    goto LABEL_6;
  }
  uint64_t v11 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 + 16);
  if (!v13
    || (uint64_t v14 = sub_100723214(1, v13, v11, v11 + 32, 0, (2 * v13) | 1),
        uint64_t v16 = v15,
        unint64_t v18 = v17,
        swift_bridgeObjectRelease(),
        uint64_t v12 = v14,
        v16 != v18 >> 1))
  {
    uint64_t v10 = v12;
    uint64_t v19 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v21 = v20;
    sub_10017DF08(&qword_100E67280);
    void *v21 = &unk_100E24EF8;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v9, v4);
LABEL_6:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    return v10;
  }
  sub_100702278();
  KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  sub_1007022C4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v10 = v28;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v23 = sub_10017E830();
  v24(v23);
  swift_unknownObjectRelease();
  uint64_t v25 = sub_1001D1C9C();
  v26(v25);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v10;
}

uint64_t sub_100701EC4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100701854(*v1, a1);
}

uint64_t sub_100701ECC()
{
  sub_1007021E0();

  return ShortDescribable.description.getter();
}

uint64_t sub_100701F08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100701B1C(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100701F38(void *a1)
{
  return sub_100701948(a1);
}

uint64_t sub_100701F58@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10089A8A0();
  if (!v1)
  {
    *(unsigned char *)a1 = result;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
  }
  return result;
}

uint64_t sub_100701F88()
{
  return sub_10089A9A0();
}

void *sub_100701FA8@<X0>(void *a1@<X8>)
{
  uint64_t result = (void *)sub_10089AA1C((uint64_t)v4);
  if (!v1) {
    return memcpy(a1, v4, 0x60uLL);
  }
  return result;
}

uint64_t sub_100701FF4()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_10089AB88();
}

unint64_t sub_10070204C()
{
  unint64_t result = qword_100E8F2A0;
  if (!qword_100E8F2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F2A0);
  }
  return result;
}

unint64_t sub_10070209C()
{
  unint64_t result = qword_100E8F2A8;
  if (!qword_100E8F2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F2A8);
  }
  return result;
}

uint64_t sub_1007020E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E8F2B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100702150(uint64_t a1)
{
  return a1;
}

uint64_t sub_10070217C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(void *)(a2 + 16) = *((void *)a1 + 2);
  *(_OWORD *)a2 = v2;
  return a2;
}

unint64_t sub_100702194()
{
  unint64_t result = qword_100E8F2C8;
  if (!qword_100E8F2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F2C8);
  }
  return result;
}

unint64_t sub_1007021E0()
{
  unint64_t result = qword_100E8F2E0;
  if (!qword_100E8F2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F2E0);
  }
  return result;
}

unint64_t sub_10070222C()
{
  unint64_t result = qword_100E8F2F8;
  if (!qword_100E8F2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F2F8);
  }
  return result;
}

unint64_t sub_100702278()
{
  unint64_t result = qword_100E8F300;
  if (!qword_100E8F300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F300);
  }
  return result;
}

unint64_t sub_1007022C4()
{
  unint64_t result = qword_100E8F308;
  if (!qword_100E8F308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F308);
  }
  return result;
}

unint64_t sub_100702310()
{
  unint64_t result = qword_100E8F320;
  if (!qword_100E8F320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F320);
  }
  return result;
}

unint64_t sub_10070235C()
{
  unint64_t result = qword_100E8F330;
  if (!qword_100E8F330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F330);
  }
  return result;
}

unint64_t sub_1007023A8()
{
  unint64_t result = qword_100E8F338;
  if (!qword_100E8F338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F338);
  }
  return result;
}

unint64_t sub_1007023F4()
{
  unint64_t result = qword_100E8F340;
  if (!qword_100E8F340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F340);
  }
  return result;
}

unint64_t sub_100702440()
{
  unint64_t result = qword_100E8F350;
  if (!qword_100E8F350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F350);
  }
  return result;
}

unint64_t sub_10070248C()
{
  unint64_t result = qword_100E8F358;
  if (!qword_100E8F358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F358);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MessageCoverViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007025A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageCoverViewModel.CodingKeys()
{
  return &type metadata for MessageCoverViewModel.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MessageCoverViewModel.Action.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100702678);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageCoverViewModel.Action.CodingKeys()
{
  return &type metadata for MessageCoverViewModel.Action.CodingKeys;
}

ValueMetadata *type metadata accessor for MessageCoverViewModel.Action.OpenSettingsCodingKeys()
{
  return &type metadata for MessageCoverViewModel.Action.OpenSettingsCodingKeys;
}

void type metadata accessor for MessageCoverViewModel.Action()
{
}

unsigned char *_s7Weather21MessageCoverViewModelV6ActionO22OpenSettingsCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007027A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for MessageCoverViewModel.Kind()
{
}

unint64_t sub_1007027D8()
{
  unint64_t result = qword_100E8F360;
  if (!qword_100E8F360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F360);
  }
  return result;
}

unint64_t sub_100702828()
{
  unint64_t result = qword_100E8F368;
  if (!qword_100E8F368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F368);
  }
  return result;
}

unint64_t sub_100702878()
{
  unint64_t result = qword_100E8F370;
  if (!qword_100E8F370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F370);
  }
  return result;
}

unint64_t sub_1007028C8()
{
  unint64_t result = qword_100E8F378;
  if (!qword_100E8F378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F378);
  }
  return result;
}

unint64_t sub_100702918()
{
  unint64_t result = qword_100E8F380;
  if (!qword_100E8F380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F380);
  }
  return result;
}

unint64_t sub_100702968()
{
  unint64_t result = qword_100E8F388;
  if (!qword_100E8F388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F388);
  }
  return result;
}

unint64_t sub_1007029B8()
{
  unint64_t result = qword_100E8F390;
  if (!qword_100E8F390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F390);
  }
  return result;
}

unint64_t sub_100702A08()
{
  unint64_t result = qword_100E8F398;
  if (!qword_100E8F398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F398);
  }
  return result;
}

unint64_t sub_100702A58()
{
  unint64_t result = qword_100E8F3A0;
  if (!qword_100E8F3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F3A0);
  }
  return result;
}

unint64_t sub_100702AA8()
{
  unint64_t result = qword_100E8F3A8;
  if (!qword_100E8F3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F3A8);
  }
  return result;
}

unint64_t sub_100702AF4()
{
  unint64_t result = qword_100E8F3B0;
  if (!qword_100E8F3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F3B0);
  }
  return result;
}

uint64_t sub_100702B40(uint64_t a1)
{
  uint64_t v21 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100152344();
  uint64_t v5 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v4);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - v8;
  __chkstk_darwin(v7);
  uint64_t v13 = (char *)&v20 - v12;
  unint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v20 = v11;
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v17 = 0;
  while (1)
  {
    sub_100181D48(a1 + v15, (uint64_t)v13, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    sub_100181D48((uint64_t)v13, (uint64_t)v9, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_100184648((uint64_t)v9, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      sub_100184648((uint64_t)v13, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      goto LABEL_7;
    }
    sub_1001827D0((uint64_t)v9, v1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    char v18 = *(unsigned char *)(v1 + *(int *)(v21 + 60));
    sub_100184648(v1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    sub_100184648((uint64_t)v13, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    if (v18) {
      break;
    }
LABEL_7:
    ++v17;
    v15 += v16;
    if (v14 == v17) {
      return a1;
    }
  }
  if (v17 >= v14)
  {
    __break(1u);
  }
  else
  {
    unint64_t v14 = v20;
    sub_1007030D0(v20);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result) {
      goto LABEL_12;
    }
  }
  uint64_t result = sub_100ABB5DC();
  a1 = result;
LABEL_12:
  if (v17 >= *(void *)(a1 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_1007074FC(v14, a1 + v15);
    return a1;
  }
  return result;
}

double sub_100702DF0()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = (double *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10011BFD8();
  sub_100181D48(v2, v1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1001827D0(v1, (uint64_t)v6, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    if ((*((unsigned char *)v6 + *(int *)(v3 + 60)) & 1) == 0)
    {
      double v10 = v6[5];
      sub_100184648((uint64_t)v6, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
      return v10;
    }
    uint64_t v8 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
    uint64_t v9 = (uint64_t)v6;
  }
  else
  {
    uint64_t v8 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem;
    uint64_t v9 = v1;
  }
  sub_100184648(v9, (void (*)(void))v8);
  return 0.0;
}

uint64_t sub_100702F68()
{
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  uint64_t v4 = (Swift::Double *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10011BFD8();
  sub_100181D48(v0, v1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_1001827D0(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    Precipitation.accessibilityDescription(with:)(v4[5]);
    sub_100184648((uint64_t)v4, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
  }
  else
  {
    sub_100184648(v1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  }
  return sub_100163738();
}

uint64_t sub_1007030D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TimeZone();
  uint64_t v47 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v48 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin(v5);
  int v45 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Precipitation();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100181D48(v1, (uint64_t)v13, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  uint64_t v46 = v11;
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1001827D0((uint64_t)v13, (uint64_t)v16, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    uint64_t v17 = v14[14];
    char v18 = &v16[v14[13]];
    uint64_t v42 = a1;
    uint64_t v19 = &v16[v17];
    uint64_t v20 = Date.formattedHours(timeZone:forAccessibility:)();
    uint64_t v34 = v21;
    uint64_t v35 = v20;
    uint64_t v22 = *(void *)v16;
    uint64_t v23 = *((void *)v16 + 1);
    uint64_t v40 = *((void *)v16 + 2);
    uint64_t v41 = v22;
    uint64_t v37 = *((void *)v16 + 3);
    uint64_t v38 = *((void *)v16 + 4);
    uint64_t v39 = v23;
    double v24 = *((double *)v16 + 5);
    int v36 = v16[48];
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v16[v14[9]], v7);
    uint64_t v25 = (uint64_t *)&v16[v14[10]];
    uint64_t v26 = v25[1];
    uint64_t v33 = *v25;
    uint64_t v27 = (uint64_t *)&v16[v14[12]];
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = (uint64_t)v45;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v45, v18, v44);
    uint64_t v31 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v48, v19, v3);
    sub_100704264(v41, v39, v40, v37, v38, v36, v33, v42, v24, v26, v35, v34, v28, v29, v30, v31, v16[v14[15]], *(void *)&v16[v14[16]]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100184648((uint64_t)v16, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_100184648((uint64_t)v13, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    return sub_100181D48(v1, a1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  }
}

uint64_t sub_10070353C(uint64_t a1, uint64_t a2)
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  if ((static TimeZone.== infix(_:_:)() & 1) == 0
    || (sub_1001508B0(*(void **)(a1 + v4[6]), *(void **)(a2 + v4[6])) & 1) == 0)
  {
    return 0;
  }
  sub_10017CC9C(v4[7]);
  BOOL v7 = v7 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v8 & 1) != 0))
  {
    sub_10017CC9C(v4[8]);
    if (v7 && v10 == v11)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_100703608(uint64_t a1)
{
  type metadata accessor for Date();
  sub_100186EE8((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v3 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  type metadata accessor for TimeZone();
  sub_100186EE8(&qword_100E6BFA8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  sub_100186B34();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_1001897A8(a1, v4);
  swift_bridgeObjectRelease();
  sub_10018551C();
  sub_100185BD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10012B950();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100703750(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x8000000100CAF710 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x74786554656D6974 && a2 == 0xE800000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAF730)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_10070394C(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656E6F5A656D6974;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x74786554656D6974;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100703A00()
{
  sub_10017DF08(&qword_100E8F6C0);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10012B938();
  sub_100164F78();
  sub_100709B44();
  sub_100162840();
  type metadata accessor for Date();
  sub_100186EE8(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_100176D98();
  if (!v0)
  {
    type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
    type metadata accessor for TimeZone();
    sub_100186EE8(&qword_100E8F6C8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E91BC0);
    sub_100709B90(&qword_100E8F6D0);
    sub_100176D98();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  sub_100164F40();
  return v2();
}

void sub_100703C60()
{
  sub_10016314C();
  uint64_t v3 = v2;
  uint64_t v21 = v4;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017E3A0();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100109314();
  sub_10017DF08(&qword_100E8F6A0);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_10011C760();
  char v8 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10012B938();
  sub_1001B1E64(v3, v3[3]);
  sub_100709B44();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
  }
  else
  {
    sub_100186EE8(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001627D4();
    v10();
    sub_100186EE8(&qword_100E8F6B0, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001627D4();
    v11();
    sub_10017DF08(&qword_100E91BC0);
    sub_100709B90(&qword_100E8F6B8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v12 = v1;
    *(void *)(v1 + v8[6]) = v22;
    uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
    unint64_t v14 = (uint64_t *)(v1 + v8[7]);
    uint64_t *v14 = v13;
    v14[1] = v15;
    uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v18 = v17;
    sub_100162F0C();
    v19();
    uint64_t v20 = (uint64_t *)(v12 + v8[8]);
    uint64_t *v20 = v16;
    v20[1] = v18;
    sub_100181D48(v12, v21, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
    sub_100184648(v12, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
  }
  sub_100163164();
}

unint64_t sub_100704140()
{
  return sub_10070394C(*v0);
}

uint64_t sub_100704148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100703750(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100704170(uint64_t a1)
{
  unint64_t v2 = sub_100709B44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007041AC(uint64_t a1)
{
  unint64_t v2 = sub_100709B44();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1007041E8()
{
}

uint64_t sub_100704200()
{
  return sub_100703A00();
}

Swift::Int sub_10070421C()
{
  return sub_1007064DC((void (*)(unsigned char *))sub_100703608);
}

Swift::Int sub_10070424C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100707080(a1, a2, a3, (void (*)(unsigned char *))sub_100703608);
}

uint64_t sub_100704264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X7>, uint64_t a8@<X8>, double a9@<D0>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18)
{
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(double *)(a8 + 40) = a9;
  *(unsigned char *)(a8 + 48) = a6;
  uint64_t v20 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  type metadata accessor for Precipitation();
  sub_100162E4C();
  sub_1001190D4();
  v21();
  uint64_t v22 = (void *)(a8 + v20[10]);
  *uint64_t v22 = a7;
  v22[1] = a10;
  uint64_t v23 = (void *)(a8 + v20[11]);
  *uint64_t v23 = a11;
  v23[1] = a12;
  double v24 = (void *)(a8 + v20[12]);
  *double v24 = a13;
  v24[1] = a14;
  type metadata accessor for Date();
  sub_100162E4C();
  sub_1001190D4();
  v25();
  type metadata accessor for TimeZone();
  sub_100162E4C();
  sub_1001190D4();
  uint64_t result = v26();
  *(unsigned char *)(a8 + v20[15]) = a17;
  *(void *)(a8 + v20[16]) = a18;
  return result;
}

uint64_t sub_1007043E4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v4)
  {
    if (!v5) {
      goto LABEL_11;
    }
    return 0;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && v4 == v5;
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
LABEL_11:
  BOOL v7 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  if (*(double *)(a1 + 40) != *(double *)(a2 + 40)) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)) {
    return 0;
  }
  char v8 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  if ((sub_100889CA4(a1 + v8[9], a2 + v8[9]) & 1) == 0) {
    return 0;
  }
  sub_10017CC9C(v8[10]);
  BOOL v11 = v6 && v9 == v10;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  sub_10017CC9C(v8[11]);
  BOOL v14 = v6 && v12 == v13;
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  sub_10017CC9C(v8[12]);
  BOOL v17 = v6 && v15 == v16;
  if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0
    || (static TimeZone.== infix(_:_:)() & 1) == 0
    || *(unsigned __int8 *)(a1 + v8[15]) != *(unsigned __int8 *)(a2 + v8[15]))
  {
    return 0;
  }
  uint64_t v19 = v8[16];
  uint64_t v20 = *(void **)(a1 + v19);
  uint64_t v21 = *(void **)(a2 + v19);

  return sub_1001508B0(v20, v21);
}

uint64_t sub_100704578(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6F697469646E6F63 && a2 == 0xED00006E6F63496ELL;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CAF750 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CAF770 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CAF790 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      BOOL v7 = a1 == 0x7469706963657270 && a2 == 0xED00006E6F697461;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 0x74786554656D6974 && a2 == 0xE800000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CAF730 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else
          {
            BOOL v10 = a1 == 1702125924 && a2 == 0xE400000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else
            {
              BOOL v11 = a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                BOOL v12 = a1 == 0x776F4E7369 && a2 == 0xE500000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else if (a1 == 0xD000000000000011 && a2 == 0x8000000100CAF710)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 12;
                  }
                  else {
                    return 13;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_100704A98(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F697469646E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x7469706963657270;
      break;
    case 6:
      unint64_t result = 0x74617265706D6574;
      break;
    case 7:
      unint64_t result = 0x74786554656D6974;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 1702125924;
      break;
    case 10:
      unint64_t result = 0x656E6F5A656D6974;
      break;
    case 11:
      unint64_t result = 0x776F4E7369;
      break;
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100704C40()
{
  sub_10017DF08(&qword_100E8F6F0);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100164F78();
  sub_100709BF4();
  sub_100162840();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0)
  {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10016384C(2);
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10017F0F4(4);
    type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
    type metadata accessor for Precipitation();
    sub_100186EE8(&qword_100E8F6F8, (void (*)(uint64_t))&type metadata accessor for Precipitation);
    sub_1001816B8();
    sub_10016384C(6);
    sub_10016384C(7);
    sub_10016384C(8);
    type metadata accessor for Date();
    sub_100186EE8(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1001816B8();
    type metadata accessor for TimeZone();
    sub_100186EE8(&qword_100E8F6C8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    sub_1001816B8();
    sub_10017F0F4(11);
    sub_10017DF08(&qword_100E91BC0);
    sub_100709B90(&qword_100E8F6D0);
    sub_10018A3C0();
  }
  sub_100164F40();
  return v2();
}

void sub_100704F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  BOOL v12 = v11;
  uint64_t v38 = v13;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  __chkstk_darwin(v14);
  sub_10017C704();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v15);
  type metadata accessor for Precipitation();
  sub_100179C0C();
  __chkstk_darwin(v16);
  sub_10017DF08(&qword_100E8F6D8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  uint64_t v18 = sub_100152344();
  uint64_t v40 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(v18);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v39 = v20;
  sub_1001B1E64(v12, v12[3]);
  sub_100709BF4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
  }
  else
  {
    sub_10012B640();
    *(void *)uint64_t v39 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_100184AD8(1);
    *(void *)(v39 + 8) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *(void *)(v39 + 16) = v21;
    *(void *)(v39 + 24) = sub_100188DA0(2);
    *(void *)(v39 + 32) = v22;
    sub_100184AD8(3);
    KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v39 + 40) = v23;
    sub_100184AD8(4);
    *(unsigned char *)(v39 + 48) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    sub_100186EE8(&qword_100E8F6E8, (void (*)(uint64_t))&type metadata accessor for Precipitation);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001627D4();
    v24();
    uint64_t v25 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v26 = (uint64_t *)(v39 + v40[10]);
    *uint64_t v26 = v25;
    v26[1] = v27;
    sub_10012B640();
    uint64_t v28 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v29 = (uint64_t *)(v39 + v40[11]);
    *uint64_t v29 = v28;
    v29[1] = v30;
    uint64_t v31 = sub_100188DA0(8);
    size_t v32 = (uint64_t *)(v39 + v40[12]);
    *size_t v32 = v31;
    v32[1] = v33;
    sub_100186EE8(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001627D4();
    v34();
    sub_100186EE8(&qword_100E8F6B0, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001627D4();
    v35();
    LOBYTE(a10) = 11;
    *(unsigned char *)(v39 + v40[15]) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    sub_10017DF08(&qword_100E91BC0);
    sub_100709B90(&qword_100E8F6B8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v36 = sub_1001D1CB0();
    v37(v36);
    *(void *)(v39 + v40[16]) = a10;
    sub_100181D48(v39, v38, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
    sub_100184648(v39, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
  }
  sub_100163164();
}

uint64_t sub_100705750(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_100183E44();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v38 = v5;
  uint64_t v6 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  __chkstk_darwin(v6 - 8);
  sub_10016278C();
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  BOOL v12 = (char *)&v38 - v11;
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_10016278C();
  uint64_t v16 = v14 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v38 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E85FA8);
  __chkstk_darwin(v23 - 8);
  sub_100162E88();
  uint64_t v25 = v2 + *(int *)(v24 + 56);
  sub_100181D48(a1, v2, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  sub_100181D48(v39, v25, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100181D48(v2, (uint64_t)v19, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001827D0(v25, v9, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        char v27 = sub_10070353C((uint64_t)v19, v9);
        uint64_t v28 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
        sub_100184648(v9, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
        uint64_t v29 = (uint64_t)v19;
LABEL_9:
        uint64_t v36 = v28;
LABEL_14:
        sub_100184648(v29, (void (*)(void))v36);
        sub_100184648(v2, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
        return v27 & 1;
      }
      uint64_t v33 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
      uint64_t v34 = (uint64_t)v19;
    }
    else
    {
      sub_100181D48(v2, v16, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v35 = v38;
        sub_1001827D0(v25, v38, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
        char v27 = sub_1007043E4(v16, v35);
        uint64_t v28 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
        sub_100184648(v35, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
        uint64_t v29 = v16;
        goto LABEL_9;
      }
      uint64_t v33 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
      uint64_t v34 = v16;
    }
  }
  else
  {
    uint64_t v30 = sub_10012B950();
    sub_100181D48(v30, v31, v32);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1001827D0(v25, (uint64_t)v12, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
      char v27 = sub_10070353C((uint64_t)v22, (uint64_t)v12);
      sub_100184648((uint64_t)v12, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
      uint64_t v29 = sub_100163738();
      goto LABEL_14;
    }
    uint64_t v33 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
    uint64_t v34 = (uint64_t)v22;
  }
  sub_100184648(v34, (void (*)(void))v33);
  sub_100706FD8(v2);
  char v27 = 0;
  return v27 & 1;
}

void sub_100705B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10010977C();
  a17 = v21;
  a18 = v22;
  uint64_t v24 = v23;
  uint64_t v25 = sub_100183E44();
  __chkstk_darwin(v25);
  uint64_t v26 = sub_10017C704();
  uint64_t v27 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(v26);
  sub_100162E4C();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100125FF8();
  sub_100181D48(v18, v20, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  uint64_t v32 = sub_100182544();
  if (v32)
  {
    if (v32 != 1)
    {
      sub_1001827D0(v20, v19, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
      Hasher._combine(_:)(2uLL);
      sub_100184EF0(v24);
      uint64_t v36 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
      uint64_t v37 = v19;
      goto LABEL_7;
    }
    sub_10018355C(v32, v33, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    Swift::UInt v34 = 1;
  }
  else
  {
    sub_10018355C(v32, v33, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    Swift::UInt v34 = 0;
  }
  Hasher._combine(_:)(v34);
  type metadata accessor for Date();
  sub_100186EE8((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for TimeZone();
  sub_100186EE8(&qword_100E6BFA8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  sub_100186B34();
  uint64_t v35 = *(void *)&v30[*(int *)(v27 + 24)];
  swift_bridgeObjectRetain();
  sub_1001897A8(v24, v35);
  swift_bridgeObjectRelease();
  sub_10018551C();
  sub_100185BD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100187228();
  swift_bridgeObjectRelease();
  uint64_t v36 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
  uint64_t v37 = (uint64_t)v30;
LABEL_7:
  sub_100184648(v37, (void (*)(void))v36);
  sub_100162714();
}

uint64_t sub_100705E04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657369726E7573 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7465736E7573 && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1920298856 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100705F3C(char a1)
{
  if (!a1) {
    return 0x657369726E7573;
  }
  if (a1 == 1) {
    return 0x7465736E7573;
  }
  return 1920298856;
}

void sub_100705F88()
{
  sub_10016314C();
  uint64_t v44 = v1;
  uint64_t v41 = v0;
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100E8F670);
  sub_100179C0C();
  uint64_t v38 = v5;
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v37 = v6;
  v35[6] = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v36 = v8;
  sub_10017DF08(&qword_100E8F678);
  sub_100179C0C();
  v35[4] = v10;
  v35[5] = v9;
  __chkstk_darwin(v9);
  sub_100109314();
  v35[3] = v11;
  sub_10017DF08(&qword_100E8F680);
  sub_100179C0C();
  v35[1] = v13;
  v35[2] = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = sub_10017E3A0();
  uint64_t v40 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(v14);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_10016278C();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v35 - v20;
  type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_100162E4C();
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E8F688);
  sub_100179C0C();
  uint64_t v42 = v26;
  uint64_t v43 = v25;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v35 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(v3, v3[3]);
  sub_100709A14();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100181D48(v41, (uint64_t)v24, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1001827D0((uint64_t)v24, v18, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
      sub_100709AAC();
      sub_1001D0EC8();
      sub_100186EE8(&qword_100E8F698, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v30();
      uint64_t v31 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
    }
    else
    {
      uint64_t v18 = v36;
      sub_1001827D0((uint64_t)v24, v36, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
      sub_100709A60();
      sub_1001D0EC8();
      sub_100186EE8(&qword_100E8F690, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v34();
      uint64_t v31 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
    }
    sub_100184648(v18, (void (*)(void))v31);
    (*(void (**)(char *, char *))(v42 + 8))(v28, v21);
  }
  else
  {
    sub_1001827D0((uint64_t)v24, (uint64_t)v21, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    sub_100709AF8();
    uint64_t v32 = v43;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100186EE8(&qword_100E8F698, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100162F0C();
    v33();
    sub_100184648((uint64_t)v21, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v32);
  }
  sub_100163164();
}

Swift::Int sub_1007064DC(void (*a1)(unsigned char *))
{
  Hasher.init(_seed:)();
  a1(v3);
  return Hasher._finalize()();
}

void sub_100706524()
{
  sub_10016314C();
  uint64_t v80 = v0;
  uint64_t v3 = v2;
  uint64_t v73 = v4;
  uint64_t v72 = sub_10017DF08(&qword_100E8F620);
  sub_100179C0C();
  uint64_t v69 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v78 = v7;
  uint64_t v71 = sub_10017DF08(&qword_100E8F628);
  sub_100179C0C();
  uint64_t v68 = v8;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v75 = v10;
  uint64_t v70 = sub_10017DF08(&qword_100E8F630);
  sub_100179C0C();
  uint64_t v67 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v74 = v13;
  sub_10017DF08(&qword_100E8F638);
  sub_100179C0C();
  uint64_t v76 = v15;
  uint64_t v77 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = sub_10017E3A0();
  uint64_t v17 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(v16);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_10016278C();
  uint64_t v21 = v19 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v61 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v61 - v26;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v61 - v29;
  uint64_t v31 = v3[3];
  unsigned int v79 = v3;
  sub_1001B1E64(v3, v31);
  sub_100709A14();
  uint64_t v32 = v80;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v32)
  {
    uint64_t v62 = v24;
    uint64_t v63 = v30;
    uint64_t v64 = v27;
    uint64_t v65 = v21;
    uint64_t v34 = v77;
    uint64_t v66 = v17;
    uint64_t v80 = v1;
    uint64_t v35 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      uint64_t v37 = v34;
      int v38 = *(unsigned __int8 *)(v35 + 32);
      sub_100723214(1, v36, v35, v35 + 32, 0, (2 * v36) | 1);
      uint64_t v40 = v39;
      unint64_t v42 = v41;
      swift_bridgeObjectRelease();
      if (v40 == v42 >> 1)
      {
        if (v38)
        {
          if (v38 == 1)
          {
            sub_100709AAC();
            sub_100180298();
            type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
            sub_100186EE8(&qword_100E8F660, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
            uint64_t v43 = (uint64_t)v62;
            KeyedDecodingContainer.decode<A>(_:forKey:)();
            uint64_t v33 = (uint64_t)v79;
            sub_100162F0C();
            v50();
            swift_unknownObjectRelease();
            uint64_t v51 = sub_100166C7C();
            v52(v51);
            swift_storeEnumTagMultiPayload();
            uint64_t v53 = v43;
LABEL_15:
            uint64_t v60 = (uint64_t)v63;
            sub_1001827D0(v53, (uint64_t)v63, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
            sub_1001827D0(v60, v73, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
            goto LABEL_11;
          }
          sub_100709A60();
          sub_100180298();
          type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
          sub_100186EE8(&qword_100E8F650, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
          sub_1001911C4();
          uint64_t v33 = (uint64_t)v79;
          sub_100162F0C();
          v57();
          swift_unknownObjectRelease();
          uint64_t v58 = sub_100162B40();
          v59(v58);
          uint64_t v56 = v65;
        }
        else
        {
          sub_100709AF8();
          sub_100180298();
          type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
          sub_100186EE8(&qword_100E8F660, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
          sub_1001911C4();
          uint64_t v33 = (uint64_t)v79;
          sub_100162F0C();
          v54();
          swift_unknownObjectRelease();
          sub_100162F0C();
          v55();
          uint64_t v56 = (uint64_t)v64;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v53 = v56;
        goto LABEL_15;
      }
      uint64_t v33 = (uint64_t)v79;
      uint64_t v44 = v76;
      uint64_t v34 = v37;
    }
    else
    {
      uint64_t v33 = (uint64_t)v79;
      uint64_t v44 = v76;
    }
    uint64_t v45 = v66;
    uint64_t v46 = type metadata accessor for DecodingError();
    swift_allocError();
    unint64_t v48 = v47;
    sub_10017DF08(&qword_100E67280);
    *unint64_t v48 = v45;
    uint64_t v49 = v80;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, enum case for DecodingError.typeMismatch(_:), v46);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v49, v34);
    goto LABEL_11;
  }
  uint64_t v33 = (uint64_t)v79;
LABEL_11:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v33);
  sub_100163164();
}

unint64_t sub_100706C70()
{
  return sub_100704A98(*v0);
}

uint64_t sub_100706C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100704578(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100706CA0(uint64_t a1)
{
  unint64_t v2 = sub_100709BF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100706CDC(uint64_t a1)
{
  unint64_t v2 = sub_100709BF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100706D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100704F98(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_100706D30()
{
  return sub_100704C40();
}

Swift::Int sub_100706D4C()
{
  return sub_1007064DC((void (*)(unsigned char *))sub_100184EF0);
}

Swift::Int sub_100706D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100707080(a1, a2, a3, (void (*)(unsigned char *))sub_100184EF0);
}

uint64_t sub_100706D94()
{
  return sub_100705F3C(*v0);
}

uint64_t sub_100706D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100705E04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100706DC4(uint64_t a1)
{
  unint64_t v2 = sub_100709A14();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100706E00(uint64_t a1)
{
  unint64_t v2 = sub_100709A14();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100706E3C(uint64_t a1)
{
  unint64_t v2 = sub_100709A60();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100706E78(uint64_t a1)
{
  unint64_t v2 = sub_100709A60();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100706EB4(uint64_t a1)
{
  unint64_t v2 = sub_100709AF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100706EF0(uint64_t a1)
{
  unint64_t v2 = sub_100709AF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100706F2C(uint64_t a1)
{
  unint64_t v2 = sub_100709AAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100706F68(uint64_t a1)
{
  unint64_t v2 = sub_100709AAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100706FA4()
{
}

void sub_100706FBC()
{
}

uint64_t sub_100706FD8(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E85FA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Int sub_100707038()
{
  return sub_1007064DC((void (*)(unsigned char *))sub_100705B58);
}

Swift::Int sub_100707068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100707080(a1, a2, a3, (void (*)(unsigned char *))sub_100705B58);
}

Swift::Int sub_100707080(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_1007070C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7372756F68 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100707148()
{
  return 0x7372756F68;
}

uint64_t sub_10070715C()
{
  sub_10017DF08(&qword_100E8F608);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100164F78();
  sub_100709934();
  sub_100162840();
  sub_10017DF08(&qword_100E8F5F0);
  sub_100709980(&qword_100E8F610, &qword_100E8F618);
  sub_10018A3C0();
  sub_100164F40();
  return v1();
}

void *sub_10070728C(void *a1)
{
  sub_10017DF08(&qword_100E8F5E0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100125FF8();
  char v4 = sub_1001B1E64(a1, a1[3]);
  sub_100709934();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10017DF08(&qword_100E8F5F0);
    sub_100709980(&qword_100E8F5F8, &qword_100E8F600);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100164F40();
    v5();
    char v4 = v7;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v4;
}

uint64_t sub_100707404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007070C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100707430(uint64_t a1)
{
  unint64_t v2 = sub_100709934();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10070746C(uint64_t a1)
{
  unint64_t v2 = sub_100709934();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1007074A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10070728C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1007074D4()
{
  return sub_10070715C();
}

uint64_t sub_1007074F0(void *a1, void *a2)
{
  return sub_1007070C4(*a1, *a2);
}

uint64_t sub_1007074FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100707560()
{
}

void sub_1007075A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100152344();
  uint64_t v10 = type metadata accessor for UnitsConfigurationViewModel.Temperature(v9);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  sub_10016278C();
  uint64_t v14 = v12 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v23 - v16;
  Swift::UInt v18 = *(void *)(a2 + 16);
  v23[1] = a1;
  Hasher._combine(_:)(v18);
  if (v18)
  {
    uint64_t v19 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v20 = *(void *)(v11 + 72);
    uint64_t v21 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    uint64_t v22 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    do
    {
      sub_100181D48(v19, (uint64_t)v17, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
      sub_100181D48((uint64_t)v17, v14, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
      if (_s7Weather24LocationCompositionStateOwet_0(v14, 1, v5) == 1)
      {
        Hasher._combine(_:)(1uLL);
      }
      else
      {
        (*v21)(v2, v14, v5);
        Hasher._combine(_:)(0);
        sub_100186EE8(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
        dispatch thunk of Hashable.hash(into:)();
        (*v22)(v2, v5);
      }
      sub_100184648((uint64_t)v17, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
      v19 += v20;
      --v18;
    }
    while (v18);
  }
}

void sub_1007077F4()
{
}

void sub_10070783C()
{
}

void sub_100707884()
{
}

void sub_1007078CC()
{
  sub_10010977C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  sub_10019B174(v9, v7);
  if (v0)
  {
    uint64_t v10 = *(void *)(v6(0) - 8);
    unint64_t v11 = v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v12 = *(void *)(v10 + 72);
    sub_100186EE8(v4, v2);
    do
    {
      dispatch thunk of Hashable.hash(into:)();
      v11 += v12;
      --v0;
    }
    while (v0);
  }
  sub_100162714();
}

void sub_1007079A8()
{
  sub_10010977C();
  uint64_t v2 = v1;
  sub_10019B174(v3, v1);
  if (v0)
  {
    uint64_t v4 = v2 + 64;
    do
    {
      uint64_t v5 = *(void **)(v4 - 16);
      v4 += 40;
      swift_bridgeObjectRetain();
      id v6 = v5;
      swift_bridgeObjectRetain();
      sub_100187228();
      id v7 = v6;
      NSObject.hash(into:)();

      swift_bridgeObjectRetain();
      String.hash(into:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      --v0;
    }
    while (v0);
  }
  sub_100162714();
}

void sub_100707A58(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v3);
  if (v3)
  {
    uint64_t v4 = (Swift::UInt64 *)(a2 + 32);
    do
    {
      Swift::UInt64 v6 = *v4++;
      Swift::UInt64 v5 = v6;
      if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v7 = v5;
      }
      else {
        Swift::UInt64 v7 = 0;
      }
      Hasher._combine(_:)(v7);
      --v3;
    }
    while (v3);
  }
}

uint64_t sub_100707AB0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100184648(a1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      uint64_t v16 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
      uint64_t v17 = v16[9];
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = type metadata accessor for Precipitation();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      uint64_t v22 = v16[10];
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = (void *)(a2 + v22);
      *uint64_t v23 = *v24;
      v23[1] = v24[1];
      uint64_t v25 = v16[11];
      uint64_t v26 = (void *)(a1 + v25);
      uint64_t v27 = (void *)(a2 + v25);
      *uint64_t v26 = *v27;
      v26[1] = v27[1];
      uint64_t v28 = v16[12];
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (void *)(a2 + v28);
      *uint64_t v29 = *v30;
      v29[1] = v30[1];
      uint64_t v31 = v16[13];
      uint64_t v40 = a1 + v31;
      uint64_t v32 = a2 + v31;
      uint64_t v33 = type metadata accessor for Date();
      uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34(v40, v32, v33);
      uint64_t v35 = v16[14];
      uint64_t v36 = a1 + v35;
      uint64_t v37 = a2 + v35;
      uint64_t v38 = type metadata accessor for TimeZone();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      *(unsigned char *)(a1 + v16[15]) = *(unsigned char *)(a2 + v16[15]);
      *(void *)(a1 + v16[16]) = *(void *)(a2 + v16[16]);
    }
    else
    {
      uint64_t v4 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      Swift::UInt64 v5 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = type metadata accessor for TimeZone();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
      uint64_t v10 = v5[7];
      unint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (void *)(a2 + v10);
      *unint64_t v11 = *v12;
      v11[1] = v12[1];
      uint64_t v13 = v5[8];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      void *v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100707F08(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    uint64_t v10 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
    uint64_t v11 = v10[9];
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = type metadata accessor for Precipitation();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(_OWORD *)(a1 + v10[10]) = *(_OWORD *)(a2 + v10[10]);
    *(_OWORD *)(a1 + v10[11]) = *(_OWORD *)(a2 + v10[11]);
    *(_OWORD *)(a1 + v10[12]) = *(_OWORD *)(a2 + v10[12]);
    uint64_t v15 = v10[13];
    uint64_t v16 = a1 + v15;
    uint64_t v17 = a2 + v15;
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    uint64_t v19 = v10[14];
    uint64_t v20 = a1 + v19;
    uint64_t v21 = a2 + v19;
    uint64_t v22 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *(unsigned char *)(a1 + v10[15]) = *(unsigned char *)(a2 + v10[15]);
    *(void *)(a1 + v10[16]) = *(void *)(a2 + v10[16]);
  }
  else
  {
    uint64_t v4 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    Swift::UInt64 v5 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
    uint64_t v6 = v5[5];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
    *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
    *(_OWORD *)(a1 + v5[8]) = *(_OWORD *)(a2 + v5[8]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100708240(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100184648(a1, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      uint64_t v10 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
      uint64_t v11 = v10[9];
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = type metadata accessor for Precipitation();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *(_OWORD *)(a1 + v10[10]) = *(_OWORD *)(a2 + v10[10]);
      *(_OWORD *)(a1 + v10[11]) = *(_OWORD *)(a2 + v10[11]);
      *(_OWORD *)(a1 + v10[12]) = *(_OWORD *)(a2 + v10[12]);
      uint64_t v15 = v10[13];
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = v10[14];
      uint64_t v20 = a1 + v19;
      uint64_t v21 = a2 + v19;
      uint64_t v22 = type metadata accessor for TimeZone();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      *(unsigned char *)(a1 + v10[15]) = *(unsigned char *)(a2 + v10[15]);
      *(void *)(a1 + v10[16]) = *(void *)(a2 + v10[16]);
    }
    else
    {
      uint64_t v4 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      Swift::UInt64 v5 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = type metadata accessor for TimeZone();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
      *(_OWORD *)(a1 + v5[7]) = *(_OWORD *)(a2 + v5[7]);
      *(_OWORD *)(a1 + v5[8]) = *(_OWORD *)(a2 + v5[8]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *sub_10070859C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1007086F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1007087CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1007088D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100708A04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100708AE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100708BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100708C04);
}

uint64_t sub_100708C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for TimeZone();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return sub_100163020(*(void *)(a1 + *(int *)(a3 + 24)));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100708CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100708CC0);
}

void sub_100708CC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for TimeZone();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void *sub_100708D70(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)a2;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v10 = a3[9];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    *(_OWORD *)a1 = v7;
    uint64_t v13 = type metadata accessor for Precipitation();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = a3[10];
    uint64_t v16 = a3[11];
    uint64_t v17 = (void *)((char *)v4 + v15);
    uint64_t v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (void *)((char *)v4 + v16);
    uint64_t v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[12];
    uint64_t v24 = a3[13];
    uint64_t v25 = (void *)((char *)v4 + v23);
    uint64_t v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (char *)v4 + v24;
    uint64_t v38 = (uint64_t)a2 + v24;
    uint64_t v29 = type metadata accessor for Date();
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(v28, v38, v29);
    uint64_t v31 = a3[14];
    uint64_t v32 = (char *)v4 + v31;
    uint64_t v33 = (uint64_t)a2 + v31;
    uint64_t v34 = type metadata accessor for TimeZone();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    uint64_t v35 = a3[16];
    *((unsigned char *)v4 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *(void *)((char *)v4 + v35) = *(uint64_t *)((char *)a2 + v35);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100708F8C(uint64_t a1, long long *a2, int *a3)
{
  long long v6 = *a2;
  uint64_t v7 = *((void *)a2 + 3);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *((void *)a2 + 5);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  *(_OWORD *)a1 = v6;
  uint64_t v12 = type metadata accessor for Precipitation();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (void *)((char *)a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[12];
  uint64_t v23 = a3[13];
  uint64_t v24 = (void *)(a1 + v22);
  uint64_t v25 = (void *)((char *)a2 + v22);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a1 + v23;
  uint64_t v36 = (uint64_t)a2 + v23;
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29(v27, v36, v28);
  uint64_t v30 = a3[14];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t)a2 + v30;
  uint64_t v33 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  uint64_t v34 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *(void *)(a1 + v34) = *(void *)((char *)a2 + v34);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100709158(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Precipitation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[11];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[12];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[13];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[14];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100709370(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Precipitation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  uint64_t v11 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[14];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  return a1;
}

uint64_t sub_1007094DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Precipitation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[10];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[13];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = a3[14];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100709698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007096AC);
}

uint64_t sub_1007096AC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 32));
  }
  type metadata accessor for Precipitation();
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = a3[9];
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v9 = v11;
      uint64_t v10 = a3[13];
    }
    else
    {
      uint64_t v9 = type metadata accessor for TimeZone();
      uint64_t v10 = a3[14];
    }
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
}

uint64_t sub_100709770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100709784);
}

uint64_t sub_100709784(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Precipitation();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[9];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[13];
      }
      else
      {
        uint64_t v10 = type metadata accessor for TimeZone();
        uint64_t v11 = a4[14];
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

void *sub_100709850()
{
  return &protocol witness table for Int;
}

uint64_t sub_10070985C()
{
  return sub_100186EE8(&qword_100E8F5C8, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
}

uint64_t sub_1007098A4()
{
  return sub_100186EE8(&qword_100E8F5D0, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
}

uint64_t sub_1007098EC()
{
  return sub_100186EE8(&qword_100E8F5D8, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
}

unint64_t sub_100709934()
{
  unint64_t result = qword_100E8F5E8;
  if (!qword_100E8F5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F5E8);
  }
  return result;
}

uint64_t sub_100709980(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E8F5F0);
    sub_100186EE8(a2, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100709A14()
{
  unint64_t result = qword_100E8F640;
  if (!qword_100E8F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F640);
  }
  return result;
}

unint64_t sub_100709A60()
{
  unint64_t result = qword_100E8F648;
  if (!qword_100E8F648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F648);
  }
  return result;
}

unint64_t sub_100709AAC()
{
  unint64_t result = qword_100E8F658;
  if (!qword_100E8F658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F658);
  }
  return result;
}

unint64_t sub_100709AF8()
{
  unint64_t result = qword_100E8F668;
  if (!qword_100E8F668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F668);
  }
  return result;
}

unint64_t sub_100709B44()
{
  unint64_t result = qword_100E8F6A8;
  if (!qword_100E8F6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F6A8);
  }
  return result;
}

uint64_t sub_100709B90(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E91BC0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100709BF4()
{
  unint64_t result = qword_100E8F6E0;
  if (!qword_100E8F6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F6E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HourlyForecastComponentViewModel.HourlyItem.HourModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100709D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel.CodingKeys()
{
  return &type metadata for HourlyForecastComponentViewModel.HourlyItem.HourModel.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100709E10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel.CodingKeys()
{
  return &type metadata for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HourlyForecastComponentViewModel.HourlyItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100709F14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.CodingKeys()
{
  return &type metadata for HourlyForecastComponentViewModel.HourlyItem.CodingKeys;
}

ValueMetadata *type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseCodingKeys()
{
  return &type metadata for HourlyForecastComponentViewModel.HourlyItem.SunriseCodingKeys;
}

ValueMetadata *type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunsetCodingKeys()
{
  return &type metadata for HourlyForecastComponentViewModel.HourlyItem.SunsetCodingKeys;
}

ValueMetadata *type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourCodingKeys()
{
  return &type metadata for HourlyForecastComponentViewModel.HourlyItem.HourCodingKeys;
}

unsigned char *_s7Weather32HourlyForecastComponentViewModelV10HourlyItemO17SunriseCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10070A01CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HourlyForecastComponentViewModel.CodingKeys()
{
  return &type metadata for HourlyForecastComponentViewModel.CodingKeys;
}

unint64_t sub_10070A058()
{
  unint64_t result = qword_100E8F700;
  if (!qword_100E8F700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F700);
  }
  return result;
}

unint64_t sub_10070A0A8()
{
  unint64_t result = qword_100E8F708;
  if (!qword_100E8F708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F708);
  }
  return result;
}

unint64_t sub_10070A0F8()
{
  unint64_t result = qword_100E8F710;
  if (!qword_100E8F710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F710);
  }
  return result;
}

unint64_t sub_10070A148()
{
  unint64_t result = qword_100E8F718;
  if (!qword_100E8F718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F718);
  }
  return result;
}

unint64_t sub_10070A198()
{
  unint64_t result = qword_100E8F720;
  if (!qword_100E8F720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F720);
  }
  return result;
}

unint64_t sub_10070A1E8()
{
  unint64_t result = qword_100E8F728;
  if (!qword_100E8F728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F728);
  }
  return result;
}

unint64_t sub_10070A238()
{
  unint64_t result = qword_100E8F730;
  if (!qword_100E8F730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F730);
  }
  return result;
}

unint64_t sub_10070A288()
{
  unint64_t result = qword_100E8F738;
  if (!qword_100E8F738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F738);
  }
  return result;
}

unint64_t sub_10070A2D8()
{
  unint64_t result = qword_100E8F740;
  if (!qword_100E8F740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F740);
  }
  return result;
}

unint64_t sub_10070A328()
{
  unint64_t result = qword_100E8F748;
  if (!qword_100E8F748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F748);
  }
  return result;
}

unint64_t sub_10070A378()
{
  unint64_t result = qword_100E8F750;
  if (!qword_100E8F750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F750);
  }
  return result;
}

unint64_t sub_10070A3C8()
{
  unint64_t result = qword_100E8F758;
  if (!qword_100E8F758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F758);
  }
  return result;
}

unint64_t sub_10070A418()
{
  unint64_t result = qword_100E8F760;
  if (!qword_100E8F760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F760);
  }
  return result;
}

unint64_t sub_10070A468()
{
  unint64_t result = qword_100E8F768;
  if (!qword_100E8F768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F768);
  }
  return result;
}

unint64_t sub_10070A4B8()
{
  unint64_t result = qword_100E8F770;
  if (!qword_100E8F770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F770);
  }
  return result;
}

unint64_t sub_10070A508()
{
  unint64_t result = qword_100E8F778;
  if (!qword_100E8F778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F778);
  }
  return result;
}

unint64_t sub_10070A558()
{
  unint64_t result = qword_100E8F780;
  if (!qword_100E8F780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F780);
  }
  return result;
}

unint64_t sub_10070A5A8()
{
  unint64_t result = qword_100E8F788;
  if (!qword_100E8F788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F788);
  }
  return result;
}

unint64_t sub_10070A5F8()
{
  unint64_t result = qword_100E8F790;
  if (!qword_100E8F790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F790);
  }
  return result;
}

unint64_t sub_10070A648()
{
  unint64_t result = qword_100E8F798;
  if (!qword_100E8F798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F798);
  }
  return result;
}

unint64_t sub_10070A698()
{
  unint64_t result = qword_100E8F7A0;
  if (!qword_100E8F7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F7A0);
  }
  return result;
}

uint64_t sub_10070A6E4()
{
  return swift_release();
}

uint64_t sub_10070A750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10017DF08(&qword_100E6DD18);
  __chkstk_darwin(v9);
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v17 = &v25[-v16];
  uint64_t result = type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  if ((*(unsigned char *)(a3 + *(int *)(result + 28)) & 1) == 0)
  {
    uint64_t v19 = result;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v17, a3 + *(int *)(result + 24), v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v5);
    uint64_t v20 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_100111070(a2, (uint64_t)v11);
    sub_100111070((uint64_t)v17, v20);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5) == 1)
    {
      sub_100178110((uint64_t)v17, &qword_100E6DC08);
      if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v5) == 1)
      {
        sub_100178110((uint64_t)v11, &qword_100E6DC08);
        return sub_100076D8C(*(void *)(a3 + 80), a2);
      }
    }
    else
    {
      sub_100111070((uint64_t)v11, (uint64_t)v15);
      if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v5) != 1)
      {
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32))(v8, v20, v5);
        sub_100231104((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
        int v26 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
        v21(v8, v5);
        sub_100178110((uint64_t)v17, &qword_100E6DC08);
        v21(v15, v5);
        sub_100178110((uint64_t)v11, &qword_100E6DC08);
        if (v26) {
          return sub_100076D8C(*(void *)(a3 + 80), a2);
        }
        goto LABEL_10;
      }
      sub_100178110((uint64_t)v17, &qword_100E6DC08);
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v15, v5);
    }
    sub_100178110((uint64_t)v11, &qword_100E6DD18);
LABEL_10:
    uint64_t v22 = (uint64_t *)(a3 + *(int *)(v19 + 36));
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    uint64_t v27 = v24;
    uint64_t v28 = v23;
    sub_10017DF08(&qword_100E8F958);
    State.wrappedValue.getter();
    sub_100008EF8();
    return swift_release();
  }
  return result;
}

uint64_t sub_10070AB00(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = type metadata accessor for Location.Identifier();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v6);
  sub_100076D8C(v5, (uint64_t)v4);
  return sub_100178110((uint64_t)v4, &qword_100E6DC08);
}

uint64_t sub_10070ABB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a2;
  uint64_t v7 = type metadata accessor for Location.Identifier();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v7);
  sub_100076D8C(v6, (uint64_t)v5);
  return sub_100178110((uint64_t)v5, &qword_100E6DC08);
}

uint64_t sub_10070AC64()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_C9CD978B5072A12A20FABB0B2C18467645LocationViewCollisionOptionsUpdatingViewState___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10070AD04()
{
  return type metadata accessor for LocationViewCollisionOptionsUpdatingViewState(0);
}

unint64_t sub_10070AD0C(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v31 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v38 = *(void *)(a2 + 64);
    char v39 = *(unsigned char *)(a2 + 72);
    sub_1001910C8(*(void *)a2, v7, v8, v9, v10, v11, v13, v12, v38, v39);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v38;
    *(unsigned char *)(a1 + 72) = v39;
    uint64_t v14 = a3[6];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    uint64_t v17 = type metadata accessor for Location.Identifier();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    uint64_t v19 = a3[8];
    *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (void *)(a2 + v19);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    uint64_t v25 = (void *)(a1 + v23);
    int v26 = (void *)(a2 + v23);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (void *)(a1 + v24);
    uint64_t v29 = (void *)(a2 + v24);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = a3[11];
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (uint64_t *)(a2 + v32);
    uint64_t v35 = *v34;
    uint64_t v36 = v34[1];
    *uint64_t v33 = v35;
    v33[1] = v36;
  }
  swift_retain();
  return a1;
}

void *sub_10070AF60(void *a1, void *a2, int *a3)
{
  memcpy(a1, a2, 0x49uLL);
  a1[10] = a2[10];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_10070B0BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 64);
  char v17 = *(unsigned char *)(a1 + 72);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = v7;
  sub_10018CCC4(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v25 = (void *)(a1 + v24);
  int v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_release();
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  swift_release();
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v32 = a3[10];
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (const void *)(a2 + v32);
    sub_100178110(a1 + v32, &qword_100E62CB8);
    uint64_t v35 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  uint64_t v37 = a3[11];
  uint64_t v38 = a1 + v37;
  char v39 = (void *)(a2 + v37);
  *(void *)(a1 + v37) = *v39;
  swift_release();
  *(void *)(v38 + 8) = v39[1];
  return a1;
}

uint64_t sub_10070B2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 80);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for Location.Identifier();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 24);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E63BF0);
      uint64_t v11 = *(int *)(a3 + 40);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_10070B378(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 80) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Location.Identifier();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E63BF0);
      uint64_t v11 = *(int *)(a4 + 40);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_10070B42C()
{
  return sub_100226708((uint64_t (*)(uint64_t))sub_10070A6E4);
}

uint64_t sub_10070B448()
{
  sub_10018807C();
  uint64_t v0 = sub_10018521C();

  return sub_10070A750(v0, v1, v2);
}

uint64_t sub_10070B494()
{
  return sub_100226708(sub_10070AB00);
}

uint64_t sub_10070B4B0()
{
  sub_10018807C();
  uint64_t v0 = sub_10018521C();

  return sub_10070ABB0(v0, v1);
}

uint64_t sub_10070B4F8(char *a1, char *a2, unint64_t a3, char *a4)
{
  unint64_t v4 = a4;
  uint64_t v6 = a2;
  char v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_100129FF8(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    uint64_t v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_39;
    }
    long long v18 = (char *)(a3 - 16);
    while (1)
    {
      long long v19 = v18 + 16;
      uint64_t v20 = v6 - 16;
      if (*((void *)v12 - 2) >= *((void *)v6 - 2))
      {
        BOOL v22 = v19 != v12 || v18 >= v12;
        uint64_t v20 = v12 - 16;
        v12 -= 16;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= v6;
        v6 -= 16;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *(_OWORD *)long long v18 = *(_OWORD *)v20;
LABEL_35:
      v18 -= 16;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_100129FF8(a1, (a2 - a1) / 16, a4);
  uint64_t v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (*(void *)v6 >= *(void *)v4)
    {
      uint64_t v14 = v4;
      BOOL v15 = v7 == v4;
      v4 += 16;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    uint64_t v14 = v6;
    BOOL v15 = v7 == v6;
    v6 += 16;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    *(_OWORD *)char v7 = *(_OWORD *)v14;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  sub_100129FF8(v4, (v12 - v4) / 16, v6);
  return 1;
}

uint64_t sub_10070B680@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10000FCA0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10070B6B0()
{
  return sub_100008EF8();
}

uint64_t sub_10070B6D8()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10070B82C(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  long long v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  BOOL v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100E8FD78;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100E90188;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100E8FF80;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100E8F968;
  }
  else
  {
    uint64_t v35 = &qword_100E8FB70;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[53];
  uint64_t v85 = v35[54];
  uint64_t v86 = v40;
  uint64_t v41 = v35[55];
  uint64_t v83 = v35[56];
  uint64_t v84 = v41;
  uint64_t v42 = v35[61];
  uint64_t v89 = v35[62];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_map;
  uint64_t v45 = v35[63];
  uint64_t v44 = v35[64];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  unint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)unint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  Swift::String v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)Swift::String v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  *uint64_t v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_10070BE08(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v111 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_severeAlert, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v112;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_airQuality, v18 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v18);
    *(void *)(v11 + 64) = v19;
    *(void *)(v11 + 72) = v20;
    uint64_t v21 = (__n128 *)sub_100163204();
    sub_100163264(v21);
    sub_10031F6A8(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v18);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100163264(v26);
    sub_10031F6A8(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v28, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v18);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = sub_100163204();
    *(_OWORD *)(v31 + 16) = v112;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_newsArticle, v31 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v31);
    *(void *)(v11 + 136) = v32;
    *(void *)(v11 + 144) = v33;
    uint64_t v34 = v13;
    uint64_t v35 = (__n128 *)swift_allocObject();
    char v36 = (char *)sub_100183900(v35, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = (__n128 *)swift_allocObject();
    sub_10016324C(v42);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = sub_100163204();
    *(_OWORD *)(v45 + 16) = v112;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v45 + v12 + v34, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 224) = sub_1001F24CC(v45);
    *(void *)(v11 + 232) = v46;
    *(void *)(v11 + 240) = v47;
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v112;
    uint64_t v49 = *(void *)(a1 + 16);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v48 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v12 + v34, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC(v48);
    *(void *)(v11 + 256) = v50;
    *(void *)(v11 + 264) = v51;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C31F20;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v110 = *(void *)(v9 + 72);
    uint64_t v109 = v1;
    unint64_t v52 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v53 = (__n128 *)swift_allocObject();
    uint64_t v54 = sub_100183900(v53, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_severeAlert, (uint64_t)v54 + v52, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v53);
    *(void *)(v11 + 40) = v55;
    *(void *)(v11 + 48) = v56;
    uint64_t v57 = (__n128 *)sub_10017C984();
    sub_100179F54(v57);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_airQuality, v58, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 64) = v59;
    *(void *)(v11 + 72) = v60;
    uint64_t v61 = (__n128 *)sub_10017C984();
    sub_10017E198(v61);
    sub_10031F6A8(v62 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v63, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 88) = v64;
    *(void *)(v11 + 96) = v65;
    uint64_t v66 = (__n128 *)sub_10017C984();
    sub_10017E198(v66);
    sub_10031F6A8(v67 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v68, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 112) = v69;
    *(void *)(v11 + 120) = v70;
    uint64_t v71 = (__n128 *)sub_10017C984();
    sub_100179F54(v71);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_newsArticle, v72, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v71);
    *(void *)(v11 + 136) = v73;
    *(void *)(v11 + 144) = v74;
    uint64_t v75 = (__n128 *)sub_10017C984();
    sub_100179F54(v75);
    sub_10031F6A8(v1, v76, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v75);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    uint64_t v80 = (char *)sub_100183900(v79, (__n128)xmmword_100C25ED0) + v52;
    uint64_t v81 = a1;
    uint64_t v82 = *(void *)(a1 + 16);
    uint64_t v83 = v81;
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v80, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v80[v110], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v84;
    *(void *)(v11 + 192) = v85;
    uint64_t v86 = (__n128 *)swift_allocObject();
    sub_10017A334(v86);
    uint64_t v88 = v87 + v52;
    uint64_t v89 = *(void *)(v83 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v89 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v88 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 208) = v90;
    *(void *)(v11 + 216) = v91;
    uint64_t v92 = (__n128 *)swift_allocObject();
    sub_10017A334(v92);
    uint64_t v94 = v93 + v52;
    uint64_t v95 = *(void *)(v111 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v95 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v94 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 232) = v96;
    *(void *)(v11 + 240) = v97;
    uint64_t v98 = (__n128 *)swift_allocObject();
    sub_10017A334(v98);
    uint64_t v100 = v99 + v52;
    uint64_t v101 = *(void *)(v111 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v101 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v100 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 256) = v102;
    *(void *)(v11 + 264) = v103;
    uint64_t v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = v112;
    uint64_t v105 = *(void *)(v111 + 16);
    sub_10031F6A8(v105 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v104 + v52, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v105 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v104 + v52 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 272) = sub_1001F24CC(v104);
    *(void *)(v11 + 280) = v106;
    *(void *)(v11 + 288) = v107;
    sub_10031F75C(v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_10070C6D0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for LocationViewComponent();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = swift_retain();
  sub_1006E2E94(v18, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_map, v12, (void (*)(void))type metadata accessor for LocationViewComponent);
  uint64_t v19 = sub_10018297C();
  a2(v19);
  sub_100185204();
  _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v4);
  sub_10016327C(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_airQuality);
  uint64_t v20 = sub_10018297C();
  a2(v20);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_newsArticle);
  uint64_t v21 = sub_10018297C();
  a2(v21);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_severeAlert);
  uint64_t v22 = sub_10018297C();
  a2(v22);
  sub_100185204();
  sub_1002C5F58();
}

uint64_t sub_10070C908@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E90398);
  a1[4] = sub_10070CA24();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10070C998()
{
  sub_10070CA78();

  return ShortDescribable.description.getter();
}

unint64_t sub_10070C9D8()
{
  unint64_t result = qword_100E90390;
  if (!qword_100E90390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90390);
  }
  return result;
}

unint64_t sub_10070CA24()
{
  unint64_t result = qword_100E903A0;
  if (!qword_100E903A0)
  {
    sub_10018C6DC(&qword_100E90398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E903A0);
  }
  return result;
}

unint64_t sub_10070CA78()
{
  unint64_t result = qword_100E903A8;
  if (!qword_100E903A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E903A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AirQualityDetailViewAction(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10070CB60);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityDetailViewAction()
{
  return &type metadata for AirQualityDetailViewAction;
}

unint64_t sub_10070CB9C()
{
  unint64_t result = qword_100E903B0;
  if (!qword_100E903B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E903B0);
  }
  return result;
}

uint64_t *sub_10070CBE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    long long v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    v13[32] = v14[32];
  }
  return a1;
}

uint64_t sub_10070CD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for LocationOfInterest();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_10070CDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  return a1;
}

uint64_t sub_10070CE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (long long *)(a2 + v11);
  long long v14 = *v13;
  long long v15 = v13[1];
  *(unsigned char *)(v12 + 32) = *((unsigned char *)v13 + 32);
  *(_OWORD *)uint64_t v12 = v14;
  *(_OWORD *)(v12 + 16) = v15;
  return a1;
}

uint64_t sub_10070CF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  return a1;
}

uint64_t sub_10070D050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  return a1;
}

uint64_t sub_10070D12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10070D140);
}

uint64_t sub_10070D140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for LocationOfInterest();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10070D1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10070D1D0);
}

uint64_t sub_10070D1D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for LocationOfInterest();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_10070D254(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000100C960A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6552656372756F73 && a2 == 0xEA00000000007463)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_10070D3AC(char a1)
{
  if (!a1) {
    return 0x6E6F697461636F6CLL;
  }
  if (a1 == 1) {
    return 0xD000000000000012;
  }
  return 0x6552656372756F73;
}

BOOL sub_10070D40C(uint64_t a1, uint64_t a2)
{
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for HomeAndWorkRefinementViewState();
  if ((static LocationOfInterest.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = (CGRect *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 32);
  uint64_t v8 = a2 + v5;
  if ((v7 & 1) == 0) {
    return (*(unsigned char *)(v8 + 32) & 1) == 0 && CGRectEqualToRect(*v6, *(CGRect *)v8);
  }
  return (*(unsigned char *)(v8 + 32) & 1) != 0;
}

uint64_t sub_10070D4A8(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E90468);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10070DDB8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Location();
  sub_10070DF18(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
  sub_10016347C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for HomeAndWorkRefinementViewState();
    type metadata accessor for LocationOfInterest();
    sub_10070DF18(&qword_100E8B2D0, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for CGRect(0);
    sub_10070DF18(&qword_100E6FA10, type metadata accessor for CGRect);
    sub_10016347C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_10070D6E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v37 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v33 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v36 = v6;
  uint64_t v7 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v34 = v8;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v38 = v10;
  uint64_t v39 = sub_10017DF08(&qword_100E90458);
  sub_100179C0C();
  uint64_t v35 = v11;
  __chkstk_darwin(v12);
  sub_10012B938();
  uint64_t v13 = type metadata accessor for HomeAndWorkRefinementViewState();
  __chkstk_darwin(v13);
  long long v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v15[*(int *)(v16 + 24)];
  *(_OWORD *)uint64_t v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v17[32] = 1;
  sub_1001B1E64(a1, a1[3]);
  sub_10070DDB8();
  uint64_t v40 = v2;
  uint64_t v18 = (uint64_t)v41;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v18) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v31 = v13;
  uint64_t v41 = a1;
  uint64_t v20 = v36;
  uint64_t v19 = v37;
  LOBYTE(v42) = 0;
  sub_10070DF18(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
  uint64_t v21 = v38;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
  uint64_t v30 = v15;
  uint64_t v38 = v7;
  v22(v15, v21, v7);
  LOBYTE(v42) = 1;
  sub_10070DF18(&qword_100E8B208, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
  uint64_t v23 = v20;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v24 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(&v30[*(int *)(v31 + 20)], v23, v19);
  type metadata accessor for CGRect(0);
  char v45 = 2;
  sub_10070DF18(&qword_100E6F9E8, type metadata accessor for CGRect);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v25 = sub_10019F038();
  v26(v25);
  char v27 = v44;
  long long v28 = v43;
  *(_OWORD *)uint64_t v17 = v42;
  *((_OWORD *)v17 + 1) = v28;
  v17[32] = v27;
  sub_10070DE04(v24, v32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
  return sub_10070DE68(v24);
}

uint64_t sub_10070DB40()
{
  return sub_10070D3AC(*v0);
}

uint64_t sub_10070DB48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10070D254(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10070DB70(uint64_t a1)
{
  unint64_t v2 = sub_10070DDB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10070DBAC(uint64_t a1)
{
  unint64_t v2 = sub_10070DDB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10070DBEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10070D6E4(a1, a2);
}

uint64_t sub_10070DC04(void *a1)
{
  return sub_10070D4A8(a1);
}

void sub_10070DC1C()
{
}

uint64_t sub_10070DC34()
{
  return sub_10089AE94();
}

uint64_t sub_10070DC4C@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E90470);
  a1[4] = sub_10070DEC4();
  sub_100170694(a1);
  type metadata accessor for HomeAndWorkRefinementViewState();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10070DCEC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10070DC4C(a1);
}

uint64_t sub_10070DD04()
{
  sub_10070DF18(&qword_100E90480, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementViewState);

  return ShortDescribable.description.getter();
}

uint64_t sub_10070DD70()
{
  return sub_10070DF18(&qword_100E90450, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementViewState);
}

unint64_t sub_10070DDB8()
{
  unint64_t result = qword_100E90460;
  if (!qword_100E90460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90460);
  }
  return result;
}

uint64_t sub_10070DE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeAndWorkRefinementViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10070DE68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeAndWorkRefinementViewState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10070DEC4()
{
  unint64_t result = qword_100E90478;
  if (!qword_100E90478)
  {
    sub_10018C6DC(&qword_100E90470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90478);
  }
  return result;
}

uint64_t sub_10070DF18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HomeAndWorkRefinementViewState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10070E02CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeAndWorkRefinementViewState.CodingKeys()
{
  return &type metadata for HomeAndWorkRefinementViewState.CodingKeys;
}

unint64_t sub_10070E068()
{
  unint64_t result = qword_100E90488;
  if (!qword_100E90488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90488);
  }
  return result;
}

unint64_t sub_10070E0B8()
{
  unint64_t result = qword_100E90490;
  if (!qword_100E90490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90490);
  }
  return result;
}

unint64_t sub_10070E108()
{
  unint64_t result = qword_100E90498;
  if (!qword_100E90498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90498);
  }
  return result;
}

uint64_t sub_10070E154(uint64_t a1, uint64_t a2)
{
  sub_10011BAB4();
  if ((v4 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v5 = (int *)type metadata accessor for NotificationsOptInInput();
  uint64_t v6 = v5[5];
  char v7 = *(unsigned char *)(a2 + v6);
  unint64_t v8 = LocationAuthorizationState.rawValue.getter(*(unsigned char *)(a1 + v6));
  uint64_t v10 = v9;
  BOOL v12 = v8 == LocationAuthorizationState.rawValue.getter(v7) && v10 == v11;
  if (v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = 0;
    if ((v13 & 1) == 0) {
      return v14 & 1;
    }
  }
  if ((sub_1001197F8(*(unsigned __int8 *)(a1 + v5[6]), *(unsigned __int8 *)(a2 + v5[6])) & 1) != 0
    && (sub_10011C778(), v12)
    && (sub_10011C778(), v12)
    && (sub_10011C778(), v12))
  {
    char v14 = *(unsigned char *)(a1 + v5[10]) ^ *(unsigned char *)(a2 + v5[10]) ^ 1;
  }
  else
  {
LABEL_15:
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_10070E274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10059BF00(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, a2);
  uint64_t v4 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  LOBYTE(v4) = *(unsigned char *)(v4 + 1);
  char v5 = *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  uint64_t v6 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
  char v7 = (int *)type metadata accessor for NotificationsOptInState();
  char v8 = *(unsigned char *)(v6 + v7[13]);
  char v9 = *(unsigned char *)(v6 + v7[16]);
  char v10 = *(unsigned char *)(v6 + v7[14]);
  LOBYTE(v6) = *(unsigned char *)(v6 + v7[15]);
  uint64_t v11 = (int *)type metadata accessor for NotificationsOptInInput();
  *(unsigned char *)(a2 + v11[5]) = v4;
  *(unsigned char *)(a2 + v11[6]) = v5;
  *(unsigned char *)(a2 + v11[7]) = v8;
  *(unsigned char *)(a2 + v11[8]) = v9;
  *(unsigned char *)(a2 + v11[9]) = v10;
  *(unsigned char *)(a2 + v11[10]) = v6;
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, (uint64_t)v11);
}

uint64_t type metadata accessor for NotificationsOptInInputFactory()
{
  return self;
}

void *sub_10070E3A8(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
    return v6;
  }
  uint64_t v6 = a1;
  char v7 = (int *)type metadata accessor for ViewState(0);
  uint64_t v8 = v7[5];
  char v9 = (void *)((char *)v6 + v8);
  char v10 = (void *)((char *)a2 + v8);
  type metadata accessor for ViewState.SecondaryViewState(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for WeatherCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *char v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v6 + v7[6]) = *((unsigned char *)a2 + v7[6]);
  *((unsigned char *)v6 + v7[7]) = *((unsigned char *)a2 + v7[7]);
  uint64_t v12 = v7[8];
  char v13 = (void *)((char *)v6 + v12);
  char v14 = (void *)((char *)a2 + v12);
  long long v15 = (int *)type metadata accessor for SearchViewState(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v17 = v7;
    uint64_t v18 = v14[1];
    *char v13 = *v14;
    v13[1] = v18;
    uint64_t v19 = v15[5];
    uint64_t v20 = (void *)((char *)v13 + v19);
    uint64_t v21 = (void *)((char *)v14 + v19);
    uint64_t v22 = type metadata accessor for SearchViewState.ViewState(0);
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      void *v20 = *v21;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        goto LABEL_14;
      }
      uint64_t v24 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
    }
    swift_storeEnumTagMultiPayload();
LABEL_14:
    char v7 = v17;
    *((unsigned char *)v13 + v15[6]) = *((unsigned char *)v14 + v15[6]);
    uint64_t v25 = v15[7];
    uint64_t v26 = (char *)v13 + v25;
    char v27 = (char *)v14 + v25;
    uint64_t v28 = type metadata accessor for Location();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E639E8);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
    goto LABEL_18;
  }
  uint64_t v16 = sub_10017DF08(&qword_100E66408);
  memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_18:
  uint64_t v30 = v7[9];
  uint64_t v31 = (char *)v6 + v30;
  uint64_t v32 = (char *)a2 + v30;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)((char *)a2 + v30);
  v31[16] = *((unsigned char *)a2 + v30 + 16);
  v31[17] = *((unsigned char *)a2 + v30 + 17);
  v31[18] = *((unsigned char *)a2 + v30 + 18);
  uint64_t v33 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v34 = &v31[v33];
  uint64_t v35 = &v32[v33];
  uint64_t v36 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v60 = v7;
  uint64_t v37 = v7[10];
  uint64_t v38 = (char *)v6 + v37;
  uint64_t v39 = (char *)a2 + v37;
  *(_WORD *)((char *)v6 + v37) = *(_WORD *)((char *)a2 + v37);
  uint64_t v40 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v41 = v40[6];
  long long v42 = &v38[v41];
  long long v43 = &v39[v41];
  uint64_t v44 = type metadata accessor for WeatherMapOverlayKind();
  char v45 = (void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
  uint64_t v59 = *v45;
  (*v45)(v42, v43, v44);
  uint64_t v46 = v40[7];
  uint64_t v47 = &v38[v46];
  uint64_t v48 = &v39[v46];
  uint64_t v49 = *((void *)v48 + 1);
  *(void *)uint64_t v47 = *(void *)v48;
  *((void *)v47 + 1) = v49;
  uint64_t v50 = v40[8];
  uint64_t v51 = &v38[v50];
  unint64_t v52 = &v39[v50];
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 3, v53))
  {
    uint64_t v54 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    char *v51 = *v52;
    v59(&v51[*(int *)(v53 + 48)], &v52[*(int *)(v53 + 48)], v44);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 3, v53);
  }
  v38[v40[9]] = v39[v40[9]];
  *((unsigned char *)v6 + v60[11]) = *((unsigned char *)a2 + v60[11]);
  uint64_t v55 = a3[6];
  *((unsigned char *)v6 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)v6 + v55) = *((unsigned char *)a2 + v55);
  uint64_t v56 = a3[8];
  *((unsigned char *)v6 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)v6 + v56) = *((unsigned char *)a2 + v56);
  uint64_t v57 = a3[10];
  *((unsigned char *)v6 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)v6 + v57) = *((unsigned char *)a2 + v57);
  return v6;
}

uint64_t sub_10070E8F4(uint64_t a1)
{
  swift_release();
  uint64_t v2 = (int *)type metadata accessor for ViewState(0);
  uint64_t v3 = a1 + v2[5];
  type metadata accessor for ViewState.SecondaryViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for WeatherCondition();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + v2[8];
  uint64_t v6 = type metadata accessor for SearchViewState(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    type metadata accessor for SearchViewState.ViewState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      uint64_t v9 = type metadata accessor for CodableError();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    }
    uint64_t v10 = v5 + *(int *)(v6 + 28);
    uint64_t v11 = type metadata accessor for Location();
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }
  uint64_t v12 = a1 + v2[9];
  uint64_t v13 = v12 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v14 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + v2[10];
  uint64_t v16 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v17 = v15 + *(int *)(v16 + 24);
  uint64_t v18 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
  v23(v17, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = v15 + *(int *)(v16 + 32);
  uint64_t v20 = sub_10017DF08(&qword_100E66460);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v19, 3, v20);
  if (!result)
  {
    uint64_t v22 = v19 + *(int *)(v20 + 48);
    return ((uint64_t (*)(uint64_t, uint64_t))v23)(v22, v18);
  }
  return result;
}

void *sub_10070EBC4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = (int *)type metadata accessor for ViewState(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  type metadata accessor for ViewState.SecondaryViewState(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for WeatherCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + v5[6]) = *((unsigned char *)a2 + v5[6]);
  *((unsigned char *)a1 + v5[7]) = *((unsigned char *)a2 + v5[7]);
  uint64_t v10 = v5[8];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for SearchViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E66408);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_16;
  }
  uint64_t v15 = v5;
  uint64_t v16 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v16;
  uint64_t v17 = v13[5];
  uint64_t v18 = (void *)((char *)v11 + v17);
  uint64_t v19 = (void *)((char *)v12 + v17);
  uint64_t v20 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v18 = *v19;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      goto LABEL_12;
    }
    uint64_t v22 = type metadata accessor for CodableError();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  *((unsigned char *)v11 + v13[6]) = *((unsigned char *)v12 + v13[6]);
  uint64_t v23 = v13[7];
  uint64_t v24 = (char *)v11 + v23;
  uint64_t v25 = (char *)v12 + v23;
  uint64_t v26 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = sub_10017DF08(&qword_100E639E8);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v5 = v15;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, (uint64_t)v13);
LABEL_16:
  uint64_t v28 = v5[9];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *(_OWORD *)uint64_t v29 = *(_OWORD *)((char *)a2 + v28);
  v29[16] = *((unsigned char *)a2 + v28 + 16);
  v29[17] = *((unsigned char *)a2 + v28 + 17);
  v29[18] = *((unsigned char *)a2 + v28 + 18);
  uint64_t v31 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v32 = &v29[v31];
  uint64_t v33 = &v30[v31];
  uint64_t v34 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v58 = v5;
  uint64_t v35 = v5[10];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  *(_WORD *)((char *)a1 + v35) = *(_WORD *)((char *)a2 + v35);
  uint64_t v38 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v39 = v38[6];
  uint64_t v40 = &v36[v39];
  uint64_t v41 = &v37[v39];
  uint64_t v42 = type metadata accessor for WeatherMapOverlayKind();
  long long v43 = (void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
  uint64_t v57 = *v43;
  (*v43)(v40, v41, v42);
  uint64_t v44 = v38[7];
  char v45 = &v36[v44];
  uint64_t v46 = &v37[v44];
  uint64_t v47 = *((void *)v46 + 1);
  *(void *)char v45 = *(void *)v46;
  *((void *)v45 + 1) = v47;
  uint64_t v48 = v38[8];
  uint64_t v49 = &v36[v48];
  uint64_t v50 = &v37[v48];
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 3, v51))
  {
    uint64_t v52 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    char *v49 = *v50;
    v57(&v49[*(int *)(v51 + 48)], &v50[*(int *)(v51 + 48)], v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 3, v51);
  }
  v36[v38[9]] = v37[v38[9]];
  *((unsigned char *)a1 + v58[11]) = *((unsigned char *)a2 + v58[11]);
  uint64_t v53 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + v53) = *((unsigned char *)a2 + v53);
  uint64_t v54 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v54) = *((unsigned char *)a2 + v54);
  uint64_t v55 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v55) = *((unsigned char *)a2 + v55);
  return a1;
}

void *sub_10070F0C4(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = type metadata accessor for ViewState(0);
  uint64_t v7 = (int *)v6;
  if (a1 != v4)
  {
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)v4 + v8);
    sub_10011E2F8((uint64_t)a1 + v8, type metadata accessor for ViewState.SecondaryViewState);
    type metadata accessor for ViewState.SecondaryViewState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for WeatherCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + v7[6]) = *((unsigned char *)v4 + v7[6]);
  *((unsigned char *)a1 + v7[7]) = *((unsigned char *)v4 + v7[7]);
  uint64_t v12 = v7[8];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)v4 + v12);
  uint64_t v15 = (int *)type metadata accessor for SearchViewState(0);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15);
  uint64_t v80 = v4;
  uint64_t v77 = a3;
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v13 = *v14;
      v13[1] = v14[1];
      uint64_t v18 = v15[5];
      uint64_t v19 = (void *)((char *)v13 + v18);
      uint64_t v20 = (void *)((char *)v14 + v18);
      uint64_t v21 = type metadata accessor for SearchViewState.ViewState(0);
      swift_bridgeObjectRetain();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *uint64_t v19 = *v20;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
          goto LABEL_22;
        }
        uint64_t v23 = type metadata accessor for CodableError();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v20, v23);
      }
      swift_storeEnumTagMultiPayload();
LABEL_22:
      uint64_t v4 = v80;
      *((unsigned char *)v13 + v15[6]) = *((unsigned char *)v14 + v15[6]);
      uint64_t v34 = v15[7];
      uint64_t v35 = (char *)v13 + v34;
      uint64_t v36 = (char *)v14 + v34;
      uint64_t v37 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
      {
        uint64_t v38 = sub_10017DF08(&qword_100E639E8);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      }
      uint64_t v39 = (uint64_t)v13;
      uint64_t v40 = (uint64_t)v15;
      goto LABEL_26;
    }
    goto LABEL_13;
  }
  if (v17)
  {
    sub_10011E2F8((uint64_t)v13, type metadata accessor for SearchViewState);
LABEL_13:
    size_t v24 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66408) - 8) + 64);
    uint64_t v25 = v13;
    uint64_t v26 = v14;
LABEL_14:
    memcpy(v25, v26, v24);
    goto LABEL_27;
  }
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != v4)
  {
    uint64_t v27 = v4;
    uint64_t v28 = v15[5];
    uint64_t v29 = (void *)((char *)v13 + v28);
    uint64_t v30 = (void *)((char *)v14 + v28);
    sub_10011E2F8((uint64_t)v13 + v28, type metadata accessor for SearchViewState.ViewState);
    uint64_t v31 = type metadata accessor for SearchViewState.ViewState(0);
    int v32 = swift_getEnumCaseMultiPayload();
    if (v32 == 1)
    {
      *uint64_t v29 = *v30;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v32)
      {
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_38;
      }
      uint64_t v33 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
    }
    swift_storeEnumTagMultiPayload();
LABEL_38:
    uint64_t v4 = v27;
  }
  *((unsigned char *)v13 + v15[6]) = *((unsigned char *)v14 + v15[6]);
  uint64_t v69 = v15[7];
  uint64_t v70 = (uint64_t)v13 + v69;
  uint64_t v71 = (uint64_t)v14 + v69;
  uint64_t v72 = type metadata accessor for Location();
  int v73 = _s7Weather24LocationCompositionStateOwet_0(v70, 1, v72);
  int v74 = _s7Weather24LocationCompositionStateOwet_0(v71, 1, v72);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
      uint64_t v39 = v70;
      uint64_t v40 = v72;
LABEL_26:
      _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v40);
      goto LABEL_27;
    }
    goto LABEL_44;
  }
  uint64_t v75 = *(void *)(v72 - 8);
  if (v74)
  {
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v70, v72);
LABEL_44:
    size_t v24 = *(void *)(*(void *)(sub_10017DF08(&qword_100E639E8) - 8) + 64);
    uint64_t v25 = (void *)v70;
    uint64_t v26 = (const void *)v71;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 24))(v70, v71, v72);
LABEL_27:
  uint64_t v41 = v7[9];
  uint64_t v42 = (char *)a1 + v41;
  long long v43 = (char *)v4 + v41;
  *(void *)uint64_t v42 = *(void *)((char *)v4 + v41);
  *((void *)v42 + 1) = *(void *)((char *)v4 + v41 + 8);
  v42[16] = *((unsigned char *)v4 + v41 + 16);
  v42[17] = *((unsigned char *)v4 + v41 + 17);
  v42[18] = *((unsigned char *)v4 + v41 + 18);
  uint64_t v44 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  char v45 = &v42[v44];
  uint64_t v46 = &v43[v44];
  uint64_t v47 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  uint64_t v78 = v7;
  uint64_t v79 = a1;
  uint64_t v48 = v7[10];
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)v4 + v48;
  unsigned char *v49 = *((unsigned char *)v4 + v48);
  v49[1] = *((unsigned char *)v4 + v48 + 1);
  uint64_t v51 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v52 = v51[6];
  uint64_t v53 = &v49[v52];
  uint64_t v54 = &v50[v52];
  uint64_t v55 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v56 + 24);
  v57(v53, v54, v55);
  uint64_t v58 = v51[7];
  uint64_t v59 = &v49[v58];
  uint64_t v60 = &v50[v58];
  void *v59 = *(void *)v60;
  v59[1] = *((void *)v60 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v76 = v51;
  uint64_t v61 = v51[8];
  uint64_t v62 = &v49[v61];
  uint64_t v63 = &v50[v61];
  uint64_t v64 = sub_10017DF08(&qword_100E66460);
  int v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 3, v64);
  int v66 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 3, v64);
  if (!v65)
  {
    if (!v66)
    {
      *uint64_t v62 = *v63;
      v57(&v62[*(int *)(v64 + 48)], &v63[*(int *)(v64 + 48)], v55);
      goto LABEL_33;
    }
    sub_10070F900((uint64_t)v62);
    goto LABEL_32;
  }
  if (v66)
  {
LABEL_32:
    uint64_t v67 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_33;
  }
  *uint64_t v62 = *v63;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(&v62[*(int *)(v64 + 48)], &v63[*(int *)(v64 + 48)], v55);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 3, v64);
LABEL_33:
  uint64_t result = v79;
  v49[v76[9]] = v50[v76[9]];
  *((unsigned char *)v79 + v78[11]) = *((unsigned char *)v80 + v78[11]);
  *((unsigned char *)v79 + v77[5]) = *((unsigned char *)v80 + v77[5]);
  *((unsigned char *)v79 + v77[6]) = *((unsigned char *)v80 + v77[6]);
  *((unsigned char *)v79 + v77[7]) = *((unsigned char *)v80 + v77[7]);
  *((unsigned char *)v79 + v77[8]) = *((unsigned char *)v80 + v77[8]);
  *((unsigned char *)v79 + v77[9]) = *((unsigned char *)v80 + v77[9]);
  *((unsigned char *)v79 + v77[10]) = *((unsigned char *)v80 + v77[10]);
  return result;
}

uint64_t sub_10070F900(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E66460);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_10070F960(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = (int *)type metadata accessor for ViewState(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ViewState.SecondaryViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for WeatherCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  *((unsigned char *)a1 + v5[6]) = *((unsigned char *)a2 + v5[6]);
  *((unsigned char *)a1 + v5[7]) = *((unsigned char *)a2 + v5[7]);
  uint64_t v11 = v5[8];
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for SearchViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E66408);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    int v16 = v5;
    *uint64_t v12 = *v13;
    uint64_t v17 = v14[5];
    uint64_t v18 = (char *)v12 + v17;
    uint64_t v19 = (char *)v13 + v17;
    uint64_t v20 = type metadata accessor for SearchViewState.ViewState(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v21 = type metadata accessor for CodableError();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    *((unsigned char *)v12 + v14[6]) = *((unsigned char *)v13 + v14[6]);
    uint64_t v22 = v14[7];
    uint64_t v23 = (char *)v12 + v22;
    size_t v24 = (char *)v13 + v22;
    uint64_t v25 = type metadata accessor for Location();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E639E8);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
    uint64_t v5 = v16;
  }
  uint64_t v27 = v5[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *(_OWORD *)uint64_t v28 = *(_OWORD *)((char *)a2 + v27);
  v28[16] = *((unsigned char *)a2 + v27 + 16);
  v28[17] = *((unsigned char *)a2 + v27 + 17);
  v28[18] = *((unsigned char *)a2 + v27 + 18);
  uint64_t v30 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v31 = &v28[v30];
  int v32 = &v29[v30];
  uint64_t v33 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  uint64_t v53 = v5;
  uint64_t v34 = v5[10];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  *(_WORD *)((char *)a1 + v34) = *(_WORD *)((char *)a2 + v34);
  uint64_t v37 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v38 = v37[6];
  uint64_t v39 = &v35[v38];
  uint64_t v40 = &v36[v38];
  uint64_t v41 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v42 = (void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32);
  uint64_t v52 = *v42;
  (*v42)(v39, v40, v41);
  *(_OWORD *)&v35[v37[7]] = *(_OWORD *)&v36[v37[7]];
  uint64_t v43 = v37[8];
  uint64_t v44 = &v35[v43];
  char v45 = &v36[v43];
  uint64_t v46 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 3, v46))
  {
    uint64_t v47 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    *uint64_t v44 = *v45;
    v52(&v44[*(int *)(v46 + 48)], &v45[*(int *)(v46 + 48)], v41);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 3, v46);
  }
  v35[v37[9]] = v36[v37[9]];
  *((unsigned char *)a1 + v53[11]) = *((unsigned char *)a2 + v53[11]);
  uint64_t v48 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *((unsigned char *)a1 + v48) = *((unsigned char *)a2 + v48);
  uint64_t v49 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v49) = *((unsigned char *)a2 + v49);
  uint64_t v50 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *((unsigned char *)a1 + v50) = *((unsigned char *)a2 + v50);
  return a1;
}

void *sub_10070FE30(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = type metadata accessor for ViewState(0);
  uint64_t v7 = (int *)v6;
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_10011E2F8((uint64_t)a1 + v8, type metadata accessor for ViewState.SecondaryViewState);
    uint64_t v11 = type metadata accessor for ViewState.SecondaryViewState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for WeatherCondition();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
  *((unsigned char *)a1 + v7[7]) = *((unsigned char *)a2 + v7[7]);
  uint64_t v13 = v7[8];
  uint64_t v14 = (uint64_t)a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  int v16 = (int *)type metadata accessor for SearchViewState(0);
  int v17 = _s7Weather24LocationCompositionStateOwet_0(v14, 1, (uint64_t)v16);
  int v18 = _s7Weather24LocationCompositionStateOwet_0(v15, 1, (uint64_t)v16);
  uint64_t v84 = a3;
  if (v17)
  {
    if (!v18)
    {
      uint64_t v19 = v7;
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v20 = v16[5];
      uint64_t v21 = (void *)(v14 + v20);
      uint64_t v22 = (const void *)(v15 + v20);
      uint64_t v23 = type metadata accessor for SearchViewState.ViewState(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v33 = type metadata accessor for CodableError();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v21, v22, v33);
        swift_storeEnumTagMultiPayload();
      }
      *(unsigned char *)(v14 + v16[6]) = *(unsigned char *)(v15 + v16[6]);
      uint64_t v34 = v16[7];
      uint64_t v35 = (void *)(v14 + v34);
      uint64_t v36 = (const void *)(v15 + v34);
      uint64_t v37 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
      {
        uint64_t v38 = sub_10017DF08(&qword_100E639E8);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      }
      uint64_t v7 = v19;
      uint64_t v39 = v14;
      uint64_t v40 = (uint64_t)v16;
      goto LABEL_21;
    }
    goto LABEL_11;
  }
  if (v18)
  {
    sub_10011E2F8(v14, type metadata accessor for SearchViewState);
LABEL_11:
    size_t v24 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66408) - 8) + 64);
    uint64_t v25 = (void *)v14;
    uint64_t v26 = (const void *)v15;
LABEL_12:
    memcpy(v25, v26, v24);
    goto LABEL_22;
  }
  uint64_t v27 = *(void *)(v15 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = v27;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v28 = v7;
    uint64_t v29 = v16[5];
    uint64_t v30 = (void *)(v14 + v29);
    uint64_t v31 = (const void *)(v15 + v29);
    sub_10011E2F8(v14 + v29, type metadata accessor for SearchViewState.ViewState);
    uint64_t v32 = type metadata accessor for SearchViewState.ViewState(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      uint64_t v74 = type metadata accessor for CodableError();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v74 - 8) + 32))(v30, v31, v74);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v7 = v28;
  }
  *(unsigned char *)(v14 + v16[6]) = *(unsigned char *)(v15 + v16[6]);
  uint64_t v75 = v16[7];
  uint64_t v76 = v14 + v75;
  uint64_t v77 = v15 + v75;
  uint64_t v78 = type metadata accessor for Location();
  int v79 = _s7Weather24LocationCompositionStateOwet_0(v76, 1, v78);
  int v80 = _s7Weather24LocationCompositionStateOwet_0(v77, 1, v78);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
      uint64_t v39 = v76;
      uint64_t v40 = v78;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v40);
      goto LABEL_22;
    }
    goto LABEL_37;
  }
  uint64_t v81 = *(void *)(v78 - 8);
  if (v80)
  {
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v76, v78);
LABEL_37:
    size_t v24 = *(void *)(*(void *)(sub_10017DF08(&qword_100E639E8) - 8) + 64);
    uint64_t v25 = (void *)v76;
    uint64_t v26 = (const void *)v77;
    goto LABEL_12;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 40))(v76, v77, v78);
LABEL_22:
  uint64_t v41 = v7[9];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  *(_OWORD *)uint64_t v42 = *(_OWORD *)((char *)a2 + v41);
  v42[16] = *((unsigned char *)a2 + v41 + 16);
  v42[17] = *((unsigned char *)a2 + v41 + 17);
  v42[18] = *((unsigned char *)a2 + v41 + 18);
  uint64_t v44 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  char v45 = &v42[v44];
  uint64_t v46 = &v43[v44];
  uint64_t v47 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40))(v45, v46, v47);
  uint64_t v83 = v7;
  uint64_t v48 = v7[10];
  uint64_t v85 = a2;
  uint64_t v86 = a1;
  uint64_t v49 = (_WORD *)((char *)a1 + v48);
  uint64_t v50 = (_WORD *)((char *)a2 + v48);
  _WORD *v49 = *v50;
  uint64_t v51 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v52 = v51[6];
  uint64_t v53 = (char *)v49 + v52;
  uint64_t v54 = (char *)v50 + v52;
  uint64_t v55 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v56 + 40);
  v57(v53, v54, v55);
  uint64_t v58 = v51[7];
  uint64_t v59 = (void *)((char *)v49 + v58);
  uint64_t v60 = (uint64_t *)((char *)v50 + v58);
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  void *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  uint64_t v82 = v51;
  uint64_t v63 = v51[8];
  uint64_t v64 = (char *)v49 + v63;
  int v65 = (char *)v50 + v63;
  uint64_t v66 = sub_10017DF08(&qword_100E66460);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 3, v66);
  int v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 3, v66);
  if (!v67)
  {
    if (!v68)
    {
      unsigned char *v64 = *v65;
      v57(&v64[*(int *)(v66 + 48)], &v65[*(int *)(v66 + 48)], v55);
      goto LABEL_28;
    }
    sub_10070F900((uint64_t)v64);
    goto LABEL_27;
  }
  if (v68)
  {
LABEL_27:
    uint64_t v69 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v64, v65, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_28;
  }
  unsigned char *v64 = *v65;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 32))(&v64[*(int *)(v66 + 48)], &v65[*(int *)(v66 + 48)], v55);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 3, v66);
LABEL_28:
  *((unsigned char *)v49 + v82[9]) = *((unsigned char *)v50 + v82[9]);
  uint64_t result = v86;
  *((unsigned char *)v86 + v83[11]) = *((unsigned char *)v85 + v83[11]);
  uint64_t v71 = v84[6];
  *((unsigned char *)v86 + v84[5]) = *((unsigned char *)v85 + v84[5]);
  *((unsigned char *)v86 + v71) = *((unsigned char *)v85 + v71);
  uint64_t v72 = v84[8];
  *((unsigned char *)v86 + v84[7]) = *((unsigned char *)v85 + v84[7]);
  *((unsigned char *)v86 + v72) = *((unsigned char *)v85 + v72);
  uint64_t v73 = v84[10];
  *((unsigned char *)v86 + v84[9]) = *((unsigned char *)v85 + v84[9]);
  *((unsigned char *)v86 + v73) = *((unsigned char *)v85 + v73);
  return result;
}

uint64_t sub_1007105E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007105F8);
}

uint64_t sub_1007105F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ViewState(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100710694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007106A8);
}

void sub_1007106A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ViewState(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
}

void *sub_100710730(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v18 = a2;
  uint64_t v7 = sub_10017DF08(&qword_100E906D8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_1007F3A58();
    uint64_t v12 = v20;
    uint64_t v13 = (uint64_t *)(a1 + 40);
    while (1)
    {
      uint64_t v14 = *v13;
      v19[0] = *(v13 - 1);
      v19[1] = v14;
      swift_bridgeObjectRetain();
      sub_100712CE8(v19, v18, a3, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v20 = v12;
      unint64_t v15 = v12[2];
      if (v15 >= v12[3] >> 1)
      {
        sub_1007F3A58();
        uint64_t v12 = v20;
      }
      v13 += 2;
      v12[2] = v15 + 1;
      sub_100715A30((uint64_t)v10, (uint64_t)v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v15);
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v12;
}

id sub_10071090C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    NSString v7 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v8 = 0;
    goto LABEL_6;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  id v9 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v7 message:v8 preferredStyle:a5];

  return v9;
}

id sub_1007109C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    NSString v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    id v9 = 0;
    goto LABEL_6;
  }
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1003169EC;
  v12[3] = &unk_100E25710;
  id v9 = _Block_copy(v12);
  swift_release();
LABEL_6:
  id v10 = [(id)swift_getObjCClassFromMetadata() actionWithTitle:v8 style:a3 handler:v9];
  _Block_release(v9);

  return v10;
}

uint64_t sub_100710ACC()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  static DispatchQoS.background.getter();
  sub_100715B34((unint64_t *)&qword_100E62D18, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10017DF08(&qword_100E62D20);
  sub_10012470C((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_100710CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = (void *)a2;
  uint64_t v5 = type metadata accessor for DebugModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  id v9 = (unint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v9 = sub_1007157C0;
  v9[1] = a3;
  uint64_t v10 = enum case for DebugModel.action(_:);
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v11)(v9, enum case for DebugModel.action(_:), v5, v7);
  swift_retain();
  dispatch thunk of DebugDataSource.add(_:_:)();
  uint64_t v12 = *(void (**)(void *, uint64_t))(v6 + 8);
  v12(v9, v5);
  *id v9 = sub_1007157C8;
  v9[1] = a3;
  unsigned int v29 = v10;
  v11(v9, v10, v5);
  swift_retain();
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  *id v9 = sub_1007125A8;
  v9[1] = 0;
  v11(v9, enum case for DebugModel.modalPopover(_:), v5);
  unint64_t v27 = 0xD000000000000012;
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  *id v9 = sub_10071276C;
  v9[1] = 0;
  unsigned int v28 = enum case for DebugModel.modal(_:);
  ((void (*)(void *))v11)(v9);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  uint64_t v13 = v31;
  sub_10020D948((uint64_t)v31, (uint64_t)v34);
  uint64_t v14 = swift_allocObject();
  sub_1001262E4(v34, v14 + 16);
  *id v9 = sub_1007157D0;
  v9[1] = v14;
  uint64_t v15 = enum case for DebugModel.page(_:);
  v11(v9, enum case for DebugModel.page(_:), v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  sub_10020D948((uint64_t)v13, (uint64_t)v34);
  uint64_t v16 = swift_allocObject();
  sub_1001262E4(v34, v16 + 16);
  *id v9 = sub_100715800;
  v9[1] = v16;
  v11(v9, v15, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  sub_10020D948((uint64_t)v13, (uint64_t)v34);
  uint64_t v17 = swift_allocObject();
  sub_1001262E4(v34, v17 + 16);
  *id v9 = sub_100715830;
  v9[1] = v17;
  v11(v9, v15, v5);
  uint64_t v30 = a1;
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  type metadata accessor for DebugDataSource();
  swift_allocObject();
  uint64_t v18 = DebugDataSource.init()();
  sub_10020D948((uint64_t)v13, (uint64_t)v34);
  uint64_t v19 = swift_allocObject();
  sub_1001262E4(v34, v19 + 16);
  *id v9 = sub_100715898;
  v9[1] = v19;
  v11(v9, v15, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  sub_10020D948((uint64_t)v13, (uint64_t)v34);
  uint64_t v20 = swift_allocObject();
  sub_1001262E4(v34, v20 + 16);
  *id v9 = sub_1007158C8;
  v9[1] = v20;
  v11(v9, v15, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  *id v9 = sub_1007129FC;
  v9[1] = 0;
  LODWORD(v27) = v15;
  uint64_t v21 = v15;
  uint64_t v22 = v18;
  v11(v9, v21, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  sub_1001B1E64(v13, v13[3]);
  sub_10017DF08(&qword_100E906A8);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v33)
  {
    sub_1001262E4(&v32, (uint64_t)v34);
    sub_10020D948((uint64_t)v34, (uint64_t)&v32);
    uint64_t v23 = swift_allocObject();
    sub_1001262E4(&v32, v23 + 16);
    *id v9 = sub_1007158D8;
    v9[1] = v23;
    v11(v9, v27, v5);
    dispatch thunk of DebugDataSource.add(_:_:)();
    v12(v9, v5);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
  }
  else
  {
    sub_1000F3400((uint64_t)&v32, &qword_100E906B0);
  }
  *id v9 = v22;
  v11(v9, enum case for DebugModel.dataSource(_:), v5);
  swift_retain();
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  sub_10020D948((uint64_t)v31, (uint64_t)v34);
  uint64_t v24 = swift_allocObject();
  sub_1001262E4(v34, v24 + 16);
  *id v9 = sub_1007158D0;
  v9[1] = v24;
  v11(v9, v28, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  *id v9 = sub_100713890;
  v9[1] = 0;
  uint64_t v25 = v29;
  v11(v9, v29, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  *id v9 = sub_10071389C;
  v9[1] = 0;
  v11(v9, v25, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  *id v9 = sub_1007138A8;
  v9[1] = 0;
  v11(v9, v25, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  v12(v9, v5);
  *id v9 = sub_100560364;
  v9[1] = 0;
  v11(v9, v25, v5);
  dispatch thunk of DebugDataSource.add(_:_:)();
  swift_release();
  return ((uint64_t (*)(void *, uint64_t))v12)(v9, v5);
}

uint64_t sub_100711674()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (qword_100E62690 != -1) {
      swift_once();
    }
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v0, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.AppConfig.clearConfigCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v1, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearAQIScalesCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v2, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearWeatherDataCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v3, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearWeatherAvailableDataSetsCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v4, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearDailyStatisticsCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v5, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearDailySummaryCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v6, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearHourlyStatisticsCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v7, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearMonthlyStatisticsCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v8, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearCachedJWTTokenOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v9, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Geocoding.clearReverseGeocodingCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v10, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Geocoding.clearGeocodingCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v11, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    static Settings.Geocoding.clearCurrentLocationCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v13, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100711E58()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (qword_100E62690 != -1) {
      swift_once();
    }
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v0, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearAQIScalesCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v1, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearWeatherDataCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v2, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearWeatherAvailableDataSetsCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v3, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearDailyStatisticsCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v4, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearDailySummaryCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v5, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearHourlyStatisticsCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v6, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.clearMonthlyStatisticsCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v7, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Daemon.mangleCachedJWTTokenOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v8, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Geocoding.clearReverseGeocodingCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v9, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    static Settings.Geocoding.clearGeocodingCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v10, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    static Settings.Geocoding.clearCurrentLocationCacheOnNextLaunch.getter();
    type metadata accessor for DebugAssembly();
    sub_100715B34(&qword_100E90700, v12, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
    Updatable.save<A>(setting:value:)();
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_1007125A8()
{
  id v0 = [objc_allocWithZone((Class)type metadata accessor for DiagnosticFileProvider()) init];
  uint64_t v1 = DiagnosticFileProvider.files()();

  uint64_t v2 = v1[2];
  if (v2)
  {
    uint64_t v3 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 5;
    uint64_t v5 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v12 = v3;
      sub_100170694((uint64_t *)&v11);
      swift_bridgeObjectRetain();
      URL.init(fileURLWithPath:)();
      swift_bridgeObjectRelease();
      if (v12)
      {
        sub_100098DB4(&v11, v13);
        sub_100098DB4(v13, &v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007EA110();
          uint64_t v5 = v7;
        }
        unint64_t v6 = v5[2];
        if (v6 >= v5[3] >> 1)
        {
          sub_1007EA110();
          uint64_t v5 = v8;
        }
        v5[2] = v6 + 1;
        sub_100098DB4(&v11, &v5[4 * v6 + 4]);
      }
      else
      {
        sub_1000F3400((uint64_t)&v11, &qword_100EAC3D0);
      }
      v4 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  id v9 = objc_allocWithZone((Class)UIActivityViewController);
  return sub_1007143E8((uint64_t)v5, (uint64_t)_swiftEmptyArrayStorage);
}

id sub_10071276C()
{
  sub_1001ABC4C(0, &qword_100E6C0A8);
  id v0 = sub_10071090C(0x6557207465736552, 0xED00007265687461, 0xD0000000000000C1, 0x8000000100CAFB60, 1);
  sub_1001ABC4C(0, &qword_100E6C0B0);
  id v1 = sub_1007109C4(19279, 0xE200000000000000, 0, 0, 0);
  [v0 addAction:v1];

  return v0;
}

uint64_t sub_10071283C(void *a1, void (*a2)(uint64_t))
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v3 = sub_100162708();
  a2(v3);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100712894(void *a1)
{
  uint64_t v2 = type metadata accessor for JSONText();
  __chkstk_darwin(v2 - 8);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    sub_1001262E4(&v6, (uint64_t)v9);
    sub_1001B1E64(v9, v9[3]);
    uint64_t v7 = type metadata accessor for AppConfiguration();
    uint64_t v8 = sub_100715B34(&qword_100E906F0, 255, (void (*)(uint64_t))&type metadata accessor for AppConfiguration);
    sub_100170694((uint64_t *)&v6);
    dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
    JSONText.init(_:)();
    id v4 = objc_allocWithZone((Class)type metadata accessor for JSONTextViewController());
    uint64_t v5 = JSONTextViewController.init(jsonText:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v9);
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007129FC()
{
  uint64_t v24 = type metadata accessor for JSON();
  uint64_t v0 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v2 = (uint64_t *)((char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for JSONView();
  uint64_t v3 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Locale.current.getter();
  uint64_t v13 = Locale.identifier.getter();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = static Locale.availableIdentifiers.getter();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100710730(v17, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 16) = sub_10071347C((uint64_t)v18);
  *uint64_t v2 = v16;
  (*(void (**)(uint64_t *, void, uint64_t))(v0 + 104))(v2, enum case for JSON.object(_:), v24);
  JSONView.init(value:)();
  uint64_t v19 = v23;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v23);
  id v20 = objc_allocWithZone((Class)sub_10017DF08(&qword_100E906C8));
  uint64_t v21 = UIHostingController.init(rootView:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v19);
  return v21;
}

uint64_t sub_100712CE8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for UnitDefaults();
  uint64_t v107 = *(void *)(v9 - 8);
  uint64_t v108 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = (void *)a1[1];
  swift_bridgeObjectRetain();
  Locale.init(identifier:)();
  UnitDefaults.init(locale:)();
  BOOL v14 = v12 == a2 && v13 == a3;
  if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v116 = 8234;
    unint64_t v117 = 0xE200000000000000;
    v15._countAndFlagsBits = v12;
    v15._object = v13;
    String.append(_:)(v15);
    uint64_t v12 = v116;
    uint64_t v13 = (void *)v117;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v16 = sub_10017DF08(&qword_100E906D8);
  uint64_t v17 = *(int *)(v16 + 48);
  uint64_t v18 = v16;
  uint64_t v106 = (uint64_t *)((char *)a4 + v17);
  *a4 = v12;
  a4[1] = (uint64_t)v13;
  uint64_t v105 = swift_allocObject();
  sub_10017DF08(&qword_100E906E8);
  uint64_t v19 = v18;
  unint64_t v20 = (*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80);
  uint64_t v118 = *(void *)(*(void *)(v18 - 8) + 72);
  uint64_t v21 = v118;
  uint64_t v22 = swift_allocObject();
  v104[1] = v22;
  *(_OWORD *)(v22 + 16) = xmmword_100C34ED0;
  uint64_t v23 = (void *)(v22 + v20);
  uint64_t v24 = (uint64_t *)(v22 + v20 + v17);
  *uint64_t v23 = 0x6572757373657270;
  v23[1] = 0xE800000000000000;
  unint64_t v25 = v22 + v20;
  uint64_t v26 = swift_allocObject();
  unint64_t v27 = (void *)UnitDefaults.pressure.getter();
  id v28 = [v27 symbol];
  uint64_t v109 = v11;
  id v29 = v28;

  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;

  *(void *)(v26 + 16) = v30;
  *(void *)(v26 + 24) = v32;
  *uint64_t v24 = v26;
  uint64_t v33 = enum case for JSON.string(_:);
  uint64_t v110 = type metadata accessor for JSON();
  uint64_t v34 = *(void *)(v110 - 8);
  uint64_t v35 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 104);
  uint64_t v114 = v34 + 104;
  unsigned int v111 = v33;
  v35(v24, v33, v110);
  unint64_t v112 = v25;
  uint64_t v113 = v35;
  uint64_t v36 = (void *)(v25 + v21);
  uint64_t v37 = v19;
  uint64_t v115 = v19;
  uint64_t v38 = (void *)((char *)v36 + *(int *)(v19 + 48));
  *uint64_t v36 = 0x6C6C61666E696172;
  v36[1] = 0xE800000000000000;
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = (void *)UnitDefaults.precipitationRainfall.getter();
  id v41 = [v40 symbol];

  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v44 = v43;

  *(void *)(v39 + 16) = v42;
  *(void *)(v39 + 24) = v44;
  *uint64_t v38 = v39;
  uint64_t v45 = v110;
  v35(v38, v33, v110);
  uint64_t v46 = (void *)(v25 + 2 * v118);
  uint64_t v47 = (void *)((char *)v46 + *(int *)(v37 + 48));
  *uint64_t v46 = 0x6C6C6166776F6E73;
  v46[1] = 0xE800000000000000;
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = (void *)UnitDefaults.precipitationSnowfall.getter();
  id v50 = [v49 symbol];

  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  *(void *)(v48 + 16) = v51;
  *(void *)(v48 + 24) = v53;
  *uint64_t v47 = v48;
  uint64_t v54 = v47;
  uint64_t v55 = v111;
  uint64_t v56 = v113;
  v113(v54, v111, v45);
  uint64_t v57 = v118;
  uint64_t v58 = (void *)(v112 + 3 * v118);
  uint64_t v59 = (void *)((char *)v58 + *(int *)(v115 + 48));
  *uint64_t v58 = 0x74617265706D6574;
  v58[1] = 0xEB00000000657275;
  uint64_t v60 = swift_allocObject();
  uint64_t v61 = (void *)UnitDefaults.temperature.getter();
  id v62 = [v61 symbol];

  uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v65 = v64;

  *(void *)(v60 + 16) = v63;
  *(void *)(v60 + 24) = v65;
  uint64_t *v59 = v60;
  uint64_t v66 = v110;
  v56(v59, v55, v110);
  unint64_t v67 = v112;
  int v68 = (void *)(v112 + 4 * v57);
  uint64_t v69 = (void *)((char *)v68 + *(int *)(v115 + 48));
  void *v68 = 0x696C696269736976;
  v68[1] = 0xEA00000000007974;
  uint64_t v70 = swift_allocObject();
  uint64_t v71 = (void *)UnitDefaults.visibility.getter();
  id v72 = [v71 symbol];

  uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v75 = v74;

  *(void *)(v70 + 16) = v73;
  *(void *)(v70 + 24) = v75;
  *uint64_t v69 = v70;
  uint64_t v76 = v69;
  uint64_t v77 = v111;
  v113(v76, v111, v66);
  uint64_t v78 = (void *)(v67 + 5 * v118);
  uint64_t v79 = v115;
  int v80 = (void *)((char *)v78 + *(int *)(v115 + 48));
  *uint64_t v78 = 0x65657053646E6977;
  v78[1] = 0xE900000000000064;
  uint64_t v81 = swift_allocObject();
  uint64_t v82 = (void *)UnitDefaults.windSpeed.getter();
  id v83 = [v82 symbol];

  uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v86 = v85;

  *(void *)(v81 + 16) = v84;
  *(void *)(v81 + 24) = v86;
  *int v80 = v81;
  uint64_t v87 = v80;
  uint64_t v88 = v77;
  uint64_t v89 = v110;
  uint64_t v90 = (uint64_t (*)(void))v113;
  v113(v87, v88, v110);
  uint64_t v91 = (void *)(v112 + 6 * v118);
  uint64_t v92 = (void *)((char *)v91 + *(int *)(v79 + 48));
  *uint64_t v91 = 0x74737547646E6977;
  v91[1] = 0xE800000000000000;
  uint64_t v93 = swift_allocObject();
  uint64_t v94 = v109;
  uint64_t v95 = (void *)UnitDefaults.windGust.getter();
  id v96 = [v95 symbol];

  uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v99 = v98;

  *(void *)(v93 + 16) = v97;
  *(void *)(v93 + 24) = v99;
  *uint64_t v92 = v93;
  ((void (*)(uint64_t *, void, uint64_t))v90)(v92, v111, v89);
  uint64_t v100 = Dictionary.init(dictionaryLiteral:)();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v94, v108);
  uint64_t v102 = v105;
  uint64_t v101 = v106;
  *(void *)(v105 + 16) = v100;
  *uint64_t v101 = v102;
  return v90();
}

void *sub_10071347C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10017DF08(&qword_100E906D0);
    uint64_t v1 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_100714F40(v2, 1, &v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100713528(void *a1)
{
  uint64_t v2 = type metadata accessor for JSONText();
  __chkstk_darwin(v2 - 8);
  sub_1001B1E64(a1, a1[3]);
  dispatch thunk of LocationsOfInterestManagerType.locations.getter();
  sub_10017DF08(&qword_100E662A8);
  sub_1007158E0();
  JSONText.init(_:)();
  id v3 = objc_allocWithZone((Class)type metadata accessor for JSONTextViewController());
  return JSONTextViewController.init(jsonText:)();
}

id sub_100713608(uint64_t a1)
{
  sub_1001ABC4C(0, &qword_100E6C0A8);
  id v2 = sub_10071090C(0xD000000000000023, 0x8000000100CAFA50, 0xD000000000000057, 0x8000000100CAFA80, 1);
  sub_1001ABC4C(0, &qword_100E6C0B0);
  sub_10020D948(a1, (uint64_t)v7);
  uint64_t v3 = swift_allocObject();
  sub_1001262E4(v7, v3 + 16);
  id v4 = sub_1007109C4(0x7465736552, 0xE500000000000000, 2, (uint64_t)sub_100715988, v3);
  [v2 addAction:v4];

  id v5 = sub_1007109C4(0x6C65636E6143, 0xE600000000000000, 0, 0, 0);
  [v2 addAction:v5];

  return v2;
}

void sub_100713768(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for SyncedData();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E906C0);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v8) {
    __break(1u);
  }
  sub_1001262E4(&v7, (uint64_t)v9);
  sub_1001B1E64(v9, v9[3]);
  dispatch thunk of SyncedDataManagerType.removeAll()();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  exit(0);
}

void sub_100713890()
{
}

void sub_10071389C()
{
}

void sub_1007138A8()
{
}

void sub_1007138B4(SEL *a1)
{
  id v2 = [objc_allocWithZone((Class)TFCrashSimulator) init];
  [v2 *a1];
}

uint64_t sub_100713914()
{
  uint64_t v0 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - v11;
  id v13 = [self defaultManager];
  id v14 = [v13 URLsForDirectory:13 inDomains:1];

  uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100215E90(v15, (uint64_t)v2);
  swift_bridgeObjectRelease();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v2, v3);
    DebugCacheRegistry.registerContentsOfDirectory(_:)();
    type metadata accessor for AppGroup();
    static AppGroup.weather.getter();
    AppGroup.containerURL.getter();
    swift_release();
    URL.appendingPathComponent(_:isDirectory:)();
    DebugCacheRegistry.registerContentsOfDirectory(_:)();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v6, v3);
    URL.appendingPathComponent(_:isDirectory:)();
    DebugCacheRegistry.registerContentsOfDirectory(_:)();
    v17(v6, v3);
    v17(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v17)(v12, v3);
  }
  return result;
}

uint64_t sub_100713BF8(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90690);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v18)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E90698);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v16)
    {
      uint64_t v3 = (void *)sub_100710ACC();
      uint64_t v4 = sub_1000DF0C4((uint64_t)v17, v18);
      __n128 v5 = __chkstk_darwin(v4);
      uint64_t v7 = (uint64_t *)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
      uint64_t v9 = sub_1000DF0C4((uint64_t)v15, v16);
      __n128 v10 = __chkstk_darwin(v9);
      uint64_t v12 = (uint64_t *)&v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
      uint64_t v14 = sub_1007155DC(*v7, *v12, v3);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100713E1C()
{
  type metadata accessor for DebugLocationViewController();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for LocalPresetsViewController();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for DebugLocationManager();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E90690);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E90698);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

id sub_100713F54(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for DebugLocationManager();
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = (uint64_t)result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherDataUpdater();
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = (uint64_t)result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    id v5 = objc_allocWithZone((Class)type metadata accessor for DebugLocationViewController());
    return sub_1009E68B4(v3, v4, v6, v7);
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_100714064(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v3)
  {
    id v2 = objc_allocWithZone((Class)type metadata accessor for LocalPresetsViewController());
    return sub_1003CA4C0(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007140FC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v3)
  {
    type metadata accessor for DebugLocationManager();
    swift_allocObject();
    return sub_1007D7774((uint64_t)v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100714184@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DiagnosticRecorder();
  swift_allocObject();
  uint64_t result = sub_100B658A8();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E38CF8;
  *a1 = result;
  return result;
}

uint64_t sub_1007141DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DiagnosticSummaryFactory();
  uint64_t v3 = swift_allocObject();
  sub_10017DF08(&qword_100E906A0);
  swift_allocObject();
  uint64_t result = Cache.init()();
  *(void *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E11288;
  *a1 = v3;
  return result;
}

id sub_100714254(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90680);
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for NotificationStore();
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = (uint64_t)result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90688);
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5[3])
  {
    id v4 = objc_allocWithZone((Class)type metadata accessor for DebugNotificationSubscriptionsViewController());
    return sub_10055EE94((uint64_t)v6, v3, (uint64_t)v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100714360(uint64_t a1, uint64_t a2)
{
  return sub_100715B34(&qword_100E90678, a2, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
}

uint64_t sub_1007143A8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1007143E0(uint64_t a1, uint64_t a2)
{
  return sub_100710CD8(a1, a2, v2);
}

id sub_1007143E8(uint64_t a1, uint64_t a2)
{
  v4.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (a2)
  {
    sub_1001ABC4C(0, &qword_100E906F8);
    v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v5.super.isa = 0;
  }
  id v6 = [v2 initWithActivityItems:v4.super.isa applicationActivities:v5.super.isa];

  return v6;
}

void sub_100714494(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  sub_100162708();
  uint64_t v5 = type metadata accessor for ElevationData();
  __chkstk_darwin(v5 - 8);
  sub_100109314();
  uint64_t v52 = v6;
  uint64_t v7 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v49 = v11;
  uint64_t v12 = *v2;
  sub_10017DF08(&qword_100E90710);
  char v48 = a2;
  uint64_t v13 = v12;
  uint64_t v14 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_40;
  }
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v45 = (void *)(v13 + 64);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  uint64_t v18 = v17 & *(void *)(v13 + 64);
  uint64_t v43 = v2;
  int64_t v44 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v46 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  id v50 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  uint64_t v51 = v7;
  uint64_t v19 = v14 + 64;
  swift_retain();
  int64_t v20 = 0;
  uint64_t v47 = v13;
  uint64_t v21 = v49;
  if (!v18) {
    goto LABEL_7;
  }
LABEL_6:
  sub_1001D17C4();
  int64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    uint64_t v28 = v9;
    uint64_t v29 = *(void *)(v9 + 72);
    uint64_t v30 = *(void *)(v13 + 48) + v29 * v23;
    if (v48)
    {
      (*v50)(v21, v30, v51);
      uint64_t v31 = sub_10017A7D8();
      sub_100715B7C(v31, v32);
    }
    else
    {
      (*v46)(v21, v30, v51);
      uint64_t v33 = sub_10017A7D8();
      sub_100715AD0(v33, v34);
    }
    sub_100715B34((unint64_t *)&qword_100E63978, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t v35 = dispatch thunk of Hashable._rawHashValue(seed:)() & ~(-1 << *(unsigned char *)(v15 + 32));
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) == 0)
    {
      sub_100183E64();
      uint64_t v21 = v49;
      while (++v38 != v39 || (v37 & 1) == 0)
      {
        BOOL v40 = v38 == v39;
        if (v38 == v39) {
          uint64_t v38 = 0;
        }
        v37 |= v40;
        uint64_t v41 = *(void *)(v19 + 8 * v38);
        if (v41 != -1)
        {
          unint64_t v36 = __clz(__rbit64(~v41)) + (v38 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    unint64_t v36 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    uint64_t v21 = v49;
LABEL_31:
    *(void *)(v19 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    (*v50)(*(void *)(v15 + 48) + v29 * v36, v21, v51);
    sub_100715B7C(v52, *(void *)(v15 + 56) + v13 * v36);
    ++*(void *)(v15 + 16);
    uint64_t v13 = v47;
    uint64_t v9 = v28;
    if (v18) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      goto LABEL_42;
    }
    if (v24 >= v44)
    {
      swift_release();
      uint64_t v3 = v43;
      unint64_t v25 = v45;
      goto LABEL_35;
    }
    unint64_t v25 = v45;
    ++v20;
    if (!v45[v24])
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v44) {
        goto LABEL_33;
      }
      if (!v45[v20]) {
        break;
      }
    }
LABEL_18:
    sub_10017E860();
    int64_t v23 = v27 + (v20 << 6);
    uint64_t v21 = v49;
  }
  int64_t v26 = v24 + 2;
  if (v26 < v44)
  {
    if (!v45[v26])
    {
      while (1)
      {
        int64_t v20 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_43;
        }
        if (v20 >= v44) {
          goto LABEL_33;
        }
        ++v26;
        if (v45[v20]) {
          goto LABEL_18;
        }
      }
    }
    int64_t v20 = v26;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  uint64_t v3 = v43;
LABEL_35:
  if (v48)
  {
    uint64_t v42 = 1 << *(unsigned char *)(v13 + 32);
    if (v42 >= 64) {
      sub_1007F3004(0, (unint64_t)(v42 + 63) >> 6, v25);
    }
    else {
      *unint64_t v25 = -1 << v42;
    }
    *(void *)(v13 + 16) = 0;
  }
LABEL_40:
  swift_release();
  uint64_t *v3 = v15;
}

uint64_t sub_1007148E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = type metadata accessor for JSON();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  char v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_10017DF08(&qword_100E906D0);
  int v47 = a2;
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_40;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  int64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  if (!v13) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v18 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    uint64_t v24 = *(void *)(v7 + 56);
    uint64_t v25 = v7;
    int64_t v26 = (uint64_t *)(*(void *)(v7 + 48) + 16 * i);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    uint64_t v29 = *(void *)(v46 + 72);
    uint64_t v30 = v24 + v29 * i;
    if (v47)
    {
      (*v14)(v48, v30, v49);
    }
    else
    {
      (*v45)(v48, v30, v49);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) == 0)
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v31) >> 6;
      while (++v33 != v36 || (v35 & 1) == 0)
      {
        BOOL v37 = v33 == v36;
        if (v33 == v36) {
          unint64_t v33 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v15 + 8 * v33);
        if (v38 != -1)
        {
          unint64_t v34 = __clz(__rbit64(~v38)) + (v33 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    unint64_t v34 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(void *)(v15 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    uint64_t v39 = (void *)(*(void *)(v9 + 48) + 16 * v34);
    *uint64_t v39 = v27;
    v39[1] = v28;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v29 * v34, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v25;
    if (v13) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_42;
    }
    if (v20 >= v43)
    {
      swift_release();
      uint64_t v3 = v42;
      uint64_t v21 = v44;
      goto LABEL_35;
    }
    uint64_t v21 = v44;
    unint64_t v22 = v44[v20];
    ++v17;
    if (!v22)
    {
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v43) {
        goto LABEL_33;
      }
      unint64_t v22 = v44[v17];
      if (!v22) {
        break;
      }
    }
LABEL_18:
    unint64_t v13 = (v22 - 1) & v22;
  }
  int64_t v23 = v20 + 2;
  if (v23 < v43)
  {
    unint64_t v22 = v44[v23];
    if (!v22)
    {
      while (1)
      {
        int64_t v17 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_43;
        }
        if (v17 >= v43) {
          goto LABEL_33;
        }
        unint64_t v22 = v44[v17];
        ++v23;
        if (v22) {
          goto LABEL_18;
        }
      }
    }
    int64_t v17 = v23;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  uint64_t v3 = v42;
LABEL_35:
  if (v47)
  {
    uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
    if (v40 >= 64) {
      sub_1007F3004(0, (unint64_t)(v40 + 63) >> 6, v21);
    }
    else {
      void *v21 = -1 << v40;
    }
    *(void *)(v7 + 16) = 0;
  }
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v9;
  return result;
}

void sub_100714CBC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10017DF08(&qword_100E90708);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v10 = (uint64_t *)(v5 + 64);
    uint64_t v9 = *(void *)(v5 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v29 = -1 << v11;
    uint64_t v30 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    uint64_t v13 = v12 & v9;
    int64_t v31 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = v6 + 64;
    if ((v12 & v9) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    sub_1001D17C4();
    for (int64_t i = v15 | (v8 << 6); ; int64_t i = v19 + (v8 << 6))
    {
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * i);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * i);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t v22 = static Hasher._hash(seed:_:)() & ~(-1 << *(unsigned char *)(v7 + 32));
      if (((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6))) == 0)
      {
        sub_100183E64();
        while (++v25 != v26 || (v24 & 1) == 0)
        {
          BOOL v27 = v25 == v26;
          if (v25 == v26) {
            uint64_t v25 = 0;
          }
          v24 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v25);
          if (v28 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v28)) + (v25 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v14 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(void *)(*(void *)(v7 + 48) + 8 * v23) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v23) = v21;
      ++*(void *)(v7 + 16);
      if (v13) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v17 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v31) {
        goto LABEL_32;
      }
      ++v8;
      if (!v10[v17])
      {
        int64_t v8 = v17 + 1;
        if (v17 + 1 >= v31) {
          goto LABEL_32;
        }
        if (!v10[v8])
        {
          int64_t v18 = v17 + 2;
          if (v18 >= v31)
          {
LABEL_32:
            if (a2)
            {
              if (v30 >= 64) {
                sub_1007F3004(0, v31, (void *)(v5 + 64));
              }
              else {
                *uint64_t v10 = v29;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          if (!v10[v18])
          {
            while (1)
            {
              int64_t v8 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_41;
              }
              if (v8 >= v31) {
                goto LABEL_32;
              }
              ++v18;
              if (v10[v8]) {
                goto LABEL_18;
              }
            }
          }
          int64_t v8 = v18;
        }
      }
LABEL_18:
      sub_10017E860();
    }
  }
  swift_release();
  uint64_t *v3 = v7;
}

uint64_t sub_100714F40(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = v3;
  id v50 = a3;
  uint64_t v7 = type metadata accessor for JSON();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v49 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E906D8);
  __chkstk_darwin(v10);
  uint64_t v14 = (void *)((char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return swift_bridgeObjectRelease();
  }
  v42[0] = v4;
  v42[1] = a1;
  int v47 = (char *)v14 + *(int *)(v11 + 48);
  uint64_t v16 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v43 = *(void *)(v12 + 72);
  int64_t v17 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  swift_bridgeObjectRetain();
  uint64_t v45 = v8;
  uint64_t v46 = v7;
  int64_t v44 = v14;
  while (1)
  {
    uint64_t v48 = v15;
    sub_1007159C8(v16, (uint64_t)v14);
    uint64_t v18 = *v14;
    uint64_t v19 = v14[1];
    uint64_t v53 = *v14;
    uint64_t v54 = v19;
    uint64_t v20 = *v17;
    uint64_t v21 = v17;
    (*v17)(v49, v47, v7);
    unint64_t v22 = (void *)*v50;
    unint64_t v24 = sub_1001D23B8();
    uint64_t v25 = v22[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      goto LABEL_19;
    }
    char v28 = v23;
    if (v22[3] >= v27)
    {
      if ((a2 & 1) == 0)
      {
        sub_10017DF08(&qword_100E906E0);
        _NativeDictionary.copy()();
      }
    }
    else
    {
      sub_1007148E0(v27, a2 & 1);
      unint64_t v29 = sub_1001D23B8();
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_18;
      }
      unint64_t v24 = v29;
    }
    int64_t v17 = v21;
    if (v28) {
      break;
    }
    int64_t v31 = v49;
    unint64_t v32 = (void *)*v50;
    *(void *)(*v50 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    unint64_t v33 = (void *)(v32[6] + 16 * v24);
    *unint64_t v33 = v18;
    v33[1] = v19;
    unint64_t v34 = v32[7] + *(void *)(v45 + 72) * v24;
    uint64_t v7 = v46;
    v20((char *)v34, v31, v46);
    uint64_t v35 = v32[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_17;
    }
    v32[2] = v37;
    uint64_t v14 = v44;
    v16 += v43;
    a2 = 1;
    uint64_t v15 = v48 - 1;
    if (v48 == 1) {
      return swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v38 = swift_allocError();
  swift_willThrow();
  uint64_t v55 = v38;
  swift_errorRetain();
  sub_10017DF08(&qword_100E77F30);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
LABEL_19:
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v40._object = (void *)0x8000000100CAFB40;
  v40._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v40);
  _print_unlocked<A, B>(_:_:)();
  v41._countAndFlagsBits = 39;
  v41._object = (void *)0xE100000000000000;
  String.append(_:)(v41);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100715398(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnfairLock.Options();
  __chkstk_darwin(v8);
  uint64_t v13 = type metadata accessor for DiagnosticRecorder();
  uint64_t v14 = &off_100E38CF8;
  v12[0] = a1;
  v11[3] = type metadata accessor for DiagnosticSummaryFactory();
  v11[4] = &off_100E11288;
  v11[0] = a2;
  sub_10017DF08(&qword_100E62C98);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static UnfairLock.Options.dataSynchronization.getter();
  sub_100715B34((unint64_t *)&qword_100E62CA0, 255, (void (*)(uint64_t))&type metadata accessor for UnfairLock.Options);
  sub_10017DF08(&qword_100E62CA8);
  sub_10012470C((unint64_t *)&qword_100E62CB0, &qword_100E62CA8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(a4 + 104) = UnfairLock.init(options:)();
  *(void *)(a4 + 112) = 0;
  *(unsigned char *)(a4 + 120) = 0;
  sub_10020D948((uint64_t)v12, a4 + 16);
  sub_10020D948((uint64_t)v11, a4 + 56);
  *(void *)(a4 + 96) = a3;
  sub_1001B1E64(v12, v13);
  id v9 = a3;
  sub_100B65328();

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v11);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
  return a4;
}

uint64_t sub_1007155DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v23 = type metadata accessor for DiagnosticRecorder();
  unint64_t v24 = &off_100E38CF8;
  v22[0] = a1;
  uint64_t v20 = type metadata accessor for DiagnosticSummaryFactory();
  uint64_t v21 = &off_100E11288;
  v19[0] = a2;
  type metadata accessor for DiagnosticManager();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = sub_1000DF0C4((uint64_t)v22, v23);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
  uint64_t v12 = sub_1000DF0C4((uint64_t)v19, v20);
  __n128 v13 = __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
  uint64_t v17 = sub_100715398(*v10, *v15, a3, v6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
  return v17;
}

uint64_t sub_1007157C0()
{
  return sub_100711674();
}

uint64_t sub_1007157C8()
{
  return sub_100711E58();
}

uint64_t sub_1007157D0()
{
  return sub_10071283C((void *)(v0 + 16), (void (*)(uint64_t))type metadata accessor for DebugNotificationSubscriptionsViewController);
}

uint64_t sub_100715800()
{
  return sub_10071283C((void *)(v0 + 16), (void (*)(uint64_t))type metadata accessor for DebugOfflineViewController);
}

uint64_t sub_100715830()
{
  return sub_10071283C((void *)(v0 + 16), (void (*)(uint64_t))type metadata accessor for LocalPresetsViewController);
}

uint64_t sub_100715860()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100715898()
{
  return sub_10071283C((void *)(v0 + 16), (void (*)(uint64_t))type metadata accessor for DebugLocationViewController);
}

uint64_t sub_1007158C8()
{
  return sub_100712894((void *)(v0 + 16));
}

id sub_1007158D0()
{
  return sub_100713608(v0 + 16);
}

uint64_t sub_1007158D8()
{
  return sub_100713528((void *)(v0 + 16));
}

unint64_t sub_1007158E0()
{
  unint64_t result = qword_100E906B8;
  if (!qword_100E906B8)
  {
    sub_10018C6DC(&qword_100E662A8);
    sub_100715B34(&qword_100E8B2D0, 255, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E906B8);
  }
  return result;
}

void sub_100715988(uint64_t a1)
{
  sub_100713768(a1, (void *)(v1 + 16));
}

uint64_t sub_100715990()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1007159C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E906D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100715A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E906D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100715A98()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100715AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ElevationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100715B34(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100715B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ElevationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100715BFC()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100715C34()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100715C6C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);

  return swift_deallocObject();
}

char *sub_100715CC0(char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = (char *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ChartKind();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(void *)&v4[a3[6]] = *(void *)((char *)a2 + a3[6]);
    uint64_t v14 = &v4[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for DetailChartExtrema();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    uint64_t v18 = a3[9];
    *(void *)&v4[a3[8]] = *(void *)((char *)a2 + a3[8]);
    *(void *)&v4[v18] = *(void *)((char *)a2 + v18);
    uint64_t v19 = a3[11];
    *(_OWORD *)&v4[a3[10]] = *(_OWORD *)((char *)a2 + a3[10]);
    uint64_t v20 = &v4[v19];
    uint64_t v21 = *(void **)((char *)a2 + v19);
    unint64_t v22 = *(void **)((char *)a2 + v19 + 8);
    uint64_t v23 = *(void *)((char *)a2 + v19 + 16);
    LOBYTE(v17) = *((unsigned char *)a2 + v19 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10027D4F8(v21, v22, v23, v17);
    *(void *)uint64_t v20 = v21;
    *((void *)v20 + 1) = v22;
    *((void *)v20 + 2) = v23;
    v20[24] = (char)v17;
    uint64_t v24 = a3[12];
    uint64_t v25 = &v4[v24];
    BOOL v26 = (char *)a2 + v24;
    *(void *)&v4[v24] = *(void *)((char *)a2 + v24);
    uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
    char v28 = &v25[v27];
    unint64_t v29 = &v26[v27];
    uint64_t v30 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v33 = a3[13];
    uint64_t v34 = a3[14];
    uint64_t v35 = &v4[v33];
    BOOL v36 = (char *)a2 + v33;
    *(void *)uint64_t v35 = *(void *)v36;
    v35[8] = v36[8];
    uint64_t v37 = &v4[v34];
    uint64_t v38 = (void *)((char *)a2 + v34);
    uint64_t v39 = sub_10017DF08(&qword_100E6BF10);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = type metadata accessor for ChartViewModel.Background(0);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v37 = *v38;
      uint64_t v41 = *(int *)(v39 + 48);
      uint64_t v42 = &v37[v41];
      uint64_t v43 = (char *)v38 + v41;
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v30))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v42, v43, v30);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v30);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
    }
    uint64_t v45 = a3[16];
    *(void *)&v4[a3[15]] = *(void *)((char *)a2 + a3[15]);
    uint64_t v46 = &v4[v45];
    int v47 = (char *)a2 + v45;
    uint64_t v48 = type metadata accessor for ChartDarkeningScrim();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
    uint64_t v49 = a3[18];
    *(void *)&v4[a3[17]] = *(void *)((char *)a2 + a3[17]);
    id v50 = &v4[v49];
    uint64_t v51 = (char *)a2 + v49;
    unint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v52(v50, v51, v30);
    v52(&v4[a3[19]], (char *)a2 + a3[19], v30);
    v52(&v4[a3[20]], (char *)a2 + a3[20], v30);
    uint64_t v53 = a3[21];
    uint64_t v54 = &v4[v53];
    uint64_t v55 = (char *)a2 + v53;
    uint64_t v56 = type metadata accessor for DetailChartDataElement();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
    {
      uint64_t v57 = sub_10017DF08(&qword_100E6B640);
      memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
    }
    uint64_t v58 = a3[23];
    *(void *)&v4[a3[22]] = *(void *)((char *)a2 + a3[22]);
    uint64_t v59 = &v4[v58];
    uint64_t v60 = (char *)a2 + v58;
    uint64_t v61 = type metadata accessor for ChartPeakMarkStyle();
    id v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
    swift_bridgeObjectRetain();
    v62(v59, v60, v61);
    uint64_t v63 = a3[25];
    *(void *)&v4[a3[24]] = *(void *)((char *)a2 + a3[24]);
    *(void *)&v4[v63] = *(void *)((char *)a2 + v63);
    uint64_t v64 = a3[26];
    uint64_t v65 = &v4[v64];
    uint64_t v66 = (char *)a2 + v64;
    uint64_t v67 = type metadata accessor for ChartViewModelInterpolationMode();
    int v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
    swift_bridgeObjectRetain();
    v68(v65, v66, v67);
    uint64_t v69 = a3[27];
    uint64_t v70 = &v4[v69];
    uint64_t v71 = (char *)a2 + v69;
    uint64_t v72 = type metadata accessor for ChartPastDataTreatment();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
    uint64_t v73 = a3[28];
    uint64_t v74 = a3[29];
    uint64_t v75 = &v4[v73];
    uint64_t v76 = (void *)((char *)a2 + v73);
    uint64_t v77 = v76[1];
    *(void *)uint64_t v75 = *v76;
    *((void *)v75 + 1) = v77;
    uint64_t v78 = &v4[v74];
    uint64_t v79 = (void *)((char *)a2 + v74);
    uint64_t v80 = v79[1];
    *(void *)uint64_t v78 = *v79;
    *((void *)v78 + 1) = v80;
    uint64_t v81 = a3[30];
    uint64_t v82 = a3[31];
    id v83 = &v4[v81];
    uint64_t v84 = (void *)((char *)a2 + v81);
    uint64_t v85 = v84[1];
    *(void *)id v83 = *v84;
    *((void *)v83 + 1) = v85;
    uint64_t v86 = &v4[v82];
    uint64_t v87 = (void *)((char *)a2 + v82);
    uint64_t v88 = v87[1];
    *(void *)uint64_t v86 = *v87;
    *((void *)v86 + 1) = v88;
    uint64_t v89 = a3[32];
    uint64_t v90 = a3[33];
    uint64_t v91 = &v4[v89];
    uint64_t v92 = (void *)((char *)a2 + v89);
    uint64_t v93 = v92[1];
    *(void *)uint64_t v91 = *v92;
    *((void *)v91 + 1) = v93;
    uint64_t v94 = &v4[v90];
    uint64_t v95 = (void *)((char *)a2 + v90);
    uint64_t v96 = v95[1];
    *(void *)uint64_t v94 = *v95;
    *((void *)v94 + 1) = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t type metadata accessor for ChartViewModel.Background(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E90960);
}

uint64_t sub_10071639C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for ChartKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(a1 + a2[11]), *(void **)(a1 + a2[11] + 8), *(void *)(a1 + a2[11] + 16), *(unsigned char *)(a1 + a2[11] + 24));
  uint64_t v8 = a1 + a2[12];
  uint64_t v9 = v8 + *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v10 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  uint64_t v11 = a1 + a2[14];
  uint64_t v12 = sub_10017DF08(&qword_100E6BF10);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    swift_release();
    uint64_t v13 = v11 + *(int *)(v12 + 48);
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v13, v10);
    }
  }
  uint64_t v14 = a1 + a2[16];
  uint64_t v15 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v16(a1 + a2[18], v10);
  v16(a1 + a2[19], v10);
  v16(a1 + a2[20], v10);
  uint64_t v17 = a1 + a2[21];
  uint64_t v18 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = a1 + a2[23];
  uint64_t v20 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + a2[26];
  uint64_t v22 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[27];
  uint64_t v24 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

char *sub_1007167CC(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ChartKind();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for DetailChartExtrema();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  uint64_t v17 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)((char *)a2 + a3[8]);
  *(void *)&a1[v17] = *(void *)((char *)a2 + v17);
  uint64_t v18 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = *(void **)((char *)a2 + v18);
  uint64_t v21 = *(void **)((char *)a2 + v18 + 8);
  uint64_t v22 = *(void *)((char *)a2 + v18 + 16);
  LOBYTE(v16) = *((unsigned char *)a2 + v18 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v20, v21, v22, v16);
  *(void *)uint64_t v19 = v20;
  *((void *)v19 + 1) = v21;
  *((void *)v19 + 2) = v22;
  v19[24] = (char)v16;
  uint64_t v23 = a3[12];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = (char *)a2 + v23;
  *(void *)&a1[v23] = *(void *)((char *)a2 + v23);
  uint64_t v26 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v27 = &v24[v26];
  char v28 = &v25[v26];
  uint64_t v29 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = &a1[v31];
  uint64_t v34 = (char *)a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  uint64_t v35 = &a1[v32];
  BOOL v36 = (void *)((char *)a2 + v32);
  uint64_t v37 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v35 = *v36;
    uint64_t v39 = *(int *)(v37 + 48);
    uint64_t v40 = &v35[v39];
    uint64_t v41 = (char *)v36 + v39;
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v29))
    {
      uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v40, v41, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v29);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v43 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)((char *)a2 + a3[15]);
  uint64_t v44 = &a1[v43];
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[18];
  *(void *)&a1[a3[17]] = *(void *)((char *)a2 + a3[17]);
  uint64_t v48 = &a1[v47];
  uint64_t v49 = (char *)a2 + v47;
  id v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  v50(v48, v49, v29);
  v50(&a1[a3[19]], (char *)a2 + a3[19], v29);
  v50(&a1[a3[20]], (char *)a2 + a3[20], v29);
  uint64_t v51 = a3[21];
  unint64_t v52 = &a1[v51];
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
  {
    uint64_t v55 = sub_10017DF08(&qword_100E6B640);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
  }
  uint64_t v56 = a3[23];
  *(void *)&a1[a3[22]] = *(void *)((char *)a2 + a3[22]);
  uint64_t v57 = &a1[v56];
  uint64_t v58 = (char *)a2 + v56;
  uint64_t v59 = type metadata accessor for ChartPeakMarkStyle();
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
  swift_bridgeObjectRetain();
  v60(v57, v58, v59);
  uint64_t v61 = a3[25];
  *(void *)&a1[a3[24]] = *(void *)((char *)a2 + a3[24]);
  *(void *)&a1[v61] = *(void *)((char *)a2 + v61);
  uint64_t v62 = a3[26];
  uint64_t v63 = &a1[v62];
  uint64_t v64 = (char *)a2 + v62;
  uint64_t v65 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
  swift_bridgeObjectRetain();
  v66(v63, v64, v65);
  uint64_t v67 = a3[27];
  int v68 = &a1[v67];
  uint64_t v69 = (char *)a2 + v67;
  uint64_t v70 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
  uint64_t v71 = a3[28];
  uint64_t v72 = a3[29];
  uint64_t v73 = &a1[v71];
  uint64_t v74 = (void *)((char *)a2 + v71);
  uint64_t v75 = v74[1];
  *(void *)uint64_t v73 = *v74;
  *((void *)v73 + 1) = v75;
  uint64_t v76 = &a1[v72];
  uint64_t v77 = (void *)((char *)a2 + v72);
  uint64_t v78 = v77[1];
  *(void *)uint64_t v76 = *v77;
  *((void *)v76 + 1) = v78;
  uint64_t v79 = a3[30];
  uint64_t v80 = a3[31];
  uint64_t v81 = &a1[v79];
  uint64_t v82 = (void *)((char *)a2 + v79);
  uint64_t v83 = v82[1];
  *(void *)uint64_t v81 = *v82;
  *((void *)v81 + 1) = v83;
  uint64_t v84 = &a1[v80];
  uint64_t v85 = (void *)((char *)a2 + v80);
  uint64_t v86 = v85[1];
  *(void *)uint64_t v84 = *v85;
  *((void *)v84 + 1) = v86;
  uint64_t v87 = a3[32];
  uint64_t v88 = a3[33];
  uint64_t v89 = &a1[v87];
  uint64_t v90 = (void *)((char *)a2 + v87);
  uint64_t v91 = v90[1];
  *(void *)uint64_t v89 = *v90;
  *((void *)v89 + 1) = v91;
  uint64_t v92 = &a1[v88];
  uint64_t v93 = (void *)((char *)a2 + v88);
  uint64_t v94 = v93[1];
  *(void *)uint64_t v92 = *v93;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

char *sub_100716E3C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[10];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  uint64_t v17 = a3[11];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  id v20 = *(id *)v19;
  uint64_t v21 = (void *)*((void *)v19 + 1);
  uint64_t v22 = *((void *)v19 + 2);
  unsigned __int8 v23 = v19[24];
  sub_10027D4F8(*(id *)v19, v21, v22, v23);
  uint64_t v24 = *(void **)v18;
  uint64_t v25 = (void *)*((void *)v18 + 1);
  uint64_t v26 = *((void *)v18 + 2);
  *(void *)uint64_t v18 = v20;
  *((void *)v18 + 1) = v21;
  *((void *)v18 + 2) = v22;
  unsigned __int8 v27 = v18[24];
  v18[24] = v23;
  sub_10027D954(v24, v25, v26, v27);
  uint64_t v28 = a3[12];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *(void *)&a1[v28] = *(void *)&a2[v28];
  uint64_t v31 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v32 = &v29[v31];
  uint64_t v33 = &v30[v31];
  uint64_t v34 = type metadata accessor for Date();
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v37 = *(void *)(v34 - 8);
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v34);
LABEL_6:
    uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v32, v33, v34);
LABEL_7:
  uint64_t v39 = a3[13];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v42 = *(void *)v41;
  v40[8] = v41[8];
  *(void *)uint64_t v40 = v42;
  uint64_t v43 = a3[14];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v46 = sub_10017DF08(&qword_100E6BF10);
  int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46);
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46);
  if (v47)
  {
    if (!v48)
    {
      *(void *)uint64_t v44 = *(void *)v45;
      uint64_t v49 = *(int *)(v46 + 48);
      id v50 = &v44[v49];
      uint64_t v51 = &v45[v49];
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v34))
      {
        uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v50, v51, v34);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v34);
      }
      uint64_t v61 = (uint64_t)v44;
      uint64_t v62 = v46;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v48)
  {
    sub_100178110((uint64_t)v44, &qword_100E6BF10);
LABEL_13:
    size_t v53 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v54 = v44;
    uint64_t v55 = v45;
LABEL_14:
    memcpy(v54, v55, v53);
    goto LABEL_22;
  }
  *(void *)uint64_t v44 = *(void *)v45;
  swift_retain();
  swift_release();
  uint64_t v56 = *(int *)(v46 + 48);
  uint64_t v57 = (uint64_t)&v44[v56];
  uint64_t v58 = (uint64_t)&v45[v56];
  int v59 = _s7Weather24LocationCompositionStateOwet_0(v57, 1, v34);
  int v60 = _s7Weather24LocationCompositionStateOwet_0(v58, 1, v34);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v57, v58, v34);
      uint64_t v61 = v57;
      uint64_t v62 = v34;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v61, 0, 1, v62);
      goto LABEL_22;
    }
    goto LABEL_32;
  }
  uint64_t v108 = *(void *)(v34 - 8);
  if (v60)
  {
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v57, v34);
LABEL_32:
    size_t v53 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v54 = (void *)v57;
    uint64_t v55 = (const void *)v58;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 24))(v57, v58, v34);
LABEL_22:
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  uint64_t v63 = a3[16];
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  uint64_t v66 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24);
  v67(&a1[a3[18]], &a2[a3[18]], v34);
  v67(&a1[a3[19]], &a2[a3[19]], v34);
  v67(&a1[a3[20]], &a2[a3[20]], v34);
  uint64_t v68 = a3[21];
  uint64_t v69 = &a1[v68];
  uint64_t v70 = &a2[v68];
  uint64_t v71 = type metadata accessor for DetailChartDataElement();
  int v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v71);
  int v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71);
  if (!v72)
  {
    uint64_t v74 = *(void *)(v71 - 8);
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 24))(v69, v70, v71);
      goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v69, v71);
    goto LABEL_27;
  }
  if (v73)
  {
LABEL_27:
    uint64_t v75 = sub_10017DF08(&qword_100E6B640);
    memcpy(v69, v70, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
LABEL_28:
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v76 = a3[23];
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  uint64_t v79 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 24))(v77, v78, v79);
  *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
  *(void *)&a1[a3[25]] = *(void *)&a2[a3[25]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v80 = a3[26];
  uint64_t v81 = &a1[v80];
  uint64_t v82 = &a2[v80];
  uint64_t v83 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 24))(v81, v82, v83);
  uint64_t v84 = a3[27];
  uint64_t v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  uint64_t v87 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 24))(v85, v86, v87);
  uint64_t v88 = a3[28];
  uint64_t v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  *(void *)uint64_t v89 = *(void *)v90;
  *((void *)v89 + 1) = *((void *)v90 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v91 = a3[29];
  uint64_t v92 = &a1[v91];
  uint64_t v93 = &a2[v91];
  *(void *)uint64_t v92 = *(void *)v93;
  *((void *)v92 + 1) = *((void *)v93 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = a3[30];
  uint64_t v95 = &a1[v94];
  uint64_t v96 = &a2[v94];
  *(void *)uint64_t v95 = *(void *)v96;
  *((void *)v95 + 1) = *((void *)v96 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v97 = a3[31];
  uint64_t v98 = &a1[v97];
  uint64_t v99 = &a2[v97];
  *(void *)uint64_t v98 = *(void *)v99;
  *((void *)v98 + 1) = *((void *)v99 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v100 = a3[32];
  uint64_t v101 = &a1[v100];
  uint64_t v102 = &a2[v100];
  *(void *)uint64_t v101 = *(void *)v102;
  *((void *)v101 + 1) = *((void *)v102 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v103 = a3[33];
  uint64_t v104 = &a1[v103];
  uint64_t v105 = &a2[v103];
  uint64_t v106 = *((void *)v105 + 1);
  *(void *)uint64_t v104 = *(void *)v105;
  *((void *)v104 + 1) = v106;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1007177D4(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 9) = *(_OWORD *)(v17 + 9);
  uint64_t v18 = a3[12];
  uint64_t v19 = &a1[v18];
  id v20 = &a2[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v22 = &v19[v21];
  unsigned __int8 v23 = &v20[v21];
  uint64_t v24 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v26 = a3[13];
  uint64_t v27 = a3[14];
  uint64_t v28 = &a1[v26];
  uint64_t v29 = &a2[v26];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = &a1[v27];
  uint64_t v31 = &a2[v27];
  uint64_t v32 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v34 = *(int *)(v32 + 48);
    int v35 = &v30[v34];
    int v36 = &v31[v34];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v24))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v35, v36, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v24);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v38 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  uint64_t v42 = a3[18];
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v43(&a1[v42], &a2[v42], v24);
  v43(&a1[a3[19]], &a2[a3[19]], v24);
  v43(&a1[a3[20]], &a2[a3[20]], v24);
  uint64_t v44 = a3[21];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
  {
    uint64_t v48 = sub_10017DF08(&qword_100E6B640);
    memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
  }
  uint64_t v49 = a3[23];
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  id v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  uint64_t v52 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  uint64_t v53 = a3[25];
  *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
  *(void *)&a1[v53] = *(void *)&a2[v53];
  uint64_t v54 = a3[26];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
  uint64_t v58 = a3[27];
  int v59 = &a1[v58];
  int v60 = &a2[v58];
  uint64_t v61 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
  uint64_t v62 = a3[29];
  *(_OWORD *)&a1[a3[28]] = *(_OWORD *)&a2[a3[28]];
  *(_OWORD *)&a1[v62] = *(_OWORD *)&a2[v62];
  uint64_t v63 = a3[31];
  *(_OWORD *)&a1[a3[30]] = *(_OWORD *)&a2[a3[30]];
  *(_OWORD *)&a1[v63] = *(_OWORD *)&a2[v63];
  uint64_t v64 = a3[33];
  *(_OWORD *)&a1[a3[32]] = *(_OWORD *)&a2[a3[32]];
  *(_OWORD *)&a1[v64] = *(_OWORD *)&a2[v64];
  return a1;
}

char *sub_100717D78(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 2);
  char v19 = v17[24];
  id v20 = *(void **)v16;
  uint64_t v21 = (void *)*((void *)v16 + 1);
  uint64_t v22 = *((void *)v16 + 2);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((void *)v16 + 2) = v18;
  unsigned __int8 v23 = v16[24];
  unsigned char v16[24] = v19;
  sub_10027D954(v20, v21, v22, v23);
  uint64_t v24 = a3[12];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v28 = &v25[v27];
  uint64_t v29 = &v26[v27];
  uint64_t v30 = type metadata accessor for Date();
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v33 = *(void *)(v30 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v30);
LABEL_6:
    uint64_t v34 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v28, v29, v30);
LABEL_7:
  uint64_t v35 = a3[13];
  uint64_t v36 = a3[14];
  uint64_t v37 = &a1[v35];
  uint64_t v38 = &a2[v35];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = &a1[v36];
  uint64_t v40 = &a2[v36];
  uint64_t v41 = sub_10017DF08(&qword_100E6BF10);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v41);
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41);
  if (v42)
  {
    if (!v43)
    {
      *(void *)uint64_t v39 = *(void *)v40;
      uint64_t v44 = *(int *)(v41 + 48);
      uint64_t v45 = &v39[v44];
      uint64_t v46 = &v40[v44];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v30))
      {
        uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v45, v46, v30);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v30);
      }
      uint64_t v56 = (uint64_t)v39;
      uint64_t v57 = v41;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v43)
  {
    sub_100178110((uint64_t)v39, &qword_100E6BF10);
LABEL_13:
    size_t v48 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v49 = v39;
    id v50 = v40;
LABEL_14:
    memcpy(v49, v50, v48);
    goto LABEL_22;
  }
  *(void *)uint64_t v39 = *(void *)v40;
  swift_release();
  uint64_t v51 = *(int *)(v41 + 48);
  uint64_t v52 = (uint64_t)&v39[v51];
  uint64_t v53 = (uint64_t)&v40[v51];
  int v54 = _s7Weather24LocationCompositionStateOwet_0(v52, 1, v30);
  int v55 = _s7Weather24LocationCompositionStateOwet_0(v53, 1, v30);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v52, v53, v30);
      uint64_t v56 = v52;
      uint64_t v57 = v30;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_22;
    }
    goto LABEL_32;
  }
  uint64_t v110 = *(void *)(v30 - 8);
  if (v55)
  {
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v52, v30);
LABEL_32:
    size_t v48 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v49 = (void *)v52;
    id v50 = (const void *)v53;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 40))(v52, v53, v30);
LABEL_22:
  uint64_t v58 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  int v59 = &a1[v58];
  int v60 = &a2[v58];
  uint64_t v61 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 40))(v59, v60, v61);
  *(void *)&a1[a3[17]] = *(void *)&a2[a3[17]];
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40);
  v62(&a1[a3[18]], &a2[a3[18]], v30);
  v62(&a1[a3[19]], &a2[a3[19]], v30);
  v62(&a1[a3[20]], &a2[a3[20]], v30);
  uint64_t v63 = a3[21];
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  uint64_t v66 = type metadata accessor for DetailChartDataElement();
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  int v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if (!v67)
  {
    uint64_t v69 = *(void *)(v66 - 8);
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 40))(v64, v65, v66);
      goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v64, v66);
    goto LABEL_27;
  }
  if (v68)
  {
LABEL_27:
    uint64_t v70 = sub_10017DF08(&qword_100E6B640);
    memcpy(v64, v65, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
LABEL_28:
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  swift_bridgeObjectRelease();
  uint64_t v71 = a3[23];
  int v72 = &a1[v71];
  int v73 = &a2[v71];
  uint64_t v74 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
  uint64_t v75 = a3[25];
  *(void *)&a1[a3[24]] = *(void *)&a2[a3[24]];
  *(void *)&a1[v75] = *(void *)&a2[v75];
  swift_bridgeObjectRelease();
  uint64_t v76 = a3[26];
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  uint64_t v79 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
  uint64_t v80 = a3[27];
  uint64_t v81 = &a1[v80];
  uint64_t v82 = &a2[v80];
  uint64_t v83 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 40))(v81, v82, v83);
  uint64_t v84 = a3[28];
  uint64_t v85 = &a1[v84];
  uint64_t v86 = (uint64_t *)&a2[v84];
  uint64_t v88 = *v86;
  uint64_t v87 = v86[1];
  *(void *)uint64_t v85 = v88;
  *((void *)v85 + 1) = v87;
  swift_bridgeObjectRelease();
  uint64_t v89 = a3[29];
  uint64_t v90 = &a1[v89];
  uint64_t v91 = (uint64_t *)&a2[v89];
  uint64_t v93 = *v91;
  uint64_t v92 = v91[1];
  *(void *)uint64_t v90 = v93;
  *((void *)v90 + 1) = v92;
  swift_bridgeObjectRelease();
  uint64_t v94 = a3[30];
  uint64_t v95 = &a1[v94];
  uint64_t v96 = (uint64_t *)&a2[v94];
  uint64_t v98 = *v96;
  uint64_t v97 = v96[1];
  *(void *)uint64_t v95 = v98;
  *((void *)v95 + 1) = v97;
  swift_bridgeObjectRelease();
  uint64_t v99 = a3[31];
  uint64_t v100 = &a1[v99];
  uint64_t v101 = (uint64_t *)&a2[v99];
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  *(void *)uint64_t v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease();
  uint64_t v104 = a3[32];
  uint64_t v105 = &a1[v104];
  uint64_t v106 = (uint64_t *)&a2[v104];
  uint64_t v108 = *v106;
  uint64_t v107 = v106[1];
  *(void *)uint64_t v105 = v108;
  *((void *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[a3[33]] = *(_OWORD *)&a2[a3[33]];
  swift_release();
  return a1;
}

uint64_t sub_100718634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100718648);
}

uint64_t sub_100718648(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  type metadata accessor for ChartKind();
  sub_10017C808();
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a3[5];
LABEL_24:
    uint64_t v17 = a1 + v11;
    goto LABEL_25;
  }
  type metadata accessor for DetailChartExtrema();
  sub_10017C808();
  if (*(_DWORD *)(v13 + 84) == a2)
  {
    uint64_t v10 = v12;
    uint64_t v11 = a3[7];
    goto LABEL_24;
  }
  uint64_t v14 = type metadata accessor for ChartDateStep();
  sub_1001627C0(v14);
  if (*(_DWORD *)(v15 + 84) != a2)
  {
    type metadata accessor for ChartViewModel.Background(0);
    sub_10017C808();
    if (*(_DWORD *)(v19 + 84) == a2)
    {
      uint64_t v10 = v18;
      uint64_t v11 = a3[14];
    }
    else
    {
      type metadata accessor for ChartDarkeningScrim();
      sub_10017C808();
      if (*(_DWORD *)(v21 + 84) == a2)
      {
        uint64_t v10 = v20;
        uint64_t v11 = a3[16];
      }
      else
      {
        type metadata accessor for Date();
        sub_10017C808();
        if (*(_DWORD *)(v23 + 84) == a2)
        {
          uint64_t v10 = v22;
          uint64_t v11 = a3[18];
        }
        else
        {
          sub_10017DF08(&qword_100E6B640);
          sub_10017C808();
          if (*(_DWORD *)(v25 + 84) == a2)
          {
            uint64_t v10 = v24;
            uint64_t v11 = a3[21];
          }
          else
          {
            type metadata accessor for ChartPeakMarkStyle();
            sub_10017C808();
            if (*(_DWORD *)(v27 + 84) == a2)
            {
              uint64_t v10 = v26;
              uint64_t v11 = a3[23];
            }
            else
            {
              type metadata accessor for ChartViewModelInterpolationMode();
              sub_10017C808();
              if (*(_DWORD *)(v29 + 84) == a2)
              {
                uint64_t v10 = v28;
                uint64_t v11 = a3[26];
              }
              else
              {
                uint64_t v10 = type metadata accessor for ChartPastDataTreatment();
                uint64_t v11 = a3[27];
              }
            }
          }
        }
      }
    }
    goto LABEL_24;
  }
  uint64_t v16 = a1 + a3[12];
  uint64_t v10 = sub_10017DF08(&qword_100E6BF00);
  uint64_t v17 = v16;
LABEL_25:

  return _s7Weather24LocationCompositionStateOwet_0(v17, a2, v10);
}

uint64_t sub_10071884C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100718860);
}

uint64_t sub_100718860(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  type metadata accessor for ChartKind();
  sub_10017C808();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[5];
LABEL_22:
    uint64_t v17 = v5 + v11;
    goto LABEL_23;
  }
  type metadata accessor for DetailChartExtrema();
  sub_10017C808();
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    uint64_t v10 = v12;
    uint64_t v11 = a4[7];
    goto LABEL_22;
  }
  uint64_t v14 = type metadata accessor for ChartDateStep();
  sub_1001627C0(v14);
  if (*(_DWORD *)(v15 + 84) != a3)
  {
    type metadata accessor for ChartViewModel.Background(0);
    sub_10017C808();
    if (*(_DWORD *)(v19 + 84) == a3)
    {
      uint64_t v10 = v18;
      uint64_t v11 = a4[14];
    }
    else
    {
      type metadata accessor for ChartDarkeningScrim();
      sub_10017C808();
      if (*(_DWORD *)(v21 + 84) == a3)
      {
        uint64_t v10 = v20;
        uint64_t v11 = a4[16];
      }
      else
      {
        type metadata accessor for Date();
        sub_10017C808();
        if (*(_DWORD *)(v23 + 84) == a3)
        {
          uint64_t v10 = v22;
          uint64_t v11 = a4[18];
        }
        else
        {
          sub_10017DF08(&qword_100E6B640);
          sub_10017C808();
          if (*(_DWORD *)(v25 + 84) == a3)
          {
            uint64_t v10 = v24;
            uint64_t v11 = a4[21];
          }
          else
          {
            type metadata accessor for ChartPeakMarkStyle();
            sub_10017C808();
            if (*(_DWORD *)(v27 + 84) == a3)
            {
              uint64_t v10 = v26;
              uint64_t v11 = a4[23];
            }
            else
            {
              type metadata accessor for ChartViewModelInterpolationMode();
              sub_10017C808();
              if (*(_DWORD *)(v29 + 84) == a3)
              {
                uint64_t v10 = v28;
                uint64_t v11 = a4[26];
              }
              else
              {
                uint64_t v10 = type metadata accessor for ChartPastDataTreatment();
                uint64_t v11 = a4[27];
              }
            }
          }
        }
      }
    }
    goto LABEL_22;
  }
  uint64_t v16 = v5 + a4[12];
  uint64_t v10 = sub_10017DF08(&qword_100E6BF00);
  uint64_t v17 = v16;
LABEL_23:

  return _s7Weather24LocationCompositionStateOwst_0(v17, a2, a2, v10);
}

uint64_t type metadata accessor for ChartViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E90840);
}

void sub_100718A80()
{
  void v19[4] = &unk_100C54CF8;
  uint64_t v0 = type metadata accessor for ChartKind();
  if (v1 <= 0x3F)
  {
    void v19[5] = *(void *)(v0 - 8) + 64;
    v19[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t v2 = type metadata accessor for DetailChartExtrema();
    if (v3 <= 0x3F)
    {
      v19[7] = *(void *)(v2 - 8) + 64;
      v19[8] = &unk_100C54D10;
      v19[9] = &unk_100C54D10;
      void v19[10] = &unk_100C54D28;
      v19[11] = &unk_100C54D40;
      sub_10002B394(319, (unint64_t *)&qword_100E638F0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v19[12] = v19;
        v19[13] = &unk_100C54D58;
        uint64_t v5 = type metadata accessor for ChartViewModel.Background(319);
        if (v6 <= 0x3F)
        {
          v19[14] = *(void *)(v5 - 8) + 64;
          v19[15] = (char *)&value witness table for Builtin.Int64 + 64;
          uint64_t v7 = type metadata accessor for ChartDarkeningScrim();
          if (v8 <= 0x3F)
          {
            v19[16] = *(void *)(v7 - 8) + 64;
            v19[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
            uint64_t v9 = type metadata accessor for Date();
            if (v10 <= 0x3F)
            {
              uint64_t v20 = *(void *)(v9 - 8) + 64;
              uint64_t v21 = v20;
              uint64_t v22 = v20;
              sub_10002B394(319, (unint64_t *)&unk_100E90850, (void (*)(uint64_t))&type metadata accessor for DetailChartDataElement);
              if (v12 <= 0x3F)
              {
                uint64_t v23 = *(void *)(v11 - 8) + 64;
                uint64_t v24 = (char *)&value witness table for Builtin.BridgeObject + 64;
                uint64_t v13 = type metadata accessor for ChartPeakMarkStyle();
                if (v14 <= 0x3F)
                {
                  uint64_t v25 = *(void *)(v13 - 8) + 64;
                  uint64_t v26 = (char *)&value witness table for Builtin.Int64 + 64;
                  uint64_t v27 = (char *)&value witness table for Builtin.BridgeObject + 64;
                  uint64_t v15 = type metadata accessor for ChartViewModelInterpolationMode();
                  if (v16 <= 0x3F)
                  {
                    uint64_t v28 = *(void *)(v15 - 8) + 64;
                    uint64_t v17 = type metadata accessor for ChartPastDataTreatment();
                    if (v18 <= 0x3F)
                    {
                      uint64_t v29 = *(void *)(v17 - 8) + 64;
                      uint64_t v30 = &unk_100C54CF8;
                      int v31 = &unk_100C54CF8;
                      int v32 = &unk_100C54CF8;
                      uint64_t v33 = &unk_100C54CF8;
                      uint64_t v34 = &unk_100C54D70;
                      uint64_t v35 = (char *)&value witness table for () + 64;
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *sub_100718E08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10017DF08(&qword_100E6BF10);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(v7 + 48);
      unint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Date();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100718F90(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6BF10);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    swift_release();
    uint64_t v4 = a1 + *(int *)(v2 + 48);
    uint64_t v5 = type metadata accessor for Date();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
    if (!result)
    {
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(v4, v5);
    }
  }
  return result;
}

void *sub_10071904C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100719198(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(v6 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Date();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v21 = (uint64_t)a1;
      uint64_t v22 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_100178110((uint64_t)a1, &qword_100E6BF10);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
    uint64_t v15 = a1;
    goto LABEL_8;
  }
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v16 = *(int *)(v6 + 48);
  uint64_t v17 = (uint64_t)a1 + v16;
  a2 = (void *)((char *)a2 + v16);
  uint64_t v18 = type metadata accessor for Date();
  int v19 = _s7Weather24LocationCompositionStateOwet_0(v17, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a2, v18);
      uint64_t v21 = v17;
      uint64_t v22 = v18;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v21, 0, 1, v22);
      return a1;
    }
  }
  else
  {
    uint64_t v24 = *(void *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(uint64_t, void *, uint64_t))(v24 + 24))(v17, a2, v18);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v17, v18);
  }
  size_t v14 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v15 = (void *)v17;
LABEL_8:
  memcpy(v15, a2, v14);
  return a1;
}

void *sub_100719444(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(v6 + 48);
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100719588(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(v6 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v21 = (uint64_t)a1;
      uint64_t v22 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_100178110((uint64_t)a1, &qword_100E6BF10);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
    uint64_t v15 = a1;
    goto LABEL_8;
  }
  *a1 = *a2;
  swift_release();
  uint64_t v16 = *(int *)(v6 + 48);
  uint64_t v17 = (uint64_t)a1 + v16;
  a2 = (void *)((char *)a2 + v16);
  uint64_t v18 = type metadata accessor for Date();
  int v19 = _s7Weather24LocationCompositionStateOwet_0(v17, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v18);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a2, v18);
      uint64_t v21 = v17;
      uint64_t v22 = v18;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v21, 0, 1, v22);
      return a1;
    }
  }
  else
  {
    uint64_t v24 = *(void *)(v18 - 8);
    if (!v20)
    {
      (*(void (**)(uint64_t, void *, uint64_t))(v24 + 40))(v17, a2, v18);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v17, v18);
  }
  size_t v14 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v15 = (void *)v17;
LABEL_8:
  memcpy(v15, a2, v14);
  return a1;
}

uint64_t sub_100719824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100719838);
}

uint64_t sub_100719838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6BF10);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100719884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100719898);
}

uint64_t sub_100719898(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1007198F8(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6BF10);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100719940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6BF10);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

void sub_100719990()
{
  sub_10002B394(319, (unint64_t *)&qword_100E638F0, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
  }
}

void sub_100719A48(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = type metadata accessor for DetailChartDataElement();
  uint64_t v38 = *(void *)(v34 - 8);
  uint64_t v8 = __chkstk_darwin(v34);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v31[0] = (char *)v31 - v11;
  int64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v12 = sub_100315378(a1, a2, a3);
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_1007F3414();
  if ((v12 & 0x8000000000000000) == 0)
  {
    uint64_t v13 = v39;
    uint64_t v35 = a4;
    if (v12)
    {
      unint64_t v33 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      uint64_t v32 = a4 + v33;
      v31[2] = v38 + 16;
      size_t v14 = (void (**)(unint64_t, char *, uint64_t))(v38 + 32);
      uint64_t v15 = v37;
      uint64_t v16 = v34;
      while (1)
      {
        BOOL v17 = a1 <= v36;
        if (v15 > 0) {
          BOOL v17 = a1 >= v36;
        }
        if (v17) {
          break;
        }
        if (__OFADD__(a1, v15)) {
          int64_t v18 = ((a1 + v15) >> 63) ^ 0x8000000000000000;
        }
        else {
          int64_t v18 = a1 + v15;
        }
        if (a1 < 0) {
          goto LABEL_34;
        }
        if ((unint64_t)a1 >= *(void *)(a4 + 16)) {
          goto LABEL_35;
        }
        uint64_t v19 = *(void *)(v38 + 72);
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v10, v32 + v19 * a1, v16);
        uint64_t v39 = v13;
        unint64_t v20 = v13[2];
        if (v20 >= v13[3] >> 1)
        {
          sub_1007F3414();
          uint64_t v13 = v39;
        }
        _OWORD v13[2] = v20 + 1;
        (*v14)((unint64_t)v13 + v33 + v20 * v19, v10, v16);
        a1 = v18;
        --v12;
        a4 = v35;
        uint64_t v15 = v37;
        if (!v12) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    else
    {
      int64_t v18 = a1;
      uint64_t v15 = v37;
LABEL_17:
      BOOL v21 = v18 <= v36;
      if (v15 > 0) {
        BOOL v21 = v18 >= v36;
      }
      if (v21)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        return;
      }
      unint64_t v33 = v38 + 16;
      uint64_t v22 = (void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32);
      uint64_t v23 = v31[0];
      uint64_t v24 = v34;
      while (1)
      {
        int64_t v25 = __OFADD__(v18, v15) ? ((v18 + v15) >> 63) ^ 0x8000000000000000 : v18 + v15;
        if (v18 < 0) {
          break;
        }
        if ((unint64_t)v18 >= *(void *)(a4 + 16)) {
          goto LABEL_37;
        }
        unint64_t v26 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        uint64_t v27 = a4 + v26;
        uint64_t v28 = *(void *)(v38 + 72);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v23, v27 + v28 * v18, v24);
        uint64_t v39 = v13;
        unint64_t v29 = v13[2];
        if (v29 >= v13[3] >> 1)
        {
          sub_1007F3414();
          uint64_t v13 = v39;
        }
        _OWORD v13[2] = v29 + 1;
        (*v22)((unint64_t)v13 + v26 + v29 * v28, v23, v24);
        uint64_t v15 = v37;
        BOOL v30 = v25 <= v36;
        if (v37 > 0) {
          BOOL v30 = v25 >= v36;
        }
        int64_t v18 = v25;
        a4 = v35;
        if (v30) {
          goto LABEL_20;
        }
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100719DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,long long a22,uint64_t a23,unsigned __int8 a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char *a38)
{
  uint64_t v205 = a8;
  uint64_t v192 = a7;
  uint64_t v206 = a6;
  uint64_t v207 = a4;
  uint64_t v208 = a3;
  uint64_t v209 = a5;
  uint64_t v190 = a2;
  uint64_t v188 = a1;
  v187 = a9;
  uint64_t v189 = a26;
  uint64_t v191 = a25;
  uint64_t v201 = a19;
  uint64_t v202 = a17;
  uint64_t v203 = a16;
  uint64_t v204 = a15;
  uint64_t v186 = type metadata accessor for ChartPastDataTreatment();
  sub_100179C0C();
  uint64_t v185 = v43;
  __chkstk_darwin(v44);
  sub_100109314();
  uint64_t v182 = v45;
  uint64_t v184 = type metadata accessor for ChartViewModelInterpolationMode();
  sub_100179C0C();
  uint64_t v183 = v46;
  __chkstk_darwin(v47);
  sub_10019D7B8(v48, v150);
  uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v50 = sub_100109308(v49);
  __chkstk_darwin(v50);
  sub_100162EF8();
  uint64_t v180 = v51;
  sub_1001626D4();
  __chkstk_darwin(v52);
  v167 = (char *)&v150 - v53;
  type metadata accessor for ChartPeakMarkStyle();
  sub_100179C0C();
  uint64_t v199 = v55;
  uint64_t v200 = v54;
  __chkstk_darwin(v54);
  sub_100109314();
  uint64_t v196 = v56;
  uint64_t v57 = sub_10017DF08(&qword_100E6B640);
  uint64_t v58 = sub_100109308(v57);
  __chkstk_darwin(v58);
  sub_100162EF8();
  uint64_t v171 = v59;
  sub_1001626D4();
  __chkstk_darwin(v60);
  sub_100166C94();
  __chkstk_darwin(v61);
  uint64_t v195 = (uint64_t)&v150 - v62;
  type metadata accessor for ChartDarkeningScrim();
  sub_100179C0C();
  uint64_t v197 = v64;
  uint64_t v198 = v63;
  __chkstk_darwin(v63);
  sub_1001626E0();
  uint64_t v67 = v66 - v65;
  uint64_t v68 = type metadata accessor for ChartViewModel.Background(0);
  uint64_t v69 = sub_100109308(v68);
  __chkstk_darwin(v69);
  sub_1001626E0();
  uint64_t v72 = v71 - v70;
  uint64_t v73 = type metadata accessor for ChartDateStep();
  uint64_t v74 = sub_100109308(v73);
  __chkstk_darwin(v74);
  sub_10017C704();
  uint64_t v75 = type metadata accessor for DetailChartExtrema();
  sub_100179C0C();
  uint64_t v77 = v76;
  __chkstk_darwin(v78);
  sub_1001626E0();
  uint64_t v81 = v80 - v79;
  uint64_t v82 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v84 = v83;
  __chkstk_darwin(v85);
  sub_100162EF8();
  uint64_t v169 = v86;
  sub_1001626D4();
  __chkstk_darwin(v87);
  v194 = (char *)&v150 - v88;
  sub_1001626D4();
  __chkstk_darwin(v89);
  uint64_t v91 = (char *)&v150 - v90;
  type metadata accessor for ChartKind();
  sub_100179C0C();
  __chkstk_darwin(v92);
  sub_1001626E0();
  uint64_t v173 = v93;
  uint64_t v168 = v95 - v94;
  uint64_t v174 = v96;
  sub_100162808();
  v97();
  uint64_t v193 = v84;
  uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v170 = v91;
  v98(v91, v207, v82);
  uint64_t v178 = v77;
  uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16);
  uint64_t v172 = v81;
  uint64_t v179 = v75;
  v99(v81, v206, v75);
  uint64_t v176 = v39;
  sub_10071D6CC(v205, v39, (void (*)(void))type metadata accessor for ChartDateStep);
  uint64_t v175 = v72;
  sub_10071D6CC(v204, v72, (void (*)(void))type metadata accessor for ChartViewModel.Background);
  uint64_t v177 = v67;
  sub_100162808();
  v100();
  sub_10006DF38(v202, v195, &qword_100E6B640);
  sub_100162808();
  v101();
  sub_10043F6C8(v209, v38);
  uint64_t v102 = type metadata accessor for DetailChartDataElement();
  sub_10012B520(v38, 1, v102);
  if (v105)
  {
    sub_100178110(v38, &qword_100E6B640);
    uint64_t v103 = (uint64_t)v167;
    sub_10018255C();
  }
  else
  {
    uint64_t v103 = (uint64_t)v167;
    DetailChartDataElement.date.getter();
    sub_100162F0C();
    v104();
    _s7Weather24LocationCompositionStateOwst_0(v103, 0, 1, v82);
    sub_10012B520(v103, 1, v82);
    if (!v105)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v193 + 32))(v194, v103, v82);
      goto LABEL_7;
    }
  }
  Date.init()();
  sub_100178110(v103, (uint64_t *)&unk_100E73CA0);
LABEL_7:
  uint64_t v106 = v180;
  uint64_t v107 = v171;
  uint64_t v108 = v169;
  v167 = a38;
  uint64_t v165 = a37;
  uint64_t v164 = a36;
  uint64_t v163 = a35;
  uint64_t v162 = a34;
  uint64_t v161 = a33;
  uint64_t v160 = a32;
  uint64_t v159 = a31;
  uint64_t v158 = a30;
  uint64_t v157 = a29;
  uint64_t v156 = a28;
  uint64_t v155 = a27;
  int v154 = a24;
  uint64_t v153 = a23;
  long long v152 = a22;
  uint64_t v151 = a21;
  uint64_t v180 = a20;
  uint64_t v171 = a18;
  uint64_t v169 = a13;
  sub_100304160(v209, v107);
  sub_10012B520(v107, 1, v102);
  uint64_t v166 = v82;
  if (v105)
  {
    sub_100178110(v107, &qword_100E6B640);
    sub_10018255C();
LABEL_12:
    Date.init()();
    sub_100178110(v106, (uint64_t *)&unk_100E73CA0);
    goto LABEL_13;
  }
  DetailChartDataElement.date.getter();
  sub_100162F0C();
  v109();
  _s7Weather24LocationCompositionStateOwst_0(v106, 0, 1, v82);
  sub_10012B520(v106, 1, v82);
  if (v110) {
    goto LABEL_12;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v193 + 32))(v108, v106, v82);
LABEL_13:
  uint64_t v111 = v183;
  uint64_t v112 = v181;
  uint64_t v113 = v191;
  uint64_t v114 = v184;
  sub_100162808();
  v115();
  uint64_t v116 = v185;
  uint64_t v117 = v182;
  uint64_t v118 = v189;
  uint64_t v119 = v186;
  sub_100162808();
  v120();
  uint64_t v149 = (uint64_t)v167;
  uint64_t v148 = v165;
  uint64_t v147 = v164;
  uint64_t v146 = v163;
  uint64_t v145 = v162;
  uint64_t v144 = v161;
  uint64_t v143 = v160;
  uint64_t v142 = v159;
  uint64_t v141 = v158;
  uint64_t v140 = v157;
  uint64_t v139 = v156;
  uint64_t v138 = v155;
  char v137 = v154;
  uint64_t v136 = v153;
  long long v135 = v152;
  uint64_t v134 = v151;
  uint64_t v133 = (uint64_t)v194;
  uint64_t v132 = v180;
  uint64_t v131 = v196;
  uint64_t v130 = v171;
  uint64_t v129 = v195;
  uint64_t v128 = v177;
  sub_1001816E4();
  sub_10071A8F8(v188, v190, v168, (uint64_t)v170, v209, v192, v176, v187, a10, a11, a12, v169, a14 & 1, v121, v128, v129, v130, v131, v132,
    v133,
    v108,
    v134,
    v135,
    v136,
    v137,
    v112,
    v117,
    v138,
    v139,
    v140,
    v141,
    v142,
    v143,
    v144,
    v145,
    v146,
    v147,
    v148,
    v149);
  (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v118, v119);
  (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v113, v114);
  sub_100162F0C();
  v122();
  sub_100178110(v202, &qword_100E6B640);
  sub_100162F0C();
  v123();
  sub_10071D720(v204, (void (*)(void))type metadata accessor for ChartViewModel.Background);
  sub_10071D720(v205, (void (*)(void))type metadata accessor for ChartDateStep);
  sub_100162F0C();
  v124();
  sub_100162F0C();
  v125();
  sub_100162F0C();
  return v126();
}

uint64_t sub_10071A8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,long long a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  ChartKind.showSecondLine.getter();
  *a8 = a1;
  a8[1] = a2;
  uint64_t v48 = (int *)type metadata accessor for ChartViewModel(0);
  sub_10016502C();
  type metadata accessor for ChartKind();
  sub_10017C808();
  sub_1001831E8();
  sub_100162808();
  v49();
  sub_10016502C();
  uint64_t v50 = type metadata accessor for Date();
  sub_10017C808();
  uint64_t v79 = v51;
  uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
  v76(a3, a4, v50);
  *(void *)((char *)a8 + v48[6]) = a5;
  sub_10016502C();
  type metadata accessor for DetailChartExtrema();
  sub_10017C808();
  sub_1001831E8();
  sub_100162808();
  v52();
  *(void *)((char *)a8 + v48[8]) = a6;
  uint64_t v53 = (double *)((char *)a8 + v48[10]);
  *uint64_t v53 = a9;
  v53[1] = a10;
  sub_10071D6CC(a7, (uint64_t)a8 + v48[12], (void (*)(void))type metadata accessor for ChartDateStep);
  uint64_t v54 = (char *)a8 + v48[13];
  *(void *)uint64_t v54 = a12;
  v54[8] = a13 & 1;
  sub_10071D6CC(a14, (uint64_t)a8 + v48[14], (void (*)(void))type metadata accessor for ChartViewModel.Background);
  *(double *)((char *)a8 + v48[15]) = a11;
  sub_10016502C();
  type metadata accessor for ChartDarkeningScrim();
  sub_10017C808();
  sub_1001831E8();
  sub_100162808();
  v55();
  sub_10006DF38(a16, (uint64_t)a8 + v48[21], &qword_100E6B640);
  *(void *)((char *)a8 + v48[22]) = a17;
  sub_10016502C();
  uint64_t v56 = type metadata accessor for ChartPeakMarkStyle();
  sub_10017C808();
  uint64_t v58 = v57;
  sub_1001831E8();
  sub_100162808();
  v59();
  *(void *)((char *)a8 + v48[24]) = a19;
  v76((uint64_t)a8 + v48[19], a20, v50);
  v76((uint64_t)a8 + v48[20], a21, v50);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E65240);
  swift_bridgeObjectRetain();
  *(void *)((char *)a8 + v48[17]) = static NSDateFormatter.prevailingPeriodSymbols.getter();
  sub_100719A48(0, *(void *)(a5 + 16) - 1, 2, a5);
  uint64_t v61 = v60;
  uint64_t v62 = *(void (**)(void))(v79 + 8);
  sub_100186B50();
  v62();
  sub_100186B50();
  v62();
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(a18, v56);
  sub_100178110(a16, &qword_100E6B640);
  sub_100162F0C();
  v63();
  sub_10071D720(a14, (void (*)(void))type metadata accessor for ChartViewModel.Background);
  sub_10071D720(a7, (void (*)(void))type metadata accessor for ChartDateStep);
  sub_100162F0C();
  v64();
  sub_100186B50();
  v62();
  sub_100162F0C();
  v65();
  *(void *)((char *)a8 + v48[25]) = v61;
  sub_10016502C();
  type metadata accessor for ChartPastDataTreatment();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v66 + 32))(v61, a27);
  *(void *)((char *)a8 + v48[9]) = a22;
  uint64_t v67 = (char *)a8 + v48[11];
  *(_OWORD *)uint64_t v67 = a23;
  *((void *)v67 + 2) = a24;
  v67[24] = a25;
  sub_10016502C();
  type metadata accessor for ChartViewModelInterpolationMode();
  sub_100162E4C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 32))(v61, a26);
  uint64_t v70 = (void *)((char *)a8 + v48[28]);
  *uint64_t v70 = a28;
  v70[1] = a29;
  uint64_t v71 = (void *)((char *)a8 + v48[29]);
  *uint64_t v71 = a30;
  v71[1] = a31;
  uint64_t v72 = (void *)((char *)a8 + v48[30]);
  *uint64_t v72 = a32;
  v72[1] = a33;
  uint64_t v73 = (void *)((char *)a8 + v48[31]);
  *uint64_t v73 = a34;
  v73[1] = a35;
  uint64_t v74 = (void *)((char *)a8 + v48[32]);
  *uint64_t v74 = a36;
  v74[1] = a37;
  uint64_t v75 = (void *)((char *)a8 + v48[33]);
  *uint64_t v75 = a38;
  v75[1] = a39;
  return result;
}

uint64_t sub_10071AEB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = variable initialization expression of SessionEventsAndDataCoordinator.lastPushedTemperatureUnit();
  *a1 = result;
  return result;
}

BOOL sub_10071AEE0(uint64_t *a1)
{
  return sub_100B77324(*a1, *v1);
}

uint64_t sub_10071AEEC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100A60A48(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_10071AF1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10071AF50(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10071AF50(uint64_t a1)
{
  uint64_t result = *v1 & a1;
  if (result) {
    *v1 &= ~a1;
  }
  return result;
}

uint64_t sub_10071AF74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1006BF0D0(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

BOOL sub_10071AFA8(uint64_t *a1)
{
  return sub_10071AFB4(*a1, *v1);
}

BOOL sub_10071AFB4(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_10071AFC0()
{
  return sub_10071AFC8(*v0);
}

BOOL sub_10071AFC8(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_10071AFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = (char *)a2;
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v59 = v4;
  uint64_t v60 = v3;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v58 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  size_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  BOOL v17 = (char *)&v56 - v16;
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = type metadata accessor for ChartViewModel.Background(0);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = sub_10017DF08(&qword_100E90998);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_1001626E0();
  uint64_t v30 = v29 - v28;
  uint64_t v32 = v29 - v28 + *(int *)(v31 + 56);
  sub_10071D6CC(a1, v29 - v28, (void (*)(void))type metadata accessor for ChartViewModel.Background);
  sub_10071D6CC((uint64_t)v61, v32, (void (*)(void))type metadata accessor for ChartViewModel.Background);
  uint64_t v33 = sub_10017DF08(&qword_100E6BF10);
  sub_10012B520(v30, 1, v33);
  if (v38)
  {
    sub_10012B520(v32, 1, v33);
    if (v38) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v57 = v17;
    uint64_t v61 = v20;
    uint64_t v35 = v60;
    sub_10071D6CC(v30, v25, (void (*)(void))type metadata accessor for ChartViewModel.Background);
    uint64_t v36 = *(int *)(v33 + 48);
    uint64_t v37 = v25 + v36;
    sub_10012B520(v32, 1, v33);
    if (!v38)
    {
      uint64_t v39 = v32 + v36;
      uint64_t v40 = (uint64_t)v61;
      sub_100246A0C(v37, (uint64_t)v61);
      uint64_t v41 = v39;
      uint64_t v42 = (uint64_t)v57;
      sub_100246A0C(v41, (uint64_t)v57);
      char v43 = static Color.== infix(_:_:)();
      if (v43)
      {
        uint64_t v44 = *(int *)(v6 + 48);
        uint64_t v45 = v10;
        uint64_t v46 = v10 + v44;
        sub_10006DF38(v40, v45, (uint64_t *)&unk_100E73CA0);
        sub_10006DF38(v42, v46, (uint64_t *)&unk_100E73CA0);
        sub_10012B520(v45, 1, v35);
        if (v38)
        {
          swift_release();
          swift_release();
          sub_100178110(v42, (uint64_t *)&unk_100E73CA0);
          sub_100178110(v40, (uint64_t *)&unk_100E73CA0);
          sub_10012B520(v46, 1, v35);
          if (v38)
          {
            sub_100178110(v45, (uint64_t *)&unk_100E73CA0);
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v49 = v14;
          sub_10006DF38(v45, (uint64_t)v14, (uint64_t *)&unk_100E73CA0);
          sub_10012B520(v46, 1, v35);
          uint64_t v51 = v59;
          if (!v50)
          {
            uint64_t v52 = v45;
            uint64_t v53 = v58;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v58, v46, v35);
            sub_10071D898((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
            char v54 = dispatch thunk of static Equatable.== infix(_:_:)();
            swift_release();
            swift_release();
            uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
            v55(v53, v35);
            sub_100178110((uint64_t)v57, (uint64_t *)&unk_100E73CA0);
            sub_100178110((uint64_t)v61, (uint64_t *)&unk_100E73CA0);
            v55((uint64_t)v49, v35);
            sub_100178110(v52, (uint64_t *)&unk_100E73CA0);
            if ((v54 & 1) == 0) {
              goto LABEL_22;
            }
LABEL_5:
            sub_10071D720(v30, (void (*)(void))type metadata accessor for ChartViewModel.Background);
            return 1;
          }
          swift_release();
          swift_release();
          sub_100178110((uint64_t)v57, (uint64_t *)&unk_100E73CA0);
          sub_100178110((uint64_t)v61, (uint64_t *)&unk_100E73CA0);
          (*(void (**)(char *, uint64_t))(v51 + 8))(v49, v35);
        }
        uint64_t v48 = &qword_100E64D60;
        uint64_t v47 = v45;
      }
      else
      {
        swift_release();
        swift_release();
        sub_100178110(v42, (uint64_t *)&unk_100E73CA0);
        uint64_t v47 = v40;
        uint64_t v48 = (uint64_t *)&unk_100E73CA0;
      }
      sub_100178110(v47, v48);
LABEL_22:
      sub_10071D720(v30, (void (*)(void))type metadata accessor for ChartViewModel.Background);
      return 0;
    }
    sub_100178110(v37, (uint64_t *)&unk_100E73CA0);
    swift_release();
  }
  sub_100178110(v30, &qword_100E90998);
  return 0;
}

uint64_t sub_10071B540(uint64_t a1, uint64_t a2)
{
  uint64_t v195 = type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  uint64_t v192 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v191 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E6B640);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v193 = v10;
  uint64_t v194 = sub_10017DF08(&qword_100E90970);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10019D7B8(v12, v190);
  type metadata accessor for ChartViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v214 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  sub_100109770();
  uint64_t v215 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  sub_100109770();
  uint64_t v220 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  sub_100109770();
  uint64_t v219 = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100109770();
  uint64_t v216 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100109770();
  uint64_t v218 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100109770();
  uint64_t v217 = v26;
  sub_1001626D4();
  __chkstk_darwin(v27);
  sub_100109770();
  v224 = (uint64_t (*)(uint64_t))v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  sub_100109770();
  uint64_t v226 = v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  sub_100109770();
  uint64_t v221 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100109770();
  uint64_t v206 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100109770();
  uint64_t v213 = v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  sub_100109770();
  uint64_t v205 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100109770();
  uint64_t v212 = v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  sub_100109770();
  uint64_t v204 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100109770();
  uint64_t v203 = v44;
  sub_1001626D4();
  __chkstk_darwin(v45);
  sub_100109770();
  uint64_t v201 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  sub_100109770();
  uint64_t v202 = v48;
  sub_1001626D4();
  __chkstk_darwin(v49);
  sub_100109770();
  uint64_t v211 = v50;
  sub_1001626D4();
  __chkstk_darwin(v51);
  sub_100109770();
  uint64_t v198 = v52;
  sub_1001626D4();
  __chkstk_darwin(v53);
  sub_100109770();
  uint64_t v197 = v54;
  sub_1001626D4();
  __chkstk_darwin(v55);
  sub_100109770();
  uint64_t v199 = v56;
  sub_1001626D4();
  __chkstk_darwin(v57);
  sub_100109770();
  uint64_t v223 = v58;
  sub_1001626D4();
  __chkstk_darwin(v59);
  sub_100109770();
  uint64_t v225 = v60;
  sub_1001626D4();
  __chkstk_darwin(v61);
  uint64_t v209 = (uint64_t)&v190 - v62;
  sub_1001626D4();
  __chkstk_darwin(v63);
  sub_100109770();
  uint64_t v210 = v64;
  sub_1001626D4();
  __chkstk_darwin(v65);
  sub_100109770();
  uint64_t v207 = v66;
  sub_1001626D4();
  __chkstk_darwin(v67);
  sub_100109770();
  uint64_t v208 = v68;
  sub_1001626D4();
  uint64_t v70 = __chkstk_darwin(v69);
  uint64_t v72 = (char *)&v190 - v71;
  __chkstk_darwin(v70);
  sub_100109770();
  uint64_t v200 = v73;
  sub_1001626D4();
  uint64_t v75 = __chkstk_darwin(v74);
  uint64_t v77 = (char *)&v190 - v76;
  uint64_t v78 = __chkstk_darwin(v75);
  uint64_t v80 = (char *)&v190 - v79;
  __chkstk_darwin(v78);
  sub_100166C94();
  uint64_t v82 = __chkstk_darwin(v81);
  uint64_t v84 = (char *)&v190 - v83;
  uint64_t v85 = v82;
  char v86 = static ChartKind.== infix(_:_:)();
  sub_10071D6CC(a1, (uint64_t)v84, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D6CC(a2, v2, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v222 = a1;
  if ((v86 & 1) == 0)
  {
    sub_10071D720((uint64_t)v84, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v2, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(a1, (uint64_t)v80, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(a2, (uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v89 = a2;
    goto LABEL_8;
  }
  sub_100BD8D14();
  char v88 = v87;
  sub_10071D720((uint64_t)v84, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v2, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D6CC(a1, (uint64_t)v80, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D6CC(a2, (uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v89 = a2;
  if ((v88 & 1) == 0)
  {
LABEL_8:
    sub_10071D720((uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_100184AEC();
    uint64_t v96 = v222;
    uint64_t v94 = v202;
    sub_10017F544();
    uint64_t v95 = v200;
LABEL_9:
    sub_10071D6CC(v96, v95, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_100182B34();
    uint64_t v99 = v205;
    goto LABEL_10;
  }
  uint64_t v90 = *(int *)(v85 + 32);
  uint64_t v91 = *(void *)&v80[v90];
  uint64_t v92 = *(void *)&v77[v90];
  uint64_t v93 = v85;
  uint64_t v94 = v202;
  uint64_t v95 = v200;
  if (!v91)
  {
    uint64_t v190 = v85;
    swift_bridgeObjectRetain();
    sub_10071D720((uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_100184AEC();
    uint64_t v96 = v222;
    if (!v92)
    {
      sub_10071D6CC(v222, v95, (void (*)(void))type metadata accessor for ChartViewModel);
      sub_100182B34();
      uint64_t v99 = v205;
      sub_10017F544();
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  uint64_t v96 = v222;
  if (!v92)
  {
    swift_bridgeObjectRetain();
    sub_10071D720((uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720((uint64_t)v80, (void (*)(void))type metadata accessor for ChartViewModel);
LABEL_31:
    swift_bridgeObjectRelease();
    sub_10017F544();
    goto LABEL_9;
  }
  uint64_t v190 = v93;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100BD8D14();
  char v98 = v97;
  swift_bridgeObjectRelease();
  sub_10071D720((uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720((uint64_t)v80, (void (*)(void))type metadata accessor for ChartViewModel);
  swift_bridgeObjectRelease();
  sub_10071D6CC(v96, v95, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_100182B34();
  uint64_t v99 = v205;
  sub_10017F544();
  if ((v98 & 1) == 0)
  {
LABEL_10:
    uint64_t v100 = v94;
    sub_10071D720((uint64_t)v72, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v95, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v101 = v208;
    sub_10071D6CC(v96, v208, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_100185538();
LABEL_11:
    sub_10071D720(v94, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v101, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v102 = v210;
    sub_10071D6CC(v96, v210, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v103 = v209;
    sub_10071D6CC(v89, v209, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v105 = v225;
    uint64_t v104 = v226;
LABEL_12:
    sub_10071D720(v103, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v102, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v96, v105, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v106 = v223;
    sub_10071D6CC(v89, v223, (void (*)(void))type metadata accessor for ChartViewModel);
LABEL_13:
    sub_10071D720(v106, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v105, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v107 = v224;
    uint64_t v108 = v100;
    uint64_t v109 = v99;
    uint64_t v99 = v198;
LABEL_14:
    uint64_t v110 = v199;
    sub_10071D6CC(v96, v199, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_100185BEC();
LABEL_15:
    sub_10071D720(v110, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720((uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v96, v99, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v111 = v211;
    sub_10071D6CC(v89, v211, (void (*)(void))type metadata accessor for ChartViewModel);
LABEL_16:
    sub_10071D720(v111, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v99, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v96, v108, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v112 = sub_10018AA18();
    sub_10071D6CC(v112, v113, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_100182068();
LABEL_17:
    sub_10071D720(v99, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v108, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v114 = v203;
    sub_10071D6CC(v96, v203, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_100185BEC();
LABEL_18:
    sub_10071D720(v114, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v111, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v115 = v212;
    sub_10071D6CC(v96, v212, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v89, v109, (void (*)(void))type metadata accessor for ChartViewModel);
LABEL_19:
    sub_10071D720(v115, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v109, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v116 = v213;
    sub_10071D6CC(v96, v213, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_1001A2DD0(v89);
    uint64_t v117 = v96;
    uint64_t v118 = v89;
LABEL_20:
    sub_10071D720(v110, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v116, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v119 = v221;
    sub_10071D6CC(v117, v221, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v118, v104, (void (*)(void))type metadata accessor for ChartViewModel);
LABEL_21:
    sub_10071D720(v119, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v104, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v117, (uint64_t)v107, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v120 = v217;
    sub_1001A2DD0(v118);
    uint64_t v121 = v118;
    uint64_t v122 = v218;
    uint64_t v123 = v219;
    uint64_t v124 = v220;
    goto LABEL_22;
  }
LABEL_33:
  sub_1001816E4();
  uint64_t v132 = *(int *)(v131 + 40);
  uint64_t v133 = v95 + v132;
  double v134 = *(double *)(v95 + v132);
  long long v135 = (double *)&v72[v132];
  if (v134 != *v135) {
    goto LABEL_10;
  }
  uint64_t v100 = v94;
  double v136 = v135[1];
  double v137 = *(double *)(v133 + 8);
  sub_10071D720((uint64_t)v72, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v95, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v101 = v208;
  sub_10071D6CC(v96, v208, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_100185538();
  if (v137 != v136) {
    goto LABEL_11;
  }
  BOOL v138 = sub_1006BA108(v101 + *(int *)(v190 + 48), v94 + *(int *)(v190 + 48));
  sub_10071D720(v94, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v101, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v139 = v210;
  sub_10071D6CC(v96, v210, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v103 = v209;
  uint64_t v102 = v139;
  sub_10071D6CC(v89, v209, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v105 = v225;
  uint64_t v104 = v226;
  if (!v138) {
    goto LABEL_12;
  }
  LODWORD(v208) = sub_1006BA108(v102 + *(int *)(v190 + 48), v103 + *(int *)(v190 + 48));
  sub_10071D720(v103, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v102, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D6CC(v96, v105, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v106 = v223;
  sub_10071D6CC(v89, v223, (void (*)(void))type metadata accessor for ChartViewModel);
  if ((v208 & 1) == 0) {
    goto LABEL_13;
  }
  sub_1001816E4();
  uint64_t v141 = *(int *)(v140 + 84);
  uint64_t v142 = v105 + v141;
  uint64_t v143 = v106;
  uint64_t v144 = v106 + v141;
  uint64_t v145 = v196;
  uint64_t v146 = v196 + *(int *)(v194 + 48);
  sub_10006DF38(v142, v196, &qword_100E6B640);
  uint64_t v147 = v144;
  uint64_t v107 = (uint64_t (*)(uint64_t))v145;
  uint64_t v210 = v146;
  sub_10006DF38(v147, v146, &qword_100E6B640);
  uint64_t v148 = v145;
  uint64_t v149 = v195;
  sub_10012B520(v148, 1, v195);
  uint64_t v108 = v100;
  if (v150)
  {
    sub_10071D720(v143, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v225, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10012B520(v210, 1, v149);
    uint64_t v107 = v224;
    uint64_t v104 = v226;
    uint64_t v109 = v99;
    uint64_t v99 = v198;
    if (v150)
    {
      sub_100178110(v196, &qword_100E6B640);
      uint64_t v110 = v199;
      sub_10071D6CC(v96, v199, (void (*)(void))type metadata accessor for ChartViewModel);
      sub_100185BEC();
      goto LABEL_47;
    }
    goto LABEL_45;
  }
  uint64_t v104 = v193;
  sub_10006DF38((uint64_t)v107, v193, &qword_100E6B640);
  sub_10012B520(v210, 1, v149);
  uint64_t v109 = v99;
  if (v150)
  {
    sub_10071D720(v223, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v225, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_100162F0C();
    v151();
    sub_100162B58();
LABEL_45:
    sub_100178110(v196, &qword_100E90970);
    goto LABEL_14;
  }
  uint64_t v152 = v192;
  uint64_t v153 = v191;
  (*(void (**)(void))(v192 + 32))();
  sub_10071D898(&qword_100E90978, (void (*)(uint64_t))&type metadata accessor for DetailChartDataElement);
  uint64_t v99 = v153;
  LODWORD(v210) = dispatch thunk of static Equatable.== infix(_:_:)();
  int v154 = *(void (**)(uint64_t, uint64_t))(v152 + 8);
  uint64_t v104 = v152 + 8;
  v154(v153, v149);
  sub_10071D720(v223, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v225, (void (*)(void))type metadata accessor for ChartViewModel);
  v154(v193, v149);
  sub_100178110(v196, &qword_100E6B640);
  uint64_t v107 = type metadata accessor for ChartViewModel;
  uint64_t v110 = v199;
  sub_10071D6CC(v96, v199, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D6CC(v89, (uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_100162B58();
  if ((v210 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_47:
  sub_1001816E4();
  sub_100BD8D14();
  char v156 = v155;
  sub_10071D720(v110, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720((uint64_t)v77, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v107 = type metadata accessor for ChartViewModel;
  sub_10071D6CC(v96, v99, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v111 = v211;
  sub_1001A1800(v89, v211);
  if ((v156 & 1) == 0) {
    goto LABEL_16;
  }
  sub_1001816E4();
  char v157 = static Date.== infix(_:_:)();
  sub_10071D720(v111, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_100184AEC();
  uint64_t v107 = type metadata accessor for ChartViewModel;
  sub_10071D6CC(v96, v108, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v158 = sub_10018AA18();
  sub_1001A1800(v158, v159);
  sub_100182068();
  if ((v157 & 1) == 0) {
    goto LABEL_17;
  }
  sub_1001816E4();
  char v160 = static Date.== infix(_:_:)();
  sub_10071D720(v99, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v108, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v107 = type metadata accessor for ChartViewModel;
  uint64_t v114 = v203;
  sub_10071D6CC(v96, v203, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_1001A1800(v89, v111);
  if ((v160 & 1) == 0) {
    goto LABEL_18;
  }
  sub_1001816E4();
  char v162 = sub_1001508B0(*(void **)(v114 + *(int *)(v161 + 68)), *(void **)(v111 + *(int *)(v161 + 68)));
  sub_10071D720(v114, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v111, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v107 = type metadata accessor for ChartViewModel;
  uint64_t v115 = v212;
  sub_10071D6CC(v96, v212, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_1001A1800(v89, v109);
  if ((v162 & 1) == 0) {
    goto LABEL_19;
  }
  sub_1001816E4();
  sub_100BD8D14();
  char v164 = v163;
  sub_10071D720(v115, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v109, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v107 = type metadata accessor for ChartViewModel;
  uint64_t v116 = v213;
  sub_10071D6CC(v96, v213, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_1001A1800(v89, v110);
  uint64_t v117 = v96;
  uint64_t v118 = v89;
  if ((v164 & 1) == 0) {
    goto LABEL_20;
  }
  char v165 = static ChartViewModelInterpolationMode.== infix(_:_:)();
  sub_10071D720(v110, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_100184AEC();
  uint64_t v107 = type metadata accessor for ChartViewModel;
  uint64_t v119 = v221;
  sub_10071D6CC(v117, v221, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_1001A1800(v118, v104);
  if ((v165 & 1) == 0) {
    goto LABEL_21;
  }
  sub_100189F64();
  if (v150) {
    BOOL v168 = v166 == v167;
  }
  else {
    BOOL v168 = 0;
  }
  if (v168)
  {
    sub_10071D720(v221, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v226, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v222, (uint64_t)v224, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_1001A2DD0(v118);
    goto LABEL_60;
  }
  char v169 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_10071D720(v221, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v226, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v117 = v222;
  uint64_t v170 = (uint64_t)v224;
  sub_10071D6CC(v222, (uint64_t)v224, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v121 = v118;
  uint64_t v120 = v217;
  uint64_t v107 = (uint64_t (*)(uint64_t))v170;
  sub_10071D6CC(v118, v217, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v123 = v219;
  uint64_t v124 = v220;
  uint64_t v122 = v218;
  if ((v169 & 1) == 0)
  {
LABEL_22:
    sub_10071D720((uint64_t)v107, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v120, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v117, v122, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v125 = v216;
    sub_1001A2DD0(v121);
    goto LABEL_23;
  }
LABEL_60:
  sub_1001816E4();
  sub_100189F64();
  if (v150) {
    BOOL v173 = v171 == v172;
  }
  else {
    BOOL v173 = 0;
  }
  if (v173)
  {
    sub_10071D720((uint64_t)v224, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v217, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v222, v218, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_1001A2DD0(v118);
    goto LABEL_67;
  }
  char v174 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_10071D720((uint64_t)v224, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v217, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v117 = v222;
  uint64_t v122 = v218;
  sub_10071D6CC(v222, v218, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v121 = v118;
  uint64_t v125 = v216;
  sub_10071D6CC(v118, v216, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v123 = v219;
  uint64_t v124 = v220;
  if ((v174 & 1) == 0)
  {
LABEL_23:
    sub_10071D720(v122, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v125, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v117, v123, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v121, v124, (void (*)(void))type metadata accessor for ChartViewModel);
    goto LABEL_24;
  }
LABEL_67:
  sub_1001816E4();
  sub_100189F64();
  if (v150) {
    BOOL v177 = v175 == v176;
  }
  else {
    BOOL v177 = 0;
  }
  if (v177)
  {
    sub_10071D720(v218, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v216, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v222, v219, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D6CC(v118, v220, (void (*)(void))type metadata accessor for ChartViewModel);
    goto LABEL_74;
  }
  char v178 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_10071D720(v218, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v216, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v117 = v222;
  uint64_t v123 = v219;
  sub_10071D6CC(v222, v219, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v121 = v118;
  uint64_t v124 = v220;
  sub_10071D6CC(v118, v220, (void (*)(void))type metadata accessor for ChartViewModel);
  if ((v178 & 1) == 0)
  {
LABEL_24:
    sub_10071D720(v123, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v124, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v126 = v215;
    sub_10071D6CC(v117, v215, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v127 = v121;
    uint64_t v128 = v214;
    sub_10071D6CC(v127, v214, (void (*)(void))type metadata accessor for ChartViewModel);
    goto LABEL_25;
  }
LABEL_74:
  sub_1001816E4();
  sub_100189F64();
  if (v150) {
    BOOL v181 = v179 == v180;
  }
  else {
    BOOL v181 = 0;
  }
  if (v181)
  {
    sub_10071D720(v219, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v220, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v126 = v215;
    sub_10071D6CC(v222, v215, (void (*)(void))type metadata accessor for ChartViewModel);
    uint64_t v128 = v214;
    sub_10071D6CC(v118, v214, (void (*)(void))type metadata accessor for ChartViewModel);
    goto LABEL_81;
  }
  char v182 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_10071D720(v219, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v220, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v126 = v215;
  sub_10071D6CC(v222, v215, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v128 = v214;
  sub_10071D6CC(v118, v214, (void (*)(void))type metadata accessor for ChartViewModel);
  if ((v182 & 1) == 0)
  {
LABEL_25:
    sub_10071D720(v128, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v126, (void (*)(void))type metadata accessor for ChartViewModel);
LABEL_26:
    char v129 = 0;
    return v129 & 1;
  }
LABEL_81:
  sub_1001816E4();
  uint64_t v184 = *(int *)(v183 + 128);
  uint64_t v185 = (void *)(v126 + v184);
  uint64_t v186 = *(void *)(v126 + v184 + 8);
  v187 = (void *)(v128 + v184);
  uint64_t v188 = v187[1];
  if (!v186)
  {
    swift_bridgeObjectRetain();
    sub_10071D720(v214, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v215, (void (*)(void))type metadata accessor for ChartViewModel);
    if (!v188)
    {
      char v129 = 1;
      return v129 & 1;
    }
    goto LABEL_91;
  }
  if (!v188)
  {
    swift_bridgeObjectRetain();
    sub_10071D720(v214, (void (*)(void))type metadata accessor for ChartViewModel);
    sub_10071D720(v215, (void (*)(void))type metadata accessor for ChartViewModel);
LABEL_91:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (*v185 == *v187 && v186 == v188) {
    char v129 = 1;
  }
  else {
    char v129 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRetain();
  sub_10071D720(v214, (void (*)(void))type metadata accessor for ChartViewModel);
  sub_10071D720(v215, (void (*)(void))type metadata accessor for ChartViewModel);
  swift_bridgeObjectRelease();
  return v129 & 1;
}

uint64_t sub_10071CFF4()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v7 = sub_10017C704();
  uint64_t v8 = type metadata accessor for ChartViewModel(v7);
  uint64_t v60 = v5;
  uint64_t v61 = *(int *)(v8 + 24);
  uint64_t v9 = *(void *)(v0 + v61);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v63 = v8;
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001EA6A0(0, v10, 0);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v9 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v64 = *(void *)(v11 + 56);
    uint64_t v67 = v3;
    do
    {
      sub_1001651CC();
      v13();
      uint64_t v14 = DetailChartDataElement.accessibilityDateString.getter();
      uint64_t v16 = v15;
      (*(void (**)(uint64_t, uint64_t))(v11 - 8))(v1, v3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1001EA6A0(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1) {
        sub_1001EA6A0(v17 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v19 = &_swiftEmptyArrayStorage[2 * v18];
      void v19[4] = v14;
      void v19[5] = v16;
      v12 += v64;
      --v10;
      uint64_t v3 = v67;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v20 = v63;
    uint64_t v2 = v0;
    uint64_t v5 = v60;
  }
  else
  {
    uint64_t v20 = v8;
    swift_bridgeObjectRetain();
  }
  id v21 = objc_allocWithZone((Class)AXCategoricalDataAxisDescriptor);
  id v65 = sub_10071D774();
  sub_1001ABC4C(0, &qword_100E90980);
  uint64_t v22 = (uint64_t *)(v2 + *(int *)(v20 + 124));
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v57 = v23;
  uint64_t v59 = (void *)AXNumericDataAxisDescriptor.init(title:range:gridlinePositions:valueDescriptionProvider:)();
  swift_bridgeObjectRetain();
  char v25 = ChartKind.isContinuous.getter();
  char v26 = v25;
  uint64_t v27 = *(void *)(v2 + v61);
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    char v55 = v25;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v29 = v5 + 16;
    sub_1001ABC4C(0, &qword_100E90988);
    uint64_t v30 = v27 + ((*(unsigned __int8 *)(v29 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64));
    uint64_t v31 = *(void *)(v29 + 56);
    do
    {
      sub_1001651CC();
      v32();
      DetailChartDataElement.accessibilityDateString.getter();
      DetailChartDataElement.value.getter();
      v33._countAndFlagsBits = sub_100188B18();
      AXDataPoint.init(x:y:additionalValues:label:)(v33, v69, v34, (Swift::String_optional)(unint64_t)_swiftEmptyArrayStorage);
      (*(void (**)(uint64_t, uint64_t))(v29 - 8))(v1, v3);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v30 += v31;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
    uint64_t v20 = v63;
    uint64_t v2 = v0;
    char v26 = v55;
  }
  uint64_t v35 = &_s7SwiftUI4ViewP6ChartsE15chartBackground9alignment7contentQrAA9AlignmentV_qd__AD10ChartProxyVctAaBRd__lFQOMQ_ptr;
  id v36 = objc_allocWithZone((Class)AXDataSeriesDescriptor);
  id v37 = sub_10071D7F4(v24, v57, v26 & 1);
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_100C31F30;
  *(void *)(v38 + 32) = v37;
  uint64_t v68 = v38;
  specialized Array._endMutation()();
  id v58 = v37;
  if (ChartKind.showSecondLine.getter())
  {
    uint64_t v39 = (uint64_t *)(v2 + *(int *)(v20 + 128));
    uint64_t v40 = v39[1];
    if (v40)
    {
      uint64_t v41 = *v39;
      swift_bridgeObjectRetain();
      char v56 = ChartKind.isContinuous.getter();
      uint64_t v42 = *(void *)(v2 + v61);
      uint64_t v43 = *(void *)(v42 + 16);
      if (v43)
      {
        uint64_t v62 = v40;
        uint64_t v44 = v42;
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        sub_1001ABC4C(0, &qword_100E90988);
        uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16);
        uint64_t v45 = v44 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
        uint64_t v46 = *(void *)(v60 + 72);
        do
        {
          v66(v1, v45, v3);
          DetailChartDataElement.accessibilityDateString.getter();
          DetailChartDataElement.secondValue.getter();
          v47._countAndFlagsBits = sub_100188B18();
          AXDataPoint.init(x:y:additionalValues:label:)(v47, v70, v48, (Swift::String_optional)(unint64_t)_swiftEmptyArrayStorage);
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v1, v3);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v45 += v46;
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
        uint64_t v35 = &_s7SwiftUI4ViewP6ChartsE15chartBackground9alignment7contentQrAA9AlignmentV_qd__AD10ChartProxyVctAaBRd__lFQOMQ_ptr;
        uint64_t v40 = v62;
      }
      id v49 = objc_allocWithZone((Class)v35[491]);
      id v50 = sub_10071D7F4(v41, v40, v56 & 1);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  sub_1001ABC4C(0, &qword_100E90990);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v51 = v65;
  id v52 = v59;
  uint64_t v53 = AXChartDescriptor.init(title:summary:xAxis:yAxis:additionalAxes:series:)();

  return v53;
}

uint64_t sub_10071D6CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10071D720(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

id sub_10071D774()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v0 initWithTitle:v1 categoryOrder:isa];

  return v3;
}

id sub_10071D7F4(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1001ABC4C(0, &qword_100E90988);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v3 initWithName:v5 isContinuous:a3 & 1 dataPoints:isa];

  return v7;
}

uint64_t sub_10071D898(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ChartViewModel.PeakMarkerLabelPosition()
{
  return &type metadata for ChartViewModel.PeakMarkerLabelPosition;
}

unint64_t sub_10071D8F4()
{
  unint64_t result = qword_100E909A0;
  if (!qword_100E909A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E909A0);
  }
  return result;
}

unint64_t sub_10071D944()
{
  unint64_t result = qword_100E909A8;
  if (!qword_100E909A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E909A8);
  }
  return result;
}

unint64_t sub_10071D994()
{
  unint64_t result = qword_100E909B0;
  if (!qword_100E909B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E909B0);
  }
  return result;
}

unint64_t sub_10071D9E4()
{
  unint64_t result = qword_100E909B8;
  if (!qword_100E909B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E909B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkUpdatedTip()
{
  return &type metadata for WorkUpdatedTip;
}

uint64_t sub_10071DA54()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10071DABC()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_10071DB24()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v0 - 8);
  sub_1001626E0();
  uint64_t v3 = v2 - v1;
  Image.init(_internalSystemName:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_100318DA8(v3);
  return v5;
}

uint64_t sub_10071DBF4()
{
  sub_10017DF08(&qword_100E653D0);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100109314();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v2 = type metadata accessor for Tips.IgnoresDisplayFrequency();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100E653E0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for Tips.MaxDisplayCount();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  Tips.IgnoresDisplayFrequency.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)();
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  sub_100162F0C();
  v19();
  sub_100162F0C();
  v20();
  sub_100162F0C();
  v21();
  sub_100162F0C();
  v22();
  return v18;
}

uint64_t sub_10071DFCC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v0, qword_100F51AA0);
  sub_1002102B0(v0, (uint64_t)qword_100F51AA0);
  sub_10017DF08(&qword_100E65408);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_10071E10C()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for Tips.Rule();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  if (qword_100E62560 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1002102B0(v0, (uint64_t)qword_100F51AA0);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v14, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_10071E2C4()
{
  return sub_10071DA54();
}

uint64_t sub_10071E2F8@<X0>(uint64_t *a1@<X8>)
{
  sub_10023AB1C();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10071E33C()
{
  unint64_t result = qword_100E909C0;
  if (!qword_100E909C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E909C0);
  }
  return result;
}

uint64_t sub_10071E388()
{
  return swift_release();
}

uint64_t sub_10071E3F8()
{
  return sub_1001352FC();
}

uint64_t sub_10071E424()
{
  type metadata accessor for DispatchPredicate();
  sub_100179C0C();
  __chkstk_darwin(v1);
  char v2 = sub_10017D324();
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = sub_1001802D0();
  v4(v3);
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = sub_10019F050();
  uint64_t result = v6(v5);
  if (v2) {
    return sub_1000AA130(1);
  }
  __break(1u);
  return result;
}

uint64_t sub_10071E4DC()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v35 = v10;
  __chkstk_darwin(v11);
  sub_10016279C();
  uint64_t v12 = type metadata accessor for DispatchTime();
  sub_100179C0C();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v20 = (char *)&v28 - v19;
  if (!*(unsigned char *)(v2 + 16))
  {
    uint64_t v22 = *(void *)(v2 + 32);
    uint64_t v21 = *(void *)(v2 + 40);
    uint64_t v34 = v9;
    uint64_t v29 = v21;
    *(unsigned char *)(v2 + 16) = 1;
    uint64_t v23 = v18;
    sub_1001AB3E0();
    uint64_t v33 = v5;
    uint64_t v31 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
    uint64_t v30 = v23 + 8;
    uint64_t v32 = v24;
    v24(v16, v12);
    char v25 = (void *)swift_allocObject();
    v25[2] = v2;
    v25[3] = v22;
    unsigned char v25[4] = v29;
    aBlock[4] = sub_10071ECD8;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    aBlock[3] = &unk_100E25A10;
    char v26 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_1001357B0((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v27 = (void *)v31;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v3);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v1, v34);
    return v32(v20, v12);
  }
  return result;
}

uint64_t sub_10071E854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  swift_retain();
  sub_100B2D1CC();

  return swift_release();
}

uint64_t sub_10071E8E4()
{
  uint64_t v0 = type metadata accessor for OSSignpostID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  [self setFrameStallSkipRequest:1];
  v5[1] = 0;
  swift_retain();
  Transaction.animation.setter();
  static os_signpost_type_t.event.getter();
  if (qword_100E627F8 != -1) {
    swift_once();
  }
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10007EBF4();
  swift_retain();
  withTransaction<A>(_:_:)();
  return swift_release_n();
}

uint64_t sub_10071EA9C()
{
  return type metadata accessor for WireframeContentManager();
}

unsigned char *storeEnumTagSinglePayload for WireframeContentManager.ContentLoadState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10071EB70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WireframeContentManager.ContentLoadState()
{
  return &type metadata for WireframeContentManager.ContentLoadState;
}

unint64_t sub_10071EBAC()
{
  unint64_t result = qword_100E90B58;
  if (!qword_100E90B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90B58);
  }
  return result;
}

uint64_t sub_10071EBF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10007F424();
  *a1 = result;
  return result;
}

uint64_t sub_10071EC28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100135710();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10071EC58()
{
  return sub_10071E388();
}

void sub_10071EC80()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10071EC90()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10071ECD8()
{
  return sub_10071E854(v0[2], v0[3], v0[4]);
}

uint64_t sub_10071ECE4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10071ED24()
{
  return sub_10071E8E4();
}

uint64_t sub_10071ED2C()
{
  *(unsigned char *)(v0 + 16) = 2;
  return sub_10071E388();
}

uint64_t sub_10071ED64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C48);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64AF0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870F8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v27)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64A88);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = result;
  uint64_t v19 = a2;
  uint64_t v20 = v29;
  uint64_t v21 = v28;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E75340);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  uint64_t v8 = v24;
  if (!v24)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = v25;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E75348);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v23)
  {
    uint64_t v10 = type metadata accessor for ListModule();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = sub_1000DF0C4((uint64_t)v26, v27);
    __n128 v13 = __chkstk_darwin(v12);
    uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v16 + 16))(v15, v13);
    uint64_t v17 = sub_1009FAEC8(v21, v20, v5, v6, (uint64_t)v15, v7, v8, &v22, v10, ObjectType, (uint64_t)&type metadata for ContentStatusBannerViewFactory, v9, (uint64_t)&off_100E38A68);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v26);
    uint64_t v18 = v19;
    void v19[3] = v10;
    v18[4] = &off_100E32850;
    *uint64_t v18 = v17;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10071F0A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100223D9C(a1, (uint64_t)&off_100E1D558, a2);
}

uint64_t sub_10071F0B4(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v2 = Tracker.chain(name:identifier:)();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10071F134@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (result)
  {
    a2[3] = (uint64_t)&type metadata for ListTracker;
    a2[4] = (uint64_t)&off_100E15E30;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10071F1BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v17;
  if (!v17)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v6 = v18;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C40);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v16)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD10);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14)
  {
    uint64_t v7 = sub_1000DF0C4((uint64_t)v15, v16);
    __n128 v8 = __chkstk_darwin(v7);
    uint64_t v10 = (uint64_t *)&v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_1007201F4(v5, v6, *v10, (uint64_t)v13);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
    *a2 = v12;
    a2[1] = &off_100E27058;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10071F38C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ListInputFactory();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 3;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E1A268;
  *a1 = result;
  return result;
}

uint64_t sub_10071F3DC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C50);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for ListInputFactory();
  uint64_t v15 = &off_100E1A268;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100720090;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870F0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for ListViewModelFactory();
    uint64_t v15 = &off_100E1D558;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64AF0);
    swift_allocObject();
    return sub_10025AAAC(v3, v6, v5, v4, sub_1001AF4C0, 0, sub_100137F50, v9, sub_1007200C0, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10071F660(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v20;
  if (!v20)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v22;
  uint64_t v4 = v23;
  uint64_t v6 = v21;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v18, v19);
  uint64_t active = type metadata accessor for ActiveLocationInputFactory();
  uint64_t v17 = &off_100E120C8;
  v15[0] = v7;
  sub_10020D948((uint64_t)v15, (uint64_t)v14);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v14, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10071FFF8;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100137F7C;
  *(void *)(v10 + 24) = v9;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v11 = *sub_1001B1E64(v18, v19);
    uint64_t active = type metadata accessor for ActiveLocationModelFactory();
    uint64_t v17 = &off_100E120B8;
    v15[0] = v11;
    sub_10020D948((uint64_t)v15, (uint64_t)v14);
    uint64_t v12 = swift_allocObject();
    sub_1001262E4(v14, v12 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_100720060;
    *(void *)(v13 + 24) = v12;
    sub_10017DF08((uint64_t *)&unk_100EAAA90);
    swift_allocObject();
    return sub_1000D9F50(v3, v6, v5, v4, sub_1001B19C8, 0, sub_100216990, v10, sub_100136764, v13);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10071F940(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_10017D34C(a1, a2);
  return v2(v3);
}

uint64_t sub_10071F970@<X0>(uint64_t *a1@<X8>)
{
  return sub_10071F9B0((uint64_t (*)(void))type metadata accessor for ActiveLocationInputFactory, (uint64_t)&off_100E120C8, a1);
}

uint64_t sub_10071F990@<X0>(uint64_t *a1@<X8>)
{
  return sub_10071F9B0((uint64_t (*)(void))type metadata accessor for ActiveLocationModelFactory, (uint64_t)&off_100E120B8, a1);
}

uint64_t sub_10071F9B0@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_10071FA00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NotificationsOptInTipViewFactory();
  uint64_t result = swift_allocObject();
  *(_WORD *)(result + 16) = 257;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E28C48;
  *a1 = result;
  return result;
}

uint64_t sub_10071FA50(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E907D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for WeatherConditionBackgroundModelInputFactory();
  uint64_t v15 = &off_100E357F0;
  *(void *)&long long v13 = v7;
  sub_10020D948((uint64_t)&v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10071FFC8;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD28);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    sub_10020D948((uint64_t)v16, (uint64_t)&v13);
    uint64_t v10 = swift_allocObject();
    sub_1001262E4(&v13, v10 + 16);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_100027F7C;
    *(void *)(v11 + 24) = v10;
    sub_10017DF08(&qword_100E64A88);
    swift_allocObject();
    return sub_1000667E0(v3, v6, v5, v4, sub_1001B09A4, 0, sub_100216990, v9, sub_100216804, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10071FCCC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_10017D34C(a1, a2);
  return v2(v3);
}

uint64_t sub_10071FCFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD30);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v26)
  {
    uint64_t v4 = sub_1000DF0C4((uint64_t)v25, v26);
    __n128 v5 = __chkstk_darwin(v4);
    uint64_t v7 = (void *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
    void v24[3] = v10;
    v24[4] = &off_100E19AF8;
    v24[0] = v9;
    uint64_t v11 = type metadata accessor for WeatherConditionBackgroundModelInputFactory();
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = sub_1000DF0C4((uint64_t)v24, v10);
    __n128 v14 = __chkstk_darwin(v13);
    uint64_t v16 = (void *)((char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    uint64_t v19 = (void *)(v12
                   + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_weatherConditionBackgroundTimeDataFactory);
    void v19[3] = v10;
    void v19[4] = &off_100E19AF8;
    *uint64_t v19 = v18;
    uint64_t v20 = v12
        + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory____lazy_storage___locationAnimationKind;
    uint64_t v21 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
    _s7Weather24LocationCompositionStateOwst_0(v20, 1, 1, v21);
    uint64_t v22 = v12 + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory____lazy_storage___animationKind;
    uint64_t v23 = type metadata accessor for BackgroundAnimationKind();
    _s7Weather24LocationCompositionStateOwst_0(v22, 1, 1, v23);
    *(unsigned char *)(v12
             + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_forceTileGradientPresentationContext) = 0;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
    *(unsigned char *)(v12
             + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_forceTileGradientPresentationContext) = 1;
    a2[3] = v11;
    a2[4] = (uint64_t)&off_100E357F0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10071FF90()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10071FFC8(uint64_t a1)
{
  return sub_10071FCCC(a1, (void *)(v1 + 16));
}

uint64_t sub_10071FFF8(uint64_t a1)
{
  return sub_10071FCCC(a1, (void *)(v1 + 16));
}

uint64_t sub_100720028()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100720060(uint64_t a1)
{
  return sub_10071F940(a1, (void *)(v1 + 16));
}

uint64_t sub_100720090(uint64_t a1)
{
  return sub_10071FCCC(a1, (void *)(v1 + 16));
}

uint64_t sub_1007200C0(uint64_t a1)
{
  return sub_10071F940(a1, (void *)(v1 + 16));
}

void *sub_1007200F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v12[0] = a3;
  void v12[3] = &type metadata for ListTracker;
  v12[4] = &off_100E15E30;
  a5[2] = a1;
  a5[3] = a2;
  sub_10020D948((uint64_t)v12, (uint64_t)(a5 + 4));
  sub_10020D948(a4, (uint64_t)(a5 + 9));
  swift_beginAccess();
  uint64_t v7 = a5[12];
  uint64_t v8 = a5[13];
  sub_1000DF0C4((uint64_t)(a5 + 9), v7);
  uint64_t v9 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 16);
  swift_retain();
  uint64_t v10 = swift_retain();
  v9(v10, &off_100E27030, v7, v8);
  swift_endAccess();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
  return a5;
}

void *sub_1007201F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v16[3] = &type metadata for ListTracker;
  v16[4] = &off_100E15E30;
  v16[0] = a3;
  type metadata accessor for ListInteractor();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = sub_1000DF0C4((uint64_t)v16, (uint64_t)&type metadata for ListTracker);
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v12 + 16))(v11, v9);
  uint64_t v13 = sub_1007200F0(a1, a2, *v11, a4, v7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  return v13;
}

ValueMetadata *type metadata accessor for HomeUpdatedTip()
{
  return &type metadata for HomeUpdatedTip;
}

uint64_t sub_100720358()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1007203C0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100720428()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v0 - 8);
  sub_1001626E0();
  uint64_t v3 = v2 - v1;
  Image.init(_internalSystemName:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_100318DA8(v3);
  return v5;
}

uint64_t sub_1007204F8()
{
  sub_10017DF08(&qword_100E653D0);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100109314();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v2 = type metadata accessor for Tips.IgnoresDisplayFrequency();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100E653E0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for Tips.MaxDisplayCount();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  Tips.IgnoresDisplayFrequency.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)();
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  sub_100162F0C();
  v19();
  sub_100162F0C();
  v20();
  sub_100162F0C();
  v21();
  sub_100162F0C();
  v22();
  return v18;
}

uint64_t sub_1007208D0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v0, qword_100F51AB8);
  sub_1002102B0(v0, (uint64_t)qword_100F51AB8);
  sub_10017DF08(&qword_100E65408);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100720A10()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for Tips.Rule();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  if (qword_100E62568 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1002102B0(v0, (uint64_t)qword_100F51AB8);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v14, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100720BC8()
{
  return sub_100720358();
}

uint64_t sub_100720BFC@<X0>(uint64_t *a1@<X8>)
{
  sub_10023AB68();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100720C40()
{
  unint64_t result = qword_100E90C78;
  if (!qword_100E90C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90C78);
  }
  return result;
}

uint64_t sub_100720C8C()
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  if (*(void *)(v0 + 32))
  {
    uint64_t v6 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v7 = sub_10017CE84();
    v8(v7);
    static Font.Weight.medium.getter();
    uint64_t v6 = static Font.system(_:weight:)();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    *(void *)(v0 + 32) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_100720D70()
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v8 = v7;
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 48))
  {
    uint64_t v13 = *(void *)(v0 + 48);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for Font.TextStyle.largeTitle(_:), v6, v10);
    static Font.Weight.medium.getter();
    static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
    uint64_t v14 = sub_10017CE84();
    v15(v14);
    uint64_t v13 = Font.leading(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    *(void *)(v0 + 48) = v13;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v13;
}

double sub_100720F04()
{
  if ((*(unsigned char *)(v0 + 72) & 1) == 0) {
    return *(double *)(v0 + 64);
  }
  *(void *)(v0 + 64) = 0x4010000000000000;
  *(unsigned char *)(v0 + 72) = 0;
  return 4.0;
}

uint64_t sub_100720F28()
{
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = *(void *)(v0 + 80);
  }
  else
  {
    uint64_t v1 = sub_100720C8C();
    *(void *)(v0 + 80) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t type metadata accessor for UVIndexChartHeaderStyle()
{
  return self;
}

uint64_t sub_100720FA8()
{
  return sub_100720C8C();
}

uint64_t sub_100720FCC()
{
  return sub_100720D70();
}

double sub_100720FF0()
{
  return sub_100720F04();
}

uint64_t sub_100721014()
{
  return sub_100720F28();
}

void sub_100721038()
{
  type metadata accessor for UVIndexChartHeaderStyle();
  uint64_t v0 = swift_allocObject();
  sub_1005243E4();
  qword_100F51AD0 = v0;
}

uint64_t sub_100721074(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) == 0)
  {
    if ((a4 & 1) == 0) {
      return a1 == a3;
    }
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  if ((a4 & 1) == 0) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  return 1;
}

uint64_t static ExternalSearchQuery.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return a4 == 0;
  }
  if (!a4) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_1007210CC(uint64_t a1, __int16 a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, char a14, uint64_t a15)
{
  char v17 = a5;
  if ((a2 & 0x100) != 0)
  {
    a1 = *(void *)(a15 + 16);
    char v18 = *(unsigned char *)(a15 + 24);
  }
  else
  {
    char v18 = a2 & 1;
  }
  char v36 = v18;
  if (a3 == 2) {
    char v19 = *(unsigned char *)(a15 + 25);
  }
  else {
    char v19 = a3 & 1;
  }
  char v35 = v19;
  if (a4 == 2) {
    char v20 = *(unsigned char *)(a15 + 26);
  }
  else {
    char v20 = a4 & 1;
  }
  char v34 = v20;
  if (a5 == 3) {
    char v17 = *(unsigned char *)(a15 + 27);
  }
  if (a7)
  {
    uint64_t v21 = a7;
  }
  else
  {
    a6 = *(void *)(a15 + 32);
    uint64_t v21 = *(void *)(a15 + 40);
    swift_bridgeObjectRetain();
  }
  uint64_t v22 = a8;
  uint64_t v23 = a9;
  if (a9 == 1)
  {
    uint64_t v22 = *(void *)(a15 + 48);
    uint64_t v23 = swift_bridgeObjectRetain();
  }
  uint64_t v38 = v23;
  uint64_t v39 = a6;
  if (a10 == 2) {
    char v24 = *(unsigned char *)(a15 + 64);
  }
  else {
    char v24 = a10 & 1;
  }
  char v33 = v24;
  uint64_t v25 = a12;
  if (!a12)
  {
    uint64_t v25 = *(void *)(a15 + 80);
    a11 = *(void *)(a15 + 72);
    swift_bridgeObjectRetain();
  }
  if (a13 == 2) {
    char v26 = *(unsigned char *)(a15 + 88);
  }
  else {
    char v26 = a13 & 1;
  }
  char v32 = v26;
  uint64_t v27 = v22;
  uint64_t v28 = v21;
  char v29 = v17;
  if (a14 == 2) {
    char v30 = *(unsigned char *)(a15 + 89);
  }
  else {
    char v30 = a14 & 1;
  }
  type metadata accessor for ListViewState._Storage();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1000D58E0(a8, a9);
  swift_bridgeObjectRetain();
  return sub_1000EC58C(a1, v36, v35, v34, v29, v39, v28, v27, v38, v33, a11, v25, v32, v30);
}

uint64_t sub_1007212B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E6974696465 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1970169197 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100721390(char a1)
{
  if (a1) {
    return 1970169197;
  }
  else {
    return 0x676E6974696465;
  }
}

uint64_t sub_1007213C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100721448()
{
  return 0x6E6F697369766572;
}

void sub_100721460()
{
  sub_10016314C();
  char v13 = v1;
  char v3 = v2;
  sub_10017DF08(&qword_100E90EE0);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10011C760();
  uint64_t v12 = sub_10017DF08(&qword_100E90EE8);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100125FF8();
  sub_10017DF08(&qword_100E90EF0);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_100109370();
  sub_1001B1E64(v3, v3[3]);
  sub_100723A98();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v13)
  {
    sub_100723B30();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v12);
  }
  else
  {
    sub_100723AE4();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_100162F0C();
    v9();
  }
  uint64_t v10 = sub_1001A2DE8();
  v11(v10);
  sub_100163164();
}

void sub_10072166C()
{
  sub_10016314C();
  BOOL v2 = v1;
  sub_10017DF08(&qword_100E90EB0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_10016279C();
  sub_10017DF08(&qword_100E90EB8);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E90EC0);
  sub_100179C0C();
  __chkstk_darwin(v5);
  unint64_t v6 = v2[3];
  sub_1001B1E64(v2, v6);
  sub_100723A98();
  sub_1001D1CC4();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v7 = sub_100189310();
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8
    || (char v9 = *(unsigned char *)(v7 + 32), sub_100723A1C(1, v8, v7, v7 + 32, 0, (2 * v8) | 1), sub_10018AA2C(), v6 >> 1))
  {
    sub_100186B60();
    swift_allocError();
    uint64_t v11 = v10;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v11 = &unk_100E25E00;
    KeyedDecodingContainer.codingPath.getter();
    sub_100163870();
    sub_1001A4798();
    sub_10019D7D8();
    v12();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v13 = sub_100183E78();
    v14(v13);
    BOOL v2 = (void *)v0;
LABEL_8:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
    goto LABEL_9;
  }
  if (v9)
  {
    sub_100723AE4();
    sub_10019FF68();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    KeyedDecodingContainer.decode(_:forKey:)();
  }
  else
  {
    sub_100723B30();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  }
  sub_100162F0C();
  v15();
  swift_unknownObjectRelease();
  sub_100162F0C();
  v16();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
LABEL_9:
  sub_100163164();
}

uint64_t sub_100721A04()
{
  return sub_100721390(*v0);
}

uint64_t sub_100721A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007212B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100721A34(uint64_t a1)
{
  unint64_t v2 = sub_100723A98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100721A70(uint64_t a1)
{
  unint64_t v2 = sub_100723A98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100721AAC(uint64_t a1)
{
  unint64_t v2 = sub_100723B30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100721AE8(uint64_t a1)
{
  unint64_t v2 = sub_100723B30();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100721B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007213C0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100721B54(uint64_t a1)
{
  unint64_t v2 = sub_100723AE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100721B90(uint64_t a1)
{
  unint64_t v2 = sub_100723AE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100721BCC(uint64_t a1, uint64_t a2)
{
  return sub_100721074(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

void sub_100721BE8(uint64_t a1@<X8>)
{
  sub_10072166C();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(unsigned char *)(a1 + 8) = v4 & 1;
  }
}

void sub_100721C1C()
{
}

uint64_t sub_100721C3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10089AF80();
  if (!v1)
  {
    *(void *)a1 = result;
    *(unsigned char *)(a1 + 8) = v4 & 1;
  }
  return result;
}

uint64_t sub_100721C70(uint64_t a1)
{
  return sub_10089B0A8(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_100721C90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E75614C707061 && a2 == 0xE900000000000068;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6976614E72657375 && a2 == 0xEE006E6F69746167)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100721DB4(char a1)
{
  if (a1) {
    return 0x6976614E72657375;
  }
  else {
    return 0x636E75614C707061;
  }
}

uint64_t sub_100721DFC(uint64_t a1)
{
  unint64_t v2 = sub_100722238();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100721E38(uint64_t a1)
{
  unint64_t v2 = sub_100722238();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100721E74()
{
  return SizingBehavior.hashValue.getter(*v0);
}

uint64_t sub_100721E90()
{
  return sub_100721DB4(*v0);
}

uint64_t sub_100721E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100721C90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100721EC0(uint64_t a1)
{
  unint64_t v2 = sub_1007221A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100721EFC(uint64_t a1)
{
  unint64_t v2 = sub_1007221A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100721F38(uint64_t a1)
{
  unint64_t v2 = sub_1007221EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100721F74(uint64_t a1)
{
  unint64_t v2 = sub_1007221EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void ListSessionTrigger.encode(to:)()
{
  sub_10016314C();
  char v20 = v2;
  char v4 = v3;
  sub_10017DF08(&qword_100E90D80);
  sub_100179C0C();
  uint64_t v18 = v6;
  uint64_t v19 = v5;
  __chkstk_darwin(v5);
  sub_100125FF8();
  uint64_t v17 = sub_10017DF08(&qword_100E90D88);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E90D90);
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100162F18();
  sub_1001B1E64(v4, v4[3]);
  sub_1007221A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v16 = (void (**)(uint64_t, uint64_t))(v14 + 8);
  if (v20)
  {
    sub_1007221EC();
    sub_100162950();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v0, v19);
  }
  else
  {
    sub_100722238();
    sub_100162950();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v17);
  }
  (*v16)(v1, v12);
  sub_100163164();
}

unint64_t sub_1007221A0()
{
  unint64_t result = qword_100E90D98;
  if (!qword_100E90D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90D98);
  }
  return result;
}

unint64_t sub_1007221EC()
{
  unint64_t result = qword_100E90DA0;
  if (!qword_100E90DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90DA0);
  }
  return result;
}

unint64_t sub_100722238()
{
  unint64_t result = qword_100E90DA8;
  if (!qword_100E90DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90DA8);
  }
  return result;
}

void ListSessionTrigger.init(from:)()
{
  sub_10016314C();
  uint64_t v31 = (void *)v0;
  char v2 = v1;
  uint64_t v30 = sub_10017DF08(&qword_100E90DB0);
  sub_100179C0C();
  uint64_t v28 = v3;
  __chkstk_darwin(v4);
  sub_10016279C();
  uint64_t v5 = sub_10017DF08(&qword_100E90DB8);
  sub_100179C0C();
  uint64_t v27 = v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E90DC0);
  sub_100179C0C();
  uint64_t v29 = v10;
  __chkstk_darwin(v11);
  sub_1001B1E64(v2, v2[3]);
  sub_1007221A0();
  sub_1001D1CC4();
  if (v0) {
    goto LABEL_6;
  }
  v26[1] = v5;
  _DWORD v26[2] = v9;
  uint64_t v31 = v2;
  uint64_t v12 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13
    || (v26[0] = 0,
        int v14 = *(unsigned __int8 *)(v12 + 32),
        sub_100723A1C(1, v13, v12, v12 + 32, 0, (2 * v13) | 1),
        uint64_t v16 = v15,
        unint64_t v18 = v17,
        swift_bridgeObjectRelease(),
        v16 != v18 >> 1))
  {
    type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v23 = v22;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v23 = &type metadata for ListSessionTrigger;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    sub_1001A4798();
    sub_10019D7D8();
    v24();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_100162F0C();
    v25();
    char v2 = v31;
LABEL_6:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
    goto LABEL_7;
  }
  LODWORD(v27) = v14;
  sub_1007221EC();
  sub_10017A110();
  sub_100162F0C();
  v19();
  swift_unknownObjectRelease();
  uint64_t v20 = sub_10018124C();
  v21(v20);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
LABEL_7:
  sub_100163164();
}

uint64_t sub_100722618()
{
  return ListSessionTrigger.hashValue.getter(*v0);
}

void sub_100722620(unsigned char *a1@<X8>)
{
  ListSessionTrigger.init(from:)();
  if (!v1) {
    *a1 = v3 & 1;
  }
}

void sub_100722650()
{
}

uint64_t sub_10072266C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7551686372616573 && a2 == 0xEB00000000797265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100722764(char a1)
{
  if (a1) {
    return 0x7551686372616573;
  }
  else {
    return 1701736302;
  }
}

uint64_t sub_10072279C()
{
  return sub_100722764(*v0);
}

uint64_t sub_1007227A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10072266C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007227CC(uint64_t a1)
{
  unint64_t v2 = sub_100723218();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722808(uint64_t a1)
{
  unint64_t v2 = sub_100723218();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100722844(uint64_t a1)
{
  unint64_t v2 = sub_1007232B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722880(uint64_t a1)
{
  unint64_t v2 = sub_1007232B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007228BC(uint64_t a1)
{
  unint64_t v2 = sub_100723264();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007228F8(uint64_t a1)
{
  unint64_t v2 = sub_100723264();

  return CodingKey.debugDescription.getter(a1, v2);
}

void ExternalSearchQuery.encode(to:)()
{
  sub_10016314C();
  uint64_t v9 = v0;
  unint64_t v2 = v1;
  sub_10017DF08(&qword_100E90DC8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100109370();
  sub_10017DF08(&qword_100E90DD0);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10011C760();
  sub_10017DF08(&qword_100E90DD8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_100162F18();
  sub_1001B1E64(v2, v2[3]);
  sub_100723218();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v9)
  {
    sub_100723264();
    sub_100162950();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  else
  {
    sub_1007232B0();
    sub_100162950();
  }
  sub_100162F0C();
  v6();
  uint64_t v7 = sub_100182B50();
  v8(v7);
  sub_100163164();
}

void ExternalSearchQuery.init(from:)()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017DF08(&qword_100E90DF8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_10016279C();
  sub_10017DF08(&qword_100E90E00);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E90E08);
  sub_100179C0C();
  __chkstk_darwin(v5);
  unint64_t v6 = v2[3];
  sub_1001B1E64(v2, v6);
  sub_100723218();
  sub_1001D1CC4();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v7 = sub_100189310();
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8
    || (char v19 = *(unsigned char *)(v7 + 32), sub_100723A1C(1, v8, v7, v7 + 32, 0, (2 * v8) | 1), sub_10018AA2C(), v6 >> 1))
  {
    sub_100186B60();
    swift_allocError();
    uint64_t v10 = v9;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v10 = &type metadata for ExternalSearchQuery;
    KeyedDecodingContainer.codingPath.getter();
    sub_100163870();
    sub_1001A4798();
    sub_10019D7D8();
    v11();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v12 = sub_100183E78();
    v13(v12);
    unint64_t v2 = (void *)v0;
LABEL_8:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
    goto LABEL_9;
  }
  if (v19)
  {
    sub_100723264();
    sub_10019FF68();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_100162F0C();
    v16();
    swift_unknownObjectRelease();
    uint64_t v17 = sub_1001A2424();
    v18(v17);
  }
  else
  {
    sub_1007232B0();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100162F0C();
    v14();
    swift_unknownObjectRelease();
    sub_100162F0C();
    v15();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
LABEL_9:
  sub_100163164();
}

void sub_100722EAC(void *a1@<X8>)
{
  ExternalSearchQuery.init(from:)();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_100722ED8()
{
}

uint64_t sub_100722EF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static ExternalSearchQuery.read(from:)();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_100722F20(uint64_t a1)
{
  return ExternalSearchQuery.write(to:)(a1, *v1, v1[1]);
}

uint64_t sub_100722F3C(uint64_t *a1, uint64_t *a2)
{
  return static ExternalSearchQuery.__derived_enum_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_100722F50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C34ED0;
  sub_100162AD8();
  *(void *)(v5 + 32) = 0xD000000000000010;
  *(void *)(v5 + 40) = v6;
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(v5 + 48) = *(void *)(a1 + 16);
  *(unsigned char *)(v5 + 56) = v7;
  *(void *)(v5 + 72) = &unk_100E25E00;
  *(void *)(v5 + 80) = 0xD000000000000019;
  sub_100162AD8();
  *(void *)(v8 + 88) = v9;
  *(unsigned char *)(v8 + 96) = *(unsigned char *)(a1 + 25);
  *(void *)(v8 + 120) = &type metadata for Bool;
  *(void *)(v8 + 128) = 0xD00000000000001CLL;
  sub_100162AD8();
  *(void *)(v10 + 136) = v11;
  if (*(unsigned char *)(a1 + 27))
  {
    if (*(unsigned char *)(a1 + 27) == 1)
    {
      unint64_t v12 = 0xEE006465696E6544;
      uint64_t v13 = 0x6E6F697461636F6CLL;
    }
    else
    {
      sub_100162AD8();
    }
  }
  else
  {
    unint64_t v12 = 0xE600000000000000;
    uint64_t v13 = 0x6E6564646968;
  }
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 152) = v12;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0x6863726165537369;
  *(void *)(inited + 184) = 0xEB00000000676E69;
  *(unsigned char *)(inited + 192) = *(unsigned char *)(a1 + 64);
  *(void *)(inited + 216) = &type metadata for Bool;
  *(void *)(inited + 224) = 0x697469736E617274;
  *(void *)(inited + 232) = 0xEF6449676E696E6FLL;
  uint64_t v15 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v16 = sub_10017DF08(&qword_100E65F18);
  *(void *)(inited + 240) = v15;
  *(void *)(inited + 248) = v14;
  *(void *)(inited + 264) = v16;
  *(void *)(inited + 272) = 0x72656767697274;
  *(void *)(inited + 280) = 0xE700000000000000;
  *(unsigned char *)(inited + 288) = *(unsigned char *)(a1 + 88);
  *(void *)(inited + 312) = &type metadata for ListSessionTrigger;
  *(void *)(inited + 320) = 0xD00000000000001FLL;
  sub_100162AD8();
  *(void *)(inited + 328) = v17;
  LOBYTE(v17) = *(unsigned char *)(a1 + 89);
  *(void *)(inited + 360) = &type metadata for Bool;
  *(unsigned char *)(inited + 336) = v17;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100E90E98);
  a2[4] = sub_10072397C();
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1007231D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100722F50(*v1, a1);
}

uint64_t sub_1007231D8()
{
  sub_1007239D0();

  return ShortDescribable.description.getter();
}

unint64_t sub_100723218()
{
  unint64_t result = qword_100E90DE0;
  if (!qword_100E90DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90DE0);
  }
  return result;
}

unint64_t sub_100723264()
{
  unint64_t result = qword_100E90DE8;
  if (!qword_100E90DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90DE8);
  }
  return result;
}

unint64_t sub_1007232B0()
{
  unint64_t result = qword_100E90DF0;
  if (!qword_100E90DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90DF0);
  }
  return result;
}

unint64_t sub_100723300()
{
  unint64_t result = qword_100E90E10;
  if (!qword_100E90E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E10);
  }
  return result;
}

void type metadata accessor for ListSessionTrigger()
{
}

uint64_t getEnumTagSinglePayload for ExternalSearchQuery(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ExternalSearchQuery(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for ExternalSearchQuery()
{
}

void type metadata accessor for ListToolbarMenuCategory()
{
}

ValueMetadata *type metadata accessor for ExternalSearchQuery.CodingKeys()
{
  return &type metadata for ExternalSearchQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ExternalSearchQuery.NoneCodingKeys()
{
  return &type metadata for ExternalSearchQuery.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for ExternalSearchQuery.SearchQueryCodingKeys()
{
  return &type metadata for ExternalSearchQuery.SearchQueryCodingKeys;
}

ValueMetadata *type metadata accessor for ListSessionTrigger.CodingKeys()
{
  return &type metadata for ListSessionTrigger.CodingKeys;
}

ValueMetadata *type metadata accessor for ListSessionTrigger.AppLaunchCodingKeys()
{
  return &type metadata for ListSessionTrigger.AppLaunchCodingKeys;
}

ValueMetadata *type metadata accessor for ListSessionTrigger.UserNavigationCodingKeys()
{
  return &type metadata for ListSessionTrigger.UserNavigationCodingKeys;
}

unint64_t sub_100723480()
{
  unint64_t result = qword_100E90E18;
  if (!qword_100E90E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E18);
  }
  return result;
}

unint64_t sub_1007234D0()
{
  unint64_t result = qword_100E90E20;
  if (!qword_100E90E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E20);
  }
  return result;
}

unint64_t sub_100723520()
{
  unint64_t result = qword_100E90E28;
  if (!qword_100E90E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E28);
  }
  return result;
}

unint64_t sub_100723570()
{
  unint64_t result = qword_100E90E30;
  if (!qword_100E90E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E30);
  }
  return result;
}

unint64_t sub_1007235C0()
{
  unint64_t result = qword_100E90E38;
  if (!qword_100E90E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E38);
  }
  return result;
}

unint64_t sub_100723610()
{
  unint64_t result = qword_100E90E40;
  if (!qword_100E90E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E40);
  }
  return result;
}

unint64_t sub_100723660()
{
  unint64_t result = qword_100E90E48;
  if (!qword_100E90E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E48);
  }
  return result;
}

unint64_t sub_1007236B0()
{
  unint64_t result = qword_100E90E50;
  if (!qword_100E90E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E50);
  }
  return result;
}

unint64_t sub_100723700()
{
  unint64_t result = qword_100E90E58;
  if (!qword_100E90E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E58);
  }
  return result;
}

unint64_t sub_100723750()
{
  unint64_t result = qword_100E90E60;
  if (!qword_100E90E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E60);
  }
  return result;
}

unint64_t sub_1007237A0()
{
  unint64_t result = qword_100E90E68;
  if (!qword_100E90E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E68);
  }
  return result;
}

unint64_t sub_1007237F0()
{
  unint64_t result = qword_100E90E70;
  if (!qword_100E90E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E70);
  }
  return result;
}

unint64_t sub_100723840()
{
  unint64_t result = qword_100E90E78;
  if (!qword_100E90E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E78);
  }
  return result;
}

unint64_t sub_100723890()
{
  unint64_t result = qword_100E90E80;
  if (!qword_100E90E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E80);
  }
  return result;
}

unint64_t sub_1007238E0()
{
  unint64_t result = qword_100E90E88;
  if (!qword_100E90E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E88);
  }
  return result;
}

unint64_t sub_100723930()
{
  unint64_t result = qword_100E90E90;
  if (!qword_100E90E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90E90);
  }
  return result;
}

unint64_t sub_10072397C()
{
  unint64_t result = qword_100E90EA0;
  if (!qword_100E90EA0)
  {
    sub_10018C6DC(&qword_100E90E98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90EA0);
  }
  return result;
}

unint64_t sub_1007239D0()
{
  unint64_t result = qword_100E90EA8;
  if (!qword_100E90EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90EA8);
  }
  return result;
}

uint64_t sub_100723A1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100723A98()
{
  unint64_t result = qword_100E90EC8;
  if (!qword_100E90EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90EC8);
  }
  return result;
}

unint64_t sub_100723AE4()
{
  unint64_t result = qword_100E90ED0;
  if (!qword_100E90ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90ED0);
  }
  return result;
}

unint64_t sub_100723B30()
{
  unint64_t result = qword_100E90ED8;
  if (!qword_100E90ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90ED8);
  }
  return result;
}

unsigned char *_s7Weather18ListSessionTriggerOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100723C48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListToolbarMenuCategory.CodingKeys()
{
  return &type metadata for ListToolbarMenuCategory.CodingKeys;
}

ValueMetadata *type metadata accessor for ListToolbarMenuCategory.EditingCodingKeys()
{
  return &type metadata for ListToolbarMenuCategory.EditingCodingKeys;
}

unsigned char *_s7Weather19ExternalSearchQueryO21SearchQueryCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100723D2CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListToolbarMenuCategory.MenuCodingKeys()
{
  return &type metadata for ListToolbarMenuCategory.MenuCodingKeys;
}

unint64_t sub_100723D68()
{
  unint64_t result = qword_100E90EF8;
  if (!qword_100E90EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90EF8);
  }
  return result;
}

unint64_t sub_100723DB8()
{
  unint64_t result = qword_100E90F00;
  if (!qword_100E90F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90F00);
  }
  return result;
}

unint64_t sub_100723E08()
{
  unint64_t result = qword_100E90F08;
  if (!qword_100E90F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90F08);
  }
  return result;
}

unint64_t sub_100723E58()
{
  unint64_t result = qword_100E90F10;
  if (!qword_100E90F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90F10);
  }
  return result;
}

unint64_t sub_100723EA8()
{
  unint64_t result = qword_100E90F18;
  if (!qword_100E90F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90F18);
  }
  return result;
}

unint64_t sub_100723EF8()
{
  unint64_t result = qword_100E90F20;
  if (!qword_100E90F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90F20);
  }
  return result;
}

unint64_t sub_100723F48()
{
  unint64_t result = qword_100E90F28;
  if (!qword_100E90F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90F28);
  }
  return result;
}

unint64_t sub_100723F98()
{
  unint64_t result = qword_100E90F30;
  if (!qword_100E90F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90F30);
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesDetailTracker()
{
  return &type metadata for AveragesDetailTracker;
}

ValueMetadata *type metadata accessor for HomeAndWorkUpdatedTip()
{
  return &type metadata for HomeAndWorkUpdatedTip;
}

uint64_t sub_10072400C()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100724074()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1007240DC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v0 - 8);
  sub_1001626E0();
  uint64_t v3 = v2 - v1;
  Image.init(_internalSystemName:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_100318DA8(v3);
  return v5;
}

uint64_t sub_1007241AC()
{
  sub_10017DF08(&qword_100E653D0);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100109314();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v2 = type metadata accessor for Tips.IgnoresDisplayFrequency();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100E653E0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for Tips.MaxDisplayCount();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  Tips.IgnoresDisplayFrequency.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)();
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  sub_100162F0C();
  v19();
  sub_100162F0C();
  v20();
  sub_100162F0C();
  v21();
  sub_100162F0C();
  v22();
  return v18;
}

uint64_t sub_100724584()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v0, qword_100F51AD8);
  sub_1002102B0(v0, (uint64_t)qword_100F51AD8);
  sub_10017DF08(&qword_100E65408);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1007246C4()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for Tips.Rule();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  if (qword_100E62578 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1002102B0(v0, (uint64_t)qword_100F51AD8);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v14, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_10072487C()
{
  return sub_10072400C();
}

uint64_t sub_1007248B0@<X0>(uint64_t *a1@<X8>)
{
  sub_10023AC00();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1007248F4()
{
  unint64_t result = qword_100E90F38;
  if (!qword_100E90F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90F38);
  }
  return result;
}

uint64_t sub_100724940()
{
  if (*(void *)(v0 + 8))
  {
    uint64_t v1 = *(void *)(v0 + 8);
  }
  else
  {
    id v2 = [self tertiarySystemFillColor];
    uint64_t v1 = Color.init(uiColor:)();
    *(void *)(v0 + 8) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

void *sub_1007249A8(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  char v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  char v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        char v35 = &qword_100E913B8;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      char v35 = &qword_100E91788;
      goto LABEL_11;
    }
    char v35 = &qword_100E915A0;
  }
  else if (a2)
  {
    char v35 = &qword_100E90FE8;
  }
  else
  {
    char v35 = &qword_100E911D0;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[49];
  uint64_t v85 = v35[50];
  uint64_t v86 = v40;
  uint64_t v41 = v35[51];
  uint64_t v83 = v35[52];
  uint64_t v84 = v41;
  uint64_t v42 = v35[57];
  uint64_t v89 = v35[58];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_map;
  uint64_t v45 = v35[59];
  uint64_t v44 = v35[60];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  Swift::OpaquePointer v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)Swift::OpaquePointer v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  id v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)id v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  char v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)char v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  *uint64_t v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  Swift::Double_optional v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_100724F84(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v106 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_severeAlert, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_airQuality, v18 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v18);
    *(void *)(v11 + 64) = v19;
    *(void *)(v11 + 72) = v20;
    uint64_t v21 = (__n128 *)sub_100163204();
    sub_100183B78(v21);
    sub_10031F6A8(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v21);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100183B78(v26);
    sub_10031F6A8(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v28, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v26);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = v13;
    uint64_t v32 = (__n128 *)swift_allocObject();
    uint64_t v33 = (char *)sub_100183900(v32, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 136) = v34;
    *(void *)(v11 + 144) = v35;
    char v36 = (__n128 *)swift_allocObject();
    sub_10016324C(v36);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = sub_100163204();
    *(_OWORD *)(v42 + 16) = v107;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v42 + v12 + v31, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v42);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = (__n128 *)swift_allocObject();
    sub_100179F48(v45);
    uint64_t v47 = v46 + v12;
    uint64_t v48 = *(void *)(a1 + 16);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v46 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v47 + v31, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v11 + 232) = v49;
    *(void *)(v11 + 240) = v50;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v105 = *(void *)(v9 + 72);
    uint64_t v104 = v1;
    unint64_t v51 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v52 = (__n128 *)swift_allocObject();
    uint64_t v53 = sub_100183900(v52, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_severeAlert, (uint64_t)v53 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 40) = v54;
    *(void *)(v11 + 48) = v55;
    uint64_t v56 = sub_10017C984();
    *(_OWORD *)(v56 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_airQuality, v56 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v56);
    *(void *)(v11 + 64) = v57;
    *(void *)(v11 + 72) = v58;
    uint64_t v59 = (__n128 *)sub_10017C984();
    sub_10017E198(v59);
    sub_10031F6A8(v60 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v61, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v56);
    *(void *)(v11 + 88) = v62;
    *(void *)(v11 + 96) = v63;
    uint64_t v64 = (__n128 *)sub_10017C984();
    sub_10017E198(v64);
    sub_10031F6A8(v65 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v66, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v56);
    *(void *)(v11 + 112) = v67;
    *(void *)(v11 + 120) = v68;
    uint64_t v69 = sub_10017C984();
    *(_OWORD *)(v69 + 16) = v107;
    sub_10031F6A8(v1, v69 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v69);
    *(void *)(v11 + 136) = v70;
    *(void *)(v11 + 144) = v71;
    uint64_t v72 = (__n128 *)swift_allocObject();
    uint64_t v73 = (char *)sub_100183900(v72, (__n128)xmmword_100C25ED0) + v51;
    uint64_t v74 = a1;
    uint64_t v75 = *(void *)(a1 + 16);
    uint64_t v76 = v74;
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v73, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v73[v105], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v72);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    sub_100179F48(v79);
    uint64_t v81 = v80 + v51;
    uint64_t v82 = *(void *)(v76 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v81 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v83;
    *(void *)(v11 + 192) = v84;
    uint64_t v85 = (__n128 *)swift_allocObject();
    sub_100179F48(v85);
    uint64_t v87 = v86 + v51;
    uint64_t v88 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v88 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v87 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v85);
    *(void *)(v11 + 208) = v89;
    *(void *)(v11 + 216) = v90;
    uint64_t v91 = (__n128 *)swift_allocObject();
    sub_100179F48(v91);
    uint64_t v93 = v92 + v51;
    uint64_t v94 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v94 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v93 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v91);
    *(void *)(v11 + 232) = v95;
    *(void *)(v11 + 240) = v96;
    char v97 = (__n128 *)swift_allocObject();
    sub_100179F48(v97);
    uint64_t v99 = v98 + v51;
    uint64_t v100 = *(void *)(v106 + 16);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v98 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v99 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v97);
    *(void *)(v11 + 256) = v101;
    *(void *)(v11 + 264) = v102;
    sub_10031F75C(v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1007257F8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_airQuality, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_severeAlert, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002C5DAC();
}

BOOL sub_100725A24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10011BFD8();
  uint64_t v9 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v15 = sub_100109308(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v31 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v31 - v22;
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v32 = v7;
  uint64_t v24 = type metadata accessor for MoonCalendarInput();
  if ((static Date.== infix(_:_:)() & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0)
  {
    return 0;
  }
  sub_10006DF38(a1 + *(int *)(v24 + 32), (uint64_t)v23, (uint64_t *)&unk_100E73CA0);
  sub_10006DF38(a2 + *(int *)(v24 + 32), (uint64_t)v21, (uint64_t *)&unk_100E73CA0);
  uint64_t v25 = v13 + *(int *)(v9 + 48);
  sub_10006DF38((uint64_t)v23, v13, (uint64_t *)&unk_100E73CA0);
  sub_10006DF38((uint64_t)v21, v25, (uint64_t *)&unk_100E73CA0);
  sub_10012B520(v13, 1, v5);
  if (v26)
  {
    sub_100178110((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
    sub_100178110((uint64_t)v23, (uint64_t *)&unk_100E73CA0);
    sub_10012B520(v25, 1, v5);
    if (v26)
    {
      sub_100178110(v13, (uint64_t *)&unk_100E73CA0);
      return 1;
    }
    goto LABEL_13;
  }
  sub_10006DF38(v13, (uint64_t)v18, (uint64_t *)&unk_100E73CA0);
  sub_10012B520(v25, 1, v5);
  if (v26)
  {
    sub_100178110((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
    sub_100178110((uint64_t)v23, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v5);
LABEL_13:
    sub_100178110(v13, &qword_100E64D60);
    return 0;
  }
  uint64_t v27 = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v2, v25, v5);
  sub_100127DD0((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
  char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v29(v2, v5);
  sub_100178110((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
  sub_100178110((uint64_t)v23, (uint64_t *)&unk_100E73CA0);
  v29((uint64_t)v18, v5);
  sub_100178110(v13, (uint64_t *)&unk_100E73CA0);
  return (v28 & 1) != 0;
}

uint64_t sub_100725DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v164 = a2;
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100162EF8();
  uint64_t v149 = v6;
  sub_1001626D4();
  __chkstk_darwin(v7);
  sub_100109770();
  uint64_t v157 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v155 = (uint64_t)&v130 - v10;
  sub_100129064();
  uint64_t v11 = type metadata accessor for TimeState();
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v150 = v13;
  sub_100129064();
  uint64_t v141 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v140 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v139 = v16;
  uint64_t v17 = sub_100129064();
  uint64_t v137 = type metadata accessor for WeatherData(v17);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v138 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E63770);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v151 = v22;
  uint64_t v23 = sub_100129064();
  uint64_t v152 = type metadata accessor for LocationWeatherDataState(v23);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v146 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v147 = (uint64_t)&v130 - v27;
  sub_100129064();
  uint64_t v161 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v165 = v28;
  __chkstk_darwin(v29);
  sub_10011BFD8();
  type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v159 = v31;
  uint64_t v160 = v30;
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  sub_100162EF8();
  uint64_t v156 = v39;
  sub_1001626D4();
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v130 - v41;
  uint64_t v43 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v162 = v44;
  __chkstk_darwin(v45);
  sub_100162EF8();
  uint64_t v148 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  sub_100109770();
  uint64_t v154 = v48;
  sub_1001626D4();
  __chkstk_darwin(v49);
  sub_100109770();
  uint64_t v153 = v50;
  sub_1001626D4();
  __chkstk_darwin(v51);
  sub_100109770();
  uint64_t v136 = v52;
  sub_1001626D4();
  __chkstk_darwin(v53);
  char v163 = (void (*)(uint64_t, uint64_t))((char *)&v130 - v54);
  uint64_t v55 = sub_10017DF08(&qword_100E67248);
  uint64_t v56 = sub_100109308(v55);
  __chkstk_darwin(v56);
  sub_1001626E0();
  uint64_t v59 = v58 - v57;
  uint64_t v60 = type metadata accessor for MoonDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v61);
  sub_1001626E0();
  uint64_t v64 = v63 - v62;
  sub_1002BC9F0(a1, v59);
  uint64_t v145 = v60;
  sub_10012B520(v59, 1, v60);
  if (v73)
  {
    sub_100178110(v59, &qword_100E67248);
    uint64_t v65 = type metadata accessor for MoonCalendarInput();
    return _s7Weather24LocationCompositionStateOwst_0(v164, 1, 1, v65);
  }
  uint64_t v144 = v43;
  sub_100728458(v59, v64, (void (*)(void))type metadata accessor for MoonDetailViewState);
  uint64_t v135 = v37;
  uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
  uint64_t v143 = v35;
  uint64_t v133 = v37 + 16;
  uint64_t v132 = v67;
  v67((uint64_t)v42, v64, v35);
  uint64_t v142 = v42;
  Location.timeZone.getter();
  uint64_t v158 = v34;
  static Calendar.currentCalendar(with:)();
  uint64_t v68 = v165 + 8;
  uint64_t v131 = *(void (**)(uint64_t, uint64_t))(v165 + 8);
  v131(v2, v161);
  uint64_t v69 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v70 = Location.id.getter();
  uint64_t v71 = v151;
  sub_1001BBE9C(v70, v72, v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10012B520(v71, 1, v152);
  uint64_t v134 = v64;
  uint64_t v74 = v2;
  uint64_t v75 = a1;
  uint64_t v165 = v68;
  if (v73)
  {
    sub_100178110(v71, &qword_100E63770);
    uint64_t v76 = v144;
  }
  else
  {
    uint64_t v77 = v71;
    uint64_t v78 = v147;
    sub_100728458(v77, v147, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v79 = v146;
    sub_1001B997C(v78, v146, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v76 = v144;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v81 = sub_10017DF08(&qword_100E63748);
      uint64_t v82 = v79 + *(int *)(v81 + 48);
      uint64_t v83 = v79 + *(int *)(v81 + 64);
      uint64_t v84 = v79;
      uint64_t v85 = v138;
      sub_100728458(v84, v138, (void (*)(void))type metadata accessor for WeatherData);
      sub_1007284B8(v83, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1007284B8(v82, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      WeatherDataModel.currentWeather.getter();
      uint64_t v86 = v136;
      CurrentWeather.date.getter();
      sub_100162F0C();
      v87();
      sub_1007284B8(v85, (void (*)(void))type metadata accessor for WeatherData);
      sub_1007284B8(v78, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v89 = v162;
      uint64_t v88 = v163;
      uint64_t v90 = *(void (**)(void))(v162 + 32);
      ((void (*)(void (*)(uint64_t, uint64_t), uint64_t, uint64_t))v90)(v163, v86, v76);
      uint64_t v91 = v157;
      uint64_t v92 = (uint64_t)v142;
      uint64_t v93 = v156;
      goto LABEL_11;
    }
    sub_1007284B8(v78, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_1007284B8(v79, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  }
  uint64_t v89 = v162;
  uint64_t v93 = v156;
  uint64_t v94 = v150;
  sub_1001B997C(v75 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v150, (void (*)(void))type metadata accessor for TimeState);
  uint64_t v90 = *(void (**)(void))(v89 + 32);
  uint64_t v88 = v163;
  ((void (*)(void (*)(uint64_t, uint64_t), uint64_t, uint64_t))v90)(v163, v94, v76);
  uint64_t v91 = v157;
  uint64_t v92 = (uint64_t)v142;
LABEL_11:
  uint64_t v95 = v155;
  sub_100726BB8((uint64_t)v88, v155);
  sub_10012B520(v95, 1, v76);
  if (v73)
  {
    sub_100178110(v95, (uint64_t *)&unk_100E73CA0);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v96 = type metadata accessor for Logger();
    sub_1002102B0(v96, (uint64_t)qword_100F51ED0);
    uint64_t v97 = v93;
    uint64_t v98 = v93;
    uint64_t v99 = v143;
    v132(v97, v92, v143);
    uint64_t v100 = v92;
    uint64_t v101 = Logger.logObject.getter();
    os_log_type_t v102 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v103 = swift_slowAlloc();
      uint64_t v157 = swift_slowAlloc();
      uint64_t v167 = v157;
      *(_DWORD *)uint64_t v103 = 136446466;
      swift_beginAccess();
      sub_100127DD0(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v104 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v166 = sub_10016414C(v104, v105, &v167);
      uint64_t v106 = v161;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v103 + 12) = 2082;
      Location.timeZone.getter();
      sub_100127DD0(&qword_100E91AA8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
      uint64_t v107 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v109 = v108;
      v131(v74, v106);
      uint64_t v166 = sub_10016414C(v107, v109, &v167);
      uint64_t v89 = v162;
      uint64_t v110 = v163;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v76 = v144;
      swift_bridgeObjectRelease();
      uint64_t v111 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
      uint64_t v112 = v143;
      v111(v98, v143);
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "Failed to get currentMonth for date %{public}s, timeZone: %{public}s", (uint8_t *)v103, 0x16u);
      swift_arrayDestroy();
      uint64_t v88 = v110;
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100162F0C();
      v113();
      v111((uint64_t)v142, v112);
    }
    else
    {

      uint64_t v119 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
      v119(v98, v99);
      sub_100162F0C();
      v120();
      v119(v100, v99);
    }
    sub_1007284B8(v134, (void (*)(void))type metadata accessor for MoonDetailViewState);
    uint64_t v121 = v164;
    uint64_t v122 = type metadata accessor for MoonCalendarInput();
    _s7Weather24LocationCompositionStateOwst_0(v121, 1, 1, v122);
    return (*(uint64_t (**)(void, uint64_t))(v89 + 8))(v88, v76);
  }
  else
  {
    uint64_t v114 = v76;
    uint64_t v115 = v153;
    sub_100189334();
    v90();
    uint64_t v116 = v134;
    sub_10006DF38(v134 + *(int *)(v145 + 24), v91, (uint64_t *)&unk_100E73CA0);
    uint64_t v117 = v148;
    uint64_t v165 = *(void *)(v89 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v165)(v148, v115, v114);
    sub_10012B520(v91, 1, v114);
    if (v118)
    {
      uint64_t v123 = v114;
      sub_100189334();
      v90();
      sub_100178110(v91, (uint64_t *)&unk_100E73CA0);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v117, v114);
      uint64_t v123 = v114;
      ((void (*)(uint64_t, uint64_t, uint64_t))v90)(v154, v91, v114);
    }
    uint64_t v124 = v163;
    uint64_t v125 = v149;
    sub_100726E54(v116, v163, v158, v92, v149);
    sub_100162F0C();
    v126();
    sub_1007284B8(v116, (void (*)(void))type metadata accessor for MoonDetailViewState);
    uint64_t v127 = v124;
    uint64_t v128 = v164;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 32))(v164, v92, v143);
    uint64_t v129 = type metadata accessor for MoonCalendarInput();
    ((void (*)(uint64_t, void (*)(uint64_t, uint64_t), uint64_t))v165)(v128 + *(int *)(v129 + 20), v127, v123);
    sub_100189334();
    v90();
    sub_100189334();
    v90();
    sub_100246A0C(v125, v128 + *(int *)(v129 + 32));
    _s7Weather24LocationCompositionStateOwst_0(v128, 0, 1, v129);
    return (*(uint64_t (**)(void, uint64_t))(v89 + 8))(v127, v123);
  }
}

uint64_t sub_100726BB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v21 = a2;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DateComponents();
  uint64_t v18 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65238);
  uint64_t v7 = type metadata accessor for Calendar.Component();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100C25ED0;
  unint64_t v12 = v11 + v10;
  uint64_t v13 = *(void (**)(unint64_t, void, uint64_t))(v8 + 104);
  v13(v12, enum case for Calendar.Component.year(_:), v7);
  v13(v12 + v9, enum case for Calendar.Component.month(_:), v7);
  sub_1000EEDB0(v11);
  uint64_t v14 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v19, v17);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
  Calendar.date(from:)();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v6, v20);
}

uint64_t sub_100726E54@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v67 = a4;
  uint64_t v74 = a3;
  uint64_t v75 = a5;
  uint64_t v70 = a2;
  uint64_t v6 = type metadata accessor for TimeZone();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  __chkstk_darwin(v6);
  uint64_t v63 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v68 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DateComponents();
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E67240);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v63 - v21;
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v76 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v66 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v63 - v26;
  uint64_t v28 = type metadata accessor for MoonDetailViewState();
  sub_10006DF38(a1 + *(int *)(v28 + 20), (uint64_t)v16, &qword_100E67240);
  uint64_t v29 = type metadata accessor for MoonDetailSelectedDate();
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v29);
  uint64_t v71 = v8;
  uint64_t v69 = v9;
  if (v30 == 1)
  {
    sub_100178110((uint64_t)v16, &qword_100E67240);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 1, 1, v23);
LABEL_4:
    (*(void (**)(char *, void (*)(uint64_t, uint64_t), uint64_t))(v76 + 16))(v27, v70, v23);
    sub_100178110((uint64_t)v22, (uint64_t *)&unk_100E73CA0);
    goto LABEL_6;
  }
  sub_10085FC7C((uint64_t)v22);
  sub_1007284B8((uint64_t)v16, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v23);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v27, v22, v23);
LABEL_6:
  sub_10017DF08(&qword_100E65238);
  uint64_t v31 = type metadata accessor for Calendar.Component();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void *)(v32 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100C33BA0;
  unint64_t v36 = v35 + v34;
  uint64_t v37 = *(void (**)(unint64_t, void, uint64_t))(v32 + 104);
  v37(v36, enum case for Calendar.Component.year(_:), v31);
  v37(v36 + v33, enum case for Calendar.Component.month(_:), v31);
  v37(v36 + 2 * v33, enum case for Calendar.Component.day(_:), v31);
  sub_1000EEDB0(v35);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  Calendar.date(from:)();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v13, v73);
  uint64_t v38 = v27;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v23) == 1)
  {
    sub_100178110((uint64_t)v20, (uint64_t *)&unk_100E73CA0);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_1002102B0(v39, (uint64_t)qword_100F51ED0);
    uint64_t v40 = v76;
    uint64_t v41 = v66;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v66, v27, v23);
    uint64_t v42 = v68;
    uint64_t v43 = v69;
    uint64_t v44 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v67, v71);
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    int v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v48 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v78 = v74;
      *(_DWORD *)uint64_t v48 = 136446466;
      sub_100127DD0(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      LODWORD(v72) = v47;
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v77 = sub_10016414C(v49, v50, &v78);
      uint64_t v73 = (uint64_t)v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      uint64_t v76 = v40 + 8;
      uint64_t v70 = v51;
      v51((uint64_t)v41, v23);
      *(_WORD *)(v48 + 12) = 2082;
      uint64_t v67 = v48 + 14;
      uint64_t v52 = v63;
      Location.timeZone.getter();
      sub_100127DD0(&qword_100E91AA8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
      uint64_t v53 = v42;
      uint64_t v54 = v65;
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v57 = v56;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v54);
      uint64_t v77 = sub_10016414C(v55, v57, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v53, v71);
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v72, "Failed to get selected day for date %{public}s, timeZone: %{public}s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v70(v73, v23);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
      uint64_t v61 = *(void (**)(char *, uint64_t))(v40 + 8);
      v61(v41, v23);
      v61(v38, v23);
    }
    uint64_t v60 = 1;
    uint64_t v59 = v75;
  }
  else
  {
    uint64_t v58 = v76;
    (*(void (**)(char *, uint64_t))(v76 + 8))(v27, v23);
    uint64_t v59 = v75;
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v75, v20, v23);
    uint64_t v60 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v59, v60, 1, v23);
}

uint64_t type metadata accessor for MoonCalendarInputFactory()
{
  return self;
}

char *sub_100727794(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v12(&a1[a3[7]], &a2[a3[7]], v11);
    uint64_t v13 = a3[8];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v11))
    {
      uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_100727964(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  v9(a1 + a2[6], v6);
  v9(a1 + a2[7], v6);
  uint64_t v7 = a1 + a2[8];
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v6);
  }
  return result;
}

uint64_t sub_100727AA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v11((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v10))
  {
    uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100727C28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v12((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  LODWORD(v8) = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v10);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (!v8)
  {
    if (!v16)
    {
      v12(v14, v15, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
  return a1;
}

uint64_t sub_100727E1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v11((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v10))
  {
    uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100727F9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  LODWORD(v8) = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v10);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (!v8)
  {
    if (!v16)
    {
      v12(v14, v15, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
  return a1;
}

uint64_t sub_100728190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007281A4);
}

uint64_t sub_1007281A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      uint64_t v12 = *(int *)(a3 + 32);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100728248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10072825C);
}

uint64_t sub_10072825C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      uint64_t v14 = *(int *)(a4 + 32);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for MoonCalendarInput()
{
  uint64_t result = qword_100E91A60;
  if (!qword_100E91A60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100728350()
{
  type metadata accessor for Location();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      sub_1000159D8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100728458(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1007284B8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100728534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a3;
  uint64_t v65 = a2;
  uint64_t v60 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v64 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v66 = (uint64_t)&v58 - v6;
  uint64_t v7 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v7 - 8);
  uint64_t v61 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v59);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v32 - 8);
  unint64_t v34 = (char *)&v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)&v58 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for AppConfigurationState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 1, 1, v38);
  uint64_t v39 = type metadata accessor for EnvironmentState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 1, 1, v39);
  uint64_t v40 = type metadata accessor for LocationsState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 1, 1, v40);
  uint64_t v41 = type metadata accessor for NotificationsOptInState();
  uint64_t v62 = v28;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 1, 1, v41);
  uint64_t v42 = type metadata accessor for TimeState();
  uint64_t v63 = v25;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 1, 1, v42);
  sub_10021D380(v67 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v19, (void (*)(void))type metadata accessor for ViewState);
  *uint64_t v17 = v60;
  uint64_t v43 = type metadata accessor for ViewState.SecondaryViewState(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v43);
  uint64_t v44 = type metadata accessor for SearchViewState(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 1, 1, v44);
  uint64_t v45 = type metadata accessor for DisplayMetrics();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v45);
  uint64_t v46 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v47 = v61;
  _s7Weather24LocationCompositionStateOwst_0(v61, 1, 1, v46);
  swift_retain();
  sub_10011D8AC();
  sub_1001781AC(v47, &qword_100E663F8);
  sub_1001781AC((uint64_t)v11, &qword_100E66400);
  sub_1001781AC((uint64_t)v14, &qword_100E66408);
  uint64_t v48 = (uint64_t)v17;
  uint64_t v49 = (uint64_t)v64;
  sub_1001781AC(v48, &qword_100E66410);
  sub_10011E358((uint64_t)v19, (void (*)(void))type metadata accessor for ViewState);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v59);
  sub_10072A08C(v65, v49);
  uint64_t v50 = type metadata accessor for ModalViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, v50) == 1)
  {
    uint64_t v52 = v66;
    uint64_t v51 = v67;
    sub_10021D380(v67 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v66, (void (*)(void))type metadata accessor for ModalViewState);
    sub_1001781AC(v49, &qword_100E663F0);
  }
  else
  {
    uint64_t v52 = v66;
    sub_10072A0F4(v49, v66, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v51 = v67;
  }
  _s7Weather24LocationCompositionStateOwst_0(v52, 0, 1, v50);
  uint64_t v57 = v51;
  uint64_t v53 = (uint64_t)v63;
  uint64_t v54 = (uint64_t)v62;
  uint64_t v55 = sub_1001659F0(0, 3, (uint64_t)v37, (uint64_t)v34, (uint64_t)v31, 0, 0, 0, 0, (uint64_t)v62, (uint64_t)v63, (uint64_t)v22, v52, 0, 0, 0, 0, 0, 0,
          0,
          v57);
  sub_1001781AC(v52, &qword_100E663F0);
  sub_1001781AC((uint64_t)v22, &qword_100E66418);
  sub_1001781AC(v53, &qword_100E66420);
  sub_1001781AC(v54, &qword_100E66428);
  sub_1001781AC((uint64_t)v31, &qword_100E66430);
  sub_1001781AC((uint64_t)v34, &qword_100E66438);
  sub_1001781AC((uint64_t)v37, &qword_100E66440);
  return v55;
}

uint64_t sub_100728C8C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v77 = a5;
  uint64_t v84 = a4;
  uint64_t v75 = a2;
  uint64_t v6 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v85 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v80 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v10 - 8);
  uint64_t v83 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v12 - 8);
  uint64_t v81 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v14 - 8);
  uint64_t v78 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v16 - 8);
  uint64_t v79 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v18 - 8);
  uint64_t v82 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v20 - 8);
  uint64_t v76 = (uint64_t)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v22 - 8);
  uint64_t v74 = (uint64_t)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v24 - 8);
  uint64_t v86 = (uint64_t)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(qword_100E66490);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v69 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for WeatherMapPresentationState(0);
  __chkstk_darwin(v73);
  uint64_t v33 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for LocationViewerViewAction();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v69 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v69 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E65BC0);
  __chkstk_darwin(v40 - 8);
  uint64_t v42 = (char *)&v69 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10072958C(v75, (uint64_t)a3, v84, (uint64_t)v42);
  uint64_t v84 = a3;
  sub_10021D380((uint64_t)a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v39, (void (*)(void))type metadata accessor for ViewState);
  sub_10021D380(v77, (uint64_t)v36, (void (*)(void))type metadata accessor for LocationViewerViewAction);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v43 = v39[*(int *)(v37 + 40)];
    sub_10011E358((uint64_t)v36, (void (*)(void))type metadata accessor for LocationViewerViewAction);
  }
  uint64_t v71 = v37;
  uint64_t v44 = (uint64_t *)&v39[*(int *)(v37 + 36)];
  uint64_t v45 = type metadata accessor for WeatherMapTrackingState(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 1, 1, v45);
  uint64_t v69 = v33;
  uint64_t v72 = v42;
  sub_100074324(v43, v44, (uint64_t)v42, (uint64_t)v31, v33);
  sub_1001781AC((uint64_t)v31, qword_100E66490);
  uint64_t v46 = type metadata accessor for AppConfigurationState();
  uint64_t v70 = v28;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 1, 1, v46);
  uint64_t v47 = type metadata accessor for EnvironmentState();
  _s7Weather24LocationCompositionStateOwst_0(v86, 1, 1, v47);
  uint64_t v48 = type metadata accessor for LocationsState();
  uint64_t v49 = v74;
  _s7Weather24LocationCompositionStateOwst_0(v74, 1, 1, v48);
  uint64_t v50 = type metadata accessor for NotificationsOptInState();
  uint64_t v51 = v76;
  _s7Weather24LocationCompositionStateOwst_0(v76, 1, 1, v50);
  uint64_t v52 = type metadata accessor for TimeState();
  uint64_t v53 = v82;
  _s7Weather24LocationCompositionStateOwst_0(v82, 1, 1, v52);
  uint64_t v54 = type metadata accessor for ViewState.SecondaryViewState(0);
  uint64_t v55 = v78;
  _s7Weather24LocationCompositionStateOwst_0(v78, 1, 1, v54);
  uint64_t v56 = type metadata accessor for SearchViewState(0);
  uint64_t v57 = v81;
  _s7Weather24LocationCompositionStateOwst_0(v81, 1, 1, v56);
  uint64_t v58 = type metadata accessor for DisplayMetrics();
  uint64_t v59 = v83;
  _s7Weather24LocationCompositionStateOwst_0(v83, 1, 1, v58);
  uint64_t v60 = (uint64_t)v33;
  uint64_t v61 = v80;
  sub_10021D380(v60, v80, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  _s7Weather24LocationCompositionStateOwst_0(v61, 0, 1, v73);
  uint64_t v62 = (uint64_t)v79;
  sub_10011D8AC();
  sub_1001781AC(v61, &qword_100E663F8);
  sub_1001781AC(v59, &qword_100E66400);
  sub_1001781AC(v57, &qword_100E66408);
  sub_1001781AC(v55, &qword_100E66410);
  _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v71);
  uint64_t v63 = type metadata accessor for ModalViewState(0);
  uint64_t v64 = v85;
  _s7Weather24LocationCompositionStateOwst_0(v85, 1, 1, v63);
  uint64_t v65 = (uint64_t)v70;
  uint64_t v66 = v86;
  uint64_t v67 = sub_1001659F0(0, 3, (uint64_t)v70, v86, v49, 0, 0, 0, 0, v51, v53, v62, v64, 0, 0, 0, 0, 0, 0,
          0,
          (uint64_t)v84);
  sub_1001781AC(v64, &qword_100E663F0);
  sub_1001781AC(v62, &qword_100E66418);
  sub_1001781AC(v53, &qword_100E66420);
  sub_1001781AC(v51, &qword_100E66428);
  sub_1001781AC(v49, &qword_100E66430);
  sub_1001781AC(v66, &qword_100E66438);
  sub_1001781AC(v65, &qword_100E66440);
  sub_10011E358((uint64_t)v69, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_10011E358((uint64_t)v39, (void (*)(void))type metadata accessor for ViewState);
  sub_1001781AC((uint64_t)v72, &qword_100E65BC0);
  return v67;
}

uint64_t sub_10072958C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v91 = a3;
  uint64_t v95 = a2;
  uint64_t v97 = a4;
  uint64_t v5 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v5 - 8);
  uint64_t v87 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v7 - 8);
  uint64_t v85 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v86);
  uint64_t v84 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v10 - 8);
  uint64_t v89 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for Location();
  uint64_t v93 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for LocationsState();
  __chkstk_darwin(v92);
  uint64_t v96 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LocationModel();
  uint64_t v94 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v82 - v21;
  uint64_t v23 = type metadata accessor for Location.Identifier();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v82 - v28;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v32 = (char *)&v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10021D380(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v32, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v33 = 1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v23) != 1)
  {
    uint64_t v34 = v92;
    uint64_t v82 = v16;
    uint64_t v83 = v22;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v32, v23);
    uint64_t v35 = v95;
    uint64_t v36 = v96;
    sub_10021D380(v95 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v96, (void (*)(void))type metadata accessor for LocationsState);
    static CurrentLocation.placeholderIdentifier.getter();
    char v37 = static Location.Identifier.== infix(_:_:)();
    uint64_t v98 = *(void (**)(char *, uint64_t))(v24 + 8);
    v98(v26, v23);
    uint64_t v100 = v23;
    uint64_t v101 = v24 + 8;
    uint64_t v99 = v29;
    if (v37)
    {
      uint64_t v38 = sub_10017DF08(&qword_100E63878);
      uint64_t v39 = (uint64_t)v82;
      uint64_t v40 = (uint64_t)&v82[*(int *)(v38 + 48)];
      type metadata accessor for CurrentLocation();
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = type metadata accessor for LocationOfInterest();
      _s7Weather24LocationCompositionStateOwst_0(v40, 1, 1, v41);
      uint64_t v42 = v94;
      uint64_t v43 = v17;
      (*(void (**)(uint64_t, void, uint64_t))(v94 + 104))(v39, enum case for LocationModel.current(_:), v17);
      _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v17);
      uint64_t v44 = v83;
      uint64_t v46 = v90;
      uint64_t v45 = v91;
      uint64_t v47 = v93;
    }
    else
    {
      uint64_t v48 = *(void *)(v36 + *(int *)(v34 + 24));
      uint64_t v49 = *(void *)(v48 + 16);
      uint64_t v92 = v48;
      if (v49)
      {
        uint64_t v50 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
        unint64_t v51 = v48 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
        uint64_t v52 = (void (**)(char *, uint64_t))(v94 + 8);
        uint64_t v53 = *(void *)(v94 + 72);
        swift_bridgeObjectRetain();
        uint64_t v43 = v17;
        while (1)
        {
          v50(v19, v51, v43);
          LocationModel.identifier.getter();
          char v54 = static Location.Identifier.== infix(_:_:)();
          v98(v26, v100);
          if (v54) {
            break;
          }
          (*v52)(v19, v43);
          v51 += v53;
          if (!--v49) {
            goto LABEL_10;
          }
        }
        uint64_t v42 = v94;
        uint64_t v39 = (uint64_t)v82;
        (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v82, v19, v43);
        _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v43);
        swift_bridgeObjectRelease();
        uint64_t v46 = v90;
        uint64_t v45 = v91;
        uint64_t v47 = v93;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v43 = v17;
LABEL_10:
        uint64_t v39 = (uint64_t)v82;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 1, 1, v43);
        swift_bridgeObjectRelease();
        uint64_t v46 = v90;
        uint64_t v45 = v91;
        uint64_t v47 = v93;
        uint64_t v42 = v94;
      }
      uint64_t v35 = v95;
      uint64_t v44 = v83;
    }
    uint64_t v55 = (uint64_t)v89;
    sub_10011E358(v96, (void (*)(void))type metadata accessor for LocationsState);
    if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v43) == 1)
    {
      v98(v99, v100);
      uint64_t v56 = &qword_100EAC4A0;
      uint64_t v57 = v39;
LABEL_17:
      sub_1001781AC(v57, v56);
LABEL_18:
      uint64_t v33 = 1;
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v44, v39, v43);
    LocationModel.location.getter();
    if (_s7Weather24LocationCompositionStateOwet_0(v55, 1, v46) == 1)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
      v98(v99, v100);
      uint64_t v56 = &qword_100E639E8;
      uint64_t v57 = v55;
      goto LABEL_17;
    }
    uint64_t v60 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v88, v55, v46);
    uint64_t v61 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
    if (*(unsigned __int8 *)(v35 + *(int *)(type metadata accessor for ViewState(0) + 40) + v61 + 1) != 128)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v60, v46);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
      v98(v99, v100);
      goto LABEL_18;
    }
    uint64_t v62 = *(void *)(v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    uint64_t v63 = Location.id.getter();
    uint64_t v64 = (uint64_t)v87;
    sub_1001BBE9C(v63, v65, v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = type metadata accessor for LocationWeatherDataState(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v64, 1, v66) == 1)
    {
      sub_1001781AC(v64, &qword_100E63770);
      uint64_t v67 = v85;
      _s7Weather24LocationCompositionStateOwst_0(v85, 1, 1, v86);
    }
    else
    {
      uint64_t v68 = v85;
      sub_1001177B0(v85);
      uint64_t v67 = v68;
      sub_10011E358(v64, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v69 = v68;
      uint64_t v70 = v86;
      if (_s7Weather24LocationCompositionStateOwet_0(v69, 1, v86) != 1)
      {
        uint64_t v72 = v84;
        sub_10072A0F4(v67, v84, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v73 = v45;
        uint64_t v74 = v70;
        uint64_t v75 = v35 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
        swift_beginAccess();
        LOBYTE(v75) = *(unsigned char *)(v75 + 2) == 4;
        sub_1001B1E64(v73 + 7, v73[10]);
        uint64_t v76 = sub_10005DF64(v72, v75);
        uint64_t v77 = v44;
        uint64_t v78 = v93;
        uint64_t v96 = v43;
        uint64_t v80 = v79;
        sub_1001B1E64(v73 + 12, v73[15]);
        uint64_t v81 = (uint64_t)v99;
        sub_10009D708(v72 + *(int *)(v74 + 24), (uint64_t)v76, v80, (uint64_t)v99, v97);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10011E358(v72, (void (*)(void))type metadata accessor for WeatherData);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v88, v46);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v77, v96);
        uint64_t v71 = v81;
        goto LABEL_27;
      }
    }
    sub_1001781AC(v67, &qword_100E63850);
    sub_1001B1E64(v45 + 12, v45[15]);
    sub_100632BA0(v97);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v88, v46);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
    uint64_t v71 = (uint64_t)v99;
LABEL_27:
    v98((char *)v71, v100);
    uint64_t v33 = 0;
  }
LABEL_19:
  uint64_t v58 = type metadata accessor for WeatherMapOverlayKind();
  return _s7Weather24LocationCompositionStateOwst_0(v97, v33, 1, v58);
}

uint64_t sub_10072A08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E663F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10072A0F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10072A154(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663F0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v88 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E663F8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v85 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E66400);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v86 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E66408);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v84 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E66410);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = (uint64_t *)(v17 - v16);
  uint64_t v87 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v82 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E66418);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v83 = v23;
  uint64_t v24 = sub_10017DF08(&qword_100E66420);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  uint64_t v77 = v27 - v26;
  uint64_t v29 = sub_10017DF08(&qword_100E66428);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  uint64_t v78 = v32 - v31;
  uint64_t v34 = sub_10017DF08(&qword_100E66430);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_1001626E0();
  uint64_t v38 = v37 - v36;
  uint64_t v79 = v37 - v36;
  uint64_t v39 = sub_10017DF08(&qword_100E66438);
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_1001626E0();
  uint64_t v43 = v42 - v41;
  uint64_t v80 = v42 - v41;
  uint64_t v44 = sub_10017DF08(&qword_100E66440);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_1001626E0();
  uint64_t v48 = v47 - v46;
  uint64_t v81 = v47 - v46;
  uint64_t v49 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  uint64_t v50 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
  swift_retain();
  sub_1007210CC(0, 256, 2, 2, 3, 0, 0, 0, 1, 2, 0, 0, 0, 2, v50);
  swift_release();
  uint64_t v51 = sub_10072A7C4(a1);
  uint64_t v52 = type metadata accessor for AppConfigurationState();
  sub_100179C70(v48, v53, v54, v52);
  uint64_t v55 = type metadata accessor for EnvironmentState();
  sub_100179C70(v43, v56, v57, v55);
  uint64_t v58 = type metadata accessor for LocationsState();
  sub_100179C70(v38, v59, v60, v58);
  uint64_t v61 = type metadata accessor for NotificationsOptInState();
  sub_100179C70(v33, v62, v63, v61);
  uint64_t v64 = type metadata accessor for TimeState();
  _s7Weather24LocationCompositionStateOwst_0(v28, 1, 1, v64);
  sub_100113968(v49, v82, (void (*)(void))type metadata accessor for ViewState);
  *uint64_t v18 = v51;
  uint64_t v65 = type metadata accessor for ViewState.SecondaryViewState(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v65);
  uint64_t v66 = type metadata accessor for SearchViewState(0);
  sub_100179C70(v84, v67, v68, v66);
  uint64_t v69 = type metadata accessor for DisplayMetrics();
  uint64_t v72 = sub_100179C70(v86, v70, v71, v69);
  uint64_t v73 = type metadata accessor for WeatherMapPresentationState(v72);
  _s7Weather24LocationCompositionStateOwst_0(v85, 1, 1, v73);
  swift_retain();
  swift_retain();
  sub_10011D8AC();
  swift_release();
  sub_1001781AC(v85, &qword_100E663F8);
  sub_1001781AC(v86, &qword_100E66400);
  sub_1001781AC(v84, &qword_100E66408);
  sub_1001781AC((uint64_t)v18, &qword_100E66410);
  sub_10013F010(v82, (void (*)(void))type metadata accessor for ViewState);
  _s7Weather24LocationCompositionStateOwst_0(v83, 0, 1, v87);
  uint64_t v74 = type metadata accessor for ModalViewState(0);
  _s7Weather24LocationCompositionStateOwst_0(v88, 1, 1, v74);
  uint64_t v75 = sub_1001659F0(0, 3, v81, v80, v79, 0, 0, 0, 0, v78, v77, v83, v88, 0, 0, 0, 0, 0, 0, 0, a1);
  swift_release();
  swift_release();
  sub_1001781AC(v88, &qword_100E663F0);
  sub_1001781AC(v83, &qword_100E66418);
  sub_1001781AC(v77, &qword_100E66420);
  sub_1001781AC(v78, &qword_100E66428);
  sub_1001781AC(v79, &qword_100E66430);
  sub_1001781AC(v80, &qword_100E66438);
  sub_1001781AC(v81, &qword_100E66440);
  return v75;
}

uint64_t sub_10072A7C4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for ViewState(0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100113968(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v14, (void (*)(void))type metadata accessor for ViewState);
  sub_100113968((uint64_t)&v14[*(int *)(v12 + 28)], (uint64_t)v10, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  sub_10013F010((uint64_t)v14, (void (*)(void))type metadata accessor for ViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10013F010((uint64_t)v10, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    uint64_t v15 = type metadata accessor for Location.Identifier();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v15);
    type metadata accessor for LocationViewerViewState._Storage(0);
    swift_allocObject();
    return sub_1001CCEF8((uint64_t)v7, 0, 0, 2, 0, 0);
  }
  else
  {
    uint64_t v17 = *v10;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, active);
    uint64_t v16 = sub_1001CCC58((uint64_t)v4, 3, 2, 2, 2, 3, v17);
    swift_release();
    sub_1001781AC((uint64_t)v4, &qword_100E663D0);
  }
  return v16;
}

id sub_10072AA6C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController____lazy_storage___dateFormatter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    [v4 setDateStyle:1];
    [v4 setTimeStyle:1];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_10072AB08(uint64_t a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController____lazy_storage___dateFormatter] = 0;
  uint64_t v5 = OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_mapView;
  id v6 = objc_allocWithZone((Class)MKMapView);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  uint64_t v8 = &v7[OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_alert];
  uint64_t v9 = type metadata accessor for WeatherAlertEntity();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (a2) {
    uint64_t v11 = a2;
  }
  *(void *)&v7[OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_notifications] = v11;

  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for DebugIncomingWeatherAlertViewController();
  uint64_t v12 = (char *)[super initWithStyle:2];
  uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_mapView];
  uint64_t v14 = v12;
  [v13 setDelegate:v14];
  [v13 setScrollEnabled:0];
  [v13 setZoomEnabled:0];

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v14;
}

void sub_10072AC9C()
{
  *(void *)&v0[OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController____lazy_storage___dateFormatter] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_mapView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)MKMapView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10072AD44()
{
  uint64_t v2 = v0;
  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for DebugIncomingWeatherAlertViewController();
  [super viewDidLoad];
  id result = [v0 tableView];
  if (result)
  {
    id v4 = result;
    sub_10056AF64();
    swift_getObjCClassFromMetadata();
    NSString v5 = sub_10017A514();
    [v4 registerClass:v1 forCellReuseIdentifier:v5];

    sub_100164FD4();
    sub_10040BF9C(0xD000000000000016, v6, v2);
    uint64_t v7 = (void *)WeatherAlertEntity.boundingBox.getter();
    uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_mapView];
    uint64_t v9 = sub_1006D76DC(v7);
    [v8 addOverlay:v9];

    Array<A>.maxLatitude.getter();
    double v11 = v10;
    Array<A>.minLatitude.getter();
    double v13 = (v11 - v12) * 1.5;
    Array<A>.maxLongitude.getter();
    double v15 = v14;
    Array<A>.minLongitude.getter();
    double v17 = (v15 - v16) * 1.5;
    Array<A>.center.getter();
    double v19 = v18;
    double v21 = v20;
    swift_bridgeObjectRelease();
    return [v8 setRegion:0 v19, v21, v13, v17];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10072AF1C(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 5;
  }
  if (a2 == 2) {
    return *(void *)(*(void *)(v2 + OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_notifications)
  }
                     + 16);
  return a2 == 1;
}

uint64_t sub_10072AF7C(uint64_t a1, unint64_t a2)
{
  if (a2 > 2) {
    return 0;
  }
  else {
    return *(void *)&aAlert_1[8 * a2];
  }
}

void sub_10072B004()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SevereNotificationEntity();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  if (IndexPath.section.getter() != 2) {
    return;
  }
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_notifications];
  unint64_t v10 = IndexPath.row.getter();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v10 >= *(void *)(v9 + 16))
  {
LABEL_9:
    __break(1u);
    return;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v8, v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v10, v2);
  id v11 = objc_allocWithZone((Class)type metadata accessor for DebugSevereNotificationViewController());
  double v12 = (void *)sub_100569F00(v8);
  id v13 = [v1 navigationController];
  if (v13)
  {
    id v14 = v13;
    [v13 pushViewController:v12 animated:1];

    double v12 = v14;
  }
}

id sub_10072B23C()
{
  NSString v1 = sub_10017A514();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v3 = [v0 dequeueReusableCellWithIdentifier:v1 forIndexPath:isa];

  [v3 setAccessoryType:0];
  if (IndexPath.section.getter())
  {
    if (IndexPath.section.getter() == 1)
    {
      sub_10072B9FC(v3);
    }
    else if (IndexPath.section.getter() == 2)
    {
      sub_10072BA9C(v3);
    }
  }
  else
  {
    sub_10072B574(v3);
  }
  return v3;
}

CGFloat sub_10072B42C()
{
  uint64_t v0 = IndexPath.section.getter();
  CGFloat result = UITableViewAutomaticDimension;
  if (v0 == 1) {
    return 400.0;
  }
  return result;
}

uint64_t sub_10072B574(void *a1)
{
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v3 - 8);
  sub_100125FF8();
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  static UIListContentConfiguration.valueCell()();
  if (!IndexPath.row.getter())
  {
    UIListContentConfiguration.text.setter();
    WeatherAlertEntity.id.getter();
    goto LABEL_7;
  }
  if (IndexPath.row.getter() == 1)
  {
    sub_100164FD4();
    UIListContentConfiguration.text.setter();
    WeatherAlertEntity.alertIdentifier.getter();
LABEL_7:
    dispatch thunk of Column.value.getter();
    swift_release();
    goto LABEL_8;
  }
  if (IndexPath.row.getter() == 2)
  {
    sub_100164FD4();
    UIListContentConfiguration.text.setter();
    WeatherAlertEntity.channelIdentifier.getter();
    goto LABEL_7;
  }
  if (IndexPath.row.getter() != 3)
  {
    if (IndexPath.row.getter() != 4) {
      goto LABEL_9;
    }
    UIListContentConfiguration.text.setter();
    v32[0] = 0;
    v32[1] = 0xE000000000000000;
    uint64_t v17 = *(void *)(WeatherAlertEntity.boundingBox.getter() + 16);
    if (v17)
    {
      uint64_t v30 = v4;
      uint64_t v31 = a1;
      sub_1001EA6A0(0, v17, 0);
      uint64_t v18 = 0;
      do
      {
        uint64_t v19 = v17;
        uint64_t v20 = Double.description.getter();
        uint64_t v22 = v21;
        unint64_t v24 = _swiftEmptyArrayStorage[2];
        unint64_t v23 = _swiftEmptyArrayStorage[3];
        if (v24 >= v23 >> 1) {
          sub_1001EA6A0(v23 > 1, v24 + 1, 1);
        }
        ++v18;
        _swiftEmptyArrayStorage[2] = v24 + 1;
        uint64_t v25 = &_swiftEmptyArrayStorage[2 * v24];
        unsigned char v25[4] = v20;
        v25[5] = v22;
        uint64_t v17 = v19;
      }
      while (v19 != v18);
      swift_bridgeObjectRelease();
      uint64_t v4 = v30;
      a1 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_10017DF08(&qword_100E91BC0);
    sub_10012BB8C();
    uint64_t v26 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    v29._countAndFlagsBits = v26;
    v29._object = v28;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
LABEL_8:
    UIListContentConfiguration.secondaryText.setter();
LABEL_9:
    v32[3] = v4;
    v32[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    sub_100170694(v32);
    sub_1001802EC();
    v11();
    UITableViewCell.contentConfiguration.setter();
    [a1 setSelectionStyle:0];
    [a1 setAccessoryType:0];
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  }
  UIListContentConfiguration.text.setter();
  id v13 = sub_10072AA6C();
  WeatherAlertEntity.created.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v14 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v14);
  if (result != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v1, v14);
    id v16 = [v13 stringFromDate:isa];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_10072B9FC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_mapView);
  [a1 bounds];
  [v3 setFrame:0.0, 0.0];
  id v4 = [a1 contentView];
  [v4 addSubview:v3];
}

unint64_t sub_10072BA9C(void *a1)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v40 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for SevereNotificationEntity();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100125FF8();
  uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC7Weather39DebugIncomingWeatherAlertViewController_notifications);
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (result >= *(void *)(v18 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001802EC();
  v20();
  static UIListContentConfiguration.subtitleCell()();
  SevereNotificationEntity.id.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  UIListContentConfiguration.text.setter();
  uint64_t v21 = (void (*)(uint64_t))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontSizeToFitWidth.setter();
  uint64_t v22 = sub_1001A0D30();
  v21(v22);
  unint64_t v23 = (void (*)(uint64_t))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.numberOfLines.setter();
  uint64_t v24 = sub_1001A0D30();
  v23(v24);
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v41[0] = 0x203A65746144;
  v41[1] = 0xE600000000000000;
  id v25 = sub_10072AA6C();
  SevereNotificationEntity.date.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v26 = type metadata accessor for Date();
  unint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v26);
  if (result != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v7, v26);
    id v28 = [v25 stringFromDate:isa];

    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    v32._countAndFlagsBits = v29;
    v32._object = v31;
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    sub_100164FD4();
    v33._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v33);
    SevereNotificationEntity.subscription.getter();
    dispatch thunk of Column.value.getter();
    swift_release();
    unint64_t v34 = sub_100633398(v41[5], v41[6]);
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    v37._countAndFlagsBits = v34;
    v37._object = v36;
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    UIListContentConfiguration.secondaryText.setter();
    uint64_t v38 = (void (*)(uint64_t *, void))UIListContentConfiguration.secondaryTextProperties.modify();
    UIListContentConfiguration.TextProperties.numberOfLines.setter();
    v38(v41, 0);
    v41[3] = v40;
    v41[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    sub_100170694(v41);
    sub_1001802EC();
    v39();
    UITableViewCell.contentConfiguration.setter();
    [a1 setAccessoryType:1];
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v40);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v2, v14);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10072BEB4()
{
}

void sub_10072BEF4()
{
}

id sub_10072BF4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugIncomingWeatherAlertViewController();
  [super dealloc];
}

uint64_t sub_10072C024()
{
  return type metadata accessor for DebugIncomingWeatherAlertViewController();
}

uint64_t type metadata accessor for DebugIncomingWeatherAlertViewController()
{
  uint64_t result = qword_100E91BA8;
  if (!qword_100E91BA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10072C074()
{
  uint64_t result = type metadata accessor for WeatherAlertEntity();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AddLocationContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10072C268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddLocationContext()
{
  return &type metadata for AddLocationContext;
}

uint64_t *sub_10072C2F4(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_10072C5D8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          uint64_t v12 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_11;
      case 1u:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)a1 + *(int *)(v8 + 48)) = a2[*(int *)(v8 + 48)];
        goto LABEL_11;
      case 2u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 5u:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 6u:
        uint64_t v9 = *(void *)a2;
        uint64_t v10 = *((void *)a2 + 1);
        unsigned __int8 v11 = a2[16];
        sub_10015458C(v9, v10, v11);
        *a1 = v9;
        a1[1] = v10;
        *((unsigned char *)a1 + 16) = v11;
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10072C5D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationsAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *sub_10072C634(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for Location();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = sub_10017DF08(&qword_100E6F628);
    a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for CurrentLocation();
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *sub_10072C84C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10072C5D8((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_10017DF08(&qword_100E6F628);
      a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for CurrentLocation();
      if (swift_getEnumCaseMultiPayload() > 2)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        uint64_t v10 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_10072CA74(uint64_t a1, char a2)
{
}

uint64_t sub_10072CA9C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CB0360)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_10072CB24()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_10072CB40(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E91C88);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_10072CF4C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

Swift::Int sub_10072CC44(char a1)
{
  return Hasher._finalize()();
}

uint64_t sub_10072CC8C(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E91C78);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v9 = sub_1001B1E64(a1, a1[3]);
  sub_10072CF4C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    unsigned __int8 v9 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v9 & 1;
}

uint64_t sub_10072CDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10072CA9C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10072CDE4(uint64_t a1)
{
  unint64_t v2 = sub_10072CF4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10072CE20(uint64_t a1)
{
  unint64_t v2 = sub_10072CF4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10072CE5C()
{
  return sub_10072CC44(*v0);
}

void sub_10072CE64(uint64_t a1)
{
  sub_10072CA74(a1, *v1);
}

Swift::Int sub_10072CE6C()
{
  Swift::UInt8 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10072CEB0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10072CC8C(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_10072CEE0(void *a1)
{
  return sub_10072CB40(a1);
}

unint64_t sub_10072CF00()
{
  unint64_t result = qword_100E91C70;
  if (!qword_100E91C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91C70);
  }
  return result;
}

unint64_t sub_10072CF4C()
{
  unint64_t result = qword_100E91C80;
  if (!qword_100E91C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91C80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AddLocationContext.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10072D034);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AddLocationContext.CodingKeys()
{
  return &type metadata for AddLocationContext.CodingKeys;
}

unint64_t sub_10072D070()
{
  unint64_t result = qword_100E91C90;
  if (!qword_100E91C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91C90);
  }
  return result;
}

unint64_t sub_10072D0C0()
{
  unint64_t result = qword_100E91C98;
  if (!qword_100E91C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91C98);
  }
  return result;
}

unint64_t sub_10072D110()
{
  unint64_t result = qword_100E91CA0;
  if (!qword_100E91CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91CA0);
  }
  return result;
}

uint64_t ReportWeatherMonitor.deinit()
{
  return v0;
}

uint64_t type metadata accessor for LocationRowPreviewViewController(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E91D68);
}

uint64_t sub_10072D184()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10072D1E0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100163444();
  swift_release();

  return swift_release();
}

uint64_t sub_10072D250()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100163444();
  swift_release();

  return swift_release();
}

void sub_10072D2B4()
{
  sub_100162EA0();
  uint64_t v26 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for WeatherMapPreviewLocationState();
  sub_10017C83C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100158494();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for Location();
  sub_10017C83C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = *(void (**)(void))(v6 + 16);
  sub_100189340();
  v18();
  uint64_t v19 = sub_1001D1D34();
  if (v20(v19) == enum case for WeatherMapPreviewLocationState.loaded(_:))
  {
    uint64_t v21 = sub_1001D1D34();
    v22(v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v17, v10, v11);
    sub_100BA4CAC(v17);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
  }
  else
  {
    uint64_t v23 = sub_1001D1D34();
    v24(v23);
  }
  sub_100189340();
  v18();
  sub_10072D490(v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v4);
  sub_100162694();
}

uint64_t sub_10072D490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapPreviewLocationState();
  sub_10017C83C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v8, a1, v2);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

#error "10072D5C8: call analysis failed (funcsize=33)"

void sub_10072D620(uint64_t a1, uint64_t a2, void *a3)
{
}

id sub_10072D63C()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  [super viewWillLayoutSubviews];
  id result = [v0 view];
  if (result)
  {
    uint64_t v2 = result;
    [result sizeToFit];

    id result = [v0 view];
    if (result)
    {
      uint64_t v3 = result;
      [result frame];
      double v5 = v4;
      double v7 = v6;

      return [v0 setPreferredContentSize:v5, v7];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10072D710(void *a1)
{
  id v1 = a1;
  sub_10072D63C();
}

void sub_10072D758()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [self clearColor];
    [v2 setBackgroundColor:v3];
  }
  else
  {
    __break(1u);
  }
}

void sub_10072D7FC(void *a1)
{
  id v1 = a1;
  sub_10072D758();
}

void sub_10072D844()
{
}

void sub_10072D874()
{
}

uint64_t sub_10072D8A4()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_10072D8F4()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_10072D950()
{
  return type metadata accessor for LocationRowPreviewViewController(0);
}

void (*sub_10072D960(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  void *v3 = v1;
  uint64_t v4 = type metadata accessor for WeatherMapPreviewLocationState();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  sub_10072D1E0();
  return sub_10072DA28;
}

void sub_10072DA28(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_10072D2B4();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    sub_10072D2B4();
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_10072DADC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapPreviewLocationState();
  __n128 v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return sub_10072D490((uint64_t)v5);
}

uint64_t sub_10072DBA8()
{
  sub_10017DF08(&qword_100E91F28);
  sub_100162E4C();
  uint64_t v0 = sub_100162728();
  v1(v0);

  return swift_deallocClassInstance();
}

uint64_t sub_10072DC3C()
{
  return type metadata accessor for LocationStateObservable(0);
}

uint64_t type metadata accessor for LocationStateObservable(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E91DE8);
}

void sub_10072DC64()
{
  sub_10072DCF4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10072DCF4()
{
  if (!qword_100E91DF8)
  {
    type metadata accessor for WeatherMapPreviewLocationState();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E91DF8);
    }
  }
}

uint64_t destroy for LocationRowPreview(uint64_t a1)
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 96);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 136);
}

uint64_t initializeWithCopy for LocationRowPreview(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = a2 + 40;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 40, v5, v7);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  long long v9 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v9;
  uint64_t v10 = v9;
  uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_unknownObjectRetain();
  v11(a1 + 96, a2 + 96, v10);
  long long v12 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 160) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 136, a2 + 136);
  return a1;
}

uint64_t *assignWithCopy for LocationRowPreview(uint64_t *a1, uint64_t *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 5, a2 + 5);
  uint64_t v4 = a2[11];
  a1[10] = a2[10];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[11] = v4;
  sub_1000C1E18(a1 + 12, a2 + 12);
  sub_1000C1E18(a1 + 17, a2 + 17);
  return a1;
}

void *initializeWithTake for LocationRowPreview(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t assignWithTake for LocationRowPreview(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_unknownObjectRelease();
  *(void *)(a1 + 88) = v6;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 136);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationRowPreview(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 176))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationRowPreview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationRowPreview()
{
  return &type metadata for LocationRowPreview;
}

uint64_t sub_10072E14C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10072E168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = sub_10017DF08(&qword_100E91F28);
  sub_10017C83C();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_1001626E0();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = type metadata accessor for WeatherMapPreviewLocationState();
  sub_10017C83C();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_100158494();
  __n128 v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&a9 - v37;
  uint64_t v39 = v20 + OBJC_IVAR____TtC7Weather23LocationStateObservable__locationState;
  (*(void (**)(char *, void, uint64_t, __n128))(v33 + 104))((char *)&a9 - v37, enum case for WeatherMapPreviewLocationState.loading(_:), v31, v36);
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v21, v38, v31);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v31);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v39, v30, v24);
  sub_100162694();
}

void sub_10072E2E4()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v92 = v2;
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EF8();
  uint64_t v74 = v4;
  __chkstk_darwin(v5);
  uint64_t v7 = sub_100109328((uint64_t)&v72 - v6);
  uint64_t v8 = type metadata accessor for ListLocationViewModel(v7);
  __chkstk_darwin(v8 - 8);
  sub_100109314();
  uint64_t v10 = sub_100109328(v9);
  uint64_t v11 = (int *)type metadata accessor for ListLocationRowView(v10);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = (uint64_t *)(v14 - v13);
  uint64_t v77 = sub_10017DF08(&qword_100E91E80);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v79 = v17;
  uint64_t v81 = sub_10017DF08(&qword_100E91E88);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v78 = v19;
  __chkstk_darwin(v20);
  sub_100109328((uint64_t)&v72 - v21);
  type metadata accessor for Location();
  sub_10017C83C();
  uint64_t v89 = v23;
  uint64_t v90 = v22;
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v88 = v24;
  uint64_t v86 = sub_10017DF08(&qword_100E91E90);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v87 = v26;
  uint64_t v83 = sub_10017DF08(&qword_100E91E98);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v84 = v28;
  uint64_t v91 = sub_10017DF08(&qword_100E91EA0);
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v85 = v30;
  uint64_t v82 = sub_10017DF08(&qword_100E91EA8);
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_1001626E0();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = type metadata accessor for WeatherMapPreviewLocationState();
  sub_10017C83C();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  sub_1001626E0();
  uint64_t v41 = v40 - v39;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 88))(v41, v35);
  if (v42 == enum case for WeatherMapPreviewLocationState.loaded(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v37 + 96))(v41, v35);
    uint64_t v43 = v88;
    (*(void (**)(void *, uint64_t, uint64_t))(v89 + 32))(v88, v41, v90);
    long long v72 = *(_OWORD *)(v1 + 80);
    sub_10020D948(v1 + 136, (uint64_t)v99);
    sub_1001B1E64((void *)(v1 + 40), *(void *)(v1 + 64));
    swift_unknownObjectRetain();
    uint64_t v44 = v76;
    sub_1006A1468(v43, v76);
    uint64_t v45 = type metadata accessor for Location.Identifier();
    uint64_t v46 = v75;
    _s7Weather24LocationCompositionStateOwst_0(v75, 1, 1, v45);
    uint64_t v47 = v46 + *(int *)(active + 20);
    *(void *)uint64_t v47 = 0;
    *(unsigned char *)(v47 + 8) = 1;
    uint64_t v48 = v74;
    sub_10072F5FC(v46, v74, (void (*)(void))type metadata accessor for ActiveLocationModel);
    sub_10017DF08((uint64_t *)&unk_100EAAA90);
    uint64_t v49 = swift_allocObject();
    sub_10072F59C(v48, v49 + *(void *)(*(void *)v49 + 120), (void (*)(void))type metadata accessor for ActiveLocationModel);
    sub_10017DF08(&qword_100E649E0);
    swift_storeEnumTagMultiPayload();
    sub_10072F650(v46, (void (*)(void))type metadata accessor for ActiveLocationModel);
    uint64_t v75 = Namespace.wrappedValue.getter();
    char v94 = 0;
    static Binding.constant(_:)();
    uint64_t v50 = v96;
    uint64_t v51 = v97;
    LOBYTE(v48) = v98;
    uint64_t *v15 = swift_getKeyPath();
    sub_10017DF08(&qword_100E62D60);
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = (char *)v15 + v11[5];
    char v93 = 0;
    State.init(wrappedValue:)();
    uint64_t v53 = v95;
    *uint64_t v52 = v94;
    *((void *)v52 + 1) = v53;
    *(_OWORD *)((char *)v15 + v11[6]) = v72;
    sub_1001262E4(v99, (uint64_t)v15 + v11[7]);
    sub_10072F59C(v44, (uint64_t)v15 + v11[8], (void (*)(void))type metadata accessor for ListLocationViewModel);
    uint64_t v54 = (uint64_t *)((char *)v15 + v11[9]);
    sub_1001246C8(&qword_100E64A08, (uint64_t *)&unk_100EAAA90);
    uint64_t *v54 = ObservedObject.init(wrappedValue:)();
    v54[1] = v55;
    *(uint64_t *)((char *)v15 + v11[10]) = v75;
    uint64_t v56 = (void (__swiftcall **)())((char *)v15 + v11[11]);
    *uint64_t v56 = LocationSearchEntityFromStringResolver.init();
    v56[1] = 0;
    uint64_t v57 = (char *)v15 + v11[12];
    *(void *)uint64_t v57 = v50;
    *((void *)v57 + 1) = v51;
    v57[16] = v48;
    type metadata accessor for LocationViewCollisionOptions();
    swift_allocObject();
    uint64_t v58 = sub_10003E10C();
    sub_10072F54C(&qword_100E6D0B8, (void (*)(uint64_t))type metadata accessor for LocationViewCollisionOptions);
    uint64_t v59 = static ObservableObject.environmentStore.getter();
    uint64_t v60 = v79;
    sub_10072F5FC((uint64_t)v15, v79, (void (*)(void))type metadata accessor for ListLocationRowView);
    uint64_t v61 = (uint64_t *)(v60 + *(int *)(v77 + 36));
    *uint64_t v61 = v59;
    v61[1] = v58;
    sub_10072F650((uint64_t)v15, (void (*)(void))type metadata accessor for ListLocationRowView);
    uint64_t v62 = static Color.white.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v64 = v78;
    sub_10006DF38(v60, v78, &qword_100E91E80);
    uint64_t v65 = (uint64_t *)(v64 + *(int *)(v81 + 36));
    uint64_t *v65 = KeyPath;
    v65[1] = v62;
    sub_100178160(v60, &qword_100E91E80);
    uint64_t v66 = v80;
    sub_10072F6A8(v64, v80);
    sub_10006DF38(v66, v84, &qword_100E91E88);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E91EB8, &qword_100E91EA8);
    sub_10072F3DC();
    uint64_t v67 = v85;
    _ConditionalContent<>.init(storage:)();
    sub_10006DF38(v67, v87, &qword_100E91EA0);
    swift_storeEnumTagMultiPayload();
    sub_10072F33C();
    _ConditionalContent<>.init(storage:)();
    sub_100178160(v67, &qword_100E91EA0);
    sub_100178160(v66, &qword_100E91E88);
    (*(void (**)(void *, uint64_t))(v89 + 8))(v88, v90);
  }
  else
  {
    uint64_t v68 = v84;
    uint64_t v69 = v85;
    uint64_t v70 = v87;
    if (v42 == enum case for WeatherMapPreviewLocationState.loading(_:))
    {
      *(void *)uint64_t v34 = static VerticalAlignment.center.getter();
      *(void *)(v34 + 8) = 0;
      *(unsigned char *)(v34 + 16) = 1;
      uint64_t v71 = sub_10017DF08(&qword_100E91ED8);
      sub_10072ED34(v34 + *(int *)(v71 + 44));
      sub_10006DF38(v34, v68, &qword_100E91EA8);
      swift_storeEnumTagMultiPayload();
      sub_1001246C8(&qword_100E91EB8, &qword_100E91EA8);
      sub_10072F3DC();
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v69, v70, &qword_100E91EA0);
      swift_storeEnumTagMultiPayload();
      sub_10072F33C();
      _ConditionalContent<>.init(storage:)();
      sub_100178160(v69, &qword_100E91EA0);
      sub_100178160(v34, &qword_100E91EA8);
    }
    else
    {
      swift_storeEnumTagMultiPayload();
      sub_10072F33C();
      _ConditionalContent<>.init(storage:)();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v35);
    }
  }
  sub_100162694();
}

uint64_t sub_10072ED34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E91EE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v22 - v6);
  uint64_t v8 = sub_10017DF08(&qword_100E91EE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  *(void *)uint64_t v13 = static HorizontalAlignment.center.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 1;
  uint64_t v14 = &v13[*(int *)(sub_10017DF08(&qword_100E91EF0) + 44)];
  uint64_t *v7 = static Alignment.center.getter();
  v7[1] = v15;
  uint64_t v16 = sub_10017DF08(&qword_100E91EF8);
  sub_10072EF5C((uint64_t *)((char *)v7 + *(int *)(v16 + 44)));
  sub_10006DF38((uint64_t)v7, (uint64_t)v4, &qword_100E91EE0);
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  uint64_t v17 = sub_10017DF08(&qword_100E91F00);
  sub_10006DF38((uint64_t)v4, (uint64_t)&v14[*(int *)(v17 + 48)], &qword_100E91EE0);
  uint64_t v18 = &v14[*(int *)(v17 + 64)];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  sub_100178160((uint64_t)v7, &qword_100E91EE0);
  sub_100178160((uint64_t)v4, &qword_100E91EE0);
  sub_10006DF38((uint64_t)v13, (uint64_t)v10, &qword_100E91EE8);
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v19 = sub_10017DF08(&qword_100E91F08);
  sub_10006DF38((uint64_t)v10, a1 + *(int *)(v19 + 48), &qword_100E91EE8);
  uint64_t v20 = a1 + *(int *)(v19 + 64);
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  sub_100178160((uint64_t)v13, &qword_100E91EE8);
  return sub_100178160((uint64_t)v10, &qword_100E91EE8);
}

uint64_t sub_10072EF5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E8CC78);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E91F10);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v22 = static Color.clear.getter();
  ProgressView<>.init<>()();
  CircularProgressViewStyle.init()();
  sub_1001246C8(&qword_100E8CCA8, &qword_100E8CC78);
  sub_10072F54C(&qword_100E8CCB0, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
  View.progressViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  uint64_t v16 = v24;
  *uint64_t v24 = v22;
  *((_WORD *)v16 + 4) = 256;
  uint64_t v17 = v16;
  uint64_t v18 = sub_10017DF08(&qword_100E91F18);
  v15((char *)v17 + *(int *)(v18 + 48), v11, v8);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v19(v14, v8);
  v19(v11, v8);
  return swift_release();
}

uint64_t sub_10072F2BC(uint64_t a1)
{
  uint64_t result = sub_10072F54C(&qword_100E91E78, (void (*)(uint64_t))type metadata accessor for LocationRowPreviewViewController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10072F314()
{
  return sub_10072D250();
}

unint64_t sub_10072F33C()
{
  unint64_t result = qword_100E91EB0;
  if (!qword_100E91EB0)
  {
    sub_10018C6DC(&qword_100E91EA0);
    sub_1001246C8(&qword_100E91EB8, &qword_100E91EA8);
    sub_10072F3DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91EB0);
  }
  return result;
}

unint64_t sub_10072F3DC()
{
  unint64_t result = qword_100E91EC0;
  if (!qword_100E91EC0)
  {
    sub_10018C6DC(&qword_100E91E88);
    sub_10072F47C();
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91EC0);
  }
  return result;
}

unint64_t sub_10072F47C()
{
  unint64_t result = qword_100E91EC8;
  if (!qword_100E91EC8)
  {
    sub_10018C6DC(&qword_100E91E80);
    sub_10072F54C(&qword_100E91ED0, (void (*)(uint64_t))type metadata accessor for ListLocationRowView);
    sub_1001246C8(&qword_100E6D0E0, &qword_100E6D0E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91EC8);
  }
  return result;
}

uint64_t sub_10072F54C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10072F59C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10072F5FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10072F650(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

uint64_t sub_10072F6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E91E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10072F710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  sub_100162EA0();
  uint64_t v25 = v24;
  uint64_t v46 = v26;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v48 = a21;
  uint64_t v49 = a23;
  uint64_t v39 = sub_100170694(v47);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a21 - 8) + 32))(v39, v38, a21);
  uint64_t v40 = (char *)objc_allocWithZone(v25);
  sub_1000DF0C4((uint64_t)v47, v48);
  sub_10017C83C();
  __chkstk_darwin(v41);
  sub_1001626E0();
  uint64_t v44 = (uint64_t *)(v43 - v42);
  (*(void (**)(uint64_t))(v45 + 16))(v43 - v42);
  sub_10072F85C(*v44, v36, v34, v32, v30, v28, v46, v40, a22, a24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v47);
  sub_100162694();
}

void *sub_10072F85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, uint64_t a9, uint64_t a10)
{
  v40[3] = type metadata accessor for LocationRowViewModelProvider();
  v40[4] = &off_100E1FB00;
  v40[0] = a1;
  uint64_t v17 = qword_100E91D50;
  type metadata accessor for LocationStateObservable(0);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = a8;
  sub_10072E168((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, a10, a4, v35[0], v35[1], v35[2], v35[3], v35[4], v35[5], v35[6], v35[7], v35[8],
    v35[9]);
  *(void *)&a8[v17] = v18;
  sub_10020D948((uint64_t)v40, (uint64_t)v37);
  sub_10020D948(a6, (uint64_t)&v38);
  sub_10020D948(a7, (uint64_t)&v39);
  v36[0] = 0;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_10017DF08(&qword_100E64998);
  sub_1001246C8(&qword_100E649A0, &qword_100E64998);
  v36[1] = ObservedObject.init(wrappedValue:)();
  v36[2] = v27;
  sub_10072F54C(&qword_100E91F20, (void (*)(uint64_t))type metadata accessor for LocationStateObservable);
  _OWORD v36[3] = ObservedObject.init(wrappedValue:)();
  v36[4] = v28;
  v37[5] = a5;
  v37[6] = v32;
  *(void *)&v19[qword_100E91D60] = a2;
  uint64_t v29 = &v19[qword_100E91D58];
  *(void *)uint64_t v29 = a3;
  *((void *)v29 + 1) = v34;
  swift_retain();
  swift_unknownObjectRetain();

  sub_10072FA94((uint64_t)v36, (uint64_t)v35);
  uint64_t v30 = (void *)UIHostingController.init(rootView:)();
  [v30 setPreferredContentSize:CGSizeMake(0.0, 112.0)];
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v40);
  sub_10072FACC((uint64_t)v36);
  return v30;
}

uint64_t sub_10072FA94(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10072FACC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10072FB00()
{
  unint64_t result = qword_100E91F30;
  if (!qword_100E91F30)
  {
    sub_10018C6DC(&qword_100E91F38);
    sub_10072F33C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E91F30);
  }
  return result;
}

uint64_t sub_10072FB7C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v65 = *a2;
    *(void *)a1 = *a2;
    uint64_t v64 = v65 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = a2[10];
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
    uint64_t v10 = (void *)a2[14];
    uint64_t v138 = (void *)a2[13];
    uint64_t v11 = a2[15];
    unsigned __int8 v12 = *((unsigned char *)a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10027D4F8(v138, v10, v11, v12);
    *(void *)(a1 + 104) = v138;
    *(void *)(a1 + 112) = v10;
    *(void *)(a1 + 120) = v11;
    *(unsigned char *)(a1 + 128) = v12;
    uint64_t v13 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v13;
    uint64_t v14 = a2[19];
    *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
    uint64_t v15 = a3[12];
    uint64_t v16 = a1 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    *(void *)(a1 + 152) = v14;
    uint64_t v18 = type metadata accessor for Date();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    uint64_t v20 = (int *)type metadata accessor for PeakUpperMarkModel(0);
    *(void *)(v16 + v20[5]) = *(void *)(v17 + v20[5]);
    uint64_t v21 = v20[6];
    uint64_t v22 = (void *)(v16 + v21);
    uint64_t v23 = (void *)(v17 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v20[7];
    uint64_t v26 = (void *)(v16 + v25);
    uint64_t v27 = (void *)(v17 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = v20[8];
    uint64_t v30 = (void *)(v16 + v29);
    uint64_t v31 = (void *)(v17 + v29);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = a3[13];
    uint64_t v34 = a1 + v33;
    uint64_t v35 = (uint64_t)a2 + v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v137 = (void (*)(uint64_t, char *, uint64_t))v19;
    uint64_t v139 = v18;
    v19(v34, v35, v18);
    *(void *)(v34 + v20[5]) = *(void *)(v35 + v20[5]);
    uint64_t v36 = v20[6];
    uint64_t v37 = (void *)(v34 + v36);
    uint64_t v38 = (void *)(v35 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = v20[7];
    uint64_t v41 = (void *)(v34 + v40);
    uint64_t v42 = (void *)(v35 + v40);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = v20[8];
    uint64_t v45 = (void *)(v34 + v44);
    uint64_t v46 = (void *)(v35 + v44);
    uint64_t v47 = v46[1];
    void *v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = a3[14];
    uint64_t v136 = a1;
    uint64_t v49 = a1 + v48;
    uint64_t v50 = (uint64_t)a2 + v48;
    type metadata accessor for DetailHeroChartLollipopModel(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v49 = *(void *)v50;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v52 = *(int *)(active + 20);
      uint64_t v53 = v49 + v52;
      uint64_t v54 = v50 + v52;
      v19(v49 + v52, v50 + v52, v18);
      uint64_t v55 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)(v53 + v55[5]) = *(void *)(v54 + v55[5]);
      *(void *)(v53 + v55[6]) = *(void *)(v54 + v55[6]);
      *(void *)(v53 + v55[7]) = *(void *)(v54 + v55[7]);
      uint64_t v56 = *(int *)(active + 24);
      uint64_t v57 = v49 + v56;
      uint64_t v58 = v50 + v56;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v71 = *(void *)(v58 + 8);
        *(void *)uint64_t v57 = *(void *)v58;
        *(void *)(v57 + 8) = v71;
        long long v72 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v73 = v72[5];
        uint64_t v74 = v57 + v73;
        uint64_t v75 = v58 + v73;
        uint64_t v76 = type metadata accessor for AttributedString();
        uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        uint64_t v78 = v72[6];
        uint64_t v79 = (void *)(v57 + v78);
        uint64_t v80 = (void *)(v58 + v78);
        uint64_t v81 = v80[1];
        *uint64_t v79 = *v80;
        v79[1] = v81;
        uint64_t v82 = v72[7];
        uint64_t v83 = (void *)(v57 + v82);
        uint64_t v84 = (void *)(v58 + v82);
        uint64_t v85 = v84[1];
        *uint64_t v83 = *v84;
        v83[1] = v85;
        uint64_t v86 = v72[8];
        uint64_t v87 = (void *)(v57 + v86);
        uint64_t v88 = (void *)(v58 + v86);
        uint64_t v89 = v88[1];
        *uint64_t v87 = *v88;
        v87[1] = v89;
        uint64_t v90 = v72[9];
        uint64_t v91 = (void *)(v57 + v90);
        uint64_t v92 = (void *)(v58 + v90);
        uint64_t v93 = v92[1];
        *uint64_t v91 = *v92;
        v91[1] = v93;
        uint64_t v94 = v72[10];
        uint64_t v95 = (void *)(v57 + v94);
        uint64_t v96 = (void *)(v58 + v94);
        uint64_t v97 = v96[1];
        *uint64_t v95 = *v96;
        v95[1] = v97;
        uint64_t v98 = v72[11];
        uint64_t v99 = v139;
        *(unsigned char *)(v57 + v98) = *(unsigned char *)(v58 + v98);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v64 = v136;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v60 = *(void *)(v58 + 8);
          *(void *)uint64_t v57 = *(void *)v58;
          *(void *)(v57 + 8) = v60;
          uint64_t v61 = *(void *)(v58 + 24);
          *(void *)(v57 + 16) = *(void *)(v58 + 16);
          *(void *)(v57 + 24) = v61;
          uint64_t v62 = *(void *)(v58 + 40);
          *(void *)(v57 + 32) = *(void *)(v58 + 32);
          *(void *)(v57 + 40) = v62;
          uint64_t v63 = *(void *)(v58 + 56);
          *(void *)(v57 + 48) = *(void *)(v58 + 48);
          *(void *)(v57 + 56) = v63;
          *(unsigned char *)(v57 + 64) = *(unsigned char *)(v58 + 64);
          *(unsigned char *)(v57 + 65) = *(unsigned char *)(v58 + 65);
          swift_bridgeObjectRetain();
          uint64_t v64 = v136;
        }
        else
        {
          uint64_t v64 = v136;
          uint64_t v100 = *(void *)(v58 + 8);
          *(void *)uint64_t v57 = *(void *)v58;
          *(void *)(v57 + 8) = v100;
          uint64_t v101 = *(void *)(v58 + 24);
          *(void *)(v57 + 16) = *(void *)(v58 + 16);
          *(void *)(v57 + 24) = v101;
          uint64_t v102 = *(void *)(v58 + 40);
          *(void *)(v57 + 32) = *(void *)(v58 + 32);
          *(void *)(v57 + 40) = v102;
        }
        uint64_t v99 = v139;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      uint64_t v103 = a3;
    }
    else
    {
      type metadata accessor for LollipopDetailViewModel(0);
      int v66 = swift_getEnumCaseMultiPayload();
      if (v66 == 2)
      {
        uint64_t v104 = *(void *)(v50 + 8);
        *(void *)uint64_t v49 = *(void *)v50;
        *(void *)(v49 + 8) = v104;
        unint64_t v105 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v106 = v105[5];
        uint64_t v107 = v49 + v106;
        uint64_t v108 = v50 + v106;
        uint64_t v109 = type metadata accessor for AttributedString();
        uint64_t v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 16);
        swift_bridgeObjectRetain();
        v110(v107, v108, v109);
        uint64_t v111 = v105[6];
        uint64_t v112 = (void *)(v49 + v111);
        uint64_t v113 = (void *)(v50 + v111);
        uint64_t v114 = v113[1];
        *uint64_t v112 = *v113;
        v112[1] = v114;
        uint64_t v115 = v105[7];
        uint64_t v116 = (void *)(v49 + v115);
        uint64_t v117 = (void *)(v50 + v115);
        uint64_t v118 = v117[1];
        *uint64_t v116 = *v117;
        v116[1] = v118;
        uint64_t v119 = v105[8];
        uint64_t v120 = (void *)(v49 + v119);
        uint64_t v121 = (void *)(v50 + v119);
        uint64_t v122 = v121[1];
        *uint64_t v120 = *v121;
        v120[1] = v122;
        uint64_t v123 = v105[9];
        uint64_t v124 = (void *)(v49 + v123);
        uint64_t v125 = (void *)(v50 + v123);
        uint64_t v126 = v125[1];
        void *v124 = *v125;
        v124[1] = v126;
        uint64_t v127 = v105[10];
        uint64_t v128 = (void *)(v49 + v127);
        uint64_t v129 = (void *)(v50 + v127);
        uint64_t v130 = v129[1];
        *uint64_t v128 = *v129;
        v128[1] = v130;
        uint64_t v131 = v105[11];
        uint64_t v103 = a3;
        *(unsigned char *)(v49 + v131) = *(unsigned char *)(v50 + v131);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v64 = v136;
      }
      else
      {
        if (v66 == 1)
        {
          uint64_t v67 = *(void *)(v50 + 8);
          *(void *)uint64_t v49 = *(void *)v50;
          *(void *)(v49 + 8) = v67;
          uint64_t v68 = *(void *)(v50 + 24);
          *(void *)(v49 + 16) = *(void *)(v50 + 16);
          *(void *)(v49 + 24) = v68;
          uint64_t v69 = *(void *)(v50 + 40);
          *(void *)(v49 + 32) = *(void *)(v50 + 32);
          *(void *)(v49 + 40) = v69;
          uint64_t v70 = *(void *)(v50 + 56);
          *(void *)(v49 + 48) = *(void *)(v50 + 48);
          *(void *)(v49 + 56) = v70;
          *(unsigned char *)(v49 + 64) = *(unsigned char *)(v50 + 64);
          *(unsigned char *)(v49 + 65) = *(unsigned char *)(v50 + 65);
          swift_bridgeObjectRetain();
          uint64_t v64 = v136;
        }
        else
        {
          uint64_t v64 = a1;
          uint64_t v132 = *(void *)(v50 + 8);
          *(void *)uint64_t v49 = *(void *)v50;
          *(void *)(v49 + 8) = v132;
          uint64_t v133 = *(void *)(v50 + 24);
          *(void *)(v49 + 16) = *(void *)(v50 + 16);
          *(void *)(v49 + 24) = v133;
          uint64_t v134 = *(void *)(v50 + 40);
          *(void *)(v49 + 32) = *(void *)(v50 + 32);
          *(void *)(v49 + 40) = v134;
        }
        uint64_t v103 = a3;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      uint64_t v99 = v139;
    }
    swift_storeEnumTagMultiPayload();
    v137(v64 + v103[15], (char *)a2 + v103[15], v99);
    v137(v64 + v103[16], (char *)a2 + v103[16], v99);
  }
  return v64;
}

uint64_t sub_1007302A0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(a1 + 104), *(void **)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[12];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v13)((void *)(v5 - 8), v4, v5);
  type metadata accessor for PeakUpperMarkModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13(a1 + a2[13], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[14];
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v13(v6 + *(int *)(active + 20), v5);
    v6 += *(int *)(active + 24);
  }
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    uint64_t v10 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_10:
  v13(a1 + a2[15], v5);
  uint64_t v11 = a1 + a2[16];

  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v5);
}

uint64_t sub_1007305B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 120);
  uint64_t v133 = *(void **)(a2 + 112);
  uint64_t v134 = *(void **)(a2 + 104);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v134, v133, v10, v11);
  *(void *)(a1 + 104) = v134;
  *(void *)(a1 + 112) = v133;
  *(void *)(a1 + 120) = v10;
  *(unsigned char *)(a1 + 128) = v11;
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + 152) = v13;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v135(v15, v16, v17);
  uint64_t v18 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(v15 + v18[5]) = *(void *)(v16 + v18[5]);
  uint64_t v19 = v18[6];
  uint64_t v20 = (void *)(v15 + v19);
  uint64_t v21 = (void *)(v16 + v19);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = v18[7];
  uint64_t v24 = (void *)(v15 + v23);
  uint64_t v25 = (void *)(v16 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = v18[8];
  uint64_t v28 = (void *)(v15 + v27);
  uint64_t v29 = (void *)(v16 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[13];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v132 = v17;
  v135(v32, v33, v17);
  *(void *)(v32 + v18[5]) = *(void *)(v33 + v18[5]);
  uint64_t v34 = v18[6];
  uint64_t v35 = (void *)(v32 + v34);
  uint64_t v36 = (void *)(v33 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = v18[7];
  uint64_t v39 = (void *)(v32 + v38);
  uint64_t v40 = (void *)(v33 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = v18[8];
  uint64_t v43 = (void *)(v32 + v42);
  uint64_t v44 = (void *)(v33 + v42);
  uint64_t v45 = v44[1];
  void *v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = a3[14];
  uint64_t v130 = a2;
  uint64_t v131 = a1;
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  type metadata accessor for DetailHeroChartLollipopModel(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v62 = v135;
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v97 = *(void *)(v48 + 8);
      *(void *)uint64_t v47 = *(void *)v48;
      *(void *)(v47 + 8) = v97;
      uint64_t v98 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v99 = v98[5];
      uint64_t v100 = v47 + v99;
      uint64_t v101 = v48 + v99;
      uint64_t v102 = type metadata accessor for AttributedString();
      uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 16);
      swift_bridgeObjectRetain();
      v103(v100, v101, v102);
      uint64_t v104 = v98[6];
      unint64_t v105 = (void *)(v47 + v104);
      uint64_t v106 = (void *)(v48 + v104);
      uint64_t v107 = v106[1];
      void *v105 = *v106;
      v105[1] = v107;
      uint64_t v108 = v98[7];
      uint64_t v109 = (void *)(v47 + v108);
      uint64_t v110 = (void *)(v48 + v108);
      uint64_t v111 = v110[1];
      *uint64_t v109 = *v110;
      v109[1] = v111;
      uint64_t v112 = v98[8];
      uint64_t v113 = (void *)(v47 + v112);
      uint64_t v114 = (void *)(v48 + v112);
      uint64_t v115 = v114[1];
      *uint64_t v113 = *v114;
      v113[1] = v115;
      uint64_t v116 = v98[9];
      uint64_t v117 = (void *)(v47 + v116);
      uint64_t v118 = (void *)(v48 + v116);
      uint64_t v119 = v118[1];
      *uint64_t v117 = *v118;
      v117[1] = v119;
      uint64_t v120 = v98[10];
      uint64_t v121 = (void *)(v47 + v120);
      uint64_t v122 = (void *)(v48 + v120);
      uint64_t v123 = v122[1];
      *uint64_t v121 = *v122;
      v121[1] = v123;
      uint64_t v124 = v98[11];
      uint64_t v62 = v135;
      *(unsigned char *)(v47 + v124) = *(unsigned char *)(v48 + v124);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v125 = *(void *)(v48 + 8);
        *(void *)uint64_t v47 = *(void *)v48;
        *(void *)(v47 + 8) = v125;
        uint64_t v126 = *(void *)(v48 + 24);
        *(void *)(v47 + 16) = *(void *)(v48 + 16);
        *(void *)(v47 + 24) = v126;
        uint64_t v127 = *(void *)(v48 + 40);
        *(void *)(v47 + 32) = *(void *)(v48 + 32);
        *(void *)(v47 + 40) = v127;
        goto LABEL_15;
      }
      uint64_t v64 = *(void *)(v48 + 8);
      *(void *)uint64_t v47 = *(void *)v48;
      *(void *)(v47 + 8) = v64;
      uint64_t v65 = *(void *)(v48 + 24);
      *(void *)(v47 + 16) = *(void *)(v48 + 16);
      *(void *)(v47 + 24) = v65;
      uint64_t v66 = *(void *)(v48 + 40);
      *(void *)(v47 + 32) = *(void *)(v48 + 32);
      *(void *)(v47 + 40) = v66;
      uint64_t v67 = *(void *)(v48 + 56);
      *(void *)(v47 + 48) = *(void *)(v48 + 48);
      *(void *)(v47 + 56) = v67;
      *(unsigned char *)(v47 + 64) = *(unsigned char *)(v48 + 64);
      *(unsigned char *)(v47 + 65) = *(unsigned char *)(v48 + 65);
    }
    swift_bridgeObjectRetain();
LABEL_15:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  *(void *)uint64_t v47 = *(void *)v48;
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  uint64_t v50 = *(int *)(active + 20);
  uint64_t v51 = v47 + v50;
  uint64_t v52 = v48 + v50;
  v135(v47 + v50, v48 + v50, v17);
  uint64_t v53 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)(v51 + v53[5]) = *(void *)(v52 + v53[5]);
  *(void *)(v51 + v53[6]) = *(void *)(v52 + v53[6]);
  *(void *)(v51 + v53[7]) = *(void *)(v52 + v53[7]);
  uint64_t v54 = *(int *)(active + 24);
  uint64_t v55 = v47 + v54;
  uint64_t v56 = v48 + v54;
  type metadata accessor for LollipopDetailViewModel(0);
  int v57 = swift_getEnumCaseMultiPayload();
  if (v57 == 2)
  {
    uint64_t v68 = *(void *)(v56 + 8);
    *(void *)uint64_t v55 = *(void *)v56;
    *(void *)(v55 + 8) = v68;
    uint64_t v69 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v70 = v69[5];
    uint64_t v129 = v55 + v70;
    uint64_t v71 = v56 + v70;
    uint64_t v72 = type metadata accessor for AttributedString();
    uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16);
    swift_bridgeObjectRetain();
    v73(v129, v71, v72);
    uint64_t v74 = v69[6];
    uint64_t v75 = (void *)(v55 + v74);
    uint64_t v76 = (void *)(v56 + v74);
    uint64_t v77 = v76[1];
    *uint64_t v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = v69[7];
    uint64_t v79 = (void *)(v55 + v78);
    uint64_t v80 = (void *)(v56 + v78);
    uint64_t v81 = v80[1];
    *uint64_t v79 = *v80;
    v79[1] = v81;
    uint64_t v82 = v69[8];
    uint64_t v83 = (void *)(v55 + v82);
    uint64_t v84 = (void *)(v56 + v82);
    uint64_t v85 = v84[1];
    *uint64_t v83 = *v84;
    v83[1] = v85;
    uint64_t v86 = v69[9];
    uint64_t v87 = (void *)(v55 + v86);
    uint64_t v88 = (void *)(v56 + v86);
    uint64_t v89 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = v69[10];
    uint64_t v91 = (void *)(v55 + v90);
    uint64_t v92 = (void *)(v56 + v90);
    uint64_t v93 = v92[1];
    *uint64_t v91 = *v92;
    v91[1] = v93;
    *(unsigned char *)(v55 + v69[11]) = *(unsigned char *)(v56 + v69[11]);
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v57 != 1)
    {
      uint64_t v94 = *(void *)(v56 + 8);
      *(void *)uint64_t v55 = *(void *)v56;
      *(void *)(v55 + 8) = v94;
      uint64_t v95 = *(void *)(v56 + 24);
      *(void *)(v55 + 16) = *(void *)(v56 + 16);
      *(void *)(v55 + 24) = v95;
      uint64_t v96 = *(void *)(v56 + 40);
      *(void *)(v55 + 32) = *(void *)(v56 + 32);
      *(void *)(v55 + 40) = v96;
      goto LABEL_11;
    }
    uint64_t v58 = *(void *)(v56 + 8);
    *(void *)uint64_t v55 = *(void *)v56;
    *(void *)(v55 + 8) = v58;
    uint64_t v59 = *(void *)(v56 + 24);
    *(void *)(v55 + 16) = *(void *)(v56 + 16);
    *(void *)(v55 + 24) = v59;
    uint64_t v60 = *(void *)(v56 + 40);
    *(void *)(v55 + 32) = *(void *)(v56 + 32);
    *(void *)(v55 + 40) = v60;
    uint64_t v61 = *(void *)(v56 + 56);
    *(void *)(v55 + 48) = *(void *)(v56 + 48);
    *(void *)(v55 + 56) = v61;
    *(unsigned char *)(v55 + 64) = *(unsigned char *)(v56 + 64);
    *(unsigned char *)(v55 + 65) = *(unsigned char *)(v56 + 65);
  }
  swift_bridgeObjectRetain();
LABEL_11:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = v135;
LABEL_16:
  swift_storeEnumTagMultiPayload();
  v62(v131 + a3[15], v130 + a3[15], v132);
  v62(v131 + a3[16], v130 + a3[16], v132);
  return v131;
}

uint64_t sub_100730C4C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v6 = *(void **)(a2 + 104);
  uint64_t v7 = *(void **)(a2 + 112);
  uint64_t v8 = *(void *)(a2 + 120);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 128);
  sub_10027D4F8(v6, v7, v8, v9);
  uint64_t v10 = *(void **)(a1 + 104);
  unsigned __int8 v11 = *(void **)(a1 + 112);
  uint64_t v12 = *(void *)(a1 + 120);
  *(void *)(a1 + 104) = v6;
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 120) = v8;
  unsigned __int8 v13 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v9;
  sub_10027D954(v10, v11, v12, v13);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v101 = *(void *)(v17 - 8);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 24);
  v18(v15, v16, v17);
  uint64_t v19 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(v15 + v19[5]) = *(void *)(v16 + v19[5]);
  uint64_t v20 = v19[6];
  uint64_t v21 = (void *)(v15 + v20);
  uint64_t v22 = (void *)(v16 + v20);
  void *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[7];
  uint64_t v24 = (void *)(v15 + v23);
  uint64_t v25 = (void *)(v16 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v19[8];
  uint64_t v27 = (void *)(v15 + v26);
  uint64_t v28 = (void *)(v16 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  v18(a1 + v29, a2 + v29, v17);
  *(void *)(v30 + v19[5]) = *(void *)(v31 + v19[5]);
  uint64_t v32 = v19[6];
  uint64_t v33 = (void *)(v30 + v32);
  uint64_t v34 = (void *)(v31 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = v19[7];
  uint64_t v36 = (void *)(v30 + v35);
  uint64_t v37 = (void *)(v31 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = v19[8];
  uint64_t v39 = (void *)(v30 + v38);
  uint64_t v40 = (void *)(v31 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v41 = a3[14];
    uint64_t v42 = a1 + v41;
    uint64_t v43 = a2 + v41;
    sub_1007314D0(a1 + v41);
    type metadata accessor for DetailHeroChartLollipopModel(0);
    uint64_t v100 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v98 = a3;
      *(void *)uint64_t v42 = *(void *)v43;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v45 = *(int *)(active + 20);
      uint64_t v46 = v42 + v45;
      uint64_t v47 = v43 + v45;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v42 + v45, v43 + v45, v17);
      uint64_t v48 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)(v46 + v48[5]) = *(void *)(v47 + v48[5]);
      *(void *)(v46 + v48[6]) = *(void *)(v47 + v48[6]);
      *(void *)(v46 + v48[7]) = *(void *)(v47 + v48[7]);
      uint64_t v49 = *(int *)(active + 24);
      uint64_t v50 = v42 + v49;
      uint64_t v51 = v43 + v49;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)uint64_t v50 = *(void *)v51;
        *(void *)(v50 + 8) = *(void *)(v51 + 8);
        uint64_t v54 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v55 = v54[5];
        uint64_t v94 = v51 + v55;
        uint64_t v96 = v50 + v55;
        uint64_t v56 = type metadata accessor for AttributedString();
        uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v93(v96, v94, v56);
        uint64_t v57 = v54[6];
        uint64_t v58 = (void *)(v50 + v57);
        uint64_t v59 = (void *)(v51 + v57);
        *uint64_t v58 = *v59;
        v58[1] = v59[1];
        uint64_t v60 = v54[7];
        uint64_t v61 = (void *)(v50 + v60);
        uint64_t v62 = (void *)(v51 + v60);
        *uint64_t v61 = *v62;
        v61[1] = v62[1];
        uint64_t v63 = v54[8];
        uint64_t v64 = (void *)(v50 + v63);
        uint64_t v65 = (void *)(v51 + v63);
        void *v64 = *v65;
        v64[1] = v65[1];
        uint64_t v66 = v54[9];
        uint64_t v67 = (void *)(v50 + v66);
        uint64_t v68 = (void *)(v51 + v66);
        *uint64_t v67 = *v68;
        v67[1] = v68[1];
        uint64_t v69 = v54[10];
        uint64_t v70 = (void *)(v50 + v69);
        uint64_t v71 = (void *)(v51 + v69);
        *uint64_t v70 = *v71;
        v70[1] = v71[1];
        *(unsigned char *)(v50 + v54[11]) = *(unsigned char *)(v51 + v54[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(void *)uint64_t v50 = *(void *)v51;
          *(void *)(v50 + 8) = *(void *)(v51 + 8);
          *(void *)(v50 + 16) = *(void *)(v51 + 16);
          *(void *)(v50 + 24) = *(void *)(v51 + 24);
          *(void *)(v50 + 32) = *(void *)(v51 + 32);
          *(void *)(v50 + 40) = *(void *)(v51 + 40);
          goto LABEL_12;
        }
        *(void *)uint64_t v50 = *(void *)v51;
        *(void *)(v50 + 8) = *(void *)(v51 + 8);
        *(void *)(v50 + 16) = *(void *)(v51 + 16);
        *(void *)(v50 + 24) = *(void *)(v51 + 24);
        *(void *)(v50 + 32) = *(void *)(v51 + 32);
        *(void *)(v50 + 40) = *(void *)(v51 + 40);
        *(void *)(v50 + 48) = *(void *)(v51 + 48);
        *(void *)(v50 + 56) = *(void *)(v51 + 56);
        *(unsigned char *)(v50 + 64) = *(unsigned char *)(v51 + 64);
        *(unsigned char *)(v50 + 65) = *(unsigned char *)(v51 + 65);
      }
      swift_bridgeObjectRetain();
LABEL_12:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      a3 = v98;
      uint64_t v17 = v100;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    }
    type metadata accessor for LollipopDetailViewModel(0);
    int v53 = swift_getEnumCaseMultiPayload();
    if (v53 == 2)
    {
      *(void *)uint64_t v42 = *(void *)v43;
      *(void *)(v42 + 8) = *(void *)(v43 + 8);
      uint64_t v99 = a3;
      uint64_t v72 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v73 = v72[5];
      uint64_t v95 = v43 + v73;
      uint64_t v97 = v42 + v73;
      uint64_t v74 = type metadata accessor for AttributedString();
      uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16);
      swift_bridgeObjectRetain();
      v75(v97, v95, v74);
      uint64_t v76 = v72[6];
      uint64_t v77 = (void *)(v42 + v76);
      uint64_t v78 = (void *)(v43 + v76);
      *uint64_t v77 = *v78;
      v77[1] = v78[1];
      uint64_t v79 = v72[7];
      uint64_t v80 = (void *)(v42 + v79);
      uint64_t v81 = (void *)(v43 + v79);
      *uint64_t v80 = *v81;
      v80[1] = v81[1];
      uint64_t v82 = v72[8];
      uint64_t v83 = (void *)(v42 + v82);
      uint64_t v84 = (void *)(v43 + v82);
      *uint64_t v83 = *v84;
      v83[1] = v84[1];
      uint64_t v85 = v72[9];
      uint64_t v86 = (void *)(v42 + v85);
      uint64_t v87 = (void *)(v43 + v85);
      *uint64_t v86 = *v87;
      v86[1] = v87[1];
      uint64_t v88 = v72[10];
      uint64_t v89 = (void *)(v42 + v88);
      uint64_t v90 = (void *)(v43 + v88);
      *uint64_t v89 = *v90;
      v89[1] = v90[1];
      uint64_t v91 = v72[11];
      a3 = v99;
      *(unsigned char *)(v42 + v91) = *(unsigned char *)(v43 + v91);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v53 != 1)
      {
        *(void *)uint64_t v42 = *(void *)v43;
        *(void *)(v42 + 8) = *(void *)(v43 + 8);
        *(void *)(v42 + 16) = *(void *)(v43 + 16);
        *(void *)(v42 + 24) = *(void *)(v43 + 24);
        *(void *)(v42 + 32) = *(void *)(v43 + 32);
        *(void *)(v42 + 40) = *(void *)(v43 + 40);
        goto LABEL_16;
      }
      *(void *)uint64_t v42 = *(void *)v43;
      *(void *)(v42 + 8) = *(void *)(v43 + 8);
      *(void *)(v42 + 16) = *(void *)(v43 + 16);
      *(void *)(v42 + 24) = *(void *)(v43 + 24);
      *(void *)(v42 + 32) = *(void *)(v43 + 32);
      *(void *)(v42 + 40) = *(void *)(v43 + 40);
      *(void *)(v42 + 48) = *(void *)(v43 + 48);
      *(void *)(v42 + 56) = *(void *)(v43 + 56);
      *(unsigned char *)(v42 + 64) = *(unsigned char *)(v43 + 64);
      *(unsigned char *)(v42 + 65) = *(unsigned char *)(v43 + 65);
    }
    swift_bridgeObjectRetain();
LABEL_16:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = v100;
    goto LABEL_17;
  }
LABEL_18:
  v18(a1 + a3[15], a2 + a3[15], v17);
  v18(a1 + a3[16], a2 + a3[16], v17);
  return a1;
}

uint64_t sub_1007314D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailHeroChartLollipopModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10073152C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  uint64_t v9 = a3[12];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v12 = type metadata accessor for Date();
  unsigned __int8 v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  uint64_t v14 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(v10 + v14[5]) = *(void *)(v11 + v14[5]);
  *(_OWORD *)(v10 + v14[6]) = *(_OWORD *)(v11 + v14[6]);
  *(_OWORD *)(v10 + v14[7]) = *(_OWORD *)(v11 + v14[7]);
  *(_OWORD *)(v10 + v14[8]) = *(_OWORD *)(v11 + v14[8]);
  uint64_t v15 = a3[13];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  v13(a1 + v15, a2 + v15, v12);
  *(void *)(v16 + v14[5]) = *(void *)(v17 + v14[5]);
  *(_OWORD *)(v16 + v14[6]) = *(_OWORD *)(v17 + v14[6]);
  *(_OWORD *)(v16 + v14[7]) = *(_OWORD *)(v17 + v14[7]);
  *(_OWORD *)(v16 + v14[8]) = *(_OWORD *)(v17 + v14[8]);
  uint64_t v18 = a3[14];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v19 = *v20;
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    uint64_t v22 = *(int *)(active + 20);
    uint64_t v23 = (char *)v19 + v22;
    uint64_t v24 = v13;
    uint64_t v25 = (char *)v20 + v22;
    uint64_t v44 = v24;
    v24((uint64_t)v19 + v22, (uint64_t)v20 + v22, v12);
    uint64_t v26 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(void *)&v23[v26[5]] = *(void *)&v25[v26[5]];
    *(void *)&v23[v26[6]] = *(void *)&v25[v26[6]];
    *(void *)&v23[v26[7]] = *(void *)&v25[v26[7]];
    uint64_t v27 = *(int *)(active + 24);
    uint64_t v28 = (_OWORD *)((char *)v19 + v27);
    uint64_t v29 = (_OWORD *)((char *)v20 + v27);
    uint64_t v30 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *uint64_t v28 = *v29;
      uint64_t v31 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v32 = v31[5];
      uint64_t v41 = (char *)v29 + v32;
      uint64_t v42 = (char *)v28 + v32;
      uint64_t v33 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v42, v41, v33);
      *(_OWORD *)((char *)v28 + v31[6]) = *(_OWORD *)((char *)v29 + v31[6]);
      *(_OWORD *)((char *)v28 + v31[7]) = *(_OWORD *)((char *)v29 + v31[7]);
      *(_OWORD *)((char *)v28 + v31[8]) = *(_OWORD *)((char *)v29 + v31[8]);
      *(_OWORD *)((char *)v28 + v31[9]) = *(_OWORD *)((char *)v29 + v31[9]);
      *(_OWORD *)((char *)v28 + v31[10]) = *(_OWORD *)((char *)v29 + v31[10]);
      *((unsigned char *)v28 + v31[11]) = *((unsigned char *)v29 + v31[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    unsigned __int8 v13 = v44;
  }
  else
  {
    uint64_t v34 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v45 = v13;
      uint64_t v35 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v36 = v35[5];
      uint64_t v43 = (char *)v19 + v36;
      uint64_t v37 = (char *)v20 + v36;
      uint64_t v38 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v43, v37, v38);
      *(_OWORD *)((char *)v19 + v35[6]) = *(_OWORD *)((char *)v20 + v35[6]);
      *(_OWORD *)((char *)v19 + v35[7]) = *(_OWORD *)((char *)v20 + v35[7]);
      *(_OWORD *)((char *)v19 + v35[8]) = *(_OWORD *)((char *)v20 + v35[8]);
      *(_OWORD *)((char *)v19 + v35[9]) = *(_OWORD *)((char *)v20 + v35[9]);
      *(_OWORD *)((char *)v19 + v35[10]) = *(_OWORD *)((char *)v20 + v35[10]);
      uint64_t v39 = v35[11];
      unsigned __int8 v13 = v45;
      *((unsigned char *)v19 + v39) = *((unsigned char *)v20 + v39);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v34 - 8) + 64));
    }
  }
  swift_storeEnumTagMultiPayload();
  v13(a1 + a3[15], a2 + a3[15], v12);
  v13(a1 + a3[16], a2 + a3[16], v12);
  return a1;
}

uint64_t sub_100731994(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 120);
  char v11 = *(unsigned char *)(a2 + 128);
  uint64_t v12 = *(void **)(a1 + 104);
  unsigned __int8 v13 = *(void **)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = v10;
  unsigned __int8 v15 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v11;
  sub_10027D954(v12, v13, v14, v15);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v17 = a3[12];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
  v22(v18, v19, v20);
  uint64_t v23 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(v18 + v23[5]) = *(void *)(v19 + v23[5]);
  uint64_t v24 = v23[6];
  uint64_t v25 = (void *)(v18 + v24);
  uint64_t v26 = (uint64_t *)(v19 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v23[7];
  uint64_t v30 = (void *)(v18 + v29);
  uint64_t v31 = (uint64_t *)(v19 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = v23[8];
  uint64_t v35 = (void *)(v18 + v34);
  uint64_t v36 = (uint64_t *)(v19 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *uint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  v22(a1 + v39, a2 + v39, v20);
  *(void *)(v40 + v23[5]) = *(void *)(v41 + v23[5]);
  uint64_t v42 = v23[6];
  uint64_t v43 = (void *)(v40 + v42);
  uint64_t v44 = (uint64_t *)(v41 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  void *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = v23[7];
  uint64_t v48 = (void *)(v40 + v47);
  uint64_t v49 = (uint64_t *)(v41 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *uint64_t v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = v23[8];
  int v53 = (void *)(v40 + v52);
  uint64_t v54 = (uint64_t *)(v41 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *int v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v84 = v22;
    uint64_t v57 = a3[14];
    uint64_t v58 = (char *)(a1 + v57);
    uint64_t v59 = (char *)(a2 + v57);
    sub_1007314D0(a1 + v57);
    type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v82 = a3;
      *(void *)uint64_t v58 = *(void *)v59;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v61 = *(int *)(active + 20);
      uint64_t v62 = &v58[v61];
      uint64_t v63 = &v59[v61];
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v58[v61], &v59[v61], v20);
      uint64_t v64 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)&v62[v64[5]] = *(void *)&v63[v64[5]];
      *(void *)&v62[v64[6]] = *(void *)&v63[v64[6]];
      *(void *)&v62[v64[7]] = *(void *)&v63[v64[7]];
      uint64_t v65 = *(int *)(active + 24);
      uint64_t v66 = &v58[v65];
      uint64_t v67 = &v59[v65];
      uint64_t v68 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
        uint64_t v69 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v70 = v69[5];
        uint64_t v71 = &v66[v70];
        uint64_t v80 = &v67[v70];
        uint64_t v72 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v71, v80, v72);
        *(_OWORD *)&v66[v69[6]] = *(_OWORD *)&v67[v69[6]];
        *(_OWORD *)&v66[v69[7]] = *(_OWORD *)&v67[v69[7]];
        *(_OWORD *)&v66[v69[8]] = *(_OWORD *)&v67[v69[8]];
        *(_OWORD *)&v66[v69[9]] = *(_OWORD *)&v67[v69[9]];
        *(_OWORD *)&v66[v69[10]] = *(_OWORD *)&v67[v69[10]];
        v66[v69[11]] = v67[v69[11]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      a3 = v82;
    }
    else
    {
      uint64_t v73 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
        uint64_t v83 = a3;
        uint64_t v74 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v75 = v74[5];
        uint64_t v81 = &v58[v75];
        uint64_t v76 = &v59[v75];
        uint64_t v77 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v81, v76, v77);
        *(_OWORD *)&v58[v74[6]] = *(_OWORD *)&v59[v74[6]];
        *(_OWORD *)&v58[v74[7]] = *(_OWORD *)&v59[v74[7]];
        *(_OWORD *)&v58[v74[8]] = *(_OWORD *)&v59[v74[8]];
        *(_OWORD *)&v58[v74[9]] = *(_OWORD *)&v59[v74[9]];
        *(_OWORD *)&v58[v74[10]] = *(_OWORD *)&v59[v74[10]];
        uint64_t v78 = v74[11];
        a3 = v83;
        v58[v78] = v59[v78];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v58, v59, *(void *)(*(void *)(v73 - 8) + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = v84;
  }
  v22(a1 + a3[15], a2 + a3[15], v20);
  v22(a1 + a3[16], a2 + a3[16], v20);
  return a1;
}

uint64_t sub_100731F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100731F30);
}

uint64_t sub_100731F30(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for PeakUpperMarkModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[12];
    }
    else
    {
      type metadata accessor for DetailHeroChartLollipopModel(0);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[14];
      }
      else
      {
        uint64_t v10 = type metadata accessor for Date();
        uint64_t v11 = a3[15];
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100732000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100732014);
}

uint64_t sub_100732014(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for PeakUpperMarkModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[12];
    }
    else
    {
      type metadata accessor for DetailHeroChartLollipopModel(0);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[14];
      }
      else
      {
        uint64_t v10 = type metadata accessor for Date();
        uint64_t v11 = a4[15];
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for PrecipitationAveragesHeroChartViewModel()
{
  uint64_t result = qword_100E91F98;
  if (!qword_100E91F98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100732128()
{
  uint64_t result = type metadata accessor for PeakUpperMarkModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DetailHeroChartLollipopModel(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Date();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10073226C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v31 = *(void *)(a1 + 56);
  uint64_t v32 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  BOOL v12 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  uint64_t v29 = *(void *)(a2 + 48);
  uint64_t v30 = *(void *)(a2 + 56);
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v13 = v4 == v8 && v5 == v9;
  if (!v13 && (sub_10017D3D0() & 1) == 0) {
    return 0;
  }
  BOOL v14 = v6 == v10 && v7 == v11;
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v15 = v32 == v29 && v31 == v30;
  if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  sub_100BD8D14();
  if ((v16 & 1) == 0) {
    return 0;
  }
  sub_100BD8D14();
  if ((v17 & 1) == 0) {
    return 0;
  }
  sub_100BDB324();
  if ((v18 & 1) == 0) {
    return 0;
  }
  if (*(double *)(a1 + 88) != *(double *)(a2 + 88)) {
    return 0;
  }
  if (*(double *)(a1 + 96) != *(double *)(a2 + 96)) {
    return 0;
  }
  if (!sub_1007E0D4C(*(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128), *(void *)(a2 + 104), *(void *)(a2 + 112), *(void *)(a2 + 120), *(unsigned char *)(a2 + 128)))return 0; {
  uint64_t v19 = *(void *)(a1 + 144);
  }
  uint64_t v20 = *(void *)(a1 + 152);
  int v21 = *(unsigned __int8 *)(a1 + 160);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void *)(a2 + 152);
  int v24 = *(unsigned __int8 *)(a2 + 160);
  sub_100BD8DC4();
  if ((v25 & 1) == 0) {
    return 0;
  }
  if (v19 == v22 && v20 == v23)
  {
    if (v21 != v24) {
      return 0;
    }
  }
  else if (sub_10017D3D0() & 1) == 0 || ((v21 ^ v24))
  {
    return 0;
  }
  uint64_t v27 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  if ((sub_10099C154(a1 + *(int *)(v27 + 48), a2 + *(int *)(v27 + 48)) & 1) == 0
    || (sub_10099C154(a1 + *(int *)(v27 + 52), a2 + *(int *)(v27 + 52)) & 1) == 0
    || (sub_100566B7C() & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0)
  {
    return 0;
  }

  return static Date.== infix(_:_:)();
}

uint64_t sub_1007324BC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, long long a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  long long v20 = a1[1];
  *(_OWORD *)a9 = *a1;
  *(_OWORD *)(a9 + 16) = v20;
  long long v21 = a1[3];
  *(_OWORD *)(a9 + 32) = a1[2];
  *(_OWORD *)(a9 + 48) = v21;
  *(void *)(a9 + 64) = a2;
  *(void *)(a9 + 72) = a3;
  *(void *)(a9 + 80) = a4;
  *(double *)(a9 + 88) = a10;
  *(double *)(a9 + 96) = a11;
  *(void *)(a9 + 104) = a5;
  *(void *)(a9 + 112) = a6;
  *(void *)(a9 + 120) = a7;
  *(unsigned char *)(a9 + 128) = a8;
  *(_OWORD *)(a9 + 136) = a12;
  *(void *)(a9 + 152) = a13;
  *(unsigned char *)(a9 + 160) = a14;
  uint64_t v22 = (int *)type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  sub_100732634(a15, a9 + v22[12], type metadata accessor for PeakUpperMarkModel);
  sub_100732634(a16, a9 + v22[13], type metadata accessor for PeakUpperMarkModel);
  sub_100732634(a17, a9 + v22[14], type metadata accessor for DetailHeroChartLollipopModel);
  uint64_t v23 = a9 + v22[15];
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v27)((void *)(v24 - 8), v23, a18, v24);
  uint64_t v25 = a9 + v22[16];

  return v27(v25, a19, v24);
}

uint64_t sub_100732634(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10073269C(double a1)
{
  double v1 = round(a1);
  if ((~*(void *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v2 = (uint64_t)v1;
  uint64_t v3 = *(void *)(static UVIndex.ExposureCategory.allCases.getter() + 16);
  if (!v3)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    if (qword_100E62860 == -1)
    {
LABEL_13:
      uint64_t v7 = type metadata accessor for Logger();
      sub_1002102B0(v7, (uint64_t)qword_100F52028);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 134349056;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to find UV Index Category matching value=%{public}f", v10, 0xCu);
        swift_slowDealloc();
      }

      return UVIndex.init(value:category:)();
    }
LABEL_22:
    swift_once();
    goto LABEL_13;
  }
  uint64_t v4 = 0;
  while (UVIndex.ExposureCategory.rangeValue.getter() > v2 || v5 < v2)
  {
    if (v3 == ++v4) {
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();

  return UVIndex.init(value:category:)();
}

uint64_t sub_100732894()
{
  return swift_deallocObject();
}

void *sub_1007328A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HistoricalFactsCategory();
  uint64_t v16 = *(void *)(v2 - 8);
  uint64_t v17 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (void *)((char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    char v18 = _swiftEmptyArrayStorage;
    sub_1007F334C();
    uint64_t v6 = v18;
    uint64_t v15 = sub_10017DF08(&qword_100E92018);
    uint64_t v7 = (uint64_t *)(a1
                   + ((*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80)));
    uint64_t v14 = *(void *)(*(void *)(v15 - 8) + 72);
    v13[1] = type metadata accessor for WeatherDescription();
    do
    {
      uint64_t v8 = *v7;
      uint64_t v9 = v7[1];
      sub_10017DF08(&qword_100E92010);
      NonEmpty.map<A>(_:)();
      void *v4 = v8;
      v4[1] = v9;
      char v18 = v6;
      unint64_t v10 = v6[2];
      unint64_t v11 = v6[3];
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1)
      {
        sub_1007F334C();
        uint64_t v6 = v18;
      }
      uint64_t v7 = (uint64_t *)((char *)v7 + v14);
      v6[2] = v10 + 1;
      sub_100733838((uint64_t)v4, (uint64_t)v6+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v10);
      --v5;
    }
    while (v5);
  }
  return v6;
}

uint64_t sub_100732AE0(uint64_t a1)
{
  return sub_100733268(a1, &enum case for HistoricalFact.Condition.temperature(_:));
}

unint64_t sub_100732AEC()
{
  unint64_t result = qword_100E92000;
  if (!qword_100E92000)
  {
    type metadata accessor for HistoricalFact.Condition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92000);
  }
  return result;
}

uint64_t sub_100732B3C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E92008);
  __chkstk_darwin(v2 - 8);
  uint64_t v60 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E92010);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v59 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10017DF08(&qword_100E92018);
  uint64_t v65 = *(void *)(v63 - 8);
  uint64_t v7 = __chkstk_darwin(v63);
  uint64_t v58 = (void *)((char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  unint64_t v10 = (void *)((char *)v50 - v9);
  uint64_t v11 = type metadata accessor for HistoricalFact();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v64 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v50 - v15;
  uint64_t v69 = *(void *)(a1 + 16);
  if (v69)
  {
    char v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v17 = v12 + 16;
    uint64_t v73 = v18;
    uint64_t v19 = *(unsigned __int8 *)(v17 + 64);
    uint64_t v20 = (v19 + 32) & ~v19;
    uint64_t v68 = a1 + v20;
    uint64_t v54 = (void (**)(uint64_t, char *, uint64_t))(v17 + 16);
    uint64_t v66 = (void (**)(char *, uint64_t))(v17 - 8);
    uint64_t v67 = v20;
    uint64_t v21 = *(void *)(v17 + 56);
    uint64_t v57 = v21 + v20;
    uint64_t v56 = v19 | 7;
    int v53 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v52 = (void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v51 = (void (**)(char *, uint64_t))(v5 + 8);
    v50[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    uint64_t v23 = _swiftEmptyArrayStorage;
    long long v55 = xmmword_100C251B0;
    uint64_t v61 = v21;
    uint64_t v62 = v4;
    uint64_t v70 = v17;
    uint64_t v71 = v11;
    while (1)
    {
      v73(v16, v68 + v21 * v22, v11);
      uint64_t v24 = v23[2];
      uint64_t v72 = v22;
      if (v24)
      {
        uint64_t v25 = v65;
        unint64_t v26 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
        swift_bridgeObjectRetain();
        unint64_t v27 = 0;
        uint64_t v28 = *(void *)(v25 + 72);
        while (1)
        {
          sub_100733714((uint64_t)v23 + v26, (uint64_t)v10);
          uint64_t v29 = *v10;
          uint64_t v30 = v10[1];
          if (v29 == HistoricalFact.heading.getter() && v30 == v31) {
            break;
          }
          char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          sub_1000F3400((uint64_t)v10, &qword_100E92018);
          if (v33) {
            goto LABEL_20;
          }
          ++v27;
          v26 += v28;
          if (v24 == v27)
          {
            swift_bridgeObjectRelease();
            uint64_t v21 = v61;
            uint64_t v4 = v62;
            uint64_t v11 = v71;
            uint64_t v22 = v72;
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        sub_1000F3400((uint64_t)v10, &qword_100E92018);
LABEL_20:
        swift_bridgeObjectRelease();
        v73(v64, (uint64_t)v16, v71);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = sub_100ABB524();
          uint64_t v23 = (void *)result;
        }
        if (v27 >= v23[2])
        {
          __break(1u);
          return result;
        }
        uint64_t v4 = v62;
        uint64_t v43 = (void (*)(uint64_t *, void))NonEmpty.rawElements.modify();
        uint64_t v45 = v44;
        sub_10062E078();
        uint64_t v46 = *(void *)(*v45 + 16);
        sub_100289720(v46);
        uint64_t v47 = *v45;
        *(void *)(v47 + 16) = v46 + 1;
        uint64_t v21 = v61;
        uint64_t v11 = v71;
        (*v54)(v47 + v67 + v46 * v61, v64, v71);
        v43(v74, 0);
        uint64_t v22 = v72;
      }
      else
      {
LABEL_12:
        sub_10017DF08(&qword_100E92020);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = v55;
        v73((char *)(v34 + v67), (uint64_t)v16, v11);
        v74[0] = v34;
        sub_10017DF08(&qword_100E92028);
        sub_10073377C();
        uint64_t v35 = (uint64_t)v60;
        NonEmpty.init(_:)();
        if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v4) == 1)
        {
          sub_1000F3400(v35, &qword_100E92008);
          simulateCrash(_:_:)();
        }
        else
        {
          uint64_t v36 = v59;
          (*v53)(v59, v35, v4);
          uint64_t v37 = HistoricalFact.heading.getter();
          uint64_t v38 = v58;
          uint64_t v39 = (char *)v58 + *(int *)(v63 + 48);
          *uint64_t v58 = v37;
          v38[1] = v40;
          (*v52)(v39, v36, v4);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v23 = (void *)sub_1007E97C8();
          }
          unint64_t v41 = v23[2];
          uint64_t v22 = v72;
          if (v41 >= v23[3] >> 1) {
            uint64_t v23 = (void *)sub_1007E97C8();
          }
          void v23[2] = v41 + 1;
          sub_1007337D0((uint64_t)v58, (uint64_t)v23+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(void *)(v65 + 72) * v41);
          (*v51)(v59, v4);
        }
      }
      ++v22;
      (*v66)(v16, v11);
      if (v22 == v69)
      {
        swift_bridgeObjectRelease();
        uint64_t v48 = swift_bridgeObjectRetain();
        uint64_t v49 = sub_1007328A4(v48);
        swift_bridgeObjectRelease_n();
        return (uint64_t)v49;
      }
    }
  }
  return 0;
}

uint64_t sub_10073325C(uint64_t a1)
{
  return sub_100733268(a1, &enum case for HistoricalFact.Condition.precipitation(_:));
}

uint64_t sub_100733268(uint64_t a1, unsigned int *a2)
{
  uint64_t v3 = type metadata accessor for HistoricalFact.Condition();
  sub_100179C0C();
  uint64_t v5 = v4;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for HistoricalFact();
  sub_100179C0C();
  uint64_t v14 = v13;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v45 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v46 = (char *)&v34 - v18;
  uint64_t result = HistoricalFacts.facts.getter();
  uint64_t v20 = (char *)_swiftEmptyArrayStorage;
  uint64_t v51 = (char *)_swiftEmptyArrayStorage;
  uint64_t v43 = *(void *)(result + 16);
  if (!v43)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_100732B3C((uint64_t)v20);
    swift_release();
    return v33;
  }
  unint64_t v21 = 0;
  uint64_t v39 = v14 + 16;
  uint64_t v40 = result;
  unsigned int v38 = *a2;
  uint64_t v36 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v37 = (void (**)(char *, void, uint64_t))(v5 + 104);
  uint64_t v34 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v35 = v9;
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v41 = v14;
  uint64_t v42 = v11;
  while (v21 < *(void *)(result + 16))
  {
    unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v23 = *(void *)(v14 + 72);
    uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    uint64_t v25 = v12;
    v24(v46, result + v22 + v23 * v21, v12);
    HistoricalFact.condition.getter();
    (*v37)(v9, v38, v3);
    sub_100732AEC();
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v49 == v47 && v50 == v48)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v29 = *v36;
      (*v36)(v9, v3);
      v29(v11, v3);
LABEL_11:
      uint64_t v30 = *v44;
      uint64_t v12 = v25;
      (*v44)(v45, v46, v25);
      uint64_t v31 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F33B0();
        uint64_t v31 = v51;
      }
      uint64_t v14 = v41;
      unint64_t v32 = *((void *)v31 + 2);
      if (v32 >= *((void *)v31 + 3) >> 1)
      {
        sub_1007F33B0();
        uint64_t v31 = v51;
      }
      *((void *)v31 + 2) = v32 + 1;
      v30(&v31[v22 + v32 * v23], v45, v12);
      uint64_t v51 = v31;
      uint64_t v9 = v35;
      goto LABEL_16;
    }
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = *v36;
    (*v36)(v9, v3);
    v28(v11, v3);
    if (v27) {
      goto LABEL_11;
    }
    uint64_t v12 = v25;
    (*v34)(v46, v25);
    uint64_t v14 = v41;
LABEL_16:
    ++v21;
    uint64_t v11 = v42;
    uint64_t result = v40;
    if (v43 == v21)
    {
      uint64_t v20 = v51;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100733640(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HistoricalFact();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return WeatherDescription.init(historicalFact:)();
}

uint64_t sub_100733714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E92018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10073377C()
{
  unint64_t result = qword_100E92030;
  if (!qword_100E92030)
  {
    sub_10018C6DC(&qword_100E92028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92030);
  }
  return result;
}

uint64_t sub_1007337D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E92018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100733838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HistoricalFactsCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for HistoricalFactsPlatterInputFactory()
{
  return &type metadata for HistoricalFactsPlatterInputFactory;
}

void *sub_1007338AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, long long *a9)
{
  v9[2] = a1;
  v9[3] = a2;
  void v9[4] = a3;
  v9[5] = a4;
  sub_1001262E4(a5, (uint64_t)(v9 + 6));
  v9[11] = a6;
  v9[12] = a7;
  v9[13] = a8;
  sub_1001262E4(a9, (uint64_t)(v9 + 14));
  return v9;
}

uint64_t sub_100733914(int a1, uint64_t a2)
{
  int v17 = a1;
  uint64_t v4 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  sub_10020D948(v2 + 48, (uint64_t)v26);
  uint64_t v11 = *(void *)(v2 + 88);
  long long v18 = *(_OWORD *)(v2 + 96);
  sub_10020D948(v2 + 112, (uint64_t)&v28);
  char v12 = v17;
  v20[0] = v17;
  uint64_t v21 = a2;
  uint64_t v22 = v8;
  uint64_t v23 = v7;
  uint64_t v24 = v10;
  uint64_t v25 = v9;
  v26[5] = v11;
  long long v27 = v18;
  uint64_t v13 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v13);
  sub_100321130((uint64_t)v20, (uint64_t)v19);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(unsigned char *)(v14 + 32) = v12;
  *(void *)(v14 + 40) = a2;
  memcpy((void *)(v14 + 48), v19, 0x98uLL);
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1001BCCF0((uint64_t)v6, (uint64_t)&unk_100E92110, v14);
  swift_release();
  return sub_10032118C((uint64_t)v20);
}

uint64_t sub_100733ABC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  *(unsigned char *)(v6 + 169) = a4;
  return _swift_task_switch(sub_100733AE0, 0, 0);
}

uint64_t sub_100733AE0()
{
  sub_100179DB4();
  double v1 = (void *)v0[6];
  uint64_t v2 = v1[2];
  v0[8] = v2;
  if (v2)
  {
    v0[9] = 0;
    uint64_t v3 = v1 + 4;
    uint64_t v4 = v1[7];
    swift_bridgeObjectRetain();
    sub_1001B1E64(v3, v4);
    sub_1001802FC();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[10] = v5;
    void *v5 = v0;
    v5[1] = sub_100733C10;
    uint64_t v6 = sub_10017D3F4();
    return v7(v6);
  }
  else
  {
    sub_1001627B4();
    return v9();
  }
}

uint64_t sub_100733C10()
{
  sub_1000A9DE8();
  sub_100119470();
  *(void *)(v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100734084;
  }
  else
  {
    uint64_t v2 = sub_100733D04;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100733D04()
{
  sub_100179DB4();
  uint64_t v1 = v0[9] + 1;
  if (v1 == v0[8])
  {
    swift_bridgeObjectRelease();
    sub_1001627B4();
    return v2();
  }
  else
  {
    v0[9] = v1;
    sub_1001B1E64((void *)(v0[6] + 40 * v1 + 32), *(void *)(v0[6] + 40 * v1 + 56));
    sub_1001802FC();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[10] = v4;
    void *v4 = v0;
    v4[1] = sub_100733C10;
    uint64_t v5 = sub_10017D3F4();
    return v6(v5);
  }
}

uint64_t sub_100733E40()
{
  sub_1000A9DE8();
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();
  *(void *)(v0 + 120) = [v1 sharedApplication];
  return _swift_task_switch(sub_100733EC4, 0, 0);
}

uint64_t sub_100733EC4()
{
  uint64_t v1 = *(void *)(v0 + 88);
  *(void *)(v0 + 128) = sub_1005A0EEC(*(unsigned char *)(v0 + 169));
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 16) = v1;
  swift_errorRetain();
  sub_10017DF08(&qword_100E77F30);
  *(void *)(v0 + 144) = String.init<A>(describing:)();
  *(void *)(v0 + 152) = v3;
  *(void *)(v0 + 160) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100733F94, v5, v4);
}

uint64_t sub_100733F94()
{
  sub_100179DB4();
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v5 = (void *)v0[15];
  uint64_t v4 = v0[16];
  swift_release();
  sub_100734564(v4, v3, v2, v1, v5);

  return _swift_task_switch(sub_10073402C, 0, 0);
}

uint64_t sub_10073402C()
{
  sub_1000A9DE8();
  swift_errorRelease();
  sub_1001627B4();
  return v0();
}

uint64_t sub_100734084()
{
  uint64_t v16 = v0;
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 88);
  if (v4)
  {
    char v6 = *(unsigned char *)(v0 + 169);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    *(unsigned char *)(v0 + 168) = v6;
    uint64_t v8 = String.init<A>(describing:)();
    *(void *)(v0 + 24) = sub_10016414C(v8, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(void *)(v0 + 32) = v5;
    swift_errorRetain();
    sub_10017DF08(&qword_100E77F30);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v0 + 40) = sub_10016414C(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "An error occurred while performing test: %s -  %s)", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  *(void *)(v0 + 96) = self;
  *(void *)(v0 + 104) = type metadata accessor for MainActor();
  *(void *)(v0 + 112) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100733E40, v13, v12);
}

uint64_t sub_100734374()
{
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 112);
  return v0;
}

uint64_t sub_1007343C4()
{
  sub_100734374();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PerformanceTestRunner()
{
  return self;
}

uint64_t sub_10073441C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 160);

  return swift_deallocObject();
}

uint64_t sub_10073449C()
{
  sub_100179DB4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = v0 + 48;
  char v8 = *(unsigned char *)(v0 + 32);
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *unint64_t v9 = v1;
  v9[1] = sub_1005DA768;
  return sub_100733ABC(v3, v4, v5, v8, v6, v7);
}

void sub_100734564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a5 failedTest:v6 withFailure:v7];
}

unsigned char *storeEnumTagSinglePayload for Mica(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007346CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Mica()
{
  return &type metadata for Mica;
}

uint64_t sub_100734704(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 61) = a2;
  uint64_t v3 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = *(void *)(v3 - 8);
  *(void *)(v2 + 32) = swift_task_alloc();
  *(void *)(v2 + 40) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v2 + 48) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100734808, v5, v4);
}

uint64_t sub_100734808()
{
  swift_release();
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 61);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v0 + 56) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Performing Mica instruction: %{BOOL}d", v5, 8u);
    swift_slowDealloc();
  }

  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v7, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:), v8);
  char v10 = sub_10012F990(v6, v7);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v11(v7, v8);
  v11(v6, v8);
  if (v10)
  {
    char v12 = *(unsigned char *)(v0 + 61);
    id v13 = [self standardUserDefaults];
    *(unsigned char *)(v0 + 60) = v12;
    NSUserDefaults.set<A>(_:for:)();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100734A8C()
{
  char v2 = *v0;
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1002205C0;
  return sub_100734704((uint64_t)v3, v2);
}

uint64_t *sub_100734B20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return a1;
  }
  uint64_t v5 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v49 = a2[1];
    *a1 = *a2;
    a1[1] = v49;
    uint64_t v50 = a2[3];
    a1[2] = a2[2];
    a1[3] = v50;
    uint64_t v51 = (int *)_s10PolarModelVMa();
    uint64_t v52 = v51[6];
    int v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    uint64_t v55 = type metadata accessor for PolarType();
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56(v53, v54, v55);
    uint64_t v57 = v51[7];
    uint64_t v58 = (char *)a1 + v57;
    uint64_t v59 = (char *)a2 + v57;
    uint64_t v60 = type metadata accessor for Date();
    v710 = *(void (**)(char *, char *))(*(void *)(v60 - 8) + 16);
    uint64_t v712 = v60;
    v710(v58, v59);
    uint64_t v61 = v51[8];
    uint64_t v62 = (char *)a1 + v61;
    uint64_t v63 = (char *)a2 + v61;
    uint64_t v64 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
    uint64_t v65 = v51[9];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    uint64_t v68 = type metadata accessor for AttributedString();
    v725 = *(void (**)(char *, char *))(*(void *)(v68 - 8) + 16);
    uint64_t v731 = v68;
    v725(v66, v67);
    *(uint64_t *)((char *)a1 + v51[10]) = *(uint64_t *)((char *)a2 + v51[10]);
    uint64_t v69 = v51[11];
    uint64_t v70 = (uint64_t *)((char *)a1 + v69);
    uint64_t v71 = (uint64_t *)((char *)a2 + v69);
    uint64_t v72 = v71[1];
    *uint64_t v70 = *v71;
    v70[1] = v72;
    uint64_t v73 = v51[12];
    uint64_t v74 = (char *)a1 + v73;
    uint64_t v75 = (char *)a2 + v73;
    uint64_t v76 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v77(v74, v75, v76);
    uint64_t v78 = v51[13];
    uint64_t v79 = (char *)a1 + v78;
    uint64_t v80 = (char *)a2 + v78;
    uint64_t v718 = type metadata accessor for Location();
    v714 = *(void (**)(char *, char *))(*(void *)(v718 - 8) + 16);
    v714(v79, v80);
    uint64_t v81 = v51[14];
    uint64_t v82 = (char *)a1 + v81;
    uint64_t v83 = (char *)a2 + v81;
    uint64_t v84 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
    uint64_t v85 = v51[15];
    uint64_t v86 = (char *)a1 + v85;
    uint64_t v87 = (char *)a2 + v85;
    uint64_t v88 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
    uint64_t v89 = v51[16];
    uint64_t v90 = (uint64_t *)((char *)a1 + v89);
    uint64_t v91 = (uint64_t *)((char *)a2 + v89);
    uint64_t v92 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v92))
    {
      uint64_t v93 = sub_10017DF08(&qword_100E66E28);
      memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
    }
    else
    {
      uint64_t v96 = v91[1];
      if (v96)
      {
        *uint64_t v90 = *v91;
        v90[1] = v96;
        uint64_t v97 = v91[3];
        v90[2] = v91[2];
        v90[3] = v97;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v109 = *((_OWORD *)v91 + 1);
        *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
        *((_OWORD *)v90 + 1) = v109;
      }
      uint64_t v110 = *(int *)(v92 + 20);
      uint64_t v111 = (void *)((char *)v90 + v110);
      uint64_t v112 = (void *)((char *)v91 + v110);
      uint64_t v113 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v114 = v112[1];
        *uint64_t v111 = *v112;
        v111[1] = v114;
        v705 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v115 = v705[5];
        __dst = (char *)v111 + v115;
        uint64_t v116 = (char *)v112 + v115;
        uint64_t v117 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v117))
        {
          uint64_t v118 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v116, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(__dst, v116, v117);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v117);
        }
        uint64_t v131 = v705[6];
        uint64_t v132 = (void *)((char *)v111 + v131);
        uint64_t v133 = (void *)((char *)v112 + v131);
        uint64_t v134 = v133[1];
        *uint64_t v132 = *v133;
        v132[1] = v134;
        uint64_t v135 = v705[7];
        uint64_t v136 = (char *)v111 + v135;
        uint64_t v137 = (char *)v112 + v135;
        uint64_t v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
        swift_bridgeObjectRetain();
        v138(v136, v137, v117);
        uint64_t v139 = v705[8];
        uint64_t v140 = (char *)v111 + v139;
        uint64_t v141 = (char *)v112 + v139;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112 + v139, 1, v117))
        {
          uint64_t v142 = sub_10017DF08(&qword_100E749B0);
          memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
        }
        else
        {
          v138(v140, v141, v117);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, v117);
        }
        *((unsigned char *)v111 + v705[9]) = *((unsigned char *)v112 + v705[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
      }
      uint64_t v170 = *(int *)(v92 + 24);
      uint64_t v171 = (char *)v90 + v170;
      uint64_t v172 = (char *)v91 + v170;
      uint64_t v173 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v173))
      {
        uint64_t v174 = sub_10017DF08(&qword_100E73810);
        memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
      }
      else
      {
        uint64_t v175 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v171, v172, v175);
        uint64_t v176 = sub_10017DF08(&qword_100E66478);
        v171[*(int *)(v176 + 48)] = v172[*(int *)(v176 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v173);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v92);
    }
    uint64_t v177 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    char v178 = (uint64_t *)((char *)a1 + v177);
    uint64_t v179 = (unsigned __int8 *)a2 + v177;
    uint64_t v180 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, (uint64_t)v180))
    {
      uint64_t v181 = sub_10017DF08(&qword_100E66E40);
      memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
      goto LABEL_294;
    }
    uint64_t v182 = *(void *)v179;
    uint64_t v183 = *((void *)v179 + 1);
    unsigned __int8 v184 = v179[16];
    sub_10018F6EC(*(void *)v179, v183, v184);
    *char v178 = v182;
    v178[1] = v183;
    *((unsigned char *)v178 + 16) = v184;
    uint64_t v185 = *((void *)v179 + 4);
    v178[3] = *((void *)v179 + 3);
    v178[4] = v185;
    uint64_t v186 = v180[6];
    v187 = (char *)v178 + v186;
    uint64_t v188 = &v179[v186];
    uint64_t v189 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    uint64_t v692 = v189;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v188, 1, v189))
    {
      uint64_t v190 = sub_10017DF08(&qword_100E63758);
      memcpy(v187, v188, *(void *)(*(void *)(v190 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v189 - 8) + 16))(v187, v188, v189);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v187, 0, 1, v189);
    }
    uint64_t v191 = v180[7];
    uint64_t v192 = (uint64_t *)((char *)v178 + v191);
    uint64_t v193 = (uint64_t *)&v179[v191];
    uint64_t v194 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v209 = v193[1];
        *uint64_t v192 = *v193;
        v192[1] = v209;
        swift_bridgeObjectRetain();
        goto LABEL_208;
      case 2u:
        ((void (*)(uint64_t *, uint64_t *, uint64_t))v725)(v192, v193, v731);
        goto LABEL_208;
      case 3u:
        uint64_t v210 = sub_10017DF08(&qword_100E73808);
        goto LABEL_78;
      case 4u:
        uint64_t v211 = v193[1];
        if (v211)
        {
          *uint64_t v192 = *v193;
          v192[1] = v211;
          uint64_t v212 = v193;
          uint64_t v213 = v193[2];
          uint64_t v214 = v193[3];
          v192[2] = v213;
          v192[3] = v214;
          swift_bridgeObjectRetain();
          uint64_t v193 = v212;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v244 = *((_OWORD *)v193 + 1);
          *(_OWORD *)uint64_t v192 = *(_OWORD *)v193;
          *((_OWORD *)v192 + 1) = v244;
        }
        uint64_t v701 = v92;
        uint64_t v245 = *(int *)(v92 + 20);
        v246 = (uint64_t *)((char *)v192 + v245);
        v247 = (uint64_t *)((char *)v193 + v245);
        uint64_t v248 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v653 = v193;
          v657 = v178;
          __dstd = (void *)v194;
          uint64_t v249 = v247[1];
          void *v246 = *v247;
          v246[1] = v249;
          v650 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v250 = v650[5];
          v251 = (char *)v246 + v250;
          v252 = (char *)v247 + v250;
          uint64_t v253 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          v671 = v179;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v252, 1, v253))
          {
            uint64_t v254 = sub_10017DF08(&qword_100E749B0);
            memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16))(v251, v252, v253);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v251, 0, 1, v253);
          }
          uint64_t v302 = v650[6];
          v303 = (void *)((char *)v246 + v302);
          v304 = (void *)((char *)v247 + v302);
          uint64_t v305 = v304[1];
          void *v303 = *v304;
          v303[1] = v305;
          uint64_t v306 = v650[7];
          v307 = (char *)v246 + v306;
          v308 = (char *)v247 + v306;
          v309 = *(void (**)(char *, char *, uint64_t))(*(void *)(v253 - 8) + 16);
          swift_bridgeObjectRetain();
          v309(v307, v308, v253);
          uint64_t v310 = v650[8];
          v311 = (char *)v246 + v310;
          v312 = (char *)v247 + v310;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v247 + v310, 1, v253))
          {
            uint64_t v313 = sub_10017DF08(&qword_100E749B0);
            memcpy(v311, v312, *(void *)(*(void *)(v313 - 8) + 64));
          }
          else
          {
            v309(v311, v312, v253);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v311, 0, 1, v253);
          }
          char v178 = v657;
          uint64_t v179 = v671;
          *((unsigned char *)v246 + v650[9]) = *((unsigned char *)v247 + v650[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v194 = (uint64_t)__dstd;
          uint64_t v193 = v653;
        }
        else
        {
          memcpy(v246, v247, *(void *)(*(void *)(v248 - 8) + 64));
        }
        uint64_t v321 = *(int *)(v701 + 24);
        v322 = (char *)v192 + v321;
        v323 = (char *)v193 + v321;
        uint64_t v324 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v323, 1, v324))
        {
          uint64_t v325 = sub_10017DF08(&qword_100E73810);
          memcpy(v322, v323, *(void *)(*(void *)(v325 - 8) + 64));
        }
        else
        {
          uint64_t v326 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v326 - 8) + 16))(v322, v323, v326);
          uint64_t v327 = sub_10017DF08(&qword_100E66478);
          v322[*(int *)(v327 + 48)] = v323[*(int *)(v327 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v322, 0, 1, v324);
        }
        uint64_t v92 = v701;
        goto LABEL_208;
      case 5u:
        uint64_t v700 = v92;
        v656 = v178;
        v662 = v180;
        v669 = v179;
        __dstb = (void *)v194;
        if (v193[3])
        {
          uint64_t v215 = v193;
          uint64_t v216 = *v193;
          uint64_t v217 = v215[1];
          char v218 = *((unsigned char *)v215 + 16);
          sub_100190CC4(v216, v217, v218);
          *uint64_t v192 = v216;
          v192[1] = v217;
          uint64_t v193 = v215;
          *((unsigned char *)v192 + 16) = v218;
          v192[3] = v215[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v255 = *((_OWORD *)v193 + 1);
          *(_OWORD *)uint64_t v192 = *(_OWORD *)v193;
          *((_OWORD *)v192 + 1) = v255;
        }
        v256 = v193;
        uint64_t v257 = v193[4];
        uint64_t v258 = v256[5];
        uint64_t v259 = v256[6];
        uint64_t v261 = v256[7];
        uint64_t v260 = v256[8];
        uint64_t v263 = v256[9];
        uint64_t v262 = v256[10];
        char v264 = *((unsigned char *)v256 + 89);
        unsigned __int8 v265 = *((unsigned char *)v256 + 88);
        sub_10033A9E8(v257, v258, v259, v261, v260, v263, v262, v265, v264);
        v192[4] = v257;
        v192[5] = v258;
        v192[6] = v259;
        v192[7] = v261;
        v192[8] = v260;
        v192[9] = v263;
        v192[10] = v262;
        *((unsigned char *)v192 + 88) = v265;
        *((unsigned char *)v192 + 89) = v264;
        char v178 = v656;
        uint64_t v180 = v662;
        uint64_t v179 = v669;
        uint64_t v194 = (uint64_t)__dstb;
        uint64_t v92 = v700;
        goto LABEL_208;
      case 6u:
        uint64_t v210 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_78:
        uint64_t v195 = v210;
        uint64_t v196 = v210;
        goto LABEL_79;
      case 7u:
        uint64_t v648 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v219 = swift_getEnumCaseMultiPayload();
        if (v219 != 1)
        {
          if (v219)
          {
            memcpy(v192, v193, *(void *)(*(void *)(v648 - 8) + 64));
          }
          else
          {
            uint64_t v220 = v193[1];
            *uint64_t v192 = *v193;
            v192[1] = v220;
            v192[2] = v193[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_208:
          swift_storeEnumTagMultiPayload();
          uint64_t v489 = v180[8];
          v490 = (uint64_t *)((char *)v178 + v489);
          v491 = (char *)&v179[v489];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v179[v489], 1, v194))
          {
            uint64_t v492 = sub_10017DF08(&qword_100E73818);
            memcpy(v490, v491, *(void *)(*(void *)(v492 - 8) + 64));
LABEL_293:
            *((unsigned char *)v178 + v180[9]) = v179[v180[9]];
            *((unsigned char *)v178 + v180[10]) = v179[v180[10]];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, (uint64_t)v180);
            goto LABEL_294;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v495 = *((void *)v491 + 1);
              void *v490 = *(void *)v491;
              v490[1] = v495;
              swift_bridgeObjectRetain();
              goto LABEL_292;
            case 2u:
              ((void (*)(void *, char *, uint64_t))v725)(v490, v491, v731);
              goto LABEL_292;
            case 3u:
              uint64_t v496 = sub_10017DF08(&qword_100E73808);
              goto LABEL_220;
            case 4u:
              __dstj = (void *)v194;
              uint64_t v497 = *((void *)v491 + 1);
              v659 = v178;
              if (v497)
              {
                void *v490 = *(void *)v491;
                v490[1] = v497;
                uint64_t v498 = *((void *)v491 + 3);
                v490[2] = *((void *)v491 + 2);
                v490[3] = v498;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v505 = *((_OWORD *)v491 + 1);
                *(_OWORD *)v490 = *(_OWORD *)v491;
                *((_OWORD *)v490 + 1) = v505;
              }
              uint64_t v703 = v92;
              uint64_t v506 = *(int *)(v92 + 20);
              v728 = v490;
              v507 = (void *)((char *)v490 + v506);
              v508 = &v491[v506];
              uint64_t v509 = type metadata accessor for NewsArticleComponentViewModel(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v678 = v179;
                uint64_t v510 = *((void *)v508 + 1);
                void *v507 = *(void *)v508;
                v507[1] = v510;
                v722 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v511 = v722[5];
                v512 = (char *)v507 + v511;
                v513 = &v508[v511];
                uint64_t v514 = type metadata accessor for URL();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v513, 1, v514))
                {
                  uint64_t v515 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v512, v513, *(void *)(*(void *)(v515 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v514 - 8) + 16))(v512, v513, v514);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v512, 0, 1, v514);
                }
                uint64_t v536 = v722[6];
                v537 = (void *)((char *)v507 + v536);
                v538 = &v508[v536];
                uint64_t v539 = *((void *)v538 + 1);
                void *v537 = *(void *)v538;
                v537[1] = v539;
                uint64_t v540 = v722[7];
                v541 = (char *)v507 + v540;
                v542 = &v508[v540];
                v543 = *(void (**)(char *, char *, uint64_t))(*(void *)(v514 - 8) + 16);
                swift_bridgeObjectRetain();
                v543(v541, v542, v514);
                uint64_t v544 = v722[8];
                v545 = (char *)v507 + v544;
                v546 = &v508[v544];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v508[v544], 1, v514))
                {
                  uint64_t v547 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v545, v546, *(void *)(*(void *)(v547 - 8) + 64));
                }
                else
                {
                  v543(v545, v546, v514);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v545, 0, 1, v514);
                }
                uint64_t v179 = v678;
                *((unsigned char *)v507 + v722[9]) = v508[v722[9]];
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v507, v508, *(void *)(*(void *)(v509 - 8) + 64));
              }
              uint64_t v548 = *(int *)(v703 + 24);
              v549 = (char *)v728 + v548;
              v550 = &v491[v548];
              uint64_t v551 = type metadata accessor for DetailComponentAction();
              char v178 = v659;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v550, 1, v551))
              {
                uint64_t v552 = sub_10017DF08(&qword_100E73810);
                memcpy(v549, v550, *(void *)(*(void *)(v552 - 8) + 64));
              }
              else
              {
                uint64_t v553 = type metadata accessor for URL();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v553 - 8) + 16))(v549, v550, v553);
                uint64_t v554 = sub_10017DF08(&qword_100E66478);
                v549[*(int *)(v554 + 48)] = v550[*(int *)(v554 + 48)];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v549, 0, 1, v551);
              }
              uint64_t v194 = (uint64_t)__dstj;
              v490 = v728;
              goto LABEL_292;
            case 5u:
              v667 = v180;
              v677 = v179;
              v660 = v178;
              __dstk = (void *)v194;
              if (*((void *)v491 + 3))
              {
                uint64_t v499 = *(void *)v491;
                uint64_t v500 = *((void *)v491 + 1);
                char v501 = v491[16];
                sub_100190CC4(*(void *)v491, v500, v501);
                void *v490 = v499;
                v490[1] = v500;
                *((unsigned char *)v490 + 16) = v501;
                v490[3] = *((void *)v491 + 3);
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v516 = *((_OWORD *)v491 + 1);
                *(_OWORD *)v490 = *(_OWORD *)v491;
                *((_OWORD *)v490 + 1) = v516;
              }
              uint64_t v517 = *((void *)v491 + 4);
              uint64_t v518 = *((void *)v491 + 5);
              uint64_t v520 = *((void *)v491 + 6);
              uint64_t v519 = *((void *)v491 + 7);
              uint64_t v521 = *((void *)v491 + 8);
              uint64_t v522 = *((void *)v491 + 9);
              uint64_t v523 = *((void *)v491 + 10);
              char v524 = v491[89];
              uint64_t v525 = v491[88];
              sub_10033A9E8(v517, v518, v520, v519, v521, v522, v523, v525, v524);
              v490[4] = v517;
              v490[5] = v518;
              v490[6] = v520;
              v490[7] = v519;
              v490[8] = v521;
              v490[9] = v522;
              v490[10] = v523;
              *((unsigned char *)v490 + 88) = v525;
              *((unsigned char *)v490 + 89) = v524;
              goto LABEL_291;
            case 6u:
              uint64_t v496 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_220:
              uint64_t v493 = v496;
              uint64_t v494 = v496;
              goto LABEL_221;
            case 7u:
              uint64_t v502 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
              int v503 = swift_getEnumCaseMultiPayload();
              if (v503 != 1)
              {
                if (v503)
                {
                  memcpy(v490, v491, *(void *)(*(void *)(v502 - 8) + 64));
                }
                else
                {
                  uint64_t v504 = *((void *)v491 + 1);
                  void *v490 = *(void *)v491;
                  v490[1] = v504;
                  v490[2] = *((void *)v491 + 2);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_storeEnumTagMultiPayload();
                }
                goto LABEL_292;
              }
              v667 = v180;
              v677 = v179;
              v660 = v178;
              uint64_t v526 = *((void *)v491 + 1);
              void *v490 = *(void *)v491;
              v490[1] = v526;
              v527 = (int *)type metadata accessor for ConditionDetailMapViewModel();
              uint64_t v528 = v527[5];
              v529 = (char *)v490 + v528;
              v530 = &v491[v528];
              swift_bridgeObjectRetain();
              ((void (*)(char *, char *, uint64_t))v714)(v529, v530, v718);
              uint64_t v531 = v527[6];
              v532 = (void *)((char *)v490 + v531);
              v533 = &v491[v531];
              v534 = (int *)type metadata accessor for WeatherData(0);
              __dstk = (void *)v194;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v533, 1, (uint64_t)v534))
              {
                uint64_t v535 = sub_10017DF08(&qword_100E63850);
                memcpy(v532, v533, *(void *)(*(void *)(v535 - 8) + 64));
                goto LABEL_290;
              }
              v716 = v527;
              uint64_t v555 = *((void *)v533 + 1);
              void *v532 = *(void *)v533;
              v532[1] = v555;
              v720 = v532;
              v723 = v534;
              uint64_t v556 = v534[5];
              v557 = (char *)v532 + v556;
              v558 = &v533[v556];
              uint64_t v559 = type metadata accessor for Locale();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v558, 1, v559))
              {
                uint64_t v560 = sub_10017DF08(&qword_100E63730);
                memcpy(v557, v558, *(void *)(*(void *)(v560 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v559 - 8) + 16))(v557, v558, v559);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v557, 0, 1, v559);
              }
              uint64_t v571 = v534[6];
              v572 = (char *)v720 + v571;
              v573 = &v533[v571];
              uint64_t v574 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v574 - 8) + 16))(v572, v573, v574);
              uint64_t v575 = v534[7];
              v576 = (char *)v720 + v575;
              v577 = &v533[v575];
              uint64_t v578 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v577, 1, v578))
              {
                uint64_t v579 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v576, v577, *(void *)(*(void *)(v579 - 8) + 64));
              }
              else
              {
                ((void (*)(char *, char *, uint64_t))v710)(v576, v577, v712);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v576, 0, 1, v578);
              }
              uint64_t v586 = v534[8];
              v587 = (void *)((char *)v720 + v586);
              v588 = &v533[v586];
              uint64_t v589 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              int v590 = swift_getEnumCaseMultiPayload();
              if (v590 == 1)
              {
                uint64_t v601 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v601 - 8) + 16))(v587, v588, v601);
              }
              else
              {
                if (v590)
                {
                  memcpy(v587, v588, *(void *)(*(void *)(v589 - 8) + 64));
LABEL_271:
                  uint64_t v602 = (uint64_t)v720;
                  uint64_t v603 = (uint64_t)v534;
                  uint64_t v604 = v534[9];
                  v605 = (char *)v720 + v604;
                  v606 = &v533[v604];
                  uint64_t v607 = type metadata accessor for WeatherDataOverrides();
                  v527 = v716;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v606, 1, v607))
                  {
                    uint64_t v608 = sub_10017DF08(&qword_100E63740);
                    memcpy(v605, v606, *(void *)(*(void *)(v608 - 8) + 64));
                  }
                  else
                  {
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v606, 1, v712))
                    {
                      uint64_t v609 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      v610 = v605;
                      memcpy(v605, v606, *(void *)(*(void *)(v609 - 8) + 64));
                    }
                    else
                    {
                      v610 = v605;
                      ((void (*)(char *, char *, uint64_t))v710)(v605, v606, v712);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v605, 0, 1, v712);
                    }
                    uint64_t v615 = *(int *)(v607 + 20);
                    v616 = &v610[v615];
                    v617 = &v606[v615];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v606[v615], 1, v712))
                    {
                      uint64_t v618 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v616, v617, *(void *)(*(void *)(v618 - 8) + 64));
                    }
                    else
                    {
                      ((void (*)(char *, char *, uint64_t))v710)(v616, v617, v712);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v616, 0, 1, v712);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v605, 0, 1, v607);
                    uint64_t v602 = (uint64_t)v720;
                    uint64_t v603 = (uint64_t)v723;
                  }
                  _s7Weather24LocationCompositionStateOwst_0(v602, 0, 1, v603);
LABEL_290:
                  uint64_t v630 = v527[7];
                  v631 = (void *)((char *)v490 + v630);
                  v632 = &v491[v630];
                  uint64_t v633 = *((void *)v632 + 1);
                  void *v631 = *(void *)v632;
                  v631[1] = v633;
                  uint64_t v634 = v527[8];
                  v635 = (char *)v490 + v634;
                  v636 = &v491[v634];
                  uint64_t v637 = type metadata accessor for WeatherMapOverlayKind();
                  v638 = *(void (**)(char *, char *, uint64_t))(*(void *)(v637 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v638(v635, v636, v637);
                  *((unsigned char *)v490 + v527[9]) = v491[v527[9]];
                  swift_storeEnumTagMultiPayload();
LABEL_291:
                  char v178 = v660;
                  uint64_t v180 = v667;
                  uint64_t v179 = v677;
                  uint64_t v194 = (uint64_t)__dstk;
LABEL_292:
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v490, 0, 1, v194);
                  goto LABEL_293;
                }
                uint64_t v591 = *((void *)v588 + 1);
                void *v587 = *(void *)v588;
                v587[1] = v591;
                swift_bridgeObjectRetain();
              }
              swift_storeEnumTagMultiPayload();
              goto LABEL_271;
            default:
              uint64_t v493 = v692;
              uint64_t v494 = v692;
LABEL_221:
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v494 - 8) + 16))(v490, v491, v493);
              goto LABEL_292;
          }
        }
        v673 = v179;
        __dstf = (void *)v194;
        v664 = v180;
        uint64_t v278 = *v193;
        v654 = v193;
        uint64_t v279 = v193[1];
        *uint64_t v192 = v278;
        v192[1] = v279;
        uint64_t v280 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v281 = *(int *)(v280 + 20);
        v282 = (char *)v192 + v281;
        v283 = (char *)v654 + v281;
        v284 = v654;
        swift_bridgeObjectRetain();
        ((void (*)(char *, char *, uint64_t))v714)(v282, v283, v718);
        v643 = (int *)v280;
        uint64_t v285 = *(int *)(v280 + 24);
        v286 = (uint64_t *)((char *)v192 + v285);
        v287 = (uint64_t *)((char *)v654 + v285);
        uint64_t v288 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v287, 1, v288))
        {
          uint64_t v289 = sub_10017DF08(&qword_100E63850);
          memcpy(v286, v287, *(void *)(*(void *)(v289 - 8) + 64));
LABEL_207:
          uint64_t v480 = v643[7];
          v481 = (uint64_t *)((char *)v192 + v480);
          v482 = (uint64_t *)((char *)v284 + v480);
          v483 = v284;
          uint64_t v484 = v482[1];
          void *v481 = *v482;
          v481[1] = v484;
          uint64_t v485 = v643[8];
          v486 = (char *)v192 + v485;
          uint64_t v655 = (uint64_t)v483 + v485;
          v647 = v192;
          uint64_t v487 = type metadata accessor for WeatherMapOverlayKind();
          v488 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v487 - 8) + 16);
          swift_bridgeObjectRetain();
          v488(v486, v655, v487);
          *((unsigned char *)v647 + v643[9]) = *((unsigned char *)v483 + v643[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v180 = v664;
          uint64_t v179 = v673;
          uint64_t v194 = (uint64_t)__dstf;
          goto LABEL_208;
        }
        uint64_t v702 = v92;
        v658 = v178;
        uint64_t v336 = v287[1];
        void *v286 = *v287;
        v286[1] = v336;
        v646 = (int *)v288;
        uint64_t v337 = *(int *)(v288 + 20);
        v338 = (char *)v286 + v337;
        v339 = (char *)v287 + v337;
        uint64_t v340 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        v341 = v287;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v339, 1, v340))
        {
          uint64_t v342 = sub_10017DF08(&qword_100E63730);
          memcpy(v338, v339, *(void *)(*(void *)(v342 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v340 - 8) + 16))(v338, v339, v340);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v338, 0, 1, v340);
        }
        uint64_t v353 = v646[6];
        v354 = (char *)v286 + v353;
        v355 = (char *)v287 + v353;
        uint64_t v356 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v354, v355, v356);
        uint64_t v357 = v646[7];
        v358 = (char *)v286 + v357;
        v359 = (char *)v341 + v357;
        uint64_t v360 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v359, 1, v360))
        {
          uint64_t v361 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v358, v359, *(void *)(*(void *)(v361 - 8) + 64));
          uint64_t v362 = v712;
        }
        else
        {
          uint64_t v362 = v712;
          ((void (*)(char *, char *, uint64_t))v710)(v358, v359, v712);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v358, 0, 1, v360);
        }
        uint64_t v369 = v646[8];
        v370 = (void *)((char *)v286 + v369);
        v371 = (void *)((char *)v341 + v369);
        uint64_t v372 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v373 = swift_getEnumCaseMultiPayload();
        if (v373 == 1)
        {
          uint64_t v382 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v382 - 8) + 16))(v370, v371, v382);
        }
        else
        {
          if (v373)
          {
            memcpy(v370, v371, *(void *)(*(void *)(v372 - 8) + 64));
            goto LABEL_150;
          }
          uint64_t v374 = v371[1];
          void *v370 = *v371;
          v370[1] = v374;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_150:
        uint64_t v383 = v646[9];
        v384 = (char *)v286 + v383;
        v385 = (char *)v341 + v383;
        uint64_t v386 = type metadata accessor for WeatherDataOverrides();
        v284 = v654;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v385, 1, v386))
        {
          uint64_t v387 = sub_10017DF08(&qword_100E63740);
          memcpy(v384, v385, *(void *)(*(void *)(v387 - 8) + 64));
          char v178 = v658;
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v385, 1, v362))
          {
            uint64_t v388 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v384, v385, *(void *)(*(void *)(v388 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v710)(v384, v385, v362);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v362);
          }
          uint64_t v393 = *(int *)(v386 + 20);
          v394 = &v384[v393];
          v395 = &v385[v393];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v395, 1, v362))
          {
            uint64_t v396 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v394, v395, *(void *)(*(void *)(v396 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v710)(v394, v395, v362);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v394, 0, 1, v362);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v386);
          v284 = v654;
          char v178 = v658;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v286, 0, 1, (uint64_t)v646);
        uint64_t v92 = v702;
        goto LABEL_207;
      default:
        uint64_t v195 = v692;
        uint64_t v196 = v692;
LABEL_79:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v196 - 8) + 16))(v192, v193, v195);
        goto LABEL_208;
    }
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    char v10 = (int *)_s11NormalModelVMa();
    uint64_t v11 = v10[7];
    v729 = (char *)a1 + v11;
    char v12 = (char *)a2 + v11;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v729, v12, v13);
    v14((char *)a1 + v10[8], (char *)a2 + v10[8], v13);
    v709 = v14;
    uint64_t v711 = v13;
    v14((char *)a1 + v10[9], (char *)a2 + v10[9], v13);
    uint64_t v15 = v10[10];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = v10[11];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for AttributedString();
    v724 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
    uint64_t v730 = v22;
    v724(v20, v21);
    *(uint64_t *)((char *)a1 + v10[12]) = *(uint64_t *)((char *)a2 + v10[12]);
    uint64_t v23 = v10[13];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    long long v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v24, v25, v26);
    uint64_t v28 = v10[14];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v717 = type metadata accessor for Location();
    v713 = *(void (**)(char *, char *))(*(void *)(v717 - 8) + 16);
    v713(v29, v30);
    uint64_t v31 = v10[15];
    unint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = type metadata accessor for SunEvents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    uint64_t v35 = v10[16];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = v10[17];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = v10[18];
    uint64_t v44 = (uint64_t *)((char *)a1 + v43);
    uint64_t v45 = (uint64_t *)((char *)a2 + v43);
    uint64_t v46 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
    {
      uint64_t v47 = sub_10017DF08(&qword_100E66E28);
      memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v94 = v45[1];
      if (v94)
      {
        *uint64_t v44 = *v45;
        v44[1] = v94;
        uint64_t v95 = v45[3];
        v44[2] = v45[2];
        v44[3] = v95;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v98 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        *((_OWORD *)v44 + 1) = v98;
      }
      uint64_t v99 = *(int *)(v46 + 20);
      uint64_t v100 = (void *)((char *)v44 + v99);
      uint64_t v101 = (void *)((char *)v45 + v99);
      uint64_t v102 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v704 = v46;
        uint64_t v103 = v101[1];
        *uint64_t v100 = *v101;
        v100[1] = v103;
        v698 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v104 = v698[5];
        unint64_t v105 = (char *)v100 + v104;
        uint64_t v106 = (char *)v101 + v104;
        uint64_t v107 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
        {
          uint64_t v108 = sub_10017DF08(&qword_100E749B0);
          memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
        }
        uint64_t v119 = v698[6];
        uint64_t v120 = (void *)((char *)v100 + v119);
        uint64_t v121 = (void *)((char *)v101 + v119);
        uint64_t v122 = v121[1];
        *uint64_t v120 = *v121;
        v120[1] = v122;
        uint64_t v123 = v698[7];
        __dstl = (char *)v100 + v123;
        uint64_t v124 = (char *)v101 + v123;
        uint64_t v125 = v107;
        uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
        swift_bridgeObjectRetain();
        v126(__dstl, v124, v125);
        uint64_t v127 = v698[8];
        uint64_t v128 = (char *)v100 + v127;
        uint64_t v129 = (char *)v101 + v127;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101 + v127, 1, v125))
        {
          uint64_t v130 = sub_10017DF08(&qword_100E749B0);
          memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          v126(v128, v129, v125);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v125);
        }
        *((unsigned char *)v100 + v698[9]) = *((unsigned char *)v101 + v698[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v46 = v704;
      }
      else
      {
        memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      }
      uint64_t v143 = *(int *)(v46 + 24);
      uint64_t v144 = (char *)v44 + v143;
      uint64_t v145 = (char *)v45 + v143;
      uint64_t v146 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
      {
        uint64_t v147 = sub_10017DF08(&qword_100E73810);
        memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        uint64_t v148 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v144, v145, v148);
        uint64_t v149 = sub_10017DF08(&qword_100E66478);
        v144[*(int *)(v149 + 48)] = v145[*(int *)(v149 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v146);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
    }
    uint64_t v150 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    uint64_t v151 = (uint64_t *)((char *)a1 + v150);
    uint64_t v152 = (unsigned __int8 *)a2 + v150;
    uint64_t v153 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, (uint64_t)v153))
    {
      uint64_t v154 = sub_10017DF08(&qword_100E66E40);
      memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
LABEL_294:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v155 = *(void *)v152;
    uint64_t v156 = *((void *)v152 + 1);
    unsigned __int8 v157 = v152[16];
    sub_10018F6EC(*(void *)v152, v156, v157);
    *uint64_t v151 = v155;
    v151[1] = v156;
    *((unsigned char *)v151 + 16) = v157;
    uint64_t v158 = *((void *)v152 + 4);
    v151[3] = *((void *)v152 + 3);
    v151[4] = v158;
    uint64_t v159 = v153[6];
    uint64_t v160 = (char *)v151 + v159;
    uint64_t v161 = &v152[v159];
    uint64_t v162 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    uint64_t v699 = v162;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
    {
      uint64_t v163 = sub_10017DF08(&qword_100E63758);
      memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
    }
    uint64_t v164 = v153[7];
    uint64_t v165 = (uint64_t *)((char *)v151 + v164);
    uint64_t v166 = (uint64_t *)&v152[v164];
    uint64_t v167 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v197 = v166[1];
        *uint64_t v165 = *v166;
        v165[1] = v197;
        swift_bridgeObjectRetain();
        goto LABEL_165;
      case 2u:
        ((void (*)(uint64_t *, uint64_t *, uint64_t))v724)(v165, v166, v730);
        goto LABEL_165;
      case 3u:
        uint64_t v198 = sub_10017DF08(&qword_100E73808);
        goto LABEL_64;
      case 4u:
        uint64_t v199 = v166[1];
        uint64_t v693 = v167;
        if (v199)
        {
          *uint64_t v165 = *v166;
          v165[1] = v199;
          uint64_t v200 = v166;
          uint64_t v201 = v166[2];
          uint64_t v202 = v166[3];
          v165[2] = v201;
          v165[3] = v202;
          swift_bridgeObjectRetain();
          uint64_t v166 = v200;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v221 = *((_OWORD *)v166 + 1);
          *(_OWORD *)uint64_t v165 = *(_OWORD *)v166;
          *((_OWORD *)v165 + 1) = v221;
        }
        uint64_t v222 = *(int *)(v46 + 20);
        uint64_t v223 = (uint64_t *)((char *)v165 + v222);
        v224 = v165;
        uint64_t v225 = (uint64_t *)((char *)v166 + v222);
        uint64_t v226 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v707 = v46;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v649 = v166;
          __dstc = v153;
          uint64_t v227 = v225[1];
          *uint64_t v223 = *v225;
          v223[1] = v227;
          v642 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v228 = v642[5];
          v229 = (char *)v223 + v228;
          v230 = (char *)v225 + v228;
          uint64_t v231 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          v670 = v151;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v230, 1, v231))
          {
            uint64_t v232 = sub_10017DF08(&qword_100E749B0);
            memcpy(v229, v230, *(void *)(*(void *)(v232 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v229, v230, v231);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v229, 0, 1, v231);
          }
          uint64_t v290 = v642[6];
          v291 = (void *)((char *)v223 + v290);
          v292 = (void *)((char *)v225 + v290);
          uint64_t v293 = v292[1];
          void *v291 = *v292;
          v291[1] = v293;
          uint64_t v294 = v642[7];
          v295 = (char *)v223 + v294;
          v296 = (char *)v225 + v294;
          v297 = *(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16);
          swift_bridgeObjectRetain();
          v297(v295, v296, v231);
          uint64_t v298 = v642[8];
          v299 = (char *)v223 + v298;
          v300 = (char *)v225 + v298;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v225 + v298, 1, v231))
          {
            uint64_t v301 = sub_10017DF08(&qword_100E749B0);
            memcpy(v299, v300, *(void *)(*(void *)(v301 - 8) + 64));
          }
          else
          {
            v297(v299, v300, v231);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v299, 0, 1, v231);
          }
          uint64_t v151 = v670;
          uint64_t v167 = v693;
          *((unsigned char *)v223 + v642[9]) = *((unsigned char *)v225 + v642[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v153 = __dstc;
          uint64_t v46 = v707;
          uint64_t v166 = v649;
        }
        else
        {
          memcpy(v223, v225, *(void *)(*(void *)(v226 - 8) + 64));
          uint64_t v167 = v693;
        }
        uint64_t v314 = *(int *)(v46 + 24);
        v315 = (char *)v224 + v314;
        v316 = (char *)v166 + v314;
        uint64_t v317 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v316, 1, v317))
        {
          uint64_t v318 = sub_10017DF08(&qword_100E73810);
          memcpy(v315, v316, *(void *)(*(void *)(v318 - 8) + 64));
        }
        else
        {
          uint64_t v319 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 16))(v315, v316, v319);
          uint64_t v320 = sub_10017DF08(&qword_100E66478);
          v315[*(int *)(v320 + 48)] = v316[*(int *)(v320 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v315, 0, 1, v317);
        }
        uint64_t v46 = v707;
        goto LABEL_165;
      case 5u:
        uint64_t v706 = v46;
        v661 = v152;
        v668 = v151;
        __dsta = v153;
        uint64_t v694 = v167;
        if (v166[3])
        {
          uint64_t v203 = v166;
          uint64_t v204 = *v166;
          uint64_t v205 = v203[1];
          char v206 = *((unsigned char *)v203 + 16);
          sub_100190CC4(v204, v205, v206);
          *uint64_t v165 = v204;
          v165[1] = v205;
          uint64_t v166 = v203;
          *((unsigned char *)v165 + 16) = v206;
          v165[3] = v203[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v233 = *((_OWORD *)v166 + 1);
          *(_OWORD *)uint64_t v165 = *(_OWORD *)v166;
          *((_OWORD *)v165 + 1) = v233;
        }
        v234 = v166;
        uint64_t v235 = v166[4];
        uint64_t v236 = v234[5];
        uint64_t v237 = v234[6];
        uint64_t v239 = v234[7];
        uint64_t v238 = v234[8];
        uint64_t v240 = v234[9];
        uint64_t v241 = v234[10];
        char v242 = *((unsigned char *)v234 + 89);
        unsigned __int8 v243 = *((unsigned char *)v234 + 88);
        sub_10033A9E8(v235, v236, v237, v239, v238, v240, v241, v243, v242);
        v165[4] = v235;
        v165[5] = v236;
        v165[6] = v237;
        v165[7] = v239;
        v165[8] = v238;
        v165[9] = v240;
        v165[10] = v241;
        *((unsigned char *)v165 + 88) = v243;
        *((unsigned char *)v165 + 89) = v242;
        uint64_t v152 = v661;
        uint64_t v151 = v668;
        uint64_t v153 = __dsta;
        uint64_t v167 = v694;
        goto LABEL_164;
      case 6u:
        uint64_t v198 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_64:
        uint64_t v168 = v198;
        uint64_t v169 = v198;
        goto LABEL_65;
      case 7u:
        uint64_t v645 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v207 = swift_getEnumCaseMultiPayload();
        if (v207 != 1)
        {
          if (v207)
          {
            memcpy(v165, v166, *(void *)(*(void *)(v645 - 8) + 64));
          }
          else
          {
            uint64_t v208 = v166[1];
            *uint64_t v165 = *v166;
            v165[1] = v208;
            v165[2] = v166[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_165;
        }
        uint64_t v706 = v46;
        v663 = v152;
        v672 = v151;
        uint64_t v266 = *v166;
        v651 = v166;
        uint64_t v267 = v166[1];
        *uint64_t v165 = v266;
        v165[1] = v267;
        v268 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v269 = v268[5];
        v270 = (char *)v165 + v269;
        v271 = (char *)v651 + v269;
        v272 = v651;
        swift_bridgeObjectRetain();
        ((void (*)(char *, char *, uint64_t))v713)(v270, v271, v717);
        uint64_t v273 = v268[6];
        v274 = (uint64_t *)((char *)v165 + v273);
        v275 = (uint64_t *)((char *)v651 + v273);
        uint64_t v276 = type metadata accessor for WeatherData(0);
        __dste = v153;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v275, 1, v276))
        {
          uint64_t v277 = sub_10017DF08(&qword_100E63850);
          memcpy(v274, v275, *(void *)(*(void *)(v277 - 8) + 64));
          goto LABEL_163;
        }
        v640 = v268;
        v328 = v275;
        uint64_t v329 = *v275;
        uint64_t v330 = v275[1];
        void *v274 = v329;
        v274[1] = v330;
        v641 = v328;
        v644 = (int *)v276;
        uint64_t v331 = *(int *)(v276 + 20);
        v332 = (char *)v274 + v331;
        v333 = (char *)v328 + v331;
        uint64_t v334 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v333, 1, v334))
        {
          uint64_t v335 = sub_10017DF08(&qword_100E63730);
          memcpy(v332, v333, *(void *)(*(void *)(v335 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 16))(v332, v333, v334);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v332, 0, 1, v334);
        }
        uint64_t v343 = v644[6];
        v344 = (char *)v274 + v343;
        uint64_t v345 = (uint64_t)v641 + v343;
        uint64_t v346 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v346 - 8) + 16))(v344, v345, v346);
        uint64_t v347 = v644[7];
        v348 = (char *)v274 + v347;
        v349 = (char *)v641 + v347;
        uint64_t v350 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v349, 1, v350))
        {
          uint64_t v351 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v348, v349, *(void *)(*(void *)(v351 - 8) + 64));
          uint64_t v352 = v711;
        }
        else
        {
          uint64_t v352 = v711;
          v709(v348, v349, v711);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v348, 0, 1, v350);
        }
        uint64_t v363 = v644[8];
        v364 = (void *)((char *)v274 + v363);
        v365 = (uint64_t *)((char *)v641 + v363);
        uint64_t v366 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v367 = swift_getEnumCaseMultiPayload();
        if (v367 == 1)
        {
          uint64_t v375 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v375 - 8) + 16))(v364, v365, v375);
          goto LABEL_141;
        }
        if (!v367)
        {
          uint64_t v368 = v365[1];
          void *v364 = *v365;
          v364[1] = v368;
          swift_bridgeObjectRetain();
LABEL_141:
          swift_storeEnumTagMultiPayload();
          goto LABEL_143;
        }
        memcpy(v364, v365, *(void *)(*(void *)(v366 - 8) + 64));
LABEL_143:
        uint64_t v376 = v644[9];
        v377 = (char *)v274 + v376;
        v378 = (char *)v641 + v376;
        uint64_t v379 = type metadata accessor for WeatherDataOverrides();
        v272 = v651;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v378, 1, v379))
        {
          uint64_t v380 = sub_10017DF08(&qword_100E63740);
          memcpy(v377, v378, *(void *)(*(void *)(v380 - 8) + 64));
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v378, 1, v352))
          {
            uint64_t v381 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v377, v378, *(void *)(*(void *)(v381 - 8) + 64));
          }
          else
          {
            v709(v377, v378, v352);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v377, 0, 1, v352);
          }
          uint64_t v389 = *(int *)(v379 + 20);
          v390 = &v377[v389];
          v391 = &v378[v389];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v391, 1, v352))
          {
            uint64_t v392 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v390, v391, *(void *)(*(void *)(v392 - 8) + 64));
          }
          else
          {
            v709(v390, v391, v352);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v390, 0, 1, v352);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v377, 0, 1, v379);
          v272 = v651;
        }
        v268 = v640;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v274, 0, 1, (uint64_t)v644);
LABEL_163:
        uint64_t v397 = v268[7];
        v398 = (uint64_t *)((char *)v165 + v397);
        v399 = (uint64_t *)((char *)v272 + v397);
        v400 = v272;
        uint64_t v401 = v399[1];
        void *v398 = *v399;
        v398[1] = v401;
        uint64_t v402 = v268[8];
        v403 = (char *)v165 + v402;
        uint64_t v652 = (uint64_t)v400 + v402;
        v404 = v268;
        uint64_t v405 = type metadata accessor for WeatherMapOverlayKind();
        v406 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v405 - 8) + 16);
        swift_bridgeObjectRetain();
        v406(v403, v652, v405);
        *((unsigned char *)v165 + v404[9]) = *((unsigned char *)v400 + v404[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v152 = v663;
        uint64_t v151 = v672;
        uint64_t v153 = __dste;
LABEL_164:
        uint64_t v46 = v706;
LABEL_165:
        swift_storeEnumTagMultiPayload();
        uint64_t v407 = v153[8];
        v408 = (uint64_t *)((char *)v151 + v407);
        v409 = (char *)&v152[v407];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v152[v407], 1, v167))
        {
          uint64_t v410 = sub_10017DF08(&qword_100E73818);
          memcpy(v408, v409, *(void *)(*(void *)(v410 - 8) + 64));
LABEL_286:
          *((unsigned char *)v151 + v153[9]) = v152[v153[9]];
          *((unsigned char *)v151 + v153[10]) = v152[v153[10]];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, (uint64_t)v153);
          goto LABEL_294;
        }
        break;
      default:
        uint64_t v168 = v699;
        uint64_t v169 = v699;
LABEL_65:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v169 - 8) + 16))(v165, v166, v168);
        goto LABEL_165;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v413 = *((void *)v409 + 1);
        void *v408 = *(void *)v409;
        v408[1] = v413;
        swift_bridgeObjectRetain();
        goto LABEL_285;
      case 2u:
        ((void (*)(void *, char *, uint64_t))v724)(v408, v409, v730);
        goto LABEL_285;
      case 3u:
        uint64_t v414 = sub_10017DF08(&qword_100E73808);
        goto LABEL_177;
      case 4u:
        __dstg = v153;
        uint64_t v695 = v167;
        uint64_t v415 = *((void *)v409 + 1);
        if (v415)
        {
          void *v408 = *(void *)v409;
          v408[1] = v415;
          uint64_t v416 = *((void *)v409 + 3);
          v408[2] = *((void *)v409 + 2);
          v408[3] = v416;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v423 = *((_OWORD *)v409 + 1);
          *(_OWORD *)v408 = *(_OWORD *)v409;
          *((_OWORD *)v408 + 1) = v423;
        }
        uint64_t v424 = *(int *)(v46 + 20);
        v726 = v408;
        v425 = (void *)((char *)v408 + v424);
        v426 = &v409[v424];
        uint64_t v427 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v708 = v46;
          v675 = v151;
          uint64_t v428 = *((void *)v426 + 1);
          void *v425 = *(void *)v426;
          v425[1] = v428;
          v721 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v429 = v721[5];
          v430 = (char *)v425 + v429;
          v431 = &v426[v429];
          uint64_t v432 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v431, 1, v432))
          {
            uint64_t v433 = sub_10017DF08(&qword_100E749B0);
            memcpy(v430, v431, *(void *)(*(void *)(v433 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v432 - 8) + 16))(v430, v431, v432);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v430, 0, 1, v432);
          }
          uint64_t v454 = v721[6];
          v455 = (void *)((char *)v425 + v454);
          v456 = &v426[v454];
          uint64_t v457 = *((void *)v456 + 1);
          void *v455 = *(void *)v456;
          v455[1] = v457;
          uint64_t v458 = v721[7];
          v459 = (char *)v425 + v458;
          v460 = &v426[v458];
          v461 = *(void (**)(char *, char *, uint64_t))(*(void *)(v432 - 8) + 16);
          swift_bridgeObjectRetain();
          v461(v459, v460, v432);
          uint64_t v462 = v721[8];
          v463 = (char *)v425 + v462;
          v464 = &v426[v462];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v426[v462], 1, v432))
          {
            uint64_t v465 = sub_10017DF08(&qword_100E749B0);
            memcpy(v463, v464, *(void *)(*(void *)(v465 - 8) + 64));
          }
          else
          {
            v461(v463, v464, v432);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v463, 0, 1, v432);
          }
          uint64_t v151 = v675;
          uint64_t v46 = v708;
          *((unsigned char *)v425 + v721[9]) = v426[v721[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v425, v426, *(void *)(*(void *)(v427 - 8) + 64));
        }
        uint64_t v466 = *(int *)(v46 + 24);
        v467 = (char *)v726 + v466;
        v468 = &v409[v466];
        uint64_t v469 = type metadata accessor for DetailComponentAction();
        uint64_t v167 = v695;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v468, 1, v469))
        {
          uint64_t v470 = sub_10017DF08(&qword_100E73810);
          memcpy(v467, v468, *(void *)(*(void *)(v470 - 8) + 64));
        }
        else
        {
          uint64_t v471 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v471 - 8) + 16))(v467, v468, v471);
          uint64_t v472 = sub_10017DF08(&qword_100E66478);
          v467[*(int *)(v472 + 48)] = v468[*(int *)(v472 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v467, 0, 1, v469);
        }
        uint64_t v153 = __dstg;
        v408 = v726;
        goto LABEL_285;
      case 5u:
        v665 = v152;
        v674 = v151;
        __dsth = v153;
        uint64_t v696 = v167;
        if (*((void *)v409 + 3))
        {
          uint64_t v417 = *(void *)v409;
          uint64_t v418 = *((void *)v409 + 1);
          char v419 = v409[16];
          sub_100190CC4(*(void *)v409, v418, v419);
          void *v408 = v417;
          v408[1] = v418;
          *((unsigned char *)v408 + 16) = v419;
          v408[3] = *((void *)v409 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v434 = *((_OWORD *)v409 + 1);
          *(_OWORD *)v408 = *(_OWORD *)v409;
          *((_OWORD *)v408 + 1) = v434;
        }
        uint64_t v435 = *((void *)v409 + 4);
        uint64_t v436 = *((void *)v409 + 5);
        uint64_t v438 = *((void *)v409 + 6);
        uint64_t v437 = *((void *)v409 + 7);
        uint64_t v439 = *((void *)v409 + 8);
        uint64_t v440 = *((void *)v409 + 9);
        uint64_t v441 = *((void *)v409 + 10);
        char v442 = v409[89];
        uint64_t v443 = v409[88];
        sub_10033A9E8(v435, v436, v438, v437, v439, v440, v441, v443, v442);
        v408[4] = v435;
        v408[5] = v436;
        v408[6] = v438;
        v408[7] = v437;
        v408[8] = v439;
        v408[9] = v440;
        v408[10] = v441;
        *((unsigned char *)v408 + 88) = v443;
        *((unsigned char *)v408 + 89) = v442;
        uint64_t v152 = v665;
        uint64_t v151 = v674;
        uint64_t v153 = __dsth;
        uint64_t v167 = v696;
        goto LABEL_285;
      case 6u:
        uint64_t v414 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_177:
        uint64_t v411 = v414;
        uint64_t v412 = v414;
        goto LABEL_178;
      case 7u:
        uint64_t v420 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v421 = swift_getEnumCaseMultiPayload();
        if (v421 != 1)
        {
          if (v421)
          {
            memcpy(v408, v409, *(void *)(*(void *)(v420 - 8) + 64));
          }
          else
          {
            uint64_t v422 = *((void *)v409 + 1);
            void *v408 = *(void *)v409;
            v408[1] = v422;
            v408[2] = *((void *)v409 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_285:
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v408, 0, 1, v167);
          goto LABEL_286;
        }
        __dstint64_t i = v153;
        uint64_t v697 = v167;
        v666 = v152;
        v676 = v151;
        uint64_t v444 = *((void *)v409 + 1);
        void *v408 = *(void *)v409;
        v408[1] = v444;
        v445 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v446 = v445[5];
        v447 = (char *)v408 + v446;
        v448 = &v409[v446];
        swift_bridgeObjectRetain();
        ((void (*)(char *, char *, uint64_t))v713)(v447, v448, v717);
        uint64_t v449 = v445[6];
        v450 = (void *)((char *)v408 + v449);
        v451 = &v409[v449];
        v452 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v451, 1, (uint64_t)v452))
        {
          uint64_t v453 = sub_10017DF08(&qword_100E63850);
          memcpy(v450, v451, *(void *)(*(void *)(v453 - 8) + 64));
LABEL_284:
          uint64_t v167 = v697;
          uint64_t v619 = v445[7];
          v620 = (void *)((char *)v408 + v619);
          v621 = &v409[v619];
          uint64_t v622 = *((void *)v621 + 1);
          void *v620 = *(void *)v621;
          v620[1] = v622;
          uint64_t v623 = v445[8];
          v624 = (char *)v408 + v623;
          v625 = &v409[v623];
          v626 = v408;
          uint64_t v627 = type metadata accessor for WeatherMapOverlayKind();
          v628 = *(void (**)(char *, char *, uint64_t))(*(void *)(v627 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v629 = v627;
          v408 = v626;
          v628(v624, v625, v629);
          *((unsigned char *)v626 + v445[9]) = v409[v445[9]];
          swift_storeEnumTagMultiPayload();
          uint64_t v152 = v666;
          uint64_t v151 = v676;
          uint64_t v153 = __dsti;
          goto LABEL_285;
        }
        v715 = v445;
        v727 = v408;
        uint64_t v473 = *((void *)v451 + 1);
        void *v450 = *(void *)v451;
        v450[1] = v473;
        uint64_t v474 = (uint64_t)v452;
        uint64_t v475 = v452[5];
        v719 = v450;
        v476 = (char *)v450 + v475;
        v477 = &v451[v475];
        uint64_t v478 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v477, 1, v478))
        {
          uint64_t v479 = sub_10017DF08(&qword_100E63730);
          memcpy(v476, v477, *(void *)(*(void *)(v479 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v478 - 8) + 16))(v476, v477, v478);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v476, 0, 1, v478);
        }
        uint64_t v561 = v452[6];
        v562 = (char *)v719 + v561;
        v563 = &v451[v561];
        uint64_t v564 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v564 - 8) + 16))(v562, v563, v564);
        uint64_t v565 = v452[7];
        v566 = (char *)v719 + v565;
        v567 = &v451[v565];
        uint64_t v568 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v567, 1, v568))
        {
          uint64_t v569 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v566, v567, *(void *)(*(void *)(v569 - 8) + 64));
          uint64_t v570 = v711;
        }
        else
        {
          uint64_t v570 = v711;
          v709(v566, v567, v711);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v566, 0, 1, v568);
        }
        uint64_t v580 = v452[8];
        v581 = (void *)((char *)v719 + v580);
        v582 = &v451[v580];
        uint64_t v583 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v584 = swift_getEnumCaseMultiPayload();
        if (v584 == 1)
        {
          uint64_t v592 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v592 - 8) + 16))(v581, v582, v592);
        }
        else
        {
          if (v584)
          {
            memcpy(v581, v582, *(void *)(*(void *)(v583 - 8) + 64));
            goto LABEL_264;
          }
          uint64_t v585 = *((void *)v582 + 1);
          void *v581 = *(void *)v582;
          v581[1] = v585;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_264:
        uint64_t v593 = v452[9];
        uint64_t v594 = (uint64_t)v719;
        v595 = (char *)v719 + v593;
        v596 = &v451[v593];
        uint64_t v597 = type metadata accessor for WeatherDataOverrides();
        v445 = v715;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v596, 1, v597))
        {
          uint64_t v598 = sub_10017DF08(&qword_100E63740);
          memcpy(v595, v596, *(void *)(*(void *)(v598 - 8) + 64));
          v408 = v727;
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v596, 1, v570))
          {
            uint64_t v599 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            v600 = v595;
            memcpy(v595, v596, *(void *)(*(void *)(v599 - 8) + 64));
          }
          else
          {
            v600 = v595;
            v709(v595, v596, v570);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v595, 0, 1, v570);
          }
          uint64_t v611 = *(int *)(v597 + 20);
          v612 = &v600[v611];
          v613 = &v596[v611];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v613, 1, v570))
          {
            uint64_t v614 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v612, v613, *(void *)(*(void *)(v614 - 8) + 64));
          }
          else
          {
            v709(v612, v613, v570);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v612, 0, 1, v570);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v595, 0, 1, v597);
          v408 = v727;
          uint64_t v594 = (uint64_t)v719;
        }
        _s7Weather24LocationCompositionStateOwst_0(v594, 0, 1, v474);
        goto LABEL_284;
      default:
        uint64_t v411 = v699;
        uint64_t v412 = v699;
LABEL_178:
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v412 - 8) + 16))(v408, v409, v411);
        goto LABEL_285;
    }
  }
  memcpy(a1, a2, *(void *)(v5 + 64));
  return a1;
}

uint64_t sub_1007387B4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v3 = (int *)_s11NormalModelVMa();
    uint64_t v4 = a1 + v3[7];
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v6(v4, v5);
    v6(a1 + v3[8], v5);
    v6(a1 + v3[9], v5);
    uint64_t v7 = a1 + v3[10];
    uint64_t v8 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    uint64_t v9 = a1 + v3[11];
    uint64_t v10 = type metadata accessor for AttributedString();
    uint64_t v208 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    v208(v9, v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = a1 + v3[13];
    uint64_t v12 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    uint64_t v13 = a1 + v3[14];
    uint64_t v14 = type metadata accessor for Location();
    char v206 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    v206(v13, v14);
    uint64_t v15 = a1 + v3[15];
    uint64_t v16 = type metadata accessor for SunEvents();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = a1 + v3[16];
    uint64_t v18 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v19 = a1 + v3[17];
    uint64_t v20 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    uint64_t v21 = a1 + v3[18];
    uint64_t v22 = type metadata accessor for DetailComponentContainerViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
    {
      uint64_t v202 = v14;
      uint64_t v23 = v6;
      if (*(void *)(v21 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v24 = v21 + *(int *)(v22 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v26 = v24 + v25[5];
        uint64_t v27 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
        }
        swift_bridgeObjectRelease();
        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
        v28(v24 + v25[7], v27);
        uint64_t v29 = v24 + v25[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v27)) {
          v28(v29, v27);
        }
      }
      uint64_t v30 = v21 + *(int *)(v22 + 24);
      uint64_t v31 = type metadata accessor for DetailComponentAction();
      uint64_t v6 = v23;
      uint64_t v14 = v202;
      if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31))
      {
        uint64_t v32 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v30, v32);
      }
    }
    uint64_t v33 = a1 + *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    uint64_t v34 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v33, 1, (uint64_t)v34);
    if (result) {
      return result;
    }
    sub_10014D144(*(void *)v33, *(void *)(v33 + 8), *(unsigned char *)(v33 + 16));
    swift_bridgeObjectRelease();
    uint64_t v35 = v33 + v34[6];
    uint64_t v36 = type metadata accessor for WeatherDescription();
    if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    }
    uint64_t v37 = v33 + v34[7];
    uint64_t v38 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v37, v36);
        goto LABEL_98;
      case 1u:
        goto LABEL_53;
      case 2u:
        v208(v37, v10);
        goto LABEL_98;
      case 3u:
        uint64_t v74 = sub_10017DF08(&qword_100E73808);
        goto LABEL_48;
      case 4u:
        uint64_t v200 = v5;
        uint64_t v203 = v14;
        uint64_t v190 = v10;
        uint64_t v194 = v6;
        if (*(void *)(v37 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v75 = v22;
        uint64_t v76 = v37 + *(int *)(v22 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v77 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v78 = v76 + v77[5];
          uint64_t v79 = type metadata accessor for URL();
          if (!_s7Weather24LocationCompositionStateOwet_0(v78, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8))(v78, v79);
          }
          swift_bridgeObjectRelease();
          uint64_t v80 = v79;
          uint64_t v81 = (void (**)(uint64_t, uint64_t))(*(void *)(v79 - 8) + 8);
          uint64_t v185 = *v81;
          (*v81)(v76 + v77[7], v80);
          uint64_t v82 = v76 + v77[8];
          if (!_s7Weather24LocationCompositionStateOwet_0(v82, 1, v80)) {
            v185(v82, v80);
          }
        }
        uint64_t v22 = v75;
        v37 += *(int *)(v75 + 24);
        uint64_t v83 = type metadata accessor for DetailComponentAction();
        uint64_t v10 = v190;
        uint64_t v6 = v194;
        uint64_t v5 = v200;
        uint64_t v14 = v203;
        if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v83)) {
          goto LABEL_98;
        }
        uint64_t v74 = type metadata accessor for URL();
LABEL_48:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v37, v74);
LABEL_98:
        uint64_t v126 = v33 + v34[8];
        uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v126, 1, v38);
        if (result) {
          return result;
        }
        uint64_t result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
            goto LABEL_128;
          case 1:
            goto LABEL_149;
          case 2:
            uint64_t v127 = v126;
            uint64_t v128 = v10;
            uint64_t v129 = (uint64_t (*)(uint64_t, uint64_t))v208;
            goto LABEL_175;
          case 3:
            goto LABEL_129;
          case 4:
            if (*(void *)(v126 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v130 = v126 + *(int *)(v22 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v131 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v132 = v130 + v131[5];
              uint64_t v133 = type metadata accessor for URL();
              if (!_s7Weather24LocationCompositionStateOwet_0(v132, 1, v133)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v133 - 8) + 8))(v132, v133);
              }
              swift_bridgeObjectRelease();
              uint64_t v134 = *(void (**)(uint64_t, uint64_t))(*(void *)(v133 - 8) + 8);
              v134(v130 + v131[7], v133);
              uint64_t v135 = v130 + v131[8];
              if (!_s7Weather24LocationCompositionStateOwet_0(v135, 1, v133)) {
                v134(v135, v133);
              }
            }
            uint64_t v136 = *(int *)(v22 + 24);
            goto LABEL_144;
          case 5:
            goto LABEL_130;
          case 6:
            goto LABEL_133;
          case 7:
            type metadata accessor for ConditionDetailDynamicContentIdentifier();
            uint64_t result = swift_getEnumCaseMultiPayload();
            if (result != 1) {
              goto LABEL_147;
            }
            swift_bridgeObjectRelease();
            uint64_t v137 = (int *)type metadata accessor for ConditionDetailMapViewModel();
            v206(v126 + v137[5], v14);
            uint64_t v138 = v126 + v137[6];
            uint64_t v139 = (int *)type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0(v138, 1, (uint64_t)v139)) {
              goto LABEL_173;
            }
            swift_bridgeObjectRelease();
            uint64_t v140 = v138 + v139[5];
            uint64_t v141 = type metadata accessor for Locale();
            if (!_s7Weather24LocationCompositionStateOwet_0(v140, 1, v141)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v141 - 8) + 8))(v140, v141);
            }
            uint64_t v142 = v138 + v139[6];
            uint64_t v143 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v143 - 8) + 8))(v142, v143);
            uint64_t v144 = v138 + v139[7];
            uint64_t v145 = sub_10017DF08(&qword_100E63738);
            if (!_s7Weather24LocationCompositionStateOwet_0(v144, 1, v145)) {
              v6(v144, v5);
            }
            uint64_t v146 = v138 + v139[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v174 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v174 - 8) + 8))(v146, v174);
            }
            else if (!EnumCaseMultiPayload)
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v175 = v138 + v139[9];
            uint64_t v176 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0(v175, 1, v176)) {
              goto LABEL_173;
            }
            if (!_s7Weather24LocationCompositionStateOwet_0(v175, 1, v5)) {
              v6(v175, v5);
            }
            uint64_t v177 = v175 + *(int *)(v176 + 20);
            if (_s7Weather24LocationCompositionStateOwet_0(v177, 1, v5)) {
              goto LABEL_173;
            }
            uint64_t v178 = v177;
            uint64_t v179 = v5;
            break;
          default:
            return result;
        }
        break;
      case 5u:
        if (*(void *)(v37 + 24))
        {
          sub_100191924(*(void *)v37, *(void *)(v37 + 8), *(unsigned char *)(v37 + 16));
          swift_bridgeObjectRelease();
        }
        sub_10033AB48(*(void *)(v37 + 32), *(void *)(v37 + 40), *(void *)(v37 + 48), *(void *)(v37 + 56), *(void *)(v37 + 64), *(void *)(v37 + 72), *(void *)(v37 + 80), *(unsigned __int8 *)(v37 + 88), *(unsigned char *)(v37 + 89));
        goto LABEL_98;
      case 6u:
        uint64_t v74 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        goto LABEL_48;
      case 7u:
        type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v84 = swift_getEnumCaseMultiPayload();
        if (v84 == 1)
        {
          uint64_t v196 = v6;
          uint64_t v201 = v22;
          swift_bridgeObjectRelease();
          uint64_t v204 = v14;
          uint64_t v97 = type metadata accessor for ConditionDetailMapViewModel();
          v206(v37 + *(int *)(v97 + 20), v14);
          uint64_t v192 = v97;
          uint64_t v98 = v37 + *(int *)(v97 + 24);
          uint64_t v99 = (int *)type metadata accessor for WeatherData(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v98, 1, (uint64_t)v99))
          {
            swift_bridgeObjectRelease();
            uint64_t v100 = v98 + v99[5];
            uint64_t v101 = type metadata accessor for Locale();
            uint64_t v186 = v100;
            uint64_t v102 = v100;
            uint64_t v103 = v101;
            if (!_s7Weather24LocationCompositionStateOwet_0(v102, 1, v101)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v103 - 8) + 8))(v186, v103);
            }
            uint64_t v104 = v98 + v99[6];
            uint64_t v105 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v105 - 8) + 8))(v104, v105);
            uint64_t v106 = v98 + v99[7];
            uint64_t v107 = sub_10017DF08(&qword_100E63738);
            if (!_s7Weather24LocationCompositionStateOwet_0(v106, 1, v107)) {
              v196(v106, v5);
            }
            v187 = v99;
            uint64_t v108 = v98 + v99[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v109 = swift_getEnumCaseMultiPayload();
            if (v109 == 1)
            {
              uint64_t v120 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v120 - 8) + 8))(v108, v120);
            }
            else if (!v109)
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v121 = v98 + v187[9];
            uint64_t v122 = type metadata accessor for WeatherDataOverrides();
            if (!_s7Weather24LocationCompositionStateOwet_0(v121, 1, v122))
            {
              if (!_s7Weather24LocationCompositionStateOwet_0(v121, 1, v5)) {
                v196(v121, v5);
              }
              uint64_t v123 = v121 + *(int *)(v122 + 20);
              if (!_s7Weather24LocationCompositionStateOwet_0(v123, 1, v5)) {
                v196(v123, v5);
              }
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v124 = v37 + *(int *)(v192 + 32);
          uint64_t v125 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v125 - 8) + 8))(v124, v125);
          uint64_t v6 = v196;
          uint64_t v22 = v201;
          uint64_t v14 = v204;
        }
        else if (!v84)
        {
          swift_bridgeObjectRelease();
LABEL_53:
          swift_bridgeObjectRelease();
        }
        goto LABEL_98;
      default:
        goto LABEL_98;
    }
LABEL_172:
    v6(v178, v179);
    goto LABEL_173;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = (int *)_s10PolarModelVMa();
  uint64_t v40 = a1 + v39[6];
  uint64_t v41 = type metadata accessor for PolarType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
  uint64_t v42 = a1 + v39[7];
  uint64_t v43 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8);
  v6(v42, v43);
  uint64_t v44 = a1 + v39[8];
  uint64_t v45 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
  uint64_t v46 = a1 + v39[9];
  uint64_t v47 = type metadata accessor for AttributedString();
  int v207 = *(void (**)(uint64_t))(*(void *)(v47 - 8) + 8);
  uint64_t v209 = v47;
  v207(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = a1 + v39[12];
  uint64_t v49 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
  uint64_t v50 = a1 + v39[13];
  uint64_t v51 = type metadata accessor for Location();
  uint64_t v205 = *(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8);
  v205(v50, v51);
  uint64_t v52 = a1 + v39[14];
  uint64_t v53 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
  uint64_t v54 = a1 + v39[15];
  uint64_t v55 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
  uint64_t v56 = a1 + v39[16];
  uint64_t v57 = type metadata accessor for DetailComponentContainerViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v56, 1, v57))
  {
    uint64_t v58 = v6;
    if (*(void *)(v56 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v59 = v56 + *(int *)(v57 + 20);
    type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v198 = v51;
      uint64_t v60 = v57;
      swift_bridgeObjectRelease();
      uint64_t v61 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v62 = v59 + v61[5];
      uint64_t v63 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v62, 1, v63)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
      }
      swift_bridgeObjectRelease();
      uint64_t v64 = *(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8);
      v64(v59 + v61[7], v63);
      uint64_t v65 = v59 + v61[8];
      uint64_t v57 = v60;
      uint64_t v51 = v198;
      if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v63)) {
        v64(v65, v63);
      }
    }
    uint64_t v66 = v56 + *(int *)(v57 + 24);
    uint64_t v67 = type metadata accessor for DetailComponentAction();
    uint64_t v6 = v58;
    if (!_s7Weather24LocationCompositionStateOwet_0(v66, 1, v67))
    {
      uint64_t v68 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v66, v68);
    }
  }
  uint64_t v69 = a1 + *(int *)(sub_10017DF08(&qword_100E92130) + 48);
  uint64_t v70 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v69, 1, (uint64_t)v70);
  if (!result)
  {
    uint64_t v199 = v57;
    sub_10014D144(*(void *)v69, *(void *)(v69 + 8), *(unsigned char *)(v69 + 16));
    swift_bridgeObjectRelease();
    uint64_t v71 = v69 + v70[6];
    uint64_t v36 = type metadata accessor for WeatherDescription();
    if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v36)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v71, v36);
    }
    uint64_t v72 = v69 + v70[7];
    uint64_t v73 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v72, v36);
        goto LABEL_125;
      case 1u:
        goto LABEL_74;
      case 2u:
        ((void (*)(uint64_t, uint64_t))v207)(v72, v209);
        goto LABEL_125;
      case 3u:
        uint64_t v85 = sub_10017DF08(&qword_100E73808);
        goto LABEL_69;
      case 4u:
        uint64_t v191 = v43;
        uint64_t v195 = v6;
        if (*(void *)(v72 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v86 = v72 + *(int *)(v199 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v87 = type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v88 = v86 + *(int *)(v87 + 20);
          uint64_t v89 = type metadata accessor for URL();
          if (!_s7Weather24LocationCompositionStateOwet_0(v88, 1, v89)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v89 - 8) + 8))(v88, v89);
          }
          swift_bridgeObjectRelease();
          uint64_t v90 = v86 + *(int *)(v87 + 28);
          uint64_t v91 = v87;
          uint64_t v92 = v89;
          uint64_t v93 = (void (**)(uint64_t, uint64_t))(*(void *)(v89 - 8) + 8);
          unsigned __int8 v184 = *v93;
          (*v93)(v90, v92);
          uint64_t v94 = v86 + *(int *)(v91 + 32);
          if (!_s7Weather24LocationCompositionStateOwet_0(v94, 1, v92)) {
            v184(v94, v92);
          }
        }
        v72 += *(int *)(v199 + 24);
        uint64_t v95 = type metadata accessor for DetailComponentAction();
        uint64_t v43 = v191;
        uint64_t v6 = v195;
        if (_s7Weather24LocationCompositionStateOwet_0(v72, 1, v95)) {
          goto LABEL_125;
        }
        uint64_t v85 = type metadata accessor for URL();
LABEL_69:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8))(v72, v85);
LABEL_125:
        uint64_t v126 = v69 + v70[8];
        uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v126, 1, v73);
        if (result) {
          return result;
        }
        uint64_t result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
LABEL_128:
            uint64_t v129 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8);
            uint64_t v127 = v126;
            uint64_t v128 = v36;
            goto LABEL_175;
          case 1:
            goto LABEL_149;
          case 2:
            uint64_t v127 = v126;
            uint64_t v129 = (uint64_t (*)(uint64_t, uint64_t))v207;
            uint64_t v128 = v209;
            goto LABEL_175;
          case 3:
LABEL_129:
            uint64_t v154 = sub_10017DF08(&qword_100E73808);
            goto LABEL_134;
          case 4:
            if (*(void *)(v126 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            uint64_t v155 = v126 + *(int *)(v199 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              swift_bridgeObjectRelease();
              uint64_t v156 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v157 = v155 + v156[5];
              uint64_t v158 = type metadata accessor for URL();
              if (!_s7Weather24LocationCompositionStateOwet_0(v157, 1, v158)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v158 - 8) + 8))(v157, v158);
              }
              swift_bridgeObjectRelease();
              uint64_t v159 = *(void (**)(uint64_t, uint64_t))(*(void *)(v158 - 8) + 8);
              v159(v155 + v156[7], v158);
              uint64_t v160 = v155 + v156[8];
              if (!_s7Weather24LocationCompositionStateOwet_0(v160, 1, v158)) {
                v159(v160, v158);
              }
            }
            uint64_t v136 = *(int *)(v199 + 24);
LABEL_144:
            uint64_t v161 = v126 + v136;
            uint64_t v162 = type metadata accessor for DetailComponentAction();
            uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v161, 1, v162);
            if (result) {
              return result;
            }
            uint64_t v163 = type metadata accessor for URL();
            goto LABEL_174;
          case 5:
LABEL_130:
            if (*(void *)(v126 + 24))
            {
              sub_100191924(*(void *)v126, *(void *)(v126 + 8), *(unsigned char *)(v126 + 16));
              swift_bridgeObjectRelease();
            }
            return sub_10033AB48(*(void *)(v126 + 32), *(void *)(v126 + 40), *(void *)(v126 + 48), *(void *)(v126 + 56), *(void *)(v126 + 64), *(void *)(v126 + 72), *(void *)(v126 + 80), *(unsigned __int8 *)(v126 + 88), *(unsigned char *)(v126 + 89));
          case 6:
LABEL_133:
            uint64_t v154 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_134:
            uint64_t v129 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v154 - 8) + 8);
            uint64_t v128 = v154;
            uint64_t v127 = v126;
            goto LABEL_175;
          case 7:
            type metadata accessor for ConditionDetailDynamicContentIdentifier();
            uint64_t result = swift_getEnumCaseMultiPayload();
            if (result != 1)
            {
LABEL_147:
              if (!result)
              {
                swift_bridgeObjectRelease();
LABEL_149:
                return swift_bridgeObjectRelease();
              }
              return result;
            }
            swift_bridgeObjectRelease();
            uint64_t v137 = (int *)type metadata accessor for ConditionDetailMapViewModel();
            v205(v126 + v137[5], v51);
            uint64_t v164 = v126 + v137[6];
            uint64_t v165 = (int *)type metadata accessor for WeatherData(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v164, 1, (uint64_t)v165))
            {
              swift_bridgeObjectRelease();
              uint64_t v166 = v164 + v165[5];
              uint64_t v167 = type metadata accessor for Locale();
              if (!_s7Weather24LocationCompositionStateOwet_0(v166, 1, v167)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v167 - 8) + 8))(v166, v167);
              }
              uint64_t v168 = v164 + v165[6];
              uint64_t v169 = type metadata accessor for WeatherDataModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v169 - 8) + 8))(v168, v169);
              uint64_t v170 = v164 + v165[7];
              uint64_t v171 = sub_10017DF08(&qword_100E63738);
              if (!_s7Weather24LocationCompositionStateOwet_0(v170, 1, v171)) {
                v6(v170, v43);
              }
              uint64_t v172 = v164 + v165[8];
              type metadata accessor for WeatherData.WeatherStatisticsState(0);
              int v173 = swift_getEnumCaseMultiPayload();
              if (v173 == 1)
              {
                uint64_t v180 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v180 - 8) + 8))(v172, v180);
              }
              else if (!v173)
              {
                swift_bridgeObjectRelease();
              }
              uint64_t v181 = v164 + v165[9];
              uint64_t v182 = type metadata accessor for WeatherDataOverrides();
              if (!_s7Weather24LocationCompositionStateOwet_0(v181, 1, v182))
              {
                if (!_s7Weather24LocationCompositionStateOwet_0(v181, 1, v43)) {
                  v6(v181, v43);
                }
                uint64_t v183 = v181 + *(int *)(v182 + 20);
                if (!_s7Weather24LocationCompositionStateOwet_0(v183, 1, v43))
                {
                  uint64_t v178 = v183;
                  uint64_t v179 = v43;
                  goto LABEL_172;
                }
              }
            }
            break;
          default:
            return result;
        }
        break;
      case 5u:
        if (*(void *)(v72 + 24))
        {
          sub_100191924(*(void *)v72, *(void *)(v72 + 8), *(unsigned char *)(v72 + 16));
          swift_bridgeObjectRelease();
        }
        sub_10033AB48(*(void *)(v72 + 32), *(void *)(v72 + 40), *(void *)(v72 + 48), *(void *)(v72 + 56), *(void *)(v72 + 64), *(void *)(v72 + 72), *(void *)(v72 + 80), *(unsigned __int8 *)(v72 + 88), *(unsigned char *)(v72 + 89));
        goto LABEL_125;
      case 6u:
        uint64_t v85 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        goto LABEL_69;
      case 7u:
        type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v96 = swift_getEnumCaseMultiPayload();
        if (v96 == 1)
        {
          uint64_t v197 = v6;
          swift_bridgeObjectRelease();
          uint64_t v110 = type metadata accessor for ConditionDetailMapViewModel();
          v205(v72 + *(int *)(v110 + 20), v51);
          uint64_t v193 = v110;
          uint64_t v111 = v72 + *(int *)(v110 + 24);
          uint64_t v112 = (int *)type metadata accessor for WeatherData(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v111, 1, (uint64_t)v112))
          {
            swift_bridgeObjectRelease();
            uint64_t v113 = v111 + v112[5];
            uint64_t v188 = type metadata accessor for Locale();
            if (!_s7Weather24LocationCompositionStateOwet_0(v113, 1, v188)) {
              (*(void (**)(uint64_t))(*(void *)(v188 - 8) + 8))(v113);
            }
            uint64_t v114 = v111 + v112[6];
            uint64_t v115 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v115 - 8) + 8))(v114, v115);
            uint64_t v116 = v111 + v112[7];
            uint64_t v117 = sub_10017DF08(&qword_100E63738);
            if (!_s7Weather24LocationCompositionStateOwet_0(v116, 1, v117)) {
              v197(v116, v43);
            }
            uint64_t v189 = v112;
            uint64_t v118 = v111 + v112[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v119 = swift_getEnumCaseMultiPayload();
            if (v119 == 1)
            {
              uint64_t v148 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8))(v118, v148);
            }
            else if (!v119)
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v149 = v111 + v189[9];
            uint64_t v150 = type metadata accessor for WeatherDataOverrides();
            if (!_s7Weather24LocationCompositionStateOwet_0(v149, 1, v150))
            {
              if (!_s7Weather24LocationCompositionStateOwet_0(v149, 1, v43)) {
                v197(v149, v43);
              }
              uint64_t v151 = v149 + *(int *)(v150 + 20);
              if (!_s7Weather24LocationCompositionStateOwet_0(v151, 1, v43)) {
                v197(v151, v43);
              }
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v152 = v72 + *(int *)(v193 + 32);
          uint64_t v153 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v153 - 8) + 8))(v152, v153);
          uint64_t v6 = v197;
        }
        else if (!v96)
        {
          swift_bridgeObjectRelease();
LABEL_74:
          swift_bridgeObjectRelease();
        }
        goto LABEL_125;
      default:
        goto LABEL_125;
    }
LABEL_173:
    swift_bridgeObjectRelease();
    uint64_t v161 = v126 + v137[8];
    uint64_t v163 = type metadata accessor for WeatherMapOverlayKind();
LABEL_174:
    uint64_t v129 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v163 - 8) + 8);
    uint64_t v128 = v163;
    uint64_t v127 = v161;
LABEL_175:
    return v129(v127, v128);
  }
  return result;
}

char *sub_10073A618(char *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v49 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v49;
    uint64_t v50 = a2[3];
    *((void *)a1 + 2) = a2[2];
    *((void *)a1 + 3) = v50;
    uint64_t v51 = (int *)_s10PolarModelVMa();
    uint64_t v52 = v51[6];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = (char *)a2 + v52;
    uint64_t v55 = type metadata accessor for PolarType();
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v56(v53, v54, v55);
    uint64_t v57 = v51[7];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = (char *)a2 + v57;
    uint64_t v60 = type metadata accessor for Date();
    uint64_t v696 = *(void (**)(char *, char *))(*(void *)(v60 - 8) + 16);
    uint64_t v697 = v60;
    v696(v58, v59);
    uint64_t v61 = v51[8];
    uint64_t v62 = &a1[v61];
    uint64_t v63 = (char *)a2 + v61;
    uint64_t v64 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
    uint64_t v65 = v51[9];
    uint64_t v66 = &a1[v65];
    uint64_t v67 = (char *)a2 + v65;
    uint64_t v68 = type metadata accessor for AttributedString();
    uint64_t v706 = *(void (**)(char *, char *))(*(void *)(v68 - 8) + 16);
    uint64_t v711 = v68;
    v706(v66, v67);
    *(void *)&a1[v51[10]] = *(void *)((char *)a2 + v51[10]);
    uint64_t v69 = v51[11];
    uint64_t v70 = &a1[v69];
    uint64_t v71 = (void *)((char *)a2 + v69);
    uint64_t v72 = v71[1];
    *uint64_t v70 = *v71;
    v70[1] = v72;
    uint64_t v73 = v51[12];
    uint64_t v74 = &a1[v73];
    uint64_t v75 = (char *)a2 + v73;
    uint64_t v76 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v77(v74, v75, v76);
    uint64_t v78 = v51[13];
    uint64_t v79 = &a1[v78];
    uint64_t v80 = (char *)a2 + v78;
    uint64_t v81 = type metadata accessor for Location();
    uint64_t v700 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
    v700(v79, v80, v81);
    uint64_t v82 = v51[14];
    uint64_t v83 = &a1[v82];
    int v84 = (char *)a2 + v82;
    uint64_t v85 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
    uint64_t v86 = v51[15];
    uint64_t v87 = &a1[v86];
    uint64_t v88 = (char *)a2 + v86;
    uint64_t v89 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
    uint64_t v90 = v51[16];
    uint64_t v91 = &a1[v90];
    uint64_t v92 = (void *)((char *)a2 + v90);
    uint64_t v93 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93))
    {
      uint64_t v94 = sub_10017DF08(&qword_100E66E28);
      memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      uint64_t v97 = v92[1];
      if (v97)
      {
        *uint64_t v91 = *v92;
        v91[1] = v97;
        uint64_t v98 = v92[3];
        v91[2] = v92[2];
        v91[3] = v98;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v110 = *((_OWORD *)v92 + 1);
        *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
        *((_OWORD *)v91 + 1) = v110;
      }
      uint64_t v111 = *(int *)(v93 + 20);
      uint64_t v112 = (void *)((char *)v91 + v111);
      uint64_t v113 = (void *)((char *)v92 + v111);
      uint64_t v114 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v716 = a2;
        uint64_t v692 = v81;
        uint64_t v115 = v113[1];
        *uint64_t v112 = *v113;
        v112[1] = v115;
        v680 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v116 = v680[5];
        uint64_t v117 = (char *)v112 + v116;
        uint64_t v118 = (char *)v113 + v116;
        uint64_t v119 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v687 = v93;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v120 = sub_10017DF08(&qword_100E749B0);
          memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
        }
        uint64_t v133 = v680[6];
        uint64_t v134 = (void *)((char *)v112 + v133);
        uint64_t v135 = (void *)((char *)v113 + v133);
        uint64_t v136 = v135[1];
        *uint64_t v134 = *v135;
        v134[1] = v136;
        uint64_t v137 = v680[7];
        uint64_t v138 = (char *)v112 + v137;
        uint64_t v139 = (char *)v113 + v137;
        uint64_t v140 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
        swift_bridgeObjectRetain();
        v140(v138, v139, v119);
        uint64_t v141 = v680[8];
        uint64_t v142 = (char *)v112 + v141;
        uint64_t v143 = (char *)v113 + v141;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113 + v141, 1, v119))
        {
          uint64_t v144 = sub_10017DF08(&qword_100E749B0);
          memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          v140(v142, v143, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v119);
        }
        uint64_t v93 = v687;
        *((unsigned char *)v112 + v680[9]) = *((unsigned char *)v113 + v680[9]);
        swift_storeEnumTagMultiPayload();
        a2 = v716;
        uint64_t v81 = v692;
      }
      else
      {
        memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
      }
      uint64_t v172 = *(int *)(v93 + 24);
      int v173 = (char *)v91 + v172;
      uint64_t v174 = (char *)v92 + v172;
      uint64_t v175 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v174, 1, v175))
      {
        uint64_t v176 = sub_10017DF08(&qword_100E73810);
        memcpy(v173, v174, *(void *)(*(void *)(v176 - 8) + 64));
      }
      else
      {
        uint64_t v177 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v173, v174, v177);
        uint64_t v178 = sub_10017DF08(&qword_100E66478);
        v173[*(int *)(v178 + 48)] = v174[*(int *)(v178 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v175);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v93);
    }
    uint64_t v179 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    uint64_t v153 = (uint64_t)&a1[v179];
    uint64_t v154 = (uint64_t)a2 + v179;
    uint64_t v155 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v154, 1, (uint64_t)v155)) {
      goto LABEL_35;
    }
    uint64_t v180 = *(void *)v154;
    uint64_t v181 = *(void *)(v154 + 8);
    unsigned __int8 v182 = *(unsigned char *)(v154 + 16);
    sub_10018F6EC(*(void *)v154, v181, v182);
    *(void *)uint64_t v153 = v180;
    *(void *)(v153 + 8) = v181;
    *(unsigned char *)(v153 + 16) = v182;
    uint64_t v183 = *(void *)(v154 + 32);
    *(void *)(v153 + 24) = *(void *)(v154 + 24);
    *(void *)(v153 + 32) = v183;
    uint64_t v184 = v155[6];
    uint64_t v185 = (void *)(v153 + v184);
    uint64_t v186 = (const void *)(v154 + v184);
    uint64_t v187 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    uint64_t v693 = v81;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v186, 1, v187))
    {
      uint64_t v188 = sub_10017DF08(&qword_100E63758);
      memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v187 - 8) + 16))(v185, v186, v187);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, v187);
    }
    uint64_t v189 = v155[7];
    uint64_t v190 = (uint64_t *)(v153 + v189);
    uint64_t v191 = (uint64_t *)(v154 + v189);
    uint64_t v192 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    uint64_t v718 = v191;
    uint64_t v681 = v187;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v205 = v191[1];
        *uint64_t v190 = *v191;
        v190[1] = v205;
        swift_bridgeObjectRetain();
        goto LABEL_203;
      case 2u:
        ((void (*)(uint64_t *, uint64_t *, uint64_t))v706)(v190, v191, v711);
        goto LABEL_203;
      case 3u:
        uint64_t v206 = sub_10017DF08(&qword_100E73808);
        goto LABEL_75;
      case 4u:
        int v207 = v191;
        uint64_t v208 = v191[1];
        if (v208)
        {
          *uint64_t v190 = *v191;
          v190[1] = v208;
          uint64_t v209 = v191[3];
          v190[2] = v718[2];
          v190[3] = v209;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v207 = v718;
        }
        else
        {
          long long v238 = *((_OWORD *)v191 + 1);
          *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
          *((_OWORD *)v190 + 1) = v238;
        }
        uint64_t v690 = v93;
        uint64_t v239 = *(int *)(v93 + 20);
        uint64_t v240 = (uint64_t *)((char *)v190 + v239);
        uint64_t v241 = (uint64_t *)((char *)v207 + v239);
        uint64_t v242 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v671 = v192;
          uint64_t v649 = v154;
          uint64_t v243 = v241[1];
          *uint64_t v240 = *v241;
          v240[1] = v243;
          uint64_t v634 = v241;
          v639 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v244 = v639[5];
          uint64_t v245 = (char *)v240 + v244;
          v246 = (char *)v241 + v244;
          uint64_t v247 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v660 = v153;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v246, 1, v247))
          {
            uint64_t v248 = sub_10017DF08(&qword_100E749B0);
            memcpy(v245, v246, *(void *)(*(void *)(v248 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16))(v245, v246, v247);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v245, 0, 1, v247);
          }
          uint64_t v293 = v639[6];
          uint64_t v294 = (void *)((char *)v240 + v293);
          v295 = (void *)((char *)v634 + v293);
          uint64_t v296 = v295[1];
          *uint64_t v294 = *v295;
          v294[1] = v296;
          uint64_t v297 = v639[7];
          uint64_t v298 = (char *)v240 + v297;
          v299 = (char *)v634 + v297;
          v300 = *(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16);
          swift_bridgeObjectRetain();
          v300(v298, v299, v247);
          uint64_t v301 = v639[8];
          uint64_t v302 = (char *)v240 + v301;
          v303 = (char *)v634 + v301;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v634 + v301, 1, v247))
          {
            uint64_t v304 = sub_10017DF08(&qword_100E749B0);
            memcpy(v302, v303, *(void *)(*(void *)(v304 - 8) + 64));
          }
          else
          {
            v300(v302, v303, v247);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v302, 0, 1, v247);
          }
          uint64_t v153 = v660;
          *((unsigned char *)v240 + v639[9]) = *((unsigned char *)v634 + v639[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v154 = v649;
          uint64_t v192 = v671;
        }
        else
        {
          memcpy(v240, v241, *(void *)(*(void *)(v242 - 8) + 64));
        }
        uint64_t v312 = *(int *)(v690 + 24);
        uint64_t v313 = (char *)v190 + v312;
        uint64_t v314 = (char *)v718 + v312;
        uint64_t v315 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v314, 1, v315))
        {
          uint64_t v316 = sub_10017DF08(&qword_100E73810);
          memcpy(v313, v314, *(void *)(*(void *)(v316 - 8) + 64));
        }
        else
        {
          uint64_t v317 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v317 - 8) + 16))(v313, v314, v317);
          uint64_t v318 = sub_10017DF08(&qword_100E66478);
          v313[*(int *)(v318 + 48)] = v314[*(int *)(v318 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v313, 0, 1, v315);
        }
        uint64_t v93 = v690;
        goto LABEL_203;
      case 5u:
        uint64_t v689 = v93;
        uint64_t v669 = v192;
        uint64_t v210 = v191;
        uint64_t v648 = v154;
        uint64_t v658 = v153;
        v643 = v155;
        if (v191[3])
        {
          uint64_t v211 = *v191;
          uint64_t v212 = v718[1];
          char v213 = *((unsigned char *)v718 + 16);
          sub_100190CC4(*v718, v212, v213);
          *uint64_t v190 = v211;
          v190[1] = v212;
          *((unsigned char *)v190 + 16) = v213;
          v190[3] = v718[3];
          swift_bridgeObjectRetain();
          uint64_t v210 = v718;
        }
        else
        {
          long long v249 = *((_OWORD *)v191 + 1);
          *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
          *((_OWORD *)v190 + 1) = v249;
        }
        uint64_t v250 = v210[4];
        uint64_t v251 = v210[5];
        uint64_t v252 = v210[6];
        uint64_t v253 = v210[7];
        uint64_t v254 = v210[8];
        uint64_t v255 = v210[9];
        uint64_t v256 = v210[10];
        char v257 = *((unsigned char *)v210 + 89);
        unsigned __int8 v258 = *((unsigned char *)v210 + 88);
        sub_10033A9E8(v250, v251, v252, v253, v254, v255, v256, v258, v257);
        v190[4] = v250;
        v190[5] = v251;
        v190[6] = v252;
        v190[7] = v253;
        v190[8] = v254;
        v190[9] = v255;
        v190[10] = v256;
        *((unsigned char *)v190 + 88) = v258;
        *((unsigned char *)v190 + 89) = v257;
        uint64_t v154 = v648;
        uint64_t v153 = v658;
        uint64_t v155 = v643;
        uint64_t v192 = v669;
        goto LABEL_202;
      case 6u:
        uint64_t v206 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_75:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v206 - 8) + 16))(v190, v191, v206);
        goto LABEL_203;
      case 7u:
        uint64_t v638 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v214 = swift_getEnumCaseMultiPayload();
        if (v214 != 1)
        {
          if (v214)
          {
            memcpy(v190, v191, *(void *)(*(void *)(v638 - 8) + 64));
          }
          else
          {
            uint64_t v215 = v191[1];
            *uint64_t v190 = *v191;
            v190[1] = v215;
            v190[2] = v191[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_203;
        }
        uint64_t v689 = v93;
        v644 = v155;
        uint64_t v662 = v153;
        uint64_t v271 = v191[1];
        *uint64_t v190 = *v718;
        v190[1] = v271;
        uint64_t v272 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v273 = *(int *)(v272 + 20);
        v274 = (char *)v190 + v273;
        v275 = (char *)v718 + v273;
        swift_bridgeObjectRetain();
        v700(v274, v275, v693);
        v635 = (int *)v272;
        uint64_t v276 = *(int *)(v272 + 24);
        uint64_t v277 = (uint64_t *)((char *)v190 + v276);
        uint64_t v278 = (uint64_t *)((char *)v718 + v276);
        uint64_t v279 = type metadata accessor for WeatherData(0);
        uint64_t v651 = v154;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v278, 1, v279))
        {
          uint64_t v280 = sub_10017DF08(&qword_100E63850);
          memcpy(v277, v278, *(void *)(*(void *)(v280 - 8) + 64));
          goto LABEL_201;
        }
        uint64_t v673 = v192;
        uint64_t v327 = v278[1];
        *uint64_t v277 = *v278;
        v277[1] = v327;
        uint64_t v328 = *(int *)(v279 + 20);
        uint64_t v329 = (char *)v277 + v328;
        v631 = v278;
        uint64_t v330 = (char *)v278 + v328;
        uint64_t v331 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        v332 = v277;
        v333 = (int *)v279;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v330, 1, v331))
        {
          uint64_t v334 = sub_10017DF08(&qword_100E63730);
          memcpy(v329, v330, *(void *)(*(void *)(v334 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16))(v329, v330, v331);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v329, 0, 1, v331);
        }
        uint64_t v345 = *(int *)(v279 + 24);
        uint64_t v346 = (uint64_t)v332;
        uint64_t v347 = (char *)v332 + v345;
        v348 = (char *)v631 + v345;
        uint64_t v349 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v349 - 8) + 16))(v347, v348, v349);
        uint64_t v350 = v333[7];
        uint64_t v351 = (void *)(v346 + v350);
        uint64_t v352 = (char *)v631 + v350;
        uint64_t v353 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v352, 1, v353))
        {
          uint64_t v354 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v351, v352, *(void *)(*(void *)(v354 - 8) + 64));
          uint64_t v355 = v697;
        }
        else
        {
          uint64_t v355 = v697;
          ((void (*)(void *, char *, uint64_t))v696)(v351, v352, v697);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v351, 0, 1, v353);
        }
        uint64_t v362 = v333[8];
        uint64_t v363 = (void *)(v346 + v362);
        v364 = (void *)((char *)v631 + v362);
        uint64_t v365 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v366 = swift_getEnumCaseMultiPayload();
        if (v366 == 1)
        {
          uint64_t v376 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v376 - 8) + 16))(v363, v364, v376);
        }
        else
        {
          if (v366)
          {
            memcpy(v363, v364, *(void *)(*(void *)(v365 - 8) + 64));
LABEL_145:
            uint64_t v628 = v346;
            uint64_t v377 = v333[9];
            v378 = (char *)(v346 + v377);
            uint64_t v379 = (char *)v631 + v377;
            uint64_t v380 = type metadata accessor for WeatherDataOverrides();
            uint64_t v192 = v673;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v379, 1, v380))
            {
              uint64_t v381 = sub_10017DF08(&qword_100E63740);
              memcpy(v378, v379, *(void *)(*(void *)(v381 - 8) + 64));
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v379, 1, v355))
              {
                uint64_t v382 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v378, v379, *(void *)(*(void *)(v382 - 8) + 64));
              }
              else
              {
                ((void (*)(char *, char *, uint64_t))v696)(v378, v379, v355);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v378, 0, 1, v355);
              }
              uint64_t v387 = *(int *)(v380 + 20);
              uint64_t v388 = &v378[v387];
              uint64_t v389 = &v379[v387];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v389, 1, v355))
              {
                uint64_t v390 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v388, v389, *(void *)(*(void *)(v390 - 8) + 64));
              }
              else
              {
                ((void (*)(char *, char *, uint64_t))v696)(v388, v389, v355);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v388, 0, 1, v355);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v378, 0, 1, v380);
              uint64_t v192 = v673;
            }
            _s7Weather24LocationCompositionStateOwst_0(v628, 0, 1, (uint64_t)v333);
LABEL_201:
            uint64_t v472 = v635[7];
            uint64_t v473 = (uint64_t *)((char *)v190 + v472);
            uint64_t v474 = (uint64_t *)((char *)v718 + v472);
            uint64_t v475 = v474[1];
            *uint64_t v473 = *v474;
            v473[1] = v475;
            uint64_t v476 = v635[8];
            v477 = (char *)v190 + v476;
            v632 = (char *)v718 + v476;
            uint64_t v478 = v190;
            uint64_t v479 = type metadata accessor for WeatherMapOverlayKind();
            uint64_t v480 = *(void (**)(char *, char *, uint64_t))(*(void *)(v479 - 8) + 16);
            swift_bridgeObjectRetain();
            v480(v477, v632, v479);
            *((unsigned char *)v478 + v635[9]) = *((unsigned char *)v718 + v635[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v154 = v651;
            uint64_t v153 = v662;
            uint64_t v155 = v644;
LABEL_202:
            uint64_t v93 = v689;
LABEL_203:
            swift_storeEnumTagMultiPayload();
            uint64_t v481 = v155[8];
            uint64_t v401 = v153 + v481;
            uint64_t v402 = (uint64_t *)(v154 + v481);
            if (!_s7Weather24LocationCompositionStateOwet_0(v154 + v481, 1, v192))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v485 = v402[1];
                  *(void *)uint64_t v401 = *v402;
                  *(void *)(v401 + 8) = v485;
                  swift_bridgeObjectRetain();
                  goto LABEL_286;
                case 2u:
                  ((void (*)(uint64_t, uint64_t *, uint64_t))v706)(v401, v402, v711);
                  goto LABEL_286;
                case 3u:
                  uint64_t v486 = sub_10017DF08(&qword_100E73808);
                  goto LABEL_215;
                case 4u:
                  uint64_t v487 = v402[1];
                  uint64_t v677 = v192;
                  if (v487)
                  {
                    *(void *)uint64_t v401 = *v402;
                    *(void *)(v401 + 8) = v487;
                    uint64_t v488 = v402[3];
                    *(void *)(v401 + 16) = v402[2];
                    *(void *)(v401 + 24) = v488;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v495 = *((_OWORD *)v402 + 1);
                    *(_OWORD *)uint64_t v401 = *(_OWORD *)v402;
                    *(_OWORD *)(v401 + 16) = v495;
                  }
                  uint64_t v496 = *(int *)(v93 + 20);
                  uint64_t v714 = v401;
                  uint64_t v497 = (void *)(v401 + v496);
                  uint64_t v498 = (uint64_t *)((char *)v402 + v496);
                  uint64_t v499 = type metadata accessor for NewsArticleComponentViewModel(0);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    uint64_t v656 = v154;
                    uint64_t v667 = v153;
                    uint64_t v500 = v498[1];
                    *uint64_t v497 = *v498;
                    v497[1] = v500;
                    uint64_t v708 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                    uint64_t v501 = v708[5];
                    uint64_t v502 = (char *)v497 + v501;
                    int v503 = (char *)v498 + v501;
                    uint64_t v504 = type metadata accessor for URL();
                    swift_bridgeObjectRetain();
                    v646 = v155;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v503, 1, v504))
                    {
                      uint64_t v505 = sub_10017DF08(&qword_100E749B0);
                      memcpy(v502, v503, *(void *)(*(void *)(v505 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 16))(v502, v503, v504);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v502, 0, 1, v504);
                    }
                    uint64_t v526 = v708[6];
                    v527 = (void *)((char *)v497 + v526);
                    uint64_t v528 = (void *)((char *)v498 + v526);
                    uint64_t v529 = v528[1];
                    void *v527 = *v528;
                    v527[1] = v529;
                    uint64_t v530 = v708[7];
                    uint64_t v531 = (char *)v497 + v530;
                    v532 = (char *)v498 + v530;
                    v533 = *(void (**)(char *, char *, uint64_t))(*(void *)(v504 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v533(v531, v532, v504);
                    uint64_t v534 = v708[8];
                    uint64_t v535 = (char *)v497 + v534;
                    uint64_t v536 = (char *)v498 + v534;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v498 + v534, 1, v504))
                    {
                      uint64_t v537 = sub_10017DF08(&qword_100E749B0);
                      memcpy(v535, v536, *(void *)(*(void *)(v537 - 8) + 64));
                    }
                    else
                    {
                      v533(v535, v536, v504);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v535, 0, 1, v504);
                    }
                    uint64_t v153 = v667;
                    uint64_t v155 = v646;
                    *((unsigned char *)v497 + v708[9]) = *((unsigned char *)v498 + v708[9]);
                    swift_storeEnumTagMultiPayload();
                    uint64_t v154 = v656;
                  }
                  else
                  {
                    memcpy(v497, v498, *(void *)(*(void *)(v499 - 8) + 64));
                  }
                  uint64_t v538 = *(int *)(v93 + 24);
                  uint64_t v539 = (void *)(v714 + v538);
                  uint64_t v540 = (char *)v402 + v538;
                  uint64_t v541 = type metadata accessor for DetailComponentAction();
                  uint64_t v192 = v677;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v540, 1, v541))
                  {
                    uint64_t v542 = sub_10017DF08(&qword_100E73810);
                    memcpy(v539, v540, *(void *)(*(void *)(v542 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v543 = type metadata accessor for URL();
                    (*(void (**)(void *, char *, uint64_t))(*(void *)(v543 - 8) + 16))(v539, v540, v543);
                    uint64_t v544 = sub_10017DF08(&qword_100E66478);
                    *((unsigned char *)v539 + *(int *)(v544 + 48)) = v540[*(int *)(v544 + 48)];
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v539, 0, 1, v541);
                  }
                  uint64_t v401 = v714;
                  goto LABEL_286;
                case 5u:
                  uint64_t v645 = v155;
                  uint64_t v655 = v154;
                  uint64_t v666 = v153;
                  uint64_t v678 = v192;
                  if (v402[3])
                  {
                    uint64_t v489 = *v402;
                    uint64_t v490 = v402[1];
                    char v491 = *((unsigned char *)v402 + 16);
                    sub_100190CC4(*v402, v490, v491);
                    *(void *)uint64_t v401 = v489;
                    *(void *)(v401 + 8) = v490;
                    *(unsigned char *)(v401 + 16) = v491;
                    *(void *)(v401 + 24) = v402[3];
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v506 = *((_OWORD *)v402 + 1);
                    *(_OWORD *)uint64_t v401 = *(_OWORD *)v402;
                    *(_OWORD *)(v401 + 16) = v506;
                  }
                  uint64_t v507 = v402[4];
                  uint64_t v508 = v402[5];
                  uint64_t v510 = v402[6];
                  uint64_t v509 = v402[7];
                  uint64_t v511 = v402[8];
                  uint64_t v512 = v402[9];
                  uint64_t v513 = v402[10];
                  char v514 = *((unsigned char *)v402 + 89);
                  uint64_t v515 = *((unsigned __int8 *)v402 + 88);
                  sub_10033A9E8(v507, v508, v510, v509, v511, v512, v513, v515, v514);
                  *(void *)(v401 + 32) = v507;
                  *(void *)(v401 + 40) = v508;
                  *(void *)(v401 + 48) = v510;
                  *(void *)(v401 + 56) = v509;
                  *(void *)(v401 + 64) = v511;
                  *(void *)(v401 + 72) = v512;
                  *(void *)(v401 + 80) = v513;
                  *(unsigned char *)(v401 + 88) = v515;
                  *(unsigned char *)(v401 + 89) = v514;
                  goto LABEL_285;
                case 6u:
                  uint64_t v486 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_215:
                  uint64_t v483 = v486;
                  uint64_t v484 = v486;
                  goto LABEL_216;
                case 7u:
                  uint64_t v492 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
                  int v493 = swift_getEnumCaseMultiPayload();
                  if (v493 != 1)
                  {
                    if (v493)
                    {
                      memcpy((void *)v401, v402, *(void *)(*(void *)(v492 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v494 = v402[1];
                      *(void *)uint64_t v401 = *v402;
                      *(void *)(v401 + 8) = v494;
                      *(void *)(v401 + 16) = v402[2];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_storeEnumTagMultiPayload();
                    }
                    goto LABEL_286;
                  }
                  uint64_t v666 = v153;
                  uint64_t v678 = v192;
                  uint64_t v645 = v155;
                  uint64_t v516 = v402[1];
                  *(void *)uint64_t v401 = *v402;
                  *(void *)(v401 + 8) = v516;
                  uint64_t v517 = (int *)type metadata accessor for ConditionDetailMapViewModel();
                  uint64_t v518 = v517[5];
                  uint64_t v519 = (char *)(v401 + v518);
                  uint64_t v520 = (char *)v402 + v518;
                  swift_bridgeObjectRetain();
                  v700(v519, v520, v693);
                  uint64_t v521 = v517[6];
                  uint64_t v522 = (void *)(v401 + v521);
                  uint64_t v523 = (uint64_t *)((char *)v402 + v521);
                  uint64_t v524 = type metadata accessor for WeatherData(0);
                  uint64_t v655 = v154;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v523, 1, v524))
                  {
                    uint64_t v525 = sub_10017DF08(&qword_100E63850);
                    memcpy(v522, v523, *(void *)(*(void *)(v525 - 8) + 64));
                    goto LABEL_284;
                  }
                  uint64_t v702 = v517;
                  uint64_t v545 = v523[1];
                  *uint64_t v522 = *v523;
                  v522[1] = v545;
                  uint64_t v704 = v522;
                  v709 = (int *)v524;
                  uint64_t v546 = *(int *)(v524 + 20);
                  uint64_t v547 = (char *)v522 + v546;
                  uint64_t v548 = (char *)v523 + v546;
                  uint64_t v549 = type metadata accessor for Locale();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v548, 1, v549))
                  {
                    uint64_t v550 = sub_10017DF08(&qword_100E63730);
                    memcpy(v547, v548, *(void *)(*(void *)(v550 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v549 - 8) + 16))(v547, v548, v549);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v547, 0, 1, v549);
                  }
                  uint64_t v561 = v709[6];
                  v562 = (char *)v704 + v561;
                  v563 = (char *)v523 + v561;
                  uint64_t v564 = type metadata accessor for WeatherDataModel();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v564 - 8) + 16))(v562, v563, v564);
                  uint64_t v565 = v709[7];
                  v566 = (char *)v704 + v565;
                  v567 = (char *)v523 + v565;
                  uint64_t v568 = sub_10017DF08(&qword_100E63738);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v567, 1, v568))
                  {
                    uint64_t v569 = type metadata accessor for WeatherData.CachingState(0);
                    memcpy(v566, v567, *(void *)(*(void *)(v569 - 8) + 64));
                    uint64_t v570 = v697;
                  }
                  else
                  {
                    uint64_t v570 = v697;
                    ((void (*)(char *, char *, uint64_t))v696)(v566, v567, v697);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v566, 0, 1, v568);
                  }
                  uint64_t v577 = v709[8];
                  uint64_t v578 = (void *)((char *)v704 + v577);
                  uint64_t v579 = (void *)((char *)v523 + v577);
                  uint64_t v580 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  int v581 = swift_getEnumCaseMultiPayload();
                  if (v581 == 1)
                  {
                    uint64_t v590 = type metadata accessor for WeatherStatisticsModel();
                    (*(void (**)(void *, void *, uint64_t))(*(void *)(v590 - 8) + 16))(v578, v579, v590);
                  }
                  else
                  {
                    if (v581)
                    {
                      memcpy(v578, v579, *(void *)(*(void *)(v580 - 8) + 64));
LABEL_266:
                      uint64_t v591 = (uint64_t)v704;
                      uint64_t v592 = v709[9];
                      uint64_t v593 = (char *)v704 + v592;
                      uint64_t v594 = (char *)v523 + v592;
                      uint64_t v595 = type metadata accessor for WeatherDataOverrides();
                      uint64_t v517 = v702;
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v594, 1, v595))
                      {
                        uint64_t v596 = sub_10017DF08(&qword_100E63740);
                        memcpy(v593, v594, *(void *)(*(void *)(v596 - 8) + 64));
                      }
                      else
                      {
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v594, 1, v570))
                        {
                          uint64_t v597 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                          memcpy(v593, v594, *(void *)(*(void *)(v597 - 8) + 64));
                        }
                        else
                        {
                          ((void (*)(char *, char *, uint64_t))v696)(v593, v594, v570);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v593, 0, 1, v570);
                        }
                        uint64_t v602 = *(int *)(v595 + 20);
                        uint64_t v603 = &v593[v602];
                        uint64_t v604 = &v594[v602];
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v604, 1, v570))
                        {
                          uint64_t v605 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                          memcpy(v603, v604, *(void *)(*(void *)(v605 - 8) + 64));
                        }
                        else
                        {
                          ((void (*)(char *, char *, uint64_t))v696)(v603, v604, v570);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v603, 0, 1, v570);
                        }
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v593, 0, 1, v595);
                        uint64_t v591 = (uint64_t)v704;
                      }
                      _s7Weather24LocationCompositionStateOwst_0(v591, 0, 1, (uint64_t)v709);
LABEL_284:
                      uint64_t v617 = v517[7];
                      uint64_t v618 = (void *)(v401 + v617);
                      uint64_t v619 = (uint64_t *)((char *)v402 + v617);
                      uint64_t v620 = v619[1];
                      *uint64_t v618 = *v619;
                      v618[1] = v620;
                      uint64_t v621 = v517[8];
                      uint64_t v622 = v401 + v621;
                      uint64_t v623 = (uint64_t)v402 + v621;
                      uint64_t v624 = type metadata accessor for WeatherMapOverlayKind();
                      v625 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v624 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v625(v622, v623, v624);
                      *(unsigned char *)(v401 + v517[9]) = *((unsigned char *)v402 + v517[9]);
                      swift_storeEnumTagMultiPayload();
LABEL_285:
                      uint64_t v154 = v655;
                      uint64_t v153 = v666;
                      uint64_t v155 = v645;
                      uint64_t v192 = v678;
LABEL_286:
                      swift_storeEnumTagMultiPayload();
                      _s7Weather24LocationCompositionStateOwst_0(v401, 0, 1, v192);
                      goto LABEL_287;
                    }
                    uint64_t v582 = v579[1];
                    *uint64_t v578 = *v579;
                    v578[1] = v582;
                    swift_bridgeObjectRetain();
                  }
                  swift_storeEnumTagMultiPayload();
                  goto LABEL_266;
                default:
                  uint64_t v483 = v681;
                  uint64_t v484 = v681;
LABEL_216:
                  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v484 - 8) + 16))(v401, v402, v483);
                  goto LABEL_286;
              }
            }
LABEL_204:
            uint64_t v482 = sub_10017DF08(&qword_100E73818);
            memcpy((void *)v401, v402, *(void *)(*(void *)(v482 - 8) + 64));
LABEL_287:
            *(unsigned char *)(v153 + v155[9]) = *(unsigned char *)(v154 + v155[9]);
            *(unsigned char *)(v153 + v155[10]) = *(unsigned char *)(v154 + v155[10]);
            _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, (uint64_t)v155);
            goto LABEL_288;
          }
          uint64_t v367 = v364[1];
          *uint64_t v363 = *v364;
          v363[1] = v367;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_145;
      default:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v187 - 8) + 16))(v190, v191, v187);
        goto LABEL_203;
    }
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *((void *)a1 + 1) = v6;
    uint64_t v7 = a2[3];
    *((void *)a1 + 2) = a2[2];
    *((void *)a1 + 3) = v7;
    uint64_t v8 = a2[5];
    *((void *)a1 + 4) = a2[4];
    *((void *)a1 + 5) = v8;
    uint64_t v9 = (int *)_s11NormalModelVMa();
    uint64_t v10 = v9[7];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    v715 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v14(&a1[v9[8]], (char *)a2 + v9[8], v13);
    uint64_t v694 = v14;
    uint64_t v695 = v13;
    v14(&a1[v9[9]], (char *)a2 + v9[9], v13);
    uint64_t v15 = v9[10];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = v9[11];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for AttributedString();
    v705 = *(void (**)(char *, char *))(*(void *)(v22 - 8) + 16);
    uint64_t v710 = v22;
    v705(v20, v21);
    *(void *)&a1[v9[12]] = *(void *)((char *)a2 + v9[12]);
    uint64_t v23 = v9[13];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v24, v25, v26);
    uint64_t v28 = v9[14];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = type metadata accessor for Location();
    __dst = *(void (**)(char *, char *))(*(void *)(v31 - 8) + 16);
    uint64_t v699 = v31;
    __dst(v29, v30);
    uint64_t v32 = v9[15];
    uint64_t v33 = &a1[v32];
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = type metadata accessor for SunEvents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = v9[16];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = v9[17];
    uint64_t v41 = &a1[v40];
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = v9[18];
    uint64_t v45 = &a1[v44];
    uint64_t v46 = (void *)((char *)a2 + v44);
    uint64_t v47 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_10017DF08(&qword_100E66E28);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      uint64_t v95 = v46[1];
      if (v95)
      {
        char *v45 = *v46;
        v45[1] = v95;
        uint64_t v96 = v46[3];
        v45[2] = v46[2];
        v45[3] = v96;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v99 = *((_OWORD *)v46 + 1);
        *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v99;
      }
      uint64_t v100 = *(int *)(v47 + 20);
      uint64_t v101 = (void *)((char *)v45 + v100);
      uint64_t v102 = (void *)((char *)v46 + v100);
      uint64_t v103 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v686 = v47;
        uint64_t v104 = v102[1];
        *uint64_t v101 = *v102;
        v101[1] = v104;
        v679 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v105 = v679[5];
        uint64_t v106 = (char *)v101 + v105;
        uint64_t v107 = (char *)v102 + v105;
        uint64_t v108 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = sub_10017DF08(&qword_100E749B0);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
        }
        uint64_t v121 = v679[6];
        uint64_t v122 = (void *)((char *)v101 + v121);
        uint64_t v123 = (void *)((char *)v102 + v121);
        uint64_t v124 = v123[1];
        *uint64_t v122 = *v123;
        v122[1] = v124;
        uint64_t v125 = v679[7];
        uint64_t v126 = (char *)v101 + v125;
        uint64_t v127 = (char *)v102 + v125;
        uint64_t v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
        swift_bridgeObjectRetain();
        v128(v126, v127, v108);
        uint64_t v129 = v679[8];
        uint64_t v130 = (char *)v101 + v129;
        uint64_t v131 = (char *)v102 + v129;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102 + v129, 1, v108))
        {
          uint64_t v132 = sub_10017DF08(&qword_100E749B0);
          memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
        }
        else
        {
          v128(v130, v131, v108);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v108);
        }
        *((unsigned char *)v101 + v679[9]) = *((unsigned char *)v102 + v679[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v47 = v686;
        a2 = v715;
      }
      else
      {
        memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
      }
      uint64_t v145 = *(int *)(v47 + 24);
      uint64_t v146 = (char *)v45 + v145;
      uint64_t v147 = (char *)v46 + v145;
      uint64_t v148 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v148))
      {
        uint64_t v149 = sub_10017DF08(&qword_100E73810);
        memcpy(v146, v147, *(void *)(*(void *)(v149 - 8) + 64));
      }
      else
      {
        uint64_t v150 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v146, v147, v150);
        uint64_t v151 = sub_10017DF08(&qword_100E66478);
        v146[*(int *)(v151 + 48)] = v147[*(int *)(v151 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v146, 0, 1, v148);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    uint64_t v152 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    uint64_t v153 = (uint64_t)&a1[v152];
    uint64_t v154 = (uint64_t)a2 + v152;
    uint64_t v155 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v154, 1, (uint64_t)v155))
    {
LABEL_35:
      uint64_t v156 = sub_10017DF08(&qword_100E66E40);
      memcpy((void *)v153, (const void *)v154, *(void *)(*(void *)(v156 - 8) + 64));
LABEL_288:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v157 = *(void *)v154;
    uint64_t v158 = *(void *)(v154 + 8);
    unsigned __int8 v159 = *(unsigned char *)(v154 + 16);
    sub_10018F6EC(*(void *)v154, v158, v159);
    *(void *)uint64_t v153 = v157;
    *(void *)(v153 + 8) = v158;
    *(unsigned char *)(v153 + 16) = v159;
    uint64_t v160 = *(void *)(v154 + 32);
    *(void *)(v153 + 24) = *(void *)(v154 + 24);
    *(void *)(v153 + 32) = v160;
    uint64_t v161 = v155[6];
    uint64_t v162 = (void *)(v153 + v161);
    uint64_t v163 = (const void *)(v154 + v161);
    uint64_t v164 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    uint64_t v717 = v164;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
    {
      uint64_t v165 = sub_10017DF08(&qword_100E63758);
      memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v164);
    }
    uint64_t v166 = v155[7];
    uint64_t v167 = (uint64_t *)(v153 + v166);
    uint64_t v168 = (uint64_t *)(v154 + v166);
    uint64_t v169 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v193 = v168[1];
        uint64_t *v167 = *v168;
        v167[1] = v193;
        swift_bridgeObjectRetain();
        goto LABEL_160;
      case 2u:
        ((void (*)(uint64_t *, uint64_t *, uint64_t))v705)(v167, v168, v710);
        goto LABEL_160;
      case 3u:
        uint64_t v194 = sub_10017DF08(&qword_100E73808);
        goto LABEL_61;
      case 4u:
        uint64_t v195 = v168[1];
        uint64_t v682 = v169;
        if (v195)
        {
          uint64_t *v167 = *v168;
          v167[1] = v195;
          uint64_t v196 = v168;
          uint64_t v197 = v168[2];
          uint64_t v198 = v168[3];
          v167[2] = v197;
          v167[3] = v198;
          swift_bridgeObjectRetain();
          uint64_t v168 = v196;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v216 = *((_OWORD *)v168 + 1);
          *(_OWORD *)uint64_t v167 = *(_OWORD *)v168;
          *((_OWORD *)v167 + 1) = v216;
        }
        uint64_t v217 = *(int *)(v47 + 20);
        char v218 = (uint64_t *)((char *)v167 + v217);
        v640 = v168;
        int v219 = (uint64_t *)((char *)v168 + v217);
        uint64_t v220 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v688 = v47;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v659 = v154;
          uint64_t v221 = v219[1];
          *char v218 = *v219;
          v218[1] = v221;
          uint64_t v629 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v633 = v219;
          uint64_t v222 = v629[5];
          uint64_t v223 = (char *)v218 + v222;
          v224 = (char *)v219 + v222;
          uint64_t v225 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v670 = v153;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v225))
          {
            uint64_t v226 = sub_10017DF08(&qword_100E749B0);
            memcpy(v223, v224, *(void *)(*(void *)(v226 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v223, v224, v225);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v225);
          }
          uint64_t v281 = v629[6];
          v282 = (void *)((char *)v218 + v281);
          v283 = (void *)((char *)v633 + v281);
          uint64_t v284 = v283[1];
          void *v282 = *v283;
          v282[1] = v284;
          uint64_t v285 = v629[7];
          v286 = (char *)v218 + v285;
          v287 = (char *)v633 + v285;
          uint64_t v288 = *(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16);
          swift_bridgeObjectRetain();
          v288(v286, v287, v225);
          uint64_t v289 = v629[8];
          uint64_t v290 = (char *)v218 + v289;
          v291 = (char *)v633 + v289;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v633 + v289, 1, v225))
          {
            uint64_t v292 = sub_10017DF08(&qword_100E749B0);
            memcpy(v290, v291, *(void *)(*(void *)(v292 - 8) + 64));
          }
          else
          {
            v288(v290, v291, v225);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v290, 0, 1, v225);
          }
          uint64_t v153 = v670;
          *((unsigned char *)v218 + v629[9]) = *((unsigned char *)v633 + v629[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v154 = v659;
          uint64_t v47 = v688;
        }
        else
        {
          memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
        }
        uint64_t v169 = v682;
        uint64_t v305 = *(int *)(v47 + 24);
        uint64_t v306 = (char *)v167 + v305;
        v307 = (char *)v640 + v305;
        uint64_t v308 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v307, 1, v308))
        {
          uint64_t v309 = sub_10017DF08(&qword_100E73810);
          memcpy(v306, v307, *(void *)(*(void *)(v309 - 8) + 64));
        }
        else
        {
          uint64_t v310 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 16))(v306, v307, v310);
          uint64_t v311 = sub_10017DF08(&qword_100E66478);
          v306[*(int *)(v311 + 48)] = v307[*(int *)(v311 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v306, 0, 1, v308);
        }
        goto LABEL_159;
      case 5u:
        uint64_t v683 = v169;
        uint64_t v688 = v47;
        uint64_t v657 = v154;
        uint64_t v668 = v153;
        v647 = v155;
        if (v168[3])
        {
          uint64_t v199 = v168;
          uint64_t v200 = *v168;
          uint64_t v201 = v199[1];
          char v202 = *((unsigned char *)v199 + 16);
          sub_100190CC4(v200, v201, v202);
          uint64_t *v167 = v200;
          v167[1] = v201;
          uint64_t v168 = v199;
          *((unsigned char *)v167 + 16) = v202;
          v167[3] = v199[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v227 = *((_OWORD *)v168 + 1);
          *(_OWORD *)uint64_t v167 = *(_OWORD *)v168;
          *((_OWORD *)v167 + 1) = v227;
        }
        uint64_t v228 = v168;
        uint64_t v229 = v168[4];
        uint64_t v230 = v228[5];
        uint64_t v231 = v228[6];
        uint64_t v233 = v228[7];
        uint64_t v232 = v228[8];
        uint64_t v234 = v228[9];
        uint64_t v235 = v228[10];
        char v236 = *((unsigned char *)v228 + 89);
        unsigned __int8 v237 = *((unsigned char *)v228 + 88);
        sub_10033A9E8(v229, v230, v231, v233, v232, v234, v235, v237, v236);
        v167[4] = v229;
        v167[5] = v230;
        v167[6] = v231;
        v167[7] = v233;
        v167[8] = v232;
        v167[9] = v234;
        v167[10] = v235;
        *((unsigned char *)v167 + 88) = v237;
        *((unsigned char *)v167 + 89) = v236;
        uint64_t v154 = v657;
        uint64_t v153 = v668;
        uint64_t v155 = v647;
        uint64_t v169 = v683;
        goto LABEL_159;
      case 6u:
        uint64_t v194 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_61:
        uint64_t v170 = v194;
        uint64_t v171 = v194;
        goto LABEL_62;
      case 7u:
        uint64_t v637 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v203 = swift_getEnumCaseMultiPayload();
        if (v203 != 1)
        {
          if (v203)
          {
            memcpy(v167, v168, *(void *)(*(void *)(v637 - 8) + 64));
          }
          else
          {
            uint64_t v204 = v168[1];
            uint64_t *v167 = *v168;
            v167[1] = v204;
            v167[2] = v168[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_160;
        }
        uint64_t v688 = v47;
        v650 = v155;
        uint64_t v672 = v153;
        uint64_t v259 = *v168;
        v641 = v168;
        uint64_t v260 = v168[1];
        uint64_t *v167 = v259;
        v167[1] = v260;
        uint64_t v261 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v262 = v261[5];
        uint64_t v263 = (char *)v167 + v262;
        char v264 = (char *)v641 + v262;
        unsigned __int8 v265 = v641;
        swift_bridgeObjectRetain();
        ((void (*)(char *, char *, uint64_t))__dst)(v263, v264, v699);
        uint64_t v266 = v261[6];
        uint64_t v267 = (uint64_t *)((char *)v167 + v266);
        v268 = (uint64_t *)((char *)v641 + v266);
        uint64_t v269 = type metadata accessor for WeatherData(0);
        uint64_t v661 = v154;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v268, 1, v269))
        {
          uint64_t v270 = sub_10017DF08(&qword_100E63850);
          memcpy(v267, v268, *(void *)(*(void *)(v270 - 8) + 64));
          goto LABEL_158;
        }
        uint64_t v319 = v268;
        uint64_t v320 = *v268;
        uint64_t v321 = v268[1];
        *uint64_t v267 = v320;
        v267[1] = v321;
        v636 = (int *)v269;
        uint64_t v322 = *(int *)(v269 + 20);
        v323 = (char *)v267 + v322;
        uint64_t v627 = v261;
        uint64_t v630 = v319;
        uint64_t v324 = (char *)v319 + v322;
        uint64_t v325 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v324, 1, v325))
        {
          uint64_t v326 = sub_10017DF08(&qword_100E63730);
          memcpy(v323, v324, *(void *)(*(void *)(v326 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 16))(v323, v324, v325);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v323, 0, 1, v325);
        }
        uint64_t v335 = v636[6];
        uint64_t v336 = (char *)v267 + v335;
        uint64_t v337 = (uint64_t)v630 + v335;
        uint64_t v338 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v338 - 8) + 16))(v336, v337, v338);
        uint64_t v339 = v636[7];
        uint64_t v340 = (char *)v267 + v339;
        v341 = (char *)v630 + v339;
        uint64_t v342 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v341, 1, v342))
        {
          uint64_t v343 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v340, v341, *(void *)(*(void *)(v343 - 8) + 64));
          uint64_t v344 = v695;
        }
        else
        {
          uint64_t v344 = v695;
          v694(v340, v341, v695);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v340, 0, 1, v342);
        }
        uint64_t v356 = v636[8];
        uint64_t v357 = (void *)((char *)v267 + v356);
        v358 = (uint64_t *)((char *)v630 + v356);
        uint64_t v359 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v360 = swift_getEnumCaseMultiPayload();
        if (v360 == 1)
        {
          uint64_t v368 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v368 - 8) + 16))(v357, v358, v368);
          goto LABEL_136;
        }
        if (!v360)
        {
          uint64_t v361 = v358[1];
          *uint64_t v357 = *v358;
          v357[1] = v361;
          swift_bridgeObjectRetain();
LABEL_136:
          swift_storeEnumTagMultiPayload();
          goto LABEL_138;
        }
        memcpy(v357, v358, *(void *)(*(void *)(v359 - 8) + 64));
LABEL_138:
        uint64_t v369 = (uint64_t)v636;
        uint64_t v370 = v636[9];
        v371 = (char *)v267 + v370;
        uint64_t v372 = (char *)v630 + v370;
        uint64_t v373 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v372, 1, v373))
        {
          uint64_t v374 = sub_10017DF08(&qword_100E63740);
          memcpy(v371, v372, *(void *)(*(void *)(v374 - 8) + 64));
          unsigned __int8 v265 = v641;
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v372, 1, v344))
          {
            uint64_t v375 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v371, v372, *(void *)(*(void *)(v375 - 8) + 64));
          }
          else
          {
            v694(v371, v372, v344);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v371, 0, 1, v344);
          }
          uint64_t v383 = *(int *)(v373 + 20);
          v384 = &v371[v383];
          v385 = &v372[v383];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v385, 1, v344))
          {
            uint64_t v386 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v384, v385, *(void *)(*(void *)(v386 - 8) + 64));
          }
          else
          {
            v694(v384, v385, v344);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v344);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v371, 0, 1, v373);
          unsigned __int8 v265 = v641;
          uint64_t v369 = (uint64_t)v636;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v267, 0, 1, v369);
        uint64_t v261 = v627;
LABEL_158:
        uint64_t v391 = v261[7];
        uint64_t v392 = (uint64_t *)((char *)v167 + v391);
        uint64_t v393 = (uint64_t *)((char *)v265 + v391);
        v394 = v265;
        uint64_t v395 = v393[1];
        *uint64_t v392 = *v393;
        v392[1] = v395;
        uint64_t v396 = v261[8];
        uint64_t v397 = (char *)v167 + v396;
        uint64_t v642 = (uint64_t)v394 + v396;
        uint64_t v398 = type metadata accessor for WeatherMapOverlayKind();
        v399 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v398 - 8) + 16);
        swift_bridgeObjectRetain();
        v399(v397, v642, v398);
        *((unsigned char *)v167 + v261[9]) = *((unsigned char *)v394 + v261[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v154 = v661;
        uint64_t v153 = v672;
        uint64_t v155 = v650;
LABEL_159:
        uint64_t v47 = v688;
LABEL_160:
        swift_storeEnumTagMultiPayload();
        uint64_t v400 = v155[8];
        uint64_t v401 = v153 + v400;
        uint64_t v402 = (uint64_t *)(v154 + v400);
        if (_s7Weather24LocationCompositionStateOwet_0(v154 + v400, 1, v169)) {
          goto LABEL_204;
        }
        break;
      default:
        uint64_t v170 = v717;
        uint64_t v171 = v717;
LABEL_62:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v171 - 8) + 16))(v167, v168, v170);
        goto LABEL_160;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v405 = v402[1];
        *(void *)uint64_t v401 = *v402;
        *(void *)(v401 + 8) = v405;
        swift_bridgeObjectRetain();
        goto LABEL_280;
      case 2u:
        ((void (*)(uint64_t, uint64_t *, uint64_t))v705)(v401, v402, v710);
        goto LABEL_280;
      case 3u:
        uint64_t v406 = sub_10017DF08(&qword_100E73808);
        goto LABEL_171;
      case 4u:
        uint64_t v407 = v402[1];
        if (v407)
        {
          *(void *)uint64_t v401 = *v402;
          *(void *)(v401 + 8) = v407;
          uint64_t v408 = v402[3];
          *(void *)(v401 + 16) = v402[2];
          *(void *)(v401 + 24) = v408;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v415 = *((_OWORD *)v402 + 1);
          *(_OWORD *)uint64_t v401 = *(_OWORD *)v402;
          *(_OWORD *)(v401 + 16) = v415;
        }
        uint64_t v416 = *(int *)(v47 + 20);
        uint64_t v712 = v401;
        uint64_t v417 = (void *)(v401 + v416);
        uint64_t v418 = (uint64_t *)((char *)v402 + v416);
        uint64_t v419 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v691 = v47;
          uint64_t v664 = v154;
          uint64_t v675 = v153;
          uint64_t v420 = v418[1];
          *uint64_t v417 = *v418;
          v417[1] = v420;
          uint64_t v707 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v421 = v707[5];
          uint64_t v422 = (char *)v417 + v421;
          long long v423 = (char *)v418 + v421;
          uint64_t v424 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          v653 = v155;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v423, 1, v424))
          {
            uint64_t v425 = sub_10017DF08(&qword_100E749B0);
            memcpy(v422, v423, *(void *)(*(void *)(v425 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v424 - 8) + 16))(v422, v423, v424);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v422, 0, 1, v424);
          }
          uint64_t v446 = v707[6];
          v447 = (void *)((char *)v417 + v446);
          v448 = (void *)((char *)v418 + v446);
          uint64_t v449 = v448[1];
          void *v447 = *v448;
          v447[1] = v449;
          uint64_t v450 = v707[7];
          v451 = (char *)v417 + v450;
          v452 = (char *)v418 + v450;
          uint64_t v453 = *(void (**)(char *, char *, uint64_t))(*(void *)(v424 - 8) + 16);
          swift_bridgeObjectRetain();
          v453(v451, v452, v424);
          uint64_t v454 = v707[8];
          v455 = (char *)v417 + v454;
          v456 = (char *)v418 + v454;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v418 + v454, 1, v424))
          {
            uint64_t v457 = sub_10017DF08(&qword_100E749B0);
            memcpy(v455, v456, *(void *)(*(void *)(v457 - 8) + 64));
          }
          else
          {
            v453(v455, v456, v424);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v455, 0, 1, v424);
          }
          uint64_t v153 = v675;
          uint64_t v155 = v653;
          *((unsigned char *)v417 + v707[9]) = *((unsigned char *)v418 + v707[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v154 = v664;
          uint64_t v47 = v691;
        }
        else
        {
          memcpy(v417, v418, *(void *)(*(void *)(v419 - 8) + 64));
        }
        uint64_t v458 = *(int *)(v47 + 24);
        v459 = (void *)(v712 + v458);
        v460 = (char *)v402 + v458;
        uint64_t v461 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v460, 1, v461))
        {
          uint64_t v462 = sub_10017DF08(&qword_100E73810);
          memcpy(v459, v460, *(void *)(*(void *)(v462 - 8) + 64));
        }
        else
        {
          uint64_t v463 = type metadata accessor for URL();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v463 - 8) + 16))(v459, v460, v463);
          uint64_t v464 = sub_10017DF08(&qword_100E66478);
          *((unsigned char *)v459 + *(int *)(v464 + 48)) = v460[*(int *)(v464 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v459, 0, 1, v461);
        }
        uint64_t v401 = v712;
        goto LABEL_280;
      case 5u:
        uint64_t v652 = v155;
        uint64_t v663 = v154;
        uint64_t v674 = v153;
        uint64_t v684 = v169;
        if (v402[3])
        {
          uint64_t v409 = *v402;
          uint64_t v410 = v402[1];
          char v411 = *((unsigned char *)v402 + 16);
          sub_100190CC4(*v402, v410, v411);
          *(void *)uint64_t v401 = v409;
          *(void *)(v401 + 8) = v410;
          *(unsigned char *)(v401 + 16) = v411;
          *(void *)(v401 + 24) = v402[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v426 = *((_OWORD *)v402 + 1);
          *(_OWORD *)uint64_t v401 = *(_OWORD *)v402;
          *(_OWORD *)(v401 + 16) = v426;
        }
        uint64_t v427 = v402[4];
        uint64_t v428 = v402[5];
        uint64_t v430 = v402[6];
        uint64_t v429 = v402[7];
        uint64_t v431 = v402[8];
        uint64_t v432 = v402[9];
        uint64_t v433 = v402[10];
        char v434 = *((unsigned char *)v402 + 89);
        uint64_t v435 = *((unsigned __int8 *)v402 + 88);
        sub_10033A9E8(v427, v428, v430, v429, v431, v432, v433, v435, v434);
        *(void *)(v401 + 32) = v427;
        *(void *)(v401 + 40) = v428;
        *(void *)(v401 + 48) = v430;
        *(void *)(v401 + 56) = v429;
        *(void *)(v401 + 64) = v431;
        *(void *)(v401 + 72) = v432;
        *(void *)(v401 + 80) = v433;
        *(unsigned char *)(v401 + 88) = v435;
        *(unsigned char *)(v401 + 89) = v434;
        uint64_t v154 = v663;
        uint64_t v153 = v674;
        uint64_t v155 = v652;
        uint64_t v169 = v684;
        goto LABEL_280;
      case 6u:
        uint64_t v406 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_171:
        uint64_t v403 = v406;
        uint64_t v404 = v406;
        goto LABEL_172;
      case 7u:
        uint64_t v412 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v413 = swift_getEnumCaseMultiPayload();
        if (v413 != 1)
        {
          if (v413)
          {
            memcpy((void *)v401, v402, *(void *)(*(void *)(v412 - 8) + 64));
          }
          else
          {
            uint64_t v414 = v402[1];
            *(void *)uint64_t v401 = *v402;
            *(void *)(v401 + 8) = v414;
            *(void *)(v401 + 16) = v402[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_280:
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0(v401, 0, 1, v169);
          goto LABEL_287;
        }
        uint64_t v676 = v153;
        uint64_t v685 = v169;
        v654 = v155;
        uint64_t v665 = v154;
        uint64_t v436 = v402[1];
        *(void *)uint64_t v401 = *v402;
        *(void *)(v401 + 8) = v436;
        uint64_t v437 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v438 = v437[5];
        uint64_t v439 = v401 + v438;
        uint64_t v440 = (uint64_t)v402 + v438;
        swift_bridgeObjectRetain();
        ((void (*)(uint64_t, uint64_t, uint64_t))__dst)(v439, v440, v699);
        uint64_t v441 = v437[6];
        char v442 = (void *)(v401 + v441);
        uint64_t v443 = (uint64_t *)((char *)v402 + v441);
        uint64_t v444 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v443, 1, v444))
        {
          uint64_t v445 = sub_10017DF08(&qword_100E63850);
          memcpy(v442, v443, *(void *)(*(void *)(v445 - 8) + 64));
LABEL_279:
          uint64_t v169 = v685;
          uint64_t v606 = v437[7];
          uint64_t v607 = (void *)(v401 + v606);
          uint64_t v608 = (uint64_t *)((char *)v402 + v606);
          uint64_t v609 = v608[1];
          *uint64_t v607 = *v608;
          v607[1] = v609;
          uint64_t v610 = v437[8];
          uint64_t v611 = v401 + v610;
          uint64_t v612 = (uint64_t)v402 + v610;
          uint64_t v613 = v401;
          uint64_t v614 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v615 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v614 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v616 = v614;
          uint64_t v401 = v613;
          v615(v611, v612, v616);
          *(unsigned char *)(v613 + v437[9]) = *((unsigned char *)v402 + v437[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v154 = v665;
          uint64_t v153 = v676;
          uint64_t v155 = v654;
          goto LABEL_280;
        }
        uint64_t v701 = v437;
        uint64_t v713 = v401;
        uint64_t v465 = v443[1];
        *char v442 = *v443;
        v442[1] = v465;
        uint64_t v703 = (int *)v444;
        uint64_t v466 = *(int *)(v444 + 20);
        uint64_t v467 = (uint64_t)v442;
        v468 = (char *)v442 + v466;
        uint64_t v469 = (char *)v443 + v466;
        uint64_t v470 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v469, 1, v470))
        {
          uint64_t v471 = sub_10017DF08(&qword_100E63730);
          memcpy(v468, v469, *(void *)(*(void *)(v471 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v470 - 8) + 16))(v468, v469, v470);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v468, 0, 1, v470);
        }
        uint64_t v551 = v703[6];
        uint64_t v552 = v467 + v551;
        uint64_t v553 = (char *)v443 + v551;
        uint64_t v554 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v554 - 8) + 16))(v552, v553, v554);
        uint64_t v555 = v703[7];
        uint64_t v556 = (void *)(v467 + v555);
        v557 = (char *)v443 + v555;
        uint64_t v558 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v557, 1, v558))
        {
          uint64_t v559 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v556, v557, *(void *)(*(void *)(v559 - 8) + 64));
          uint64_t v560 = v695;
        }
        else
        {
          uint64_t v560 = v695;
          v694((char *)v556, v557, v695);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v556, 0, 1, v558);
        }
        uint64_t v571 = v703[8];
        v572 = (void *)(v467 + v571);
        v573 = (void *)((char *)v443 + v571);
        uint64_t v574 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v575 = swift_getEnumCaseMultiPayload();
        if (v575 == 1)
        {
          uint64_t v583 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v583 - 8) + 16))(v572, v573, v583);
        }
        else
        {
          if (v575)
          {
            memcpy(v572, v573, *(void *)(*(void *)(v574 - 8) + 64));
            goto LABEL_259;
          }
          uint64_t v576 = v573[1];
          void *v572 = *v573;
          v572[1] = v576;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_259:
        uint64_t v584 = v703[9];
        uint64_t v585 = (char *)(v467 + v584);
        uint64_t v586 = (char *)v443 + v584;
        uint64_t v587 = type metadata accessor for WeatherDataOverrides();
        uint64_t v401 = v713;
        uint64_t v437 = v701;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v586, 1, v587))
        {
          uint64_t v588 = sub_10017DF08(&qword_100E63740);
          memcpy(v585, v586, *(void *)(*(void *)(v588 - 8) + 64));
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v586, 1, v560))
          {
            uint64_t v589 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v585, v586, *(void *)(*(void *)(v589 - 8) + 64));
          }
          else
          {
            v694(v585, v586, v560);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v585, 0, 1, v560);
          }
          uint64_t v598 = *(int *)(v587 + 20);
          uint64_t v599 = &v585[v598];
          v600 = &v586[v598];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v600, 1, v560))
          {
            uint64_t v601 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v599, v600, *(void *)(*(void *)(v601 - 8) + 64));
          }
          else
          {
            v694(v599, v600, v560);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v599, 0, 1, v560);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v585, 0, 1, v587);
          uint64_t v401 = v713;
        }
        _s7Weather24LocationCompositionStateOwst_0(v467, 0, 1, (uint64_t)v703);
        goto LABEL_279;
      default:
        uint64_t v403 = v717;
        uint64_t v404 = v717;
LABEL_172:
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v404 - 8) + 16))(v401, v402, v403);
        goto LABEL_280;
    }
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_10073E28C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10074B9F4((uint64_t)a1, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      uint64_t v44 = (int *)_s10PolarModelVMa();
      uint64_t v45 = v44[6];
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      uint64_t v48 = type metadata accessor for PolarType();
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49(v46, v47, v48);
      uint64_t v50 = v44[7];
      uint64_t v51 = &a1[v50];
      uint64_t v52 = &a2[v50];
      uint64_t v53 = type metadata accessor for Date();
      uint64_t v633 = *(void (**)(char *, char *))(*(void *)(v53 - 8) + 16);
      uint64_t v634 = (void *)v53;
      v633(v51, v52);
      uint64_t v54 = v44[8];
      uint64_t v55 = &a1[v54];
      uint64_t v56 = &a2[v54];
      uint64_t v57 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
      uint64_t v58 = v44[9];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      uint64_t v61 = type metadata accessor for AttributedString();
      v646 = *(void (**)(char *, char *))(*(void *)(v61 - 8) + 16);
      uint64_t v652 = v61;
      v646(v59, v60);
      *(void *)&a1[v44[10]] = *(void *)&a2[v44[10]];
      uint64_t v62 = v44[11];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = *((void *)v64 + 1);
      uint64_t v65 = v44[12];
      uint64_t v66 = &a1[v65];
      uint64_t v67 = &a2[v65];
      uint64_t v68 = type metadata accessor for SunriseSunsetDetailChartViewModel();
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(v66, v67, v68);
      uint64_t v70 = v44[13];
      uint64_t v71 = &a1[v70];
      uint64_t v72 = &a2[v70];
      uint64_t v73 = type metadata accessor for Location();
      v639 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
      v639(v71, v72, v73);
      uint64_t v74 = v44[14];
      uint64_t v75 = &a1[v74];
      uint64_t v76 = &a2[v74];
      uint64_t v77 = type metadata accessor for DaylightStringBuilder();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
      uint64_t v78 = v44[15];
      uint64_t v79 = &a1[v78];
      uint64_t v80 = &a2[v78];
      uint64_t v81 = type metadata accessor for OverviewTableViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
      uint64_t v82 = v44[16];
      uint64_t v83 = &a1[v82];
      int v84 = &a2[v82];
      uint64_t v85 = type metadata accessor for DetailComponentContainerViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85))
      {
        uint64_t v86 = sub_10017DF08(&qword_100E66E28);
        memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        if (*((void *)v84 + 1))
        {
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = *((void *)v84 + 1);
          *((void *)v83 + 2) = *((void *)v84 + 2);
          *((void *)v83 + 3) = *((void *)v84 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v97 = *((_OWORD *)v84 + 1);
          *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
          *((_OWORD *)v83 + 1) = v97;
        }
        uint64_t v98 = *(int *)(v85 + 20);
        long long v99 = &v83[v98];
        uint64_t v100 = &v84[v98];
        uint64_t v101 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v625 = v73;
          char *v99 = *v100;
          v99[1] = v100[1];
          __src = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v102 = __src[5];
          __dst = (char *)v99 + v102;
          uint64_t v103 = (char *)v100 + v102;
          uint64_t v104 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104))
          {
            uint64_t v105 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v103, *(void *)(*(void *)(v105 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(__dst, v103, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v104);
          }
          uint64_t v117 = __src[6];
          uint64_t v118 = (void *)((char *)v99 + v117);
          uint64_t v119 = (void *)((char *)v100 + v117);
          *uint64_t v118 = *v119;
          v118[1] = v119[1];
          uint64_t v120 = __src[7];
          uint64_t v121 = (char *)v99 + v120;
          uint64_t v122 = (char *)v100 + v120;
          uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
          swift_bridgeObjectRetain();
          v123(v121, v122, v104);
          uint64_t v124 = __src[8];
          uint64_t v125 = (char *)v99 + v124;
          uint64_t v126 = (char *)v100 + v124;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100 + v124, 1, v104))
          {
            uint64_t v127 = sub_10017DF08(&qword_100E749B0);
            memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            v123(v125, v126, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v104);
          }
          *((unsigned char *)v99 + __src[9]) = *((unsigned char *)v100 + __src[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v73 = v625;
        }
        else
        {
          memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
        }
        uint64_t v154 = *(int *)(v85 + 24);
        uint64_t v155 = &v83[v154];
        uint64_t v156 = &v84[v154];
        uint64_t v157 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v157))
        {
          uint64_t v158 = sub_10017DF08(&qword_100E73810);
          memcpy(v155, v156, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          uint64_t v159 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16))(v155, v156, v159);
          uint64_t v160 = sub_10017DF08(&qword_100E66478);
          v155[*(int *)(v160 + 48)] = v156[*(int *)(v160 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v155, 0, 1, v157);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
      }
      uint64_t v161 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
      uint64_t v136 = (uint64_t)&a1[v161];
      uint64_t v137 = (uint64_t)&a2[v161];
      uint64_t v138 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v137, 1, (uint64_t)v138)) {
        goto LABEL_36;
      }
      uint64_t v162 = *(void *)v137;
      uint64_t v163 = *(void *)(v137 + 8);
      unsigned __int8 v164 = *(unsigned char *)(v137 + 16);
      sub_10018F6EC(*(void *)v137, v163, v164);
      *(void *)uint64_t v136 = v162;
      *(void *)(v136 + 8) = v163;
      *(unsigned char *)(v136 + 16) = v164;
      *(void *)(v136 + 24) = *(void *)(v137 + 24);
      *(void *)(v136 + 32) = *(void *)(v137 + 32);
      uint64_t v165 = v138[6];
      uint64_t v166 = (void *)(v136 + v165);
      uint64_t v167 = (const void *)(v137 + v165);
      uint64_t v168 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      uint64_t v626 = v73;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, v168))
      {
        uint64_t v169 = sub_10017DF08(&qword_100E63758);
        memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v166, 0, 1, v168);
      }
      uint64_t v170 = v138[7];
      uint64_t v171 = (void *)(v136 + v170);
      uint64_t v172 = (char *)(v137 + v170);
      uint64_t v173 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      __srca = v172;
      uint64_t v615 = v168;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v171 = *(void *)v172;
          v171[1] = *((void *)v172 + 1);
          swift_bridgeObjectRetain();
          goto LABEL_204;
        case 2u:
          ((void (*)(void *, char *, uint64_t))v646)(v171, v172, v652);
          goto LABEL_204;
        case 3u:
          uint64_t v180 = sub_10017DF08(&qword_100E73808);
          goto LABEL_76;
        case 4u:
          uint64_t v181 = v172;
          if (*((void *)v172 + 1))
          {
            *uint64_t v171 = *(void *)v172;
            v171[1] = *((void *)v172 + 1);
            v171[2] = *((void *)v172 + 2);
            v171[3] = *((void *)v172 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v181 = v172;
          }
          else
          {
            long long v208 = *((_OWORD *)v172 + 1);
            *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
            *((_OWORD *)v171 + 1) = v208;
          }
          uint64_t v623 = v85;
          uint64_t v209 = *(int *)(v85 + 20);
          uint64_t v210 = (void *)((char *)v171 + v209);
          uint64_t v211 = (void *)((char *)v181 + v209);
          uint64_t v212 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            __dstd = (void *)v173;
            uint64_t v583 = v137;
            *uint64_t v210 = *v211;
            v210[1] = v211[1];
            uint64_t v568 = v211;
            v573 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v213 = v573[5];
            int v214 = (char *)v210 + v213;
            uint64_t v215 = (char *)v211 + v213;
            uint64_t v216 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            uint64_t v594 = v136;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v215, 1, v216))
            {
              uint64_t v217 = sub_10017DF08(&qword_100E749B0);
              memcpy(v214, v215, *(void *)(*(void *)(v217 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16))(v214, v215, v216);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v214, 0, 1, v216);
            }
            uint64_t v257 = v573[6];
            unsigned __int8 v258 = (void *)((char *)v210 + v257);
            uint64_t v259 = (void *)((char *)v568 + v257);
            *unsigned __int8 v258 = *v259;
            v258[1] = v259[1];
            uint64_t v260 = v573[7];
            uint64_t v261 = (char *)v210 + v260;
            uint64_t v262 = (char *)v568 + v260;
            uint64_t v263 = *(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16);
            swift_bridgeObjectRetain();
            v263(v261, v262, v216);
            uint64_t v264 = v573[8];
            unsigned __int8 v265 = (char *)v210 + v264;
            uint64_t v266 = (char *)v568 + v264;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v568 + v264, 1, v216))
            {
              uint64_t v267 = sub_10017DF08(&qword_100E749B0);
              memcpy(v265, v266, *(void *)(*(void *)(v267 - 8) + 64));
            }
            else
            {
              v263(v265, v266, v216);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v265, 0, 1, v216);
            }
            uint64_t v136 = v594;
            *((unsigned char *)v210 + v573[9]) = *((unsigned char *)v568 + v573[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v137 = v583;
            uint64_t v173 = (uint64_t)__dstd;
          }
          else
          {
            memcpy(v210, v211, *(void *)(*(void *)(v212 - 8) + 64));
          }
          uint64_t v275 = *(int *)(v623 + 24);
          uint64_t v276 = (char *)v171 + v275;
          uint64_t v277 = &__srca[v275];
          uint64_t v278 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, v278))
          {
            uint64_t v279 = sub_10017DF08(&qword_100E73810);
            memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
          }
          else
          {
            uint64_t v280 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16))(v276, v277, v280);
            uint64_t v281 = sub_10017DF08(&qword_100E66478);
            v276[*(int *)(v281 + 48)] = v277[*(int *)(v281 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, v278);
          }
          uint64_t v85 = v623;
          goto LABEL_204;
        case 5u:
          uint64_t v622 = v85;
          uint64_t v592 = v136;
          __dstb = (void *)v173;
          unsigned __int8 v182 = v172;
          uint64_t v577 = v138;
          uint64_t v582 = v137;
          if (*((void *)v172 + 3))
          {
            uint64_t v183 = *(void *)v172;
            uint64_t v184 = *((void *)__srca + 1);
            char v185 = __srca[16];
            sub_100190CC4(*(void *)__srca, v184, v185);
            *uint64_t v171 = v183;
            v171[1] = v184;
            *((unsigned char *)v171 + 16) = v185;
            v171[3] = *((void *)__srca + 3);
            swift_bridgeObjectRetain();
            unsigned __int8 v182 = __srca;
          }
          else
          {
            long long v218 = *((_OWORD *)v172 + 1);
            *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
            *((_OWORD *)v171 + 1) = v218;
          }
          uint64_t v219 = *((void *)v182 + 4);
          uint64_t v220 = *((void *)v182 + 5);
          uint64_t v221 = *((void *)v182 + 6);
          uint64_t v222 = *((void *)v182 + 7);
          uint64_t v223 = *((void *)v182 + 8);
          uint64_t v224 = *((void *)v182 + 9);
          uint64_t v225 = *((void *)v182 + 10);
          char v226 = v182[89];
          unsigned __int8 v227 = v182[88];
          sub_10033A9E8(v219, v220, v221, v222, v223, v224, v225, v227, v226);
          v171[4] = v219;
          v171[5] = v220;
          v171[6] = v221;
          v171[7] = v222;
          v171[8] = v223;
          v171[9] = v224;
          v171[10] = v225;
          *((unsigned char *)v171 + 88) = v227;
          *((unsigned char *)v171 + 89) = v226;
          uint64_t v137 = v582;
          uint64_t v136 = v592;
          uint64_t v138 = v577;
          uint64_t v173 = (uint64_t)__dstb;
          goto LABEL_203;
        case 6u:
          uint64_t v180 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_76:
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v171, v172, v180);
          goto LABEL_204;
        case 7u:
          uint64_t v572 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v186 = swift_getEnumCaseMultiPayload();
          if (v186 != 1)
          {
            if (v186)
            {
              memcpy(v171, v172, *(void *)(*(void *)(v572 - 8) + 64));
            }
            else
            {
              *uint64_t v171 = *(void *)v172;
              v171[1] = *((void *)v172 + 1);
              v171[2] = *((void *)v172 + 2);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_204;
          }
          uint64_t v622 = v85;
          uint64_t v578 = v138;
          uint64_t v596 = v136;
          *uint64_t v171 = *(void *)v172;
          v171[1] = *((void *)v172 + 1);
          uint64_t v237 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v238 = *(int *)(v237 + 20);
          uint64_t v239 = (char *)v171 + v238;
          uint64_t v240 = &v172[v238];
          swift_bridgeObjectRetain();
          v639(v239, v240, v626);
          uint64_t v569 = (int *)v237;
          uint64_t v241 = *(int *)(v237 + 24);
          uint64_t v242 = (void *)((char *)v171 + v241);
          uint64_t v243 = &v172[v241];
          uint64_t v244 = type metadata accessor for WeatherData(0);
          uint64_t v585 = v137;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244))
          {
            uint64_t v245 = sub_10017DF08(&qword_100E63850);
            memcpy(v242, v243, *(void *)(*(void *)(v245 - 8) + 64));
            goto LABEL_202;
          }
          __dstf = (void *)v173;
          *uint64_t v242 = *(void *)v243;
          v242[1] = *((void *)v243 + 1);
          uint64_t v287 = *(int *)(v244 + 20);
          uint64_t v288 = (char *)v242 + v287;
          uint64_t v565 = v243;
          uint64_t v289 = &v243[v287];
          uint64_t v290 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          v291 = v242;
          uint64_t v292 = (int *)v244;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v289, 1, v290))
          {
            uint64_t v293 = sub_10017DF08(&qword_100E63730);
            memcpy(v288, v289, *(void *)(*(void *)(v293 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v290 - 8) + 16))(v288, v289, v290);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v288, 0, 1, v290);
          }
          uint64_t v304 = *(int *)(v244 + 24);
          uint64_t v305 = (uint64_t)v291;
          uint64_t v306 = (char *)v291 + v304;
          v307 = (char *)v565 + v304;
          uint64_t v308 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 16))(v306, v307, v308);
          uint64_t v309 = v292[7];
          uint64_t v310 = (void *)(v305 + v309);
          uint64_t v311 = (char *)v565 + v309;
          uint64_t v312 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v311, 1, v312))
          {
            uint64_t v313 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v310, v311, *(void *)(*(void *)(v313 - 8) + 64));
            uint64_t v314 = (uint64_t)v634;
          }
          else
          {
            uint64_t v314 = (uint64_t)v634;
            ((void (*)(void *, char *, void *))v633)(v310, v311, v634);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v310, 0, 1, v312);
          }
          uint64_t v320 = v292[8];
          uint64_t v321 = (void *)(v305 + v320);
          uint64_t v322 = (void *)((char *)v565 + v320);
          uint64_t v323 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v324 = swift_getEnumCaseMultiPayload();
          if (v324 == 1)
          {
            uint64_t v333 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v333 - 8) + 16))(v321, v322, v333);
          }
          else
          {
            if (v324)
            {
              memcpy(v321, v322, *(void *)(*(void *)(v323 - 8) + 64));
LABEL_146:
              uint64_t v562 = v305;
              uint64_t v334 = v292[9];
              uint64_t v335 = (char *)(v305 + v334);
              uint64_t v336 = (char *)v565 + v334;
              uint64_t v337 = type metadata accessor for WeatherDataOverrides();
              uint64_t v173 = (uint64_t)__dstf;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v336, 1, v337))
              {
                uint64_t v338 = sub_10017DF08(&qword_100E63740);
                memcpy(v335, v336, *(void *)(*(void *)(v338 - 8) + 64));
              }
              else
              {
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v336, 1, v314))
                {
                  uint64_t v339 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v335, v336, *(void *)(*(void *)(v339 - 8) + 64));
                }
                else
                {
                  ((void (*)(char *, char *, uint64_t))v633)(v335, v336, v314);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v335, 0, 1, v314);
                }
                uint64_t v344 = *(int *)(v337 + 20);
                uint64_t v345 = &v335[v344];
                uint64_t v346 = &v336[v344];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v346, 1, v314))
                {
                  uint64_t v347 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v345, v346, *(void *)(*(void *)(v347 - 8) + 64));
                }
                else
                {
                  ((void (*)(char *, char *, uint64_t))v633)(v345, v346, v314);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v345, 0, 1, v314);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v335, 0, 1, v337);
                uint64_t v173 = (uint64_t)__dstf;
              }
              _s7Weather24LocationCompositionStateOwst_0(v562, 0, 1, (uint64_t)v292);
LABEL_202:
              uint64_t v419 = v569[7];
              uint64_t v420 = (void *)((char *)v171 + v419);
              uint64_t v421 = &__srca[v419];
              *uint64_t v420 = *(void *)v421;
              v420[1] = *((void *)v421 + 1);
              uint64_t v422 = v569[8];
              long long v423 = (char *)v171 + v422;
              v566 = &__srca[v422];
              uint64_t v424 = v171;
              uint64_t v425 = type metadata accessor for WeatherMapOverlayKind();
              long long v426 = *(void (**)(char *, char *, uint64_t))(*(void *)(v425 - 8) + 16);
              swift_bridgeObjectRetain();
              v426(v423, v566, v425);
              *((unsigned char *)v424 + v569[9]) = __srca[v569[9]];
              swift_storeEnumTagMultiPayload();
              uint64_t v137 = v585;
              uint64_t v136 = v596;
              uint64_t v138 = v578;
LABEL_203:
              uint64_t v85 = v622;
LABEL_204:
              swift_storeEnumTagMultiPayload();
              uint64_t v427 = v138[8];
              uint64_t v356 = v136 + v427;
              uint64_t v357 = (uint64_t *)(v137 + v427);
              if (!_s7Weather24LocationCompositionStateOwet_0(v137 + v427, 1, v173))
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    *(void *)uint64_t v356 = *v357;
                    *(void *)(v356 + 8) = v357[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_287;
                  case 2u:
                    ((void (*)(uint64_t, uint64_t *, uint64_t))v646)(v356, v357, v652);
                    goto LABEL_287;
                  case 3u:
                    uint64_t v431 = sub_10017DF08(&qword_100E73808);
                    goto LABEL_216;
                  case 4u:
                    __dstj = (void *)v173;
                    if (v357[1])
                    {
                      *(void *)uint64_t v356 = *v357;
                      *(void *)(v356 + 8) = v357[1];
                      *(void *)(v356 + 16) = v357[2];
                      *(void *)(v356 + 24) = v357[3];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      long long v437 = *((_OWORD *)v357 + 1);
                      *(_OWORD *)uint64_t v356 = *(_OWORD *)v357;
                      *(_OWORD *)(v356 + 16) = v437;
                    }
                    uint64_t v438 = *(int *)(v85 + 20);
                    uint64_t v649 = v356;
                    uint64_t v439 = (void *)(v356 + v438);
                    uint64_t v440 = (uint64_t *)((char *)v357 + v438);
                    uint64_t v441 = type metadata accessor for NewsArticleComponentViewModel(0);
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      uint64_t v590 = v137;
                      uint64_t v601 = v136;
                      *uint64_t v439 = *v440;
                      v439[1] = v440[1];
                      v643 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                      uint64_t v442 = v643[5];
                      uint64_t v443 = (char *)v439 + v442;
                      uint64_t v444 = (char *)v440 + v442;
                      uint64_t v445 = type metadata accessor for URL();
                      swift_bridgeObjectRetain();
                      uint64_t v580 = v138;
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v444, 1, v445))
                      {
                        uint64_t v446 = sub_10017DF08(&qword_100E749B0);
                        memcpy(v443, v444, *(void *)(*(void *)(v446 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v445 - 8) + 16))(v443, v444, v445);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v443, 0, 1, v445);
                      }
                      uint64_t v466 = v643[6];
                      uint64_t v467 = (void *)((char *)v439 + v466);
                      v468 = (void *)((char *)v440 + v466);
                      void *v467 = *v468;
                      v467[1] = v468[1];
                      uint64_t v469 = v643[7];
                      uint64_t v470 = (char *)v439 + v469;
                      uint64_t v471 = (char *)v440 + v469;
                      uint64_t v472 = *(void (**)(char *, char *, uint64_t))(*(void *)(v445 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v472(v470, v471, v445);
                      uint64_t v473 = v643[8];
                      uint64_t v474 = (char *)v439 + v473;
                      uint64_t v475 = (char *)v440 + v473;
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v440 + v473, 1, v445))
                      {
                        uint64_t v476 = sub_10017DF08(&qword_100E749B0);
                        memcpy(v474, v475, *(void *)(*(void *)(v476 - 8) + 64));
                      }
                      else
                      {
                        v472(v474, v475, v445);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v474, 0, 1, v445);
                      }
                      uint64_t v136 = v601;
                      uint64_t v138 = v580;
                      *((unsigned char *)v439 + v643[9]) = *((unsigned char *)v440 + v643[9]);
                      swift_storeEnumTagMultiPayload();
                      uint64_t v137 = v590;
                    }
                    else
                    {
                      memcpy(v439, v440, *(void *)(*(void *)(v441 - 8) + 64));
                    }
                    uint64_t v477 = *(int *)(v85 + 24);
                    uint64_t v478 = (void *)(v649 + v477);
                    uint64_t v479 = (char *)v357 + v477;
                    uint64_t v480 = type metadata accessor for DetailComponentAction();
                    uint64_t v173 = (uint64_t)__dstj;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v479, 1, v480))
                    {
                      uint64_t v481 = sub_10017DF08(&qword_100E73810);
                      memcpy(v478, v479, *(void *)(*(void *)(v481 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v482 = type metadata accessor for URL();
                      (*(void (**)(void *, char *, uint64_t))(*(void *)(v482 - 8) + 16))(v478, v479, v482);
                      uint64_t v483 = sub_10017DF08(&qword_100E66478);
                      *((unsigned char *)v478 + *(int *)(v483 + 48)) = v479[*(int *)(v483 + 48)];
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v478, 0, 1, v480);
                    }
                    uint64_t v356 = v649;
                    goto LABEL_287;
                  case 5u:
                    uint64_t v579 = v138;
                    uint64_t v589 = v137;
                    uint64_t v600 = v136;
                    __dstk = (void *)v173;
                    if (v357[3])
                    {
                      uint64_t v432 = *v357;
                      uint64_t v433 = v357[1];
                      char v434 = *((unsigned char *)v357 + 16);
                      sub_100190CC4(*v357, v433, v434);
                      *(void *)uint64_t v356 = v432;
                      *(void *)(v356 + 8) = v433;
                      *(unsigned char *)(v356 + 16) = v434;
                      *(void *)(v356 + 24) = v357[3];
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      long long v447 = *((_OWORD *)v357 + 1);
                      *(_OWORD *)uint64_t v356 = *(_OWORD *)v357;
                      *(_OWORD *)(v356 + 16) = v447;
                    }
                    uint64_t v448 = v357[4];
                    uint64_t v449 = v357[5];
                    uint64_t v451 = v357[6];
                    uint64_t v450 = v357[7];
                    uint64_t v452 = v357[8];
                    uint64_t v453 = v357[9];
                    uint64_t v454 = v357[10];
                    char v455 = *((unsigned char *)v357 + 89);
                    uint64_t v456 = *((unsigned __int8 *)v357 + 88);
                    sub_10033A9E8(v448, v449, v451, v450, v452, v453, v454, v456, v455);
                    *(void *)(v356 + 32) = v448;
                    *(void *)(v356 + 40) = v449;
                    *(void *)(v356 + 48) = v451;
                    *(void *)(v356 + 56) = v450;
                    *(void *)(v356 + 64) = v452;
                    *(void *)(v356 + 72) = v453;
                    *(void *)(v356 + 80) = v454;
                    *(unsigned char *)(v356 + 88) = v456;
                    *(unsigned char *)(v356 + 89) = v455;
                    goto LABEL_286;
                  case 6u:
                    uint64_t v431 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_216:
                    uint64_t v429 = v431;
                    uint64_t v430 = v431;
                    goto LABEL_217;
                  case 7u:
                    uint64_t v435 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
                    int v436 = swift_getEnumCaseMultiPayload();
                    if (v436 != 1)
                    {
                      if (v436)
                      {
                        memcpy((void *)v356, v357, *(void *)(*(void *)(v435 - 8) + 64));
                      }
                      else
                      {
                        *(void *)uint64_t v356 = *v357;
                        *(void *)(v356 + 8) = v357[1];
                        *(void *)(v356 + 16) = v357[2];
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_storeEnumTagMultiPayload();
                      }
                      goto LABEL_287;
                    }
                    uint64_t v600 = v136;
                    __dstk = (void *)v173;
                    uint64_t v579 = v138;
                    *(void *)uint64_t v356 = *v357;
                    *(void *)(v356 + 8) = v357[1];
                    uint64_t v457 = (int *)type metadata accessor for ConditionDetailMapViewModel();
                    uint64_t v458 = v457[5];
                    v459 = (char *)(v356 + v458);
                    v460 = (char *)v357 + v458;
                    swift_bridgeObjectRetain();
                    v639(v459, v460, v626);
                    uint64_t v461 = v457[6];
                    uint64_t v462 = (void *)(v356 + v461);
                    uint64_t v463 = (uint64_t *)((char *)v357 + v461);
                    uint64_t v464 = type metadata accessor for WeatherData(0);
                    uint64_t v589 = v137;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v463, 1, v464))
                    {
                      uint64_t v465 = sub_10017DF08(&qword_100E63850);
                      memcpy(v462, v463, *(void *)(*(void *)(v465 - 8) + 64));
                      goto LABEL_285;
                    }
                    uint64_t v637 = v457;
                    *uint64_t v462 = *v463;
                    v462[1] = v463[1];
                    v641 = v462;
                    v644 = (int *)v464;
                    uint64_t v484 = *(int *)(v464 + 20);
                    uint64_t v485 = (char *)v462 + v484;
                    uint64_t v486 = (char *)v463 + v484;
                    uint64_t v487 = type metadata accessor for Locale();
                    swift_bridgeObjectRetain();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v486, 1, v487))
                    {
                      uint64_t v488 = sub_10017DF08(&qword_100E63730);
                      memcpy(v485, v486, *(void *)(*(void *)(v488 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16))(v485, v486, v487);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v485, 0, 1, v487);
                    }
                    uint64_t v499 = v644[6];
                    uint64_t v500 = (char *)v641 + v499;
                    uint64_t v501 = (char *)v463 + v499;
                    uint64_t v502 = type metadata accessor for WeatherDataModel();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v502 - 8) + 16))(v500, v501, v502);
                    uint64_t v503 = v644[7];
                    uint64_t v504 = (char *)v641 + v503;
                    uint64_t v505 = (char *)v463 + v503;
                    uint64_t v506 = sub_10017DF08(&qword_100E63738);
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v505, 1, v506))
                    {
                      uint64_t v507 = type metadata accessor for WeatherData.CachingState(0);
                      memcpy(v504, v505, *(void *)(*(void *)(v507 - 8) + 64));
                      uint64_t v508 = (uint64_t)v634;
                    }
                    else
                    {
                      uint64_t v508 = (uint64_t)v634;
                      ((void (*)(char *, char *, void *))v633)(v504, v505, v634);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v504, 0, 1, v506);
                    }
                    uint64_t v514 = v644[8];
                    uint64_t v515 = (void *)((char *)v641 + v514);
                    uint64_t v516 = (void *)((char *)v463 + v514);
                    uint64_t v517 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                    int v518 = swift_getEnumCaseMultiPayload();
                    if (v518 == 1)
                    {
                      uint64_t v526 = type metadata accessor for WeatherStatisticsModel();
                      (*(void (**)(void *, void *, uint64_t))(*(void *)(v526 - 8) + 16))(v515, v516, v526);
                    }
                    else
                    {
                      if (v518)
                      {
                        memcpy(v515, v516, *(void *)(*(void *)(v517 - 8) + 64));
LABEL_267:
                        uint64_t v527 = (uint64_t)v641;
                        uint64_t v528 = v644[9];
                        uint64_t v529 = (char *)v641 + v528;
                        uint64_t v530 = (char *)v463 + v528;
                        uint64_t v531 = type metadata accessor for WeatherDataOverrides();
                        uint64_t v457 = v637;
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v530, 1, v531))
                        {
                          uint64_t v532 = sub_10017DF08(&qword_100E63740);
                          memcpy(v529, v530, *(void *)(*(void *)(v532 - 8) + 64));
                        }
                        else
                        {
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v530, 1, v508))
                          {
                            uint64_t v533 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                            memcpy(v529, v530, *(void *)(*(void *)(v533 - 8) + 64));
                          }
                          else
                          {
                            ((void (*)(char *, char *, uint64_t))v633)(v529, v530, v508);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v529, 0, 1, v508);
                          }
                          uint64_t v548 = *(int *)(v531 + 20);
                          uint64_t v549 = &v529[v548];
                          uint64_t v550 = &v530[v548];
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v550, 1, v508))
                          {
                            uint64_t v551 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                            memcpy(v549, v550, *(void *)(*(void *)(v551 - 8) + 64));
                          }
                          else
                          {
                            ((void (*)(char *, char *, uint64_t))v633)(v549, v550, v508);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v549, 0, 1, v508);
                          }
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v529, 0, 1, v531);
                          uint64_t v527 = (uint64_t)v641;
                        }
                        _s7Weather24LocationCompositionStateOwst_0(v527, 0, 1, (uint64_t)v644);
LABEL_285:
                        uint64_t v552 = v457[7];
                        uint64_t v553 = (void *)(v356 + v552);
                        uint64_t v554 = (uint64_t *)((char *)v357 + v552);
                        *uint64_t v553 = *v554;
                        v553[1] = v554[1];
                        uint64_t v555 = v457[8];
                        uint64_t v556 = v356 + v555;
                        uint64_t v557 = (uint64_t)v357 + v555;
                        uint64_t v558 = type metadata accessor for WeatherMapOverlayKind();
                        uint64_t v559 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v558 - 8) + 16);
                        swift_bridgeObjectRetain();
                        v559(v556, v557, v558);
                        *(unsigned char *)(v356 + v457[9]) = *((unsigned char *)v357 + v457[9]);
                        swift_storeEnumTagMultiPayload();
LABEL_286:
                        uint64_t v137 = v589;
                        uint64_t v136 = v600;
                        uint64_t v138 = v579;
                        uint64_t v173 = (uint64_t)__dstk;
LABEL_287:
                        swift_storeEnumTagMultiPayload();
                        _s7Weather24LocationCompositionStateOwst_0(v356, 0, 1, v173);
                        goto LABEL_288;
                      }
                      *uint64_t v515 = *v516;
                      v515[1] = v516[1];
                      swift_bridgeObjectRetain();
                    }
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_267;
                  default:
                    uint64_t v429 = v615;
                    uint64_t v430 = v615;
LABEL_217:
                    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v430 - 8) + 16))(v356, v357, v429);
                    goto LABEL_287;
                }
              }
LABEL_205:
              uint64_t v428 = sub_10017DF08(&qword_100E73818);
              memcpy((void *)v356, v357, *(void *)(*(void *)(v428 - 8) + 64));
LABEL_288:
              *(unsigned char *)(v136 + v138[9]) = *(unsigned char *)(v137 + v138[9]);
              *(unsigned char *)(v136 + v138[10]) = *(unsigned char *)(v137 + v138[10]);
              _s7Weather24LocationCompositionStateOwst_0(v136, 0, 1, (uint64_t)v138);
              goto LABEL_289;
            }
            *uint64_t v321 = *v322;
            v321[1] = v322[1];
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          goto LABEL_146;
        default:
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v171, v172, v168);
          goto LABEL_204;
      }
    }
    if (!EnumCaseMultiPayload)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      uint64_t v6 = (int *)_s11NormalModelVMa();
      uint64_t v7 = v6[7];
      v650 = &a1[v7];
      uint64_t v8 = &a2[v7];
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10(v650, v8, v9);
      v10(&a1[v6[8]], &a2[v6[8]], v9);
      v631 = v10;
      uint64_t v632 = v9;
      v10(&a1[v6[9]], &a2[v6[9]], v9);
      uint64_t v11 = v6[10];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = v6[11];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = type metadata accessor for AttributedString();
      uint64_t v645 = *(void (**)(char *, char *))(*(void *)(v18 - 8) + 16);
      uint64_t v651 = v18;
      v645(v16, v17);
      *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
      uint64_t v19 = v6[13];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = type metadata accessor for SunriseSunsetDetailChartViewModel();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      uint64_t v24 = v6[14];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v638 = type metadata accessor for Location();
      v635 = *(void (**)(char *, char *))(*(void *)(v638 - 8) + 16);
      v635(v25, v26);
      uint64_t v27 = v6[15];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = type metadata accessor for SunEvents();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = v6[16];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      uint64_t v34 = type metadata accessor for OverviewTableViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      uint64_t v35 = v6[17];
      uint64_t v36 = &a1[v35];
      uint64_t v37 = &a2[v35];
      uint64_t v38 = type metadata accessor for DaylightStringBuilder();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = v6[18];
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      uint64_t v42 = type metadata accessor for DetailComponentContainerViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
      {
        uint64_t v43 = sub_10017DF08(&qword_100E66E28);
        memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        if (*((void *)v41 + 1))
        {
          *(void *)uint64_t v40 = *(void *)v41;
          *((void *)v40 + 1) = *((void *)v41 + 1);
          *((void *)v40 + 2) = *((void *)v41 + 2);
          *((void *)v40 + 3) = *((void *)v41 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v87 = *((_OWORD *)v41 + 1);
          *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
          *((_OWORD *)v40 + 1) = v87;
        }
        uint64_t v88 = *(int *)(v42 + 20);
        uint64_t v89 = &v40[v88];
        uint64_t v90 = &v41[v88];
        uint64_t v91 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v624 = v42;
          *uint64_t v89 = *v90;
          v89[1] = v90[1];
          uint64_t v620 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v92 = v620[5];
          uint64_t v93 = (char *)v89 + v92;
          uint64_t v94 = (char *)v90 + v92;
          uint64_t v95 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
          {
            uint64_t v96 = sub_10017DF08(&qword_100E749B0);
            memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
          }
          uint64_t v106 = v620[6];
          uint64_t v107 = (void *)((char *)v89 + v106);
          uint64_t v108 = (void *)((char *)v90 + v106);
          *uint64_t v107 = *v108;
          v107[1] = v108[1];
          uint64_t v109 = v620[7];
          __dstl = (char *)v89 + v109;
          long long v110 = (char *)v90 + v109;
          uint64_t v111 = v95;
          uint64_t v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          v112(__dstl, v110, v111);
          uint64_t v113 = v620[8];
          uint64_t v114 = (char *)v89 + v113;
          uint64_t v115 = (char *)v90 + v113;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90 + v113, 1, v111))
          {
            uint64_t v116 = sub_10017DF08(&qword_100E749B0);
            memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            v112(v114, v115, v111);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v111);
          }
          *((unsigned char *)v89 + v620[9]) = *((unsigned char *)v90 + v620[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v42 = v624;
        }
        else
        {
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        uint64_t v128 = *(int *)(v42 + 24);
        uint64_t v129 = &v40[v128];
        uint64_t v130 = &v41[v128];
        uint64_t v131 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v131))
        {
          uint64_t v132 = sub_10017DF08(&qword_100E73810);
          memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
        }
        else
        {
          uint64_t v133 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v129, v130, v133);
          uint64_t v134 = sub_10017DF08(&qword_100E66478);
          v129[*(int *)(v134 + 48)] = v130[*(int *)(v134 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v131);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
      }
      uint64_t v135 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
      uint64_t v136 = (uint64_t)&a1[v135];
      uint64_t v137 = (uint64_t)&a2[v135];
      uint64_t v138 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v137, 1, (uint64_t)v138))
      {
LABEL_36:
        uint64_t v139 = sub_10017DF08(&qword_100E66E40);
        memcpy((void *)v136, (const void *)v137, *(void *)(*(void *)(v139 - 8) + 64));
LABEL_289:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v140 = *(void *)v137;
      uint64_t v141 = *(void *)(v137 + 8);
      unsigned __int8 v142 = *(unsigned char *)(v137 + 16);
      sub_10018F6EC(*(void *)v137, v141, v142);
      *(void *)uint64_t v136 = v140;
      *(void *)(v136 + 8) = v141;
      *(unsigned char *)(v136 + 16) = v142;
      *(void *)(v136 + 24) = *(void *)(v137 + 24);
      *(void *)(v136 + 32) = *(void *)(v137 + 32);
      uint64_t v143 = v138[6];
      uint64_t v144 = (void *)(v136 + v143);
      uint64_t v145 = (const void *)(v137 + v143);
      uint64_t v146 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      uint64_t v621 = v146;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
      {
        uint64_t v147 = sub_10017DF08(&qword_100E63758);
        memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v146 - 8) + 16))(v144, v145, v146);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v146);
      }
      uint64_t v148 = v138[7];
      uint64_t v149 = (uint64_t *)(v136 + v148);
      uint64_t v150 = (uint64_t *)(v137 + v148);
      uint64_t v151 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v149 = *v150;
          v149[1] = v150[1];
          swift_bridgeObjectRetain();
          goto LABEL_161;
        case 2u:
          ((void (*)(uint64_t *, uint64_t *, uint64_t))v645)(v149, v150, v651);
          goto LABEL_161;
        case 3u:
          uint64_t v174 = sub_10017DF08(&qword_100E73808);
          goto LABEL_62;
        case 4u:
          uint64_t v616 = v151;
          if (v150[1])
          {
            *uint64_t v149 = *v150;
            v149[1] = v150[1];
            v149[2] = v150[2];
            v149[3] = v150[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v187 = *((_OWORD *)v150 + 1);
            *(_OWORD *)uint64_t v149 = *(_OWORD *)v150;
            *((_OWORD *)v149 + 1) = v187;
          }
          uint64_t v188 = *(int *)(v42 + 20);
          uint64_t v189 = (uint64_t *)((char *)v149 + v188);
          uint64_t v574 = v150;
          uint64_t v190 = (uint64_t *)((char *)v150 + v188);
          uint64_t v191 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v627 = v42;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v593 = v137;
            *uint64_t v189 = *v190;
            v189[1] = v190[1];
            v563 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            v567 = v190;
            uint64_t v192 = v563[5];
            uint64_t v193 = (char *)v189 + v192;
            uint64_t v194 = (char *)v190 + v192;
            uint64_t v195 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            __dstc = (void *)v136;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v195))
            {
              uint64_t v196 = sub_10017DF08(&qword_100E749B0);
              memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v193, v194, v195);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v195);
            }
            uint64_t v246 = v563[6];
            uint64_t v247 = (void *)((char *)v189 + v246);
            uint64_t v248 = (void *)((char *)v567 + v246);
            void *v247 = *v248;
            v247[1] = v248[1];
            uint64_t v249 = v563[7];
            uint64_t v250 = (char *)v189 + v249;
            uint64_t v251 = (char *)v567 + v249;
            uint64_t v252 = *(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16);
            swift_bridgeObjectRetain();
            v252(v250, v251, v195);
            uint64_t v253 = v563[8];
            uint64_t v254 = (char *)v189 + v253;
            uint64_t v255 = (char *)v567 + v253;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v567 + v253, 1, v195))
            {
              uint64_t v256 = sub_10017DF08(&qword_100E749B0);
              memcpy(v254, v255, *(void *)(*(void *)(v256 - 8) + 64));
            }
            else
            {
              v252(v254, v255, v195);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v254, 0, 1, v195);
            }
            uint64_t v136 = (uint64_t)__dstc;
            *((unsigned char *)v189 + v563[9]) = *((unsigned char *)v567 + v563[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v137 = v593;
            uint64_t v42 = v627;
          }
          else
          {
            memcpy(v189, v190, *(void *)(*(void *)(v191 - 8) + 64));
          }
          uint64_t v151 = v616;
          uint64_t v268 = *(int *)(v42 + 24);
          uint64_t v269 = (char *)v149 + v268;
          uint64_t v270 = (char *)v574 + v268;
          uint64_t v271 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v270, 1, v271))
          {
            uint64_t v272 = sub_10017DF08(&qword_100E73810);
            memcpy(v269, v270, *(void *)(*(void *)(v272 - 8) + 64));
          }
          else
          {
            uint64_t v273 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v269, v270, v273);
            uint64_t v274 = sub_10017DF08(&qword_100E66478);
            v269[*(int *)(v274 + 48)] = v270[*(int *)(v274 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v269, 0, 1, v271);
          }
          goto LABEL_160;
        case 5u:
          uint64_t v627 = v42;
          uint64_t v591 = v137;
          __dsta = (void *)v136;
          int v581 = v138;
          uint64_t v617 = v151;
          if (v150[3])
          {
            uint64_t v175 = v150;
            uint64_t v176 = *v150;
            uint64_t v177 = v175[1];
            char v178 = *((unsigned char *)v175 + 16);
            sub_100190CC4(v176, v177, v178);
            *uint64_t v149 = v176;
            v149[1] = v177;
            uint64_t v150 = v175;
            *((unsigned char *)v149 + 16) = v178;
            v149[3] = v175[3];
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v197 = *((_OWORD *)v150 + 1);
            *(_OWORD *)uint64_t v149 = *(_OWORD *)v150;
            *((_OWORD *)v149 + 1) = v197;
          }
          uint64_t v198 = v150;
          uint64_t v199 = v150[4];
          uint64_t v200 = v198[5];
          uint64_t v201 = v198[6];
          uint64_t v203 = v198[7];
          uint64_t v202 = v198[8];
          uint64_t v204 = v198[9];
          uint64_t v205 = v198[10];
          char v206 = *((unsigned char *)v198 + 89);
          unsigned __int8 v207 = *((unsigned char *)v198 + 88);
          sub_10033A9E8(v199, v200, v201, v203, v202, v204, v205, v207, v206);
          v149[4] = v199;
          v149[5] = v200;
          v149[6] = v201;
          v149[7] = v203;
          v149[8] = v202;
          v149[9] = v204;
          v149[10] = v205;
          *((unsigned char *)v149 + 88) = v207;
          *((unsigned char *)v149 + 89) = v206;
          uint64_t v137 = v591;
          uint64_t v136 = (uint64_t)__dsta;
          uint64_t v138 = v581;
          uint64_t v151 = v617;
          goto LABEL_160;
        case 6u:
          uint64_t v174 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_62:
          uint64_t v152 = v174;
          uint64_t v153 = v174;
          goto LABEL_63;
        case 7u:
          uint64_t v571 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v179 = swift_getEnumCaseMultiPayload();
          if (v179 != 1)
          {
            if (v179)
            {
              memcpy(v149, v150, *(void *)(*(void *)(v571 - 8) + 64));
            }
            else
            {
              *uint64_t v149 = *v150;
              v149[1] = v150[1];
              v149[2] = v150[2];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_161;
          }
          uint64_t v627 = v42;
          uint64_t v584 = v138;
          __dste = (void *)v136;
          *uint64_t v149 = *v150;
          int v575 = v150;
          v149[1] = v150[1];
          uint64_t v228 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v229 = v228[5];
          uint64_t v230 = (char *)v149 + v229;
          uint64_t v231 = (char *)v150 + v229;
          swift_bridgeObjectRetain();
          ((void (*)(char *, char *, uint64_t))v635)(v230, v231, v638);
          uint64_t v232 = v228[6];
          uint64_t v233 = (uint64_t *)((char *)v149 + v232);
          uint64_t v234 = (uint64_t *)((char *)v150 + v232);
          uint64_t v235 = type metadata accessor for WeatherData(0);
          uint64_t v595 = v137;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v234, 1, v235))
          {
            uint64_t v236 = sub_10017DF08(&qword_100E63850);
            memcpy(v233, v234, *(void *)(*(void *)(v236 - 8) + 64));
            goto LABEL_159;
          }
          *uint64_t v233 = *v234;
          v233[1] = v234[1];
          uint64_t v570 = (int *)v235;
          uint64_t v282 = *(int *)(v235 + 20);
          v283 = (char *)v233 + v282;
          uint64_t v561 = v228;
          uint64_t v564 = v234;
          uint64_t v284 = (char *)v234 + v282;
          uint64_t v285 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v284, 1, v285))
          {
            uint64_t v286 = sub_10017DF08(&qword_100E63730);
            memcpy(v283, v284, *(void *)(*(void *)(v286 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16))(v283, v284, v285);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v283, 0, 1, v285);
          }
          uint64_t v294 = v570[6];
          v295 = (char *)v233 + v294;
          uint64_t v296 = (char *)v234 + v294;
          uint64_t v297 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16))(v295, v296, v297);
          uint64_t v298 = v570[7];
          v299 = (char *)v233 + v298;
          v300 = (char *)v564 + v298;
          uint64_t v301 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v300, 1, v301))
          {
            uint64_t v302 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v299, v300, *(void *)(*(void *)(v302 - 8) + 64));
            uint64_t v303 = v632;
          }
          else
          {
            uint64_t v303 = v632;
            v631(v299, v300, v632);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v299, 0, 1, v301);
          }
          uint64_t v315 = v570[8];
          uint64_t v316 = (void *)((char *)v233 + v315);
          uint64_t v317 = (void *)((char *)v564 + v315);
          uint64_t v318 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v319 = swift_getEnumCaseMultiPayload();
          if (v319 == 1)
          {
            uint64_t v325 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v325 - 8) + 16))(v316, v317, v325);
            goto LABEL_137;
          }
          if (!v319)
          {
            void *v316 = *v317;
            v316[1] = v317[1];
            swift_bridgeObjectRetain();
LABEL_137:
            swift_storeEnumTagMultiPayload();
            goto LABEL_139;
          }
          memcpy(v316, v317, *(void *)(*(void *)(v318 - 8) + 64));
LABEL_139:
          uint64_t v326 = (uint64_t)v570;
          uint64_t v327 = v570[9];
          uint64_t v328 = (char *)v233 + v327;
          uint64_t v329 = (char *)v564 + v327;
          uint64_t v330 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v329, 1, v330))
          {
            uint64_t v331 = sub_10017DF08(&qword_100E63740);
            memcpy(v328, v329, *(void *)(*(void *)(v331 - 8) + 64));
            uint64_t v150 = v575;
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v329, 1, v303))
            {
              uint64_t v332 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v328, v329, *(void *)(*(void *)(v332 - 8) + 64));
            }
            else
            {
              v631(v328, v329, v303);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v328, 0, 1, v303);
            }
            uint64_t v340 = *(int *)(v330 + 20);
            v341 = &v328[v340];
            uint64_t v342 = &v329[v340];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v342, 1, v303))
            {
              uint64_t v343 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v341, v342, *(void *)(*(void *)(v343 - 8) + 64));
            }
            else
            {
              v631(v341, v342, v303);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v341, 0, 1, v303);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v328, 0, 1, v330);
            uint64_t v150 = v575;
            uint64_t v326 = (uint64_t)v570;
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v233, 0, 1, v326);
          uint64_t v228 = v561;
LABEL_159:
          uint64_t v348 = v228[7];
          uint64_t v349 = (uint64_t *)((char *)v149 + v348);
          uint64_t v350 = (uint64_t *)((char *)v150 + v348);
          void *v349 = *v350;
          v349[1] = v350[1];
          uint64_t v351 = v228[8];
          uint64_t v352 = (char *)v149 + v351;
          uint64_t v576 = (char *)v150 + v351;
          uint64_t v353 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v354 = *(void (**)(char *, char *, uint64_t))(*(void *)(v353 - 8) + 16);
          swift_bridgeObjectRetain();
          v354(v352, v576, v353);
          *((unsigned char *)v149 + v228[9]) = *((unsigned char *)v150 + v228[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v137 = v595;
          uint64_t v136 = (uint64_t)__dste;
          uint64_t v138 = v584;
LABEL_160:
          uint64_t v42 = v627;
LABEL_161:
          swift_storeEnumTagMultiPayload();
          uint64_t v355 = v138[8];
          uint64_t v356 = v136 + v355;
          uint64_t v357 = (uint64_t *)(v137 + v355);
          if (_s7Weather24LocationCompositionStateOwet_0(v137 + v355, 1, v151)) {
            goto LABEL_205;
          }
          break;
        default:
          uint64_t v152 = v621;
          uint64_t v153 = v621;
LABEL_63:
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v153 - 8) + 16))(v149, v150, v152);
          goto LABEL_161;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v356 = *v357;
          *(void *)(v356 + 8) = v357[1];
          swift_bridgeObjectRetain();
          goto LABEL_278;
        case 2u:
          ((void (*)(uint64_t, uint64_t *, uint64_t))v645)(v356, v357, v651);
          goto LABEL_278;
        case 3u:
          uint64_t v360 = sub_10017DF08(&qword_100E73808);
          goto LABEL_172;
        case 4u:
          if (v357[1])
          {
            *(void *)uint64_t v356 = *v357;
            *(void *)(v356 + 8) = v357[1];
            *(void *)(v356 + 16) = v357[2];
            *(void *)(v356 + 24) = v357[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v366 = *((_OWORD *)v357 + 1);
            *(_OWORD *)uint64_t v356 = *(_OWORD *)v357;
            *(_OWORD *)(v356 + 16) = v366;
          }
          uint64_t v367 = *(int *)(v42 + 20);
          uint64_t v647 = v356;
          uint64_t v368 = (void *)(v356 + v367);
          uint64_t v369 = (uint64_t *)((char *)v357 + v367);
          uint64_t v370 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v628 = v42;
            uint64_t v598 = v137;
            __dsth = (void *)v136;
            *uint64_t v368 = *v369;
            v368[1] = v369[1];
            uint64_t v642 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v371 = v642[5];
            uint64_t v372 = (char *)v368 + v371;
            uint64_t v373 = (char *)v369 + v371;
            uint64_t v374 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            uint64_t v587 = v138;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v373, 1, v374))
            {
              uint64_t v375 = sub_10017DF08(&qword_100E749B0);
              memcpy(v372, v373, *(void *)(*(void *)(v375 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 16))(v372, v373, v374);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v372, 0, 1, v374);
            }
            uint64_t v395 = v642[6];
            uint64_t v396 = (void *)((char *)v368 + v395);
            uint64_t v397 = (void *)((char *)v369 + v395);
            *uint64_t v396 = *v397;
            v396[1] = v397[1];
            uint64_t v398 = v642[7];
            v399 = (char *)v368 + v398;
            uint64_t v400 = (char *)v369 + v398;
            uint64_t v401 = *(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 16);
            swift_bridgeObjectRetain();
            v401(v399, v400, v374);
            uint64_t v402 = v642[8];
            uint64_t v403 = (char *)v368 + v402;
            uint64_t v404 = (char *)v369 + v402;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v369 + v402, 1, v374))
            {
              uint64_t v405 = sub_10017DF08(&qword_100E749B0);
              memcpy(v403, v404, *(void *)(*(void *)(v405 - 8) + 64));
            }
            else
            {
              v401(v403, v404, v374);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v403, 0, 1, v374);
            }
            uint64_t v136 = (uint64_t)__dsth;
            uint64_t v138 = v587;
            *((unsigned char *)v368 + v642[9]) = *((unsigned char *)v369 + v642[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v137 = v598;
            uint64_t v42 = v628;
          }
          else
          {
            memcpy(v368, v369, *(void *)(*(void *)(v370 - 8) + 64));
          }
          uint64_t v406 = *(int *)(v42 + 24);
          uint64_t v407 = (void *)(v647 + v406);
          uint64_t v408 = (char *)v357 + v406;
          uint64_t v409 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v408, 1, v409))
          {
            uint64_t v410 = sub_10017DF08(&qword_100E73810);
            memcpy(v407, v408, *(void *)(*(void *)(v410 - 8) + 64));
          }
          else
          {
            uint64_t v411 = type metadata accessor for URL();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v411 - 8) + 16))(v407, v408, v411);
            uint64_t v412 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)v407 + *(int *)(v412 + 48)) = v408[*(int *)(v412 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v407, 0, 1, v409);
          }
          uint64_t v356 = v647;
          goto LABEL_278;
        case 5u:
          uint64_t v586 = v138;
          uint64_t v597 = v137;
          __dstg = (void *)v136;
          uint64_t v618 = v151;
          if (v357[3])
          {
            uint64_t v361 = *v357;
            uint64_t v362 = v357[1];
            char v363 = *((unsigned char *)v357 + 16);
            sub_100190CC4(*v357, v362, v363);
            *(void *)uint64_t v356 = v361;
            *(void *)(v356 + 8) = v362;
            *(unsigned char *)(v356 + 16) = v363;
            *(void *)(v356 + 24) = v357[3];
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v376 = *((_OWORD *)v357 + 1);
            *(_OWORD *)uint64_t v356 = *(_OWORD *)v357;
            *(_OWORD *)(v356 + 16) = v376;
          }
          uint64_t v377 = v357[4];
          uint64_t v378 = v357[5];
          uint64_t v380 = v357[6];
          uint64_t v379 = v357[7];
          uint64_t v381 = v357[8];
          uint64_t v382 = v357[9];
          uint64_t v383 = v357[10];
          char v384 = *((unsigned char *)v357 + 89);
          uint64_t v385 = *((unsigned __int8 *)v357 + 88);
          sub_10033A9E8(v377, v378, v380, v379, v381, v382, v383, v385, v384);
          *(void *)(v356 + 32) = v377;
          *(void *)(v356 + 40) = v378;
          *(void *)(v356 + 48) = v380;
          *(void *)(v356 + 56) = v379;
          *(void *)(v356 + 64) = v381;
          *(void *)(v356 + 72) = v382;
          *(void *)(v356 + 80) = v383;
          *(unsigned char *)(v356 + 88) = v385;
          *(unsigned char *)(v356 + 89) = v384;
          uint64_t v137 = v597;
          uint64_t v136 = (uint64_t)__dstg;
          uint64_t v138 = v586;
          uint64_t v151 = v618;
          goto LABEL_278;
        case 6u:
          uint64_t v360 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_172:
          uint64_t v358 = v360;
          uint64_t v359 = v360;
          goto LABEL_173;
        case 7u:
          uint64_t v364 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v365 = swift_getEnumCaseMultiPayload();
          if (v365 != 1)
          {
            if (v365)
            {
              memcpy((void *)v356, v357, *(void *)(*(void *)(v364 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v356 = *v357;
              *(void *)(v356 + 8) = v357[1];
              *(void *)(v356 + 16) = v357[2];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
LABEL_278:
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0(v356, 0, 1, v151);
            goto LABEL_288;
          }
          __dstint64_t i = (void *)v136;
          uint64_t v619 = v151;
          uint64_t v588 = v138;
          uint64_t v599 = v137;
          *(void *)uint64_t v356 = *v357;
          *(void *)(v356 + 8) = v357[1];
          uint64_t v386 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v387 = v386[5];
          uint64_t v388 = v356 + v387;
          uint64_t v389 = (uint64_t)v357 + v387;
          swift_bridgeObjectRetain();
          ((void (*)(uint64_t, uint64_t, uint64_t))v635)(v388, v389, v638);
          uint64_t v390 = v386[6];
          uint64_t v391 = (void *)(v356 + v390);
          uint64_t v392 = (uint64_t *)((char *)v357 + v390);
          uint64_t v393 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v392, 1, v393))
          {
            uint64_t v394 = sub_10017DF08(&qword_100E63850);
            memcpy(v391, v392, *(void *)(*(void *)(v394 - 8) + 64));
LABEL_277:
            uint64_t v151 = v619;
            uint64_t v538 = v386[7];
            uint64_t v539 = (void *)(v356 + v538);
            uint64_t v540 = (uint64_t *)((char *)v357 + v538);
            *uint64_t v539 = *v540;
            v539[1] = v540[1];
            uint64_t v541 = v386[8];
            uint64_t v542 = v356 + v541;
            uint64_t v543 = (uint64_t)v357 + v541;
            uint64_t v544 = v356;
            uint64_t v545 = type metadata accessor for WeatherMapOverlayKind();
            uint64_t v546 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v545 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v547 = v545;
            uint64_t v356 = v544;
            v546(v542, v543, v547);
            *(unsigned char *)(v544 + v386[9]) = *((unsigned char *)v357 + v386[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v137 = v599;
            uint64_t v136 = (uint64_t)__dsti;
            uint64_t v138 = v588;
            goto LABEL_278;
          }
          v636 = v386;
          uint64_t v648 = v356;
          void *v391 = *v392;
          v391[1] = v392[1];
          v640 = (int *)v393;
          uint64_t v413 = *(int *)(v393 + 20);
          uint64_t v414 = (uint64_t)v391;
          long long v415 = (char *)v391 + v413;
          uint64_t v416 = (char *)v392 + v413;
          uint64_t v417 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v416, 1, v417))
          {
            uint64_t v418 = sub_10017DF08(&qword_100E63730);
            memcpy(v415, v416, *(void *)(*(void *)(v418 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v417 - 8) + 16))(v415, v416, v417);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v415, 0, 1, v417);
          }
          uint64_t v489 = v640[6];
          uint64_t v490 = v414 + v489;
          char v491 = (char *)v392 + v489;
          uint64_t v492 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v492 - 8) + 16))(v490, v491, v492);
          uint64_t v493 = v640[7];
          uint64_t v494 = (void *)(v414 + v493);
          long long v495 = (char *)v392 + v493;
          uint64_t v496 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v495, 1, v496))
          {
            uint64_t v497 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v494, v495, *(void *)(*(void *)(v497 - 8) + 64));
            uint64_t v498 = v632;
          }
          else
          {
            uint64_t v498 = v632;
            v631((char *)v494, v495, v632);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v494, 0, 1, v496);
          }
          uint64_t v509 = v640[8];
          uint64_t v510 = (void *)(v414 + v509);
          uint64_t v511 = (void *)((char *)v392 + v509);
          uint64_t v512 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v513 = swift_getEnumCaseMultiPayload();
          if (v513 == 1)
          {
            uint64_t v519 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v519 - 8) + 16))(v510, v511, v519);
          }
          else
          {
            if (v513)
            {
              memcpy(v510, v511, *(void *)(*(void *)(v512 - 8) + 64));
              goto LABEL_260;
            }
            *uint64_t v510 = *v511;
            v510[1] = v511[1];
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
LABEL_260:
          uint64_t v520 = v640[9];
          uint64_t v521 = (char *)(v414 + v520);
          uint64_t v522 = (char *)v392 + v520;
          uint64_t v523 = type metadata accessor for WeatherDataOverrides();
          uint64_t v356 = v648;
          uint64_t v386 = v636;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v522, 1, v523))
          {
            uint64_t v524 = sub_10017DF08(&qword_100E63740);
            memcpy(v521, v522, *(void *)(*(void *)(v524 - 8) + 64));
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v522, 1, v498))
            {
              uint64_t v525 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v521, v522, *(void *)(*(void *)(v525 - 8) + 64));
            }
            else
            {
              v631(v521, v522, v498);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v521, 0, 1, v498);
            }
            uint64_t v534 = *(int *)(v523 + 20);
            uint64_t v535 = &v521[v534];
            uint64_t v536 = &v522[v534];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v536, 1, v498))
            {
              uint64_t v537 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v535, v536, *(void *)(*(void *)(v537 - 8) + 64));
            }
            else
            {
              v631(v535, v536, v498);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v535, 0, 1, v498);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v521, 0, 1, v523);
            uint64_t v356 = v648;
          }
          _s7Weather24LocationCompositionStateOwst_0(v414, 0, 1, (uint64_t)v640);
          goto LABEL_277;
        default:
          uint64_t v358 = v621;
          uint64_t v359 = v621;
LABEL_173:
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v359 - 8) + 16))(v356, v357, v358);
          goto LABEL_278;
      }
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for SunriseSunsetDetailViewModel()
{
  uint64_t result = qword_100E921A8;
  if (!qword_100E921A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_100742148(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    long long v46 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v46;
    uint64_t v47 = (int *)_s10PolarModelVMa();
    uint64_t v48 = v47[6];
    uint64_t v49 = &a1[v48];
    uint64_t v50 = &a2[v48];
    uint64_t v51 = type metadata accessor for PolarType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
    uint64_t v52 = v47[7];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    uint64_t v55 = type metadata accessor for Date();
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32);
    v56(v53, v54, v55);
    uint64_t v57 = v47[8];
    uint64_t v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    uint64_t v60 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
    uint64_t v61 = v47[9];
    uint64_t v62 = &a1[v61];
    uint64_t v63 = &a2[v61];
    uint64_t v479 = type metadata accessor for AttributedString();
    uint64_t v475 = *(void (**)(char *, char *))(*(void *)(v479 - 8) + 32);
    v475(v62, v63);
    *(void *)&a1[v47[10]] = *(void *)&a2[v47[10]];
    *(_OWORD *)&a1[v47[11]] = *(_OWORD *)&a2[v47[11]];
    uint64_t v64 = v47[12];
    uint64_t v65 = &a1[v64];
    uint64_t v66 = &a2[v64];
    uint64_t v67 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
    uint64_t v68 = v47[13];
    uint64_t v69 = &a1[v68];
    uint64_t v70 = &a2[v68];
    uint64_t v71 = type metadata accessor for Location();
    uint64_t v469 = *(void (**)(char *, char *))(*(void *)(v71 - 8) + 32);
    uint64_t v471 = v71;
    v469(v69, v70);
    uint64_t v72 = v47[14];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    uint64_t v75 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
    uint64_t v76 = v47[15];
    uint64_t v77 = &a1[v76];
    uint64_t v78 = &a2[v76];
    uint64_t v79 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
    uint64_t v80 = v47[16];
    uint64_t v81 = &a1[v80];
    uint64_t v82 = &a2[v80];
    uint64_t v83 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
    {
      uint64_t v84 = sub_10017DF08(&qword_100E66E28);
      memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      long long v96 = *((_OWORD *)v82 + 1);
      *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
      *((_OWORD *)v81 + 1) = v96;
      uint64_t v490 = v83;
      uint64_t v97 = *(int *)(v83 + 20);
      uint64_t v98 = &v81[v97];
      long long v99 = &v82[v97];
      uint64_t v100 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v449 = v56;
        uint64_t v442 = v55;
        *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
        uint64_t v487 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v101 = v487[5];
        uint64_t v102 = &v98[v101];
        uint64_t v103 = &v99[v101];
        uint64_t v104 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104))
        {
          uint64_t v105 = sub_10017DF08(&qword_100E749B0);
          memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
          uint64_t v106 = *(void *)(v104 - 8);
        }
        else
        {
          uint64_t v106 = *(void *)(v104 - 8);
          (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v102, v103, v104);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
        }
        *(_OWORD *)&v98[v487[6]] = *(_OWORD *)&v99[v487[6]];
        uint64_t v111 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
        v111(&v98[v487[7]], &v99[v487[7]], v104);
        uint64_t v112 = v487[8];
        __dsta = &v98[v112];
        uint64_t v113 = &v99[v112];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v99[v112], 1, v104))
        {
          uint64_t v114 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dsta, v113, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          v111(__dsta, v113, v104);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v104);
        }
        uint64_t v55 = v442;
        v98[v487[9]] = v99[v487[9]];
        swift_storeEnumTagMultiPayload();
        uint64_t v56 = v449;
      }
      else
      {
        memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
      }
      uint64_t v83 = v490;
      uint64_t v135 = *(int *)(v490 + 24);
      uint64_t v136 = &v81[v135];
      uint64_t v137 = &v82[v135];
      uint64_t v138 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138))
      {
        uint64_t v139 = sub_10017DF08(&qword_100E73810);
        memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
      }
      else
      {
        uint64_t v140 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v136, v137, v140);
        uint64_t v141 = sub_10017DF08(&qword_100E66478);
        v136[*(int *)(v141 + 48)] = v137[*(int *)(v141 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v138);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v490);
    }
    uint64_t v142 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    uint64_t v123 = (uint64_t)&a1[v142];
    uint64_t v124 = (uint64_t)&a2[v142];
    uint64_t v143 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v124, 1, v143))
    {
      *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
      *(unsigned char *)(v123 + 16) = *(unsigned char *)(v124 + 16);
      *(_OWORD *)(v123 + 24) = *(_OWORD *)(v124 + 24);
      uint64_t v488 = v143;
      uint64_t v145 = *(int *)(v143 + 24);
      uint64_t v146 = (void *)(v123 + v145);
      uint64_t v147 = (const void *)(v124 + v145);
      uint64_t v148 = type metadata accessor for WeatherDescription();
      uint64_t v492 = v83;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v148))
      {
        uint64_t v149 = sub_10017DF08(&qword_100E63758);
        memcpy(v146, v147, *(void *)(*(void *)(v149 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v146, 0, 1, v148);
      }
      uint64_t v150 = v488;
      uint64_t v151 = *(int *)(v488 + 28);
      __dstc = (_OWORD *)(v123 + v151);
      uint64_t v152 = (_OWORD *)(v124 + v151);
      uint64_t v134 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      v459 = v152;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v148 - 8) + 32))(__dstc, v152, v148);
          goto LABEL_154;
        case 2u:
          ((void (*)(_OWORD *, _OWORD *, uint64_t))v475)(__dstc, v152, v479);
          goto LABEL_154;
        case 3u:
          uint64_t v174 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v174 - 8) + 32))(__dstc, v152, v174);
          goto LABEL_154;
        case 4u:
          uint64_t v432 = v148;
          long long v175 = v152[1];
          _OWORD *__dstc = *v152;
          __dstc[1] = v175;
          uint64_t v176 = *(int *)(v492 + 20);
          uint64_t v177 = (char *)__dstc + v176;
          char v178 = (char *)v459 + v176;
          uint64_t v179 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v436 = v134;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v444 = v55;
            uint64_t v451 = v56;
            *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
            uint64_t v180 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v181 = v180[5];
            unsigned __int8 v182 = &v177[v181];
            uint64_t v183 = &v178[v181];
            uint64_t v184 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v184))
            {
              uint64_t v185 = sub_10017DF08(&qword_100E749B0);
              memcpy(v182, v183, *(void *)(*(void *)(v185 - 8) + 64));
              uint64_t v186 = *(void *)(v184 - 8);
            }
            else
            {
              uint64_t v186 = *(void *)(v184 - 8);
              (*(void (**)(char *, char *, uint64_t))(v186 + 32))(v182, v183, v184);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v182, 0, 1, v184);
            }
            *(_OWORD *)&v177[v180[6]] = *(_OWORD *)&v178[v180[6]];
            unsigned __int8 v207 = *(void (**)(char *, char *, uint64_t))(v186 + 32);
            v207(&v177[v180[7]], &v178[v180[7]], v184);
            uint64_t v429 = v180;
            uint64_t v208 = v180[8];
            uint64_t v209 = &v177[v208];
            uint64_t v210 = &v178[v208];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v178[v208], 1, v184))
            {
              uint64_t v211 = sub_10017DF08(&qword_100E749B0);
              memcpy(v209, v210, *(void *)(*(void *)(v211 - 8) + 64));
            }
            else
            {
              v207(v209, v210, v184);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v209, 0, 1, v184);
            }
            uint64_t v55 = v444;
            v177[v429[9]] = v178[v429[9]];
            swift_storeEnumTagMultiPayload();
            uint64_t v56 = v451;
          }
          else
          {
            memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
          }
          uint64_t v226 = *(int *)(v492 + 24);
          unsigned __int8 v227 = (char *)__dstc + v226;
          uint64_t v228 = (char *)v459 + v226;
          uint64_t v229 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v229))
          {
            uint64_t v230 = sub_10017DF08(&qword_100E73810);
            memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
          }
          else
          {
            uint64_t v231 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 32))(v227, v228, v231);
            uint64_t v232 = sub_10017DF08(&qword_100E66478);
            v227[*(int *)(v232 + 48)] = v228[*(int *)(v232 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v229);
          }
          uint64_t v134 = v436;
          swift_storeEnumTagMultiPayload();
          uint64_t v148 = v432;
          uint64_t v150 = v488;
          break;
        case 6u:
          uint64_t v187 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v187 - 8) + 32))(__dstc, v152, v187);
          goto LABEL_154;
        case 7u:
          uint64_t v188 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v433 = v148;
            uint64_t v437 = v134;
            _OWORD *__dstc = *v459;
            uint64_t v189 = type metadata accessor for ConditionDetailMapViewModel();
            ((void (*)(char *, char *, uint64_t))v469)((char *)__dstc + *(int *)(v189 + 20), (char *)v459 + *(int *)(v189 + 20), v471);
            uint64_t v427 = (int *)v189;
            uint64_t v190 = *(int *)(v189 + 24);
            uint64_t v191 = (_OWORD *)((char *)__dstc + v190);
            uint64_t v192 = (_OWORD *)((char *)v459 + v190);
            uint64_t v193 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
            {
              uint64_t v194 = sub_10017DF08(&qword_100E63850);
              memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
            }
            else
            {
              uint64_t v453 = (void (*)(void *, char *, uint64_t))v56;
              *uint64_t v191 = *v192;
              uint64_t v212 = v192;
              uint64_t v213 = v193;
              uint64_t v214 = *(int *)(v193 + 20);
              uint64_t v215 = (char *)v191 + v214;
              uint64_t v425 = v212;
              uint64_t v216 = (char *)v212 + v214;
              uint64_t v217 = type metadata accessor for Locale();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v217))
              {
                uint64_t v218 = sub_10017DF08(&qword_100E63730);
                memcpy(v215, v216, *(void *)(*(void *)(v218 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 32))(v215, v216, v217);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v215, 0, 1, v217);
              }
              uint64_t v245 = (int *)v213;
              uint64_t v246 = *(int *)(v213 + 24);
              uint64_t v247 = (uint64_t)v191;
              uint64_t v248 = v245;
              uint64_t v249 = v247 + v246;
              uint64_t v250 = (uint64_t)v425 + v246;
              uint64_t v251 = type metadata accessor for WeatherDataModel();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v251 - 8) + 32))(v249, v250, v251);
              uint64_t v252 = v248[7];
              uint64_t v253 = (void *)(v247 + v252);
              uint64_t v254 = (char *)v425 + v252;
              uint64_t v255 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254, 1, v255))
              {
                uint64_t v256 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v253, v254, *(void *)(*(void *)(v256 - 8) + 64));
              }
              else
              {
                v453(v253, v254, v55);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v253, 0, 1, v255);
              }
              uint64_t v267 = v248[8];
              uint64_t v268 = (void *)(v247 + v267);
              uint64_t v269 = (char *)v425 + v267;
              uint64_t v270 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v271 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v271 - 8) + 32))(v268, v269, v271);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
              }
              uint64_t v272 = v248[9];
              uint64_t v273 = (char *)(v247 + v272);
              uint64_t v274 = (char *)v425 + v272;
              uint64_t v275 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v274, 1, v275))
              {
                uint64_t v276 = sub_10017DF08(&qword_100E63740);
                memcpy(v273, v274, *(void *)(*(void *)(v276 - 8) + 64));
              }
              else
              {
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v274, 1, v55))
                {
                  uint64_t v278 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v273, v274, *(void *)(*(void *)(v278 - 8) + 64));
                }
                else
                {
                  v453(v273, v274, v55);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v273, 0, 1, v55);
                }
                uint64_t v283 = *(int *)(v275 + 20);
                uint64_t v284 = &v273[v283];
                uint64_t v285 = &v274[v283];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v285, 1, v55))
                {
                  uint64_t v286 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
                }
                else
                {
                  v453(v284, v285, v55);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v284, 0, 1, v55);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v273, 0, 1, v275);
              }
              _s7Weather24LocationCompositionStateOwst_0(v247, 0, 1, (uint64_t)v248);
              uint64_t v56 = (void (*)(char *, char *, uint64_t))v453;
            }
            *(_OWORD *)((char *)__dstc + v427[7]) = *(_OWORD *)((char *)v459 + v427[7]);
            uint64_t v329 = v427[8];
            uint64_t v456 = (char *)__dstc + v329;
            uint64_t v330 = (char *)v459 + v329;
            uint64_t v331 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 32))(v456, v330, v331);
            *((unsigned char *)__dstc + v427[9]) = *((unsigned char *)v459 + v427[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v148 = v433;
            uint64_t v134 = v437;
            uint64_t v150 = v488;
          }
          else
          {
            memcpy(__dstc, v459, *(void *)(*(void *)(v188 - 8) + 64));
          }
LABEL_154:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(__dstc, v152, *(void *)(*(void *)(v134 - 8) + 64));
          break;
      }
      uint64_t v332 = *(int *)(v150 + 32);
      v291 = (_OWORD *)(v123 + v332);
      uint64_t v292 = (_OWORD *)(v124 + v332);
      if (!_s7Weather24LocationCompositionStateOwet_0(v124 + v332, 1, v134))
      {
        uint64_t v461 = v291;
        __dste = v292;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v293 = (uint64_t)v291;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v148 - 8) + 32))(v291, v292, v148);
            goto LABEL_220;
          case 2u:
            uint64_t v293 = (uint64_t)v291;
            ((void (*)(_OWORD *, _OWORD *, uint64_t))v475)(v291, v292, v479);
            goto LABEL_220;
          case 3u:
            uint64_t v335 = sub_10017DF08(&qword_100E73808);
            uint64_t v293 = (uint64_t)v291;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v335 - 8) + 32))(v291, v292, v335);
            goto LABEL_220;
          case 4u:
            uint64_t v293 = (uint64_t)v291;
            uint64_t v336 = v292;
            long long v337 = v292[1];
            *uint64_t v461 = *v292;
            v461[1] = v337;
            uint64_t v338 = *(int *)(v492 + 20);
            uint64_t v339 = (char *)v461 + v338;
            uint64_t v340 = (char *)v292 + v338;
            uint64_t v341 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v438 = v134;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *(_OWORD *)uint64_t v339 = *(_OWORD *)v340;
              uint64_t v342 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v343 = v342[5];
              uint64_t v344 = &v339[v343];
              uint64_t v345 = &v340[v343];
              uint64_t v346 = type metadata accessor for URL();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v345, 1, v346))
              {
                uint64_t v347 = sub_10017DF08(&qword_100E749B0);
                memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
                uint64_t v348 = *(void *)(v346 - 8);
              }
              else
              {
                uint64_t v482 = *(void *)(v346 - 8);
                (*(void (**)(char *, char *, uint64_t))(v482 + 32))(v344, v345, v346);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v344, 0, 1, v346);
                uint64_t v348 = v482;
              }
              *(_OWORD *)&v339[v342[6]] = *(_OWORD *)&v340[v342[6]];
              uint64_t v477 = *(void (**)(char *, char *, uint64_t))(v348 + 32);
              v477(&v339[v342[7]], &v340[v342[7]], v346);
              uint64_t v483 = v342;
              uint64_t v357 = v342[8];
              uint64_t v358 = &v339[v357];
              uint64_t v359 = &v340[v357];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v340[v357], 1, v346))
              {
                uint64_t v360 = sub_10017DF08(&qword_100E749B0);
                memcpy(v358, v359, *(void *)(*(void *)(v360 - 8) + 64));
              }
              else
              {
                v477(v358, v359, v346);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v358, 0, 1, v346);
              }
              uint64_t v336 = __dste;
              v339[v483[9]] = v340[v483[9]];
              swift_storeEnumTagMultiPayload();
              uint64_t v293 = (uint64_t)v461;
            }
            else
            {
              memcpy(v339, v340, *(void *)(*(void *)(v341 - 8) + 64));
            }
            uint64_t v366 = *(int *)(v492 + 24);
            uint64_t v326 = (void *)(v293 + v366);
            uint64_t v327 = &v336[v366];
            uint64_t v328 = type metadata accessor for DetailComponentAction();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v327, 1, v328))
            {
LABEL_179:
              uint64_t v367 = sub_10017DF08(&qword_100E73810);
              memcpy(v326, v327, *(void *)(*(void *)(v367 - 8) + 64));
            }
            else
            {
LABEL_180:
              uint64_t v368 = type metadata accessor for URL();
              (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v368 - 8) + 32))(v326, v327, v368);
              uint64_t v369 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)v326 + *(int *)(v369 + 48)) = v327[*(int *)(v369 + 48)];
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v326, 0, 1, v328);
            }
            uint64_t v334 = v488;
            uint64_t v134 = v438;
            swift_storeEnumTagMultiPayload();
            goto LABEL_222;
          case 6u:
            uint64_t v349 = type metadata accessor for PrecipitationTotalPlatterViewModel();
            uint64_t v293 = (uint64_t)v291;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v349 - 8) + 32))(v291, v292, v349);
            goto LABEL_220;
          case 7u:
            uint64_t v457 = (void (*)(void *, char *, uint64_t))v56;
            uint64_t v350 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v440 = v134;
              uint64_t v447 = v55;
              _OWORD *v291 = *v292;
              uint64_t v351 = (int *)type metadata accessor for ConditionDetailMapViewModel();
              ((void (*)(char *, char *, uint64_t))v469)((char *)v291 + v351[5], (char *)v292 + v351[5], v471);
              uint64_t v352 = v351[6];
              uint64_t v353 = (_OWORD *)((char *)v291 + v352);
              uint64_t v354 = (_OWORD *)((char *)v292 + v352);
              uint64_t v355 = (int *)type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v354, 1, (uint64_t)v355))
              {
                uint64_t v356 = sub_10017DF08(&qword_100E63850);
                memcpy(v353, v354, *(void *)(*(void *)(v356 - 8) + 64));
              }
              else
              {
                *uint64_t v353 = *v354;
                uint64_t v361 = v355[5];
                uint64_t v494 = (uint64_t)v353;
                uint64_t v362 = (char *)v353 + v361;
                char v363 = (char *)v354 + v361;
                uint64_t v364 = type metadata accessor for Locale();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v363, 1, v364))
                {
                  uint64_t v365 = sub_10017DF08(&qword_100E63730);
                  memcpy(v362, v363, *(void *)(*(void *)(v365 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 32))(v362, v363, v364);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v362, 0, 1, v364);
                }
                uint64_t v379 = v355[6];
                uint64_t v380 = v494 + v379;
                uint64_t v381 = (char *)v354 + v379;
                uint64_t v382 = type metadata accessor for WeatherDataModel();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v382 - 8) + 32))(v380, v381, v382);
                uint64_t v485 = (uint64_t)v355;
                uint64_t v383 = v355[7];
                char v384 = (void *)(v494 + v383);
                uint64_t v385 = (char *)v354 + v383;
                uint64_t v386 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v385, 1, v386))
                {
                  uint64_t v387 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v384, v385, *(void *)(*(void *)(v387 - 8) + 64));
                }
                else
                {
                  v457(v384, v385, v447);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v386);
                }
                uint64_t v398 = *(int *)(v485 + 32);
                v399 = (void *)(v494 + v398);
                uint64_t v400 = (char *)v354 + v398;
                uint64_t v401 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v402 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v402 - 8) + 32))(v399, v400, v402);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v399, v400, *(void *)(*(void *)(v401 - 8) + 64));
                }
                uint64_t v403 = *(int *)(v485 + 36);
                uint64_t v404 = (char *)(v494 + v403);
                uint64_t v405 = (char *)v354 + v403;
                uint64_t v406 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v405, 1, v406))
                {
                  uint64_t v407 = sub_10017DF08(&qword_100E63740);
                  memcpy(v404, v405, *(void *)(*(void *)(v407 - 8) + 64));
                }
                else
                {
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v405, 1, v447))
                  {
                    uint64_t v409 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v404, v405, *(void *)(*(void *)(v409 - 8) + 64));
                  }
                  else
                  {
                    v457(v404, v405, v447);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v404, 0, 1, v447);
                  }
                  uint64_t v413 = *(int *)(v406 + 20);
                  uint64_t v473 = &v404[v413];
                  uint64_t v414 = &v405[v413];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v414, 1, v447))
                  {
                    uint64_t v415 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v473, v414, *(void *)(*(void *)(v415 - 8) + 64));
                  }
                  else
                  {
                    v457(v473, v414, v447);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v473, 0, 1, v447);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v404, 0, 1, v406);
                }
                _s7Weather24LocationCompositionStateOwst_0(v494, 0, 1, v485);
              }
              uint64_t v293 = (uint64_t)v461;
              *(_OWORD *)((char *)v461 + v351[7]) = *(_OWORD *)&__dste[v351[7]];
              uint64_t v420 = v351[8];
              uint64_t v421 = (char *)v461 + v420;
              uint64_t v422 = &__dste[v420];
              uint64_t v423 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v423 - 8) + 32))(v421, v422, v423);
              *((unsigned char *)v461 + v351[9]) = __dste[v351[9]];
              swift_storeEnumTagMultiPayload();
              uint64_t v134 = v440;
            }
            else
            {
              uint64_t v293 = (uint64_t)v291;
              memcpy(v291, v292, *(void *)(*(void *)(v350 - 8) + 64));
            }
LABEL_220:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v293 = (uint64_t)v291;
            memcpy(v291, v292, *(void *)(*(void *)(v134 - 8) + 64));
            break;
        }
        uint64_t v334 = v488;
        goto LABEL_222;
      }
LABEL_156:
      uint64_t v333 = sub_10017DF08(&qword_100E73818);
      memcpy(v291, v292, *(void *)(*(void *)(v333 - 8) + 64));
      uint64_t v334 = v488;
LABEL_223:
      *(unsigned char *)(v123 + *(int *)(v334 + 36)) = *(unsigned char *)(v124 + *(int *)(v334 + 36));
      *(unsigned char *)(v123 + *(int *)(v334 + 40)) = *(unsigned char *)(v124 + *(int *)(v334 + 40));
      _s7Weather24LocationCompositionStateOwst_0(v123, 0, 1, v334);
      goto LABEL_224;
    }
LABEL_41:
    uint64_t v144 = sub_10017DF08(&qword_100E66E40);
    memcpy((void *)v123, (const void *)v124, *(void *)(*(void *)(v144 - 8) + 64));
LABEL_224:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    uint64_t v8 = (int *)_s11NormalModelVMa();
    uint64_t v9 = v8[7];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    v13(&a1[v8[8]], &a2[v8[8]], v12);
    v13(&a1[v8[9]], &a2[v8[9]], v12);
    uint64_t v14 = v8[10];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    uint64_t v18 = v8[11];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v478 = type metadata accessor for AttributedString();
    uint64_t v474 = *(void (**)(char *, char *))(*(void *)(v478 - 8) + 32);
    v474(v19, v20);
    *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
    uint64_t v21 = v8[13];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    uint64_t v25 = v8[14];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = type metadata accessor for Location();
    v468 = *(void (**)(char *, char *))(*(void *)(v28 - 8) + 32);
    uint64_t v470 = v28;
    v468(v26, v27);
    uint64_t v29 = v8[15];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    uint64_t v32 = type metadata accessor for SunEvents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    uint64_t v33 = v8[16];
    uint64_t v34 = &a1[v33];
    uint64_t v35 = &a2[v33];
    uint64_t v36 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
    uint64_t v37 = v8[17];
    uint64_t v38 = &a1[v37];
    uint64_t v39 = &a2[v37];
    uint64_t v40 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
    uint64_t v41 = v8[18];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    uint64_t v44 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
    {
      uint64_t v45 = sub_10017DF08(&qword_100E66E28);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      uint64_t v448 = v13;
      long long v85 = *((_OWORD *)v43 + 1);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v85;
      uint64_t v489 = v44;
      uint64_t v86 = *(int *)(v44 + 20);
      long long v87 = &v42[v86];
      uint64_t v88 = &v43[v86];
      uint64_t v89 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v441 = v12;
        *(_OWORD *)long long v87 = *(_OWORD *)v88;
        uint64_t v486 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v90 = v486[5];
        uint64_t v91 = &v87[v90];
        uint64_t v92 = &v88[v90];
        uint64_t v93 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93))
        {
          uint64_t v94 = sub_10017DF08(&qword_100E749B0);
          memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
          uint64_t v95 = *(void *)(v93 - 8);
        }
        else
        {
          uint64_t v95 = *(void *)(v93 - 8);
          (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v91, v92, v93);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v93);
        }
        *(_OWORD *)&v87[v486[6]] = *(_OWORD *)&v88[v486[6]];
        uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v95 + 32);
        v107(&v87[v486[7]], &v88[v486[7]], v93);
        uint64_t v108 = v486[8];
        __dst = &v87[v108];
        uint64_t v109 = &v88[v108];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v88[v108], 1, v93))
        {
          uint64_t v110 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v109, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          v107(__dst, v109, v93);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v93);
        }
        v87[v486[9]] = v88[v486[9]];
        swift_storeEnumTagMultiPayload();
        uint64_t v12 = v441;
      }
      else
      {
        memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
      }
      uint64_t v44 = v489;
      uint64_t v115 = *(int *)(v489 + 24);
      uint64_t v116 = &v42[v115];
      uint64_t v117 = &v43[v115];
      uint64_t v118 = type metadata accessor for DetailComponentAction();
      uint64_t v13 = v448;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
      {
        uint64_t v119 = sub_10017DF08(&qword_100E73810);
        memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
      }
      else
      {
        uint64_t v120 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v116, v117, v120);
        uint64_t v121 = sub_10017DF08(&qword_100E66478);
        v116[*(int *)(v121 + 48)] = v117[*(int *)(v121 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v489);
    }
    uint64_t v122 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    uint64_t v123 = (uint64_t)&a1[v122];
    uint64_t v124 = (uint64_t)&a2[v122];
    uint64_t v125 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v124, 1, v125))
    {
      *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
      *(unsigned char *)(v123 + 16) = *(unsigned char *)(v124 + 16);
      *(_OWORD *)(v123 + 24) = *(_OWORD *)(v124 + 24);
      uint64_t v488 = v125;
      uint64_t v126 = *(int *)(v125 + 24);
      uint64_t v127 = (void *)(v123 + v126);
      uint64_t v128 = (const void *)(v124 + v126);
      uint64_t v129 = type metadata accessor for WeatherDescription();
      uint64_t v491 = v44;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v129))
      {
        uint64_t v130 = sub_10017DF08(&qword_100E63758);
        memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v129);
      }
      uint64_t v131 = v488;
      uint64_t v132 = *(int *)(v488 + 28);
      __dstb = (_OWORD *)(v123 + v132);
      uint64_t v133 = (_OWORD *)(v124 + v132);
      uint64_t v134 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      uint64_t v458 = v133;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v129 - 8) + 32))(__dstb, v133, v129);
          goto LABEL_125;
        case 2u:
          ((void (*)(_OWORD *, _OWORD *, uint64_t))v474)(__dstb, v133, v478);
          goto LABEL_125;
        case 3u:
          uint64_t v153 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v153 - 8) + 32))(__dstb, v133, v153);
          goto LABEL_125;
        case 4u:
          uint64_t v450 = v13;
          long long v154 = v133[1];
          _OWORD *__dstb = *v133;
          __dstb[1] = v154;
          uint64_t v155 = *(int *)(v491 + 20);
          uint64_t v156 = (char *)__dstb + v155;
          uint64_t v157 = (char *)v458 + v155;
          uint64_t v158 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v430 = v129;
          uint64_t v434 = v134;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v443 = v12;
            *(_OWORD *)uint64_t v156 = *(_OWORD *)v157;
            uint64_t v159 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v160 = v159[5];
            uint64_t v161 = &v156[v160];
            uint64_t v162 = &v157[v160];
            uint64_t v163 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, v163))
            {
              uint64_t v164 = sub_10017DF08(&qword_100E749B0);
              memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
              uint64_t v165 = *(void *)(v163 - 8);
            }
            else
            {
              uint64_t v165 = *(void *)(v163 - 8);
              (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v161, v162, v163);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v163);
            }
            *(_OWORD *)&v156[v159[6]] = *(_OWORD *)&v157[v159[6]];
            uint64_t v195 = *(void (**)(char *, char *, uint64_t))(v165 + 32);
            v195(&v156[v159[7]], &v157[v159[7]], v163);
            uint64_t v428 = v159;
            uint64_t v196 = v159[8];
            long long v197 = &v156[v196];
            uint64_t v198 = &v157[v196];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v157[v196], 1, v163))
            {
              uint64_t v199 = sub_10017DF08(&qword_100E749B0);
              memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
            }
            else
            {
              v195(v197, v198, v163);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v197, 0, 1, v163);
            }
            v156[v428[9]] = v157[v428[9]];
            swift_storeEnumTagMultiPayload();
            uint64_t v12 = v443;
          }
          else
          {
            memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
          }
          uint64_t v219 = *(int *)(v491 + 24);
          uint64_t v220 = (char *)__dstb + v219;
          uint64_t v221 = (char *)v458 + v219;
          uint64_t v222 = type metadata accessor for DetailComponentAction();
          uint64_t v13 = v450;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v222))
          {
            uint64_t v223 = sub_10017DF08(&qword_100E73810);
            memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
          }
          else
          {
            uint64_t v224 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v220, v221, v224);
            uint64_t v225 = sub_10017DF08(&qword_100E66478);
            v220[*(int *)(v225 + 48)] = v221[*(int *)(v225 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v222);
          }
          uint64_t v129 = v430;
          uint64_t v134 = v434;
          swift_storeEnumTagMultiPayload();
          uint64_t v131 = v488;
          break;
        case 6u:
          uint64_t v166 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v166 - 8) + 32))(__dstb, v133, v166);
          goto LABEL_125;
        case 7u:
          uint64_t v167 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v431 = v129;
            uint64_t v435 = v134;
            _OWORD *__dstb = *v458;
            uint64_t v168 = type metadata accessor for ConditionDetailMapViewModel();
            ((void (*)(char *, char *, uint64_t))v468)((char *)__dstb + *(int *)(v168 + 20), (char *)v458 + *(int *)(v168 + 20), v470);
            long long v426 = (int *)v168;
            uint64_t v169 = *(int *)(v168 + 24);
            uint64_t v170 = (_OWORD *)((char *)__dstb + v169);
            uint64_t v171 = (_OWORD *)((char *)v458 + v169);
            uint64_t v172 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
            {
              uint64_t v173 = sub_10017DF08(&qword_100E63850);
              memcpy(v170, v171, *(void *)(*(void *)(v173 - 8) + 64));
            }
            else
            {
              _OWORD *v170 = *v171;
              uint64_t v200 = v171;
              uint64_t v201 = v172;
              uint64_t v202 = *(int *)(v172 + 20);
              uint64_t v203 = (char *)v170 + v202;
              uint64_t v445 = v12;
              uint64_t v452 = v200;
              uint64_t v204 = (char *)v200 + v202;
              uint64_t v205 = type metadata accessor for Locale();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
              {
                uint64_t v206 = sub_10017DF08(&qword_100E63730);
                memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
              }
              uint64_t v233 = (int *)v201;
              uint64_t v234 = *(int *)(v201 + 24);
              uint64_t v235 = (uint64_t)v170;
              uint64_t v236 = v233;
              uint64_t v237 = v235 + v234;
              uint64_t v238 = (uint64_t)v452 + v234;
              uint64_t v239 = type metadata accessor for WeatherDataModel();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v239 - 8) + 32))(v237, v238, v239);
              uint64_t v240 = v236[7];
              uint64_t v241 = (void *)(v235 + v240);
              uint64_t v242 = (char *)v452 + v240;
              uint64_t v243 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v242, 1, v243))
              {
                uint64_t v244 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v241, v242, *(void *)(*(void *)(v244 - 8) + 64));
              }
              else
              {
                v13((char *)v241, v242, v445);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v241, 0, 1, v243);
              }
              uint64_t v257 = v236[8];
              unsigned __int8 v258 = (void *)(v235 + v257);
              uint64_t v259 = (char *)v452 + v257;
              uint64_t v260 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v261 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v261 - 8) + 32))(v258, v259, v261);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v258, v259, *(void *)(*(void *)(v260 - 8) + 64));
              }
              uint64_t v262 = v236[9];
              uint64_t v263 = (char *)(v235 + v262);
              uint64_t v264 = (char *)v452 + v262;
              uint64_t v265 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v265))
              {
                uint64_t v266 = sub_10017DF08(&qword_100E63740);
                memcpy(v263, v264, *(void *)(*(void *)(v266 - 8) + 64));
              }
              else
              {
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v445))
                {
                  uint64_t v277 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v263, v264, *(void *)(*(void *)(v277 - 8) + 64));
                }
                else
                {
                  v13(v263, v264, v445);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v445);
                }
                uint64_t v279 = *(int *)(v265 + 20);
                uint64_t v280 = &v263[v279];
                uint64_t v281 = &v264[v279];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v281, 1, v445))
                {
                  uint64_t v282 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v280, v281, *(void *)(*(void *)(v282 - 8) + 64));
                }
                else
                {
                  v13(v280, v281, v445);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v445);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v265);
              }
              _s7Weather24LocationCompositionStateOwst_0(v235, 0, 1, (uint64_t)v236);
              uint64_t v12 = v445;
            }
            *(_OWORD *)((char *)__dstb + v426[7]) = *(_OWORD *)((char *)v458 + v426[7]);
            uint64_t v287 = v426[8];
            uint64_t v454 = (char *)__dstb + v287;
            uint64_t v288 = (char *)v458 + v287;
            uint64_t v289 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 32))(v454, v288, v289);
            *((unsigned char *)__dstb + v426[9]) = *((unsigned char *)v458 + v426[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v129 = v431;
            uint64_t v134 = v435;
            uint64_t v131 = v488;
          }
          else
          {
            memcpy(__dstb, v458, *(void *)(*(void *)(v167 - 8) + 64));
          }
LABEL_125:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(__dstb, v133, *(void *)(*(void *)(v134 - 8) + 64));
          break;
      }
      uint64_t v290 = *(int *)(v131 + 32);
      v291 = (_OWORD *)(v123 + v290);
      uint64_t v292 = (_OWORD *)(v124 + v290);
      if (!_s7Weather24LocationCompositionStateOwet_0(v124 + v290, 1, v134))
      {
        v460 = v291;
        __dstd = v292;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v293 = (uint64_t)v291;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v129 - 8) + 32))(v291, v292, v129);
            goto LABEL_214;
          case 2u:
            uint64_t v293 = (uint64_t)v291;
            ((void (*)(_OWORD *, _OWORD *, uint64_t))v474)(v291, v292, v478);
            goto LABEL_214;
          case 3u:
            uint64_t v294 = sub_10017DF08(&qword_100E73808);
            uint64_t v293 = (uint64_t)v291;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v294 - 8) + 32))(v291, v292, v294);
            goto LABEL_214;
          case 4u:
            uint64_t v293 = (uint64_t)v291;
            v295 = v292;
            long long v296 = v292[1];
            _OWORD *v460 = *v292;
            v460[1] = v296;
            uint64_t v297 = *(int *)(v491 + 20);
            uint64_t v298 = (char *)v460 + v297;
            v299 = (char *)v292 + v297;
            uint64_t v300 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v438 = v134;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *(_OWORD *)uint64_t v298 = *(_OWORD *)v299;
              uint64_t v301 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v302 = v301[5];
              uint64_t v303 = &v298[v302];
              uint64_t v304 = &v299[v302];
              uint64_t v305 = type metadata accessor for URL();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v304, 1, v305))
              {
                uint64_t v306 = sub_10017DF08(&qword_100E749B0);
                memcpy(v303, v304, *(void *)(*(void *)(v306 - 8) + 64));
                uint64_t v307 = *(void *)(v305 - 8);
              }
              else
              {
                uint64_t v480 = *(void *)(v305 - 8);
                (*(void (**)(char *, char *, uint64_t))(v480 + 32))(v303, v304, v305);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v303, 0, 1, v305);
                uint64_t v307 = v480;
              }
              *(_OWORD *)&v298[v301[6]] = *(_OWORD *)&v299[v301[6]];
              uint64_t v476 = *(void (**)(char *, char *, uint64_t))(v307 + 32);
              v476(&v298[v301[7]], &v299[v301[7]], v305);
              uint64_t v481 = v301;
              uint64_t v316 = v301[8];
              uint64_t v317 = &v298[v316];
              uint64_t v318 = &v299[v316];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v299[v316], 1, v305))
              {
                uint64_t v319 = sub_10017DF08(&qword_100E749B0);
                memcpy(v317, v318, *(void *)(*(void *)(v319 - 8) + 64));
              }
              else
              {
                v476(v317, v318, v305);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v317, 0, 1, v305);
              }
              v295 = __dstd;
              v298[v481[9]] = v299[v481[9]];
              swift_storeEnumTagMultiPayload();
              uint64_t v293 = (uint64_t)v460;
            }
            else
            {
              memcpy(v298, v299, *(void *)(*(void *)(v300 - 8) + 64));
            }
            uint64_t v325 = *(int *)(v491 + 24);
            uint64_t v326 = (void *)(v293 + v325);
            uint64_t v327 = &v295[v325];
            uint64_t v328 = type metadata accessor for DetailComponentAction();
            if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v327, 1, v328)) {
              goto LABEL_180;
            }
            goto LABEL_179;
          case 6u:
            uint64_t v308 = type metadata accessor for PrecipitationTotalPlatterViewModel();
            uint64_t v293 = (uint64_t)v291;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v308 - 8) + 32))(v291, v292, v308);
            goto LABEL_214;
          case 7u:
            uint64_t v446 = v12;
            uint64_t v309 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v439 = v134;
              char v455 = (void (*)(void *, char *, uint64_t))v13;
              _OWORD *v291 = *v292;
              uint64_t v310 = (int *)type metadata accessor for ConditionDetailMapViewModel();
              ((void (*)(char *, char *, uint64_t))v468)((char *)v291 + v310[5], (char *)v292 + v310[5], v470);
              uint64_t v311 = v310[6];
              uint64_t v312 = (_OWORD *)((char *)v291 + v311);
              uint64_t v313 = (_OWORD *)((char *)v292 + v311);
              uint64_t v314 = (int *)type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v313, 1, (uint64_t)v314))
              {
                uint64_t v315 = sub_10017DF08(&qword_100E63850);
                memcpy(v312, v313, *(void *)(*(void *)(v315 - 8) + 64));
              }
              else
              {
                _OWORD *v312 = *v313;
                uint64_t v320 = v314[5];
                uint64_t v493 = (uint64_t)v312;
                uint64_t v321 = (char *)v312 + v320;
                uint64_t v322 = (char *)v313 + v320;
                uint64_t v323 = type metadata accessor for Locale();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v322, 1, v323))
                {
                  uint64_t v324 = sub_10017DF08(&qword_100E63730);
                  memcpy(v321, v322, *(void *)(*(void *)(v324 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 32))(v321, v322, v323);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v321, 0, 1, v323);
                }
                uint64_t v370 = v314[6];
                uint64_t v371 = v493 + v370;
                uint64_t v372 = (char *)v313 + v370;
                uint64_t v373 = type metadata accessor for WeatherDataModel();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v373 - 8) + 32))(v371, v372, v373);
                uint64_t v484 = (uint64_t)v314;
                uint64_t v374 = v314[7];
                uint64_t v375 = (void *)(v493 + v374);
                long long v376 = (char *)v313 + v374;
                uint64_t v377 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v376, 1, v377))
                {
                  uint64_t v378 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v375, v376, *(void *)(*(void *)(v378 - 8) + 64));
                }
                else
                {
                  v455(v375, v376, v446);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v375, 0, 1, v377);
                }
                uint64_t v388 = *(int *)(v484 + 32);
                uint64_t v389 = (void *)(v493 + v388);
                uint64_t v390 = (char *)v313 + v388;
                uint64_t v391 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v392 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v392 - 8) + 32))(v389, v390, v392);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v389, v390, *(void *)(*(void *)(v391 - 8) + 64));
                }
                uint64_t v393 = *(int *)(v484 + 36);
                uint64_t v394 = (char *)(v493 + v393);
                uint64_t v395 = (char *)v313 + v393;
                uint64_t v396 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v395, 1, v396))
                {
                  uint64_t v397 = sub_10017DF08(&qword_100E63740);
                  memcpy(v394, v395, *(void *)(*(void *)(v397 - 8) + 64));
                }
                else
                {
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v395, 1, v446))
                  {
                    uint64_t v408 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v394, v395, *(void *)(*(void *)(v408 - 8) + 64));
                  }
                  else
                  {
                    v455(v394, v395, v446);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v394, 0, 1, v446);
                  }
                  uint64_t v410 = *(int *)(v396 + 20);
                  uint64_t v472 = &v394[v410];
                  uint64_t v411 = &v395[v410];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v411, 1, v446))
                  {
                    uint64_t v412 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v472, v411, *(void *)(*(void *)(v412 - 8) + 64));
                  }
                  else
                  {
                    v455(v472, v411, v446);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v472, 0, 1, v446);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v394, 0, 1, v396);
                }
                _s7Weather24LocationCompositionStateOwst_0(v493, 0, 1, v484);
              }
              uint64_t v293 = (uint64_t)v460;
              *(_OWORD *)((char *)v460 + v310[7]) = *(_OWORD *)&__dstd[v310[7]];
              uint64_t v416 = v310[8];
              uint64_t v417 = (char *)v460 + v416;
              uint64_t v418 = &__dstd[v416];
              uint64_t v419 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v419 - 8) + 32))(v417, v418, v419);
              *((unsigned char *)v460 + v310[9]) = __dstd[v310[9]];
              swift_storeEnumTagMultiPayload();
              uint64_t v134 = v439;
            }
            else
            {
              uint64_t v293 = (uint64_t)v291;
              memcpy(v291, v292, *(void *)(*(void *)(v309 - 8) + 64));
            }
LABEL_214:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v293 = (uint64_t)v291;
            memcpy(v291, v292, *(void *)(*(void *)(v134 - 8) + 64));
            break;
        }
        uint64_t v334 = v488;
LABEL_222:
        _s7Weather24LocationCompositionStateOwst_0(v293, 0, 1, v134);
        goto LABEL_223;
      }
      goto LABEL_156;
    }
    goto LABEL_41;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100745934(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10074B9F4((uint64_t)a1, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      long long v46 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v46;
      uint64_t v47 = (int *)_s10PolarModelVMa();
      uint64_t v48 = v47[6];
      uint64_t v49 = &a1[v48];
      uint64_t v50 = &a2[v48];
      uint64_t v51 = type metadata accessor for PolarType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      uint64_t v52 = v47[7];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      uint64_t v55 = type metadata accessor for Date();
      uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32);
      v56(v53, v54, v55);
      uint64_t v57 = v47[8];
      uint64_t v58 = &a1[v57];
      uint64_t v59 = &a2[v57];
      uint64_t v60 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
      uint64_t v61 = v47[9];
      uint64_t v62 = &a1[v61];
      uint64_t v63 = &a2[v61];
      uint64_t v479 = type metadata accessor for AttributedString();
      uint64_t v475 = *(void (**)(char *, char *))(*(void *)(v479 - 8) + 32);
      v475(v62, v63);
      *(void *)&a1[v47[10]] = *(void *)&a2[v47[10]];
      *(_OWORD *)&a1[v47[11]] = *(_OWORD *)&a2[v47[11]];
      uint64_t v64 = v47[12];
      uint64_t v65 = &a1[v64];
      uint64_t v66 = &a2[v64];
      uint64_t v67 = type metadata accessor for SunriseSunsetDetailChartViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
      uint64_t v68 = v47[13];
      uint64_t v69 = &a1[v68];
      uint64_t v70 = &a2[v68];
      uint64_t v71 = type metadata accessor for Location();
      uint64_t v469 = *(void (**)(char *, char *))(*(void *)(v71 - 8) + 32);
      uint64_t v471 = v71;
      v469(v69, v70);
      uint64_t v72 = v47[14];
      uint64_t v73 = &a1[v72];
      uint64_t v74 = &a2[v72];
      uint64_t v75 = type metadata accessor for DaylightStringBuilder();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
      uint64_t v76 = v47[15];
      uint64_t v77 = &a1[v76];
      uint64_t v78 = &a2[v76];
      uint64_t v79 = type metadata accessor for OverviewTableViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
      uint64_t v80 = v47[16];
      uint64_t v81 = &a1[v80];
      uint64_t v82 = &a2[v80];
      uint64_t v83 = type metadata accessor for DetailComponentContainerViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = sub_10017DF08(&qword_100E66E28);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        long long v96 = *((_OWORD *)v82 + 1);
        *(_OWORD *)uint64_t v81 = *(_OWORD *)v82;
        *((_OWORD *)v81 + 1) = v96;
        uint64_t v490 = v83;
        uint64_t v97 = *(int *)(v83 + 20);
        uint64_t v98 = &v81[v97];
        long long v99 = &v82[v97];
        uint64_t v100 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v451 = v56;
          uint64_t v442 = v55;
          *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
          uint64_t v487 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v101 = v487[5];
          uint64_t v102 = &v98[v101];
          uint64_t v103 = &v99[v101];
          uint64_t v104 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104))
          {
            uint64_t v105 = sub_10017DF08(&qword_100E749B0);
            memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
            uint64_t v106 = *(void *)(v104 - 8);
          }
          else
          {
            uint64_t v106 = *(void *)(v104 - 8);
            (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v102, v103, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
          }
          *(_OWORD *)&v98[v487[6]] = *(_OWORD *)&v99[v487[6]];
          uint64_t v111 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
          v111(&v98[v487[7]], &v99[v487[7]], v104);
          uint64_t v112 = v487[8];
          __dsta = &v98[v112];
          uint64_t v113 = &v99[v112];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v99[v112], 1, v104))
          {
            uint64_t v114 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dsta, v113, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            v111(__dsta, v113, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v104);
          }
          uint64_t v55 = v442;
          v98[v487[9]] = v99[v487[9]];
          swift_storeEnumTagMultiPayload();
          uint64_t v56 = v451;
        }
        else
        {
          memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
        }
        uint64_t v83 = v490;
        uint64_t v135 = *(int *)(v490 + 24);
        uint64_t v136 = &v81[v135];
        uint64_t v137 = &v82[v135];
        uint64_t v138 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138))
        {
          uint64_t v139 = sub_10017DF08(&qword_100E73810);
          memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
        }
        else
        {
          uint64_t v140 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v136, v137, v140);
          uint64_t v141 = sub_10017DF08(&qword_100E66478);
          v136[*(int *)(v141 + 48)] = v137[*(int *)(v141 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v138);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v490);
      }
      uint64_t v142 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
      uint64_t v123 = (uint64_t)&a1[v142];
      uint64_t v124 = (uint64_t)&a2[v142];
      uint64_t v143 = type metadata accessor for ConditionDetailPlatterViewModel(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v124, 1, v143))
      {
        *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
        *(unsigned char *)(v123 + 16) = *(unsigned char *)(v124 + 16);
        *(_OWORD *)(v123 + 24) = *(_OWORD *)(v124 + 24);
        uint64_t v488 = v143;
        uint64_t v145 = *(int *)(v143 + 24);
        uint64_t v146 = (void *)(v123 + v145);
        uint64_t v147 = (const void *)(v124 + v145);
        uint64_t v148 = type metadata accessor for WeatherDescription();
        uint64_t v492 = v83;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v148))
        {
          uint64_t v149 = sub_10017DF08(&qword_100E63758);
          memcpy(v146, v147, *(void *)(*(void *)(v149 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v148 - 8) + 32))(v146, v147, v148);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v146, 0, 1, v148);
        }
        uint64_t v150 = v488;
        uint64_t v151 = *(int *)(v488 + 28);
        __dstc = (_OWORD *)(v123 + v151);
        uint64_t v152 = (_OWORD *)(v124 + v151);
        uint64_t v134 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
        v459 = v152;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v148 - 8) + 32))(__dstc, v152, v148);
            goto LABEL_155;
          case 2u:
            ((void (*)(_OWORD *, _OWORD *, uint64_t))v475)(__dstc, v152, v479);
            goto LABEL_155;
          case 3u:
            uint64_t v174 = sub_10017DF08(&qword_100E73808);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v174 - 8) + 32))(__dstc, v152, v174);
            goto LABEL_155;
          case 4u:
            uint64_t v432 = v148;
            long long v175 = v152[1];
            _OWORD *__dstc = *v152;
            __dstc[1] = v175;
            uint64_t v176 = *(int *)(v492 + 20);
            uint64_t v177 = (char *)__dstc + v176;
            char v178 = (char *)v459 + v176;
            uint64_t v179 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v436 = v134;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v444 = v55;
              uint64_t v453 = v56;
              *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
              uint64_t v180 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v181 = v180[5];
              unsigned __int8 v182 = &v177[v181];
              uint64_t v183 = &v178[v181];
              uint64_t v184 = type metadata accessor for URL();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v184))
              {
                uint64_t v185 = sub_10017DF08(&qword_100E749B0);
                memcpy(v182, v183, *(void *)(*(void *)(v185 - 8) + 64));
                uint64_t v186 = *(void *)(v184 - 8);
              }
              else
              {
                uint64_t v186 = *(void *)(v184 - 8);
                (*(void (**)(char *, char *, uint64_t))(v186 + 32))(v182, v183, v184);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v182, 0, 1, v184);
              }
              *(_OWORD *)&v177[v180[6]] = *(_OWORD *)&v178[v180[6]];
              unsigned __int8 v207 = *(void (**)(char *, char *, uint64_t))(v186 + 32);
              v207(&v177[v180[7]], &v178[v180[7]], v184);
              uint64_t v428 = v180;
              uint64_t v208 = v180[8];
              uint64_t v209 = &v177[v208];
              uint64_t v210 = &v178[v208];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v178[v208], 1, v184))
              {
                uint64_t v211 = sub_10017DF08(&qword_100E749B0);
                memcpy(v209, v210, *(void *)(*(void *)(v211 - 8) + 64));
              }
              else
              {
                v207(v209, v210, v184);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v209, 0, 1, v184);
              }
              uint64_t v55 = v444;
              v177[v428[9]] = v178[v428[9]];
              swift_storeEnumTagMultiPayload();
              uint64_t v56 = v453;
            }
            else
            {
              memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
            }
            uint64_t v226 = *(int *)(v492 + 24);
            unsigned __int8 v227 = (char *)__dstc + v226;
            uint64_t v228 = (char *)v459 + v226;
            uint64_t v229 = type metadata accessor for DetailComponentAction();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v229))
            {
              uint64_t v230 = sub_10017DF08(&qword_100E73810);
              memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
            }
            else
            {
              uint64_t v231 = type metadata accessor for URL();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 32))(v227, v228, v231);
              uint64_t v232 = sub_10017DF08(&qword_100E66478);
              v227[*(int *)(v232 + 48)] = v228[*(int *)(v232 + 48)];
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v229);
            }
            uint64_t v134 = v436;
            swift_storeEnumTagMultiPayload();
            uint64_t v148 = v432;
            uint64_t v150 = v488;
            break;
          case 6u:
            uint64_t v187 = type metadata accessor for PrecipitationTotalPlatterViewModel();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v187 - 8) + 32))(__dstc, v152, v187);
            goto LABEL_155;
          case 7u:
            uint64_t v188 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v433 = v148;
              uint64_t v437 = v134;
              _OWORD *__dstc = *v459;
              uint64_t v189 = type metadata accessor for ConditionDetailMapViewModel();
              ((void (*)(char *, char *, uint64_t))v469)((char *)__dstc + *(int *)(v189 + 20), (char *)v459 + *(int *)(v189 + 20), v471);
              uint64_t v425 = (int *)v189;
              uint64_t v190 = *(int *)(v189 + 24);
              uint64_t v191 = (_OWORD *)((char *)__dstc + v190);
              uint64_t v192 = (_OWORD *)((char *)v459 + v190);
              uint64_t v193 = type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
              {
                uint64_t v194 = sub_10017DF08(&qword_100E63850);
                memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
              }
              else
              {
                *uint64_t v191 = *v192;
                uint64_t v212 = v192;
                uint64_t v213 = v193;
                uint64_t v214 = *(int *)(v193 + 20);
                uint64_t v215 = (char *)v191 + v214;
                uint64_t v446 = v212;
                uint64_t v454 = (void (*)(void *, char *, uint64_t))v56;
                uint64_t v216 = (char *)v212 + v214;
                uint64_t v217 = type metadata accessor for Locale();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v217))
                {
                  uint64_t v218 = sub_10017DF08(&qword_100E63730);
                  memcpy(v215, v216, *(void *)(*(void *)(v218 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 32))(v215, v216, v217);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v215, 0, 1, v217);
                }
                uint64_t v245 = (int *)v213;
                uint64_t v246 = *(int *)(v213 + 24);
                uint64_t v247 = (uint64_t)v191;
                uint64_t v248 = v245;
                uint64_t v249 = v247 + v246;
                uint64_t v250 = (uint64_t)v446 + v246;
                uint64_t v251 = type metadata accessor for WeatherDataModel();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v251 - 8) + 32))(v249, v250, v251);
                uint64_t v252 = v248[7];
                uint64_t v253 = (void *)(v247 + v252);
                uint64_t v254 = (char *)v446 + v252;
                uint64_t v255 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254, 1, v255))
                {
                  uint64_t v256 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v253, v254, *(void *)(*(void *)(v256 - 8) + 64));
                }
                else
                {
                  v454(v253, v254, v55);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v253, 0, 1, v255);
                }
                uint64_t v267 = v248[8];
                uint64_t v268 = (void *)(v247 + v267);
                uint64_t v269 = (char *)v446 + v267;
                uint64_t v270 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v271 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v271 - 8) + 32))(v268, v269, v271);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v268, v269, *(void *)(*(void *)(v270 - 8) + 64));
                }
                uint64_t v272 = v248[9];
                uint64_t v273 = (char *)(v247 + v272);
                uint64_t v274 = (char *)v446 + v272;
                uint64_t v275 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v274, 1, v275))
                {
                  uint64_t v276 = sub_10017DF08(&qword_100E63740);
                  memcpy(v273, v274, *(void *)(*(void *)(v276 - 8) + 64));
                }
                else
                {
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v274, 1, v55))
                  {
                    uint64_t v278 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v273, v274, *(void *)(*(void *)(v278 - 8) + 64));
                  }
                  else
                  {
                    v454(v273, v274, v55);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v273, 0, 1, v55);
                  }
                  uint64_t v283 = *(int *)(v275 + 20);
                  uint64_t v284 = &v273[v283];
                  uint64_t v285 = &v274[v283];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v285, 1, v55))
                  {
                    uint64_t v286 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
                  }
                  else
                  {
                    v454(v284, v285, v55);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v284, 0, 1, v55);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v273, 0, 1, v275);
                }
                _s7Weather24LocationCompositionStateOwst_0(v247, 0, 1, (uint64_t)v248);
                uint64_t v56 = (void (*)(char *, char *, uint64_t))v454;
              }
              *(_OWORD *)((char *)__dstc + v425[7]) = *(_OWORD *)((char *)v459 + v425[7]);
              uint64_t v329 = v425[8];
              uint64_t v456 = (char *)__dstc + v329;
              uint64_t v330 = (char *)v459 + v329;
              uint64_t v331 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 32))(v456, v330, v331);
              *((unsigned char *)__dstc + v425[9]) = *((unsigned char *)v459 + v425[9]);
              swift_storeEnumTagMultiPayload();
              uint64_t v148 = v433;
              uint64_t v134 = v437;
              uint64_t v150 = v488;
            }
            else
            {
              memcpy(__dstc, v459, *(void *)(*(void *)(v188 - 8) + 64));
            }
LABEL_155:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dstc, v152, *(void *)(*(void *)(v134 - 8) + 64));
            break;
        }
        uint64_t v332 = *(int *)(v150 + 32);
        v291 = (_OWORD *)(v123 + v332);
        uint64_t v292 = (_OWORD *)(v124 + v332);
        if (!_s7Weather24LocationCompositionStateOwet_0(v124 + v332, 1, v134))
        {
          uint64_t v461 = v291;
          __dste = v292;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v293 = (uint64_t)v291;
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v148 - 8) + 32))(v291, v292, v148);
              goto LABEL_221;
            case 2u:
              uint64_t v293 = (uint64_t)v291;
              ((void (*)(_OWORD *, _OWORD *, uint64_t))v475)(v291, v292, v479);
              goto LABEL_221;
            case 3u:
              uint64_t v335 = sub_10017DF08(&qword_100E73808);
              uint64_t v293 = (uint64_t)v291;
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v335 - 8) + 32))(v291, v292, v335);
              goto LABEL_221;
            case 4u:
              uint64_t v293 = (uint64_t)v291;
              uint64_t v336 = v292;
              long long v337 = v292[1];
              *uint64_t v461 = *v292;
              v461[1] = v337;
              uint64_t v338 = *(int *)(v492 + 20);
              uint64_t v339 = (char *)v461 + v338;
              uint64_t v340 = (char *)v292 + v338;
              uint64_t v341 = type metadata accessor for NewsArticleComponentViewModel(0);
              uint64_t v438 = v134;
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *(_OWORD *)uint64_t v339 = *(_OWORD *)v340;
                uint64_t v342 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v343 = v342[5];
                uint64_t v344 = &v339[v343];
                uint64_t v345 = &v340[v343];
                uint64_t v346 = type metadata accessor for URL();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v345, 1, v346))
                {
                  uint64_t v347 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
                  uint64_t v348 = *(void *)(v346 - 8);
                }
                else
                {
                  uint64_t v482 = *(void *)(v346 - 8);
                  (*(void (**)(char *, char *, uint64_t))(v482 + 32))(v344, v345, v346);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v344, 0, 1, v346);
                  uint64_t v348 = v482;
                }
                *(_OWORD *)&v339[v342[6]] = *(_OWORD *)&v340[v342[6]];
                uint64_t v477 = *(void (**)(char *, char *, uint64_t))(v348 + 32);
                v477(&v339[v342[7]], &v340[v342[7]], v346);
                uint64_t v483 = v342;
                uint64_t v357 = v342[8];
                uint64_t v358 = &v339[v357];
                uint64_t v359 = &v340[v357];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v340[v357], 1, v346))
                {
                  uint64_t v360 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v358, v359, *(void *)(*(void *)(v360 - 8) + 64));
                }
                else
                {
                  v477(v358, v359, v346);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v358, 0, 1, v346);
                }
                uint64_t v336 = __dste;
                v339[v483[9]] = v340[v483[9]];
                swift_storeEnumTagMultiPayload();
                uint64_t v293 = (uint64_t)v461;
              }
              else
              {
                memcpy(v339, v340, *(void *)(*(void *)(v341 - 8) + 64));
              }
              uint64_t v366 = *(int *)(v492 + 24);
              uint64_t v326 = (void *)(v293 + v366);
              uint64_t v327 = &v336[v366];
              uint64_t v328 = type metadata accessor for DetailComponentAction();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v327, 1, v328))
              {
LABEL_180:
                uint64_t v367 = sub_10017DF08(&qword_100E73810);
                memcpy(v326, v327, *(void *)(*(void *)(v367 - 8) + 64));
              }
              else
              {
LABEL_181:
                uint64_t v368 = type metadata accessor for URL();
                (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v368 - 8) + 32))(v326, v327, v368);
                uint64_t v369 = sub_10017DF08(&qword_100E66478);
                *((unsigned char *)v326 + *(int *)(v369 + 48)) = v327[*(int *)(v369 + 48)];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v326, 0, 1, v328);
              }
              uint64_t v334 = v488;
              uint64_t v134 = v438;
              swift_storeEnumTagMultiPayload();
              goto LABEL_223;
            case 6u:
              uint64_t v349 = type metadata accessor for PrecipitationTotalPlatterViewModel();
              uint64_t v293 = (uint64_t)v291;
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v349 - 8) + 32))(v291, v292, v349);
              goto LABEL_221;
            case 7u:
              uint64_t v457 = (void (*)(void *, char *, uint64_t))v56;
              uint64_t v350 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v440 = v134;
                uint64_t v449 = v55;
                _OWORD *v291 = *v292;
                uint64_t v351 = (int *)type metadata accessor for ConditionDetailMapViewModel();
                ((void (*)(char *, char *, uint64_t))v469)((char *)v291 + v351[5], (char *)v292 + v351[5], v471);
                uint64_t v352 = v351[6];
                uint64_t v353 = (_OWORD *)((char *)v291 + v352);
                uint64_t v354 = (_OWORD *)((char *)v292 + v352);
                uint64_t v355 = (int *)type metadata accessor for WeatherData(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v354, 1, (uint64_t)v355))
                {
                  uint64_t v356 = sub_10017DF08(&qword_100E63850);
                  memcpy(v353, v354, *(void *)(*(void *)(v356 - 8) + 64));
                }
                else
                {
                  *uint64_t v353 = *v354;
                  uint64_t v361 = v355[5];
                  uint64_t v494 = (uint64_t)v353;
                  uint64_t v362 = (char *)v353 + v361;
                  char v363 = (char *)v354 + v361;
                  uint64_t v364 = type metadata accessor for Locale();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v363, 1, v364))
                  {
                    uint64_t v365 = sub_10017DF08(&qword_100E63730);
                    memcpy(v362, v363, *(void *)(*(void *)(v365 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v364 - 8) + 32))(v362, v363, v364);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v362, 0, 1, v364);
                  }
                  uint64_t v379 = v355[6];
                  uint64_t v380 = v494 + v379;
                  uint64_t v381 = (char *)v354 + v379;
                  uint64_t v382 = type metadata accessor for WeatherDataModel();
                  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v382 - 8) + 32))(v380, v381, v382);
                  uint64_t v485 = (uint64_t)v355;
                  uint64_t v383 = v355[7];
                  char v384 = (void *)(v494 + v383);
                  uint64_t v385 = (char *)v354 + v383;
                  uint64_t v386 = sub_10017DF08(&qword_100E63738);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v385, 1, v386))
                  {
                    uint64_t v387 = type metadata accessor for WeatherData.CachingState(0);
                    memcpy(v384, v385, *(void *)(*(void *)(v387 - 8) + 64));
                  }
                  else
                  {
                    v457(v384, v385, v449);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v384, 0, 1, v386);
                  }
                  uint64_t v398 = *(int *)(v485 + 32);
                  v399 = (void *)(v494 + v398);
                  uint64_t v400 = (char *)v354 + v398;
                  uint64_t v401 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    uint64_t v402 = type metadata accessor for WeatherStatisticsModel();
                    (*(void (**)(void *, char *, uint64_t))(*(void *)(v402 - 8) + 32))(v399, v400, v402);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v399, v400, *(void *)(*(void *)(v401 - 8) + 64));
                  }
                  uint64_t v403 = *(int *)(v485 + 36);
                  uint64_t v404 = (char *)(v494 + v403);
                  uint64_t v405 = (char *)v354 + v403;
                  uint64_t v406 = type metadata accessor for WeatherDataOverrides();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v405, 1, v406))
                  {
                    uint64_t v407 = sub_10017DF08(&qword_100E63740);
                    memcpy(v404, v405, *(void *)(*(void *)(v407 - 8) + 64));
                  }
                  else
                  {
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v405, 1, v449))
                    {
                      uint64_t v409 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v404, v405, *(void *)(*(void *)(v409 - 8) + 64));
                    }
                    else
                    {
                      v457(v404, v405, v449);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v404, 0, 1, v449);
                    }
                    uint64_t v417 = *(int *)(v406 + 20);
                    uint64_t v473 = &v404[v417];
                    uint64_t v418 = &v405[v417];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v418, 1, v449))
                    {
                      uint64_t v419 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v473, v418, *(void *)(*(void *)(v419 - 8) + 64));
                    }
                    else
                    {
                      v457(v473, v418, v449);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v473, 0, 1, v449);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v404, 0, 1, v406);
                  }
                  _s7Weather24LocationCompositionStateOwst_0(v494, 0, 1, v485);
                }
                uint64_t v293 = (uint64_t)v461;
                *(_OWORD *)((char *)v461 + v351[7]) = *(_OWORD *)&__dste[v351[7]];
                uint64_t v420 = v351[8];
                uint64_t v421 = (char *)v461 + v420;
                uint64_t v422 = &__dste[v420];
                uint64_t v423 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v423 - 8) + 32))(v421, v422, v423);
                *((unsigned char *)v461 + v351[9]) = __dste[v351[9]];
                swift_storeEnumTagMultiPayload();
                uint64_t v134 = v440;
              }
              else
              {
                uint64_t v293 = (uint64_t)v291;
                memcpy(v291, v292, *(void *)(*(void *)(v350 - 8) + 64));
              }
LABEL_221:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v293 = (uint64_t)v291;
              memcpy(v291, v292, *(void *)(*(void *)(v134 - 8) + 64));
              break;
          }
          uint64_t v334 = v488;
          goto LABEL_223;
        }
LABEL_157:
        uint64_t v333 = sub_10017DF08(&qword_100E73818);
        memcpy(v291, v292, *(void *)(*(void *)(v333 - 8) + 64));
        uint64_t v334 = v488;
LABEL_224:
        *(unsigned char *)(v123 + *(int *)(v334 + 36)) = *(unsigned char *)(v124 + *(int *)(v334 + 36));
        *(unsigned char *)(v123 + *(int *)(v334 + 40)) = *(unsigned char *)(v124 + *(int *)(v334 + 40));
        _s7Weather24LocationCompositionStateOwst_0(v123, 0, 1, v334);
        goto LABEL_225;
      }
LABEL_42:
      uint64_t v144 = sub_10017DF08(&qword_100E66E40);
      memcpy((void *)v123, (const void *)v124, *(void *)(*(void *)(v144 - 8) + 64));
LABEL_225:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      long long v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v7;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      uint64_t v8 = (int *)_s11NormalModelVMa();
      uint64_t v9 = v8[7];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for Date();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      v13(&a1[v8[8]], &a2[v8[8]], v12);
      v13(&a1[v8[9]], &a2[v8[9]], v12);
      uint64_t v14 = v8[10];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = v8[11];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v478 = type metadata accessor for AttributedString();
      uint64_t v474 = *(void (**)(char *, char *))(*(void *)(v478 - 8) + 32);
      v474(v19, v20);
      *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
      uint64_t v21 = v8[13];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = type metadata accessor for SunriseSunsetDetailChartViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      uint64_t v25 = v8[14];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = type metadata accessor for Location();
      v468 = *(void (**)(char *, char *))(*(void *)(v28 - 8) + 32);
      uint64_t v470 = v28;
      v468(v26, v27);
      uint64_t v29 = v8[15];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      uint64_t v32 = type metadata accessor for SunEvents();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      uint64_t v33 = v8[16];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      uint64_t v36 = type metadata accessor for OverviewTableViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      uint64_t v37 = v8[17];
      uint64_t v38 = &a1[v37];
      uint64_t v39 = &a2[v37];
      uint64_t v40 = type metadata accessor for DaylightStringBuilder();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      uint64_t v41 = v8[18];
      uint64_t v42 = &a1[v41];
      uint64_t v43 = &a2[v41];
      uint64_t v44 = type metadata accessor for DetailComponentContainerViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
      {
        uint64_t v45 = sub_10017DF08(&qword_100E66E28);
        memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        uint64_t v450 = v13;
        long long v85 = *((_OWORD *)v43 + 1);
        *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v85;
        uint64_t v489 = v44;
        uint64_t v86 = *(int *)(v44 + 20);
        long long v87 = &v42[v86];
        uint64_t v88 = &v43[v86];
        uint64_t v89 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v441 = v12;
          *(_OWORD *)long long v87 = *(_OWORD *)v88;
          uint64_t v486 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v90 = v486[5];
          uint64_t v91 = &v87[v90];
          uint64_t v92 = &v88[v90];
          uint64_t v93 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93))
          {
            uint64_t v94 = sub_10017DF08(&qword_100E749B0);
            memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
            uint64_t v95 = *(void *)(v93 - 8);
          }
          else
          {
            uint64_t v95 = *(void *)(v93 - 8);
            (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v91, v92, v93);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v93);
          }
          *(_OWORD *)&v87[v486[6]] = *(_OWORD *)&v88[v486[6]];
          uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v95 + 32);
          v107(&v87[v486[7]], &v88[v486[7]], v93);
          uint64_t v108 = v486[8];
          __dst = &v87[v108];
          uint64_t v109 = &v88[v108];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v88[v108], 1, v93))
          {
            uint64_t v110 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v109, *(void *)(*(void *)(v110 - 8) + 64));
          }
          else
          {
            v107(__dst, v109, v93);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v93);
          }
          v87[v486[9]] = v88[v486[9]];
          swift_storeEnumTagMultiPayload();
          uint64_t v12 = v441;
        }
        else
        {
          memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
        }
        uint64_t v44 = v489;
        uint64_t v115 = *(int *)(v489 + 24);
        uint64_t v116 = &v42[v115];
        uint64_t v117 = &v43[v115];
        uint64_t v118 = type metadata accessor for DetailComponentAction();
        uint64_t v13 = v450;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
        {
          uint64_t v119 = sub_10017DF08(&qword_100E73810);
          memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          uint64_t v120 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v116, v117, v120);
          uint64_t v121 = sub_10017DF08(&qword_100E66478);
          v116[*(int *)(v121 + 48)] = v117[*(int *)(v121 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v489);
      }
      uint64_t v122 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
      uint64_t v123 = (uint64_t)&a1[v122];
      uint64_t v124 = (uint64_t)&a2[v122];
      uint64_t v125 = type metadata accessor for ConditionDetailPlatterViewModel(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v124, 1, v125))
      {
        *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
        *(unsigned char *)(v123 + 16) = *(unsigned char *)(v124 + 16);
        *(_OWORD *)(v123 + 24) = *(_OWORD *)(v124 + 24);
        uint64_t v488 = v125;
        uint64_t v126 = *(int *)(v125 + 24);
        uint64_t v127 = (void *)(v123 + v126);
        uint64_t v128 = (const void *)(v124 + v126);
        uint64_t v129 = type metadata accessor for WeatherDescription();
        uint64_t v491 = v44;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v129))
        {
          uint64_t v130 = sub_10017DF08(&qword_100E63758);
          memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v129);
        }
        uint64_t v131 = v488;
        uint64_t v132 = *(int *)(v488 + 28);
        __dstb = (_OWORD *)(v123 + v132);
        uint64_t v133 = (_OWORD *)(v124 + v132);
        uint64_t v134 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
        uint64_t v458 = v133;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v129 - 8) + 32))(__dstb, v133, v129);
            goto LABEL_126;
          case 2u:
            ((void (*)(_OWORD *, _OWORD *, uint64_t))v474)(__dstb, v133, v478);
            goto LABEL_126;
          case 3u:
            uint64_t v153 = sub_10017DF08(&qword_100E73808);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v153 - 8) + 32))(__dstb, v133, v153);
            goto LABEL_126;
          case 4u:
            uint64_t v452 = v13;
            long long v154 = v133[1];
            _OWORD *__dstb = *v133;
            __dstb[1] = v154;
            uint64_t v155 = *(int *)(v491 + 20);
            uint64_t v156 = (char *)__dstb + v155;
            uint64_t v157 = (char *)v458 + v155;
            uint64_t v158 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v430 = v129;
            uint64_t v434 = v134;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v443 = v12;
              *(_OWORD *)uint64_t v156 = *(_OWORD *)v157;
              uint64_t v159 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v160 = v159[5];
              uint64_t v161 = &v156[v160];
              uint64_t v162 = &v157[v160];
              uint64_t v163 = type metadata accessor for URL();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, v163))
              {
                uint64_t v164 = sub_10017DF08(&qword_100E749B0);
                memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
                uint64_t v165 = *(void *)(v163 - 8);
              }
              else
              {
                uint64_t v165 = *(void *)(v163 - 8);
                (*(void (**)(char *, char *, uint64_t))(v165 + 32))(v161, v162, v163);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v163);
              }
              *(_OWORD *)&v156[v159[6]] = *(_OWORD *)&v157[v159[6]];
              uint64_t v195 = *(void (**)(char *, char *, uint64_t))(v165 + 32);
              v195(&v156[v159[7]], &v157[v159[7]], v163);
              long long v426 = v159;
              uint64_t v196 = v159[8];
              long long v197 = &v156[v196];
              uint64_t v198 = &v157[v196];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v157[v196], 1, v163))
              {
                uint64_t v199 = sub_10017DF08(&qword_100E749B0);
                memcpy(v197, v198, *(void *)(*(void *)(v199 - 8) + 64));
              }
              else
              {
                v195(v197, v198, v163);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v197, 0, 1, v163);
              }
              v156[v426[9]] = v157[v426[9]];
              swift_storeEnumTagMultiPayload();
              uint64_t v12 = v443;
            }
            else
            {
              memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
            }
            uint64_t v219 = *(int *)(v491 + 24);
            uint64_t v220 = (char *)__dstb + v219;
            uint64_t v221 = (char *)v458 + v219;
            uint64_t v222 = type metadata accessor for DetailComponentAction();
            uint64_t v13 = v452;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v222))
            {
              uint64_t v223 = sub_10017DF08(&qword_100E73810);
              memcpy(v220, v221, *(void *)(*(void *)(v223 - 8) + 64));
            }
            else
            {
              uint64_t v224 = type metadata accessor for URL();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v220, v221, v224);
              uint64_t v225 = sub_10017DF08(&qword_100E66478);
              v220[*(int *)(v225 + 48)] = v221[*(int *)(v225 + 48)];
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v220, 0, 1, v222);
            }
            uint64_t v129 = v430;
            uint64_t v134 = v434;
            swift_storeEnumTagMultiPayload();
            uint64_t v131 = v488;
            break;
          case 6u:
            uint64_t v166 = type metadata accessor for PrecipitationTotalPlatterViewModel();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v166 - 8) + 32))(__dstb, v133, v166);
            goto LABEL_126;
          case 7u:
            uint64_t v167 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v431 = v129;
              uint64_t v435 = v134;
              _OWORD *__dstb = *v458;
              uint64_t v168 = type metadata accessor for ConditionDetailMapViewModel();
              ((void (*)(char *, char *, uint64_t))v468)((char *)__dstb + *(int *)(v168 + 20), (char *)v458 + *(int *)(v168 + 20), v470);
              uint64_t v429 = (int *)v168;
              uint64_t v169 = *(int *)(v168 + 24);
              uint64_t v170 = (_OWORD *)((char *)__dstb + v169);
              uint64_t v171 = (_OWORD *)((char *)v458 + v169);
              uint64_t v172 = type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
              {
                uint64_t v173 = sub_10017DF08(&qword_100E63850);
                memcpy(v170, v171, *(void *)(*(void *)(v173 - 8) + 64));
              }
              else
              {
                uint64_t v445 = v12;
                _OWORD *v170 = *v171;
                uint64_t v200 = v171;
                uint64_t v201 = v172;
                uint64_t v202 = *(int *)(v172 + 20);
                uint64_t v203 = (char *)v170 + v202;
                uint64_t v427 = v200;
                uint64_t v204 = (char *)v200 + v202;
                uint64_t v205 = type metadata accessor for Locale();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
                {
                  uint64_t v206 = sub_10017DF08(&qword_100E63730);
                  memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
                }
                uint64_t v233 = (int *)v201;
                uint64_t v234 = *(int *)(v201 + 24);
                uint64_t v235 = (uint64_t)v170;
                uint64_t v236 = v233;
                uint64_t v237 = v235 + v234;
                uint64_t v238 = (uint64_t)v427 + v234;
                uint64_t v239 = type metadata accessor for WeatherDataModel();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v239 - 8) + 32))(v237, v238, v239);
                uint64_t v240 = v236[7];
                uint64_t v241 = (void *)(v235 + v240);
                uint64_t v242 = (char *)v427 + v240;
                uint64_t v243 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v242, 1, v243))
                {
                  uint64_t v244 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v241, v242, *(void *)(*(void *)(v244 - 8) + 64));
                }
                else
                {
                  v13((char *)v241, v242, v445);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v241, 0, 1, v243);
                }
                uint64_t v257 = v236[8];
                unsigned __int8 v258 = (void *)(v235 + v257);
                uint64_t v259 = (char *)v427 + v257;
                uint64_t v260 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v261 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v261 - 8) + 32))(v258, v259, v261);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v258, v259, *(void *)(*(void *)(v260 - 8) + 64));
                }
                uint64_t v262 = v236[9];
                uint64_t v263 = (char *)(v235 + v262);
                uint64_t v264 = (char *)v427 + v262;
                uint64_t v265 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v265))
                {
                  uint64_t v266 = sub_10017DF08(&qword_100E63740);
                  memcpy(v263, v264, *(void *)(*(void *)(v266 - 8) + 64));
                }
                else
                {
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v445))
                  {
                    uint64_t v277 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v263, v264, *(void *)(*(void *)(v277 - 8) + 64));
                  }
                  else
                  {
                    v13(v263, v264, v445);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v445);
                  }
                  uint64_t v279 = *(int *)(v265 + 20);
                  uint64_t v280 = &v263[v279];
                  uint64_t v281 = &v264[v279];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v281, 1, v445))
                  {
                    uint64_t v282 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v280, v281, *(void *)(*(void *)(v282 - 8) + 64));
                  }
                  else
                  {
                    v13(v280, v281, v445);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v445);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v265);
                }
                _s7Weather24LocationCompositionStateOwst_0(v235, 0, 1, (uint64_t)v236);
                uint64_t v12 = v445;
              }
              *(_OWORD *)((char *)__dstb + v429[7]) = *(_OWORD *)((char *)v458 + v429[7]);
              uint64_t v287 = v429[8];
              uint64_t v447 = (char *)__dstb + v287;
              uint64_t v288 = (char *)v458 + v287;
              uint64_t v289 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 32))(v447, v288, v289);
              *((unsigned char *)__dstb + v429[9]) = *((unsigned char *)v458 + v429[9]);
              swift_storeEnumTagMultiPayload();
              uint64_t v129 = v431;
              uint64_t v134 = v435;
              uint64_t v131 = v488;
            }
            else
            {
              memcpy(__dstb, v458, *(void *)(*(void *)(v167 - 8) + 64));
            }
LABEL_126:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dstb, v133, *(void *)(*(void *)(v134 - 8) + 64));
            break;
        }
        uint64_t v290 = *(int *)(v131 + 32);
        v291 = (_OWORD *)(v123 + v290);
        uint64_t v292 = (_OWORD *)(v124 + v290);
        if (!_s7Weather24LocationCompositionStateOwet_0(v124 + v290, 1, v134))
        {
          v460 = v291;
          __dstd = v292;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v293 = (uint64_t)v291;
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v129 - 8) + 32))(v291, v292, v129);
              goto LABEL_212;
            case 2u:
              uint64_t v293 = (uint64_t)v291;
              ((void (*)(_OWORD *, _OWORD *, uint64_t))v474)(v291, v292, v478);
              goto LABEL_212;
            case 3u:
              uint64_t v294 = sub_10017DF08(&qword_100E73808);
              uint64_t v293 = (uint64_t)v291;
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v294 - 8) + 32))(v291, v292, v294);
              goto LABEL_212;
            case 4u:
              uint64_t v293 = (uint64_t)v291;
              v295 = v292;
              long long v296 = v292[1];
              _OWORD *v460 = *v292;
              v460[1] = v296;
              uint64_t v297 = *(int *)(v491 + 20);
              uint64_t v298 = (char *)v460 + v297;
              v299 = (char *)v292 + v297;
              uint64_t v300 = type metadata accessor for NewsArticleComponentViewModel(0);
              uint64_t v438 = v134;
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *(_OWORD *)uint64_t v298 = *(_OWORD *)v299;
                uint64_t v301 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v302 = v301[5];
                uint64_t v303 = &v298[v302];
                uint64_t v304 = &v299[v302];
                uint64_t v305 = type metadata accessor for URL();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v304, 1, v305))
                {
                  uint64_t v306 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v303, v304, *(void *)(*(void *)(v306 - 8) + 64));
                  uint64_t v307 = *(void *)(v305 - 8);
                }
                else
                {
                  uint64_t v480 = *(void *)(v305 - 8);
                  (*(void (**)(char *, char *, uint64_t))(v480 + 32))(v303, v304, v305);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v303, 0, 1, v305);
                  uint64_t v307 = v480;
                }
                *(_OWORD *)&v298[v301[6]] = *(_OWORD *)&v299[v301[6]];
                uint64_t v476 = *(void (**)(char *, char *, uint64_t))(v307 + 32);
                v476(&v298[v301[7]], &v299[v301[7]], v305);
                uint64_t v481 = v301;
                uint64_t v316 = v301[8];
                uint64_t v317 = &v298[v316];
                uint64_t v318 = &v299[v316];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v299[v316], 1, v305))
                {
                  uint64_t v319 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v317, v318, *(void *)(*(void *)(v319 - 8) + 64));
                }
                else
                {
                  v476(v317, v318, v305);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v317, 0, 1, v305);
                }
                v295 = __dstd;
                v298[v481[9]] = v299[v481[9]];
                swift_storeEnumTagMultiPayload();
                uint64_t v293 = (uint64_t)v460;
              }
              else
              {
                memcpy(v298, v299, *(void *)(*(void *)(v300 - 8) + 64));
              }
              uint64_t v325 = *(int *)(v491 + 24);
              uint64_t v326 = (void *)(v293 + v325);
              uint64_t v327 = &v295[v325];
              uint64_t v328 = type metadata accessor for DetailComponentAction();
              if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v327, 1, v328)) {
                goto LABEL_181;
              }
              goto LABEL_180;
            case 6u:
              uint64_t v308 = type metadata accessor for PrecipitationTotalPlatterViewModel();
              uint64_t v293 = (uint64_t)v291;
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v308 - 8) + 32))(v291, v292, v308);
              goto LABEL_212;
            case 7u:
              uint64_t v448 = v12;
              uint64_t v309 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v439 = v134;
                char v455 = (void (*)(void *, char *, uint64_t))v13;
                _OWORD *v291 = *v292;
                uint64_t v310 = (int *)type metadata accessor for ConditionDetailMapViewModel();
                ((void (*)(char *, char *, uint64_t))v468)((char *)v291 + v310[5], (char *)v292 + v310[5], v470);
                uint64_t v311 = v310[6];
                uint64_t v312 = (_OWORD *)((char *)v291 + v311);
                uint64_t v313 = (_OWORD *)((char *)v292 + v311);
                uint64_t v314 = (int *)type metadata accessor for WeatherData(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v313, 1, (uint64_t)v314))
                {
                  uint64_t v315 = sub_10017DF08(&qword_100E63850);
                  memcpy(v312, v313, *(void *)(*(void *)(v315 - 8) + 64));
                }
                else
                {
                  _OWORD *v312 = *v313;
                  uint64_t v320 = v314[5];
                  uint64_t v493 = (uint64_t)v312;
                  uint64_t v321 = (char *)v312 + v320;
                  uint64_t v322 = (char *)v313 + v320;
                  uint64_t v323 = type metadata accessor for Locale();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v322, 1, v323))
                  {
                    uint64_t v324 = sub_10017DF08(&qword_100E63730);
                    memcpy(v321, v322, *(void *)(*(void *)(v324 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 32))(v321, v322, v323);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v321, 0, 1, v323);
                  }
                  uint64_t v370 = v314[6];
                  uint64_t v371 = v493 + v370;
                  uint64_t v372 = (char *)v313 + v370;
                  uint64_t v373 = type metadata accessor for WeatherDataModel();
                  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v373 - 8) + 32))(v371, v372, v373);
                  uint64_t v484 = (uint64_t)v314;
                  uint64_t v374 = v314[7];
                  uint64_t v375 = (void *)(v493 + v374);
                  long long v376 = (char *)v313 + v374;
                  uint64_t v377 = sub_10017DF08(&qword_100E63738);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v376, 1, v377))
                  {
                    uint64_t v378 = type metadata accessor for WeatherData.CachingState(0);
                    memcpy(v375, v376, *(void *)(*(void *)(v378 - 8) + 64));
                  }
                  else
                  {
                    v455(v375, v376, v448);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v375, 0, 1, v377);
                  }
                  uint64_t v388 = *(int *)(v484 + 32);
                  uint64_t v389 = (void *)(v493 + v388);
                  uint64_t v390 = (char *)v313 + v388;
                  uint64_t v391 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    uint64_t v392 = type metadata accessor for WeatherStatisticsModel();
                    (*(void (**)(void *, char *, uint64_t))(*(void *)(v392 - 8) + 32))(v389, v390, v392);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v389, v390, *(void *)(*(void *)(v391 - 8) + 64));
                  }
                  uint64_t v393 = *(int *)(v484 + 36);
                  uint64_t v394 = (char *)(v493 + v393);
                  uint64_t v395 = (char *)v313 + v393;
                  uint64_t v396 = type metadata accessor for WeatherDataOverrides();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v395, 1, v396))
                  {
                    uint64_t v397 = sub_10017DF08(&qword_100E63740);
                    memcpy(v394, v395, *(void *)(*(void *)(v397 - 8) + 64));
                  }
                  else
                  {
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v395, 1, v448))
                    {
                      uint64_t v408 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v394, v395, *(void *)(*(void *)(v408 - 8) + 64));
                    }
                    else
                    {
                      v455(v394, v395, v448);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v394, 0, 1, v448);
                    }
                    uint64_t v410 = *(int *)(v396 + 20);
                    uint64_t v472 = &v394[v410];
                    uint64_t v411 = &v395[v410];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v411, 1, v448))
                    {
                      uint64_t v412 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v472, v411, *(void *)(*(void *)(v412 - 8) + 64));
                    }
                    else
                    {
                      v455(v472, v411, v448);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v472, 0, 1, v448);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v394, 0, 1, v396);
                  }
                  _s7Weather24LocationCompositionStateOwst_0(v493, 0, 1, v484);
                }
                uint64_t v293 = (uint64_t)v460;
                *(_OWORD *)((char *)v460 + v310[7]) = *(_OWORD *)&__dstd[v310[7]];
                uint64_t v413 = v310[8];
                uint64_t v414 = (char *)v460 + v413;
                uint64_t v415 = &__dstd[v413];
                uint64_t v416 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v416 - 8) + 32))(v414, v415, v416);
                *((unsigned char *)v460 + v310[9]) = __dstd[v310[9]];
                swift_storeEnumTagMultiPayload();
                uint64_t v134 = v439;
              }
              else
              {
                uint64_t v293 = (uint64_t)v291;
                memcpy(v291, v292, *(void *)(*(void *)(v309 - 8) + 64));
              }
LABEL_212:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v293 = (uint64_t)v291;
              memcpy(v291, v292, *(void *)(*(void *)(v134 - 8) + 64));
              break;
          }
          uint64_t v334 = v488;
LABEL_223:
          _s7Weather24LocationCompositionStateOwst_0(v293, 0, 1, v134);
          goto LABEL_224;
        }
        goto LABEL_157;
      }
      goto LABEL_42;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_100749138()
{
  _s11NormalModelVMa();
  if (v0 <= 0x3F)
  {
    sub_100749260();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v5 = &v4;
      _s10PolarModelVMa();
      if (v2 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v6 = &v3;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_100749260()
{
  if (!qword_100E69CD8)
  {
    type metadata accessor for ConditionDetailPlatterViewModel(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E69CD8);
    }
  }
}

uint64_t sub_1007492B8()
{
  uint64_t v3 = _s10PolarModelVMa();
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10019F06C();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100180310();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162E88();
  sub_10074B928(v1, v0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return 0;
    }
    int v9 = *(_DWORD *)(sub_10017DF08(&qword_100E92130) + 48);
    sub_10074BA4C(v0, v1, (void (*)(void))_s10PolarModelVMa);
    uint64_t v10 = *(void *)(v1 + *(int *)(v3 + 44));
    swift_bridgeObjectRetain();
    uint64_t v11 = _s10PolarModelVMa;
    uint64_t v12 = v1;
  }
  else
  {
    int v9 = *(_DWORD *)(sub_10017DF08(&qword_100E92128) + 48);
    sub_10074BA4C(v0, v2, (void (*)(void))_s11NormalModelVMa);
    uint64_t v10 = *(void *)(v2 + 32);
    swift_bridgeObjectRetain();
    uint64_t v11 = _s11NormalModelVMa;
    uint64_t v12 = v2;
  }
  sub_10074B9F4(v12, (void (*)(void))v11);
  sub_1001781AC(v0 + v9, &qword_100E66E40);
  return v10;
}

uint64_t sub_100749474()
{
  uint64_t v3 = _s10PolarModelVMa();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10019F06C();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001A3380();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100189354(v8, v15);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return 0;
    }
    int v10 = *(_DWORD *)(sub_10017DF08(&qword_100E92130) + 48);
    sub_10074BA4C(v0, (uint64_t)v1, (void (*)(void))_s10PolarModelVMa);
    uint64_t v11 = *v1;
    swift_bridgeObjectRetain();
    uint64_t v12 = _s10PolarModelVMa;
    uint64_t v13 = (uint64_t)v1;
  }
  else
  {
    int v10 = *(_DWORD *)(sub_10017DF08(&qword_100E92128) + 48);
    sub_10074BA4C(v0, (uint64_t)v2, (void (*)(void))_s11NormalModelVMa);
    uint64_t v11 = *v2;
    swift_bridgeObjectRetain();
    uint64_t v12 = _s11NormalModelVMa;
    uint64_t v13 = (uint64_t)v2;
  }
  sub_10074B9F4(v13, (void (*)(void))v12);
  sub_1001781AC(v0 + v10, &qword_100E66E40);
  return v11;
}

uint64_t sub_100749618()
{
  uint64_t v3 = _s10PolarModelVMa();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10019F06C();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001A3380();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100189354(v8, v15);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1) {
      return 0;
    }
    int v10 = *(_DWORD *)(sub_10017DF08(&qword_100E92130) + 48);
    sub_10074BA4C(v0, v1, (void (*)(void))_s10PolarModelVMa);
    uint64_t v11 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v12 = _s10PolarModelVMa;
    uint64_t v13 = v1;
  }
  else
  {
    int v10 = *(_DWORD *)(sub_10017DF08(&qword_100E92128) + 48);
    sub_10074BA4C(v0, v2, (void (*)(void))_s11NormalModelVMa);
    uint64_t v11 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v12 = _s11NormalModelVMa;
    uint64_t v13 = v2;
  }
  sub_10074B9F4(v13, (void (*)(void))v12);
  sub_1001781AC(v0 + v10, &qword_100E66E40);
  return v11;
}

#error "100749858: call analysis failed (funcsize=106)"

void sub_100749990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10010977C();
  a17 = v21;
  a18 = v22;
  _s10PolarModelVMa();
  sub_100162E4C();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s11NormalModelVMa();
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_1001A47A8();
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100162E88();
  sub_10074B928(v19, v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    int v29 = *(_DWORD *)(sub_10017DF08(&qword_100E92128) + 48);
    sub_10074BA4C(v18, v20, (void (*)(void))_s11NormalModelVMa);
    swift_bridgeObjectRetain();
    uint64_t v30 = _s11NormalModelVMa;
    uint64_t v31 = v20;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    int v29 = *(_DWORD *)(sub_10017DF08(&qword_100E92130) + 48);
    sub_10074BA4C(v18, (uint64_t)v25, (void (*)(void))_s10PolarModelVMa);
    swift_bridgeObjectRetain();
    uint64_t v30 = _s10PolarModelVMa;
    uint64_t v31 = (uint64_t)v25;
LABEL_5:
    sub_10074B9F4(v31, (void (*)(void))v30);
    sub_1001781AC(v18 + v29, &qword_100E66E40);
  }
  sub_100162714();
}

#error "100749C00: call analysis failed (funcsize=106)"

uint64_t sub_100749D38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v5 = sub_10017DF08(&qword_100E921F0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v54 = v7;
  sub_100129064();
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v51 = v10;
  sub_100129064();
  type metadata accessor for SunriseSunsetChartBackground();
  sub_100179C0C();
  uint64_t v52 = v12;
  uint64_t v53 = v11;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v50 = v13;
  sub_100129064();
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  void v47[2] = v16;
  sub_100129064();
  uint64_t v57 = type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  uint64_t v49 = v17;
  __chkstk_darwin(v18);
  sub_100162EF8();
  v47[1] = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  uint64_t v55 = (char *)v47 - v21;
  sub_100129064();
  uint64_t v56 = type metadata accessor for DetailChartDataElement.ValueLabel();
  sub_100179C0C();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  uint64_t v27 = (void *)((char *)v47 - v26);
  _s10PolarModelVMa();
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100166B4C();
  _s11NormalModelVMa();
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_10011BA28();
  type metadata accessor for SunriseSunsetDetailViewModel();
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_100162F18();
  uint64_t v48 = v1;
  sub_10074B928(v1, v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v35 = v4 + *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    sub_10074BA4C(v4, v2, (void (*)(void))_s11NormalModelVMa);
    type metadata accessor for SunriseSunsetDetailChartViewModel();
    sub_100162E4C();
    sub_10008B8B4();
    v36();
    sub_10074B9F4(v2, (void (*)(void))_s11NormalModelVMa);
    uint64_t v34 = v35;
    return sub_1001781AC(v34, &qword_100E66E40);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v32 = v4 + *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    sub_10074BA4C(v4, v3, (void (*)(void))_s10PolarModelVMa);
    type metadata accessor for SunriseSunsetDetailChartViewModel();
    sub_100162E4C();
    sub_10008B8B4();
    v33();
    sub_10074B9F4(v3, (void (*)(void))_s10PolarModelVMa);
    uint64_t v34 = v32;
    return sub_1001781AC(v34, &qword_100E66E40);
  }
  *uint64_t v27 = 0;
  v27[1] = 0xE000000000000000;
  v47[0] = v23;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v27, enum case for DetailChartDataElement.ValueLabel.text(_:), v56);
  Date.init()();
  sub_100162808();
  v38();
  DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
  Gradient.init(stops:)();
  uint64_t v39 = v50;
  SunriseSunsetChartBackground.init(gradient:opacity:)();
  uint64_t v40 = v49;
  sub_100162808();
  uint64_t v42 = v41();
  sub_10074A2D8(v42);
  Date.init()();
  uint64_t v44 = v52;
  uint64_t v43 = v53;
  uint64_t v45 = v54;
  sub_100162808();
  v46();
  _s7Weather24LocationCompositionStateOwst_0(v45, 0, 1, v43);
  SunriseSunsetDetailChartViewModel.init(chartData:sunLocation:location:twilightCivil:twilightNautical:twilightAstronomical:startDate:sunEventAccessibilityModels:chartBackground:)();
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v39, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v55, v57);
  return (*(uint64_t (**)(void *, uint64_t))(v47[0] + 8))(v27, v56);
}

#error "10074A374: call analysis failed (funcsize=106)"

#error "10074A548: call analysis failed (funcsize=108)"

uint64_t sub_10074A688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  type metadata accessor for SunriseSunsetDetailViewModel();
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10074B928(v2, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v10 = sub_10017DF08(&qword_100E92128);
    sub_10074B98C((uint64_t)&v6[*(int *)(v10 + 48)], a1);
    uint64_t v9 = _s11NormalModelVMa;
    return sub_10074B9F4((uint64_t)v6, (void (*)(void))v9);
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_10017DF08(&qword_100E92130);
    sub_10074B98C((uint64_t)&v6[*(int *)(v8 + 48)], a1);
    uint64_t v9 = _s10PolarModelVMa;
    return sub_10074B9F4((uint64_t)v6, (void (*)(void))v9);
  }
  uint64_t v12 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  return sub_1001633C8(v12);
}

#error "10074A834: call analysis failed (funcsize=95)"

uint64_t sub_10074A948(uint64_t a1)
{
  v39[3] = a1;
  type metadata accessor for Date();
  sub_100179C0C();
  v39[1] = v6;
  v39[2] = v5;
  __chkstk_darwin(v5);
  sub_100182904(v7, v39[0]);
  uint64_t v8 = sub_10017DF08(&qword_100E921E8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100163770();
  _s11NormalModelVMa();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100166B4C();
  type metadata accessor for DayPhase();
  sub_100179C0C();
  uint64_t v41 = v12;
  uint64_t v42 = v11;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v40 = v13;
  sub_100129064();
  uint64_t v14 = type metadata accessor for PolarType();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_10019D82C();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100162F18();
  type metadata accessor for SunriseSunsetDetailViewModel();
  sub_100162E4C();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10074B928(v43, (uint64_t)v21);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    int v28 = *(_DWORD *)(sub_10017DF08(&qword_100E92128) + 48);
    sub_10074BA4C((uint64_t)v21, v2, (void (*)(void))_s11NormalModelVMa);
    uint64_t v29 = type metadata accessor for SunEvents();
    sub_100162E4C();
    sub_10008B8B4();
    v30();
    _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v29);
    sub_10008B8B4();
    v31();
    uint64_t v32 = v40;
    DayPhase.init(sunEvents:date:elevation:)();
    uint64_t v23 = DayPhase.uppercaseDescription.getter();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v32, v42);
    uint64_t v33 = _s11NormalModelVMa;
    uint64_t v34 = v2;
    int v24 = v28;
LABEL_9:
    sub_10074B9F4(v34, (void (*)(void))v33);
    sub_1001781AC((uint64_t)&v21[v24], &qword_100E66E40);
    return v23;
  }
  uint64_t v23 = 0;
  if (EnumCaseMultiPayload != 1) {
    return v23;
  }
  int v24 = *(_DWORD *)(sub_10017DF08(&qword_100E92130) + 48);
  sub_10074BA4C((uint64_t)v21, v4, (void (*)(void))_s10PolarModelVMa);
  sub_100162808();
  v25();
  int v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 88))(v1, v14);
  if (v26 == enum case for PolarType.day(_:))
  {
    uint64_t v27 = (unsigned int *)&enum case for DayPhase.day(_:);
LABEL_8:
    uint64_t v35 = v40;
    uint64_t v36 = v41;
    uint64_t v37 = v42;
    (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v40, *v27, v42);
    uint64_t v23 = DayPhase.uppercaseDescription.getter();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    uint64_t v33 = _s10PolarModelVMa;
    uint64_t v34 = v4;
    goto LABEL_9;
  }
  if (v26 == enum case for PolarType.night(_:))
  {
    uint64_t v27 = (unsigned int *)&enum case for DayPhase.night(_:);
    goto LABEL_8;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10074AD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  _s11NormalModelVMa();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10011BA28();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10019D82C();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100163770();
  type metadata accessor for SunriseSunsetDetailViewModel();
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10074B928(v2, (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v12 = (uint64_t)&v10[*(int *)(sub_10017DF08(&qword_100E92128) + 48)];
    uint64_t v18 = sub_10074BA4C((uint64_t)v10, v3, (void (*)(void))_s11NormalModelVMa);
    sub_100749B64(v18);
    DaylightStringBuilder.makeLollipopDaylightString(for:location:sunEvents:timeZone:)();
    uint64_t v19 = sub_10017FDF8();
    v20(v19);
    uint64_t v16 = _s11NormalModelVMa;
    uint64_t v17 = v3;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = (uint64_t)&v10[*(int *)(sub_10017DF08(&qword_100E92130) + 48)];
    uint64_t v13 = sub_10074BA4C((uint64_t)v10, v4, (void (*)(void))_s10PolarModelVMa);
    sub_100749B64(v13);
    DaylightStringBuilder.makeLollipopPolarDaylightString(for:location:timeZone:)();
    uint64_t v14 = sub_10017FDF8();
    v15(v14);
    uint64_t v16 = _s10PolarModelVMa;
    uint64_t v17 = v4;
LABEL_5:
    sub_10074B9F4(v17, (void (*)(void))v16);
    return sub_1001781AC(v12, &qword_100E66E40);
  }
  uint64_t v22 = type metadata accessor for AttributedString();
  return _s7Weather24LocationCompositionStateOwst_0(v24, 1, 1, v22);
}

uint64_t sub_10074AFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = a1;
  uint64_t v82 = (char *)a2;
  uint64_t v4 = _s10PolarModelVMa();
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v80 = (void *)v6;
  uint64_t v7 = sub_100129064();
  uint64_t v77 = type metadata accessor for ConditionDetailPlatterViewModel(v7);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100182904(v9, (uint64_t)v73);
  uint64_t v76 = sub_10017DF08(&qword_100E6A5F0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v75 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v73 - v13;
  uint64_t v15 = sub_10017DF08(&qword_100E66E40);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v74 = (uint64_t *)v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  uint64_t v78 = (uint64_t)&v73 - v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  uint64_t v79 = (uint64_t)&v73 - v21;
  sub_1001626D4();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v73 - v24);
  uint64_t v26 = __chkstk_darwin(v23);
  int v28 = (char *)&v73 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v73 - v29;
  uint64_t v31 = _s11NormalModelVMa();
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_1001A47A8();
  sub_100162E4C();
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (uint64_t **)((char *)&v73 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v34);
  uint64_t v38 = (uint64_t **)((char *)&v73 - v37);
  uint64_t v39 = sub_10017DF08(&qword_100E921E0);
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100162E88();
  uint64_t v42 = v2 + *(int *)(v41 + 56);
  sub_10074B928(v81, v2);
  sub_10074B928((uint64_t)v82, v42);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (swift_getEnumCaseMultiPayload() == 2)
      {
LABEL_10:
        sub_10074B9F4(v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
        return 1;
      }
      goto LABEL_13;
    }
    sub_10074B928(v2, (uint64_t)v36);
    uint64_t v44 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v45 = v80;
      sub_10074BA4C(v42, (uint64_t)v80, (void (*)(void))_s10PolarModelVMa);
      uint64_t v46 = v79;
      sub_10074B98C((uint64_t)v36 + v44, v79);
      uint64_t v47 = v78;
      sub_10074B98C(v42 + v44, v78);
      BOOL v48 = sub_1007BA648(v36, v45);
      sub_10074B9F4((uint64_t)v36, (void (*)(void))_s10PolarModelVMa);
      if (v48)
      {
        uint64_t v49 = v75;
        uint64_t v50 = v75 + *(int *)(v76 + 48);
        sub_1001B7204(v46, v75, &qword_100E66E40);
        sub_1001B7204(v47, v50, &qword_100E66E40);
        uint64_t v51 = v77;
        if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, v77) == 1)
        {
          sub_1001781AC(v47, &qword_100E66E40);
          sub_1001781AC(v46, &qword_100E66E40);
          sub_10074B9F4((uint64_t)v45, (void (*)(void))_s10PolarModelVMa);
          uint64_t v52 = v50;
          uint64_t v53 = v51;
          goto LABEL_17;
        }
        uint64_t v67 = v74;
        sub_1001B7204(v49, (uint64_t)v74, &qword_100E66E40);
        if (_s7Weather24LocationCompositionStateOwet_0(v50, 1, v51) == 1)
        {
          sub_1001781AC(v47, &qword_100E66E40);
          sub_1001781AC(v46, &qword_100E66E40);
          sub_10074B9F4((uint64_t)v45, (void (*)(void))_s10PolarModelVMa);
          uint64_t v68 = (uint64_t)v67;
LABEL_26:
          sub_10074B9F4(v68, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
LABEL_27:
          sub_1001781AC(v49, &qword_100E6A5F0);
          goto LABEL_31;
        }
        uint64_t v69 = v73;
        sub_10074BA4C(v50, (uint64_t)v73, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        char v70 = sub_100B1F0C8(v67, v69);
        sub_10074B9F4((uint64_t)v69, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_1001781AC(v47, &qword_100E66E40);
        sub_1001781AC(v46, &qword_100E66E40);
        sub_10074B9F4((uint64_t)v45, (void (*)(void))_s10PolarModelVMa);
        sub_10074B9F4((uint64_t)v67, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        uint64_t v71 = v49;
        goto LABEL_30;
      }
      sub_1001781AC(v47, &qword_100E66E40);
      sub_1001781AC(v46, &qword_100E66E40);
      uint64_t v65 = _s10PolarModelVMa;
      uint64_t v66 = (uint64_t)v45;
      goto LABEL_21;
    }
    sub_1001781AC((uint64_t)v36 + v44, &qword_100E66E40);
    uint64_t v56 = _s10PolarModelVMa;
    uint64_t v57 = (uint64_t)v36;
  }
  else
  {
    uint64_t v82 = v28;
    uint64_t v54 = (uint64_t)v30;
    uint64_t v49 = (uint64_t)v14;
    sub_10074B928(v2, (uint64_t)v38);
    uint64_t v55 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v59 = (void *)v3;
      sub_10074BA4C(v42, v3, (void (*)(void))_s11NormalModelVMa);
      uint64_t v60 = v54;
      sub_10074B98C((uint64_t)v38 + v55, v54);
      uint64_t v61 = (uint64_t)v82;
      sub_10074B98C(v42 + v55, (uint64_t)v82);
      BOOL v62 = sub_100992D04(v38, v59);
      sub_10074B9F4((uint64_t)v38, (void (*)(void))_s11NormalModelVMa);
      if (v62)
      {
        uint64_t v63 = (uint64_t)&v14[*(int *)(v76 + 48)];
        sub_1001B7204(v60, (uint64_t)v14, &qword_100E66E40);
        sub_1001B7204(v61, v63, &qword_100E66E40);
        uint64_t v64 = v77;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v77) == 1)
        {
          sub_1001781AC(v61, &qword_100E66E40);
          sub_1001781AC(v60, &qword_100E66E40);
          sub_10074B9F4((uint64_t)v59, (void (*)(void))_s11NormalModelVMa);
          uint64_t v52 = v63;
          uint64_t v53 = v64;
LABEL_17:
          if (_s7Weather24LocationCompositionStateOwet_0(v52, 1, v53) == 1)
          {
            sub_1001781AC(v49, &qword_100E66E40);
            goto LABEL_10;
          }
          goto LABEL_27;
        }
        sub_1001B7204((uint64_t)v14, (uint64_t)v25, &qword_100E66E40);
        if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v64) == 1)
        {
          sub_1001781AC((uint64_t)v82, &qword_100E66E40);
          sub_1001781AC(v60, &qword_100E66E40);
          sub_10074B9F4((uint64_t)v59, (void (*)(void))_s11NormalModelVMa);
          uint64_t v68 = (uint64_t)v25;
          goto LABEL_26;
        }
        uint64_t v72 = v73;
        sub_10074BA4C(v63, (uint64_t)v73, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        char v70 = sub_100B1F0C8(v25, v72);
        sub_10074B9F4((uint64_t)v72, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        sub_1001781AC((uint64_t)v82, &qword_100E66E40);
        sub_1001781AC(v60, &qword_100E66E40);
        sub_10074B9F4((uint64_t)v59, (void (*)(void))_s11NormalModelVMa);
        sub_10074B9F4((uint64_t)v25, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
        uint64_t v71 = (uint64_t)v14;
LABEL_30:
        sub_1001781AC(v71, &qword_100E66E40);
        if (v70) {
          goto LABEL_10;
        }
        goto LABEL_31;
      }
      sub_1001781AC(v61, &qword_100E66E40);
      sub_1001781AC(v60, &qword_100E66E40);
      uint64_t v65 = _s11NormalModelVMa;
      uint64_t v66 = (uint64_t)v59;
LABEL_21:
      sub_10074B9F4(v66, (void (*)(void))v65);
LABEL_31:
      sub_10074B9F4(v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
      return 0;
    }
    sub_1001781AC((uint64_t)v38 + v55, &qword_100E66E40);
    uint64_t v56 = _s11NormalModelVMa;
    uint64_t v57 = (uint64_t)v38;
  }
  sub_10074B9F4(v57, (void (*)(void))v56);
LABEL_13:
  sub_1001781AC(v2, &qword_100E921E0);
  return 0;
}

uint64_t sub_10074B928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10074B98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10074B9F4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10074BA4C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_10074BAAC()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  type metadata accessor for MapsConfiguration();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v8 = type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100109370();
  *(void *)&v15[0] = v4;
  sub_10020D948((uint64_t)v2, (uint64_t)v15 + 8);
  sub_1001B1E64(v2, v2[3]);
  swift_retain();
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.maps.getter();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v8);
  char v12 = MapsConfiguration.enableExitOvlInfo.getter();
  swift_release();
  sub_100162F0C();
  v13();
  char v16 = v12 & 1;
  *(unsigned char *)(v6 + 48) = v12 & 1;
  long long v14 = v15[1];
  *(_OWORD *)uint64_t v6 = v15[0];
  *(_OWORD *)(v6 + 16) = v14;
  *(_OWORD *)(v6 + 32) = v15[2];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_100162694();
}

void sub_10074BC24()
{
  sub_100162EA0();
  uint64_t v36 = v0;
  uint64_t v33 = v3;
  uint64_t v35 = type metadata accessor for ViewData();
  sub_100179C0C();
  uint64_t v32 = v4;
  uint64_t v34 = *(void *)(v5 + 64);
  __chkstk_darwin(v6);
  uint64_t v31 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  uint64_t v30 = type metadata accessor for ViewAction();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100109370();
  uint64_t v11 = type metadata accessor for ViewType();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_100162F18();
  uint64_t v15 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v2, enum case for ViewType.map(_:), v11);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v1, enum case for ViewAction.unknown(_:), v30);
  ViewData.init(viewSessionID:viewType:viewAction:)();
  uint64_t v22 = v35;
  uint64_t v24 = v31;
  uint64_t v23 = v32;
  sub_100162808();
  v25();
  uint64_t v26 = v23;
  unint64_t v27 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v28 + v27, v24, v22);
  Tracker.transaction(block:)();
  swift_release();
  sub_100162694();
}

uint64_t sub_10074BEA0()
{
  return AccessTracker.time<A>(_:submitAndRestartWithSession:)();
}

void sub_10074BF94()
{
  sub_100162EA0();
  uint64_t v59 = v0;
  uint64_t v2 = v1;
  type metadata accessor for ZoomData();
  sub_100179C0C();
  uint64_t v60 = v4;
  uint64_t v61 = v3;
  uint64_t v62 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  sub_1001811B8();
  uint64_t v67 = v6;
  __chkstk_darwin(v7);
  sub_100128F8C();
  uint64_t v66 = v8;
  uint64_t v58 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v56 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v55 = v11;
  uint64_t v12 = type metadata accessor for MapOverlay();
  __chkstk_darwin(v12 - 8);
  sub_1001626E0();
  uint64_t v57 = type metadata accessor for MapOverlayData();
  sub_100179C0C();
  uint64_t v65 = v13;
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v16);
  uint64_t v54 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  sub_100128F8C();
  uint64_t v64 = v18;
  sub_100129064();
  uint64_t v19 = type metadata accessor for EmbedState();
  sub_100179C0C();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v52 = type metadata accessor for MapEmbedStateData();
  sub_100179C0C();
  uint64_t v63 = v26;
  uint64_t v28 = *(void *)(v27 + 64);
  __chkstk_darwin(v29);
  uint64_t v51 = (char *)&v50 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v31 = __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v50 - v32;
  uint64_t v34 = (unsigned int *)&enum case for EmbedState.fullScreen(_:);
  if (!*v2) {
    uint64_t v34 = (unsigned int *)&enum case for EmbedState.pinned(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t, __n128))(v21 + 104))(v25, *v34, v19, v31);
  uint64_t v53 = v33;
  MapEmbedStateData.init(embedState:)();
  uint64_t v35 = type metadata accessor for InteractiveMapViewEvent(0);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v56 + 16))(v55, &v2[*(int *)(v35 + 20)], v58);
  sub_10074C430();
  MapOverlayData.init(overlay:)();
  ZoomData.init(level:)();
  uint64_t v59 = (void *)*v59;
  uint64_t v36 = v63;
  uint64_t v37 = v52;
  sub_100162808();
  v38();
  uint64_t v39 = v57;
  sub_100162808();
  v40();
  sub_100162808();
  v41();
  uint64_t v42 = v36;
  unint64_t v43 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v44 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v42 + 32))(v44 + v43, v51, v37);
  uint64_t v45 = v65;
  sub_1001627D4();
  v46();
  sub_1001627D4();
  v47();
  Tracker.transaction(block:)();
  swift_release();
  sub_100162F0C();
  v48();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v64, v39);
  sub_100162F0C();
  v49();
  sub_100162694();
}

void sub_10074C430()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for Logger();
  sub_100179C0C();
  uint64_t v42 = v4;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = *(void (**)(void))(v8 + 16);
  sub_100182B84();
  v15();
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v14, v6);
  if (v16 == enum case for WeatherMapOverlayKind.precipitation(_:))
  {
    uint64_t v17 = *(void (**)(void))(v8 + 8);
    sub_1001838D8();
    v17();
    type metadata accessor for MapOverlay();
    sub_100162E4C();
    uint64_t v18 = sub_1001A2E00();
    v19(v18);
    sub_1001838D8();
    v17();
    goto LABEL_10;
  }
  if (v16 == enum case for WeatherMapOverlayKind.airQuality(_:))
  {
    sub_1001838D8();
    v20();
    uint64_t v21 = (unsigned int *)&enum case for MapOverlay.airQuality(_:);
LABEL_9:
    uint64_t v24 = *v21;
    type metadata accessor for MapOverlay();
    sub_100162E4C();
    (*(void (**)(uint64_t, uint64_t))(v25 + 104))(v3, v24);
    goto LABEL_10;
  }
  if (v16 == enum case for WeatherMapOverlayKind.temperature(_:))
  {
    sub_1001838D8();
    v22();
    uint64_t v21 = (unsigned int *)&enum case for MapOverlay.temperature(_:);
    goto LABEL_9;
  }
  if (v16 == enum case for WeatherMapOverlayKind.wind(_:))
  {
    sub_1001838D8();
    v23();
    uint64_t v21 = (unsigned int *)&enum case for MapOverlay.wind(_:);
    goto LABEL_9;
  }
  static Logger.map.getter();
  sub_100182B84();
  v15();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  int v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v29 = swift_slowAlloc();
    int v39 = v28;
    uint64_t v30 = (uint8_t *)v29;
    uint64_t v40 = swift_slowAlloc();
    uint64_t v44 = v40;
    *(_DWORD *)uint64_t v30 = 136446210;
    uint64_t v41 = (uint64_t)(v30 + 12);
    uint64_t v37 = v30 + 4;
    uint64_t v38 = v30;
    sub_10074E8EC((unint64_t *)&qword_100E921F8, (void (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind);
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v43 = sub_10016414C(v31, v32, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(void))(v8 + 8);
    uint64_t v41 = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    sub_1001838D8();
    v33();
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v39, "Map overlay kind unknown to InteractiveMapTracker: %{public}s", v38, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    uint64_t v33 = *(void (**)(void))(v8 + 8);
    uint64_t v41 = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    ((void (*)(char *, uint64_t))v33)(v11, v6);
  }

  sub_100162F0C();
  v34();
  ((void (*)(uint64_t, uint64_t))v33)(v1, v6);
  type metadata accessor for MapOverlay();
  sub_100162E4C();
  uint64_t v35 = sub_1001A2E00();
  v36(v35);
  ((void (*)(char *, uint64_t))v33)(v14, v6);
LABEL_10:
  sub_100162694();
}

uint64_t sub_10074C880()
{
  type metadata accessor for MapEmbedStateData();
  sub_10074E8EC(&qword_100E922C0, (void (*)(uint64_t))&type metadata accessor for MapEmbedStateData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for MapOverlayData();
  sub_10074E8EC(&qword_100E92200, (void (*)(uint64_t))&type metadata accessor for MapOverlayData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for ZoomData();
  sub_10074E8EC(&qword_100E922C8, (void (*)(uint64_t))&type metadata accessor for ZoomData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for MapViewEvent();
  sub_10074E8EC(&qword_100E922B8, (void (*)(uint64_t))&type metadata accessor for MapViewEvent);
  memset(v1, 0, sizeof(v1));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_10040B8CC((uint64_t)v1);
}

void sub_10074CA80()
{
  sub_100162EA0();
  uint64_t v124 = v0;
  uint64_t v104 = v2;
  uint64_t v4 = v3;
  uint64_t v120 = type metadata accessor for ViewData();
  sub_100179C0C();
  uint64_t v108 = v5;
  __chkstk_darwin(v6);
  uint64_t v107 = v7;
  uint64_t v118 = &v83[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100129064();
  type metadata accessor for MapStallStatisticsData();
  sub_100179C0C();
  uint64_t v121 = v9;
  uint64_t v122 = v8;
  __chkstk_darwin(v8);
  sub_1001811B8();
  uint64_t v117 = v10;
  uint64_t v105 = v11;
  __chkstk_darwin(v12);
  sub_100128F8C();
  uint64_t v119 = v13;
  sub_100129064();
  uint64_t v101 = type metadata accessor for WeatherMapSessionStatistics.Timing();
  sub_100179C0C();
  uint64_t v100 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v99 = v16;
  sub_100129064();
  uint64_t v97 = type metadata accessor for WeatherMapSessionStatistics.ResponseCounters();
  sub_100179C0C();
  uint64_t v95 = v17;
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v94 = v19;
  sub_100129064();
  uint64_t v116 = type metadata accessor for MapSessionStatisticsData();
  sub_100179C0C();
  uint64_t v106 = v20;
  __chkstk_darwin(v21);
  sub_1001811B8();
  uint64_t v114 = v22;
  uint64_t v102 = v23;
  __chkstk_darwin(v24);
  sub_100128F8C();
  uint64_t v115 = v25;
  uint64_t v111 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v93 = v26;
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v92 = v28;
  uint64_t v29 = type metadata accessor for MapOverlay();
  __chkstk_darwin(v29 - 8);
  sub_100109314();
  uint64_t v91 = v30;
  sub_100129064();
  uint64_t v113 = type metadata accessor for MapOverlayData();
  sub_100179C0C();
  uint64_t v103 = v31;
  __chkstk_darwin(v32);
  sub_1001811B8();
  uint64_t v98 = v33;
  uint64_t v96 = v34;
  __chkstk_darwin(v35);
  sub_100128F8C();
  uint64_t v123 = v36;
  uint64_t v37 = sub_100129064();
  uint64_t v38 = type metadata accessor for WeatherMapExitOverlayEvent(v37);
  sub_100162E4C();
  __chkstk_darwin(v39);
  uint64_t v41 = &v83[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v42);
  uint64_t v44 = &v83[-v43];
  __chkstk_darwin(v45);
  uint64_t v47 = &v83[-v46];
  type metadata accessor for Logger();
  sub_100179C0C();
  uint64_t v109 = v49;
  uint64_t v110 = v48;
  __chkstk_darwin(v48);
  sub_1001626E0();
  uint64_t v50 = type metadata accessor for WeatherMapSessionStatistics.RequestCounters();
  sub_100179C0C();
  uint64_t v52 = v51;
  __chkstk_darwin(v53);
  sub_100162F18();
  uint64_t v112 = v38;
  uint64_t v90 = v4 + *(int *)(v38 + 20);
  WeatherMapSessionStatistics.requestCounters.getter();
  uint64_t v54 = WeatherMapSessionStatistics.RequestCounters.requests.getter();
  uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  uint64_t v89 = v50;
  uint64_t v88 = v55;
  v55(v1, v50);
  if (v54)
  {
    static Logger.mapNetwork.getter();
    sub_10074D508(v4, (uint64_t)v47);
    sub_10074D508(v4, (uint64_t)v44);
    sub_10074D508(v4, (uint64_t)v41);
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.default.getter();
    int v58 = v57;
    BOOL v59 = os_log_type_enabled(v56, v57);
    uint64_t v87 = v4;
    if (v59)
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      v126[0] = v86;
      *(_DWORD *)uint64_t v60 = 136315650;
      os_log_t v85 = v56;
      sub_10074E8EC((unint64_t *)&qword_100E921F8, (void (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind);
      int v84 = v58;
      uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v125 = sub_10016414C(v61, v62, v126);
      sub_10018555C();
      swift_bridgeObjectRelease();
      sub_10074D56C((uint64_t)v47);
      *(_WORD *)(v60 + 12) = 2080;
      Swift::String v63 = WeatherMapSessionStatistics.description()();
      uint64_t v125 = sub_10016414C(v63._countAndFlagsBits, (unint64_t)v63._object, v126);
      sub_10018555C();
      swift_bridgeObjectRelease();
      sub_10074D56C((uint64_t)v44);
      *(_WORD *)(v60 + 22) = 2080;
      Swift::String v64 = WeatherMapStallStatistics.description()();
      uint64_t v125 = sub_10016414C(v64._countAndFlagsBits, (unint64_t)v64._object, v126);
      sub_10018555C();
      swift_bridgeObjectRelease();
      sub_10074D56C((uint64_t)v41);
      uint64_t v56 = v85;
      _os_log_impl((void *)&_mh_execute_header, v85, (os_log_type_t)v84, "Session stats: Removing overlay %s\n%s\n%s", (uint8_t *)v60, 0x20u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      sub_10074D56C((uint64_t)v47);
      sub_10074D56C((uint64_t)v44);
      sub_10074D56C((uint64_t)v41);
    }

    sub_100162F0C();
    v65();
    if (*((unsigned char *)v124 + 48) == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v92, v87, v111);
      sub_10074C430();
      MapOverlayData.init(overlay:)();
      WeatherMapSessionStatistics.requestCounters.getter();
      uint64_t v111 = WeatherMapSessionStatistics.RequestCounters.requests.getter();
      v88(v1, v89);
      WeatherMapSessionStatistics.responseCounters.getter();
      WeatherMapSessionStatistics.ResponseCounters.success.getter();
      uint64_t v66 = *(void (**)(void))(v95 + 8);
      sub_100164F40();
      v66();
      WeatherMapSessionStatistics.responseCounters.getter();
      WeatherMapSessionStatistics.ResponseCounters.cancelled.getter();
      sub_100164F40();
      v66();
      WeatherMapSessionStatistics.responseCounters.getter();
      WeatherMapSessionStatistics.ResponseCounters.error.getter();
      sub_100164F40();
      v66();
      WeatherMapSessionStatistics.timing.getter();
      WeatherMapSessionStatistics.Timing.avgResponseTimeMs.getter();
      sub_100162F0C();
      v67();
      MapSessionStatisticsData.init(totalCalls:successfulCalls:cancelledCalls:errorCalls:avgTime:)();
      WeatherMapStallStatistics.activeTasksCount.getter();
      WeatherMapStallStatistics.tasksStalled.getter();
      WeatherMapStallStatistics.avgStalledTimeMs.getter();
      MapStallStatisticsData.init(activeTaskCount:tasksStalled:avgTimeTaskStalled:)();
      uint64_t v124 = (uint64_t *)*v124;
      uint64_t v68 = v103;
      sub_100162808();
      v69();
      uint64_t v70 = v108;
      sub_100162808();
      v71();
      uint64_t v72 = v106;
      sub_100162808();
      v73();
      sub_100162808();
      v74();
      unint64_t v75 = (v96
           + *(unsigned __int8 *)(v70 + 80)
           + ((*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      uint64_t v76 = swift_allocObject();
      uint64_t v77 = v113;
      sub_1001627D4();
      v78();
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v70 + 32))(v76 + v75, v118, v120);
      uint64_t v79 = v116;
      sub_1001627D4();
      v80();
      sub_1001627D4();
      v81();
      Tracker.transaction(block:)();
      swift_release();
      sub_100162F0C();
      v82();
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v115, v79);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v123, v77);
    }
  }
  sub_100162694();
}

uint64_t type metadata accessor for WeatherMapExitOverlayEvent(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E92278);
}

uint64_t sub_10074D508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapExitOverlayEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10074D56C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapExitOverlayEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10074D5C8()
{
  type metadata accessor for MapOverlayData();
  sub_10074E8EC(&qword_100E92200, (void (*)(uint64_t))&type metadata accessor for MapOverlayData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for ViewData();
  sub_10074E8EC(&qword_100E74D40, (void (*)(uint64_t))&type metadata accessor for ViewData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for MapSessionStatisticsData();
  sub_10074E8EC(&qword_100E92208, (void (*)(uint64_t))&type metadata accessor for MapSessionStatisticsData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for MapStallStatisticsData();
  sub_10074E8EC(&qword_100E92210, (void (*)(uint64_t))&type metadata accessor for MapStallStatisticsData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for MapExitOverlayEvent();
  sub_10074E8EC(&qword_100E92218, (void (*)(uint64_t))&type metadata accessor for MapExitOverlayEvent);
  memset(v1, 0, sizeof(v1));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_10040B8CC((uint64_t)v1);
}

uint64_t sub_10074D830()
{
  uint64_t v22 = type metadata accessor for MapOverlayData();
  sub_100179C0C();
  uint64_t v2 = v1;
  unint64_t v19 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  type metadata accessor for ViewData();
  sub_100179C0C();
  unint64_t v18 = (v19 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v21 = type metadata accessor for MapSessionStatisticsData();
  sub_100179C0C();
  uint64_t v9 = v8;
  unint64_t v10 = (v18 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v20 = type metadata accessor for MapStallStatisticsData();
  sub_100179C0C();
  uint64_t v14 = v13;
  unint64_t v15 = (v10 + v12 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v19, v22);
  sub_100164F40();
  v16();
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v21);
  (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v0 + v15, v20);

  return swift_deallocObject();
}

uint64_t sub_10074D9F0()
{
  uint64_t v0 = type metadata accessor for MapOverlayData();
  sub_100164920(v0);
  uint64_t v1 = type metadata accessor for ViewData();
  sub_100164920(v1);
  uint64_t v2 = type metadata accessor for MapSessionStatisticsData();
  sub_100164920(v2);
  uint64_t v3 = type metadata accessor for MapStallStatisticsData();
  sub_1001627C0(v3);

  return sub_10074D5C8();
}

uint64_t *sub_10074DAF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for WeatherMapSessionStatistics();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for WeatherMapStallStatistics();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_10074DC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for WeatherMapSessionStatistics();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for WeatherMapStallStatistics();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_10074DD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherMapSessionStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for WeatherMapStallStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_10074DE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherMapSessionStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for WeatherMapStallStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_10074DF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherMapSessionStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for WeatherMapStallStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_10074E058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherMapSessionStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for WeatherMapStallStatistics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_10074E160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10074E174);
}

uint64_t sub_10074E174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for WeatherMapSessionStatistics();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = type metadata accessor for WeatherMapStallStatistics();
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10074E214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10074E228);
}

uint64_t sub_10074E228(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for WeatherMapSessionStatistics();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for WeatherMapStallStatistics();
      uint64_t v14 = *(int *)(a4 + 24);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_10074E2D0()
{
  uint64_t result = type metadata accessor for WeatherMapOverlayKind();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherMapSessionStatistics();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for WeatherMapStallStatistics();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeWithCopy for InteractiveMapTracker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for InteractiveMapTracker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for InteractiveMapTracker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractiveMapTracker(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractiveMapTracker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractiveMapTracker()
{
  return &type metadata for InteractiveMapTracker;
}

uint64_t sub_10074E5CC()
{
  type metadata accessor for ViewData();
  sub_100162E4C();
  sub_100162F0C();
  v0();

  return swift_deallocObject();
}

uint64_t sub_10074E650()
{
  uint64_t v0 = type metadata accessor for ViewData();
  sub_1001627C0(v0);

  return sub_10074BEA0();
}

uint64_t type metadata accessor for InteractiveMapViewEvent(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E92328);
}

uint64_t sub_10074E6C0()
{
  uint64_t v16 = type metadata accessor for MapEmbedStateData();
  sub_100179C0C();
  uint64_t v2 = v1;
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  type metadata accessor for MapOverlayData();
  sub_100179C0C();
  unint64_t v7 = (v3 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = type metadata accessor for ZoomData();
  sub_100179C0C();
  uint64_t v12 = v11;
  unint64_t v13 = (v7 + v9 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v16);
  sub_100164F40();
  v14();
  (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v0 + v13, v10);

  return swift_deallocObject();
}

uint64_t sub_10074E81C()
{
  uint64_t v0 = type metadata accessor for MapEmbedStateData();
  sub_100164920(v0);
  uint64_t v1 = type metadata accessor for MapOverlayData();
  sub_100164920(v1);
  uint64_t v2 = type metadata accessor for ZoomData();
  sub_1001627C0(v2);

  return sub_10074C880();
}

uint64_t sub_10074E8EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10074E934(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_10074EA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *sub_10074EA84(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_10074EB1C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_10074EBB4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_10074EC4C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_10074ECE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10074ECF8);
}

uint64_t sub_10074ECF8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for WeatherMapOverlayKind();
    uint64_t v11 = (uint64_t)&a1[*(int *)(a3 + 20)];
    return _s7Weather24LocationCompositionStateOwet_0(v11, a2, v10);
  }
}

uint64_t sub_10074ED80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10074ED94);
}

unsigned char *sub_10074ED94(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
    uint64_t v8 = (uint64_t)&v5[*(int *)(a4 + 20)];
    return (unsigned char *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10074EE10()
{
  uint64_t result = type metadata accessor for WeatherMapOverlayKind();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10074EEB4()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10074EEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a4;
  uint64_t v64 = a1;
  type metadata accessor for WeatherFormatPlaceholder();
  sub_10017C83C();
  uint64_t v61 = v7;
  uint64_t v62 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v60 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v9 - 8);
  sub_100109314();
  uint64_t v53 = v10;
  uint64_t v57 = type metadata accessor for WeatherFormatScaling();
  sub_10017C83C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  sub_10017C83C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  sub_10017C83C();
  uint64_t v58 = v23;
  uint64_t v59 = v22;
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v54 = v24;
  if (a3) {
    uint64_t v25 = sub_10074F350(a2);
  }
  else {
    uint64_t v25 = sub_10074F8D8(a2);
  }
  uint64_t v55 = v26;
  uint64_t v56 = v25;
  sub_10017DF08(&qword_100E6E908);
  uint64_t v27 = type metadata accessor for WeatherDescription.Argument();
  uint64_t v51 = v27;
  sub_10017C83C();
  uint64_t v29 = v28;
  uint64_t v31 = *(void *)(v30 + 72);
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v33 = swift_allocObject();
  uint64_t v52 = v33;
  *(_OWORD *)(v33 + 16) = xmmword_100C25ED0;
  uint64_t v34 = (uint64_t *)(v33 + v32);
  v48[1] = sub_10017DF08(&qword_100E6B648);
  Measurement.value.getter();
  *uint64_t v34 = Double.pluralRuleInteger.getter();
  uint64_t v50 = *(void (**)(void))(v29 + 104);
  ((void (*)(uint64_t *, void, uint64_t))v50)(v34, enum case for WeatherDescription.Argument.pluralRule(_:), v27);
  uint64_t v49 = (uint64_t *)((char *)v34 + v31);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v21, enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:), v16);
  uint64_t v35 = v57;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, enum case for WeatherFormatScaling.asProvidedButRounded(_:), v57);
  uint64_t v36 = type metadata accessor for Locale();
  uint64_t v37 = v53;
  _s7Weather24LocationCompositionStateOwst_0(v53, 1, 1, v36);
  static Set<>.full.getter();
  uint64_t v38 = v54;
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v37);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v35);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
  uint64_t v40 = v60;
  uint64_t v39 = v61;
  uint64_t v41 = v62;
  (*(void (**)(uint64_t, void, uint64_t))(v61 + 104))(v60, enum case for WeatherFormatPlaceholder.none(_:), v62);
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  sub_1001D482C();
  uint64_t v42 = v59;
  uint64_t v43 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v45 = v44;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v38, v42);
  uint64_t v46 = v49;
  uint64_t *v49 = v43;
  v46[1] = v45;
  v50();
  return WeatherDescription.init(format:_:)();
}

uint64_t sub_10074F350(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000049;
      unint64_t v3 = 0xD000000000000099;
      unint64_t v14 = 0x8000000100CB1270;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_january_with_calendar_string";
      goto LABEL_17;
    case 2:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD00000000000009BLL;
      unint64_t v14 = 0x8000000100CB1180;
      uint64_t v9 = "averages_monthly_total_precipitation_summary_february_with_calendar_string";
      goto LABEL_20;
    case 3:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000047;
      unint64_t v3 = 0xD000000000000095;
      unint64_t v14 = 0x8000000100CB1090;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_march_with_calendar_string";
      goto LABEL_17;
    case 4:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000047;
      unint64_t v3 = 0xD000000000000095;
      unint64_t v14 = 0x8000000100CB0FA0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_april_with_calendar_string";
      goto LABEL_17;
    case 5:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000045;
      unint64_t v3 = 0xD000000000000091;
      unint64_t v14 = 0x8000000100CB0EB0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_may_with_calendar_string";
      goto LABEL_17;
    case 6:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000046;
      unint64_t v3 = 0xD000000000000093;
      unint64_t v14 = 0x8000000100CB0DC0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_june_with_calendar_string";
      goto LABEL_17;
    case 7:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000046;
      unint64_t v3 = 0xD000000000000093;
      unint64_t v14 = 0x8000000100CB0CD0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_july_with_calendar_string";
      goto LABEL_17;
    case 8:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000048;
      unint64_t v3 = 0xD000000000000097;
      unint64_t v14 = 0x8000000100CB0BE0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_august_with_calendar_string";
      goto LABEL_17;
    case 9:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD00000000000004BLL;
      unint64_t v3 = 0xD00000000000009DLL;
      unint64_t v14 = 0x8000000100CB0AF0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_september_with_calendar_string";
      goto LABEL_17;
    case 10:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000049;
      unint64_t v3 = 0xD000000000000099;
      unint64_t v14 = 0x8000000100CB0A00;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_october_with_calendar_string";
      goto LABEL_17;
    case 11:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD00000000000009BLL;
      unint64_t v14 = 0x8000000100CB0910;
      uint64_t v9 = "averages_monthly_total_precipitation_summary_november_with_calendar_string";
      goto LABEL_20;
    case 12:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD00000000000009BLL;
      unint64_t v14 = 0x8000000100CB0820;
      uint64_t v9 = "averages_monthly_total_precipitation_summary_december_with_calendar_string";
LABEL_20:
      unint64_t v10 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD00000000000004ALL;
      break;
    default:
      if (qword_100E62810 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_1002102B0(v5, (uint64_t)qword_100F51F38);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Encountered an unexpected monthOfYear while building the monthly average summary string. monthOfYear=%ld", v8, 0xCu);
        swift_slowDealloc();
      }

      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000037;
      unint64_t v3 = 0xD0000000000000DELL;
      unint64_t v14 = 0x8000000100CB06F0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_this_month";
LABEL_17:
      unint64_t v10 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
  }
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, (NSBundle)v1, v11, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10074F8D8(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000034;
      unint64_t v3 = 0xD000000000000099;
      unint64_t v14 = 0x8000000100CB1270;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_january";
      goto LABEL_17;
    case 2:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD00000000000009BLL;
      unint64_t v14 = 0x8000000100CB1180;
      uint64_t v9 = "averages_monthly_total_precipitation_summary_february";
      goto LABEL_20;
    case 3:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000032;
      unint64_t v3 = 0xD000000000000095;
      unint64_t v14 = 0x8000000100CB1090;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_march";
      goto LABEL_17;
    case 4:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000032;
      unint64_t v3 = 0xD000000000000095;
      unint64_t v14 = 0x8000000100CB0FA0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_april";
      goto LABEL_17;
    case 5:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000030;
      unint64_t v3 = 0xD000000000000091;
      unint64_t v14 = 0x8000000100CB0EB0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_may";
      goto LABEL_17;
    case 6:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000031;
      unint64_t v3 = 0xD000000000000093;
      unint64_t v14 = 0x8000000100CB0DC0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_june";
      goto LABEL_17;
    case 7:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000031;
      unint64_t v3 = 0xD000000000000093;
      unint64_t v14 = 0x8000000100CB0CD0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_july";
      goto LABEL_17;
    case 8:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000033;
      unint64_t v3 = 0xD000000000000097;
      unint64_t v14 = 0x8000000100CB0BE0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_august";
      goto LABEL_17;
    case 9:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000036;
      unint64_t v3 = 0xD00000000000009DLL;
      unint64_t v14 = 0x8000000100CB0AF0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_september";
      goto LABEL_17;
    case 10:
      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000034;
      unint64_t v3 = 0xD000000000000099;
      unint64_t v14 = 0x8000000100CB0A00;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_october";
      goto LABEL_17;
    case 11:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD00000000000009BLL;
      unint64_t v14 = 0x8000000100CB0910;
      uint64_t v9 = "averages_monthly_total_precipitation_summary_november";
      goto LABEL_20;
    case 12:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD00000000000009BLL;
      unint64_t v14 = 0x8000000100CB0820;
      uint64_t v9 = "averages_monthly_total_precipitation_summary_december";
LABEL_20:
      unint64_t v10 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000035;
      break;
    default:
      if (qword_100E62810 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_1002102B0(v5, (uint64_t)qword_100F51F38);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Encountered an unexpected monthOfYear while building the monthly average summary string. monthOfYear=%ld", v8, 0xCu);
        swift_slowDealloc();
      }

      id v1 = [self mainBundle];
      unint64_t v2 = 0xD000000000000037;
      unint64_t v3 = 0xD0000000000000DELL;
      unint64_t v14 = 0x8000000100CB06F0;
      unsigned int v4 = "averages_monthly_total_precipitation_summary_this_month";
LABEL_17:
      unint64_t v10 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
  }
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, (NSBundle)v1, v11, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

ValueMetadata *type metadata accessor for PrecipitationMonthlyAveragesSummaryStringBuilder()
{
  return &type metadata for PrecipitationMonthlyAveragesSummaryStringBuilder;
}

uint64_t *sub_10074FE70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
    return a1;
  }
  uint64_t v9 = a2[1];
  *a1 = *a2;
  a1[1] = v9;
  uint64_t v10 = a2[3];
  a1[2] = a2[2];
  a1[3] = v10;
  uint64_t v11 = a2[5];
  a1[4] = a2[4];
  a1[5] = v11;
  uint64_t v12 = a2[7];
  a1[6] = a2[6];
  a1[7] = v12;
  *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  uint64_t v13 = a2[14];
  a1[13] = a2[13];
  a1[14] = v13;
  uint64_t v14 = a2[16];
  a1[15] = a2[15];
  a1[16] = v14;
  a1[17] = a2[17];
  uint64_t v135 = (int *)v7;
  uint64_t v15 = *(int *)(v7 + 56);
  __dst = (char *)a1 + v15;
  uint64_t v130 = (char *)a2 + v15;
  uint64_t v16 = type metadata accessor for AirPollutant();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(__dst, v130, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v130, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v16);
  }
  uint64_t v18 = v135[15];
  uint64_t v19 = (uint64_t *)((char *)a1 + v18);
  uint64_t v20 = (uint64_t *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  if (v21)
  {
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v19[2] = v20[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    uint64_t v19[2] = v20[2];
  }
  uint64_t v22 = v135[16];
  uint64_t v23 = a2;
  uint64_t v24 = *(void **)((char *)a2 + v22);
  *(uint64_t *)((char *)a1 + v22) = (uint64_t)v24;
  *(uint64_t *)((char *)a1 + v135[17]) = *(uint64_t *)((char *)v23 + v135[17]);
  uint64_t v25 = v135[18];
  __dsta = a1;
  uint64_t v26 = (uint64_t *)((char *)a1 + v25);
  uint64_t v134 = v23;
  uint64_t v27 = (char *)v23 + v25;
  uint64_t v28 = *(uint64_t *)((char *)v23 + v25 + 8);
  *uint64_t v26 = *(uint64_t *)((char *)v23 + v25);
  v26[1] = v28;
  uint64_t v29 = type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v30 = *(int *)(v29 + 20);
  uint64_t v131 = (char *)v26 + v30;
  uint64_t v31 = &v27[v30];
  uint64_t v32 = type metadata accessor for Location();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
  id v34 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(v131, v31, v32);
  uint64_t v35 = (int *)v29;
  uint64_t v36 = *(int *)(v29 + 24);
  uint64_t v37 = (void *)((char *)v26 + v36);
  uint64_t v132 = v27;
  uint64_t v38 = &v27[v36];
  uint64_t v39 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, (uint64_t)v39))
  {
    uint64_t v125 = v26;
    uint64_t v42 = *((void *)v38 + 1);
    *uint64_t v37 = *(void *)v38;
    v37[1] = v42;
    uint64_t v43 = v39[5];
    uint64_t v44 = (char *)v37 + v43;
    uint64_t v45 = &v38[v43];
    uint64_t v46 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
    {
      uint64_t v47 = sub_10017DF08(&qword_100E63730);
      memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
    }
    uint64_t v41 = v134;
    uint64_t v48 = v39[6];
    uint64_t v49 = (char *)v37 + v48;
    uint64_t v50 = &v38[v48];
    uint64_t v51 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = v39[7];
    uint64_t v53 = (char *)v37 + v52;
    uint64_t v54 = &v38[v52];
    uint64_t v55 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
    {
      uint64_t v56 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      uint64_t v57 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v53, v54, v57);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
    }
    uint64_t v58 = v39[8];
    uint64_t v59 = (void *)((char *)v37 + v58);
    uint64_t v60 = &v38[v58];
    uint64_t v61 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v64 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v59, v60, v64);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
        goto LABEL_25;
      }
      uint64_t v63 = *((void *)v60 + 1);
      void *v59 = *(void *)v60;
      v59[1] = v63;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_25:
    uint64_t v65 = v39[9];
    uint64_t v66 = (char *)v37 + v65;
    uint64_t v67 = &v38[v65];
    uint64_t v68 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
    {
      uint64_t v69 = sub_10017DF08(&qword_100E63740);
      memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      uint64_t v70 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v70))
      {
        uint64_t v71 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v66, v67, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v70);
      }
      uint64_t v72 = *(int *)(v68 + 20);
      uint64_t v73 = &v66[v72];
      uint64_t v74 = &v67[v72];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v70))
      {
        uint64_t v75 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v73, v74, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v70);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
    }
    uint64_t v26 = v125;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, (uint64_t)v39);
    goto LABEL_35;
  }
  uint64_t v40 = sub_10017DF08(&qword_100E63850);
  memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  uint64_t v41 = v134;
LABEL_35:
  uint64_t v76 = v35[7];
  uint64_t v77 = (void *)((char *)v26 + v76);
  uint64_t v78 = &v27[v76];
  uint64_t v79 = *((void *)v78 + 1);
  *uint64_t v77 = *(void *)v78;
  v77[1] = v79;
  uint64_t v80 = v35[8];
  uint64_t v81 = (char *)v26 + v80;
  uint64_t v82 = &v27[v80];
  uint64_t v83 = type metadata accessor for WeatherMapOverlayKind();
  int v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
  swift_bridgeObjectRetain();
  v84(v81, v82, v83);
  *((unsigned char *)v26 + v35[9]) = v132[v35[9]];
  uint64_t v85 = v135[19];
  a1 = __dsta;
  uint64_t v86 = (uint64_t *)((char *)__dsta + v85);
  uint64_t v87 = (uint64_t *)((char *)v41 + v85);
  uint64_t v88 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v88))
  {
    uint64_t v89 = sub_10017DF08(&qword_100E66E28);
    memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    uint64_t v90 = v87[1];
    if (v90)
    {
      *uint64_t v86 = *v87;
      v86[1] = v90;
      uint64_t v91 = v87[3];
      v86[2] = v87[2];
      v86[3] = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v92 = *((_OWORD *)v87 + 1);
      *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v92;
    }
    uint64_t v93 = *(int *)(v88 + 20);
    uint64_t v94 = (void *)((char *)v86 + v93);
    uint64_t v95 = (void *)((char *)v87 + v93);
    uint64_t v96 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v97 = v95[1];
      *uint64_t v94 = *v95;
      v94[1] = v97;
      uint64_t v133 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v98 = v133[5];
      uint64_t v126 = (char *)v94 + v98;
      uint64_t v99 = (char *)v95 + v98;
      uint64_t v100 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
      {
        uint64_t v101 = sub_10017DF08(&qword_100E749B0);
        memcpy(v126, v99, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v126, v99, v100);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v100);
      }
      uint64_t v102 = v133[6];
      uint64_t v103 = (void *)((char *)v94 + v102);
      uint64_t v104 = (void *)((char *)v95 + v102);
      uint64_t v105 = v104[1];
      *uint64_t v103 = *v104;
      v103[1] = v105;
      uint64_t v106 = v133[7];
      uint64_t v127 = (char *)v94 + v106;
      uint64_t v107 = (char *)v95 + v106;
      uint64_t v108 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
      swift_bridgeObjectRetain();
      v108(v127, v107, v100);
      uint64_t v109 = v133[8];
      uint64_t v110 = (char *)v94 + v109;
      uint64_t v111 = (char *)v95 + v109;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95 + v109, 1, v100))
      {
        uint64_t v112 = sub_10017DF08(&qword_100E749B0);
        memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        v108(v110, v111, v100);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v100);
      }
      uint64_t v41 = v134;
      *((unsigned char *)v94 + v133[9]) = *((unsigned char *)v95 + v133[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
    }
    uint64_t v113 = *(int *)(v88 + 24);
    uint64_t v114 = (char *)v86 + v113;
    uint64_t v115 = (char *)v87 + v113;
    uint64_t v116 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116))
    {
      uint64_t v117 = sub_10017DF08(&qword_100E73810);
      memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
    }
    else
    {
      uint64_t v118 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v114, v115, v118);
      uint64_t v119 = sub_10017DF08(&qword_100E66478);
      v114[*(int *)(v119 + 48)] = v115[*(int *)(v119 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v88);
  }
  *((unsigned char *)__dsta + v135[20]) = *((unsigned char *)v41 + v135[20]);
  uint64_t v120 = v135[21];
  uint64_t v121 = (char *)__dsta + v120;
  uint64_t v122 = (uint64_t)v41 + v120;
  uint64_t v123 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, (uint64_t)v135);
  return a1;
}

uint64_t type metadata accessor for AirQualityDetailViewModel.Model(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E924E0);
}

uint64_t sub_100750A8C(uint64_t a1)
{
  unint64_t v2 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[14];
    uint64_t v5 = type metadata accessor for AirPollutant();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
    if (*(void *)(a1 + v2[15] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    uint64_t v6 = a1 + v2[18];
    swift_bridgeObjectRelease();
    uint64_t v7 = (int *)type metadata accessor for ConditionDetailMapViewModel();
    uint64_t v8 = v6 + v7[5];
    uint64_t v9 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = v6 + v7[6];
    uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, (uint64_t)v11))
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = v10 + v11[5];
      uint64_t v13 = type metadata accessor for Locale();
      if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = v10 + v11[6];
      uint64_t v15 = type metadata accessor for WeatherDataModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      uint64_t v16 = v10 + v11[7];
      uint64_t v17 = sub_10017DF08(&qword_100E63738);
      if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
      {
        uint64_t v18 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
      }
      uint64_t v19 = v10 + v11[8];
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v21 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v22 = v10 + v11[9];
      uint64_t v23 = type metadata accessor for WeatherDataOverrides();
      if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23))
      {
        uint64_t v24 = type metadata accessor for Date();
        if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v24)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
        }
        uint64_t v25 = v22 + *(int *)(v23 + 20);
        if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v24)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v25, v24);
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = v6 + v7[8];
    uint64_t v27 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    uint64_t v28 = a1 + v2[19];
    uint64_t v29 = type metadata accessor for DetailComponentContainerViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29))
    {
      if (*(void *)(v28 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v30 = v28 + *(int *)(v29 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v32 = v30 + v31[5];
        uint64_t v33 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
        }
        swift_bridgeObjectRelease();
        id v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8);
        v34(v30 + v31[7], v33);
        uint64_t v35 = v30 + v31[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v33)) {
          v34(v35, v33);
        }
      }
      uint64_t v36 = v28 + *(int *)(v29 + 24);
      uint64_t v37 = type metadata accessor for DetailComponentAction();
      if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v37))
      {
        uint64_t v38 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v36, v38);
      }
    }
    uint64_t v39 = a1 + v2[21];
    uint64_t v40 = type metadata accessor for LocationDetailEntity();
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8);
    return v41(v39, v40);
  }
  return result;
}

void *sub_1007510B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  uint64_t v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  uint64_t v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  uint64_t v11 = a2[14];
  uint64_t v12 = a2[15];
  a1[13] = a2[13];
  a1[14] = v11;
  uint64_t v13 = a2[16];
  uint64_t v14 = a2[17];
  a1[15] = v12;
  a1[16] = v13;
  a1[17] = v14;
  uint64_t v135 = a2;
  uint64_t v136 = (int *)v6;
  uint64_t v15 = *(int *)(v6 + 56);
  __dst = (char *)a1 + v15;
  uint64_t v16 = (char *)a2 + v15;
  uint64_t v17 = type metadata accessor for AirPollutant();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v17);
  }
  uint64_t v19 = v136[15];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  uint64_t v23 = a1;
  if (v22)
  {
    void *v20 = *v21;
    v20[1] = v22;
    v20[2] = v21[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    v20[2] = v21[2];
  }
  uint64_t v24 = v136[16];
  uint64_t v25 = *(void **)((char *)a2 + v24);
  *(void *)((char *)v23 + v24) = v25;
  *(void *)((char *)v23 + v136[17]) = *(void *)((char *)a2 + v136[17]);
  uint64_t v26 = v136[18];
  uint64_t v130 = v23;
  uint64_t v27 = (void *)((char *)v23 + v26);
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = *(void *)((char *)a2 + v26 + 8);
  *uint64_t v27 = *(void *)((char *)a2 + v26);
  v27[1] = v29;
  uint64_t v30 = type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v31 = *(int *)(v30 + 20);
  __dstb = (char *)v27 + v31;
  uint64_t v32 = &v28[v31];
  uint64_t v33 = type metadata accessor for Location();
  id v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
  id v35 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(__dstb, v32, v33);
  uint64_t v36 = (int *)v30;
  uint64_t v37 = *(int *)(v30 + 24);
  uint64_t v38 = (void *)((char *)v27 + v37);
  uint64_t v39 = &v28[v37];
  uint64_t v40 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, (uint64_t)v40))
  {
    uint64_t v129 = v27;
    uint64_t v43 = *((void *)v39 + 1);
    *uint64_t v38 = *(void *)v39;
    v38[1] = v43;
    uint64_t v44 = v40[5];
    uint64_t v45 = (char *)v38 + v44;
    uint64_t v46 = &v39[v44];
    uint64_t v47 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_10017DF08(&qword_100E63730);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    uint64_t v49 = v40[6];
    uint64_t v50 = (char *)v38 + v49;
    uint64_t v51 = &v39[v49];
    uint64_t v52 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    uint64_t v53 = v40[7];
    uint64_t v54 = (char *)v38 + v53;
    uint64_t v55 = &v39[v53];
    uint64_t v56 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
    {
      uint64_t v57 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      uint64_t v58 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v54, v55, v58);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
    }
    uint64_t v59 = v40[8];
    uint64_t v60 = (void *)((char *)v38 + v59);
    uint64_t v61 = &v39[v59];
    uint64_t v62 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v65 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v60, v61, v65);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
        goto LABEL_23;
      }
      uint64_t v64 = *((void *)v61 + 1);
      void *v60 = *(void *)v61;
      v60[1] = v64;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    uint64_t v66 = v40[9];
    uint64_t v67 = (char *)v38 + v66;
    uint64_t v68 = &v39[v66];
    uint64_t v69 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
    {
      uint64_t v70 = sub_10017DF08(&qword_100E63740);
      memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      uint64_t v71 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v71))
      {
        uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v67, v68, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v67, v68, v71);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v71);
      }
      uint64_t v73 = *(int *)(v69 + 20);
      uint64_t v74 = &v67[v73];
      uint64_t v75 = &v68[v73];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v71))
      {
        uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v74, v75, v71);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v71);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
    }
    uint64_t v27 = v129;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, (uint64_t)v40);
    uint64_t v42 = v130;
    goto LABEL_33;
  }
  uint64_t v41 = sub_10017DF08(&qword_100E63850);
  memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  uint64_t v42 = v130;
LABEL_33:
  uint64_t v77 = v36[7];
  uint64_t v78 = (void *)((char *)v27 + v77);
  uint64_t v79 = &v28[v77];
  uint64_t v80 = *((void *)v79 + 1);
  *uint64_t v78 = *(void *)v79;
  v78[1] = v80;
  uint64_t v81 = v36[8];
  uint64_t v82 = (char *)v27 + v81;
  uint64_t v83 = &v28[v81];
  uint64_t v84 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
  swift_bridgeObjectRetain();
  v85(v82, v83, v84);
  *((unsigned char *)v27 + v36[9]) = v28[v36[9]];
  uint64_t v86 = v135;
  uint64_t v87 = v136[19];
  a1 = v42;
  uint64_t v88 = (void *)((char *)v42 + v87);
  uint64_t v89 = (void *)((char *)v135 + v87);
  uint64_t v90 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90))
  {
    uint64_t v91 = sub_10017DF08(&qword_100E66E28);
    memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    uint64_t v92 = v89[1];
    if (v92)
    {
      *uint64_t v88 = *v89;
      v88[1] = v92;
      uint64_t v93 = v89[3];
      v88[2] = v89[2];
      v88[3] = v93;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v94 = *((_OWORD *)v89 + 1);
      *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
      *((_OWORD *)v88 + 1) = v94;
    }
    uint64_t v95 = *(int *)(v90 + 20);
    uint64_t v96 = (void *)((char *)v88 + v95);
    uint64_t v97 = (void *)((char *)v89 + v95);
    uint64_t v98 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v99 = v97[1];
      *uint64_t v96 = *v97;
      v96[1] = v99;
      __dsta = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v100 = __dsta[5];
      uint64_t v101 = (char *)v96 + v100;
      uint64_t v102 = (char *)v97 + v100;
      uint64_t v103 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v103))
      {
        uint64_t v104 = sub_10017DF08(&qword_100E749B0);
        memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v103);
      }
      uint64_t v105 = __dsta[6];
      uint64_t v106 = (void *)((char *)v96 + v105);
      uint64_t v107 = (void *)((char *)v97 + v105);
      uint64_t v108 = v107[1];
      void *v106 = *v107;
      v106[1] = v108;
      uint64_t v109 = __dsta[7];
      uint64_t v110 = (char *)v96 + v109;
      uint64_t v131 = v96;
      uint64_t v111 = (char *)v97 + v109;
      uint64_t v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
      swift_bridgeObjectRetain();
      v112(v110, v111, v103);
      uint64_t v113 = __dsta[8];
      uint64_t v114 = (char *)v131 + v113;
      uint64_t v115 = (char *)v97 + v113;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97 + v113, 1, v103))
      {
        uint64_t v116 = sub_10017DF08(&qword_100E749B0);
        memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        v112(v114, v115, v103);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v103);
      }
      uint64_t v86 = v135;
      *((unsigned char *)v131 + __dsta[9]) = *((unsigned char *)v97 + __dsta[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
    }
    uint64_t v117 = *(int *)(v90 + 24);
    uint64_t v118 = (char *)v88 + v117;
    uint64_t v119 = (char *)v89 + v117;
    uint64_t v120 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
    {
      uint64_t v121 = sub_10017DF08(&qword_100E73810);
      memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
    }
    else
    {
      uint64_t v122 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v118, v119, v122);
      uint64_t v123 = sub_10017DF08(&qword_100E66478);
      v118[*(int *)(v123 + 48)] = v119[*(int *)(v123 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v90);
  }
  *((unsigned char *)a1 + v136[20]) = *((unsigned char *)v86 + v136[20]);
  uint64_t v124 = v136[21];
  uint64_t v125 = (char *)a1 + v124;
  uint64_t v126 = (uint64_t)v86 + v124;
  uint64_t v127 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v136);
  return a1;
}

uint64_t sub_100751C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1001BC1DC(a1, (void (*)(void))type metadata accessor for AirQualityDetailViewModel.Model);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = v6[14];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    uint64_t v17 = type metadata accessor for AirPollutant();
    int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
    int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v45 = *(void *)(v17 - 8);
      if (!v19)
      {
        (*(void (**)(void *, const void *, uint64_t))(v45 + 24))(v15, v16, v17);
LABEL_22:
        uint64_t v47 = v6[15];
        uint64_t v48 = (void *)(a1 + v47);
        uint64_t v49 = (void *)(a2 + v47);
        uint64_t v50 = *(void *)(a1 + v47 + 8);
        uint64_t v51 = *(void *)(a2 + v47 + 8);
        if (v50)
        {
          if (v51)
          {
            *uint64_t v48 = *v49;
            v48[1] = v49[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            void v48[2] = v49[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1004C3C74((uint64_t)v48);
            uint64_t v61 = v49[2];
            *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
            void v48[2] = v61;
          }
        }
        else if (v51)
        {
          *uint64_t v48 = *v49;
          v48[1] = v49[1];
          void v48[2] = v49[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v76 = *(_OWORD *)v49;
          void v48[2] = v49[2];
          *(_OWORD *)uint64_t v48 = v76;
        }
        uint64_t v77 = v6[16];
        uint64_t v78 = *(void **)(a1 + v77);
        uint64_t v79 = *(void **)(a2 + v77);
        *(void *)(a1 + v77) = v79;
        id v80 = v79;

        *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v81 = v6[18];
        uint64_t v82 = (void *)(a1 + v81);
        uint64_t v83 = a2 + v81;
        *uint64_t v82 = *(void *)(a2 + v81);
        v82[1] = *(void *)(a2 + v81 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v84 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v85 = v84[5];
        uint64_t v86 = (char *)v82 + v85;
        uint64_t v87 = v83 + v85;
        uint64_t v88 = type metadata accessor for Location();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 24))(v86, v87, v88);
        uint64_t v89 = v84[6];
        uint64_t v90 = (void *)((char *)v82 + v89);
        uint64_t v91 = (void *)(v83 + v89);
        uint64_t v92 = (int *)type metadata accessor for WeatherData(0);
        LODWORD(v86) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, (uint64_t)v92);
        int v93 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, (uint64_t)v92);
        if (v86)
        {
          if (!v93)
          {
            uint64_t v324 = a2;
            uint64_t v329 = v6;
            uint64_t v319 = a1;
            *uint64_t v90 = *v91;
            v90[1] = v91[1];
            uint64_t v94 = v92[5];
            uint64_t v95 = (char *)v90 + v94;
            uint64_t v96 = (char *)v91 + v94;
            uint64_t v97 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
            {
              uint64_t v98 = sub_10017DF08(&qword_100E63730);
              memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
            }
            uint64_t v111 = v92[6];
            uint64_t v112 = (char *)v90 + v111;
            uint64_t v113 = (char *)v91 + v111;
            uint64_t v114 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
            uint64_t v115 = v92[7];
            uint64_t v116 = (char *)v90 + v115;
            uint64_t v117 = (char *)v91 + v115;
            uint64_t v118 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
            {
              uint64_t v119 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              uint64_t v167 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v116, v117, v167);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
            }
            uint64_t v168 = v92[8];
            uint64_t v169 = (void *)((char *)v90 + v168);
            uint64_t v170 = (void *)((char *)v91 + v168);
            uint64_t v171 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v173 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 16))(v169, v170, v173);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
                goto LABEL_90;
              }
              *uint64_t v169 = *v170;
              v169[1] = v170[1];
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
LABEL_90:
            a2 = v324;
            uint64_t v174 = v92[9];
            long long v175 = (char *)v90 + v174;
            uint64_t v176 = (char *)v91 + v174;
            uint64_t v177 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
            {
              uint64_t v178 = sub_10017DF08(&qword_100E63740);
              memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              uint64_t v179 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v179))
              {
                uint64_t v180 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v175, v176, *(void *)(*(void *)(v180 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v175, v176, v179);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v179);
              }
              uint64_t v199 = *(int *)(v177 + 20);
              uint64_t v200 = &v175[v199];
              uint64_t v201 = &v176[v199];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v201, 1, v179))
              {
                uint64_t v202 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v200, v201, v179);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v200, 0, 1, v179);
              }
              a2 = v324;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
            }
            a1 = v319;
            uint64_t v203 = (uint64_t)v90;
            uint64_t v204 = (uint64_t)v92;
            goto LABEL_113;
          }
          goto LABEL_50;
        }
        if (v93)
        {
          sub_1001BC1DC((uint64_t)v90, (void (*)(void))type metadata accessor for WeatherData);
LABEL_50:
          uint64_t v99 = &qword_100E63850;
LABEL_51:
          uint64_t v100 = sub_10017DF08(v99);
          memcpy(v90, v91, *(void *)(*(void *)(v100 - 8) + 64));
          goto LABEL_115;
        }
        uint64_t v325 = a2;
        uint64_t v329 = v6;
        uint64_t v320 = a1;
        *uint64_t v90 = *v91;
        v90[1] = v91[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v101 = v92[5];
        uint64_t v102 = (char *)v90 + v101;
        uint64_t v103 = (char *)v91 + v101;
        uint64_t v104 = type metadata accessor for Locale();
        int v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v104);
        int v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104);
        if (v105)
        {
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
            goto LABEL_97;
          }
        }
        else
        {
          uint64_t v181 = *(void *)(v104 - 8);
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v181 + 24))(v102, v103, v104);
LABEL_97:
            uint64_t v183 = v92[6];
            uint64_t v184 = (char *)v90 + v183;
            uint64_t v185 = (char *)v91 + v183;
            uint64_t v186 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 24))(v184, v185, v186);
            uint64_t v187 = v92[7];
            uint64_t v188 = (char *)v90 + v187;
            uint64_t v189 = (char *)v91 + v187;
            uint64_t v190 = sub_10017DF08(&qword_100E63738);
            LODWORD(v184) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v188, 1, v190);
            int v191 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v190);
            if (v184)
            {
              if (!v191)
              {
                uint64_t v192 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v188, v189, v192);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v190);
                goto LABEL_103;
              }
            }
            else
            {
              if (!v191)
              {
                uint64_t v264 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 24))(v188, v189, v264);
LABEL_103:
                a1 = v320;
                a2 = v325;
                uint64_t v6 = v329;
                if (v320 == v325) {
                  goto LABEL_150;
                }
                uint64_t v194 = v92[8];
                uint64_t v195 = (void *)((char *)v90 + v194);
                uint64_t v196 = (void *)((char *)v91 + v194);
                sub_1001BC1DC((uint64_t)v90 + v194, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
                uint64_t v197 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                int v198 = swift_getEnumCaseMultiPayload();
                if (v198 == 1)
                {
                  uint64_t v257 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v257 - 8) + 16))(v195, v196, v257);
                }
                else
                {
                  if (v198)
                  {
                    memcpy(v195, v196, *(void *)(*(void *)(v197 - 8) + 64));
                    goto LABEL_149;
                  }
                  *uint64_t v195 = *v196;
                  v195[1] = v196[1];
                  swift_bridgeObjectRetain();
                }
                swift_storeEnumTagMultiPayload();
LABEL_149:
                a1 = v320;
                a2 = v325;
                uint64_t v6 = v329;
LABEL_150:
                uint64_t v258 = v92[9];
                uint64_t v90 = (void *)((char *)v90 + v258);
                uint64_t v91 = (void *)((char *)v91 + v258);
                uint64_t v259 = type metadata accessor for WeatherDataOverrides();
                int v260 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v259);
                int v261 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v259);
                if (v260)
                {
                  if (!v261)
                  {
                    uint64_t v262 = type metadata accessor for Date();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v262))
                    {
                      uint64_t v263 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v90, v91, *(void *)(*(void *)(v263 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(void *, void *, uint64_t))(*(void *)(v262 - 8) + 16))(v90, v91, v262);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v262);
                    }
                    uint64_t v298 = *(int *)(v259 + 20);
                    v299 = (char *)v90 + v298;
                    uint64_t v300 = (char *)v91 + v298;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v300, 1, v262))
                    {
                      uint64_t v301 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v299, v300, *(void *)(*(void *)(v301 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 16))(v299, v300, v262);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v299, 0, 1, v262);
                    }
                    uint64_t v6 = v329;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v259);
LABEL_115:
                    uint64_t v205 = v84[7];
                    uint64_t v206 = (void *)((char *)v82 + v205);
                    unsigned __int8 v207 = (void *)(v83 + v205);
                    *uint64_t v206 = *v207;
                    v206[1] = v207[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v208 = v84[8];
                    uint64_t v209 = (char *)v82 + v208;
                    uint64_t v210 = v83 + v208;
                    uint64_t v211 = type metadata accessor for WeatherMapOverlayKind();
                    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v211 - 8) + 24))(v209, v210, v211);
                    *((unsigned char *)v82 + v84[9]) = *(unsigned char *)(v83 + v84[9]);
                    uint64_t v212 = v6[19];
                    uint64_t v213 = (void *)(a1 + v212);
                    uint64_t v214 = (void *)(a2 + v212);
                    uint64_t v215 = type metadata accessor for DetailComponentContainerViewModel();
                    LODWORD(v209) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v215);
                    int v216 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v214, 1, v215);
                    if (v209)
                    {
                      if (!v216)
                      {
                        uint64_t v330 = v6;
                        if (v214[1])
                        {
                          *uint64_t v213 = *v214;
                          v213[1] = v214[1];
                          v213[2] = v214[2];
                          v213[3] = v214[3];
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                        }
                        else
                        {
                          long long v221 = *((_OWORD *)v214 + 1);
                          *(_OWORD *)uint64_t v213 = *(_OWORD *)v214;
                          *((_OWORD *)v213 + 1) = v221;
                        }
                        uint64_t v222 = *(int *)(v215 + 20);
                        uint64_t v223 = (void *)((char *)v213 + v222);
                        uint64_t v224 = (void *)((char *)v214 + v222);
                        uint64_t v225 = type metadata accessor for NewsArticleComponentViewModel(0);
                        if (swift_getEnumCaseMultiPayload() == 1)
                        {
                          uint64_t v321 = a1;
                          uint64_t v326 = a2;
                          *uint64_t v223 = *v224;
                          v223[1] = v224[1];
                          uint64_t v316 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                          uint64_t v226 = v316[5];
                          unsigned __int8 v227 = (char *)v223 + v226;
                          uint64_t v228 = (char *)v224 + v226;
                          uint64_t v229 = type metadata accessor for URL();
                          swift_bridgeObjectRetain();
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v229))
                          {
                            uint64_t v230 = sub_10017DF08(&qword_100E749B0);
                            memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
                          }
                          else
                          {
                            (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16))(v227, v228, v229);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v229);
                          }
                          uint64_t v231 = v316[6];
                          uint64_t v232 = (void *)((char *)v223 + v231);
                          uint64_t v233 = (void *)((char *)v224 + v231);
                          *uint64_t v232 = *v233;
                          v232[1] = v233[1];
                          uint64_t v234 = v316[7];
                          uint64_t v235 = (char *)v223 + v234;
                          uint64_t v236 = (char *)v224 + v234;
                          uint64_t v237 = *(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16);
                          swift_bridgeObjectRetain();
                          v237(v235, v236, v229);
                          uint64_t v238 = v316[8];
                          uint64_t v239 = (char *)v223 + v238;
                          uint64_t v240 = (char *)v224 + v238;
                          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224 + v238, 1, v229))
                          {
                            uint64_t v241 = sub_10017DF08(&qword_100E749B0);
                            memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
                          }
                          else
                          {
                            v237(v239, v240, v229);
                            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v239, 0, 1, v229);
                          }
                          a2 = v326;
                          *((unsigned char *)v223 + v316[9]) = *((unsigned char *)v224 + v316[9]);
                          swift_storeEnumTagMultiPayload();
                          a1 = v321;
                        }
                        else
                        {
                          memcpy(v223, v224, *(void *)(*(void *)(v225 - 8) + 64));
                        }
                        uint64_t v242 = *(int *)(v215 + 24);
                        uint64_t v243 = (char *)v213 + v242;
                        uint64_t v244 = (char *)v214 + v242;
                        uint64_t v245 = type metadata accessor for DetailComponentAction();
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v244, 1, v245))
                        {
                          uint64_t v246 = sub_10017DF08(&qword_100E73810);
                          memcpy(v243, v244, *(void *)(*(void *)(v246 - 8) + 64));
                        }
                        else
                        {
                          uint64_t v247 = type metadata accessor for URL();
                          (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16))(v243, v244, v247);
                          uint64_t v248 = sub_10017DF08(&qword_100E66478);
                          v243[*(int *)(v248 + 48)] = v244[*(int *)(v248 + 48)];
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v245);
                        }
                        uint64_t v6 = v330;
                        uint64_t v249 = (uint64_t)v213;
                        uint64_t v250 = v215;
                        goto LABEL_142;
                      }
                    }
                    else
                    {
                      if (!v216)
                      {
                        uint64_t v220 = v214[1];
                        if (v213[1])
                        {
                          if (v220)
                          {
                            *uint64_t v213 = *v214;
                            v213[1] = v214[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v213[2] = v214[2];
                            v213[3] = v214[3];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                          }
                          else
                          {
                            sub_1004B70A8((uint64_t)v213);
                            long long v256 = *((_OWORD *)v214 + 1);
                            *(_OWORD *)uint64_t v213 = *(_OWORD *)v214;
                            *((_OWORD *)v213 + 1) = v256;
                          }
                        }
                        else if (v220)
                        {
                          *uint64_t v213 = *v214;
                          v213[1] = v214[1];
                          v213[2] = v214[2];
                          v213[3] = v214[3];
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                        }
                        else
                        {
                          long long v265 = *((_OWORD *)v214 + 1);
                          *(_OWORD *)uint64_t v213 = *(_OWORD *)v214;
                          *((_OWORD *)v213 + 1) = v265;
                        }
                        if (a1 != a2)
                        {
                          uint64_t v331 = v6;
                          uint64_t v266 = *(int *)(v215 + 20);
                          uint64_t v267 = (void *)((char *)v213 + v266);
                          uint64_t v268 = (void *)((char *)v214 + v266);
                          sub_1001BC1DC((uint64_t)v213 + v266, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
                          uint64_t v269 = type metadata accessor for NewsArticleComponentViewModel(0);
                          if (swift_getEnumCaseMultiPayload() == 1)
                          {
                            uint64_t v322 = a1;
                            uint64_t v327 = a2;
                            *uint64_t v267 = *v268;
                            v267[1] = v268[1];
                            uint64_t v317 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                            uint64_t v270 = v317[5];
                            uint64_t v271 = (char *)v267 + v270;
                            uint64_t v272 = (char *)v268 + v270;
                            uint64_t v273 = type metadata accessor for URL();
                            swift_bridgeObjectRetain();
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v272, 1, v273))
                            {
                              uint64_t v274 = sub_10017DF08(&qword_100E749B0);
                              memcpy(v271, v272, *(void *)(*(void *)(v274 - 8) + 64));
                            }
                            else
                            {
                              (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v271, v272, v273);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v271, 0, 1, v273);
                            }
                            uint64_t v278 = v317[6];
                            uint64_t v279 = (void *)((char *)v267 + v278);
                            uint64_t v280 = (void *)((char *)v268 + v278);
                            *uint64_t v279 = *v280;
                            v279[1] = v280[1];
                            uint64_t v281 = v317[7];
                            uint64_t v311 = (char *)v267 + v281;
                            uint64_t v282 = (char *)v268 + v281;
                            uint64_t v283 = *(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16);
                            swift_bridgeObjectRetain();
                            v283(v311, v282, v273);
                            uint64_t v284 = v317[8];
                            uint64_t v285 = (char *)v267 + v284;
                            uint64_t v286 = (char *)v268 + v284;
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v268 + v284, 1, v273))
                            {
                              uint64_t v287 = sub_10017DF08(&qword_100E749B0);
                              memcpy(v285, v286, *(void *)(*(void *)(v287 - 8) + 64));
                            }
                            else
                            {
                              v283(v285, v286, v273);
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v285, 0, 1, v273);
                            }
                            a2 = v327;
                            *((unsigned char *)v267 + v317[9]) = *((unsigned char *)v268 + v317[9]);
                            swift_storeEnumTagMultiPayload();
                            a1 = v322;
                          }
                          else
                          {
                            memcpy(v267, v268, *(void *)(*(void *)(v269 - 8) + 64));
                          }
                          uint64_t v6 = v331;
                        }
                        uint64_t v288 = *(int *)(v215 + 24);
                        uint64_t v289 = (uint64_t)v213 + v288;
                        uint64_t v290 = (uint64_t)v214 + v288;
                        uint64_t v291 = type metadata accessor for DetailComponentAction();
                        int v292 = _s7Weather24LocationCompositionStateOwet_0(v289, 1, v291);
                        int v293 = _s7Weather24LocationCompositionStateOwet_0(v290, 1, v291);
                        if (v292)
                        {
                          if (!v293)
                          {
                            uint64_t v294 = type metadata accessor for URL();
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v294 - 8) + 16))(v289, v290, v294);
                            uint64_t v295 = sub_10017DF08(&qword_100E66478);
                            *(unsigned char *)(v289 + *(int *)(v295 + 48)) = *(unsigned char *)(v290 + *(int *)(v295 + 48));
                            uint64_t v249 = v289;
                            uint64_t v250 = v291;
LABEL_142:
                            _s7Weather24LocationCompositionStateOwst_0(v249, 0, 1, v250);
                            goto LABEL_143;
                          }
                        }
                        else
                        {
                          if (!v293)
                          {
                            uint64_t v296 = type metadata accessor for URL();
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v296 - 8) + 24))(v289, v290, v296);
                            uint64_t v297 = sub_10017DF08(&qword_100E66478);
                            *(unsigned char *)(v289 + *(int *)(v297 + 48)) = *(unsigned char *)(v290 + *(int *)(v297 + 48));
                            goto LABEL_143;
                          }
                          sub_1001BC1DC(v289, (void (*)(void))type metadata accessor for DetailComponentAction);
                        }
                        size_t v217 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
                        uint64_t v218 = (void *)v289;
                        uint64_t v219 = (const void *)v290;
LABEL_122:
                        memcpy(v218, v219, v217);
LABEL_143:
                        *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
                        uint64_t v251 = v6[21];
                        uint64_t v252 = a1 + v251;
                        uint64_t v253 = a2 + v251;
                        uint64_t v254 = type metadata accessor for LocationDetailEntity();
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v254 - 8) + 24))(v252, v253, v254);
                        return a1;
                      }
                      sub_1001BC1DC((uint64_t)v213, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                    }
                    size_t v217 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66E28) - 8) + 64);
                    uint64_t v218 = v213;
                    uint64_t v219 = v214;
                    goto LABEL_122;
                  }
                  goto LABEL_156;
                }
                if (v261)
                {
                  sub_1001BC1DC((uint64_t)v90, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_156:
                  uint64_t v99 = &qword_100E63740;
                  goto LABEL_51;
                }
                uint64_t v275 = type metadata accessor for Date();
                int v276 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v275);
                int v277 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v275);
                if (v276)
                {
                  if (!v277)
                  {
                    (*(void (**)(void *, void *, uint64_t))(*(void *)(v275 - 8) + 16))(v90, v91, v275);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v275);
                    goto LABEL_189;
                  }
                }
                else
                {
                  uint64_t v302 = *(void *)(v275 - 8);
                  if (!v277)
                  {
                    (*(void (**)(void *, void *, uint64_t))(v302 + 24))(v90, v91, v275);
LABEL_189:
                    uint64_t v304 = *(int *)(v259 + 20);
                    uint64_t v305 = (char *)v90 + v304;
                    uint64_t v306 = (char *)v91 + v304;
                    int v307 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v305, 1, v275);
                    int v308 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v306, 1, v275);
                    if (v307)
                    {
                      if (!v308)
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v275 - 8) + 16))(v305, v306, v275);
                        uint64_t v203 = (uint64_t)v305;
                        uint64_t v204 = v275;
LABEL_113:
                        _s7Weather24LocationCompositionStateOwst_0(v203, 0, 1, v204);
LABEL_114:
                        uint64_t v6 = v329;
                        goto LABEL_115;
                      }
                    }
                    else
                    {
                      uint64_t v309 = *(void *)(v275 - 8);
                      if (!v308)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v309 + 24))(v305, v306, v275);
                        goto LABEL_114;
                      }
                      (*(void (**)(char *, uint64_t))(v309 + 8))(v305, v275);
                    }
                    uint64_t v310 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v305, v306, *(void *)(*(void *)(v310 - 8) + 64));
                    goto LABEL_114;
                  }
                  (*(void (**)(void *, uint64_t))(v302 + 8))(v90, v275);
                }
                uint64_t v303 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v90, v91, *(void *)(*(void *)(v303 - 8) + 64));
                goto LABEL_189;
              }
              sub_100178110((uint64_t)v188, &qword_100E63738);
            }
            uint64_t v193 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v188, v189, *(void *)(*(void *)(v193 - 8) + 64));
            goto LABEL_103;
          }
          (*(void (**)(char *, uint64_t))(v181 + 8))(v102, v104);
        }
        uint64_t v182 = sub_10017DF08(&qword_100E63730);
        memcpy(v102, v103, *(void *)(*(void *)(v182 - 8) + 64));
        goto LABEL_97;
      }
      (*(void (**)(void *, uint64_t))(v45 + 8))(v15, v17);
    }
    uint64_t v46 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(v15, v16, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v323 = a2;
  uint64_t v328 = v6;
  uint64_t v9 = v6[14];
  uint64_t v318 = a1;
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for AirPollutant();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v20 = v6[15];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  if (v22[1])
  {
    void *v21 = *v22;
    v21[1] = v22[1];
    v21[2] = v22[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *(_OWORD *)v22;
    v21[2] = v22[2];
    *(_OWORD *)uint64_t v21 = v23;
  }
  uint64_t v24 = v6[16];
  uint64_t v25 = *(void **)(a2 + v24);
  *(void *)(a1 + v24) = v25;
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  uint64_t v26 = v6[18];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = a2 + v26;
  *uint64_t v27 = *(void *)(a2 + v26);
  v27[1] = *(void *)(a2 + v26 + 8);
  uint64_t v29 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v30 = v29[5];
  uint64_t v314 = (char *)v27 + v30;
  uint64_t v31 = v28 + v30;
  uint64_t v32 = type metadata accessor for Location();
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
  id v34 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(v314, v31, v32);
  uint64_t v35 = v29[6];
  uint64_t v36 = (void *)((char *)v27 + v35);
  uint64_t v312 = v28;
  uint64_t v37 = (void *)(v28 + v35);
  uint64_t v38 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38))
  {
    *uint64_t v36 = *v37;
    v36[1] = v37[1];
    uint64_t v40 = v38[5];
    uint64_t v41 = (char *)v36 + v40;
    uint64_t v42 = (char *)v37 + v40;
    uint64_t v43 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
    {
      uint64_t v44 = sub_10017DF08(&qword_100E63730);
      memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
    }
    uint64_t v52 = v38[6];
    uint64_t v53 = (char *)v36 + v52;
    uint64_t v54 = (char *)v37 + v52;
    uint64_t v55 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = v38[7];
    uint64_t v57 = (char *)v36 + v56;
    uint64_t v58 = (char *)v37 + v56;
    uint64_t v59 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
    {
      uint64_t v60 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      uint64_t v62 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v57, v58, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
    }
    uint64_t v63 = v38[8];
    uint64_t v64 = (void *)((char *)v36 + v63);
    uint64_t v65 = (void *)((char *)v37 + v63);
    uint64_t v66 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v67 = swift_getEnumCaseMultiPayload();
    if (v67 == 1)
    {
      uint64_t v68 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v64, v65, v68);
    }
    else
    {
      if (v67)
      {
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
        goto LABEL_38;
      }
      void *v64 = *v65;
      v64[1] = v65[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_38:
    uint64_t v69 = v38[9];
    uint64_t v70 = (char *)v36 + v69;
    uint64_t v71 = (char *)v37 + v69;
    uint64_t v72 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72))
    {
      uint64_t v73 = sub_10017DF08(&qword_100E63740);
      memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      uint64_t v74 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v74))
      {
        uint64_t v75 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v70, v71, v74);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v74);
      }
      uint64_t v107 = *(int *)(v72 + 20);
      uint64_t v108 = &v70[v107];
      uint64_t v109 = &v71[v107];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v74))
      {
        uint64_t v110 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v108, v109, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v108, v109, v74);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v74);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
    }
    a1 = v318;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
    goto LABEL_64;
  }
  uint64_t v39 = sub_10017DF08(&qword_100E63850);
  memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  a1 = v318;
LABEL_64:
  uint64_t v120 = v29[7];
  uint64_t v121 = (void *)((char *)v27 + v120);
  uint64_t v122 = (void *)(v312 + v120);
  *uint64_t v121 = *v122;
  v121[1] = v122[1];
  uint64_t v123 = v29[8];
  uint64_t v124 = (char *)v27 + v123;
  uint64_t v125 = v312 + v123;
  uint64_t v126 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v127 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v126 - 8) + 16);
  swift_bridgeObjectRetain();
  v127(v124, v125, v126);
  *((unsigned char *)v27 + v29[9]) = *(unsigned char *)(v312 + v29[9]);
  uint64_t v128 = v323;
  uint64_t v129 = (uint64_t)v328;
  uint64_t v130 = v328[19];
  uint64_t v131 = (void *)(a1 + v130);
  uint64_t v132 = (void *)(v323 + v130);
  uint64_t v133 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v133))
  {
    uint64_t v134 = sub_10017DF08(&qword_100E66E28);
    memcpy(v131, v132, *(void *)(*(void *)(v134 - 8) + 64));
  }
  else
  {
    if (v132[1])
    {
      *uint64_t v131 = *v132;
      v131[1] = v132[1];
      v131[2] = v132[2];
      v131[3] = v132[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v135 = *((_OWORD *)v132 + 1);
      *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
      *((_OWORD *)v131 + 1) = v135;
    }
    uint64_t v136 = *(int *)(v133 + 20);
    uint64_t v137 = (void *)((char *)v131 + v136);
    uint64_t v138 = (void *)((char *)v132 + v136);
    uint64_t v139 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v137 = *v138;
      v137[1] = v138[1];
      uint64_t v315 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v140 = v315[5];
      uint64_t v141 = (char *)v137 + v140;
      uint64_t v142 = (char *)v138 + v140;
      uint64_t v143 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v313 = v133;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, v143))
      {
        uint64_t v144 = sub_10017DF08(&qword_100E749B0);
        memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v143);
      }
      uint64_t v145 = v315[6];
      uint64_t v146 = (void *)((char *)v137 + v145);
      uint64_t v147 = (void *)((char *)v138 + v145);
      *uint64_t v146 = *v147;
      v146[1] = v147[1];
      uint64_t v148 = v315[7];
      uint64_t v149 = (char *)v137 + v148;
      uint64_t v150 = (char *)v138 + v148;
      uint64_t v151 = *(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16);
      swift_bridgeObjectRetain();
      v151(v149, v150, v143);
      uint64_t v152 = v315[8];
      uint64_t v153 = (char *)v137 + v152;
      long long v154 = (char *)v138 + v152;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v138 + v152, 1, v143))
      {
        uint64_t v155 = sub_10017DF08(&qword_100E749B0);
        memcpy(v153, v154, *(void *)(*(void *)(v155 - 8) + 64));
      }
      else
      {
        v151(v153, v154, v143);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v153, 0, 1, v143);
      }
      a1 = v318;
      uint64_t v128 = v323;
      uint64_t v133 = v313;
      *((unsigned char *)v137 + v315[9]) = *((unsigned char *)v138 + v315[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
    }
    uint64_t v156 = *(int *)(v133 + 24);
    uint64_t v157 = (char *)v131 + v156;
    uint64_t v158 = (char *)v132 + v156;
    uint64_t v159 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v158, 1, v159))
    {
      uint64_t v160 = sub_10017DF08(&qword_100E73810);
      memcpy(v157, v158, *(void *)(*(void *)(v160 - 8) + 64));
    }
    else
    {
      uint64_t v161 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v157, v158, v161);
      uint64_t v162 = sub_10017DF08(&qword_100E66478);
      v157[*(int *)(v162 + 48)] = v158[*(int *)(v162 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v159);
    }
    uint64_t v129 = (uint64_t)v328;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v133);
  }
  *(unsigned char *)(a1 + *(int *)(v129 + 80)) = *(unsigned char *)(v128 + *(int *)(v129 + 80));
  uint64_t v163 = *(int *)(v129 + 84);
  uint64_t v164 = a1 + v163;
  uint64_t v165 = v128 + v163;
  uint64_t v166 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 16))(v164, v165, v166);
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v129);
  return a1;
}

_OWORD *sub_1007541E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    long long v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((void *)a1 + 11) = *((void *)a2 + 11);
    long long v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    a1[8] = a2[8];
    uint64_t v10 = v6[14];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for AirPollutant();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08(&qword_100E7B2D8);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v15 = v6[15];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *(void *)((char *)a1 + v6[16]) = *(void *)((char *)a2 + v6[16]);
    *(void *)((char *)a1 + v6[17]) = *(void *)((char *)a2 + v6[17]);
    uint64_t v18 = v6[18];
    int v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
    uint64_t v21 = (int *)type metadata accessor for ConditionDetailMapViewModel();
    uint64_t v22 = v21[5];
    long long v23 = &v19[v22];
    uint64_t v24 = &v20[v22];
    uint64_t v25 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    uint64_t v26 = v21[6];
    uint64_t v27 = &v19[v26];
    uint64_t v28 = &v20[v26];
    uint64_t v29 = (int *)type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
    {
      uint64_t v30 = sub_10017DF08(&qword_100E63850);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v100 = v21;
      uint64_t v102 = v19;
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      uint64_t v31 = v29[5];
      uint64_t v32 = &v27[v31];
      uint64_t v33 = &v28[v31];
      uint64_t v34 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
      {
        uint64_t v35 = sub_10017DF08(&qword_100E63730);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      }
      uint64_t v36 = v29[6];
      uint64_t v37 = &v27[v36];
      uint64_t v38 = &v28[v36];
      uint64_t v39 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      uint64_t v40 = v29[7];
      uint64_t v41 = &v27[v40];
      uint64_t v42 = &v28[v40];
      uint64_t v43 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
      {
        uint64_t v44 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        uint64_t v45 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v41, v42, v45);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      }
      uint64_t v46 = v29[8];
      uint64_t v47 = &v27[v46];
      uint64_t v48 = &v28[v46];
      uint64_t v49 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v50 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v47, v48, v50);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
      }
      uint64_t v51 = v29[9];
      uint64_t v52 = &v27[v51];
      uint64_t v53 = &v28[v51];
      uint64_t v54 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
      {
        uint64_t v55 = sub_10017DF08(&qword_100E63740);
        memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        uint64_t v56 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v56))
        {
          uint64_t v57 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v52, v53, v56);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v56);
        }
        uint64_t v58 = *(int *)(v54 + 20);
        __dst = &v52[v58];
        uint64_t v59 = &v53[v58];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v56))
        {
          uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(__dst, v59, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(__dst, v59, v56);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v56);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
      }
      uint64_t v21 = v100;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
      int v19 = v102;
    }
    *(_OWORD *)&v19[v21[7]] = *(_OWORD *)&v20[v21[7]];
    uint64_t v61 = v21[8];
    uint64_t v62 = &v19[v61];
    uint64_t v63 = &v20[v61];
    uint64_t v64 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
    v19[v21[9]] = v20[v21[9]];
    uint64_t v65 = v6[19];
    uint64_t v66 = (_OWORD *)((char *)a1 + v65);
    int v67 = (_OWORD *)((char *)a2 + v65);
    uint64_t v68 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
    {
      uint64_t v69 = sub_10017DF08(&qword_100E66E28);
      memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      long long v70 = v67[1];
      *uint64_t v66 = *v67;
      v66[1] = v70;
      uint64_t v71 = *(int *)(v68 + 20);
      uint64_t v72 = (char *)v66 + v71;
      uint64_t v73 = (char *)v67 + v71;
      uint64_t v74 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
        uint64_t v75 = type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v76 = *(int *)(v75 + 20);
        __dsta = &v72[v76];
        uint64_t v101 = (int *)v75;
        uint64_t v77 = &v73[v76];
        uint64_t v103 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v103))
        {
          uint64_t v78 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dsta, v77, *(void *)(*(void *)(v78 - 8) + 64));
          uint64_t v79 = *(void *)(v103 - 8);
        }
        else
        {
          uint64_t v95 = *(void *)(v103 - 8);
          (*(void (**)(char *, char *, uint64_t))(v95 + 32))(__dsta, v77, v103);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v103);
          uint64_t v79 = v95;
        }
        *(_OWORD *)&v72[v101[6]] = *(_OWORD *)&v73[v101[6]];
        uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
        v96(&v72[v101[7]], &v73[v101[7]], v103);
        uint64_t v80 = v101[8];
        __dstb = &v72[v80];
        uint64_t v81 = &v73[v80];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v73[v80], 1, v103))
        {
          uint64_t v82 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dstb, v81, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          v96(__dstb, v81, v103);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v103);
        }
        v72[v101[9]] = v73[v101[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      uint64_t v83 = *(int *)(v68 + 24);
      uint64_t v84 = (char *)v66 + v83;
      uint64_t v85 = (char *)v67 + v83;
      uint64_t v86 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
      {
        uint64_t v87 = sub_10017DF08(&qword_100E73810);
        memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        uint64_t v88 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v84, v85, v88);
        uint64_t v89 = sub_10017DF08(&qword_100E66478);
        v84[*(int *)(v89 + 48)] = v85[*(int *)(v89 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
    }
    *((unsigned char *)a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
    uint64_t v90 = v6[21];
    uint64_t v91 = (char *)a1 + v90;
    uint64_t v92 = (char *)a2 + v90;
    uint64_t v93 = type metadata accessor for LocationDetailEntity();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

uint64_t sub_100754C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1001BC1DC(a1, (void (*)(void))type metadata accessor for AirQualityDetailViewModel.Model);
      goto LABEL_7;
    }
    uint64_t v17 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v17;
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v18;
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v20;
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    uint64_t v21 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v21;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = v6[14];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (const void *)(a2 + v24);
    uint64_t v27 = type metadata accessor for AirPollutant();
    int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
    int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v51 = *(void *)(v27 - 8);
      if (!v29)
      {
        (*(void (**)(void *, const void *, uint64_t))(v51 + 40))(v25, v26, v27);
LABEL_19:
        uint64_t v53 = v6[15];
        uint64_t v54 = (void *)(a1 + v53);
        uint64_t v55 = (void *)(a2 + v53);
        if (*(void *)(a1 + v53 + 8))
        {
          uint64_t v56 = v55[1];
          if (v56)
          {
            void *v54 = *v55;
            v54[1] = v56;
            swift_bridgeObjectRelease();
            v54[2] = v55[2];
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
          sub_1004C3C74((uint64_t)v54);
        }
        *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
        v54[2] = v55[2];
LABEL_27:
        uint64_t v66 = v6[16];
        int v67 = *(void **)(a1 + v66);
        *(void *)(a1 + v66) = *(void *)(a2 + v66);

        *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
        swift_bridgeObjectRelease();
        uint64_t v68 = v6[18];
        uint64_t v69 = (void *)(a1 + v68);
        long long v70 = (char *)(a2 + v68);
        uint64_t v71 = *(void *)(a2 + v68 + 8);
        *uint64_t v69 = *(void *)(a2 + v68);
        v69[1] = v71;
        swift_bridgeObjectRelease();
        uint64_t v72 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v73 = v72[5];
        uint64_t v74 = (char *)v69 + v73;
        uint64_t v75 = &v70[v73];
        uint64_t v76 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 40))(v74, v75, v76);
        uint64_t v77 = v72[6];
        uint64_t v78 = (uint64_t)v69 + v77;
        uint64_t v79 = (uint64_t)&v70[v77];
        uint64_t v80 = (int *)type metadata accessor for WeatherData(0);
        int v81 = _s7Weather24LocationCompositionStateOwet_0(v78, 1, (uint64_t)v80);
        int v82 = _s7Weather24LocationCompositionStateOwet_0(v79, 1, (uint64_t)v80);
        if (v81)
        {
          if (!v82)
          {
            __dst = v70;
            uint64_t v301 = v72;
            int v307 = v6;
            *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
            uint64_t v83 = v80[5];
            uint64_t v84 = (void *)(v78 + v83);
            uint64_t v85 = (const void *)(v79 + v83);
            uint64_t v86 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
            {
              uint64_t v87 = sub_10017DF08(&qword_100E63730);
              memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
            }
            uint64_t v111 = v80[6];
            uint64_t v112 = v78 + v111;
            uint64_t v113 = v79 + v111;
            uint64_t v114 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
            uint64_t v115 = v80[7];
            uint64_t v116 = (void *)(v78 + v115);
            uint64_t v117 = (const void *)(v79 + v115);
            uint64_t v118 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
            {
              uint64_t v119 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              uint64_t v123 = type metadata accessor for Date();
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v123 - 8) + 32))(v116, v117, v123);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
            }
            uint64_t v124 = v80[8];
            uint64_t v125 = (void *)(v78 + v124);
            uint64_t v126 = (const void *)(v79 + v124);
            uint64_t v127 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v128 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v128 - 8) + 32))(v125, v126, v128);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
            }
            uint64_t v129 = v80[9];
            uint64_t v130 = (char *)(v78 + v129);
            uint64_t v131 = (char *)(v79 + v129);
            uint64_t v132 = type metadata accessor for WeatherDataOverrides();
            uint64_t v72 = v301;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132))
            {
              uint64_t v133 = sub_10017DF08(&qword_100E63740);
              memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              uint64_t v168 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v168))
              {
                uint64_t v169 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v130, v131, *(void *)(*(void *)(v169 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32))(v130, v131, v168);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v168);
              }
              uint64_t v197 = *(int *)(v132 + 20);
              int v198 = &v130[v197];
              uint64_t v199 = &v131[v197];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v199, 1, v168))
              {
                uint64_t v200 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v198, v199, *(void *)(*(void *)(v200 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32))(v198, v199, v168);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v198, 0, 1, v168);
              }
              uint64_t v72 = v301;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
            }
            uint64_t v6 = v307;
            _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, (uint64_t)v80);
            goto LABEL_107;
          }
          goto LABEL_33;
        }
        if (v82)
        {
          sub_1001BC1DC(v78, (void (*)(void))type metadata accessor for WeatherData);
LABEL_33:
          size_t v88 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63850) - 8) + 64);
          uint64_t v89 = (void *)v78;
          uint64_t v90 = (const void *)v79;
LABEL_34:
          memcpy(v89, v90, v88);
          goto LABEL_108;
        }
        __dst = v70;
        uint64_t v302 = v72;
        int v308 = v6;
        uint64_t v104 = *(void *)(v79 + 8);
        *(void *)uint64_t v78 = *(void *)v79;
        *(void *)(v78 + 8) = v104;
        swift_bridgeObjectRelease();
        uint64_t v105 = v80[5];
        int v106 = (void *)(v78 + v105);
        uint64_t v107 = (const void *)(v79 + v105);
        uint64_t v108 = type metadata accessor for Locale();
        int v109 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v108);
        int v110 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108);
        if (v109)
        {
          if (!v110)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v170 = *(void *)(v108 - 8);
          if (!v110)
          {
            (*(void (**)(void *, const void *, uint64_t))(v170 + 40))(v106, v107, v108);
LABEL_83:
            uint64_t v172 = v80[6];
            uint64_t v173 = v78 + v172;
            uint64_t v174 = v79 + v172;
            uint64_t v175 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 40))(v173, v174, v175);
            uint64_t v176 = v80[7];
            uint64_t v177 = (void *)(v78 + v176);
            uint64_t v178 = (const void *)(v79 + v176);
            uint64_t v179 = sub_10017DF08(&qword_100E63738);
            LODWORD(v174) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v179);
            int v180 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v178, 1, v179);
            if (v174)
            {
              if (!v180)
              {
                uint64_t v181 = type metadata accessor for Date();
                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v181 - 8) + 32))(v177, v178, v181);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, v179);
                goto LABEL_89;
              }
            }
            else
            {
              if (!v180)
              {
                uint64_t v260 = type metadata accessor for Date();
                (*(void (**)(void *, const void *, uint64_t))(*(void *)(v260 - 8) + 40))(v177, v178, v260);
LABEL_89:
                uint64_t v72 = v302;
                if (a1 != a2)
                {
                  uint64_t v183 = v80[8];
                  uint64_t v184 = (void *)(v78 + v183);
                  uint64_t v185 = (const void *)(v79 + v183);
                  sub_1001BC1DC(v78 + v183, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
                  uint64_t v186 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    uint64_t v187 = type metadata accessor for WeatherStatisticsModel();
                    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v187 - 8) + 32))(v184, v185, v187);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
                  }
                  uint64_t v72 = v302;
                }
                uint64_t v188 = v80[9];
                uint64_t v189 = (char *)(v78 + v188);
                uint64_t v190 = (char *)(v79 + v188);
                uint64_t v191 = type metadata accessor for WeatherDataOverrides();
                int v192 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v191);
                int v193 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v191);
                if (v192)
                {
                  uint64_t v6 = v308;
                  if (!v193)
                  {
                    uint64_t v194 = type metadata accessor for Date();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v194))
                    {
                      uint64_t v195 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v189, v190, *(void *)(*(void *)(v195 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v189, v190, v194);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v189, 0, 1, v194);
                    }
                    uint64_t v277 = *(int *)(v191 + 20);
                    uint64_t v278 = &v189[v277];
                    uint64_t v279 = &v190[v277];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v194))
                    {
                      uint64_t v280 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v278, v279, *(void *)(*(void *)(v280 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 32))(v278, v279, v194);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v194);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v189, 0, 1, v191);
                    uint64_t v6 = v308;
                    goto LABEL_107;
                  }
                  goto LABEL_100;
                }
                uint64_t v6 = v308;
                if (v193)
                {
                  sub_1001BC1DC((uint64_t)v189, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_100:
                  uint64_t v196 = sub_10017DF08(&qword_100E63740);
                  memcpy(v189, v190, *(void *)(*(void *)(v196 - 8) + 64));
LABEL_107:
                  long long v70 = __dst;
                  goto LABEL_108;
                }
                uint64_t v261 = type metadata accessor for Date();
                int v262 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v261);
                int v263 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v261);
                if (v262)
                {
                  if (!v263)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v261 - 8) + 32))(v189, v190, v261);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v189, 0, 1, v261);
                    goto LABEL_165;
                  }
                }
                else
                {
                  uint64_t v281 = *(void *)(v261 - 8);
                  if (!v263)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v281 + 40))(v189, v190, v261);
LABEL_165:
                    uint64_t v6 = v308;
                    uint64_t v283 = *(int *)(v191 + 20);
                    uint64_t v284 = (uint64_t)&v189[v283];
                    uint64_t v285 = (uint64_t)&v190[v283];
                    int v286 = _s7Weather24LocationCompositionStateOwet_0(v284, 1, v261);
                    int v287 = _s7Weather24LocationCompositionStateOwet_0(v285, 1, v261);
                    long long v70 = __dst;
                    if (v286)
                    {
                      if (!v287)
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v261 - 8) + 32))(v284, v285, v261);
                        _s7Weather24LocationCompositionStateOwst_0(v284, 0, 1, v261);
                        goto LABEL_108;
                      }
                    }
                    else
                    {
                      uint64_t v288 = *(void *)(v261 - 8);
                      if (!v287)
                      {
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(v288 + 40))(v284, v285, v261);
LABEL_108:
                        uint64_t v201 = v72[7];
                        uint64_t v202 = (void *)((char *)v69 + v201);
                        uint64_t v203 = &v70[v201];
                        uint64_t v205 = *(void *)v203;
                        uint64_t v204 = *((void *)v203 + 1);
                        *uint64_t v202 = v205;
                        v202[1] = v204;
                        swift_bridgeObjectRelease();
                        uint64_t v206 = v72[8];
                        unsigned __int8 v207 = (char *)v69 + v206;
                        uint64_t v208 = &v70[v206];
                        uint64_t v209 = type metadata accessor for WeatherMapOverlayKind();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 40))(v207, v208, v209);
                        *((unsigned char *)v69 + v72[9]) = v70[v72[9]];
                        uint64_t v210 = v6[19];
                        uint64_t v211 = a1 + v210;
                        uint64_t v212 = a2 + v210;
                        uint64_t v213 = type metadata accessor for DetailComponentContainerViewModel();
                        int v214 = _s7Weather24LocationCompositionStateOwet_0(v211, 1, v213);
                        int v215 = _s7Weather24LocationCompositionStateOwet_0(v212, 1, v213);
                        if (v214)
                        {
                          if (!v215)
                          {
                            long long v216 = *(_OWORD *)(v212 + 16);
                            *(_OWORD *)uint64_t v211 = *(_OWORD *)v212;
                            *(_OWORD *)(v211 + 16) = v216;
                            uint64_t v217 = *(int *)(v213 + 20);
                            uint64_t v218 = (_OWORD *)(v211 + v217);
                            uint64_t v219 = (_OWORD *)(v212 + v217);
                            uint64_t v220 = type metadata accessor for NewsArticleComponentViewModel(0);
                            if (swift_getEnumCaseMultiPayload() == 1)
                            {
                              uint64_t v310 = v6;
                              *uint64_t v218 = *v219;
                              uint64_t v304 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                              uint64_t v221 = v304[5];
                              uint64_t v222 = (char *)v218 + v221;
                              uint64_t v223 = (char *)v219 + v221;
                              uint64_t v224 = type metadata accessor for URL();
                              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
                              {
                                uint64_t v225 = sub_10017DF08(&qword_100E749B0);
                                memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
                                uint64_t v226 = *(void (***)(void *, const void *, uint64_t))(v224 - 8);
                              }
                              else
                              {
                                __dstf = *(void (***)(void *, const void *, uint64_t))(v224 - 8);
                                __dstf[4](v222, v223, v224);
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
                                uint64_t v226 = __dstf;
                              }
                              *(_OWORD *)((char *)v218 + v304[6]) = *(_OWORD *)((char *)v219 + v304[6]);
                              uint64_t v290 = v226[4];
                              v290((char *)v218 + v304[7], (char *)v219 + v304[7], v224);
                              uint64_t v232 = v304[8];
                              __dstc = (char *)v218 + v232;
                              uint64_t v233 = (char *)v219 + v232;
                              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v219 + v232, 1, v224))
                              {
                                uint64_t v234 = sub_10017DF08(&qword_100E749B0);
                                memcpy(__dstc, v233, *(void *)(*(void *)(v234 - 8) + 64));
                              }
                              else
                              {
                                v290(__dstc, v233, v224);
                                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v224);
                              }
                              *((unsigned char *)v218 + v304[9]) = *((unsigned char *)v219 + v304[9]);
                              swift_storeEnumTagMultiPayload();
                              uint64_t v6 = v310;
                            }
                            else
                            {
                              memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
                            }
                            uint64_t v235 = *(int *)(v213 + 24);
                            uint64_t v236 = (void *)(v211 + v235);
                            uint64_t v237 = (const void *)(v212 + v235);
                            uint64_t v238 = type metadata accessor for DetailComponentAction();
                            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v238))
                            {
                              uint64_t v239 = sub_10017DF08(&qword_100E73810);
                              memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
                            }
                            else
                            {
                              uint64_t v240 = type metadata accessor for URL();
                              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v240 - 8) + 32))(v236, v237, v240);
                              uint64_t v241 = sub_10017DF08(&qword_100E66478);
                              *((unsigned char *)v236 + *(int *)(v241 + 48)) = *((unsigned char *)v237 + *(int *)(v241 + 48));
                              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v238);
                            }
                            uint64_t v242 = v211;
                            uint64_t v243 = v213;
                            goto LABEL_130;
                          }
                          goto LABEL_115;
                        }
                        if (v215)
                        {
                          sub_1001BC1DC(v211, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
LABEL_115:
                          size_t v227 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66E28) - 8) + 64);
                          uint64_t v228 = (void *)v211;
                          uint64_t v229 = (const void *)v212;
                          goto LABEL_116;
                        }
                        if (*(void *)(v211 + 8))
                        {
                          uint64_t v230 = *(void *)(v212 + 8);
                          if (v230)
                          {
                            *(void *)uint64_t v211 = *(void *)v212;
                            *(void *)(v211 + 8) = v230;
                            swift_bridgeObjectRelease();
                            uint64_t v231 = *(void *)(v212 + 24);
                            *(void *)(v211 + 16) = *(void *)(v212 + 16);
                            *(void *)(v211 + 24) = v231;
                            swift_bridgeObjectRelease();
LABEL_135:
                            if (a1 != a2)
                            {
                              uint64_t v250 = *(int *)(v213 + 20);
                              uint64_t v251 = (_OWORD *)(v211 + v250);
                              uint64_t v252 = (_OWORD *)(v212 + v250);
                              sub_1001BC1DC(v211 + v250, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
                              uint64_t v253 = type metadata accessor for NewsArticleComponentViewModel(0);
                              if (swift_getEnumCaseMultiPayload() == 1)
                              {
                                uint64_t v311 = v6;
                                _OWORD *v251 = *v252;
                                uint64_t v305 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                                uint64_t v254 = v305[5];
                                uint64_t v255 = (char *)v251 + v254;
                                long long v256 = (char *)v252 + v254;
                                uint64_t v257 = type metadata accessor for URL();
                                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v256, 1, v257))
                                {
                                  uint64_t v258 = sub_10017DF08(&qword_100E749B0);
                                  memcpy(v255, v256, *(void *)(*(void *)(v258 - 8) + 64));
                                  uint64_t v259 = *(void (***)(void *, const void *, uint64_t))(v257 - 8);
                                }
                                else
                                {
                                  __dstg = *(void (***)(void *, const void *, uint64_t))(v257 - 8);
                                  __dstg[4](v255, v256, v257);
                                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v255, 0, 1, v257);
                                  uint64_t v259 = __dstg;
                                }
                                *(_OWORD *)((char *)v251 + v305[6]) = *(_OWORD *)((char *)v252 + v305[6]);
                                uint64_t v291 = v259[4];
                                v291((char *)v251 + v305[7], (char *)v252 + v305[7], v257);
                                uint64_t v264 = v305[8];
                                __dstd = (char *)v251 + v264;
                                long long v265 = (char *)v252 + v264;
                                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v252 + v264, 1, v257))
                                {
                                  uint64_t v266 = sub_10017DF08(&qword_100E749B0);
                                  memcpy(__dstd, v265, *(void *)(*(void *)(v266 - 8) + 64));
                                }
                                else
                                {
                                  v291(__dstd, v265, v257);
                                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstd, 0, 1, v257);
                                }
                                *((unsigned char *)v251 + v305[9]) = *((unsigned char *)v252 + v305[9]);
                                swift_storeEnumTagMultiPayload();
                                uint64_t v6 = v311;
                              }
                              else
                              {
                                memcpy(v251, v252, *(void *)(*(void *)(v253 - 8) + 64));
                              }
                            }
                            uint64_t v267 = *(int *)(v213 + 24);
                            uint64_t v268 = v211 + v267;
                            uint64_t v269 = v212 + v267;
                            uint64_t v270 = type metadata accessor for DetailComponentAction();
                            int v271 = _s7Weather24LocationCompositionStateOwet_0(v268, 1, v270);
                            int v272 = _s7Weather24LocationCompositionStateOwet_0(v269, 1, v270);
                            if (v271)
                            {
                              if (!v272)
                              {
                                uint64_t v273 = type metadata accessor for URL();
                                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v273 - 8) + 32))(v268, v269, v273);
                                uint64_t v274 = sub_10017DF08(&qword_100E66478);
                                *(unsigned char *)(v268 + *(int *)(v274 + 48)) = *(unsigned char *)(v269 + *(int *)(v274 + 48));
                                uint64_t v242 = v268;
                                uint64_t v243 = v270;
LABEL_130:
                                _s7Weather24LocationCompositionStateOwst_0(v242, 0, 1, v243);
                                goto LABEL_131;
                              }
                            }
                            else
                            {
                              if (!v272)
                              {
                                uint64_t v275 = type metadata accessor for URL();
                                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v275 - 8) + 40))(v268, v269, v275);
                                uint64_t v276 = sub_10017DF08(&qword_100E66478);
                                *(unsigned char *)(v268 + *(int *)(v276 + 48)) = *(unsigned char *)(v269 + *(int *)(v276 + 48));
                                goto LABEL_131;
                              }
                              sub_1001BC1DC(v268, (void (*)(void))type metadata accessor for DetailComponentAction);
                            }
                            size_t v227 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
                            uint64_t v228 = (void *)v268;
                            uint64_t v229 = (const void *)v269;
LABEL_116:
                            memcpy(v228, v229, v227);
LABEL_131:
                            *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
                            uint64_t v244 = v6[21];
                            uint64_t v245 = a1 + v244;
                            uint64_t v246 = a2 + v244;
                            uint64_t v247 = type metadata accessor for LocationDetailEntity();
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v247 - 8) + 40))(v245, v246, v247);
                            return a1;
                          }
                          sub_1004B70A8(v211);
                        }
                        long long v249 = *(_OWORD *)(v212 + 16);
                        *(_OWORD *)uint64_t v211 = *(_OWORD *)v212;
                        *(_OWORD *)(v211 + 16) = v249;
                        goto LABEL_135;
                      }
                      (*(void (**)(uint64_t, uint64_t))(v288 + 8))(v284, v261);
                    }
                    size_t v88 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
                    uint64_t v89 = (void *)v284;
                    uint64_t v90 = (const void *)v285;
                    goto LABEL_34;
                  }
                  (*(void (**)(char *, uint64_t))(v281 + 8))(v189, v261);
                }
                uint64_t v282 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v189, v190, *(void *)(*(void *)(v282 - 8) + 64));
                goto LABEL_165;
              }
              sub_100178110((uint64_t)v177, &qword_100E63738);
            }
            uint64_t v182 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v177, v178, *(void *)(*(void *)(v182 - 8) + 64));
            goto LABEL_89;
          }
          (*(void (**)(void *, uint64_t))(v170 + 8))(v106, v108);
        }
        uint64_t v171 = sub_10017DF08(&qword_100E63730);
        memcpy(v106, v107, *(void *)(*(void *)(v171 - 8) + 64));
        goto LABEL_83;
      }
      (*(void (**)(void *, uint64_t))(v51 + 8))(v25, v27);
    }
    uint64_t v52 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(v25, v26, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  if (v8)
  {
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v12 = v6[14];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for AirPollutant();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v30 = v6[15];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(void *)(v31 + 16) = *(void *)(v32 + 16);
  *(void *)(a1 + v6[16]) = *(void *)(a2 + v6[16]);
  *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
  uint64_t v33 = v6[18];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(_OWORD *)(a1 + v33) = *(_OWORD *)(a2 + v33);
  uint64_t v36 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v37 = v36[5];
  uint64_t v38 = v34 + v37;
  uint64_t v39 = v35 + v37;
  uint64_t v40 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
  uint64_t v41 = v36[6];
  uint64_t v42 = (_OWORD *)(v34 + v41);
  uint64_t v43 = (_OWORD *)(v35 + v41);
  uint64_t v44 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
  {
    uint64_t v45 = sub_10017DF08(&qword_100E63850);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v300 = v36;
    uint64_t v306 = v6;
    _OWORD *v42 = *v43;
    uint64_t v46 = v44[5];
    uint64_t v47 = (char *)v42 + v46;
    uint64_t v48 = (char *)v43 + v46;
    uint64_t v49 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
    {
      uint64_t v50 = sub_10017DF08(&qword_100E63730);
      memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
    }
    uint64_t v57 = v44[6];
    uint64_t v58 = (char *)v42 + v57;
    uint64_t v59 = (char *)v43 + v57;
    uint64_t v60 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
    uint64_t v61 = v44[7];
    uint64_t v62 = (char *)v42 + v61;
    uint64_t v63 = (char *)v43 + v61;
    uint64_t v64 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
    {
      uint64_t v65 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      uint64_t v91 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v62, v63, v91);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
    }
    uint64_t v92 = v44[8];
    uint64_t v93 = (char *)v42 + v92;
    uint64_t v94 = (char *)v43 + v92;
    uint64_t v95 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v96 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v93, v94, v96);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
    }
    uint64_t v97 = v44[9];
    uint64_t v98 = (char *)v42 + v97;
    uint64_t v99 = (char *)v43 + v97;
    uint64_t v100 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
    {
      uint64_t v101 = sub_10017DF08(&qword_100E63740);
      memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      uint64_t v102 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v102))
      {
        uint64_t v103 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v98, v99, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v98, v99, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v102);
      }
      uint64_t v120 = *(int *)(v100 + 20);
      __dsta = &v98[v120];
      uint64_t v121 = &v99[v120];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v121, 1, v102))
      {
        uint64_t v122 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(__dsta, v121, *(void *)(*(void *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(__dsta, v121, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v102);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
    }
    uint64_t v6 = v306;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
    uint64_t v36 = v300;
  }
  *(_OWORD *)(v34 + v36[7]) = *(_OWORD *)(v35 + v36[7]);
  uint64_t v134 = v36[8];
  uint64_t v135 = v34 + v134;
  uint64_t v136 = v35 + v134;
  uint64_t v137 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
  *(unsigned char *)(v34 + v36[9]) = *(unsigned char *)(v35 + v36[9]);
  uint64_t v138 = v6[19];
  uint64_t v139 = (_OWORD *)(a1 + v138);
  uint64_t v140 = (_OWORD *)(a2 + v138);
  uint64_t v141 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v140, 1, v141))
  {
    uint64_t v142 = sub_10017DF08(&qword_100E66E28);
    memcpy(v139, v140, *(void *)(*(void *)(v142 - 8) + 64));
  }
  else
  {
    long long v143 = v140[1];
    *uint64_t v139 = *v140;
    v139[1] = v143;
    uint64_t v144 = *(int *)(v141 + 20);
    uint64_t v145 = (_OWORD *)((char *)v139 + v144);
    uint64_t v146 = (_OWORD *)((char *)v140 + v144);
    uint64_t v147 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v309 = v6;
      *uint64_t v145 = *v146;
      uint64_t v303 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v148 = v303[5];
      uint64_t v149 = (char *)v145 + v148;
      uint64_t v150 = (char *)v146 + v148;
      uint64_t v151 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v151))
      {
        uint64_t v152 = sub_10017DF08(&qword_100E749B0);
        memcpy(v149, v150, *(void *)(*(void *)(v152 - 8) + 64));
        uint64_t v153 = *(void (***)(void *, const void *, uint64_t))(v151 - 8);
      }
      else
      {
        __dste = *(void (***)(void *, const void *, uint64_t))(v151 - 8);
        __dste[4](v149, v150, v151);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v151);
        uint64_t v153 = __dste;
      }
      *(_OWORD *)((char *)v145 + v303[6]) = *(_OWORD *)((char *)v146 + v303[6]);
      uint64_t v289 = v153[4];
      v289((char *)v145 + v303[7], (char *)v146 + v303[7], v151);
      uint64_t v154 = v303[8];
      __dstb = (char *)v145 + v154;
      uint64_t v155 = (char *)v146 + v154;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v146 + v154, 1, v151))
      {
        uint64_t v156 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dstb, v155, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        v289(__dstb, v155, v151);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v151);
      }
      *((unsigned char *)v145 + v303[9]) = *((unsigned char *)v146 + v303[9]);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v309;
    }
    else
    {
      memcpy(v145, v146, *(void *)(*(void *)(v147 - 8) + 64));
    }
    uint64_t v157 = *(int *)(v141 + 24);
    uint64_t v158 = (char *)v139 + v157;
    uint64_t v159 = (char *)v140 + v157;
    uint64_t v160 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v159, 1, v160))
    {
      uint64_t v161 = sub_10017DF08(&qword_100E73810);
      memcpy(v158, v159, *(void *)(*(void *)(v161 - 8) + 64));
    }
    else
    {
      uint64_t v162 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v158, v159, v162);
      uint64_t v163 = sub_10017DF08(&qword_100E66478);
      v158[*(int *)(v163 + 48)] = v159[*(int *)(v163 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v158, 0, 1, v160);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v139, 0, 1, v141);
  }
  *(unsigned char *)(a1 + v6[20]) = *(unsigned char *)(a2 + v6[20]);
  uint64_t v164 = v6[21];
  uint64_t v165 = a1 + v164;
  uint64_t v166 = a2 + v164;
  uint64_t v167 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_100756DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100756E0C);
}

uint64_t sub_100756E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100756E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100756E68);
}

uint64_t sub_100756E68(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for AirQualityDetailViewModel.Model(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_100756EC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AirQualityDetailViewModel.Model(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100756F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AirQualityDetailViewModel.Model(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for AirQualityDetailViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E92478);
}

uint64_t sub_100756F74()
{
  uint64_t result = type metadata accessor for AirQualityDetailViewModel.Model(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_100756FEC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    uint64_t v16 = v15 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return v16;
  }
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  uint64_t v9 = a2[14];
  *(void *)(a1 + 104) = a2[13];
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = a2[16];
  *(void *)(a1 + 120) = a2[15];
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = a3[14];
  __dst = (void *)(a1 + v11);
  uint64_t v12 = (char *)a2 + v11;
  *(void *)(a1 + 136) = a2[17];
  uint64_t v13 = type metadata accessor for AirPollutant();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(__dst, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(__dst, v12, v13);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v13);
  }
  uint64_t v17 = a3[15];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  uint64_t v21 = a1;
  if (v20)
  {
    *uint64_t v18 = *v19;
    v18[1] = v20;
    v18[2] = v19[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    v18[2] = v19[2];
  }
  uint64_t v22 = a3[16];
  uint64_t v23 = a3[17];
  uint64_t v24 = *(void **)((char *)a2 + v22);
  *(void *)(v21 + v22) = v24;
  *(void *)(v21 + v23) = *(uint64_t *)((char *)a2 + v23);
  uint64_t v25 = a3[18];
  uint64_t v133 = v21;
  uint64_t v26 = (void *)(v21 + v25);
  uint64_t v27 = (uint64_t)a2 + v25;
  uint64_t v28 = *(uint64_t *)((char *)a2 + v25 + 8);
  *uint64_t v26 = *(uint64_t *)((char *)a2 + v25);
  v26[1] = v28;
  uint64_t v29 = type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v30 = *(int *)(v29 + 20);
  __dstc = (char *)v26 + v30;
  uint64_t v31 = v27 + v30;
  uint64_t v32 = type metadata accessor for Location();
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
  id v34 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(__dstc, v31, v32);
  uint64_t v35 = v29;
  uint64_t v36 = *(int *)(v29 + 24);
  uint64_t v37 = (void *)((char *)v26 + v36);
  uint64_t v38 = (void *)(v27 + v36);
  uint64_t v39 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, (uint64_t)v39))
  {
    __dsta = v26;
    uint64_t v41 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v41;
    uint64_t v42 = v39[5];
    uint64_t v43 = (char *)v37 + v42;
    uint64_t v44 = (char *)v38 + v42;
    uint64_t v45 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      uint64_t v46 = sub_10017DF08(&qword_100E63730);
      memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
    uint64_t v16 = v133;
    uint64_t v47 = v39[6];
    uint64_t v48 = (char *)v37 + v47;
    uint64_t v49 = (char *)v38 + v47;
    uint64_t v50 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v39[7];
    uint64_t v52 = (char *)v37 + v51;
    uint64_t v53 = (char *)v38 + v51;
    uint64_t v54 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
    {
      uint64_t v55 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      uint64_t v56 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v52, v53, v56);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
    }
    uint64_t v57 = v39[8];
    uint64_t v58 = (void *)((char *)v37 + v57);
    uint64_t v59 = (void *)((char *)v38 + v57);
    uint64_t v60 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v63 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v58, v59, v63);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
        goto LABEL_23;
      }
      uint64_t v62 = v59[1];
      *uint64_t v58 = *v59;
      v58[1] = v62;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    uint64_t v64 = v39[9];
    uint64_t v65 = (char *)v37 + v64;
    uint64_t v66 = (char *)v38 + v64;
    uint64_t v67 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
    {
      uint64_t v68 = sub_10017DF08(&qword_100E63740);
      memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      uint64_t v26 = __dsta;
    }
    else
    {
      uint64_t v69 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v69))
      {
        uint64_t v70 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v65, v66, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v65, v66, v69);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v69);
      }
      uint64_t v71 = *(int *)(v67 + 20);
      uint64_t v72 = &v65[v71];
      uint64_t v73 = &v66[v71];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v69))
      {
        uint64_t v74 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v72, v73, v69);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v69);
      }
      uint64_t v26 = __dsta;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, (uint64_t)v39);
    goto LABEL_33;
  }
  uint64_t v40 = sub_10017DF08(&qword_100E63850);
  memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  uint64_t v16 = v133;
LABEL_33:
  uint64_t v75 = v35;
  uint64_t v76 = *(int *)(v35 + 28);
  uint64_t v77 = (void *)((char *)v26 + v76);
  uint64_t v78 = (void *)(v27 + v76);
  uint64_t v79 = v78[1];
  *uint64_t v77 = *v78;
  v77[1] = v79;
  uint64_t v80 = *(int *)(v35 + 32);
  int v81 = (char *)v26 + v80;
  uint64_t v82 = v27 + v80;
  uint64_t v83 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16);
  swift_bridgeObjectRetain();
  v84(v81, v82, v83);
  *((unsigned char *)v26 + *(int *)(v75 + 36)) = *(unsigned char *)(v27 + *(int *)(v75 + 36));
  uint64_t v85 = a2;
  uint64_t v86 = a3[19];
  uint64_t v87 = (void *)(v16 + v86);
  size_t v88 = (uint64_t *)((char *)a2 + v86);
  uint64_t v89 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89))
  {
    uint64_t v90 = sub_10017DF08(&qword_100E66E28);
    memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    uint64_t v91 = v88[1];
    if (v91)
    {
      *uint64_t v87 = *v88;
      v87[1] = v91;
      uint64_t v92 = v88[3];
      v87[2] = v88[2];
      v87[3] = v92;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v93 = *((_OWORD *)v88 + 1);
      *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
      *((_OWORD *)v87 + 1) = v93;
    }
    uint64_t v94 = *(int *)(v89 + 20);
    uint64_t v95 = (void *)((char *)v87 + v94);
    uint64_t v96 = (void *)((char *)v88 + v94);
    uint64_t v97 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v98 = v96[1];
      *uint64_t v95 = *v96;
      v95[1] = v98;
      __dstb = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v99 = __dstb[5];
      uint64_t v100 = (char *)v95 + v99;
      uint64_t v101 = (char *)v96 + v99;
      uint64_t v102 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v128 = v89;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
      {
        uint64_t v103 = sub_10017DF08(&qword_100E749B0);
        memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
      }
      uint64_t v104 = __dstb[6];
      uint64_t v105 = (void *)((char *)v95 + v104);
      int v106 = (void *)((char *)v96 + v104);
      uint64_t v107 = v106[1];
      void *v105 = *v106;
      v105[1] = v107;
      uint64_t v108 = __dstb[7];
      int v109 = (char *)v95 + v108;
      int v110 = (char *)v96 + v108;
      uint64_t v111 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
      swift_bridgeObjectRetain();
      v111(v109, v110, v102);
      uint64_t v112 = __dstb[8];
      uint64_t v113 = (char *)v95 + v112;
      uint64_t v114 = (char *)v96 + v112;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96 + v112, 1, v102))
      {
        uint64_t v115 = sub_10017DF08(&qword_100E749B0);
        memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
      }
      else
      {
        v111(v113, v114, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v102);
      }
      uint64_t v16 = v133;
      uint64_t v85 = a2;
      uint64_t v89 = v128;
      *((unsigned char *)v95 + __dstb[9]) = *((unsigned char *)v96 + __dstb[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
    }
    uint64_t v116 = *(int *)(v89 + 24);
    uint64_t v117 = (char *)v87 + v116;
    uint64_t v118 = (char *)v88 + v116;
    uint64_t v119 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
    {
      uint64_t v120 = sub_10017DF08(&qword_100E73810);
      memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      uint64_t v121 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v117, v118, v121);
      uint64_t v122 = sub_10017DF08(&qword_100E66478);
      v117[*(int *)(v122 + 48)] = v118[*(int *)(v122 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v89);
  }
  uint64_t v123 = a3[21];
  *(unsigned char *)(v16 + a3[20]) = *((unsigned char *)v85 + a3[20]);
  uint64_t v124 = v16 + v123;
  uint64_t v125 = (uint64_t)v85 + v123;
  uint64_t v126 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 16))(v124, v125, v126);
  return v16;
}

uint64_t sub_100757B80(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[14];
  uint64_t v5 = type metadata accessor for AirPollutant();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  if (*(void *)(a1 + a2[15] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[18];
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v6 + v7[6];
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, (uint64_t)v11))
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + v11[5];
    uint64_t v13 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    uint64_t v14 = v10 + v11[6];
    uint64_t v15 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v10 + v11[7];
    uint64_t v17 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
    {
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
    }
    uint64_t v19 = v10 + v11[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = v10 + v11[9];
    uint64_t v23 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23))
    {
      uint64_t v24 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v24)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
      }
      uint64_t v25 = v22 + *(int *)(v23 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v24)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v25, v24);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v6 + v7[8];
  uint64_t v27 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  uint64_t v28 = a1 + a2[19];
  uint64_t v29 = type metadata accessor for DetailComponentContainerViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29))
  {
    if (*(void *)(v28 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v30 = v28 + *(int *)(v29 + 20);
    type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v32 = v30 + v31[5];
      uint64_t v33 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      }
      swift_bridgeObjectRelease();
      id v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8);
      v34(v30 + v31[7], v33);
      uint64_t v35 = v30 + v31[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v33)) {
        v34(v35, v33);
      }
    }
    uint64_t v36 = v28 + *(int *)(v29 + 24);
    uint64_t v37 = type metadata accessor for DetailComponentAction();
    if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v37))
    {
      uint64_t v38 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v36, v38);
    }
  }
  uint64_t v39 = a1 + a2[21];
  uint64_t v40 = type metadata accessor for LocationDetailEntity();
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8);

  return v41(v39, v40);
}

uint64_t sub_100758174(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  uint64_t v10 = a3[14];
  __dst = (void *)(a1 + v10);
  uint64_t v11 = (const void *)(a2 + v10);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v12 = type metadata accessor for AirPollutant();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(__dst, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v12);
  }
  uint64_t v14 = a3[15];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  uint64_t v18 = a1;
  if (v17)
  {
    void *v15 = *v16;
    v15[1] = v17;
    v15[2] = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    v15[2] = v16[2];
  }
  uint64_t v19 = a3[16];
  uint64_t v20 = a3[17];
  uint64_t v21 = *(void **)(a2 + v19);
  *(void *)(v18 + v19) = v21;
  *(void *)(v18 + v20) = *(void *)(a2 + v20);
  uint64_t v22 = a3[18];
  uint64_t v128 = v18;
  uint64_t v23 = (void *)(v18 + v22);
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22 + 8);
  *uint64_t v23 = *(void *)(a2 + v22);
  v23[1] = v25;
  uint64_t v26 = type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v27 = *(int *)(v26 + 20);
  __dstb = (char *)v23 + v27;
  uint64_t v28 = v24 + v27;
  uint64_t v29 = type metadata accessor for Location();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
  id v31 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(__dstb, v28, v29);
  uint64_t v32 = (int *)v26;
  uint64_t v33 = *(int *)(v26 + 24);
  id v34 = (void *)((char *)v23 + v33);
  uint64_t v35 = (void *)(v24 + v33);
  uint64_t v36 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v36))
  {
    uint64_t v37 = sub_10017DF08(&qword_100E63850);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    uint64_t v38 = v128;
    goto LABEL_31;
  }
  uint64_t v127 = v23;
  uint64_t v39 = v35[1];
  *id v34 = *v35;
  v34[1] = v39;
  uint64_t v40 = v36[5];
  uint64_t v41 = (char *)v34 + v40;
  uint64_t v42 = (char *)v35 + v40;
  uint64_t v43 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E63730);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  uint64_t v45 = v36[6];
  uint64_t v46 = (char *)v34 + v45;
  uint64_t v47 = (char *)v35 + v45;
  uint64_t v48 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  uint64_t v49 = v36[7];
  uint64_t v50 = (char *)v34 + v49;
  uint64_t v51 = (char *)v35 + v49;
  uint64_t v52 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
  {
    uint64_t v53 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    uint64_t v54 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v50, v51, v54);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
  }
  uint64_t v55 = v36[8];
  uint64_t v56 = (void *)((char *)v34 + v55);
  uint64_t v57 = (void *)((char *)v35 + v55);
  uint64_t v58 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v61 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v56, v57, v61);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      goto LABEL_21;
    }
    uint64_t v60 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v60;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_21:
  uint64_t v62 = v36[9];
  uint64_t v63 = (char *)v34 + v62;
  uint64_t v64 = (char *)v35 + v62;
  uint64_t v65 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
  {
    uint64_t v66 = sub_10017DF08(&qword_100E63740);
    memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    uint64_t v67 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v67))
    {
      uint64_t v68 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v63, v64, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v67);
    }
    uint64_t v69 = *(int *)(v65 + 20);
    uint64_t v70 = &v63[v69];
    uint64_t v71 = &v64[v69];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v67))
    {
      uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v70, v71, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v67);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
  }
  uint64_t v23 = v127;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, (uint64_t)v36);
  uint64_t v38 = v128;
LABEL_31:
  uint64_t v73 = v32[7];
  uint64_t v74 = (void *)((char *)v23 + v73);
  uint64_t v75 = (void *)(v24 + v73);
  uint64_t v76 = v75[1];
  *uint64_t v74 = *v75;
  v74[1] = v76;
  uint64_t v77 = v32[8];
  uint64_t v78 = (char *)v23 + v77;
  uint64_t v79 = v24 + v77;
  uint64_t v80 = type metadata accessor for WeatherMapOverlayKind();
  int v81 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16);
  swift_bridgeObjectRetain();
  v81(v78, v79, v80);
  *((unsigned char *)v23 + v32[9]) = *(unsigned char *)(v24 + v32[9]);
  uint64_t v83 = a3;
  uint64_t v82 = a2;
  uint64_t v84 = a3[19];
  uint64_t v85 = (void *)(v38 + v84);
  uint64_t v86 = (void *)(a2 + v84);
  uint64_t v87 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v88 = v38;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
  {
    uint64_t v89 = sub_10017DF08(&qword_100E66E28);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    uint64_t v90 = v86[1];
    if (v90)
    {
      *uint64_t v85 = *v86;
      v85[1] = v90;
      uint64_t v91 = v86[3];
      _OWORD v85[2] = v86[2];
      v85[3] = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v92 = *((_OWORD *)v86 + 1);
      *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
      *((_OWORD *)v85 + 1) = v92;
    }
    uint64_t v93 = *(int *)(v87 + 20);
    uint64_t v94 = (void *)((char *)v85 + v93);
    uint64_t v95 = (void *)((char *)v86 + v93);
    uint64_t v96 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v97 = v95[1];
      *uint64_t v94 = *v95;
      v94[1] = v97;
      __dsta = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v98 = __dsta[5];
      uint64_t v99 = (char *)v94 + v98;
      uint64_t v100 = (char *)v95 + v98;
      uint64_t v101 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
      {
        uint64_t v102 = sub_10017DF08(&qword_100E749B0);
        memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
      }
      uint64_t v103 = __dsta[6];
      uint64_t v104 = (void *)((char *)v94 + v103);
      uint64_t v105 = (void *)((char *)v95 + v103);
      uint64_t v106 = v105[1];
      *uint64_t v104 = *v105;
      v104[1] = v106;
      uint64_t v107 = __dsta[7];
      uint64_t v108 = (char *)v94 + v107;
      uint64_t v129 = v94;
      int v109 = (char *)v95 + v107;
      int v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
      swift_bridgeObjectRetain();
      v110(v108, v109, v101);
      uint64_t v111 = __dsta[8];
      uint64_t v112 = (char *)v129 + v111;
      uint64_t v113 = (char *)v95 + v111;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95 + v111, 1, v101))
      {
        uint64_t v114 = sub_10017DF08(&qword_100E749B0);
        memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        v110(v112, v113, v101);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v101);
      }
      uint64_t v83 = a3;
      uint64_t v82 = a2;
      *((unsigned char *)v129 + __dsta[9]) = *((unsigned char *)v95 + __dsta[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
    }
    uint64_t v115 = *(int *)(v87 + 24);
    uint64_t v116 = (char *)v85 + v115;
    uint64_t v117 = (char *)v86 + v115;
    uint64_t v118 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
    {
      uint64_t v119 = sub_10017DF08(&qword_100E73810);
      memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      uint64_t v120 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v116, v117, v120);
      uint64_t v121 = sub_10017DF08(&qword_100E66478);
      v116[*(int *)(v121 + 48)] = v117[*(int *)(v121 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
  }
  uint64_t v122 = v83[21];
  *(unsigned char *)(v88 + v83[20]) = *(unsigned char *)(v82 + v83[20]);
  uint64_t v123 = v88 + v122;
  uint64_t v124 = v82 + v122;
  uint64_t v125 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
  return v88;
}

uint64_t sub_100758CC4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[14];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for AirPollutant();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[15];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = *(void *)(a1 + v14 + 8);
  uint64_t v18 = *(void *)(a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      void *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[2] = v16[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004C3C74((uint64_t)v15);
      uint64_t v19 = v16[2];
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      v15[2] = v19;
    }
  }
  else if (v18)
  {
    void *v15 = *v16;
    v15[1] = v16[1];
    v15[2] = v16[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)v16;
    v15[2] = v16[2];
    *(_OWORD *)uint64_t v15 = v20;
  }
  uint64_t v21 = a3[16];
  uint64_t v22 = *(void **)(a1 + v21);
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  id v24 = v23;

  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[18];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  *uint64_t v26 = *(void *)(a2 + v25);
  v26[1] = *(void *)(a2 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v29 = v28[5];
  uint64_t v30 = (char *)v26 + v29;
  id v31 = &v27[v29];
  uint64_t v32 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = v28[6];
  id v34 = (void *)((char *)v26 + v33);
  uint64_t v35 = &v27[v33];
  uint64_t v36 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v30) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, (uint64_t)v36);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v36);
  if (!v30)
  {
    if (v37)
    {
      sub_1001BC1DC((uint64_t)v34, (void (*)(void))type metadata accessor for WeatherData);
      goto LABEL_21;
    }
    __dsta = v27;
    uint64_t v218 = v28;
    uint64_t v222 = a3;
    *id v34 = *(void *)v35;
    v34[1] = *((void *)v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v44 = v36[5];
    uint64_t v45 = (char *)v34 + v44;
    uint64_t v46 = &v35[v44];
    uint64_t v47 = type metadata accessor for Locale();
    int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v47);
    int v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47);
    if (v48)
    {
      if (!v49)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v73 = *(void *)(v47 - 8);
      if (!v49)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v45, v46, v47);
LABEL_42:
        uint64_t v75 = v36[6];
        uint64_t v76 = (char *)v34 + v75;
        uint64_t v77 = &v35[v75];
        uint64_t v78 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 24))(v76, v77, v78);
        uint64_t v79 = v36[7];
        uint64_t v80 = (char *)v34 + v79;
        int v81 = &v35[v79];
        uint64_t v82 = sub_10017DF08(&qword_100E63738);
        int v83 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v82);
        int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82);
        if (v83)
        {
          if (!v84)
          {
            uint64_t v85 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v80, v81, v85);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v82);
            goto LABEL_48;
          }
        }
        else
        {
          if (!v84)
          {
            uint64_t v106 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 24))(v80, v81, v106);
LABEL_48:
            uint64_t v27 = __dsta;
            uint64_t v28 = v218;
            if (a1 == a2) {
              goto LABEL_62;
            }
            uint64_t v87 = v36[8];
            uint64_t v88 = (void *)((char *)v34 + v87);
            uint64_t v89 = &v35[v87];
            sub_1001BC1DC((uint64_t)v34 + v87, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
            uint64_t v90 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v96 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v88, v89, v96);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
                goto LABEL_61;
              }
              *uint64_t v88 = *(void *)v89;
              v88[1] = *((void *)v89 + 1);
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
LABEL_61:
            uint64_t v28 = v218;
LABEL_62:
            uint64_t v97 = v36[9];
            uint64_t v98 = (char *)v34 + v97;
            uint64_t v99 = &v35[v97];
            uint64_t v100 = type metadata accessor for WeatherDataOverrides();
            int v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v100);
            int v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100);
            if (v101)
            {
              if (!v102)
              {
                uint64_t v103 = type metadata accessor for Date();
                a3 = v222;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v103))
                {
                  uint64_t v104 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v98, v99, *(void *)(*(void *)(v104 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v98, v99, v103);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v103);
                }
                uint64_t v110 = *(int *)(v100 + 20);
                uint64_t v111 = &v98[v110];
                uint64_t v112 = &v99[v110];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v103))
                {
                  uint64_t v113 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v111, v112, v103);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v103);
                }
                uint64_t v114 = (uint64_t)v98;
                uint64_t v115 = v100;
                goto LABEL_79;
              }
LABEL_68:
              uint64_t v105 = sub_10017DF08(&qword_100E63740);
              memcpy(v98, v99, *(void *)(*(void *)(v105 - 8) + 64));
              a3 = v222;
              goto LABEL_90;
            }
            if (v102)
            {
              sub_1001BC1DC((uint64_t)v98, (void (*)(void))type metadata accessor for WeatherDataOverrides);
              goto LABEL_68;
            }
            uint64_t v107 = type metadata accessor for Date();
            int v108 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v107);
            int v109 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v107);
            if (v108)
            {
              a3 = v222;
              if (!v109)
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v98, v99, v107);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v107);
                goto LABEL_83;
              }
            }
            else
            {
              uint64_t v116 = *(void *)(v107 - 8);
              a3 = v222;
              if (!v109)
              {
                (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v98, v99, v107);
LABEL_83:
                uint64_t v118 = *(int *)(v100 + 20);
                uint64_t v119 = &v98[v118];
                uint64_t v120 = &v99[v118];
                int v121 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v107);
                int v122 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v107);
                if (v121)
                {
                  if (!v122)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v119, v120, v107);
                    uint64_t v114 = (uint64_t)v119;
                    uint64_t v115 = v107;
LABEL_79:
                    _s7Weather24LocationCompositionStateOwst_0(v114, 0, 1, v115);
LABEL_89:
                    uint64_t v28 = v218;
                    goto LABEL_90;
                  }
                }
                else
                {
                  uint64_t v123 = *(void *)(v107 - 8);
                  if (!v122)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v123 + 24))(v119, v120, v107);
                    goto LABEL_89;
                  }
                  (*(void (**)(char *, uint64_t))(v123 + 8))(v119, v107);
                }
                uint64_t v124 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
                goto LABEL_89;
              }
              (*(void (**)(char *, uint64_t))(v116 + 8))(v98, v107);
            }
            uint64_t v117 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v98, v99, *(void *)(*(void *)(v117 - 8) + 64));
            goto LABEL_83;
          }
          sub_100178110((uint64_t)v80, &qword_100E63738);
        }
        uint64_t v86 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v80, v81, *(void *)(*(void *)(v86 - 8) + 64));
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v45, v47);
    }
    uint64_t v74 = sub_10017DF08(&qword_100E63730);
    memcpy(v45, v46, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_42;
  }
  if (v37)
  {
LABEL_21:
    uint64_t v43 = sub_10017DF08(&qword_100E63850);
    memcpy(v34, v35, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_90;
  }
  __dst = v27;
  uint64_t v217 = v28;
  uint64_t v221 = a3;
  *id v34 = *(void *)v35;
  v34[1] = *((void *)v35 + 1);
  uint64_t v38 = v36[5];
  uint64_t v39 = (char *)v34 + v38;
  uint64_t v40 = &v35[v38];
  uint64_t v41 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
  {
    uint64_t v42 = sub_10017DF08(&qword_100E63730);
    memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
  }
  uint64_t v50 = v36[6];
  uint64_t v51 = (char *)v34 + v50;
  uint64_t v52 = &v35[v50];
  uint64_t v53 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  uint64_t v54 = v36[7];
  uint64_t v55 = (char *)v34 + v54;
  uint64_t v56 = &v35[v54];
  uint64_t v57 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
  {
    uint64_t v58 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    uint64_t v59 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v55, v56, v59);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
  }
  uint64_t v60 = v36[8];
  uint64_t v61 = (void *)((char *)v34 + v60);
  uint64_t v62 = &v35[v60];
  uint64_t v63 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v64 = swift_getEnumCaseMultiPayload();
  if (v64 == 1)
  {
    uint64_t v65 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v61, v62, v65);
  }
  else
  {
    if (v64)
    {
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
      goto LABEL_35;
    }
    *uint64_t v61 = *(void *)v62;
    v61[1] = *((void *)v62 + 1);
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_35:
  a3 = v221;
  uint64_t v66 = v36[9];
  uint64_t v67 = (char *)v34 + v66;
  uint64_t v68 = &v35[v66];
  uint64_t v69 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
  {
    uint64_t v70 = sub_10017DF08(&qword_100E63740);
    memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    uint64_t v71 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v71))
    {
      uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v67, v68, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v67, v68, v71);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v71);
    }
    uint64_t v92 = *(int *)(v69 + 20);
    uint64_t v93 = &v67[v92];
    uint64_t v94 = &v68[v92];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v71))
    {
      uint64_t v95 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v93, v94, v71);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v71);
    }
    a3 = v221;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
    uint64_t v27 = __dst;
  }
  uint64_t v28 = v217;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, (uint64_t)v36);
LABEL_90:
  uint64_t v125 = v28[7];
  uint64_t v126 = (void *)((char *)v26 + v125);
  uint64_t v127 = &v27[v125];
  void *v126 = *(void *)v127;
  v126[1] = *((void *)v127 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v128 = v28[8];
  uint64_t v129 = (char *)v26 + v128;
  uint64_t v130 = &v27[v128];
  uint64_t v131 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 24))(v129, v130, v131);
  *((unsigned char *)v26 + v28[9]) = v27[v28[9]];
  uint64_t v132 = a3[19];
  uint64_t v133 = (void *)(a1 + v132);
  uint64_t v134 = (void *)(a2 + v132);
  uint64_t v135 = type metadata accessor for DetailComponentContainerViewModel();
  LODWORD(v129) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v135);
  int v136 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, v135);
  if (v129)
  {
    if (!v136)
    {
      if (v134[1])
      {
        *uint64_t v133 = *v134;
        v133[1] = v134[1];
        v133[2] = v134[2];
        v133[3] = v134[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v141 = *((_OWORD *)v134 + 1);
        *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
        *((_OWORD *)v133 + 1) = v141;
      }
      uint64_t v142 = *(int *)(v135 + 20);
      long long v143 = (void *)((char *)v133 + v142);
      uint64_t v144 = (void *)((char *)v134 + v142);
      uint64_t v145 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v223 = a3;
        *long long v143 = *v144;
        v143[1] = v144[1];
        uint64_t v146 = type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v147 = *(int *)(v146 + 20);
        __dstb = (char *)v143 + v147;
        uint64_t v219 = (int *)v146;
        uint64_t v148 = (char *)v144 + v147;
        uint64_t v149 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v208 = v135;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149))
        {
          uint64_t v150 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dstb, v148, *(void *)(*(void *)(v150 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(__dstb, v148, v149);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v149);
        }
        uint64_t v151 = v149;
        uint64_t v152 = v219[6];
        uint64_t v153 = (void *)((char *)v143 + v152);
        uint64_t v154 = (void *)((char *)v144 + v152);
        *uint64_t v153 = *v154;
        v153[1] = v154[1];
        uint64_t v155 = v219[7];
        uint64_t v211 = (char *)v144 + v155;
        __dstd = (char *)v143 + v155;
        uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16);
        swift_bridgeObjectRetain();
        v156(__dstd, v211, v149);
        uint64_t v157 = v219[8];
        uint64_t v158 = (char *)v143 + v157;
        uint64_t v159 = (char *)v144 + v157;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144 + v157, 1, v151))
        {
          uint64_t v160 = sub_10017DF08(&qword_100E749B0);
          memcpy(v158, v159, *(void *)(*(void *)(v160 - 8) + 64));
        }
        else
        {
          v156(v158, v159, v151);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v158, 0, 1, v151);
        }
        a3 = v223;
        uint64_t v135 = v208;
        *((unsigned char *)v143 + v219[9]) = *((unsigned char *)v144 + v219[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
      }
      uint64_t v161 = *(int *)(v135 + 24);
      uint64_t v162 = (char *)v133 + v161;
      uint64_t v163 = (char *)v134 + v161;
      uint64_t v164 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
      {
        uint64_t v165 = sub_10017DF08(&qword_100E73810);
        memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
      }
      else
      {
        uint64_t v166 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v162, v163, v166);
        uint64_t v167 = sub_10017DF08(&qword_100E66478);
        v162[*(int *)(v167 + 48)] = v163[*(int *)(v167 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v164);
      }
      uint64_t v168 = (uint64_t)v133;
      uint64_t v169 = v135;
      goto LABEL_117;
    }
    goto LABEL_96;
  }
  if (v136)
  {
    sub_1001BC1DC((uint64_t)v133, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
LABEL_96:
    size_t v137 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66E28) - 8) + 64);
    uint64_t v138 = v133;
    uint64_t v139 = v134;
    goto LABEL_97;
  }
  uint64_t v140 = v134[1];
  if (v133[1])
  {
    if (v140)
    {
      *uint64_t v133 = *v134;
      v133[1] = v134[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v133[2] = v134[2];
      v133[3] = v134[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004B70A8((uint64_t)v133);
      long long v175 = *((_OWORD *)v134 + 1);
      *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
      *((_OWORD *)v133 + 1) = v175;
    }
  }
  else if (v140)
  {
    *uint64_t v133 = *v134;
    v133[1] = v134[1];
    v133[2] = v134[2];
    v133[3] = v134[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v176 = *((_OWORD *)v134 + 1);
    *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
    *((_OWORD *)v133 + 1) = v176;
  }
  if (a1 != a2)
  {
    uint64_t v177 = *(int *)(v135 + 20);
    uint64_t v178 = (void *)((char *)v133 + v177);
    uint64_t v179 = (void *)((char *)v134 + v177);
    sub_1001BC1DC((uint64_t)v133 + v177, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v180 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v224 = a3;
      *uint64_t v178 = *v179;
      v178[1] = v179[1];
      uint64_t v181 = type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v182 = *(int *)(v181 + 20);
      __dstc = (char *)v178 + v182;
      uint64_t v220 = (int *)v181;
      uint64_t v183 = (char *)v179 + v182;
      uint64_t v184 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v184))
      {
        uint64_t v185 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dstc, v183, *(void *)(*(void *)(v185 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(__dstc, v183, v184);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v184);
      }
      uint64_t v186 = v184;
      uint64_t v187 = v220[6];
      uint64_t v188 = (void *)((char *)v178 + v187);
      uint64_t v189 = (void *)((char *)v179 + v187);
      *uint64_t v188 = *v189;
      v188[1] = v189[1];
      uint64_t v190 = v220[7];
      uint64_t v209 = (char *)v178 + v190;
      unsigned __int8 v207 = (char *)v179 + v190;
      uint64_t v191 = *(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16);
      swift_bridgeObjectRetain();
      int v192 = v209;
      uint64_t v210 = v191;
      v191(v192, v207, v184);
      uint64_t v193 = v220[8];
      uint64_t v194 = (char *)v178 + v193;
      uint64_t v195 = (char *)v179 + v193;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179 + v193, 1, v186))
      {
        uint64_t v196 = sub_10017DF08(&qword_100E749B0);
        memcpy(v194, v195, *(void *)(*(void *)(v196 - 8) + 64));
      }
      else
      {
        v210(v194, v195, v186);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, v186);
      }
      a3 = v224;
      *((unsigned char *)v178 + v220[9]) = *((unsigned char *)v179 + v220[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
    }
  }
  uint64_t v197 = *(int *)(v135 + 24);
  uint64_t v198 = (uint64_t)v133 + v197;
  uint64_t v199 = (uint64_t)v134 + v197;
  uint64_t v200 = type metadata accessor for DetailComponentAction();
  int v201 = _s7Weather24LocationCompositionStateOwet_0(v198, 1, v200);
  int v202 = _s7Weather24LocationCompositionStateOwet_0(v199, 1, v200);
  if (v201)
  {
    if (!v202)
    {
      uint64_t v203 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v203 - 8) + 16))(v198, v199, v203);
      uint64_t v204 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v198 + *(int *)(v204 + 48)) = *(unsigned char *)(v199 + *(int *)(v204 + 48));
      uint64_t v168 = v198;
      uint64_t v169 = v200;
LABEL_117:
      _s7Weather24LocationCompositionStateOwst_0(v168, 0, 1, v169);
      goto LABEL_118;
    }
  }
  else
  {
    if (!v202)
    {
      uint64_t v205 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v205 - 8) + 24))(v198, v199, v205);
      uint64_t v206 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v198 + *(int *)(v206 + 48)) = *(unsigned char *)(v199 + *(int *)(v206 + 48));
      goto LABEL_118;
    }
    sub_1001BC1DC(v198, (void (*)(void))type metadata accessor for DetailComponentAction);
  }
  size_t v137 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
  uint64_t v138 = (void *)v198;
  uint64_t v139 = (const void *)v199;
LABEL_97:
  memcpy(v138, v139, v137);
LABEL_118:
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  uint64_t v170 = a3[21];
  uint64_t v171 = a1 + v170;
  uint64_t v172 = a2 + v170;
  uint64_t v173 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 24))(v171, v172, v173);
  return a1;
}

uint64_t sub_10075A640(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  uint64_t v9 = a3[14];
  int v10 = (void *)(a1 + v9);
  int v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v12 = type metadata accessor for AirPollutant();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v14 = v3[15];
  uint64_t v15 = v3[16];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v18 = v3[18];
  *(void *)(a1 + v3[17]) = *(void *)(a2 + v3[17]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v22 = v21[5];
  uint64_t v23 = v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = v21[6];
  uint64_t v27 = (_OWORD *)(v19 + v26);
  uint64_t v28 = (_OWORD *)(v20 + v26);
  uint64_t v29 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
  {
    uint64_t v30 = sub_10017DF08(&qword_100E63850);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    int v101 = v21;
    uint64_t v103 = v3;
    *uint64_t v27 = *v28;
    uint64_t v31 = v29[5];
    uint64_t v32 = (char *)v27 + v31;
    uint64_t v33 = (char *)v28 + v31;
    uint64_t v34 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = sub_10017DF08(&qword_100E63730);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
    }
    uint64_t v36 = v29[6];
    int v37 = (char *)v27 + v36;
    uint64_t v38 = (char *)v28 + v36;
    uint64_t v39 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    uint64_t v40 = v29[7];
    uint64_t v41 = (char *)v27 + v40;
    uint64_t v42 = (char *)v28 + v40;
    uint64_t v43 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
    {
      uint64_t v44 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      uint64_t v45 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v41, v42, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
    }
    uint64_t v46 = v29[8];
    uint64_t v47 = (char *)v27 + v46;
    int v48 = (char *)v28 + v46;
    uint64_t v49 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v50 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v47, v48, v50);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    uint64_t v51 = v29[9];
    uint64_t v52 = (char *)v27 + v51;
    uint64_t v53 = (char *)v28 + v51;
    uint64_t v54 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
    {
      uint64_t v55 = sub_10017DF08(&qword_100E63740);
      memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      uint64_t v56 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v56))
      {
        uint64_t v57 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v52, v53, v56);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v56);
      }
      uint64_t v58 = *(int *)(v54 + 20);
      __dst = &v52[v58];
      uint64_t v59 = &v53[v58];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v56))
      {
        uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(__dst, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(__dst, v59, v56);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v56);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
    }
    unint64_t v3 = v103;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
    uint64_t v21 = v101;
  }
  *(_OWORD *)(v19 + v21[7]) = *(_OWORD *)(v20 + v21[7]);
  uint64_t v61 = v21[8];
  uint64_t v62 = v19 + v61;
  uint64_t v63 = v20 + v61;
  uint64_t v64 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
  *(unsigned char *)(v19 + v21[9]) = *(unsigned char *)(v20 + v21[9]);
  uint64_t v65 = v3[19];
  uint64_t v66 = (_OWORD *)(a1 + v65);
  uint64_t v67 = (_OWORD *)(a2 + v65);
  uint64_t v68 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
  {
    uint64_t v69 = sub_10017DF08(&qword_100E66E28);
    memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    long long v70 = v67[1];
    *uint64_t v66 = *v67;
    v66[1] = v70;
    uint64_t v71 = *(int *)(v68 + 20);
    uint64_t v72 = (char *)v66 + v71;
    uint64_t v73 = (char *)v67 + v71;
    uint64_t v74 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v104 = v3;
      *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
      uint64_t v75 = type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v76 = *(int *)(v75 + 20);
      __dsta = &v72[v76];
      int v102 = (int *)v75;
      uint64_t v77 = &v73[v76];
      uint64_t v78 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78))
      {
        uint64_t v79 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dsta, v77, *(void *)(*(void *)(v79 - 8) + 64));
        uint64_t v80 = *(void *)(v78 - 8);
      }
      else
      {
        uint64_t v96 = *(void *)(v78 - 8);
        (*(void (**)(char *, char *, uint64_t))(v96 + 32))(__dsta, v77, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v78);
        uint64_t v80 = v96;
      }
      *(_OWORD *)&v72[v102[6]] = *(_OWORD *)&v73[v102[6]];
      uint64_t v97 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
      v97(&v72[v102[7]], &v73[v102[7]], v78);
      uint64_t v81 = v102[8];
      __dstb = &v72[v81];
      uint64_t v82 = &v73[v81];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v73[v81], 1, v78))
      {
        uint64_t v83 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dstb, v82, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        v97(__dstb, v82, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v78);
      }
      unint64_t v3 = v104;
      v72[v102[9]] = v73[v102[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    uint64_t v84 = *(int *)(v68 + 24);
    uint64_t v85 = (char *)v66 + v84;
    uint64_t v86 = (char *)v67 + v84;
    uint64_t v87 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
    {
      uint64_t v88 = sub_10017DF08(&qword_100E73810);
      memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      uint64_t v89 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v85, v86, v89);
      uint64_t v90 = sub_10017DF08(&qword_100E66478);
      v85[*(int *)(v90 + 48)] = v86[*(int *)(v90 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
  }
  uint64_t v91 = v3[21];
  *(unsigned char *)(a1 + v3[20]) = *(unsigned char *)(a2 + v3[20]);
  uint64_t v92 = a1 + v91;
  uint64_t v93 = a2 + v91;
  uint64_t v94 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
  return a1;
}

uint64_t sub_10075B054(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[14];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for AirPollutant();
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v16);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v14, v16);
LABEL_6:
    uint64_t v20 = sub_10017DF08(&qword_100E7B2D8);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v19 + 40))(v14, v15, v16);
LABEL_7:
  uint64_t v21 = a3[15];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  if (*(void *)(a1 + v21 + 8))
  {
    uint64_t v24 = v23[1];
    if (v24)
    {
      *uint64_t v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRelease();
      v22[2] = v23[2];
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1004C3C74((uint64_t)v22);
  }
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[2] = v23[2];
LABEL_12:
  uint64_t v25 = a3[16];
  uint64_t v26 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);

  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[18];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  uint64_t v30 = *(void *)(a2 + v27 + 8);
  *uint64_t v28 = *(void *)(a2 + v27);
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v32 = v31[5];
  uint64_t v33 = (char *)v28 + v32;
  uint64_t v34 = &v29[v32];
  uint64_t v35 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  uint64_t v36 = v31[6];
  int v37 = (void *)((char *)v28 + v36);
  uint64_t v38 = &v29[v36];
  uint64_t v39 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v33) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v39);
  int v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, (uint64_t)v39);
  if (!v33)
  {
    if (v40)
    {
      sub_1001BC1DC((uint64_t)v37, (void (*)(void))type metadata accessor for WeatherData);
      goto LABEL_18;
    }
    __dsta = v29;
    uint64_t v210 = v31;
    uint64_t v199 = a3;
    uint64_t v48 = *((void *)v38 + 1);
    *int v37 = *(void *)v38;
    v37[1] = v48;
    swift_bridgeObjectRelease();
    uint64_t v49 = v39[5];
    uint64_t v50 = (char *)v37 + v49;
    uint64_t v51 = &v38[v49];
    uint64_t v52 = type metadata accessor for Locale();
    int v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v52);
    int v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52);
    if (v53)
    {
      if (!v54)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v77 = *(void *)(v52 - 8);
      if (!v54)
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 40))(v50, v51, v52);
LABEL_38:
        uint64_t v79 = v39[6];
        uint64_t v80 = (char *)v37 + v79;
        uint64_t v81 = &v38[v79];
        uint64_t v82 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 40))(v80, v81, v82);
        uint64_t v83 = v39[7];
        uint64_t v84 = (char *)v37 + v83;
        uint64_t v85 = &v38[v83];
        uint64_t v86 = sub_10017DF08(&qword_100E63738);
        int v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v86);
        int v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86);
        if (v87)
        {
          if (!v88)
          {
            uint64_t v89 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v84, v85, v89);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
            goto LABEL_44;
          }
        }
        else
        {
          if (!v88)
          {
            uint64_t v164 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 40))(v84, v85, v164);
LABEL_44:
            a3 = v199;
            uint64_t v29 = __dsta;
            uint64_t v31 = v210;
            if (a1 != a2)
            {
              uint64_t v91 = v39[8];
              uint64_t v92 = (char *)v37 + v91;
              uint64_t v93 = &v38[v91];
              sub_1001BC1DC((uint64_t)v37 + v91, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
              uint64_t v94 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v95 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v92, v93, v95);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
              }
              uint64_t v29 = __dsta;
              uint64_t v31 = v210;
            }
            uint64_t v96 = v39[9];
            int v37 = (void *)((char *)v37 + v96);
            v38 += v96;
            uint64_t v97 = type metadata accessor for WeatherDataOverrides();
            int v98 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v97);
            int v99 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v97);
            if (v98)
            {
              if (!v99)
              {
                uint64_t v100 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v100))
                {
                  uint64_t v101 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v37, v38, *(void *)(*(void *)(v101 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v37, v38, v100);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v100);
                }
                uint64_t v181 = *(int *)(v97 + 20);
                uint64_t v182 = (char *)v37 + v181;
                uint64_t v183 = &v38[v181];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v100))
                {
                  uint64_t v184 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v182, v183, v100);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v182, 0, 1, v100);
                }
                uint64_t v185 = (uint64_t)v37;
                uint64_t v186 = v97;
                goto LABEL_115;
              }
LABEL_55:
              uint64_t v46 = &qword_100E63740;
              goto LABEL_19;
            }
            if (v99)
            {
              sub_1001BC1DC((uint64_t)v37, (void (*)(void))type metadata accessor for WeatherDataOverrides);
              goto LABEL_55;
            }
            uint64_t v165 = type metadata accessor for Date();
            int v166 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v165);
            int v167 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v165);
            if (v166)
            {
              if (!v167)
              {
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v37, v38, v165);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v165);
                goto LABEL_119;
              }
            }
            else
            {
              uint64_t v187 = *(void *)(v165 - 8);
              if (!v167)
              {
                (*(void (**)(void *, char *, uint64_t))(v187 + 40))(v37, v38, v165);
LABEL_119:
                uint64_t v189 = *(int *)(v97 + 20);
                uint64_t v190 = (char *)v37 + v189;
                uint64_t v191 = &v38[v189];
                int v192 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v165);
                int v193 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v165);
                if (v192)
                {
                  if (!v193)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 32))(v190, v191, v165);
                    uint64_t v185 = (uint64_t)v190;
                    uint64_t v186 = v165;
LABEL_115:
                    _s7Weather24LocationCompositionStateOwst_0(v185, 0, 1, v186);
LABEL_125:
                    uint64_t v29 = __dsta;
                    goto LABEL_62;
                  }
                }
                else
                {
                  uint64_t v194 = *(void *)(v165 - 8);
                  if (!v193)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v194 + 40))(v190, v191, v165);
                    goto LABEL_125;
                  }
                  (*(void (**)(char *, uint64_t))(v194 + 8))(v190, v165);
                }
                uint64_t v195 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v190, v191, *(void *)(*(void *)(v195 - 8) + 64));
                goto LABEL_125;
              }
              (*(void (**)(void *, uint64_t))(v187 + 8))(v37, v165);
            }
            uint64_t v188 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v37, v38, *(void *)(*(void *)(v188 - 8) + 64));
            goto LABEL_119;
          }
          sub_100178110((uint64_t)v84, &qword_100E63738);
        }
        uint64_t v90 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v84, v85, *(void *)(*(void *)(v90 - 8) + 64));
        goto LABEL_44;
      }
      (*(void (**)(char *, uint64_t))(v77 + 8))(v50, v52);
    }
    uint64_t v78 = sub_10017DF08(&qword_100E63730);
    memcpy(v50, v51, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_38;
  }
  if (v40)
  {
LABEL_18:
    uint64_t v46 = &qword_100E63850;
LABEL_19:
    uint64_t v47 = sub_10017DF08(v46);
    memcpy(v37, v38, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_62;
  }
  __dst = v29;
  uint64_t v209 = v31;
  *(_OWORD *)int v37 = *(_OWORD *)v38;
  uint64_t v41 = v39[5];
  uint64_t v42 = (char *)v37 + v41;
  uint64_t v43 = &v38[v41];
  uint64_t v44 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    uint64_t v45 = sub_10017DF08(&qword_100E63730);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  uint64_t v55 = v39[6];
  uint64_t v56 = (char *)v37 + v55;
  uint64_t v57 = &v38[v55];
  uint64_t v58 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = v39[7];
  uint64_t v60 = (char *)v37 + v59;
  uint64_t v61 = &v38[v59];
  uint64_t v62 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v63 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    uint64_t v64 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v60, v61, v64);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  uint64_t v65 = v39[8];
  uint64_t v66 = (char *)v37 + v65;
  uint64_t v67 = &v38[v65];
  uint64_t v68 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v69 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v66, v67, v69);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  uint64_t v70 = v39[9];
  uint64_t v71 = (char *)v37 + v70;
  uint64_t v72 = &v38[v70];
  uint64_t v73 = type metadata accessor for WeatherDataOverrides();
  uint64_t v31 = v209;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
  {
    uint64_t v74 = sub_10017DF08(&qword_100E63740);
    memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    uint64_t v75 = type metadata accessor for Date();
    uint64_t v200 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v75))
    {
      uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v71, v72, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v71, v72, v75);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v75);
    }
    uint64_t v102 = *(int *)(v73 + 20);
    uint64_t v103 = &v71[v102];
    uint64_t v104 = &v72[v102];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v75))
    {
      uint64_t v105 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v103, v104, v75);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v75);
    }
    uint64_t v31 = v209;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
    a3 = v200;
  }
  uint64_t v29 = __dst;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, (uint64_t)v39);
LABEL_62:
  uint64_t v106 = v31[7];
  uint64_t v107 = (void *)((char *)v28 + v106);
  int v108 = &v29[v106];
  uint64_t v110 = *(void *)v108;
  uint64_t v109 = *((void *)v108 + 1);
  *uint64_t v107 = v110;
  v107[1] = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v31[8];
  uint64_t v112 = (char *)v28 + v111;
  uint64_t v113 = &v29[v111];
  uint64_t v114 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 40))(v112, v113, v114);
  *((unsigned char *)v28 + v31[9]) = v29[v31[9]];
  uint64_t v115 = a3[19];
  uint64_t v116 = a1 + v115;
  uint64_t v117 = a2 + v115;
  uint64_t v118 = type metadata accessor for DetailComponentContainerViewModel();
  LODWORD(v112) = _s7Weather24LocationCompositionStateOwet_0(v116, 1, v118);
  int v119 = _s7Weather24LocationCompositionStateOwet_0(v117, 1, v118);
  if (v112)
  {
    if (!v119)
    {
      long long v120 = *(_OWORD *)(v117 + 16);
      *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
      *(_OWORD *)(v116 + 16) = v120;
      uint64_t v121 = *(int *)(v118 + 20);
      int v122 = (char *)(v116 + v121);
      uint64_t v123 = (char *)(v117 + v121);
      uint64_t v124 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        int v201 = a3;
        *(_OWORD *)int v122 = *(_OWORD *)v123;
        uint64_t v125 = type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v126 = *(int *)(v125 + 20);
        __dstb = &v122[v126];
        uint64_t v211 = (int *)v125;
        uint64_t v127 = &v123[v126];
        uint64_t v128 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
        {
          uint64_t v129 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dstb, v127, *(void *)(*(void *)(v129 - 8) + 64));
          uint64_t v130 = *(void *)(v128 - 8);
        }
        else
        {
          uint64_t v196 = *(void *)(v128 - 8);
          (*(void (**)(char *, char *, uint64_t))(v196 + 32))(__dstb, v127, v128);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v128);
          uint64_t v130 = v196;
        }
        *(_OWORD *)&v122[v211[6]] = *(_OWORD *)&v123[v211[6]];
        uint64_t v197 = *(void (**)(char *, char *, uint64_t))(v130 + 32);
        v197(&v122[v211[7]], &v123[v211[7]], v128);
        uint64_t v136 = v211[8];
        __dstc = &v122[v136];
        size_t v137 = &v123[v136];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v123[v136], 1, v128))
        {
          uint64_t v138 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dstc, v137, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          v197(__dstc, v137, v128);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v128);
        }
        a3 = v201;
        v122[v211[9]] = v123[v211[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
      }
      uint64_t v139 = *(int *)(v118 + 24);
      uint64_t v140 = (void *)(v116 + v139);
      long long v141 = (const void *)(v117 + v139);
      uint64_t v142 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, v142))
      {
        uint64_t v143 = sub_10017DF08(&qword_100E73810);
        memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        uint64_t v144 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v144 - 8) + 32))(v140, v141, v144);
        uint64_t v145 = sub_10017DF08(&qword_100E66478);
        *((unsigned char *)v140 + *(int *)(v145 + 48)) = *((unsigned char *)v141 + *(int *)(v145 + 48));
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, v142);
      }
      uint64_t v146 = v116;
      uint64_t v147 = v118;
      goto LABEL_84;
    }
    goto LABEL_69;
  }
  if (v119)
  {
    sub_1001BC1DC(v116, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
LABEL_69:
    size_t v131 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66E28) - 8) + 64);
    uint64_t v132 = (void *)v116;
    uint64_t v133 = (const void *)v117;
    goto LABEL_70;
  }
  if (!*(void *)(v116 + 8)) {
    goto LABEL_87;
  }
  uint64_t v134 = *(void *)(v117 + 8);
  if (!v134)
  {
    sub_1004B70A8(v116);
LABEL_87:
    long long v153 = *(_OWORD *)(v117 + 16);
    *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
    *(_OWORD *)(v116 + 16) = v153;
    goto LABEL_88;
  }
  *(void *)uint64_t v116 = *(void *)v117;
  *(void *)(v116 + 8) = v134;
  swift_bridgeObjectRelease();
  uint64_t v135 = *(void *)(v117 + 24);
  *(void *)(v116 + 16) = *(void *)(v117 + 16);
  *(void *)(v116 + 24) = v135;
  swift_bridgeObjectRelease();
LABEL_88:
  if (a1 != a2)
  {
    uint64_t v154 = *(int *)(v118 + 20);
    uint64_t v155 = (_OWORD *)(v116 + v154);
    uint64_t v156 = (_OWORD *)(v117 + v154);
    sub_1001BC1DC(v116 + v154, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v157 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      int v202 = a3;
      *uint64_t v155 = *v156;
      uint64_t v212 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v158 = v212[5];
      uint64_t v159 = (char *)v155 + v158;
      uint64_t v160 = (char *)v156 + v158;
      uint64_t v161 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v161))
      {
        uint64_t v162 = sub_10017DF08(&qword_100E749B0);
        memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
        uint64_t v163 = *(void (***)(void *, const void *, uint64_t))(v161 - 8);
      }
      else
      {
        __dste = *(void (***)(void *, const void *, uint64_t))(v161 - 8);
        __dste[4](v159, v160, v161);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v161);
        uint64_t v163 = __dste;
      }
      *(_OWORD *)((char *)v155 + v212[6]) = *(_OWORD *)((char *)v156 + v212[6]);
      uint64_t v198 = v163[4];
      v198((char *)v155 + v212[7], (char *)v156 + v212[7], v161);
      uint64_t v168 = v212[8];
      __dstd = (char *)v155 + v168;
      uint64_t v169 = (char *)v156 + v168;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156 + v168, 1, v161))
      {
        uint64_t v170 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dstd, v169, *(void *)(*(void *)(v170 - 8) + 64));
      }
      else
      {
        v198(__dstd, v169, v161);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstd, 0, 1, v161);
      }
      a3 = v202;
      *((unsigned char *)v155 + v212[9]) = *((unsigned char *)v156 + v212[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
    }
  }
  uint64_t v171 = *(int *)(v118 + 24);
  uint64_t v172 = v116 + v171;
  uint64_t v173 = v117 + v171;
  uint64_t v174 = type metadata accessor for DetailComponentAction();
  int v175 = _s7Weather24LocationCompositionStateOwet_0(v172, 1, v174);
  int v176 = _s7Weather24LocationCompositionStateOwet_0(v173, 1, v174);
  if (v175)
  {
    if (!v176)
    {
      uint64_t v177 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v177 - 8) + 32))(v172, v173, v177);
      uint64_t v178 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v172 + *(int *)(v178 + 48)) = *(unsigned char *)(v173 + *(int *)(v178 + 48));
      uint64_t v146 = v172;
      uint64_t v147 = v174;
LABEL_84:
      _s7Weather24LocationCompositionStateOwst_0(v146, 0, 1, v147);
      goto LABEL_85;
    }
  }
  else
  {
    if (!v176)
    {
      uint64_t v179 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v179 - 8) + 40))(v172, v173, v179);
      uint64_t v180 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v172 + *(int *)(v180 + 48)) = *(unsigned char *)(v173 + *(int *)(v180 + 48));
      goto LABEL_85;
    }
    sub_1001BC1DC(v172, (void (*)(void))type metadata accessor for DetailComponentAction);
  }
  size_t v131 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
  uint64_t v132 = (void *)v172;
  uint64_t v133 = (const void *)v173;
LABEL_70:
  memcpy(v132, v133, v131);
LABEL_85:
  uint64_t v148 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  uint64_t v149 = a1 + v148;
  uint64_t v150 = a2 + v148;
  uint64_t v151 = type metadata accessor for LocationDetailEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 40))(v149, v150, v151);
  return a1;
}

uint64_t sub_10075C728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10075C73C);
}

uint64_t sub_10075C73C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10017DF08(&qword_100E7B2D8);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[14];
    }
    else
    {
      type metadata accessor for ConditionDetailMapViewModel();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[18];
      }
      else
      {
        sub_10017DF08(&qword_100E66E28);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[19];
        }
        else
        {
          uint64_t v10 = type metadata accessor for LocationDetailEntity();
          uint64_t v11 = a3[21];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_10075C838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10075C84C);
}

uint64_t sub_10075C84C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10017DF08(&qword_100E7B2D8);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[14];
    }
    else
    {
      type metadata accessor for ConditionDetailMapViewModel();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[18];
      }
      else
      {
        sub_10017DF08(&qword_100E66E28);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[19];
        }
        else
        {
          uint64_t v10 = type metadata accessor for LocationDetailEntity();
          uint64_t v11 = a4[21];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_10075C944()
{
  sub_10075CB1C(319, (unint64_t *)&unk_100E924F0, (void (*)(uint64_t))&type metadata accessor for AirPollutant);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ConditionDetailMapViewModel();
    if (v1 <= 0x3F)
    {
      sub_10075CB1C(319, (unint64_t *)&qword_100E69CE0, (void (*)(uint64_t))type metadata accessor for DetailComponentContainerViewModel);
      if (v2 <= 0x3F)
      {
        type metadata accessor for LocationDetailEntity();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10075CB1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10075CB70()
{
  sub_10014A85C();
  uint64_t v0 = StringProtocol.components<A>(separatedBy:)();
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v1 = 0;
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_10075CC08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for AirQualityDetailViewModel(0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E92568);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162E88();
  uint64_t v18 = v2 + *(int *)(v17 + 56);
  sub_10075E850(a1, v2);
  sub_10075E850(a2, v18);
  sub_10012B520(v2, 1, v5);
  if (!v20)
  {
    sub_10075E850(v2, v14);
    sub_10012B520(v18, 1, v5);
    if (!v20)
    {
      sub_10075E8B4(v18, v9, (void (*)(void))type metadata accessor for AirQualityDetailViewModel.Model);
      char v19 = sub_10075DD80(v14, v9);
      sub_1001BC1DC(v9, (void (*)(void))type metadata accessor for AirQualityDetailViewModel.Model);
      sub_1001BC1DC(v14, (void (*)(void))type metadata accessor for AirQualityDetailViewModel.Model);
      sub_1001BC1DC(v2, (void (*)(void))type metadata accessor for AirQualityDetailViewModel);
      return v19 & 1;
    }
    sub_1001BC1DC(v14, (void (*)(void))type metadata accessor for AirQualityDetailViewModel.Model);
LABEL_9:
    sub_100178110(v2, &qword_100E92568);
    char v19 = 0;
    return v19 & 1;
  }
  sub_10012B520(v18, 1, v5);
  if (!v20) {
    goto LABEL_9;
  }
  sub_1001BC1DC(v2, (void (*)(void))type metadata accessor for AirQualityDetailViewModel);
  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_10075CE2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7368564 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6174756C6C6F70 && a2 == 0xEE00656C62615474)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10075CF30(char a1)
{
  if (a1) {
    return 0x6E6174756C6C6F70;
  }
  else {
    return 7368564;
  }
}

uint64_t sub_10075CF6C(void *a1, char a2)
{
  sub_10017DF08(&qword_100E925D8);
  sub_100179C0C();
  uint64_t v22 = v5;
  uint64_t v23 = v4;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v21 = sub_10017DF08(&qword_100E925E0);
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_10008B8C0();
  uint64_t v12 = sub_10017DF08(&qword_100E925E8);
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  sub_1001B1E64(a1, a1[3]);
  sub_10075EA38();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v19 = (uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  if (a2)
  {
    sub_10075EA84();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v8, v23);
  }
  else
  {
    sub_10075EAD0();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v21);
  }
  return (*v19)(v18, v12);
}

uint64_t sub_10075D184(uint64_t a1)
{
  sub_10017DF08(&qword_100E925A8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10016279C();
  sub_10017DF08(&qword_100E925B0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100162E88();
  sub_10017DF08(&qword_100E925B8);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10012B938();
  sub_1001B1E64((void *)a1, *(void *)(a1 + 24));
  sub_10075EA38();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v25) {
    goto LABEL_8;
  }
  uint64_t v26 = a1;
  uint64_t v5 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6
    || (a1 = *(unsigned __int8 *)(v5 + 32),
        sub_100723214(1, v6, v5, v5 + 32, 0, (2 * v6) | 1),
        uint64_t v8 = v7,
        unint64_t v10 = v9,
        swift_bridgeObjectRelease(),
        v8 != v10 >> 1))
  {
    uint64_t v15 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v17 = v16;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v17 = &type metadata for AirQualityDetailAnchor;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, enum case for DecodingError.typeMismatch(_:), v15);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_100162F0C();
    v19(v18);
    a1 = v26;
LABEL_8:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    return a1;
  }
  if (a1)
  {
    sub_10075EA84();
    sub_10017A110();
    sub_100162F0C();
    v12(v11);
    swift_unknownObjectRelease();
    uint64_t v13 = sub_10018124C();
    v14(v13);
    a1 = a1;
  }
  else
  {
    sub_10075EAD0();
    sub_10017A110();
    sub_100162F0C();
    v22(v21);
    swift_unknownObjectRelease();
    uint64_t v23 = sub_10018124C();
    v24(v23);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v26);
  return a1;
}

uint64_t sub_10075D528()
{
  return sub_10075CF30(*v0);
}

uint64_t sub_10075D530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10075CE2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10075D558(uint64_t a1)
{
  unint64_t v2 = sub_10075EA38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10075D594(uint64_t a1)
{
  unint64_t v2 = sub_10075EA38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10075D5D0(uint64_t a1)
{
  unint64_t v2 = sub_10075EA84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10075D60C(uint64_t a1)
{
  unint64_t v2 = sub_10075EA84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10075D648(uint64_t a1)
{
  unint64_t v2 = sub_10075EAD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10075D684(uint64_t a1)
{
  unint64_t v2 = sub_10075EAD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10075D6C0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10075D184(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_10075D6F0(void *a1)
{
  return sub_10075CF6C(a1, *v1);
}

uint64_t sub_10075D70C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = sub_10017DF08(&qword_100E7B450);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162EF8();
  uint64_t v46 = v5;
  __chkstk_darwin(v6);
  uint64_t v45 = (uint64_t)v44 - v7;
  uint64_t v8 = sub_10017DF08(&qword_100E63730);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_10008B8C0();
  uint64_t v10 = type metadata accessor for AttributedString();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E7B448);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  char v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v49 = (uint64_t)v44 - v22;
  uint64_t v23 = type metadata accessor for AttributeContainer();
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162E88();
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  uint64_t v48 = a1;
  AttributedString.init(_:attributes:)();
  uint64_t v25 = v1[1];
  uint64_t v50 = *v1;
  uint64_t v51 = v25;
  uint64_t v52 = 32;
  unint64_t v53 = 0xE100000000000000;
  sub_10014A85C();
  uint64_t v26 = (void *)StringProtocol.components<A>(separatedBy:)();
  if (!v26[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v28 = v26[4];
  uint64_t v27 = v26[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v16, v48, v10);
  v44[2] = v28;
  uint64_t v50 = v28;
  uint64_t v51 = v27;
  uint64_t v29 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v29);
  uint64_t v30 = sub_10075E98C((unint64_t *)&qword_100E7B458, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  uint64_t v31 = v49;
  v44[1] = v30;
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_100178110(v2, &qword_100E63730);
  uint64_t v32 = *(void (**)(uint64_t))(v12 + 8);
  uint64_t v33 = sub_10017A838();
  v32(v33);
  sub_1001262FC(v31, (uint64_t)v20, &qword_100E7B448);
  sub_10012B520((uint64_t)v20, 1, v47);
  if (v34)
  {
    sub_100178110(v49, &qword_100E7B448);
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v20;
  }
  else
  {
    uint64_t v36 = (uint64_t)v20;
    uint64_t v37 = v45;
    sub_10024D364(v36, v45, &qword_100E7B450);
    String.lowercased()();
    swift_bridgeObjectRelease();
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    sub_1001246C8((unint64_t *)&qword_100E7B460, &qword_100E7B450);
    AttributedString.replaceSubrange<A, B>(_:with:)();
    uint64_t v38 = sub_10017A838();
    v32(v38);
    uint64_t v39 = v46;
    sub_1001262FC(v37, v46, &qword_100E7B450);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v44[-2] = v41;
    swift_getKeyPath();
    LOBYTE(v52) = 1;
    uint64_t v42 = (void (*)(uint64_t *, void))AttributedString.subscript.modify();
    sub_1004C7B64();
    AttributedSubstring.subscript.setter();
    v42(&v50, 0);
    sub_100178110(v39, &qword_100E7B450);
    sub_100178110(v37, &qword_100E7B450);
    uint64_t v43 = v49;
  }
  return sub_100178110(v43, &qword_100E7B448);
}

uint64_t sub_10075DC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, long long a13, long long a14, uint64_t a15, uint64_t a16, uint64_t a17, long long a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25)
{
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = 0;
  *(void *)(a9 + 72) = a11;
  *(void *)(a9 + 80) = a12;
  *(double *)(a9 + 88) = a10;
  *(_OWORD *)(a9 + 96) = a13;
  *(_OWORD *)(a9 + 112) = a14;
  *(void *)(a9 + 128) = a15;
  *(void *)(a9 + 136) = a16;
  uint64_t v26 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
  sub_10024D364(a17, a9 + v26[14], &qword_100E7B2D8);
  uint64_t v27 = a9 + v26[15];
  *(_OWORD *)uint64_t v27 = a18;
  *(void *)(v27 + 16) = a19;
  *(void *)(a9 + v26[16]) = a20;
  *(void *)(a9 + v26[17]) = a21;
  sub_10075E8B4(a22, a9 + v26[18], (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
  sub_10024D364(a23, a9 + v26[19], &qword_100E66E28);
  *(unsigned char *)(a9 + v26[20]) = a24 & 1;
  uint64_t v28 = a9 + v26[21];
  type metadata accessor for LocationDetailEntity();
  sub_100162E4C();
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);

  return v31(v28, a25, v29);
}

uint64_t sub_10075DD80(uint64_t a1, uint64_t a2)
{
  uint64_t v90 = type metadata accessor for DetailComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  int v88 = (uint64_t *)v7;
  uint64_t v8 = sub_10017DF08(&qword_100E6A5E8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v91 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E66E28);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v89 = v13;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v92 = (uint64_t)&v85 - v16;
  __chkstk_darwin(v15);
  uint64_t v93 = (uint64_t)&v85 - v17;
  uint64_t v18 = type metadata accessor for AirPollutant();
  sub_100179C0C();
  uint64_t v94 = v19;
  __chkstk_darwin(v20);
  sub_10016279C();
  uint64_t v21 = sub_10017DF08(&qword_100E92570);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_10012B938();
  uint64_t v23 = sub_10017DF08(&qword_100E7B2D8);
  uint64_t v24 = sub_100109308(v23);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v85 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v85 - v31;
  BOOL v33 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v34 = sub_1001190E0(), (v35 & 1) != 0))
  {
    BOOL v36 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v34 = sub_1001190E0(), (v37 & 1) != 0))
    {
      BOOL v38 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
      if (v38 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v34 = sub_1001190E0(), (v39 & 1) != 0))
      {
        BOOL v40 = *(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56);
        if (v40 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v34 = sub_1001190E0(), (v41 & 1) != 0))
        {
          if (*(unsigned __int8 *)(a1 + 64) != *(unsigned __int8 *)(a2 + 64)) {
            goto LABEL_57;
          }
          BOOL v42 = *(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80);
          if (!v42 || *(double *)(a1 + 88) != *(double *)(a2 + 88)) {
            goto LABEL_57;
          }
          BOOL v43 = *(void *)(a1 + 96) == *(void *)(a2 + 96) && *(void *)(a1 + 104) == *(void *)(a2 + 104);
          if (v43 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v34 = sub_1001190E0(), (v44 & 1) != 0))
          {
            BOOL v45 = *(void *)(a1 + 112) == *(void *)(a2 + 112) && *(void *)(a1 + 120) == *(void *)(a2 + 120);
            if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v34 = sub_1001190E0(), (v46 & 1) != 0))
            {
              uint64_t v47 = *(void *)(a1 + 136);
              uint64_t v48 = *(void *)(a2 + 136);
              if (v47)
              {
                if (!v48) {
                  goto LABEL_57;
                }
                if (*(void *)(a1 + 128) != *(void *)(a2 + 128) || v47 != v48)
                {
                  _stringCompareWithSmolCheck(_:_:expecting:)();
                  char v34 = sub_1001190E0();
                  if ((v50 & 1) == 0) {
                    return v34 & 1;
                  }
                }
              }
              else if (v48)
              {
                goto LABEL_57;
              }
              int v87 = (int *)type metadata accessor for AirQualityDetailViewModel.Model(0);
              sub_1001262FC(a1 + v87[14], (uint64_t)v32, &qword_100E7B2D8);
              sub_1001262FC(a2 + v87[14], (uint64_t)v30, &qword_100E7B2D8);
              uint64_t v51 = v2 + *(int *)(v21 + 48);
              sub_1001262FC((uint64_t)v32, v2, &qword_100E7B2D8);
              uint64_t v86 = v51;
              sub_1001262FC((uint64_t)v30, v51, &qword_100E7B2D8);
              sub_10012B520(v2, 1, v18);
              if (v33)
              {
                sub_100178110((uint64_t)v30, &qword_100E7B2D8);
                sub_100178110((uint64_t)v32, &qword_100E7B2D8);
                sub_10012B520(v86, 1, v18);
                if (v33)
                {
                  sub_100178110(v2, &qword_100E7B2D8);
LABEL_60:
                  uint64_t v59 = v87;
                  uint64_t v60 = v87[15];
                  uint64_t v61 = (uint64_t *)(a1 + v60);
                  uint64_t v62 = *(void *)(a1 + v60 + 8);
                  uint64_t v63 = (uint64_t *)(a2 + v60);
                  uint64_t v64 = v63[1];
                  if (v62)
                  {
                    if (!v64) {
                      goto LABEL_57;
                    }
                    uint64_t v65 = *v61;
                    uint64_t v66 = *v63;
                    BOOL v67 = *v61 == *v63 && v62 == v64;
                    if (!v67 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                    {
                      sub_10017E874();
                      sub_10017E874();
                      sub_10016EC18(v66, v64);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_10075E948(v65, v62);
                      goto LABEL_57;
                    }
                    sub_10017E874();
                    sub_10017E874();
                    sub_10016EC18(v66, v64);
                    sub_100BD99E8();
                    char v69 = v68;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_10075E948(v65, v62);
                    if ((v69 & 1) == 0)
                    {
LABEL_57:
                      char v34 = 0;
                      return v34 & 1;
                    }
                  }
                  else if (v64)
                  {
                    goto LABEL_57;
                  }
                  uint64_t v70 = v59[16];
                  uint64_t v71 = *(void **)(a1 + v70);
                  uint64_t v72 = *(void **)(a2 + v70);
                  if (v71)
                  {
                    if (!v72) {
                      goto LABEL_57;
                    }
                    sub_10075E908();
                    id v73 = v72;
                    id v74 = v71;
                    char v75 = static NSObject.== infix(_:_:)();

                    if ((v75 & 1) == 0) {
                      goto LABEL_57;
                    }
                  }
                  else if (v72)
                  {
                    goto LABEL_57;
                  }
                  if ((sub_100BDD0CC(*(void *)(a1 + v59[17]), *(void *)(a2 + v59[17])) & 1) == 0
                    || (sub_100931314((void *)(a1 + v59[18]), (void *)(a2 + v59[18])) & 1) == 0)
                  {
                    goto LABEL_57;
                  }
                  uint64_t v76 = v93;
                  sub_1001262FC(a1 + v59[19], v93, &qword_100E66E28);
                  uint64_t v77 = v92;
                  sub_1001262FC(a2 + v59[19], v92, &qword_100E66E28);
                  uint64_t v78 = v91;
                  uint64_t v79 = v91 + *(int *)(v8 + 48);
                  sub_1001262FC(v76, v91, &qword_100E66E28);
                  sub_1001262FC(v77, v79, &qword_100E66E28);
                  uint64_t v80 = v90;
                  sub_10012B520(v78, 1, v90);
                  if (v33)
                  {
                    sub_100178110(v92, &qword_100E66E28);
                    sub_100178110(v93, &qword_100E66E28);
                    sub_10012B520(v79, 1, v80);
                    if (v33)
                    {
                      sub_100178110(v78, &qword_100E66E28);
                      goto LABEL_88;
                    }
                  }
                  else
                  {
                    sub_1001262FC(v78, (uint64_t)v89, &qword_100E66E28);
                    sub_10012B520(v79, 1, v80);
                    if (!v81)
                    {
                      uint64_t v82 = v88;
                      sub_10075E8B4(v79, (uint64_t)v88, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                      uint64_t v83 = v89;
                      char v84 = sub_1004B7C2C(v89, v82);
                      sub_1001BC1DC((uint64_t)v82, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                      sub_100178110(v92, &qword_100E66E28);
                      sub_100178110(v93, &qword_100E66E28);
                      sub_1001BC1DC((uint64_t)v83, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                      sub_100178110(v91, &qword_100E66E28);
                      if (v84)
                      {
LABEL_88:
                        if (*(unsigned __int8 *)(a1 + v87[20]) == *(unsigned __int8 *)(a2 + v87[20]))
                        {
                          char v34 = static LocationDetailEntity.== infix(_:_:)();
                          return v34 & 1;
                        }
                        goto LABEL_57;
                      }
                      goto LABEL_57;
                    }
                    sub_100178110(v92, &qword_100E66E28);
                    sub_100178110(v93, &qword_100E66E28);
                    sub_1001BC1DC((uint64_t)v89, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                    uint64_t v78 = v91;
                  }
                  int v54 = &qword_100E6A5E8;
                  uint64_t v55 = v78;
LABEL_56:
                  sub_100178110(v55, v54);
                  goto LABEL_57;
                }
              }
              else
              {
                sub_1001262FC(v2, (uint64_t)v27, &qword_100E7B2D8);
                uint64_t v52 = v86;
                sub_10012B520(v86, 1, v18);
                if (!v53)
                {
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32))(v3, v52, v18);
                  sub_10075E98C(&qword_100E92580, (void (*)(uint64_t))&type metadata accessor for AirPollutant);
                  LODWORD(v86) = dispatch thunk of static Equatable.== infix(_:_:)();
                  uint64_t v57 = v3;
                  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
                  v58(v57, v18);
                  sub_100178110((uint64_t)v30, &qword_100E7B2D8);
                  sub_100178110((uint64_t)v32, &qword_100E7B2D8);
                  v58((uint64_t)v27, v18);
                  sub_100178110(v2, &qword_100E7B2D8);
                  if ((v86 & 1) == 0) {
                    goto LABEL_57;
                  }
                  goto LABEL_60;
                }
                sub_100178110((uint64_t)v30, &qword_100E7B2D8);
                sub_100178110((uint64_t)v32, &qword_100E7B2D8);
                (*(void (**)(char *, uint64_t))(v94 + 8))(v27, v18);
              }
              int v54 = &qword_100E92570;
              uint64_t v55 = v2;
              goto LABEL_56;
            }
          }
        }
      }
    }
  }
  return v34 & 1;
}

uint64_t sub_10075E6B8@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E92588);
  a1[4] = sub_1001246C8(&qword_100E92590, &qword_100E92588);
  sub_100170694(a1);
  type metadata accessor for AirQualityDetailViewModel(0);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10075E784@<X0>(uint64_t *a1@<X8>)
{
  return sub_10075E6B8(a1);
}

uint64_t sub_10075E79C()
{
  sub_10075E98C(&qword_100E92598, (void (*)(uint64_t))type metadata accessor for AirQualityDetailViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_10075E808()
{
  return sub_10075E98C(&qword_100E92560, (void (*)(uint64_t))type metadata accessor for AirQualityDetailViewModel);
}

uint64_t sub_10075E850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AirQualityDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10075E8B4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

unint64_t sub_10075E908()
{
  unint64_t result = qword_100E92578;
  if (!qword_100E92578)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E92578);
  }
  return result;
}

uint64_t sub_10075E948(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10075E98C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityDetailAnchor()
{
  return &type metadata for AirQualityDetailAnchor;
}

unint64_t sub_10075E9EC()
{
  unint64_t result = qword_100E925A0;
  if (!qword_100E925A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E925A0);
  }
  return result;
}

unint64_t sub_10075EA38()
{
  unint64_t result = qword_100E925C0;
  if (!qword_100E925C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E925C0);
  }
  return result;
}

unint64_t sub_10075EA84()
{
  unint64_t result = qword_100E925C8;
  if (!qword_100E925C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E925C8);
  }
  return result;
}

unint64_t sub_10075EAD0()
{
  unint64_t result = qword_100E925D0;
  if (!qword_100E925D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E925D0);
  }
  return result;
}

unsigned char *_s7Weather22AirQualityDetailAnchorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10075EBE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityDetailAnchor.CodingKeys()
{
  return &type metadata for AirQualityDetailAnchor.CodingKeys;
}

ValueMetadata *type metadata accessor for AirQualityDetailAnchor.TopCodingKeys()
{
  return &type metadata for AirQualityDetailAnchor.TopCodingKeys;
}

ValueMetadata *type metadata accessor for AirQualityDetailAnchor.PollutantTableCodingKeys()
{
  return &type metadata for AirQualityDetailAnchor.PollutantTableCodingKeys;
}

unint64_t sub_10075EC44()
{
  unint64_t result = qword_100E925F0;
  if (!qword_100E925F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E925F0);
  }
  return result;
}

unint64_t sub_10075EC94()
{
  unint64_t result = qword_100E925F8;
  if (!qword_100E925F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E925F8);
  }
  return result;
}

unint64_t sub_10075ECE4()
{
  unint64_t result = qword_100E92600;
  if (!qword_100E92600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92600);
  }
  return result;
}

unint64_t sub_10075ED34()
{
  unint64_t result = qword_100E92608;
  if (!qword_100E92608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92608);
  }
  return result;
}

unint64_t sub_10075ED84()
{
  unint64_t result = qword_100E92610;
  if (!qword_100E92610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92610);
  }
  return result;
}

unint64_t sub_10075EDD4()
{
  unint64_t result = qword_100E92618;
  if (!qword_100E92618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92618);
  }
  return result;
}

unint64_t sub_10075EE24()
{
  unint64_t result = qword_100E92620[0];
  if (!qword_100E92620[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E92620);
  }
  return result;
}

uint64_t sub_10075EE7C()
{
  return 8;
}

uint64_t sub_10075EE88()
{
  return swift_release();
}

uint64_t sub_10075EE90(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10075EEA4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_10075EEB0()
{
  sub_1002307EC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DetailViewVisibilityTrackerModel();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_10075EFE4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for PresentationMode();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v69 = v4;
  int v5 = *(_DWORD *)(v68 + 80);
  uint64_t v6 = v5;
  if (((v6 + 16) & (unint64_t)~v6) + *(void *)(v68 + 64) <= 8) {
    unint64_t v7 = 8;
  }
  else {
    unint64_t v7 = ((v5 + 16) & ~(unint64_t)v5)
  }
       + *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v71 = type metadata accessor for DetailType();
  uint64_t v8 = *(void *)(v71 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v72 = type metadata accessor for Location();
  uint64_t v10 = *(void *)(v72 - 8);
  uint64_t v70 = v10;
  int v11 = *(_DWORD *)(v10 + 80);
  int v12 = v11 | v9;
  uint64_t v13 = type metadata accessor for DetailViewOrigin();
  int v14 = *(_DWORD *)(*(void *)(v13 - 8) + 80);
  int v15 = v12 | v14;
  uint64_t v16 = (v12 | v14);
  uint64_t v17 = v11;
  uint64_t v18 = v14;
  uint64_t v19 = v7 + v16 + 1;
  uint64_t v20 = *(void *)(v8 + 64) + v11;
  uint64_t v21 = *(void *)(v10 + 64) + v14;
  unint64_t v22 = ((v21 + (v20 & ~(unint64_t)v11)) & ~(unint64_t)v14)
      + *(void *)(*(void *)(v13 - 8) + 64);
  uint64_t v23 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v24 = *(_DWORD *)(v23 + 80);
  unint64_t v25 = v16 | v5 | v24;
  int v26 = (v15 | v5 | *(_DWORD *)(v23 + 80)) & 0x100000;
  if (v25 > 7
    || v26 != 0
    || ((v24
       + 17
       + ((((((v22 + (v19 & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)) & ~v24)
     + *(void *)(v23 + 64) > 0x18)
  {
    uint64_t v29 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v30 = (void *)(v29 + ((v25 & 0xF8 ^ 0x1F8) & (v25 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v31 = a2[v7];
    unsigned int v32 = v31 - 2;
    BOOL v33 = a2;
    if (v31 < 2)
    {
      char v35 = a1;
    }
    else
    {
      if (v7 <= 3) {
        uint64_t v34 = v7;
      }
      else {
        uint64_t v34 = 4;
      }
      char v35 = a1;
      switch(v34)
      {
        case 1:
          int v36 = *a2;
          goto LABEL_23;
        case 2:
          int v36 = *(unsigned __int16 *)a2;
          goto LABEL_23;
        case 3:
          int v36 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_23;
        case 4:
          int v36 = *(_DWORD *)a2;
LABEL_23:
          if (v7 < 4) {
            unsigned int v31 = (v36 | (v32 << (8 * v7))) + 2;
          }
          else {
            unsigned int v31 = v36 + 2;
          }
          break;
        default:
          break;
      }
    }
    unint64_t v62 = v22;
    uint64_t v63 = *(void *)(v13 - 8);
    uint64_t v64 = v13;
    unint64_t v65 = v24 + 17;
    uint64_t v66 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v67 = *(void *)(a3 + 16);
    uint64_t v37 = ~v16;
    uint64_t v38 = ~v17;
    uint64_t v60 = ~v18;
    uint64_t v61 = ~v24;
    *char v35 = *(void *)a2;
    if (v31 == 1)
    {
      char v39 = (void *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
      BOOL v40 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *char v39 = *v40;
      uint64_t v59 = ((unint64_t)v39 + v6 + 8) & ~v6;
      uint64_t v41 = ((unint64_t)v40 + v6 + 8) & ~v6;
      BOOL v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16);
      swift_retain();
      swift_retain();
      v42(v59, v41, v69);
      BOOL v33 = a2;
      char v43 = 1;
    }
    else
    {
      swift_retain();
      char v43 = 0;
    }
    *((unsigned char *)v35 + v7) = v43;
    unint64_t v44 = ((unint64_t)v35 + v19) & v37;
    uint64_t v45 = (unint64_t)&v33[v19] & v37;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 16))(v44, v45, v71);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v70 + 16))((v20 + v44) & v38, (v20 + v45) & v38, v72);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v63 + 16))((v21 + ((v20 + v44) & v38)) & v60, (v21 + ((v20 + v45) & v38)) & v60, v64);
    unint64_t v46 = (v44 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v47 = (v45 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = *(void *)(v47 + 24);
    *(void *)(v46 + 24) = v48;
    *(void *)(v46 + 32) = *(void *)(v47 + 32);
    (**(void (***)(unint64_t, unint64_t))(v48 - 8))(v46, v47);
    uint64_t v49 = (void *)((v46 + 47) & 0xFFFFFFFFFFFFFFF8);
    char v50 = (void *)((v47 + 47) & 0xFFFFFFFFFFFFFFF8);
    void *v49 = *v50;
    v49[1] = v50[1];
    unint64_t v51 = ((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v52 = ((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v51 = *(void *)v52;
    *(void *)(v51 + 8) = *(void *)(v52 + 8);
    *(unsigned char *)(v51 + 16) = *(unsigned char *)(v52 + 16);
    unint64_t v53 = ((unint64_t)v49 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v54 = ((unint64_t)v50 + 47) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v53 = *(void *)v54;
    *(void *)(v53 + 8) = *(void *)(v54 + 8);
    *(unsigned char *)(v53 + 16) = *(unsigned char *)(v54 + 16);
    unint64_t v55 = (v65 + v53) & v61;
    unint64_t v56 = (v65 + v54) & v61;
    uint64_t v57 = *(void (**)(unint64_t, unint64_t, uint64_t))(v66 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v30 = a1;
    v57(v55, v56, v67);
  }
  return v30;
}

uint64_t sub_10075F5B0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PresentationMode();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  if (((v5 + 16) & (unint64_t)~v5) + *(void *)(v4 + 64) <= 8) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = ((v5 + 16) & ~v5) + *(void *)(*(void *)(v3 - 8) + 64);
  }
  unsigned int v7 = a1[v6];
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        if (v6 < 4) {
          unsigned int v7 = (v9 | ((v7 - 2) << (8 * v6))) + 2;
        }
        else {
          unsigned int v7 = v9 + 2;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v29 = v6;
  swift_release();
  if (v7 == 1)
  {
    swift_release();
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5, v3);
  }
  uint64_t v10 = type metadata accessor for DetailType();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = type metadata accessor for Location();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = *(_DWORD *)(v14 + 80);
  uint64_t v28 = v13;
  char v16 = v15 | v12;
  uint64_t v17 = type metadata accessor for DetailViewOrigin();
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = *(_DWORD *)(v18 + 80);
  unint64_t v20 = (unint64_t)&a1[v29 + 1 + (v16 | v19)] & ~(unint64_t)(v16 | v19);
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v20, v10);
  uint64_t v21 = *(void *)(v11 + 64) + v15;
  (*(void (**)(unint64_t, uint64_t))(v14 + 8))((v21 + v20) & ~(unint64_t)v15, v28);
  uint64_t v22 = *(void *)(v14 + 64) + v19;
  (*(void (**)(unint64_t, uint64_t))(v18 + 8))((v22 + ((v21 + v20) & ~(unint64_t)v15)) & ~(unint64_t)v19, v17);
  unint64_t v23 = (v20
       + ((v22 + (v21 & ~(unint64_t)v15)) & ~(unint64_t)v19)
       + *(void *)(v18 + 64)
       + 7) & 0xFFFFFFFFFFFFFFF8;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v25 = *(uint64_t (**)(unint64_t))(v24 + 8);
  unint64_t v26 = (((((v23 + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v24 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);

  return v25(v26);
}

void *sub_10075F924(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PresentationMode();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  if (((v7 + 16) & (unint64_t)~v7) + *(void *)(v6 + 64) <= 8) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = ((v7 + 16) & ~v7) + *(void *)(v6 + 64);
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_13;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_13:
        if (v8 < 4) {
          unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
        }
        else {
          unsigned int v9 = v12 + 2;
        }
        break;
      default:
        break;
    }
  }
  *a1 = *(void *)a2;
  unint64_t v53 = a2;
  if (v9 == 1)
  {
    uint64_t v13 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v13 = *v14;
    uint64_t v15 = ((unint64_t)v13 + v7 + 8) & ~v7;
    uint64_t v16 = ((unint64_t)v14 + v7 + 8) & ~v7;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain();
    swift_retain();
    v17(v15, v16, v5);
    char v18 = 1;
  }
  else
  {
    swift_retain();
    char v18 = 0;
  }
  *((unsigned char *)a1 + v8) = v18;
  uint64_t v19 = type metadata accessor for DetailType();
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = *(_DWORD *)(v20 + 80);
  uint64_t v52 = type metadata accessor for Location();
  uint64_t v22 = *(void *)(v52 - 8);
  unint64_t v54 = a1;
  int v23 = *(_DWORD *)(v22 + 80);
  uint64_t v51 = type metadata accessor for DetailViewOrigin();
  uint64_t v24 = *(void *)(v51 - 8);
  int v25 = *(_DWORD *)(v24 + 80);
  uint64_t v26 = (v23 | v21 | v25);
  uint64_t v27 = v23;
  uint64_t v28 = v8 + v26 + 1;
  unint64_t v29 = ((unint64_t)a1 + v28) & ~v26;
  uint64_t v30 = (unint64_t)&v53[v28] & ~v26;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v29, v30, v19);
  uint64_t v31 = *(void *)(v20 + 64) + v23;
  uint64_t v32 = v30;
  uint64_t v33 = (v31 + v30) & ~v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 16))((v31 + v29) & ~v27, v33, v52);
  uint64_t v34 = *(void *)(v22 + 64) + v25;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 16))((v34 + ((v31 + v29) & ~v27)) & ~(unint64_t)v25, (v34 + v33) & ~(unint64_t)v25, v51);
  unint64_t v35 = *(void *)(v24 + 64) + ((v34 + (v31 & ~v27)) & ~(unint64_t)v25) + 7;
  unint64_t v36 = (v35 + v29) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v35 + v32) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = *(void *)(v37 + 24);
  *(void *)(v36 + 24) = v38;
  *(void *)(v36 + 32) = *(void *)(v37 + 32);
  (**(void (***)(unint64_t, unint64_t))(v38 - 8))(v36, v37);
  char v39 = (void *)((v36 + 47) & 0xFFFFFFFFFFFFFFF8);
  BOOL v40 = (void *)((v37 + 47) & 0xFFFFFFFFFFFFFFF8);
  *char v39 = *v40;
  v39[1] = v40[1];
  unint64_t v41 = ((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = ((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v41 = *(void *)v42;
  *(void *)(v41 + 8) = *(void *)(v42 + 8);
  *(unsigned char *)(v41 + 16) = *(unsigned char *)(v42 + 16);
  unint64_t v43 = ((unint64_t)v39 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = ((unint64_t)v40 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v43 = *(void *)v44;
  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  *(unsigned char *)(v43 + 16) = *(unsigned char *)(v44 + 16);
  uint64_t v45 = *(void *)(a3 + 16);
  unint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
  uint64_t v47 = *(unsigned __int8 *)(*(void *)(v45 - 8) + 80);
  uint64_t v48 = (v47 + 17 + v43) & ~v47;
  uint64_t v49 = (v47 + 17 + v44) & ~v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v48, v49, v45);
  return v54;
}

unsigned __int8 *sub_10075FDB4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = type metadata accessor for PresentationMode();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    if (((v7 + 16) & (unint64_t)~v7) + *(void *)(v6 + 64) <= 8) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = ((v7 + 16) & ~v7) + *(void *)(*(void *)(v5 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          if (v8 < 4) {
            unsigned int v9 = (v11 | ((v9 - 2) << (8 * v8))) + 2;
          }
          else {
            unsigned int v9 = v11 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v12 = ~v7;
    swift_release();
    if (v9 == 1)
    {
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & v12, v5);
    }
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          if (v8 < 4) {
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
          }
          else {
            unsigned int v13 = v16 + 2;
          }
          break;
        default:
          break;
      }
    }
    *(void *)a1 = *(void *)a2;
    if (v13 == 1)
    {
      uint64_t v17 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v18 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v17 = *v18;
      uint64_t v19 = (char *)v18 + v7;
      uint64_t v20 = ((unint64_t)v17 + v7 + 8) & v12;
      uint64_t v21 = (unint64_t)(v19 + 8) & v12;
      uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      swift_retain();
      swift_retain();
      v22(v20, v21, v5);
      a1[v8] = 1;
    }
    else
    {
      a1[v8] = 0;
      swift_retain();
    }
  }
  uint64_t v23 = *(void *)(type metadata accessor for PresentationMode() - 8);
  unint64_t v24 = ((*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))
      + *(void *)(v23 + 64);
  if (v24 <= 8) {
    uint64_t v25 = 8;
  }
  else {
    uint64_t v25 = v24;
  }
  uint64_t v26 = type metadata accessor for DetailType();
  uint64_t v27 = *(void *)(v26 - 8);
  int v28 = *(_DWORD *)(v27 + 80);
  uint64_t v55 = type metadata accessor for Location();
  uint64_t v29 = *(void *)(v55 - 8);
  unint64_t v53 = a2;
  int v30 = *(_DWORD *)(v29 + 80);
  uint64_t v54 = type metadata accessor for DetailViewOrigin();
  uint64_t v31 = *(void *)(v54 - 8);
  uint64_t v32 = a1;
  unint64_t v56 = a1;
  int v33 = *(_DWORD *)(v31 + 80);
  uint64_t v34 = (v30 | v28 | v33);
  uint64_t v35 = v30;
  uint64_t v36 = v33;
  uint64_t v37 = v25 + v34 + 1;
  uint64_t v38 = (unint64_t)&v32[v37] & ~v34;
  uint64_t v39 = (unint64_t)&v53[v37] & ~v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 24))(v38, v39, v26);
  uint64_t v40 = *(void *)(v27 + 64) + v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 24))((v40 + v38) & ~v35, (v40 + v39) & ~v35, v55);
  uint64_t v41 = *(void *)(v29 + 64) + v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 24))((v41 + ((v40 + v38) & ~v35)) & ~v36, (v41 + ((v40 + v39) & ~v35)) & ~v36, v54);
  uint64_t v42 = *(void *)(v31 + 64) + ((v41 + (v40 & ~v35)) & ~v36) + 7;
  unint64_t v43 = (uint64_t *)((v42 + v38) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v44 = (uint64_t *)((v42 + v39) & 0xFFFFFFFFFFFFFFF8);
  sub_1000C1E18(v43, v44);
  uint64_t v45 = (void *)(((unint64_t)v43 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v46 = (void *)(((unint64_t)v44 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v47 = ((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = ((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v47 = *(void *)v48;
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v47 + 16) = *(unsigned char *)(v48 + 16);
  unint64_t v49 = ((unint64_t)v45 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v50 = ((unint64_t)v46 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v49 = *(void *)v50;
  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 16) = *(unsigned char *)(v50 + 16);
  uint64_t v51 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v51 + 24))((*(unsigned __int8 *)(v51 + 80) + 17 + v49) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80), (*(unsigned __int8 *)(v51 + 80) + 17 + v50) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
  return v56;
}

void *sub_10076034C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PresentationMode();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  if (((v7 + 16) & (unint64_t)~v7) + *(void *)(v6 + 64) <= 8) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = ((v7 + 16) & ~v7) + *(void *)(v6 + 64);
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_13;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_13:
        if (v8 < 4) {
          unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
        }
        else {
          unsigned int v9 = v12 + 2;
        }
        break;
      default:
        break;
    }
  }
  unint64_t v46 = a2;
  if (v9 == 1)
  {
    *a1 = *(void *)a2;
    unsigned int v13 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v14 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v13 = *v14;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v13 + v7 + 8) & ~v7, ((unint64_t)v14 + v7 + 8) & ~v7, v5);
    char v15 = 1;
  }
  else
  {
    char v15 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v8) = v15;
  uint64_t v16 = type metadata accessor for DetailType();
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(_DWORD *)(v17 + 80);
  uint64_t v45 = type metadata accessor for Location();
  uint64_t v19 = *(void *)(v45 - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  unint64_t v47 = a1;
  uint64_t v44 = type metadata accessor for DetailViewOrigin();
  uint64_t v21 = *(void *)(v44 - 8);
  int v22 = *(_DWORD *)(v21 + 80);
  uint64_t v23 = (v20 | v18 | v22);
  uint64_t v24 = v20;
  uint64_t v25 = v22;
  uint64_t v26 = v8 + v23 + 1;
  unint64_t v27 = ((unint64_t)a1 + v26) & ~v23;
  uint64_t v28 = (unint64_t)&v46[v26] & ~v23;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v27, v28, v16);
  uint64_t v29 = *(void *)(v17 + 64) + v20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))((v29 + v27) & ~v24, (v29 + v28) & ~v24, v45);
  uint64_t v30 = *(void *)(v19 + 64) + v22;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))((v30 + ((v29 + v27) & ~v24)) & ~v25, (v30 + ((v29 + v28) & ~v24)) & ~v25, v44);
  uint64_t v31 = *(void *)(v21 + 64) + ((v30 + (v29 & ~v24)) & ~v25) + 7;
  unint64_t v32 = (v31 + v27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v31 + v28) & 0xFFFFFFFFFFFFFFF8;
  long long v34 = *(_OWORD *)v33;
  long long v35 = *(_OWORD *)(v33 + 16);
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  *(_OWORD *)unint64_t v32 = v34;
  *(_OWORD *)(v32 + 16) = v35;
  uint64_t v36 = (_OWORD *)((v32 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = (_OWORD *)((v33 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v36 = *v37;
  unint64_t v38 = ((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = ((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
  *(unsigned char *)(v38 + 16) = *(unsigned char *)(v39 + 16);
  unint64_t v40 = ((unint64_t)v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = ((unint64_t)v37 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v40 = *(_OWORD *)v41;
  *(unsigned char *)(v40 + 16) = *(unsigned char *)(v41 + 16);
  uint64_t v42 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v42 + 32))((*(unsigned __int8 *)(v42 + 80) + 17 + v40) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80), (*(unsigned __int8 *)(v42 + 80) + 17 + v41) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
  return v47;
}

unsigned __int8 *sub_100760748(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = type metadata accessor for PresentationMode();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    if (((v7 + 16) & (unint64_t)~v7) + *(void *)(v6 + 64) <= 8) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = ((v7 + 16) & ~v7) + *(void *)(*(void *)(v5 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          if (v8 < 4) {
            unsigned int v9 = (v11 | ((v9 - 2) << (8 * v8))) + 2;
          }
          else {
            unsigned int v9 = v11 + 2;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v12 = ~v7;
    swift_release();
    if (v9 == 1)
    {
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & v12, v5);
    }
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          if (v8 < 4) {
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
          }
          else {
            unsigned int v13 = v16 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v17 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      int v18 = (void *)((unint64_t)(a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v17 = *v18;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v17 + v7 + 8) & v12, ((unint64_t)v18 + v7 + 8) & v12, v5);
      char v19 = 1;
    }
    else
    {
      char v19 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v19;
  }
  uint64_t v20 = *(void *)(type metadata accessor for PresentationMode() - 8);
  unint64_t v21 = ((*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))
      + *(void *)(v20 + 64);
  if (v21 <= 8) {
    uint64_t v22 = 8;
  }
  else {
    uint64_t v22 = v21;
  }
  uint64_t v23 = type metadata accessor for DetailType();
  uint64_t v24 = *(void *)(v23 - 8);
  int v25 = *(_DWORD *)(v24 + 80);
  uint64_t v54 = type metadata accessor for Location();
  uint64_t v26 = *(void *)(v54 - 8);
  uint64_t v52 = a2;
  int v27 = *(_DWORD *)(v26 + 80);
  uint64_t v53 = type metadata accessor for DetailViewOrigin();
  uint64_t v28 = *(void *)(v53 - 8);
  uint64_t v29 = a1;
  uint64_t v55 = a1;
  int v30 = *(_DWORD *)(v28 + 80);
  uint64_t v31 = (v27 | v25 | v30);
  uint64_t v32 = v27;
  uint64_t v33 = v30;
  uint64_t v34 = v22 + v31 + 1;
  uint64_t v35 = (unint64_t)&v29[v34] & ~v31;
  uint64_t v36 = (unint64_t)&v52[v34] & ~v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 40))(v35, v36, v23);
  uint64_t v37 = *(void *)(v24 + 64) + v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 40))((v37 + v35) & ~v32, (v37 + v36) & ~v32, v54);
  uint64_t v38 = *(void *)(v26 + 64) + v30;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 40))((v38 + ((v37 + v35) & ~v32)) & ~v33, (v38 + ((v37 + v36) & ~v32)) & ~v33, v53);
  uint64_t v39 = *(void *)(v28 + 64) + ((v38 + (v37 & ~v32)) & ~v33) + 7;
  unint64_t v40 = (v39 + v35) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v39 + v36) & 0xFFFFFFFFFFFFFFF8;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v40);
  long long v42 = *(_OWORD *)v41;
  long long v43 = *(_OWORD *)(v41 + 16);
  *(void *)(v40 + 32) = *(void *)(v41 + 32);
  *(_OWORD *)unint64_t v40 = v42;
  *(_OWORD *)(v40 + 16) = v43;
  uint64_t v44 = (void *)((v40 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (void *)((v41 + 47) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRelease();
  unint64_t v46 = ((unint64_t)v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = ((unint64_t)v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v46 = *(void *)v47;
  *(void *)(v46 + 8) = *(void *)(v47 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  unint64_t v48 = ((unint64_t)v44 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = ((unint64_t)v45 + 47) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v48 = *(void *)v49;
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v48 + 16) = *(unsigned char *)(v49 + 16);
  uint64_t v50 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v50 + 40))((*(unsigned __int8 *)(v50 + 80) + 17 + v48) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80), (*(unsigned __int8 *)(v50 + 80) + 17 + v49) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  return v55;
}

uint64_t sub_100760CC4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(type metadata accessor for PresentationMode() - 8);
  unint64_t v6 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(v5 + 64);
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  unint64_t v44 = v6;
  uint64_t v43 = type metadata accessor for DetailType();
  uint64_t v7 = *(void *)(v43 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v41 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v41 - 8);
  unsigned int v42 = *(_DWORD *)(v9 + 84);
  if (v42 <= v8) {
    unsigned int v10 = v8;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v11 = type metadata accessor for DetailViewOrigin();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  if (v13 <= v10) {
    unsigned int v14 = v10;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int *)(v16 + 84);
  if (v14 <= v17) {
    unsigned int v18 = *(_DWORD *)(v16 + 84);
  }
  else {
    unsigned int v18 = v14;
  }
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v19 = 0x7FFFFFFF;
  }
  else {
    unsigned int v19 = v18;
  }
  int v20 = *(_DWORD *)(v9 + 80);
  int v21 = *(_DWORD *)(v12 + 80);
  uint64_t v22 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v23 = *(void *)(v16 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v24 = (v20 | *(_DWORD *)(v7 + 80) | v21);
  uint64_t v25 = *(_DWORD *)(v12 + 80);
  uint64_t v26 = v44 + v24 + 1;
  uint64_t v27 = *(void *)(v7 + 64) + v20;
  uint64_t v28 = *(void *)(v9 + 64) + v21;
  unint64_t v29 = ((v28 + (v27 & ~(unint64_t)*(_DWORD *)(v9 + 80))) & ~(unint64_t)v21)
      + *(void *)(*(void *)(v11 - 8) + 64);
  if (a2 <= v19) {
    goto LABEL_36;
  }
  uint64_t v30 = ((v22
        + ((((((v29 + (v26 & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
        + 17) & ~v22)
      + v23;
  char v31 = 8 * v30;
  if (v30 > 3) {
    goto LABEL_18;
  }
  unsigned int v34 = ((a2 - v19 + ~(-1 << v31)) >> v31) + 1;
  if (HIWORD(v34))
  {
    int v32 = *(_DWORD *)((char *)a1 + v30);
    if (v32) {
      goto LABEL_26;
    }
  }
  else
  {
    if (v34 <= 0xFF)
    {
      if (v34 < 2) {
        goto LABEL_36;
      }
LABEL_18:
      int v32 = *((unsigned __int8 *)a1 + v30);
      if (!*((unsigned char *)a1 + v30)) {
        goto LABEL_36;
      }
LABEL_26:
      int v35 = (v32 - 1) << v31;
      if (v30 > 3) {
        int v35 = 0;
      }
      if (v30)
      {
        if (v30 <= 3) {
          int v36 = v30;
        }
        else {
          int v36 = 4;
        }
        switch(v36)
        {
          case 2:
            int v37 = *a1;
            break;
          case 3:
            int v37 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v37 = *(_DWORD *)a1;
            break;
          default:
            int v37 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v37 = 0;
      }
      return v19 + (v37 | v35) + 1;
    }
    int v32 = *(unsigned __int16 *)((char *)a1 + v30);
    if (*(unsigned __int16 *)((char *)a1 + v30)) {
      goto LABEL_26;
    }
  }
LABEL_36:
  unint64_t v38 = ((unint64_t)a1 + v26) & ~v24;
  if (v14 == v19)
  {
    if (v8 == v14)
    {
      uint64_t v13 = v8;
      uint64_t v15 = v43;
    }
    else
    {
      unint64_t v38 = (v27 + v38) & ~(unint64_t)*(_DWORD *)(v9 + 80);
      if (v42 == v14)
      {
        uint64_t v13 = v42;
        uint64_t v15 = v41;
      }
      else
      {
        unint64_t v38 = (v28 + v38) & ~v25;
        uint64_t v15 = v11;
      }
    }
LABEL_47:
    return _s7Weather24LocationCompositionStateOwet_0(v38, v13, v15);
  }
  unint64_t v39 = (v38 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  if ((v18 & 0x80000000) != 0)
  {
    unint64_t v38 = (v22 + ((((v39 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v22;
    uint64_t v13 = v17;
    goto LABEL_47;
  }
  unint64_t v40 = *(void *)(v39 + 24);
  if (v40 >= 0xFFFFFFFF) {
    LODWORD(v40) = -1;
  }
  return (v40 + 1);
}

double sub_10076113C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(type metadata accessor for PresentationMode() - 8);
  unint64_t v6 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(v5 + 64);
  if (v6 <= 8) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t v45 = type metadata accessor for DetailType();
  uint64_t v8 = *(void *)(v45 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v43 = type metadata accessor for Location();
  uint64_t v10 = *(void *)(v43 - 8);
  unsigned int v44 = *(_DWORD *)(v10 + 84);
  if (v44 <= v9) {
    unsigned int v11 = v9;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v12 = type metadata accessor for DetailViewOrigin();
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  if (v15 <= v11) {
    unsigned int v16 = v11;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  uint64_t v17 = *(void *)(a4 + 16);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int *)(v18 + 84);
  if (v16 <= v19) {
    unsigned int v20 = *(_DWORD *)(v18 + 84);
  }
  else {
    unsigned int v20 = v16;
  }
  if (v20 <= 0x7FFFFFFF) {
    unsigned int v21 = 0x7FFFFFFF;
  }
  else {
    unsigned int v21 = v20;
  }
  unsigned __int8 v22 = *(_DWORD *)(v10 + 80);
  unsigned __int8 v23 = *(_DWORD *)(v14 + 80);
  uint64_t v24 = (v22 | *(_DWORD *)(v8 + 80) | v23);
  uint64_t v25 = v22;
  uint64_t v26 = v23;
  uint64_t v27 = v7 + v24 + 1;
  uint64_t v28 = *(void *)(v8 + 64) + v22;
  uint64_t v29 = *(void *)(v10 + 64) + v23;
  uint64_t v30 = ((v29 + (v28 & ~v25)) & ~v26) + *(void *)(*(void *)(v12 - 8) + 64);
  uint64_t v31 = *(unsigned __int8 *)(v18 + 80);
  size_t v32 = ((v31
        + ((((((v30 + (v27 & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
        + 17) & ~v31)
      + *(void *)(v18 + 64);
  char v33 = 8 * v32;
  if (a3 <= v21)
  {
    int v36 = 0;
    unsigned int v34 = a1;
    uint64_t v35 = a2;
  }
  else
  {
    unsigned int v34 = a1;
    uint64_t v35 = a2;
    if (v32 <= 3)
    {
      unsigned int v39 = ((a3 - v21 + ~(-1 << v33)) >> v33) + 1;
      if (HIWORD(v39))
      {
        int v36 = 4;
      }
      else if (v39 >= 0x100)
      {
        int v36 = 2;
      }
      else
      {
        int v36 = v39 > 1;
      }
    }
    else
    {
      int v36 = 1;
    }
  }
  if (v21 < v35)
  {
    unsigned int v37 = ~v21 + v35;
    if (v32 < 4)
    {
      int v38 = (v37 >> v33) + 1;
      if (v32)
      {
        int v40 = v37 & ~(-1 << v33);
        bzero(v34, v32);
        if (v32 == 3)
        {
          *(_WORD *)unsigned int v34 = v40;
          long long v34[2] = BYTE2(v40);
        }
        else if (v32 == 2)
        {
          *(_WORD *)unsigned int v34 = v40;
        }
        else
        {
          *unsigned int v34 = v40;
        }
      }
    }
    else
    {
      bzero(v34, v32);
      *(_DWORD *)unsigned int v34 = v37;
      int v38 = 1;
    }
    switch(v36)
    {
      case 1:
        v34[v32] = v38;
        return result;
      case 2:
        *(_WORD *)&v34[v32] = v38;
        return result;
      case 3:
        goto LABEL_60;
      case 4:
        *(_DWORD *)&v34[v32] = v38;
        return result;
      default:
        return result;
    }
  }
  switch(v36)
  {
    case 1:
      v34[v32] = 0;
      if (!v35) {
        return result;
      }
      goto LABEL_36;
    case 2:
      *(_WORD *)&v34[v32] = 0;
      if (!v35) {
        return result;
      }
      goto LABEL_36;
    case 3:
LABEL_60:
      __break(1u);
      JUMPOUT(0x100761634);
    case 4:
      *(_DWORD *)&v34[v32] = 0;
      goto LABEL_35;
    default:
LABEL_35:
      if (!v35) {
        return result;
      }
LABEL_36:
      unint64_t v41 = (unint64_t)&v34[v27] & ~v24;
      if (v16 == v21)
      {
        if (v9 == v16)
        {
          uint64_t v15 = v9;
          uint64_t v17 = v45;
        }
        else
        {
          unint64_t v41 = (v28 + v41) & ~v25;
          if (v44 == v16)
          {
            uint64_t v15 = v44;
            uint64_t v17 = v43;
          }
          else
          {
            unint64_t v41 = (v29 + v41) & ~v26;
            uint64_t v17 = v12;
          }
        }
      }
      else
      {
        unint64_t v42 = (v41 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
        if ((v20 & 0x80000000) == 0)
        {
          if ((v35 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v42 + 8) = 0u;
            *(_OWORD *)(v42 + 24) = 0u;
            *(void *)unint64_t v42 = v35 ^ 0x80000000;
          }
          else
          {
            *(void *)(v42 + 24) = (v35 - 1);
          }
          return result;
        }
        unint64_t v41 = (v31 + ((((v42 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 41) & ~v31;
        uint64_t v15 = v19;
      }
      _s7Weather24LocationCompositionStateOwst_0(v41, v35, v15, v17);
      return result;
  }
}

uint64_t type metadata accessor for DetailContainerView()
{
  return sub_100109098();
}

uint64_t sub_100761674()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007616B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v66 = a1;
  sub_10017C83C();
  uint64_t v69 = v3;
  uint64_t v68 = *(void *)(v4 + 64);
  __chkstk_darwin(v5);
  sub_100109338((uint64_t)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  sub_100109338((uint64_t)v56 - v8);
  uint64_t v65 = type metadata accessor for ColorScheme();
  sub_10017C83C();
  uint64_t v64 = v9;
  __chkstk_darwin(v10);
  sub_100109338((uint64_t)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NavigationPath();
  uint64_t v73 = *(void *)(a1 + 16);
  sub_10018C6DC(&qword_100E926A8);
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = sub_1001246C8(&qword_100E926B0, &qword_100E926A8);
  uint64_t v89 = v13;
  uint64_t v90 = v14;
  v56[0] = v13;
  char v75 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v85 = v12;
  uint64_t v86 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v17 = sub_10018C6DC(&qword_100E926B8);
  uint64_t v85 = v12;
  uint64_t v86 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v19 = sub_1001246C8(&qword_100E926C0, &qword_100E926B8);
  uint64_t v85 = OpaqueTypeMetadata2;
  uint64_t v86 = v17;
  uint64_t v87 = OpaqueTypeConformance2;
  uint64_t v88 = v19;
  swift_getOpaqueTypeMetadata2();
  uint64_t v85 = OpaqueTypeMetadata2;
  uint64_t v86 = v17;
  uint64_t v87 = OpaqueTypeConformance2;
  uint64_t v88 = v19;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for NavigationStack();
  sub_10017C83C();
  v56[1] = v20;
  __chkstk_darwin(v21);
  sub_10018C6DC(&qword_100EAACE0);
  type metadata accessor for ModifiedContent();
  sub_10017C83C();
  v56[2] = v22;
  __chkstk_darwin(v23);
  uint64_t v58 = type metadata accessor for ModifiedContent();
  sub_10017C83C();
  uint64_t v61 = v24;
  __chkstk_darwin(v25);
  uint64_t v72 = (char *)v56 - v26;
  uint64_t v60 = type metadata accessor for ModifiedContent();
  sub_10017C83C();
  uint64_t v62 = v27;
  __chkstk_darwin(v28);
  uint64_t v57 = (char *)v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  sub_100109338((uint64_t)v56 - v31);
  uint64_t v33 = v73;
  uint64_t v32 = v74;
  uint64_t v76 = v73;
  uint64_t v77 = v13;
  uint64_t v78 = v74;
  NavigationStack.init<>(root:)();
  uint64_t v34 = v64;
  uint64_t v35 = v63;
  uint64_t v36 = v65;
  (*(void (**)(uint64_t, void, uint64_t))(v64 + 104))(v63, enum case for ColorScheme.dark(_:), v65);
  uint64_t v37 = swift_getWitnessTable();
  View.colorScheme(_:)();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
  sub_100162F0C();
  v38();
  uint64_t v39 = sub_1001246C8(&qword_100EAAD00, &qword_100EAACE0);
  uint64_t v83 = v37;
  uint64_t v84 = v39;
  uint64_t v65 = swift_getWitnessTable();
  View.accessibilityIgnoresInvertColors(_:)();
  sub_100162F0C();
  v40();
  uint64_t v41 = v69;
  uint64_t v64 = *(void *)(v69 + 16);
  uint64_t v42 = v66;
  ((void (*)(uint64_t, uint64_t, uint64_t))v64)(v67, v32, v66);
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v56[0];
  *(void *)(v43 + 16) = v33;
  *(void *)(v43 + 24) = v44;
  uint64_t v45 = *(void (**)(void))(v41 + 32);
  sub_10017A84C();
  v45();
  ((void (*)(uint64_t, uint64_t, uint64_t))v64)(v70, v74, v42);
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v73;
  *(void *)(v46 + 24) = v44;
  sub_10017A84C();
  v45();
  unint64_t v47 = sub_10022736C();
  uint64_t v81 = v65;
  unint64_t v82 = v47;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = (uint64_t)v57;
  sub_1008EAB54();
  swift_release();
  swift_release();
  sub_100162F0C();
  v50();
  unint64_t v51 = sub_10021D860();
  uint64_t v79 = v48;
  unint64_t v80 = v51;
  uint64_t v52 = v60;
  swift_getWitnessTable();
  uint64_t v53 = v59;
  sub_100121584(v49, v52, v59);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  v54(v49, v52);
  sub_100121584(v53, v52, v71);
  return ((uint64_t (*)(uint64_t, uint64_t))v54)(v53, v52);
}

uint64_t sub_100761E88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v58 = a4;
  uint64_t v6 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018C6DC(&qword_100E926A8);
  uint64_t v8 = a2;
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v55 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = sub_1001246C8(&qword_100E926B0, &qword_100E926A8);
  uint64_t v66 = a3;
  uint64_t v67 = v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v62 = v9;
  uint64_t v63 = WitnessTable;
  uint64_t v14 = WitnessTable;
  uint64_t v45 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v50 = OpaqueTypeMetadata2;
  uint64_t v53 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v46 = (char *)&v41 - v16;
  uint64_t v17 = sub_10018C6DC(&qword_100E926B8);
  uint64_t v49 = v17;
  uint64_t v62 = v9;
  uint64_t v63 = v14;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v48 = OpaqueTypeConformance2;
  uint64_t v47 = sub_1001246C8(&qword_100E926C0, &qword_100E926B8);
  uint64_t v62 = OpaqueTypeMetadata2;
  uint64_t v63 = v17;
  uint64_t v64 = OpaqueTypeConformance2;
  uint64_t v65 = v47;
  unint64_t v51 = &opaque type descriptor for <<opaque return type of View.toolbar<A>(content:)>>;
  uint64_t v19 = swift_getOpaqueTypeMetadata2();
  uint64_t v52 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v43 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v44 = (uint64_t)&v41 - v22;
  uint64_t v23 = v8;
  type metadata accessor for DetailContainerView();
  id v24 = [self systemBackgroundColor];
  uint64_t v25 = Color.init(_:)();
  uint64_t v26 = static SafeAreaRegions.all.getter();
  char v27 = static Edge.Set.all.getter();
  uint64_t v62 = v25;
  uint64_t v63 = v26;
  LOBYTE(v64) = v27;
  sub_10017DF08(&qword_100E926D0);
  sub_100763C98();
  j___s7SwiftUI9AlignmentV6centerACvgZ_0();
  uint64_t v28 = a3;
  View.background<A>(_:alignment:)();
  swift_release();
  uint64_t v30 = v56;
  uint64_t v29 = v57;
  uint64_t v31 = v54;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v54, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v57);
  uint64_t v32 = v46;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v9);
  uint64_t v59 = v23;
  uint64_t v60 = v28;
  uint64_t v61 = v42;
  uint64_t v33 = (uint64_t)v43;
  uint64_t v35 = v49;
  uint64_t v34 = v50;
  uint64_t v36 = v48;
  uint64_t v37 = v47;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v34);
  uint64_t v62 = v34;
  uint64_t v63 = v35;
  uint64_t v64 = v36;
  uint64_t v65 = v37;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v44;
  sub_100121584(v33, v19, v44);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  v39(v33, v19);
  sub_100121584(v38, v19, v58);
  return ((uint64_t (*)(uint64_t, uint64_t))v39)(v38, v19);
}

uint64_t sub_100762460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v31 = a4;
  uint64_t v30 = sub_10017DF08(&qword_100E926E0);
  __chkstk_darwin(v30);
  uint64_t v28 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E926E8);
  uint64_t v8 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v11 - 8);
  uint64_t v27 = sub_10017DF08(&qword_100E926F0);
  uint64_t v12 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter();
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a1;
  sub_10017DF08(&qword_100E926F8);
  uint64_t v15 = sub_10018C6DC(&qword_100E92700);
  uint64_t v16 = sub_10018C6DC(&qword_100E92708);
  uint64_t v17 = sub_1001246C8(&qword_100E92710, &qword_100E92700);
  uint64_t v18 = sub_1001246C8(&qword_100E92718, &qword_100E92708);
  uint64_t v38 = v15;
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  uint64_t v41 = v18;
  swift_getOpaqueTypeConformance2();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  uint64_t v32 = v24;
  uint64_t v33 = v26;
  uint64_t v34 = v25;
  sub_10017DF08(&qword_100E92720);
  sub_100763D30();
  ToolbarItem<>.init(placement:content:)();
  uint64_t v19 = v27;
  uint64_t v20 = &v28[*(int *)(v30 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v28, v14, v27);
  uint64_t v21 = v20;
  uint64_t v22 = v29;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v10, v29);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v19);
}

uint64_t sub_100762838()
{
  uint64_t v0 = type metadata accessor for DetailContainerView();
  return sub_10076286C(v0);
}

uint64_t sub_10076286C(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E92700);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v6 = sub_10017DF08(&qword_100E92730);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  sub_100762E1C(v1, v8, v7, (uint64_t)&v5[*(int *)(v6 + 44)]);
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v1;
  sub_10017DF08(&qword_100E92708);
  sub_1001246C8(&qword_100E92710, &qword_100E92700);
  sub_1001246C8(&qword_100E92718, &qword_100E92708);
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  return sub_10017DF4C((uint64_t)v5, &qword_100E92700);
}

uint64_t sub_1007629E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for DetailContainerView();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v19 - v11;
  if (*(unsigned char *)(a1 + *(int *)(v13 + 60)) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, v8, v10);
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, v12, v8);
    v19[1] = sub_100763EA8;
    uint64_t v19[2] = v15;
    __int16 v20 = 257;
    sub_10017DF08(&qword_100E87E60);
    sub_10017DF08(&qword_100E6F7B0);
    sub_100763E28();
    sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
    View.accessibilityShowsLargeContentViewer<A>(_:)();
    swift_release();
    uint64_t v16 = sub_10017DF08(&qword_100E87E48);
    return _s7Weather24LocationCompositionStateOwst_0(a4, 0, 1, v16);
  }
  else
  {
    uint64_t v18 = sub_10017DF08(&qword_100E87E48);
    return _s7Weather24LocationCompositionStateOwst_0(a4, 1, 1, v18);
  }
}

uint64_t sub_100762C3C()
{
  uint64_t v0 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_10017DF4C((uint64_t)v3, &qword_100E669A0);
}

uint64_t sub_100762D44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailContainerView();
  uint64_t v3 = (void *)(a1 + *(int *)(v2 + 40));
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  sub_1001B1E64(v3, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1 + *(int *)(v2 + 36), v4, v5);
}

uint64_t sub_100762DB8(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + *(int *)(type metadata accessor for DetailContainerView() + 40));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_1001B1E64(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
}

uint64_t sub_100762E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v76 = a3;
  uint64_t v75 = a2;
  uint64_t v77 = a1;
  uint64_t v87 = a4;
  uint64_t v5 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v5 - 8);
  uint64_t v74 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for Font.TextStyle();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessibilityTraits();
  uint64_t v84 = *(void *)(v8 - 8);
  uint64_t v85 = v8;
  __chkstk_darwin(v8);
  uint64_t v83 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v10 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10017DF08(&qword_100E92738);
  uint64_t v81 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  unint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10017DF08(&qword_100E92740);
  __chkstk_darwin(v82);
  uint64_t v86 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v71 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v71 - v20;
  __chkstk_darwin(v22);
  uint64_t v79 = (char *)&v71 - v23;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v71 - v25;
  uint64_t v27 = static VerticalAlignment.center.getter();
  sub_1007635E4(a1, (uint64_t *)&v88);
  uint64_t v28 = v89;
  unsigned __int8 v29 = v90[0];
  unsigned __int8 v30 = v91;
  uint64_t v31 = v92;
  char v32 = BYTE8(v92);
  char v33 = BYTE9(v92);
  long long v34 = v88;
  long long v35 = *(_OWORD *)&v90[8];
  *(void *)&long long v88 = v27;
  *((void *)&v88 + 1) = 0x4010000000000000;
  LOBYTE(v89) = 0;
  *(_OWORD *)uint64_t v90 = v34;
  *(void *)&v90[16] = v28;
  unsigned __int8 v91 = v29;
  long long v92 = v35;
  unsigned __int8 v93 = v30;
  uint64_t v94 = v31;
  char v95 = v32;
  char v96 = v33;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v36 = sub_10017DF08(&qword_100E92748);
  uint64_t v37 = sub_1001246C8(&qword_100E92750, &qword_100E92748);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v78);
  long long v38 = v92;
  LOBYTE(v10) = v93;
  sub_100763F64(*(uint64_t *)v90, *(uint64_t *)&v90[8], *(uint64_t *)&v90[16], v91);
  sub_100191924(v38, *((uint64_t *)&v38 + 1), v10);
  swift_bridgeObjectRelease();
  *(void *)&long long v88 = v36;
  *((void *)&v88 + 1) = v37;
  swift_getOpaqueTypeConformance2();
  uint64_t v39 = v80;
  View.accessibilityRespondsToUserInteraction(_:)();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v14, v39);
  uint64_t v40 = type metadata accessor for DetailContainerView();
  uint64_t v41 = v77;
  uint64_t v42 = (uint64_t *)(v77 + *(int *)(v40 + 44));
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *(void *)&long long v88 = v44;
  *((void *)&v88 + 1) = v43;
  sub_10014A85C();
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  sub_10017DF4C((uint64_t)v18, &qword_100E92740);
  uint64_t v45 = v83;
  static AccessibilityTraits.isHeader.getter();
  uint64_t v46 = (uint64_t)v79;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v45, v85);
  sub_10017DF4C((uint64_t)v21, &qword_100E92740);
  sub_100763F7C(v46, (uint64_t)v26);
  uint64_t v47 = (void *)(v41 + *(int *)(v40 + 56));
  uint64_t v48 = v47[1];
  if (v48)
  {
    *(void *)&long long v88 = *v47;
    *((void *)&v88 + 1) = v48;
    swift_bridgeObjectRetain();
    uint64_t v49 = Text.init<A>(_:)();
    uint64_t v51 = v50;
    char v53 = v52 & 1;
    uint64_t v54 = v72;
    uint64_t v55 = v71;
    uint64_t v56 = v73;
    (*(void (**)(char *, void, uint64_t))(v72 + 104))(v71, enum case for Font.TextStyle.body(_:), v73);
    uint64_t v57 = type metadata accessor for Font.Design();
    uint64_t v58 = v74;
    _s7Weather24LocationCompositionStateOwst_0(v74, 1, 1, v57);
    static Font.system(_:design:weight:)();
    sub_10017DF4C(v58, &qword_100E63F80);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
    static Font.Weight.bold.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v59 = Text.font(_:)();
    uint64_t v61 = v60;
    LOBYTE(v55) = v62;
    uint64_t v64 = v63;
    swift_release();
    uint64_t v65 = v55 & 1;
    sub_100191924(v49, v51, v53);
    swift_bridgeObjectRelease();
    __int16 v66 = 257;
  }
  else
  {
    uint64_t v59 = 0;
    uint64_t v61 = 0;
    uint64_t v65 = 0;
    uint64_t v64 = 0;
    __int16 v66 = 0;
  }
  uint64_t v67 = v86;
  sub_100763FE4((uint64_t)v26, v86);
  uint64_t v68 = v87;
  sub_100763FE4(v67, v87);
  uint64_t v69 = v68 + *(int *)(sub_10017DF08(&qword_100E92758) + 48);
  *(void *)uint64_t v69 = v59;
  *(void *)(v69 + 8) = v61;
  *(void *)(v69 + 16) = v65;
  *(void *)(v69 + 24) = v64;
  *(_WORD *)(v69 + 32) = v66;
  sub_100147E1C(v59, v61, v65, v64);
  sub_10017DF4C((uint64_t)v26, &qword_100E92740);
  sub_100147E60(v59, v61, v65, v64);
  return sub_10017DF4C(v67, &qword_100E92740);
}

uint64_t sub_1007635E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for DetailContainerView();
  if (*(void *)(a1 + v10[12] + 8))
  {
    uint64_t v11 = v6;
    uint64_t v48 = v10;
    uint64_t v12 = v10[13];
    uint64_t v50 = a1;
    int v13 = *(unsigned __int8 *)(a1 + v12);
    swift_bridgeObjectRetain();
    unint64_t v14 = (void (**)(char *))(v7 + 104);
    uint64_t v15 = (void (**)(char *, uint64_t))(v7 + 8);
    if (v13 == 1)
    {
      Image.init(_:bundle:)();
      uint64_t v16 = *v14;
      unsigned int v49 = enum case for Font.TextStyle.body(_:);
      uint64_t v6 = v11;
      v16(v9);
      uint64_t v17 = type metadata accessor for Font.Design();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v17);
      static Font.system(_:design:weight:)();
      sub_10017DF4C((uint64_t)v5, &qword_100E63F80);
      (*v15)(v9, v11);
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_1006E8CC0();
    }
    else
    {
      Image.init(systemName:)();
      uint64_t v24 = *v14;
      unsigned int v49 = enum case for Font.TextStyle.body(_:);
      uint64_t v6 = v11;
      v24(v9);
      uint64_t v25 = type metadata accessor for Font.Design();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v25);
      static Font.system(_:design:weight:)();
      sub_10017DF4C((uint64_t)v5, &qword_100E63F80);
      (*v15)(v9, v11);
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_1006E8DFC();
    }
    uint64_t v47 = v18;
    char v26 = v21;
    uint64_t v51 = v20;
    uint64_t v52 = v19;
    swift_release_n();
    swift_release_n();
    swift_release_n();
    int v53 = v26 & 1;
    a1 = v50;
    uint64_t v23 = v49;
    uint64_t v22 = v47;
    uint64_t v10 = v48;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v23 = enum case for Font.TextStyle.body(_:);
    int v53 = 255;
  }
  uint64_t v27 = (uint64_t *)(a1 + v10[11]);
  uint64_t v28 = v27[1];
  uint64_t v55 = *v27;
  uint64_t v56 = v28;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v29 = Text.init<A>(_:)();
  uint64_t v31 = v30;
  char v33 = v32 & 1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 104))(v9, v23, v6);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v34 = Text.font(_:)();
  uint64_t v36 = v35;
  char v38 = v37;
  uint64_t v40 = v39;
  swift_release();
  sub_100191924(v29, v31, v33);
  swift_bridgeObjectRelease();
  uint64_t v41 = v54;
  uint64_t v43 = v51;
  uint64_t v42 = v52;
  uint64_t *v54 = v22;
  v41[1] = v42;
  v41[2] = v43;
  unsigned __int8 v44 = v53;
  *((unsigned char *)v41 + 24) = v53;
  v41[4] = v34;
  v41[5] = v36;
  *((unsigned char *)v41 + 48) = v38 & 1;
  uint64_t v41[7] = v40;
  *((_WORD *)v41 + 32) = 257;
  sub_10076404C(v22, v42, v43, v44);
  sub_100190CC4(v34, v36, v38 & 1);
  swift_bridgeObjectRetain();
  sub_100191924(v34, v36, v38 & 1);
  swift_bridgeObjectRelease();
  return sub_100763F64(v22, v42, v43, v44);
}

uint64_t sub_100763AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DetailContainerView();
  uint64_t v5 = *(void *)(a1 + *(int *)(v4 + 48) + 8);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = Image.init(systemName:)();
  }
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  if (*(void *)(a1 + *(int *)(v4 + 56) + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = Text.init<A>(_:)();
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18 & 1;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    uint64_t v19 = 0;
    uint64_t v17 = 0;
  }
  char v20 = v10 & 1;
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v19;
  *(void *)(a2 + 64) = v17;
  swift_retain();
  sub_100190CC4(v6, v8, v20);
  swift_bridgeObjectRetain();
  sub_100147E1C(v13, v15, v19, v17);
  sub_100147E60(v13, v15, v19, v17);
  sub_100191924(v6, v8, v20);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100763C54@<X0>(uint64_t a1@<X8>)
{
  return sub_100761E88(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100763C64()
{
  return sub_100763EC0((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100762D44);
}

uint64_t sub_100763C80()
{
  return sub_100763EC0((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100762DB8);
}

unint64_t sub_100763C98()
{
  unint64_t result = qword_100E926D8;
  if (!qword_100E926D8)
  {
    sub_10018C6DC(&qword_100E926D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E926D8);
  }
  return result;
}

uint64_t sub_100763D0C@<X0>(uint64_t a1@<X8>)
{
  return sub_100762460(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100763D18()
{
  return sub_100762838();
}

uint64_t sub_100763D24@<X0>(uint64_t a1@<X8>)
{
  return sub_1007629E8(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_100763D30()
{
  unint64_t result = qword_100E92728;
  if (!qword_100E92728)
  {
    sub_10018C6DC(&qword_100E92720);
    sub_10018C6DC(&qword_100E87E60);
    sub_10018C6DC(&qword_100E6F7B0);
    sub_100763E28();
    sub_1001246C8(&qword_100E6F7B8, &qword_100E6F7B0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92728);
  }
  return result;
}

unint64_t sub_100763E28()
{
  unint64_t result = qword_100E87E68;
  if (!qword_100E87E68)
  {
    sub_10018C6DC(&qword_100E87E60);
    sub_100681C34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E87E68);
  }
  return result;
}

uint64_t sub_100763EA8()
{
  return sub_100763EC0((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100762C3C);
}

uint64_t sub_100763EC0(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for DetailContainerView() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a1(v5, v2, v3);
}

uint64_t sub_100763F58@<X0>(uint64_t a1@<X8>)
{
  return sub_100763AB0(*(void *)(v1 + 32), a1);
}

uint64_t sub_100763F64(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1005B9EB4();
  }
  return result;
}

uint64_t sub_100763F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E92740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100763FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E92740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10076404C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1005B9E6C();
  }
  return result;
}

uint64_t sub_10076406C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1007642F8()
{
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory_lastViewModel, &qword_100E64AA0);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory_appConfigurationManager);

  return swift_deallocClassInstance();
}

uint64_t sub_100764374()
{
  return type metadata accessor for LocationViewerViewModelFactory();
}

uint64_t sub_10076437C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  unsigned int v7 = 0;
  switch(sub_1005A0E98())
  {
    case 1u:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 34;
      goto LABEL_42;
    case 2u:
      if (qword_100E62598 != -1) {
        swift_once();
      }
      uint64_t v8 = &byte_100F51B48;
      goto LABEL_20;
    case 3u:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 36;
      goto LABEL_42;
    case 4u:
    case 8u:
      return v7;
    case 5u:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 42;
      goto LABEL_42;
    case 6u:
      if (qword_100E62590 != -1) {
        swift_once();
      }
      uint64_t v8 = &byte_100F51B38;
      goto LABEL_20;
    case 7u:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 48;
      goto LABEL_42;
    case 9u:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 38;
      goto LABEL_42;
    case 0xAu:
      if (qword_100E625A0 != -1) {
        swift_once();
      }
      uint64_t v8 = &byte_100F51B58;
      goto LABEL_20;
    case 0xBu:
      sub_100187B7C();
      uint64_t v32 = 78;
      goto LABEL_42;
    case 0xCu:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 80;
      goto LABEL_42;
    case 0xDu:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 84;
      goto LABEL_42;
    case 0xEu:
      sub_100187B7C();
      uint64_t v32 = 82;
      goto LABEL_42;
    case 0xFu:
      uint64_t v27 = sub_1001880A4();
      v28(v27);
      sub_100180338();
      uint64_t v29 = sub_10017D42C();
      v30(v29);
      return 15;
    case 0x10u:
      uint64_t v9 = enum case for WeatherMapPrecipitationOverlayKind.forecast(_:);
      type metadata accessor for WeatherMapPrecipitationOverlayKind();
      sub_100162E4C();
      (*(void (**)(char *, uint64_t))(v10 + 104))(v6, v9);
      uint64_t v11 = sub_1001880A4();
      v12(v11);
      sub_100180338();
      uint64_t v13 = sub_10017D42C();
      v14(v13);
      return 16;
    case 0x11u:
      uint64_t v23 = sub_1001880A4();
      v24(v23);
      sub_100180338();
      uint64_t v25 = sub_10017D42C();
      v26(v25);
      return 17;
    case 0x12u:
      uint64_t v19 = sub_1001880A4();
      v20(v19);
      sub_100180338();
      uint64_t v21 = sub_10017D42C();
      v22(v21);
      return 18;
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x16u:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 74;
      goto LABEL_42;
    case 0x17u:
      sub_100187B7C();
      uint64_t v32 = 76;
      goto LABEL_42;
    case 0x18u:
      sub_100187B7C();
      uint64_t v32 = 86;
      goto LABEL_42;
    case 0x19u:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 88;
      goto LABEL_42;
    case 0x1Au:
      sub_100B57B3C();
      return 26;
    case 0x1Bu:
      sub_10017A860();
      sub_100187B7C();
      uint64_t v32 = 92;
LABEL_42:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1007649ECLL);
    case 0x1Cu:
      if (qword_100E62870 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_1002102B0(v15, (uint64_t)qword_100F52058);
      swift_bridgeObjectRetain_n();
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        char v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)char v18 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_10016414C(a1, a2, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to find PerformanceTest with name: %s", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      unsigned int v7 = 0;
      break;
    default:
      if (qword_100E62588 != -1) {
        swift_once();
      }
      uint64_t v8 = &byte_100F51B28;
LABEL_20:
      unsigned int v7 = *v8;
      swift_bridgeObjectRetain();
      break;
  }
  return v7;
}

uint64_t type metadata accessor for PerformanceTestDefinitions_iPhone()
{
  return self;
}

uint64_t sub_100764A84(uint64_t a1, unint64_t a2)
{
  return sub_10076437C(a1, a2);
}

uint64_t sub_100764A9C()
{
  uint64_t result = sub_100764AC4();
  byte_100F51B28 = 0;
  qword_100F51B30 = result;
  return result;
}

uint64_t sub_100764AC4()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  uint64_t v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v8[15];
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  v2[*(int *)(v0 + 20)] = 0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  *(void *)(v4 + 56) = &type metadata for Scroll;
  *(void *)(v4 + 64) = &off_100E15EF8;
  *(void *)(v4 + 32) = sub_100764D10;
  *(void *)(v4 + 40) = 0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C34240;
  *(void *)(v5 + 56) = &type metadata for Mica;
  *(void *)(v5 + 64) = &off_100E26518;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 96) = &type metadata for Delay;
  *(void *)(v5 + 104) = &off_100E12AD8;
  *(void *)(v5 + 72) = 0x3FF0000000000000;
  *(void *)(v5 + 136) = &type metadata for UpdateWeather;
  *(void *)(v5 + 144) = &off_100E3B100;
  *(unsigned char *)(v5 + 112) = v3;
  *(void *)(v5 + 176) = &type metadata for Delay;
  *(void *)(v5 + 184) = &off_100E12AD8;
  *(void *)(v5 + 152) = 0x3FF0000000000000;
  *(void *)(v5 + 216) = v0;
  *(void *)(v5 + 224) = &off_100E22EC8;
  uint64_t v6 = sub_100170694((uint64_t *)(v5 + 192));
  sub_100765EC8((uint64_t)v2, (uint64_t)v6, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v5 + 256) = &type metadata for Delay;
  *(void *)(v5 + 264) = &off_100E12AD8;
  *(void *)(v5 + 232) = 0x3FF0000000000000;
  *(void *)(v5 + 296) = &type metadata for Measure;
  *(void *)(v5 + 304) = &off_100E11158;
  *(void *)(v5 + 272) = v4;
  *(void *)(v5 + 336) = &type metadata for Mica;
  *(void *)(v5 + 344) = &off_100E26518;
  *(unsigned char *)(v5 + 312) = 1;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for Navigate);
  return v5;
}

uint64_t sub_100764D10(double a1, double a2, double a3, double a4)
{
  CGRect v13 = CGRectInset(*(CGRect *)&a1, 10.0, 120.0);
  CGFloat x = v13.origin.x;
  CGFloat y = v13.origin.y;
  CGFloat width = v13.size.width;
  CGFloat height = v13.size.height;
  CGFloat v8 = v13.size.height * 3.0;
  sub_10017DF08(&qword_100E928F8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100C25ED0;
  *(void *)(v9 + 56) = &type metadata for Down;
  *(void *)(v9 + 64) = &off_100E11EA8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v9 + 32) = v10;
  *(unsigned char *)(v10 + 16) = 1;
  *(CGFloat *)(v10 + 24) = x;
  *(CGFloat *)(v10 + 32) = y;
  *(CGFloat *)(v10 + 40) = width;
  *(CGFloat *)(v10 + 48) = height;
  *(CGFloat *)(v10 + 56) = v8;
  *(void *)(v9 + 96) = &type metadata for Up;
  *(void *)(v9 + 104) = &off_100E152C8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v9 + 72) = v11;
  *(unsigned char *)(v11 + 16) = 0;
  *(CGFloat *)(v11 + 24) = x;
  *(CGFloat *)(v11 + 32) = y;
  *(CGFloat *)(v11 + 40) = width;
  *(CGFloat *)(v11 + 48) = height;
  *(CGFloat *)(v11 + 56) = v8;
  return v9;
}

uint64_t sub_100764E14()
{
  uint64_t result = sub_100764E40();
  byte_100F51B38 = 6;
  qword_100F51B40 = result;
  return result;
}

uint64_t sub_100764E40()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  uint64_t v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v8[15];
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  v2[*(int *)(v0 + 20)] = 0;
  uint64_t v4 = sub_10076504C();
  sub_10017DF08(&qword_100E65E98);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C34240;
  *(void *)(v5 + 56) = &type metadata for Mica;
  *(void *)(v5 + 64) = &off_100E26518;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 96) = &type metadata for Delay;
  *(void *)(v5 + 104) = &off_100E12AD8;
  *(void *)(v5 + 72) = 0x3FF0000000000000;
  *(void *)(v5 + 136) = &type metadata for UpdateWeather;
  *(void *)(v5 + 144) = &off_100E3B100;
  *(unsigned char *)(v5 + 112) = v3;
  *(void *)(v5 + 176) = &type metadata for Delay;
  *(void *)(v5 + 184) = &off_100E12AD8;
  *(void *)(v5 + 152) = 0x3FF0000000000000;
  *(void *)(v5 + 216) = v0;
  *(void *)(v5 + 224) = &off_100E22EC8;
  uint64_t v6 = sub_100170694((uint64_t *)(v5 + 192));
  sub_100765EC8((uint64_t)v2, (uint64_t)v6, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v5 + 256) = &type metadata for Delay;
  *(void *)(v5 + 264) = &off_100E12AD8;
  *(void *)(v5 + 232) = 0x4000000000000000;
  *(void *)(v5 + 296) = &type metadata for Measure;
  *(void *)(v5 + 304) = &off_100E11158;
  *(void *)(v5 + 272) = v4;
  *(void *)(v5 + 336) = &type metadata for Mica;
  *(void *)(v5 + 344) = &off_100E26518;
  *(unsigned char *)(v5 + 312) = 1;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for Navigate);
  return v5;
}

uint64_t sub_10076504C()
{
  uint64_t v0 = type metadata accessor for DispatchAction();
  uint64_t v27 = v0;
  __chkstk_darwin(v0);
  uint64_t v28 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - v3;
  __chkstk_darwin(v5);
  unsigned int v7 = (char *)&v27 - v6;
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Location.newYork.getter();
  Location.identifier.getter();
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  v7[*(int *)(v0 + 20)] = 1;
  uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E6F640) + 48);
  uint64_t v13 = (uint64_t)&v4[*(int *)(sub_10017DF08(&qword_100E63870) + 48)];
  uint64_t v29 = v9;
  uint64_t v30 = v8;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v11, v8);
  type metadata accessor for SavedLocation();
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = type metadata accessor for LocationOfInterest();
  _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v14);
  uint64_t v15 = enum case for LocationModel.saved(_:);
  uint64_t v16 = type metadata accessor for LocationModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v4, v15, v16);
  v4[v12] = 1;
  uint64_t v17 = v27;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v4[*(int *)(v17 + 20)] = 1;
  if (qword_100E62318 != -1) {
    swift_once();
  }
  id v18 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:xmmword_100F514A0 stiffness:*(double *)&qword_100F514B0 damping:unk_100F514B8 initialVelocity:unk_100F514B8];
  [v18 ts_settlingDuration];
  uint64_t v20 = v19;

  uint64_t v21 = (uint64_t)v28;
  Location.identifier.getter();
  type metadata accessor for LocationViewerViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v21 + *(int *)(v17 + 20)) = 0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100C31870;
  *(void *)(v22 + 56) = v17;
  *(void *)(v22 + 64) = &off_100E39A90;
  uint64_t v23 = sub_100170694((uint64_t *)(v22 + 32));
  sub_100765EC8((uint64_t)v7, (uint64_t)v23, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v22 + 96) = v17;
  *(void *)(v22 + 104) = &off_100E39A90;
  uint64_t v24 = sub_100170694((uint64_t *)(v22 + 72));
  sub_100765EC8((uint64_t)v4, (uint64_t)v24, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v22 + 136) = &type metadata for Delay;
  *(void *)(v22 + 144) = &off_100E12AD8;
  *(void *)(v22 + 112) = v20;
  *(void *)(v22 + 176) = v17;
  *(void *)(v22 + 184) = &off_100E39A90;
  uint64_t v25 = sub_100170694((uint64_t *)(v22 + 152));
  sub_100765FAC(v21, (uint64_t)v25);
  sub_100765F28((uint64_t)v4, (void (*)(void))type metadata accessor for DispatchAction);
  sub_100765F28((uint64_t)v7, (void (*)(void))type metadata accessor for DispatchAction);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
  return v22;
}

uint64_t sub_1007654DC()
{
  uint64_t result = sub_100765508();
  byte_100F51B48 = 2;
  qword_100F51B50 = result;
  return result;
}

uint64_t sub_100765508()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Location.newYork.getter();
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  v5[*(int *)(v3 + 20)] = 0;
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  int v18 = v19;
  uint64_t v6 = enum case for TemperatureChartKind.actual(_:);
  uint64_t v7 = type metadata accessor for TemperatureChartKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v2, v6, v7);
  uint64_t v8 = enum case for DetailCondition.conditions(_:);
  uint64_t v9 = type metadata accessor for DetailCondition();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v2, v8, v9);
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  v2[*(int *)(v0 + 20)] = 0;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_100765954;
  v10[3] = 0;
  v10[4] = 0x3FF0000000000000;
  swift_retain();
  uint64_t v11 = sub_100765974((uint64_t)sub_10076595C, 0, 10.0);
  sub_10017DF08(&qword_100E65E98);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100C251B0;
  *(void *)(v12 + 56) = &type metadata for Repeat;
  *(void *)(v12 + 64) = &off_100E2F8D8;
  *(void *)(v12 + 32) = 5;
  *(void *)(v12 + 40) = v11;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100C31F20;
  *(void *)(v13 + 56) = &type metadata for Mica;
  *(void *)(v13 + 64) = &off_100E26518;
  *(unsigned char *)(v13 + 32) = 0;
  *(void *)(v13 + 96) = v3;
  *(void *)(v13 + 104) = &off_100E39A90;
  uint64_t v14 = sub_100170694((uint64_t *)(v13 + 72));
  sub_100765EC8((uint64_t)v5, (uint64_t)v14, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v13 + 136) = &type metadata for Delay;
  *(void *)(v13 + 144) = &off_100E12AD8;
  *(void *)(v13 + 112) = 0x3FF0000000000000;
  *(void *)(v13 + 176) = &type metadata for UpdateWeather;
  *(void *)(v13 + 184) = &off_100E3B100;
  *(unsigned char *)(v13 + 152) = v18;
  *(void *)(v13 + 216) = &type metadata for Delay;
  *(void *)(v13 + 224) = &off_100E12AD8;
  *(void *)(v13 + 192) = 0x3FF0000000000000;
  *(void *)(v13 + 256) = v0;
  *(void *)(v13 + 264) = &off_100E22EC8;
  uint64_t v15 = sub_100170694((uint64_t *)(v13 + 232));
  sub_100765EC8((uint64_t)v2, (uint64_t)v15, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v13 + 296) = &type metadata for Delay;
  *(void *)(v13 + 304) = &off_100E12AD8;
  *(void *)(v13 + 272) = 0x3FF0000000000000;
  *(void *)(v13 + 336) = &type metadata for Swipe;
  *(void *)(v13 + 344) = &off_100E1E928;
  *(void *)(v13 + 312) = sub_100766010;
  *(void *)(v13 + 320) = v10;
  *(void *)(v13 + 376) = &type metadata for Delay;
  *(void *)(v13 + 384) = &off_100E12AD8;
  *(void *)(v13 + 352) = 0x3FF0000000000000;
  *(void *)(v13 + 416) = &type metadata for Measure;
  *(void *)(v13 + 424) = &off_100E11158;
  *(void *)(v13 + 392) = v12;
  *(void *)(v13 + 456) = &type metadata for Mica;
  *(void *)(v13 + 464) = &off_100E26518;
  *(unsigned char *)(v13 + 432) = 1;
  swift_release();
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for Navigate);
  sub_100765F28((uint64_t)v5, (void (*)(void))type metadata accessor for DispatchAction);
  return v13;
}

double sub_100765954(double a1, double a2, double a3, double a4)
{
  return sub_100765968(a1, a2, a3, a4, 0.0);
}

double sub_10076595C(double a1, double a2, double a3, double a4)
{
  return sub_100765968(a1, a2, a3, a4, 100.0);
}

double sub_100765968(double a1, double a2, double a3, double a4, CGFloat a5)
{
  *(void *)&double result = (unint64_t)CGRectInset(*(CGRect *)&a1, a5, 100.0);
  return result;
}

uint64_t sub_100765974(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(double *)(v6 + 32) = a3;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C25ED0;
  *(void *)(v7 + 56) = &type metadata for Swipe;
  *(void *)(v7 + 64) = &off_100E1E928;
  *(void *)(v7 + 32) = sub_100765F80;
  *(void *)(v7 + 40) = v6;
  *(void *)(v7 + 96) = &type metadata for Delay;
  *(void *)(v7 + 104) = &off_100E12AD8;
  *(void *)(v7 + 72) = 0x3FF0000000000000;
  swift_retain();
  return v7;
}

uint64_t sub_100765A44(double (*a1)(void), double a2, double a3, double a4, double a5, double a6)
{
  double v7 = a1();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  sub_10017DF08(&qword_100E92900);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100C251B0;
  *(void *)(v14 + 56) = &type metadata for Next;
  *(void *)(v14 + 64) = &off_100E2E3B0;
  uint64_t v15 = swift_allocObject();
  *(void *)(v14 + 32) = v15;
  *(unsigned char *)(v15 + 16) = 0;
  *(double *)(v15 + 24) = v7;
  *(void *)(v15 + 32) = v9;
  *(void *)(v15 + 40) = v11;
  *(void *)(v15 + 48) = v13;
  *(void *)(v15 + 56) = 1;
  *(double *)(v15 + 64) = a6;
  return v14;
}

uint64_t sub_100765B08()
{
  uint64_t result = sub_100765B34();
  byte_100F51B58 = 10;
  qword_100F51B60 = result;
  return result;
}

uint64_t sub_100765B34()
{
  uint64_t v0 = type metadata accessor for DispatchAction();
  __chkstk_darwin(v0);
  uint64_t v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v8[15];
  static Location.london.getter();
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  v2[*(int *)(v0 + 20)] = 0;
  uint64_t v4 = sub_100765D60();
  sub_10017DF08(&qword_100E65E98);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C34240;
  *(void *)(v5 + 56) = &type metadata for Mica;
  *(void *)(v5 + 64) = &off_100E26518;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 96) = &type metadata for Delay;
  *(void *)(v5 + 104) = &off_100E12AD8;
  *(void *)(v5 + 72) = 0x3FF0000000000000;
  *(void *)(v5 + 136) = &type metadata for UpdateWeather;
  *(void *)(v5 + 144) = &off_100E3B100;
  *(unsigned char *)(v5 + 112) = v3;
  *(void *)(v5 + 176) = &type metadata for Delay;
  *(void *)(v5 + 184) = &off_100E12AD8;
  *(void *)(v5 + 152) = 0x3FF0000000000000;
  *(void *)(v5 + 216) = v0;
  *(void *)(v5 + 224) = &off_100E39A90;
  uint64_t v6 = sub_100170694((uint64_t *)(v5 + 192));
  sub_100765EC8((uint64_t)v2, (uint64_t)v6, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v5 + 256) = &type metadata for Delay;
  *(void *)(v5 + 264) = &off_100E12AD8;
  *(void *)(v5 + 232) = 0x4000000000000000;
  *(void *)(v5 + 296) = &type metadata for Measure;
  *(void *)(v5 + 304) = &off_100E11158;
  *(void *)(v5 + 272) = v4;
  *(void *)(v5 + 336) = &type metadata for Mica;
  *(void *)(v5 + 344) = &off_100E26518;
  *(unsigned char *)(v5 + 312) = 1;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for DispatchAction);
  return v5;
}

uint64_t sub_100765D60()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  v2[*(int *)(v0 + 20)] = 1;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100C25ED0;
  *(void *)(v3 + 56) = v0;
  *(void *)(v3 + 64) = &off_100E22EC8;
  uint64_t v4 = sub_100170694((uint64_t *)(v3 + 32));
  sub_100765EC8((uint64_t)v2, (uint64_t)v4, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v3 + 96) = &type metadata for Delay;
  *(void *)(v3 + 104) = &off_100E12AD8;
  *(void *)(v3 + 72) = 0x4008000000000000;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for Navigate);
  return v3;
}

uint64_t sub_100765E84()
{
  return sub_10017D164();
}

uint64_t sub_100765E90()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100765EC8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100765F28(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100765F80(double a1, double a2, double a3, double a4)
{
  return sub_100765A44(*(double (**)(void))(v4 + 16), a1, a2, a3, a4, *(double *)(v4 + 32));
}

uint64_t sub_100765FA0()
{
  return sub_10017D164();
}

uint64_t sub_100765FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100766018(int a1, uint64_t a2)
{
  uint64_t v38 = a2;
  int v37 = a1;
  uint64_t v39 = type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = (unsigned char *)(v5 - v4);
  uint64_t v7 = type metadata accessor for DetailType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v33 = (char *)&v32 - v12;
  uint64_t v13 = type metadata accessor for DetailViewVisibilityTrackerModel();
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = v2[7];
  sub_1001B1E64(v2 + 4, v18);
  sub_100179F84();
  v19(v18);
  uint64_t v20 = v2[7];
  uint64_t v35 = v2[8];
  uint64_t v36 = v20;
  uint64_t v34 = sub_1001B1E64(v2 + 4, v20);
  uint64_t v21 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  uint64_t v22 = (unsigned int *)&enum case for DetailType.temperatureAverages(_:);
  v37 &= 1u;
  if (v37) {
    uint64_t v22 = (unsigned int *)&enum case for DetailType.precipitationAverages(_:);
  }
  v21(v10, *v22, v7);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v24 = v33;
  v23(v33, v10, v7);
  uint64_t v25 = v17 + *(int *)(v14 + 28);
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v38);
  uint64_t v27 = v17 + *(int *)(v14 + 32);
  uint64_t v28 = enum case for DetailViewOrigin.selector(_:);
  type metadata accessor for DetailViewOrigin();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v29 + 104))(v27, v28);
  v23((char *)v17, v24, v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 + 8) + 24))(v17, v36);
  sub_10076658C(v17, (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
  uint64_t v30 = (uint64_t (*)(uint64_t))v2[2];
  *uint64_t v6 = v37;
  type metadata accessor for AveragesDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = 0;
  memset(v40, 0, sizeof(v40));
  swift_retain();
  sub_1001AAF58((uint64_t)v6, (uint64_t)v40, v30);
  sub_100016E7C((uint64_t)v40);
  sub_10076658C((uint64_t)v6, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100766380(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 16);
  sub_1007665E4(a1, v5 - v4);
  type metadata accessor for AveragesDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1001AAF58(v6, (uint64_t)v9, v7);
  sub_100016E7C((uint64_t)v9);
  sub_10076658C(v6, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100766480()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 16);
  type metadata accessor for AveragesDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_retain();
  sub_1001AAF58(v4, (uint64_t)v7, v5);
  sub_100016E7C((uint64_t)v7);
  sub_10076658C(v4, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t type metadata accessor for AveragesDetailInteractor()
{
  return self;
}

uint64_t sub_10076658C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1007665E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100766648(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    long long v9 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 16, a2 + 16);
    uint64_t v10 = *(int *)(a3 + 24);
    unint64_t v141 = a1;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = *(void *)(a2 + v10 + 8);
    *(void *)uint64_t v11 = *(void *)(a2 + v10);
    *(void *)(v11 + 8) = v13;
    uint64_t v14 = *(void *)(a2 + v10 + 16);
    uint64_t v15 = *(void *)(v12 + 24);
    *(void *)(v11 + 16) = v14;
    *(void *)(v11 + 24) = v15;
    uint64_t v16 = *(void *)(v12 + 40);
    *(void *)(v11 + 32) = *(void *)(v12 + 32);
    *(void *)(v11 + 40) = v16;
    uint64_t v17 = *(void *)(v12 + 56);
    *(void *)(v11 + 48) = *(void *)(v12 + 48);
    *(void *)(v11 + 56) = v17;
    uint64_t v18 = *(void *)(v12 + 72);
    *(void *)(v11 + 64) = *(void *)(v12 + 64);
    *(void *)(v11 + 72) = v18;
    *(void *)(v11 + 80) = *(void *)(v12 + 80);
    *(_OWORD *)(v11 + 88) = *(_OWORD *)(v12 + 88);
    uint64_t v19 = *(void *)(v12 + 120);
    uint64_t v144 = *(void **)(v12 + 112);
    uint64_t v145 = *(void **)(v12 + 104);
    unsigned __int8 v20 = *(unsigned char *)(v12 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10027D4F8(v145, v144, v19, v20);
    *(void *)(v11 + 104) = v145;
    *(void *)(v11 + 112) = v144;
    *(void *)(v11 + 120) = v19;
    *(unsigned char *)(v11 + 128) = v20;
    uint64_t v21 = *(void *)(v12 + 144);
    *(void *)(v11 + 136) = *(void *)(v12 + 136);
    *(void *)(v11 + 144) = v21;
    *(void *)(v11 + 152) = *(void *)(v12 + 152);
    *(unsigned char *)(v11 + 160) = *(unsigned char *)(v12 + 160);
    uint64_t v22 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
    uint64_t v23 = *(int *)(v22 + 48);
    uint64_t v24 = v22;
    uint64_t v146 = (int *)v22;
    uint64_t v25 = v11 + v23;
    uint64_t v26 = v12 + v23;
    uint64_t v27 = type metadata accessor for Date();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    uint64_t v29 = (int *)type metadata accessor for PeakUpperMarkModel(0);
    *(void *)(v25 + v29[5]) = *(void *)(v26 + v29[5]);
    uint64_t v30 = v29[6];
    uint64_t v31 = (void *)(v25 + v30);
    uint64_t v32 = (void *)(v26 + v30);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = v29[7];
    uint64_t v35 = (void *)(v25 + v34);
    uint64_t v36 = (void *)(v26 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = v29[8];
    uint64_t v39 = (void *)(v25 + v38);
    uint64_t v40 = (void *)(v26 + v38);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    uint64_t v42 = *(int *)(v24 + 52);
    uint64_t v43 = v11 + v42;
    uint64_t v44 = v12 + v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v43, v44, v27);
    *(void *)(v43 + v29[5]) = *(void *)(v44 + v29[5]);
    uint64_t v45 = v29[6];
    uint64_t v46 = (void *)(v43 + v45);
    uint64_t v47 = (void *)(v44 + v45);
    uint64_t v48 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v48;
    uint64_t v49 = v29[7];
    uint64_t v50 = (void *)(v43 + v49);
    uint64_t v51 = (void *)(v44 + v49);
    uint64_t v52 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v52;
    uint64_t v53 = v29[8];
    uint64_t v54 = (void *)(v43 + v53);
    uint64_t v55 = (void *)(v44 + v53);
    uint64_t v56 = v55[1];
    void *v54 = *v55;
    v54[1] = v56;
    uint64_t v57 = v146[14];
    uint64_t v142 = v12;
    uint64_t v143 = v11;
    uint64_t v58 = v11 + v57;
    uint64_t v59 = v12 + v57;
    type metadata accessor for DetailHeroChartLollipopModel(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v58 = *(void *)v59;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v61 = *(int *)(active + 20);
      uint64_t v62 = v58 + v61;
      uint64_t v63 = v59 + v61;
      v28(v58 + v61, v59 + v61, v27);
      uint64_t v64 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)(v62 + v64[5]) = *(void *)(v63 + v64[5]);
      *(void *)(v62 + v64[6]) = *(void *)(v63 + v64[6]);
      *(void *)(v62 + v64[7]) = *(void *)(v63 + v64[7]);
      uint64_t v65 = *(int *)(active + 24);
      uint64_t v66 = v58 + v65;
      uint64_t v67 = v59 + v65;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v80 = *(void *)(v67 + 8);
        *(void *)uint64_t v66 = *(void *)v67;
        *(void *)(v66 + 8) = v80;
        uint64_t v81 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v82 = v81[5];
        uint64_t v137 = v67 + v82;
        uint64_t v138 = v66 + v82;
        uint64_t v83 = type metadata accessor for AttributedString();
        uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16);
        swift_bridgeObjectRetain();
        v84(v138, v137, v83);
        uint64_t v85 = v81[6];
        uint64_t v86 = (void *)(v66 + v85);
        uint64_t v87 = (void *)(v67 + v85);
        uint64_t v88 = v87[1];
        *uint64_t v86 = *v87;
        v86[1] = v88;
        uint64_t v89 = v81[7];
        uint64_t v90 = (void *)(v66 + v89);
        unsigned __int8 v91 = (void *)(v67 + v89);
        uint64_t v92 = v91[1];
        *uint64_t v90 = *v91;
        v90[1] = v92;
        uint64_t v93 = v81[8];
        uint64_t v94 = (void *)(v66 + v93);
        char v95 = (void *)(v67 + v93);
        uint64_t v96 = v95[1];
        *uint64_t v94 = *v95;
        v94[1] = v96;
        uint64_t v97 = v81[9];
        int v98 = (void *)(v66 + v97);
        int v99 = (void *)(v67 + v97);
        uint64_t v100 = v99[1];
        *int v98 = *v99;
        v98[1] = v100;
        uint64_t v101 = v81[10];
        uint64_t v102 = (void *)(v66 + v101);
        uint64_t v103 = (void *)(v67 + v101);
        uint64_t v104 = v103[1];
        void *v102 = *v103;
        v102[1] = v104;
        *(unsigned char *)(v66 + v81[11]) = *(unsigned char *)(v67 + v81[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          unint64_t v74 = v141;
          uint64_t v105 = *(void *)(v67 + 8);
          *(void *)uint64_t v66 = *(void *)v67;
          *(void *)(v66 + 8) = v105;
          uint64_t v106 = *(void *)(v67 + 24);
          *(void *)(v66 + 16) = *(void *)(v67 + 16);
          *(void *)(v66 + 24) = v106;
          uint64_t v107 = *(void *)(v67 + 40);
          *(void *)(v66 + 32) = *(void *)(v67 + 32);
          *(void *)(v66 + 40) = v107;
LABEL_15:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          v28(v143 + v146[15], v142 + v146[15], v27);
          v28(v143 + v146[16], v142 + v146[16], v27);
          return v74;
        }
        uint64_t v69 = *(void *)(v67 + 8);
        *(void *)uint64_t v66 = *(void *)v67;
        *(void *)(v66 + 8) = v69;
        uint64_t v70 = *(void *)(v67 + 24);
        *(void *)(v66 + 16) = *(void *)(v67 + 16);
        *(void *)(v66 + 24) = v70;
        uint64_t v71 = *(void *)(v67 + 40);
        *(void *)(v66 + 32) = *(void *)(v67 + 32);
        *(void *)(v66 + 40) = v71;
        uint64_t v72 = *(void *)(v67 + 56);
        *(void *)(v66 + 48) = *(void *)(v67 + 48);
        *(void *)(v66 + 56) = v72;
        *(unsigned char *)(v66 + 64) = *(unsigned char *)(v67 + 64);
        *(unsigned char *)(v66 + 65) = *(unsigned char *)(v67 + 65);
      }
    }
    else
    {
      type metadata accessor for LollipopDetailViewModel(0);
      int v75 = swift_getEnumCaseMultiPayload();
      if (v75 == 2)
      {
        uint64_t v108 = *(void *)(v59 + 8);
        *(void *)uint64_t v58 = *(void *)v59;
        *(void *)(v58 + 8) = v108;
        uint64_t v109 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v110 = v109[5];
        uint64_t v139 = v59 + v110;
        uint64_t v140 = v58 + v110;
        uint64_t v111 = type metadata accessor for AttributedString();
        uint64_t v112 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16);
        swift_bridgeObjectRetain();
        v112(v140, v139, v111);
        uint64_t v113 = v109[6];
        uint64_t v114 = (void *)(v58 + v113);
        uint64_t v115 = (void *)(v59 + v113);
        uint64_t v116 = v115[1];
        *uint64_t v114 = *v115;
        v114[1] = v116;
        uint64_t v117 = v109[7];
        uint64_t v118 = (void *)(v58 + v117);
        int v119 = (void *)(v59 + v117);
        uint64_t v120 = v119[1];
        *uint64_t v118 = *v119;
        v118[1] = v120;
        uint64_t v121 = v109[8];
        int v122 = (void *)(v58 + v121);
        uint64_t v123 = (void *)(v59 + v121);
        uint64_t v124 = v123[1];
        *int v122 = *v123;
        v122[1] = v124;
        uint64_t v125 = v109[9];
        uint64_t v126 = (void *)(v58 + v125);
        uint64_t v127 = (void *)(v59 + v125);
        uint64_t v128 = v127[1];
        void *v126 = *v127;
        v126[1] = v128;
        uint64_t v129 = v109[10];
        uint64_t v130 = (void *)(v58 + v129);
        size_t v131 = (void *)(v59 + v129);
        uint64_t v132 = v131[1];
        *uint64_t v130 = *v131;
        v130[1] = v132;
        *(unsigned char *)(v58 + v109[11]) = *(unsigned char *)(v59 + v109[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v75 != 1)
        {
          unint64_t v74 = v141;
          uint64_t v133 = *(void *)(v59 + 8);
          *(void *)uint64_t v58 = *(void *)v59;
          *(void *)(v58 + 8) = v133;
          uint64_t v134 = *(void *)(v59 + 24);
          *(void *)(v58 + 16) = *(void *)(v59 + 16);
          *(void *)(v58 + 24) = v134;
          uint64_t v135 = *(void *)(v59 + 40);
          *(void *)(v58 + 32) = *(void *)(v59 + 32);
          *(void *)(v58 + 40) = v135;
          goto LABEL_15;
        }
        uint64_t v76 = *(void *)(v59 + 8);
        *(void *)uint64_t v58 = *(void *)v59;
        *(void *)(v58 + 8) = v76;
        uint64_t v77 = *(void *)(v59 + 24);
        *(void *)(v58 + 16) = *(void *)(v59 + 16);
        *(void *)(v58 + 24) = v77;
        uint64_t v78 = *(void *)(v59 + 40);
        *(void *)(v58 + 32) = *(void *)(v59 + 32);
        *(void *)(v58 + 40) = v78;
        uint64_t v79 = *(void *)(v59 + 56);
        *(void *)(v58 + 48) = *(void *)(v59 + 48);
        *(void *)(v58 + 56) = v79;
        *(unsigned char *)(v58 + 64) = *(unsigned char *)(v59 + 64);
        *(unsigned char *)(v58 + 65) = *(unsigned char *)(v59 + 65);
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v74 = v141;
    goto LABEL_15;
  }
  uint64_t v73 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  unint64_t v74 = v73 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v74;
}

uint64_t sub_100766DAC(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v4 + 104), *(void **)(v4 + 112), *(void *)(v4 + 120), *(unsigned char *)(v4 + 128));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v5 = (int *)type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  uint64_t v6 = v4 + v5[12];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v15)((void *)(v7 - 8), v6, v7);
  type metadata accessor for PeakUpperMarkModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15(v4 + v5[13], v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + v5[14];
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    v15(v8 + *(int *)(active + 20), v7);
    v8 += *(int *)(active + 24);
  }
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = v8 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    uint64_t v12 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_10:
  v15(v4 + v5[15], v7);
  uint64_t v13 = v4 + v5[16];

  return ((uint64_t (*)(uint64_t, uint64_t))v15)(v13, v7);
}

uint64_t sub_1007670E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 16, a2 + 16);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v138 = a1;
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9 + 8);
  *(void *)uint64_t v10 = *(void *)(a2 + v9);
  *(void *)(v10 + 8) = v12;
  uint64_t v13 = *(void *)(a2 + v9 + 24);
  *(void *)(v10 + 16) = *(void *)(a2 + v9 + 16);
  *(void *)(v10 + 24) = v13;
  uint64_t v14 = *(void *)(a2 + v9 + 32);
  uint64_t v15 = *(void *)(v11 + 40);
  *(void *)(v10 + 32) = v14;
  *(void *)(v10 + 40) = v15;
  uint64_t v16 = *(void *)(v11 + 56);
  *(void *)(v10 + 48) = *(void *)(v11 + 48);
  *(void *)(v10 + 56) = v16;
  uint64_t v17 = *(void *)(v11 + 72);
  *(void *)(v10 + 64) = *(void *)(v11 + 64);
  *(void *)(v10 + 72) = v17;
  *(void *)(v10 + 80) = *(void *)(v11 + 80);
  *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
  uint64_t v18 = *(void *)(v11 + 120);
  uint64_t v139 = *(void **)(v11 + 112);
  unint64_t v141 = *(void **)(v11 + 104);
  LOBYTE(a1) = *(unsigned char *)(v11 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v141, v139, v18, a1);
  *(void *)(v10 + 104) = v141;
  *(void *)(v10 + 112) = v139;
  *(void *)(v10 + 120) = v18;
  *(unsigned char *)(v10 + 128) = a1;
  uint64_t v19 = *(void *)(v11 + 144);
  *(void *)(v10 + 136) = *(void *)(v11 + 136);
  *(void *)(v10 + 144) = v19;
  *(void *)(v10 + 152) = *(void *)(v11 + 152);
  *(unsigned char *)(v10 + 160) = *(unsigned char *)(v11 + 160);
  unsigned __int8 v20 = (int *)type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  uint64_t v21 = v20[12];
  uint64_t v22 = v10 + v21;
  uint64_t v23 = v11 + v21;
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  uint64_t v26 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(v22 + v26[5]) = *(void *)(v23 + v26[5]);
  uint64_t v27 = v26[6];
  uint64_t v28 = (void *)(v22 + v27);
  uint64_t v29 = (void *)(v23 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = v26[7];
  uint64_t v32 = (void *)(v22 + v31);
  uint64_t v33 = (void *)(v23 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = v26[8];
  uint64_t v36 = (void *)(v22 + v35);
  uint64_t v37 = (void *)(v23 + v35);
  uint64_t v38 = v37[1];
  *uint64_t v36 = *v37;
  v36[1] = v38;
  uint64_t v39 = v20[13];
  uint64_t v40 = v10 + v39;
  uint64_t v41 = v11 + v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v140 = v25;
  v25(v40, v41, v24);
  *(void *)(v40 + v26[5]) = *(void *)(v41 + v26[5]);
  uint64_t v42 = v26[6];
  uint64_t v43 = (void *)(v40 + v42);
  uint64_t v44 = (void *)(v41 + v42);
  uint64_t v45 = v44[1];
  void *v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = v26[7];
  uint64_t v47 = (void *)(v40 + v46);
  uint64_t v48 = (void *)(v41 + v46);
  uint64_t v49 = v48[1];
  *uint64_t v47 = *v48;
  v47[1] = v49;
  uint64_t v50 = v26[8];
  uint64_t v51 = (void *)(v40 + v50);
  uint64_t v52 = (void *)(v41 + v50);
  uint64_t v53 = v52[1];
  void *v51 = *v52;
  v51[1] = v53;
  uint64_t v136 = v11;
  uint64_t v54 = v20[14];
  uint64_t v137 = v10;
  uint64_t v55 = v10 + v54;
  uint64_t v56 = v11 + v54;
  type metadata accessor for DetailHeroChartLollipopModel(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v103 = *(void *)(v56 + 8);
      *(void *)uint64_t v55 = *(void *)v56;
      *(void *)(v55 + 8) = v103;
      uint64_t v104 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v105 = v104[5];
      uint64_t v134 = v56 + v105;
      uint64_t v135 = v55 + v105;
      uint64_t v106 = type metadata accessor for AttributedString();
      uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16);
      swift_bridgeObjectRetain();
      v107(v135, v134, v106);
      uint64_t v108 = v104[6];
      uint64_t v109 = (void *)(v55 + v108);
      uint64_t v110 = (void *)(v56 + v108);
      uint64_t v111 = v110[1];
      *uint64_t v109 = *v110;
      v109[1] = v111;
      uint64_t v112 = v104[7];
      uint64_t v113 = (void *)(v55 + v112);
      uint64_t v114 = (void *)(v56 + v112);
      uint64_t v115 = v114[1];
      *uint64_t v113 = *v114;
      v113[1] = v115;
      uint64_t v116 = v104[8];
      uint64_t v117 = (void *)(v55 + v116);
      uint64_t v118 = (void *)(v56 + v116);
      uint64_t v119 = v118[1];
      *uint64_t v117 = *v118;
      v117[1] = v119;
      uint64_t v120 = v104[9];
      uint64_t v121 = (void *)(v55 + v120);
      int v122 = (void *)(v56 + v120);
      uint64_t v123 = v122[1];
      *uint64_t v121 = *v122;
      v121[1] = v123;
      uint64_t v124 = v104[10];
      uint64_t v125 = (void *)(v55 + v124);
      uint64_t v126 = (void *)(v56 + v124);
      uint64_t v127 = v126[1];
      *uint64_t v125 = *v126;
      v125[1] = v127;
      *(unsigned char *)(v55 + v104[11]) = *(unsigned char *)(v56 + v104[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v128 = *(void *)(v56 + 8);
        *(void *)uint64_t v55 = *(void *)v56;
        *(void *)(v55 + 8) = v128;
        uint64_t v129 = *(void *)(v56 + 24);
        *(void *)(v55 + 16) = *(void *)(v56 + 16);
        *(void *)(v55 + 24) = v129;
        uint64_t v130 = *(void *)(v56 + 40);
        *(void *)(v55 + 32) = *(void *)(v56 + 32);
        *(void *)(v55 + 40) = v130;
        goto LABEL_13;
      }
      uint64_t v71 = *(void *)(v56 + 8);
      *(void *)uint64_t v55 = *(void *)v56;
      *(void *)(v55 + 8) = v71;
      uint64_t v72 = *(void *)(v56 + 24);
      *(void *)(v55 + 16) = *(void *)(v56 + 16);
      *(void *)(v55 + 24) = v72;
      uint64_t v73 = *(void *)(v56 + 40);
      *(void *)(v55 + 32) = *(void *)(v56 + 32);
      *(void *)(v55 + 40) = v73;
      uint64_t v74 = *(void *)(v56 + 56);
      *(void *)(v55 + 48) = *(void *)(v56 + 48);
      *(void *)(v55 + 56) = v74;
      *(unsigned char *)(v55 + 64) = *(unsigned char *)(v56 + 64);
      *(unsigned char *)(v55 + 65) = *(unsigned char *)(v56 + 65);
    }
    goto LABEL_11;
  }
  *(void *)uint64_t v55 = *(void *)v56;
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  uint64_t v58 = *(int *)(active + 20);
  uint64_t v59 = v55 + v58;
  uint64_t v60 = v56 + v58;
  v25(v55 + v58, v56 + v58, v24);
  uint64_t v61 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)(v59 + v61[5]) = *(void *)(v60 + v61[5]);
  *(void *)(v59 + v61[6]) = *(void *)(v60 + v61[6]);
  *(void *)(v59 + v61[7]) = *(void *)(v60 + v61[7]);
  uint64_t v62 = *(int *)(active + 24);
  uint64_t v63 = v55 + v62;
  uint64_t v64 = v56 + v62;
  type metadata accessor for LollipopDetailViewModel(0);
  int v65 = swift_getEnumCaseMultiPayload();
  if (v65 == 2)
  {
    uint64_t v75 = *(void *)(v64 + 8);
    *(void *)uint64_t v63 = *(void *)v64;
    *(void *)(v63 + 8) = v75;
    uint64_t v76 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v77 = v76[5];
    uint64_t v132 = v64 + v77;
    uint64_t v133 = v63 + v77;
    uint64_t v78 = type metadata accessor for AttributedString();
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16);
    swift_bridgeObjectRetain();
    v79(v133, v132, v78);
    uint64_t v80 = v76[6];
    uint64_t v81 = (void *)(v63 + v80);
    uint64_t v82 = (void *)(v64 + v80);
    uint64_t v83 = v82[1];
    *uint64_t v81 = *v82;
    v81[1] = v83;
    uint64_t v84 = v76[7];
    uint64_t v85 = (void *)(v63 + v84);
    uint64_t v86 = (void *)(v64 + v84);
    uint64_t v87 = v86[1];
    *uint64_t v85 = *v86;
    v85[1] = v87;
    uint64_t v88 = v76[8];
    uint64_t v89 = (void *)(v63 + v88);
    uint64_t v90 = (void *)(v64 + v88);
    uint64_t v91 = v90[1];
    *uint64_t v89 = *v90;
    v89[1] = v91;
    uint64_t v92 = v76[9];
    uint64_t v93 = (void *)(v63 + v92);
    uint64_t v94 = (void *)(v64 + v92);
    uint64_t v95 = v94[1];
    *uint64_t v93 = *v94;
    v93[1] = v95;
    uint64_t v96 = v76[10];
    uint64_t v97 = (void *)(v63 + v96);
    int v98 = (void *)(v64 + v96);
    uint64_t v99 = v98[1];
    *uint64_t v97 = *v98;
    v97[1] = v99;
    *(unsigned char *)(v63 + v76[11]) = *(unsigned char *)(v64 + v76[11]);
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v65 == 1)
  {
    uint64_t v66 = *(void *)(v64 + 8);
    *(void *)uint64_t v63 = *(void *)v64;
    *(void *)(v63 + 8) = v66;
    uint64_t v67 = *(void *)(v64 + 24);
    *(void *)(v63 + 16) = *(void *)(v64 + 16);
    *(void *)(v63 + 24) = v67;
    uint64_t v68 = *(void *)(v64 + 40);
    *(void *)(v63 + 32) = *(void *)(v64 + 32);
    *(void *)(v63 + 40) = v68;
    uint64_t v69 = *(void *)(v64 + 56);
    *(void *)(v63 + 48) = *(void *)(v64 + 48);
    *(void *)(v63 + 56) = v69;
    *(unsigned char *)(v63 + 64) = *(unsigned char *)(v64 + 64);
    *(unsigned char *)(v63 + 65) = *(unsigned char *)(v64 + 65);
LABEL_11:
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  uint64_t v100 = *(void *)(v64 + 8);
  *(void *)uint64_t v63 = *(void *)v64;
  *(void *)(v63 + 8) = v100;
  uint64_t v101 = *(void *)(v64 + 24);
  *(void *)(v63 + 16) = *(void *)(v64 + 16);
  *(void *)(v63 + 24) = v101;
  uint64_t v102 = *(void *)(v64 + 40);
  *(void *)(v63 + 32) = *(void *)(v64 + 32);
  *(void *)(v63 + 40) = v102;
LABEL_13:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v140(v137 + v20[15], v136 + v20[15], v24);
  v140(v137 + v20[16], v136 + v20[16], v24);
  return v138;
}

uint64_t sub_1007677FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v6);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v110 = a1;
  sub_10018F6D8(v8, v9);
  uint64_t v107 = a2;
  sub_1000C1E18((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(v11 + 40) = *(void *)(v12 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  *(void *)(v11 + 56) = *(void *)(v12 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 64) = *(void *)(v12 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 72) = *(void *)(v12 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 80) = *(void *)(v12 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 88) = *(void *)(v12 + 88);
  *(void *)(v11 + 96) = *(void *)(v12 + 96);
  uint64_t v13 = *(void **)(v12 + 104);
  uint64_t v14 = *(void **)(v12 + 112);
  uint64_t v15 = *(void *)(v12 + 120);
  unsigned __int8 v16 = *(unsigned char *)(v12 + 128);
  sub_10027D4F8(v13, v14, v15, v16);
  uint64_t v17 = *(void **)(v11 + 104);
  uint64_t v18 = *(void **)(v11 + 112);
  uint64_t v19 = *(void *)(v11 + 120);
  *(void *)(v11 + 104) = v13;
  *(void *)(v11 + 112) = v14;
  *(void *)(v11 + 120) = v15;
  unsigned __int8 v20 = *(unsigned char *)(v11 + 128);
  *(unsigned char *)(v11 + 128) = v16;
  sub_10027D954(v17, v18, v19, v20);
  *(void *)(v11 + 136) = *(void *)(v12 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 144) = *(void *)(v12 + 144);
  *(void *)(v11 + 152) = *(void *)(v12 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 160) = *(unsigned char *)(v12 + 160);
  uint64_t v21 = (int *)type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  uint64_t v22 = v21[12];
  uint64_t v23 = v11 + v22;
  uint64_t v24 = v12 + v22;
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v106 = *(void *)(v25 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 24);
  v26(v23, v24, v25);
  uint64_t v27 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(v23 + v27[5]) = *(void *)(v24 + v27[5]);
  uint64_t v28 = v27[6];
  uint64_t v29 = (void *)(v23 + v28);
  uint64_t v30 = (void *)(v24 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v27[7];
  uint64_t v32 = (void *)(v23 + v31);
  uint64_t v33 = (void *)(v24 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v27[8];
  uint64_t v35 = (void *)(v23 + v34);
  uint64_t v36 = (void *)(v24 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v21[13];
  uint64_t v38 = v11 + v37;
  uint64_t v39 = v12 + v37;
  uint64_t v109 = v26;
  v26(v11 + v37, v12 + v37, v25);
  *(void *)(v38 + v27[5]) = *(void *)(v39 + v27[5]);
  uint64_t v40 = v27[6];
  uint64_t v41 = (void *)(v38 + v40);
  uint64_t v42 = (void *)(v39 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = v27[7];
  uint64_t v44 = (void *)(v38 + v43);
  uint64_t v45 = (void *)(v39 + v43);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = v27[8];
  uint64_t v47 = (void *)(v38 + v46);
  uint64_t v48 = (void *)(v39 + v46);
  uint64_t v49 = a1;
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != v107)
  {
    uint64_t v50 = v21[14];
    uint64_t v51 = v11 + v50;
    uint64_t v52 = v12 + v50;
    sub_10077361C(v11 + v50, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v108 = v21;
      *(void *)uint64_t v51 = *(void *)v52;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v54 = *(int *)(active + 20);
      uint64_t v55 = v51 + v54;
      uint64_t v56 = v52 + v54;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16))(v51 + v54, v52 + v54, v25);
      uint64_t v57 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)(v55 + v57[5]) = *(void *)(v56 + v57[5]);
      *(void *)(v55 + v57[6]) = *(void *)(v56 + v57[6]);
      *(void *)(v55 + v57[7]) = *(void *)(v56 + v57[7]);
      uint64_t v58 = *(int *)(active + 24);
      uint64_t v59 = v51 + v58;
      uint64_t v60 = v52 + v58;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)uint64_t v59 = *(void *)v60;
        *(void *)(v59 + 8) = *(void *)(v60 + 8);
        uint64_t v63 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v64 = v63[5];
        uint64_t v65 = v59 + v64;
        uint64_t v102 = v60 + v64;
        uint64_t v66 = type metadata accessor for AttributedString();
        uint64_t v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16);
        swift_bridgeObjectRetain();
        v101(v65, v102, v66);
        uint64_t v67 = v63[6];
        uint64_t v68 = (void *)(v59 + v67);
        uint64_t v69 = (void *)(v60 + v67);
        void *v68 = *v69;
        v68[1] = v69[1];
        uint64_t v70 = v63[7];
        uint64_t v71 = (void *)(v59 + v70);
        uint64_t v72 = (void *)(v60 + v70);
        *uint64_t v71 = *v72;
        v71[1] = v72[1];
        uint64_t v73 = v63[8];
        uint64_t v74 = (void *)(v59 + v73);
        uint64_t v75 = (void *)(v60 + v73);
        *uint64_t v74 = *v75;
        v74[1] = v75[1];
        uint64_t v76 = v63[9];
        uint64_t v77 = (void *)(v59 + v76);
        uint64_t v78 = (void *)(v60 + v76);
        *uint64_t v77 = *v78;
        v77[1] = v78[1];
        uint64_t v79 = v63[10];
        uint64_t v80 = (void *)(v59 + v79);
        uint64_t v81 = (void *)(v60 + v79);
        *uint64_t v80 = *v81;
        v80[1] = v81[1];
        *(unsigned char *)(v59 + v63[11]) = *(unsigned char *)(v60 + v63[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(void *)uint64_t v59 = *(void *)v60;
          *(void *)(v59 + 8) = *(void *)(v60 + 8);
          *(void *)(v59 + 16) = *(void *)(v60 + 16);
          *(void *)(v59 + 24) = *(void *)(v60 + 24);
          *(void *)(v59 + 32) = *(void *)(v60 + 32);
          *(void *)(v59 + 40) = *(void *)(v60 + 40);
          goto LABEL_12;
        }
        *(void *)uint64_t v59 = *(void *)v60;
        *(void *)(v59 + 8) = *(void *)(v60 + 8);
        *(void *)(v59 + 16) = *(void *)(v60 + 16);
        *(void *)(v59 + 24) = *(void *)(v60 + 24);
        *(void *)(v59 + 32) = *(void *)(v60 + 32);
        *(void *)(v59 + 40) = *(void *)(v60 + 40);
        *(void *)(v59 + 48) = *(void *)(v60 + 48);
        *(void *)(v59 + 56) = *(void *)(v60 + 56);
        *(unsigned char *)(v59 + 64) = *(unsigned char *)(v60 + 64);
        *(unsigned char *)(v59 + 65) = *(unsigned char *)(v60 + 65);
      }
      swift_bridgeObjectRetain();
LABEL_12:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      uint64_t v49 = v110;
      uint64_t v21 = v108;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    }
    type metadata accessor for LollipopDetailViewModel(0);
    int v62 = swift_getEnumCaseMultiPayload();
    if (v62 == 2)
    {
      *(void *)uint64_t v51 = *(void *)v52;
      *(void *)(v51 + 8) = *(void *)(v52 + 8);
      uint64_t v82 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v83 = v82[5];
      uint64_t v104 = v52 + v83;
      uint64_t v105 = v51 + v83;
      uint64_t v84 = type metadata accessor for AttributedString();
      uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16);
      swift_bridgeObjectRetain();
      v103(v105, v104, v84);
      uint64_t v85 = v82[6];
      uint64_t v86 = (void *)(v51 + v85);
      uint64_t v87 = (void *)(v52 + v85);
      *uint64_t v86 = *v87;
      v86[1] = v87[1];
      uint64_t v88 = v82[7];
      uint64_t v89 = (void *)(v51 + v88);
      uint64_t v90 = (void *)(v52 + v88);
      *uint64_t v89 = *v90;
      v89[1] = v90[1];
      uint64_t v91 = v82[8];
      uint64_t v92 = (void *)(v51 + v91);
      uint64_t v93 = (void *)(v52 + v91);
      *uint64_t v92 = *v93;
      v92[1] = v93[1];
      uint64_t v94 = v82[9];
      uint64_t v95 = (void *)(v51 + v94);
      uint64_t v96 = (void *)(v52 + v94);
      *uint64_t v95 = *v96;
      v95[1] = v96[1];
      uint64_t v97 = v82[10];
      int v98 = (void *)(v51 + v97);
      uint64_t v99 = (void *)(v52 + v97);
      *int v98 = *v99;
      v98[1] = v99[1];
      *(unsigned char *)(v51 + v82[11]) = *(unsigned char *)(v52 + v82[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v62 != 1)
      {
        *(void *)uint64_t v51 = *(void *)v52;
        *(void *)(v51 + 8) = *(void *)(v52 + 8);
        *(void *)(v51 + 16) = *(void *)(v52 + 16);
        *(void *)(v51 + 24) = *(void *)(v52 + 24);
        *(void *)(v51 + 32) = *(void *)(v52 + 32);
        *(void *)(v51 + 40) = *(void *)(v52 + 40);
        goto LABEL_16;
      }
      *(void *)uint64_t v51 = *(void *)v52;
      *(void *)(v51 + 8) = *(void *)(v52 + 8);
      *(void *)(v51 + 16) = *(void *)(v52 + 16);
      *(void *)(v51 + 24) = *(void *)(v52 + 24);
      *(void *)(v51 + 32) = *(void *)(v52 + 32);
      *(void *)(v51 + 40) = *(void *)(v52 + 40);
      *(void *)(v51 + 48) = *(void *)(v52 + 48);
      *(void *)(v51 + 56) = *(void *)(v52 + 56);
      *(unsigned char *)(v51 + 64) = *(unsigned char *)(v52 + 64);
      *(unsigned char *)(v51 + 65) = *(unsigned char *)(v52 + 65);
    }
    swift_bridgeObjectRetain();
LABEL_16:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v110;
    goto LABEL_17;
  }
LABEL_18:
  v109(v11 + v21[15], v12 + v21[15], v25);
  v109(v11 + v21[16], v12 + v21[16], v25);
  return v49;
}

uint64_t sub_100768100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  long long v8 = *(_OWORD *)(a2 + v5 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a2 + v5 + 32);
  *(_OWORD *)(v6 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + v5 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)(a2 + v5);
  *(_OWORD *)(v6 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + v5 + 80);
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a2 + v5 + 64);
  *(_OWORD *)(v6 + 80) = v10;
  *(void *)(v6 + 96) = *(void *)(a2 + v5 + 96);
  long long v11 = *(_OWORD *)(a2 + v5 + 104);
  *(_OWORD *)(v6 + 113) = *(_OWORD *)(a2 + v5 + 113);
  *(_OWORD *)(v6 + 104) = v11;
  long long v12 = *(_OWORD *)(a2 + v5 + 136);
  *(_OWORD *)(v6 + 145) = *(_OWORD *)(a2 + v5 + 145);
  *(_OWORD *)(v6 + 136) = v12;
  uint64_t v13 = (int *)type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  uint64_t v14 = v13[12];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  uint64_t v19 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(v15 + v19[5]) = *(void *)(v16 + v19[5]);
  *(_OWORD *)(v15 + v19[6]) = *(_OWORD *)(v16 + v19[6]);
  *(_OWORD *)(v15 + v19[7]) = *(_OWORD *)(v16 + v19[7]);
  *(_OWORD *)(v15 + v19[8]) = *(_OWORD *)(v16 + v19[8]);
  uint64_t v20 = v13[13];
  uint64_t v21 = v6 + v20;
  uint64_t v22 = v7 + v20;
  v18(v6 + v20, v7 + v20, v17);
  *(void *)(v21 + v19[5]) = *(void *)(v22 + v19[5]);
  *(_OWORD *)(v21 + v19[6]) = *(_OWORD *)(v22 + v19[6]);
  *(_OWORD *)(v21 + v19[7]) = *(_OWORD *)(v22 + v19[7]);
  *(_OWORD *)(v21 + v19[8]) = *(_OWORD *)(v22 + v19[8]);
  uint64_t v23 = v13[14];
  uint64_t v24 = (void *)(v6 + v23);
  uint64_t v25 = (void *)(v7 + v23);
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v50 = v3;
    uint64_t v52 = v13;
    *uint64_t v24 = *v25;
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    uint64_t v27 = *(int *)(active + 20);
    uint64_t v28 = (char *)v24 + v27;
    uint64_t v29 = (char *)v25 + v27;
    v18((uint64_t)v24 + v27, (uint64_t)v25 + v27, v17);
    uint64_t v30 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(void *)&v28[v30[5]] = *(void *)&v29[v30[5]];
    *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
    *(void *)&v28[v30[7]] = *(void *)&v29[v30[7]];
    uint64_t v31 = *(int *)(active + 24);
    uint64_t v32 = (_OWORD *)((char *)v24 + v31);
    uint64_t v33 = (_OWORD *)((char *)v25 + v31);
    uint64_t v34 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *uint64_t v32 = *v33;
      uint64_t v35 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v36 = v35[5];
      uint64_t v49 = (char *)v32 + v36;
      uint64_t v37 = (char *)v33 + v36;
      uint64_t v38 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v49, v37, v38);
      *(_OWORD *)((char *)v32 + v35[6]) = *(_OWORD *)((char *)v33 + v35[6]);
      *(_OWORD *)((char *)v32 + v35[7]) = *(_OWORD *)((char *)v33 + v35[7]);
      *(_OWORD *)((char *)v32 + v35[8]) = *(_OWORD *)((char *)v33 + v35[8]);
      *(_OWORD *)((char *)v32 + v35[9]) = *(_OWORD *)((char *)v33 + v35[9]);
      *(_OWORD *)((char *)v32 + v35[10]) = *(_OWORD *)((char *)v33 + v35[10]);
      *((unsigned char *)v32 + v35[11]) = *((unsigned char *)v33 + v35[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    uint64_t v13 = v52;
    uint64_t v3 = v50;
  }
  else
  {
    uint64_t v51 = v17;
    uint64_t v39 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      uint64_t v53 = v13;
      uint64_t v40 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v41 = v40[5];
      uint64_t v42 = v3;
      uint64_t v43 = (char *)v24 + v41;
      uint64_t v44 = (char *)v25 + v41;
      uint64_t v45 = type metadata accessor for AttributedString();
      uint64_t v46 = v43;
      uint64_t v3 = v42;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v46, v44, v45);
      *(_OWORD *)((char *)v24 + v40[6]) = *(_OWORD *)((char *)v25 + v40[6]);
      *(_OWORD *)((char *)v24 + v40[7]) = *(_OWORD *)((char *)v25 + v40[7]);
      *(_OWORD *)((char *)v24 + v40[8]) = *(_OWORD *)((char *)v25 + v40[8]);
      *(_OWORD *)((char *)v24 + v40[9]) = *(_OWORD *)((char *)v25 + v40[9]);
      *(_OWORD *)((char *)v24 + v40[10]) = *(_OWORD *)((char *)v25 + v40[10]);
      uint64_t v47 = v40[11];
      uint64_t v13 = v53;
      *((unsigned char *)v24 + v47) = *((unsigned char *)v25 + v47);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v39 - 8) + 64));
    }
    uint64_t v17 = v51;
  }
  swift_storeEnumTagMultiPayload();
  v18(v6 + v13[15], v7 + v13[15], v17);
  v18(v6 + v13[16], v7 + v13[16], v17);
  return v3;
}

uint64_t sub_1007685C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v10 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v10;
  *(void *)(a1 + 48) = a2[6];
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t)a2 + v11;
  uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 8);
  *(void *)uint64_t v12 = *(uint64_t *)((char *)a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v13 + 40);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v13 + 56);
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  *(void *)(v12 + 56) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  swift_bridgeObjectRelease();
  *(void *)(v12 + 80) = *(void *)(v13 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
  uint64_t v18 = *(void *)(v13 + 120);
  char v19 = *(unsigned char *)(v13 + 128);
  uint64_t v20 = *(void **)(v12 + 104);
  uint64_t v21 = *(void **)(v12 + 112);
  uint64_t v22 = *(void *)(v12 + 120);
  *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
  *(void *)(v12 + 120) = v18;
  unsigned __int8 v23 = *(unsigned char *)(v12 + 128);
  *(unsigned char *)(v12 + 128) = v19;
  sub_10027D954(v20, v21, v22, v23);
  *(void *)(v12 + 136) = *(void *)(v13 + 136);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v13 + 152);
  *(void *)(v12 + 144) = *(void *)(v13 + 144);
  *(void *)(v12 + 152) = v24;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 160) = *(unsigned char *)(v13 + 160);
  uint64_t v25 = (int *)type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  uint64_t v26 = v25[12];
  uint64_t v27 = v12 + v26;
  uint64_t v28 = v13 + v26;
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v93 = *(void *)(v29 - 8);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 40);
  v30(v27, v28, v29);
  uint64_t v31 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(v27 + v31[5]) = *(void *)(v28 + v31[5]);
  uint64_t v32 = v31[6];
  uint64_t v33 = (void *)(v27 + v32);
  uint64_t v34 = (uint64_t *)(v28 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = v31[7];
  uint64_t v38 = (void *)(v27 + v37);
  uint64_t v39 = (uint64_t *)(v28 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = v31[8];
  uint64_t v43 = (void *)(v27 + v42);
  uint64_t v44 = (uint64_t *)(v28 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  void *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v95 = v29;
  uint64_t v96 = v25;
  uint64_t v47 = v25[13];
  uint64_t v48 = v12 + v47;
  uint64_t v49 = v13 + v47;
  v30(v12 + v47, v13 + v47, v29);
  *(void *)(v48 + v31[5]) = *(void *)(v49 + v31[5]);
  uint64_t v50 = v31[6];
  uint64_t v51 = (void *)(v48 + v50);
  uint64_t v52 = (uint64_t *)(v49 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  void *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = v31[7];
  uint64_t v56 = (void *)(v48 + v55);
  uint64_t v57 = (uint64_t *)(v49 + v55);
  uint64_t v59 = *v57;
  uint64_t v58 = v57[1];
  *uint64_t v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  uint64_t v60 = v31[8];
  uint64_t v61 = a1;
  int v62 = (void *)(v48 + v60);
  uint64_t v63 = (uint64_t *)(v49 + v60);
  uint64_t v65 = *v63;
  uint64_t v64 = v63[1];
  *int v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v66 = v25[14];
    uint64_t v67 = (char *)(v12 + v66);
    uint64_t v68 = (char *)(v13 + v66);
    sub_10077361C(v12 + v66, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v67 = *(void *)v68;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v70 = *(int *)(active + 20);
      uint64_t v71 = &v67[v70];
      uint64_t v72 = &v68[v70];
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(&v67[v70], &v68[v70], v95);
      uint64_t v73 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)&v71[v73[5]] = *(void *)&v72[v73[5]];
      *(void *)&v71[v73[6]] = *(void *)&v72[v73[6]];
      *(void *)&v71[v73[7]] = *(void *)&v72[v73[7]];
      uint64_t v74 = *(int *)(active + 24);
      uint64_t v75 = &v67[v74];
      uint64_t v76 = &v68[v74];
      uint64_t v77 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
        uint64_t v78 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v79 = v78[5];
        uint64_t v94 = &v75[v79];
        uint64_t v80 = v61;
        uint64_t v81 = &v76[v79];
        uint64_t v82 = type metadata accessor for AttributedString();
        uint64_t v83 = v81;
        uint64_t v61 = v80;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v94, v83, v82);
        *(_OWORD *)&v75[v78[6]] = *(_OWORD *)&v76[v78[6]];
        *(_OWORD *)&v75[v78[7]] = *(_OWORD *)&v76[v78[7]];
        *(_OWORD *)&v75[v78[8]] = *(_OWORD *)&v76[v78[8]];
        *(_OWORD *)&v75[v78[9]] = *(_OWORD *)&v76[v78[9]];
        *(_OWORD *)&v75[v78[10]] = *(_OWORD *)&v76[v78[10]];
        v75[v78[11]] = v76[v78[11]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
    }
    else
    {
      uint64_t v84 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
        uint64_t v85 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v86 = v85[5];
        uint64_t v87 = &v67[v86];
        uint64_t v88 = v61;
        uint64_t v89 = &v68[v86];
        uint64_t v90 = type metadata accessor for AttributedString();
        uint64_t v91 = v89;
        uint64_t v61 = v88;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v87, v91, v90);
        *(_OWORD *)&v67[v85[6]] = *(_OWORD *)&v68[v85[6]];
        *(_OWORD *)&v67[v85[7]] = *(_OWORD *)&v68[v85[7]];
        *(_OWORD *)&v67[v85[8]] = *(_OWORD *)&v68[v85[8]];
        *(_OWORD *)&v67[v85[9]] = *(_OWORD *)&v68[v85[9]];
        *(_OWORD *)&v67[v85[10]] = *(_OWORD *)&v68[v85[10]];
        v67[v85[11]] = v68[v85[11]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v67, v68, *(void *)(*(void *)(v84 - 8) + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  v30(v12 + v96[15], v13 + v96[15], v95);
  v30(v12 + v96[16], v13 + v96[16], v95);
  return v61;
}

uint64_t sub_100768BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100768BD4);
}

uint64_t sub_100768BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100768C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100768C70);
}

uint64_t sub_100768C70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PrecipitationAveragesHeroChartView()
{
  uint64_t result = qword_100E92A08;
  if (!qword_100E92A08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100768D38()
{
  uint64_t result = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100768DE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100768E00@<X0>(uint64_t a1@<X8>)
{
  sub_10017DF08(&qword_100E92CB0);
  sub_10016389C();
  __chkstk_darwin(v4);
  sub_10012B938();
  uint64_t v5 = sub_10017DF08(&qword_100E77F00);
  type metadata accessor for RectangleMark();
  uint64_t v20 = v5;
  sub_10017C808();
  uint64_t v7 = v6;
  sub_100162808();
  v8();
  uint64_t v9 = sub_10017DF08(&qword_100E77EF0);
  type metadata accessor for PointMark();
  type metadata accessor for BasicChartSymbolShape();
  sub_100773CCC((uint64_t)&qword_100E77F08);
  uint64_t v10 = v2 + *(int *)(v1 + 56);
  sub_10017C808();
  uint64_t v12 = v11;
  sub_100162808();
  v13();
  uint64_t v14 = sub_10017DF08(&qword_100E77ED0);
  uint64_t v15 = v2 + *(int *)(v1 + 72);
  sub_10017C808();
  uint64_t v17 = v16;
  sub_100162808();
  v18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, v2, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a1 + *(int *)(v1 + 56), v10, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a1 + *(int *)(v1 + 72), v15, v14);
}

uint64_t sub_100768FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10017DF08(&qword_100E92C98);
  sub_10016389C();
  __chkstk_darwin(v5);
  sub_10012B938();
  uint64_t v6 = sub_10017DF08(&qword_100E7D4B0);
  sub_100500654();
  sub_10017C808();
  uint64_t v8 = v7;
  sub_100162808();
  v9();
  uint64_t v10 = sub_10017DF08(&qword_100E7D4A8);
  sub_100500740();
  uint64_t v17 = v3 + v2[14];
  sub_10017C808();
  uint64_t v12 = v11;
  sub_100162808();
  v13();
  sub_1005008BC();
  uint64_t v14 = v3 + v2[18];
  sub_10006DF38(*(void *)(a1 + 16), v14, &qword_100E7D308);
  sub_1007736C4((uint64_t)&qword_100E7D318);
  uint64_t v15 = v3 + v2[22];
  sub_10006DF38(*(void *)(a1 + 24), v15, &qword_100E7D320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a2, v3, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a2 + v2[14], v17, v10);
  sub_10024D364(v14, a2 + v2[18], &qword_100E7D308);
  return sub_10024D364(v15, a2 + v2[22], &qword_100E7D320);
}

uint64_t sub_1007691B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E92C70);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PeakUpperMark(0);
  sub_100773CCC((uint64_t)&unk_100E7D338);
  sub_1007735C8(*a1, (uint64_t)v7, (void (*)(void))type metadata accessor for PeakUpperMark);
  uint64_t v8 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1007735C8(a1[1], v8, (void (*)(void))type metadata accessor for PeakUpperMark);
  sub_100773670((uint64_t)v7, a2, (void (*)(void))type metadata accessor for PeakUpperMark);
  return sub_100773670(v8, a2 + *(int *)(v5 + 56), (void (*)(void))type metadata accessor for PeakUpperMark);
}

uint64_t sub_1007692E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E92C78);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E92C58);
  type metadata accessor for RectangleMark();
  uint64_t v8 = *a1;
  uint64_t v19 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v6, v8, v7);
  uint64_t v10 = sub_10017DF08(&qword_100E92AF0);
  sub_1007723FC((uint64_t)&unk_100E92AE8);
  uint64_t v11 = &v6[v4[14]];
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v13(v11, a1[1], v10);
  uint64_t v14 = &v6[v4[18]];
  v13(v14, a1[2], v10);
  sub_1007736C4((uint64_t)&unk_100E92B40);
  uint64_t v15 = (uint64_t)&v6[v4[22]];
  sub_10006DF38(a1[3], v15, &qword_100E92B48);
  uint64_t v16 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20, v6, v19);
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v17(v16 + v4[14], v11, v10);
  v17(v16 + v4[18], v14, v10);
  return sub_10024D364(v15, v16 + v4[22], &qword_100E92B48);
}

uint64_t sub_10076955C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E92C88);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PeakKnockoutMark();
  sub_100773CCC((uint64_t)&unk_100E7D310);
  sub_1007735C8(*a1, (uint64_t)v7, (void (*)(void))type metadata accessor for PeakKnockoutMark);
  uint64_t v8 = sub_10017DF08(&qword_100E77ED0);
  type metadata accessor for PointMark();
  type metadata accessor for BasicChartSymbolShape();
  sub_100773CCC((uint64_t)&qword_100E77F08);
  uint64_t v9 = &v7[*(int *)(v5 + 56)];
  uint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, v10, v8);
  sub_100773670((uint64_t)v7, a2, (void (*)(void))type metadata accessor for PeakKnockoutMark);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2 + *(int *)(v5 + 56), v9, v8);
}

uint64_t sub_100769724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E92C90);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E92C80);
  type metadata accessor for LineMark();
  type metadata accessor for RectangleMark();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, void, uint64_t))(v9 + 16))(v7, *a1, v8);
  sub_1007723FC((uint64_t)&unk_100E92B20);
  uint64_t v10 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_10006DF38(a1[1], v10, &qword_100E92B28);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  return sub_10024D364(v10, a2 + *(int *)(v5 + 56), &qword_100E92B28);
}

uint64_t sub_1007698A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10017DF08(&qword_100E92D48);
  sub_10016389C();
  __chkstk_darwin(v6);
  sub_10012B938();
  uint64_t v7 = sub_10017DF08(&qword_100E92D50);
  sub_10024D5E4((uint64_t)&unk_100E92CF8);
  sub_10017C808();
  uint64_t v9 = v8;
  sub_100162808();
  v10();
  sub_100773940();
  uint64_t v11 = v3 + *(int *)(v2 + 56);
  sub_10006DF38(*(void *)(a1 + 8), v11, &qword_100E92D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(a2, v3, v7);
  return sub_10024D364(v11, a2 + *(int *)(v2 + 56), &qword_100E92D08);
}

uint64_t sub_1007699CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100E92CB8);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  sub_10012B938();
  sub_1007737BC();
  sub_10006DF38(*a1, v2, &qword_100E92CC0);
  sub_100773A14();
  uint64_t v7 = v2 + *(int *)(v6 + 56);
  sub_10006DF38(a1[1], v7, &qword_100E92D18);
  sub_10024D364(v2, a2, &qword_100E92CC0);
  return sub_10024D364(v7, a2 + *(int *)(v6 + 56), &qword_100E92D18);
}

uint64_t sub_100769AA4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10017DF08(&qword_100E92D58);
  sub_10016389C();
  __chkstk_darwin(v6);
  sub_10012B938();
  sub_100773BF8();
  sub_10006DF38(*a1, v3, &qword_100E92D60);
  uint64_t v7 = type metadata accessor for ChartLineMark();
  sub_100773CCC((uint64_t)&unk_100E92D78);
  uint64_t v8 = v3 + *(int *)(v2 + 56);
  sub_10017C808();
  uint64_t v10 = v9;
  sub_100162808();
  v11();
  sub_10024D364(v3, a2, &qword_100E92D60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a2 + *(int *)(v2 + 56), v8, v7);
}

uint64_t sub_100769BD4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100E92D80);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  sub_10012B938();
  sub_1007723FC((uint64_t)&unk_100E92D90);
  sub_10006DF38(*a1, v2, &qword_100E92D88);
  uint64_t v7 = v2 + *(int *)(v6 + 56);
  sub_10006DF38(a1[1], v7, &qword_100E92D88);
  sub_10024D364(v2, a2, &qword_100E92D88);
  return sub_10024D364(v7, a2 + *(int *)(v6 + 56), &qword_100E92D88);
}

double sub_100769CD4@<D0>(uint64_t a1@<X8>)
{
  sub_10017DF08(&qword_100E6BEF0);
  uint64_t v2 = swift_allocObject();
  __asm { FMOV            V1.2D, #8.0 }
  *(_OWORD *)(v2 + 16) = xmmword_100C25ED0;
  *(_OWORD *)(v2 + 32) = _Q1;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double result = *(double *)&v9;
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v11;
  return result;
}

uint64_t sub_100769D58@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10017DF08(&qword_100E92A48);
  return sub_100769DA0(v1, (char *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_100769DA0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v45 = type metadata accessor for ConditionDetailLegendView(0);
  __chkstk_darwin(v45);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10017DF08(&qword_100E7D200);
  __chkstk_darwin(v47);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v48 = (uint64_t)&v44 - v8;
  uint64_t v44 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v44);
  long long v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E92A50);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E92A58);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v50 = (char *)&v44 - v19;
  uint64_t v46 = a1;
  sub_10076A318(a1, (uint64_t)v13);
  uint64_t v20 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v21 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v10, v20, v21);
  sub_100773CCC((uint64_t)&qword_100E651F0);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  sub_100772230();
  sub_10024D5E4((uint64_t)&unk_100EAADB0);
  View.dynamicTypeSize<A>(_:)();
  sub_100178110((uint64_t)v10, &qword_100E651D0);
  sub_100178110((uint64_t)v13, &qword_100E92A50);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v50, v17, v14);
  uint64_t v22 = v46 + *(int *)(type metadata accessor for PrecipitationAveragesHeroChartView() + 24);
  uint64_t v23 = *(void *)(v22 + 136);
  uint64_t v24 = *(void *)(v22 + 144);
  uint64_t v25 = *(void *)(v22 + 152);
  char v26 = *(unsigned char *)(v22 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Text.Measurements.init()();
  *(void *)uint64_t v4 = v23;
  *((void *)v4 + 1) = v24;
  *((void *)v4 + 2) = v25;
  v4[24] = v26;
  if (qword_100E62450 != -1) {
LABEL_5:
  }
    swift_once();
  swift_beginAccess();
  sub_10058C8E4();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  char v35 = static Edge.Set.all.getter();
  sub_1007735C8((uint64_t)v4, (uint64_t)v6, (void (*)(void))type metadata accessor for ConditionDetailLegendView);
  uint64_t v36 = &v6[*(int *)(v47 + 36)];
  *uint64_t v36 = v35;
  *((void *)v36 + 1) = v28;
  *((void *)v36 + 2) = v30;
  *((void *)v36 + 3) = v32;
  *((void *)v36 + 4) = v34;
  v36[40] = 0;
  sub_10077361C((uint64_t)v4, (void (*)(void))type metadata accessor for ConditionDetailLegendView);
  uint64_t v37 = v48;
  sub_10024D364((uint64_t)v6, v48, &qword_100E7D200);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v39 = v50;
  v38(v17, v50, v14);
  sub_10006DF38(v37, (uint64_t)v6, &qword_100E7D200);
  uint64_t v40 = v49;
  v38(v49, v17, v14);
  uint64_t v41 = sub_10017DF08(&qword_100E92A78);
  sub_10006DF38((uint64_t)v6, (uint64_t)&v40[*(int *)(v41 + 48)], &qword_100E7D200);
  sub_100178110(v37, &qword_100E7D200);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v15 + 8);
  v42(v39, v14);
  sub_100178110((uint64_t)v6, &qword_100E7D200);
  return ((uint64_t (*)(char *, uint64_t))v42)(v17, v14);
}

uint64_t sub_10076A318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v190 = a1;
  uint64_t v185 = a2;
  uint64_t v184 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v182 = (char *)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for DynamicTypeSize();
  uint64_t v180 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v179 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v175);
  uint64_t v178 = (double *)((char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for PrecipitationAveragesHeroChartView();
  uint64_t v7 = v6 - 8;
  uint64_t v148 = *(void *)(v6 - 8);
  uint64_t v147 = *(void *)(v148 + 64);
  __chkstk_darwin(v6);
  uint64_t v187 = (uint64_t)&v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for AutomaticScaleDomain();
  uint64_t v156 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v146 = (char *)&v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E7D238);
  __chkstk_darwin(v10 - 8);
  uint64_t v140 = (uint64_t)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for PlotDimensionScaleRange();
  uint64_t v189 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v138 = (char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_10017DF08(&qword_100E92A80);
  unint64_t v141 = *(uint64_t (**)())(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_10017DF08(&qword_100E92A88);
  uint64_t v149 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v186 = (char *)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10017DF08(&qword_100E92A90);
  uint64_t v151 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v143 = (char *)&v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_10017DF08(&qword_100E92A98);
  uint64_t v154 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v145 = (char *)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_10017DF08(&qword_100E92AA0);
  uint64_t v158 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v188 = (char *)&v135 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_10017DF08(&qword_100E92AA8);
  uint64_t v161 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  uint64_t v152 = (char *)&v135 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_10017DF08(&qword_100E92AB0);
  __chkstk_darwin(v160);
  uint64_t v163 = (char *)&v135 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_10017DF08(&qword_100E92AB8);
  __chkstk_darwin(v159);
  uint64_t v164 = (char *)&v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_10017DF08(&qword_100E92AC0);
  __chkstk_darwin(v168);
  uint64_t v166 = (uint64_t)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_10017DF08(&qword_100E92AC8);
  uint64_t v170 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v165 = (char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_10017DF08(&qword_100E92AD0);
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v174 = (char *)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  int v167 = (char *)&v135 - v25;
  __chkstk_darwin(v26);
  uint64_t v172 = (char *)&v135 - v27;
  uint64_t v28 = type metadata accessor for DetailHeroChartHeaderView();
  uint64_t v29 = v28 - 8;
  __chkstk_darwin(v28);
  uint64_t v171 = (uint64_t)&v135 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (void (**)(char *, uint64_t))((char *)&v135 - v32);
  uint64_t v34 = (uint64_t *)(a1 + *(int *)(v7 + 32));
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  uint64_t v37 = v34[2];
  uint64_t v38 = v34[3];
  uint64_t v39 = v34[5];
  uint64_t v169 = (void *)v34[4];
  uint64_t v40 = v34[6];
  uint64_t v41 = v34[7];
  uint64_t v42 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  sub_1007735C8((uint64_t)v34 + *(int *)(v42 + 56), (uint64_t)v33 + *(int *)(v29 + 28), (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  *uint64_t v33 = v36;
  v33[1] = v35;
  long long v33[2] = v37;
  v33[3] = v38;
  v33[4] = v169;
  v33[5] = v39;
  v33[6] = v40;
  v33[7] = v41;
  uint64_t v43 = v190;
  uint64_t v169 = v33;
  *(void *)&long long v196 = 0x3FF0000000000000;
  sub_100146A70();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v193 = v43;
  sub_10017DF08(&qword_100E92AD8);
  sub_1007722D0();
  uint64_t v44 = v137;
  Chart.init(content:)();
  uint64_t v45 = v138;
  static PositionScaleRange<>.plotDimension.getter();
  uint64_t v46 = type metadata accessor for ScaleType();
  uint64_t v47 = v140;
  _s7Weather24LocationCompositionStateOwst_0(v140, 1, 1, v46);
  unint64_t v48 = sub_10024D5E4((uint64_t)&unk_100E92B60);
  uint64_t v49 = v139;
  uint64_t v50 = v142;
  View.chartXScale<A>(range:type:)();
  sub_100178110(v47, &qword_100E7D238);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v189 + 8);
  v189 += 8;
  uint64_t v135 = v51;
  v51(v45, v50);
  (*((void (**)(char *, uint64_t))v141 + 1))(v44, v49);
  unint64_t v141 = type metadata accessor for PrecipitationAveragesHeroChartView;
  uint64_t v52 = v187;
  sub_1007735C8(v43, v187, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  uint64_t v53 = *(unsigned __int8 *)(v148 + 80);
  v147 += (v53 + 16) & ~v53;
  uint64_t v54 = (v53 + 16) & ~v53;
  uint64_t v148 = v54;
  uint64_t v137 = (char *)(v53 | 7);
  uint64_t v55 = swift_allocObject();
  uint64_t v136 = type metadata accessor for PrecipitationAveragesHeroChartView;
  sub_100773670(v52, v55 + v54, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  uint64_t v56 = v146;
  static ScaleDomain<>.automatic<A>(includesZero:reversed:dataType:modifyInferredDomain:)();
  swift_release();
  static PositionScaleRange<>.plotDimension(startPadding:endPadding:)();
  _s7Weather24LocationCompositionStateOwst_0(v47, 1, 1, v46);
  *(void *)&long long v196 = v49;
  *((void *)&v196 + 1) = v50;
  *(void *)&long long v197 = v48;
  *((void *)&v197 + 1) = &protocol witness table for PlotDimensionScaleRange;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v58 = v143;
  uint64_t v59 = v144;
  uint64_t v60 = v155;
  uint64_t v61 = v186;
  View.chartYScale<A, B>(domain:range:type:)();
  sub_100178110(v47, &qword_100E7D238);
  v135(v45, v50);
  (*(void (**)(char *, uint64_t))(v156 + 8))(v56, v60);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v61, v59);
  uint64_t v62 = v190;
  uint64_t v192 = v190;
  uint64_t v63 = sub_10017DF08(&qword_100E92B68);
  *(void *)&long long v196 = v59;
  *((void *)&v196 + 1) = v60;
  *(void *)&long long v197 = v50;
  *((void *)&v197 + 1) = OpaqueTypeConformance2;
  *(void *)&long long v198 = &protocol witness table for AutomaticScaleDomain;
  *((void *)&v198 + 1) = &protocol witness table for PlotDimensionScaleRange;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  unint64_t v65 = sub_10024D5E4((uint64_t)&unk_100E92B70);
  uint64_t v66 = v145;
  uint64_t v67 = v150;
  View.chartXAxis<A>(content:)();
  uint64_t v68 = v67;
  (*(void (**)(char *, uint64_t))(v151 + 8))(v58, v67);
  uint64_t v191 = v62;
  uint64_t v69 = sub_10017DF08(&qword_100E92B78);
  *(void *)&long long v196 = v68;
  *((void *)&v196 + 1) = v63;
  *(void *)&long long v197 = v64;
  *((void *)&v197 + 1) = v65;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  unint64_t v71 = sub_10077295C();
  uint64_t v72 = v153;
  View.chartYAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v154 + 8))(v66, v72);
  uint64_t v73 = v187;
  sub_1007735C8(v62, v187, (void (*)(void))v141);
  uint64_t v74 = swift_allocObject();
  sub_100773670(v73, v74 + v148, (void (*)(void))v136);
  static Alignment.center.getter();
  sub_10017DF08(&qword_100E7D370);
  *(void *)&long long v196 = v72;
  *((void *)&v196 + 1) = v69;
  *(void *)&long long v197 = v70;
  *((void *)&v197 + 1) = v71;
  uint64_t v75 = v152;
  swift_getOpaqueTypeConformance2();
  sub_10024D5E4((uint64_t)&unk_100E7D378);
  uint64_t v76 = v157;
  uint64_t v77 = v188;
  View.chartOverlay<A>(alignment:content:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v77, v76);
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058C858();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v78 = v161;
  uint64_t v79 = (uint64_t)v163;
  uint64_t v80 = v162;
  (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v163, v75, v162);
  uint64_t v81 = (_OWORD *)(v79 + *(int *)(v160 + 36));
  long long v82 = v197;
  *uint64_t v81 = v196;
  v81[1] = v82;
  v81[2] = v198;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v80);
  uint64_t v83 = static Alignment.center.getter();
  uint64_t v85 = v84;
  uint64_t v86 = (uint64_t)v164;
  uint64_t v87 = (uint64_t)&v164[*(int *)(v159 + 36)];
  swift_beginAccess();
  double v88 = sub_10058C830();
  uint64_t v89 = v178;
  uint64_t v90 = (char *)v178 + *(int *)(v175 + 20);
  uint64_t v91 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v92 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v90, v91, v92);
  *uint64_t v89 = v88;
  v89[1] = v88;
  uint64_t v93 = sub_10058C87C();
  swift_endAccess();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  sub_1007735C8((uint64_t)v89, v87, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v94 = v87 + *(int *)(sub_10017DF08(&qword_100E7D380) + 36);
  long long v95 = v200;
  *(_OWORD *)uint64_t v94 = v199;
  *(_OWORD *)(v94 + 16) = v95;
  *(void *)(v94 + 32) = v201;
  uint64_t v96 = sub_10017DF08(&qword_100E7D388);
  *(void *)(v87 + *(int *)(v96 + 52)) = v93;
  *(_WORD *)(v87 + *(int *)(v96 + 56)) = 256;
  uint64_t v97 = static Alignment.center.getter();
  uint64_t v99 = v98;
  uint64_t v100 = (uint64_t *)(v87 + *(int *)(sub_10017DF08(&qword_100E7D390) + 36));
  *uint64_t v100 = v97;
  v100[1] = v99;
  sub_10077361C((uint64_t)v89, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v101 = (uint64_t *)(v87 + *(int *)(sub_10017DF08(&qword_100E7D398) + 36));
  *uint64_t v101 = v83;
  v101[1] = v85;
  sub_10024D364(v79, v86, &qword_100E92AB0);
  LOBYTE(v83) = static Edge.Set.horizontal.getter();
  swift_beginAccess();
  sub_100592380();
  EdgeInsets.init(_all:)();
  uint64_t v103 = v102;
  uint64_t v105 = v104;
  uint64_t v107 = v106;
  uint64_t v109 = v108;
  uint64_t v110 = v166;
  sub_10006DF38(v86, v166, &qword_100E92AB8);
  uint64_t v111 = v168;
  uint64_t v112 = v110 + *(int *)(v168 + 36);
  *(unsigned char *)uint64_t v112 = v83;
  *(void *)(v112 + 8) = v103;
  *(void *)(v112 + 16) = v105;
  *(void *)(v112 + 24) = v107;
  *(void *)(v112 + 32) = v109;
  *(unsigned char *)(v112 + 40) = 0;
  sub_100178110(v86, &qword_100E92AB8);
  uint64_t v113 = v180;
  uint64_t v114 = v179;
  uint64_t v115 = v181;
  (*(void (**)(char *, void, uint64_t))(v180 + 104))(v179, enum case for DynamicTypeSize.large(_:), v181);
  unint64_t v116 = sub_10077322C((uint64_t)&unk_100E92B98);
  uint64_t v117 = v165;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v114, v115);
  sub_100178110(v110, &qword_100E92AC0);
  uint64_t v118 = *(void *)v190;
  LOBYTE(v85) = *(unsigned char *)(v190 + 8);
  sub_100195B7C(*(void *)v190, v85);
  sub_100149AE8();
  LOBYTE(v115) = v119;
  sub_10018F6D8(v118, v85);
  uint64_t v120 = v182;
  if (v115) {
    static AccessibilityChildBehavior.contain.getter();
  }
  else {
    static AccessibilityChildBehavior.ignore.getter();
  }
  uint64_t v194 = v111;
  unint64_t v195 = v116;
  swift_getOpaqueTypeConformance2();
  uint64_t v121 = v167;
  uint64_t v122 = v173;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v183 + 8))(v120, v184);
  (*(void (**)(char *, uint64_t))(v170 + 8))(v117, v122);
  uint64_t v123 = v176;
  uint64_t v124 = v172;
  uint64_t v125 = v121;
  uint64_t v126 = v177;
  (*(void (**)(char *, char *, uint64_t))(v176 + 32))(v172, v125, v177);
  uint64_t v127 = (uint64_t)v169;
  uint64_t v128 = v171;
  sub_1007735C8((uint64_t)v169, v171, (void (*)(void))type metadata accessor for DetailHeroChartHeaderView);
  uint64_t v129 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
  uint64_t v130 = v174;
  v129(v174, v124, v126);
  uint64_t v131 = v185;
  sub_1007735C8(v128, v185, (void (*)(void))type metadata accessor for DetailHeroChartHeaderView);
  uint64_t v132 = sub_10017DF08(&qword_100E92BB0);
  v129((char *)(v131 + *(int *)(v132 + 48)), v130, v126);
  uint64_t v133 = *(void (**)(char *, uint64_t))(v123 + 8);
  v133(v124, v126);
  sub_10077361C(v127, (void (*)(void))type metadata accessor for DetailHeroChartHeaderView);
  v133(v130, v126);
  return sub_10077361C(v128, (void (*)(void))type metadata accessor for DetailHeroChartHeaderView);
}

uint64_t sub_10076BA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v146 = a2;
  uint64_t v123 = type metadata accessor for LollipopMark(0);
  __chkstk_darwin(v123);
  uint64_t v125 = (uint64_t)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  __chkstk_darwin(active);
  uint64_t v124 = (uint64_t)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E92B58);
  __chkstk_darwin(v5 - 8);
  uint64_t v131 = (uint64_t)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PeakUpperMarkModel(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v126 = (uint64_t)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for PeakUpperMark(0);
  __chkstk_darwin(v127);
  uint64_t v129 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v128 = (uint64_t)&v121 - v11;
  __chkstk_darwin(v12);
  uint64_t v130 = (uint64_t)&v121 - v13;
  __chkstk_darwin(v14);
  uint64_t v140 = (uint64_t)&v121 - v15;
  uint64_t v139 = (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel(0);
  __chkstk_darwin(v139);
  uint64_t v148 = (uint64_t)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E92B48);
  __chkstk_darwin(v17 - 8);
  uint64_t v145 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v154 = (uint64_t)&v121 - v20;
  uint64_t v21 = type metadata accessor for PrecipitationAveragesHeroChartView();
  uint64_t v22 = v21 - 8;
  uint64_t v136 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v137 = v23;
  uint64_t v138 = (uint64_t (*)(uint64_t))((char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = sub_10017DF08(&qword_100E92AF0);
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v142 = (char *)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v141 = (char *)&v121 - v26;
  __chkstk_darwin(v27);
  uint64_t v153 = (char *)&v121 - v28;
  __chkstk_darwin(v29);
  uint64_t v152 = (char *)&v121 - v30;
  uint64_t v31 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v31 - 8);
  uint64_t v149 = type metadata accessor for RectangleMark();
  uint64_t v135 = *(uint64_t (**)())(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v33 = (char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_10017DF08(&qword_100E92C58);
  uint64_t v151 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v35 = (char *)&v121 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v121 - v37;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v39 = *(int *)(v22 + 32);
  uint64_t v40 = a1;
  uint64_t v41 = a1 + v39;
  uint64_t v147 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  uint64_t v155 = v41;
  uint64_t v42 = type metadata accessor for Date();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058C858();
  RectangleMark.init<A>(x:yStart:yEnd:width:)();
  LODWORD(v157) = static HierarchicalShapeStyle.tertiary.getter();
  uint64_t v43 = v149;
  ChartContent.foregroundStyle<A>(_:)();
  (*((void (**)(char *, uint64_t))v135 + 1))(v33, v43);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v151 + 32);
  uint64_t v149 = (uint64_t)v38;
  uint64_t v150 = v35;
  v44(v38, v35, v156);
  uint64_t v162 = *(void *)(v155 + 72);
  uint64_t v135 = type metadata accessor for PrecipitationAveragesHeroChartView;
  uint64_t v45 = v138;
  sub_1007735C8(v40, (uint64_t)v138, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  uint64_t v46 = *(unsigned __int8 *)(v136 + 80);
  uint64_t v47 = (v46 + 16) & ~v46;
  uint64_t v136 = v47 + v137;
  uint64_t v137 = v46 | 7;
  uint64_t v48 = swift_allocObject();
  uint64_t v134 = type metadata accessor for PrecipitationAveragesHeroChartView;
  sub_100773670((uint64_t)v45, v48 + v47, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  swift_bridgeObjectRetain();
  uint64_t v133 = sub_10017DF08(&qword_100E7D4B8);
  sub_10017DF08(&qword_100E92B00);
  uint64_t v132 = v42;
  sub_10024D5E4((uint64_t)&unk_100E7D4C8);
  sub_100772464();
  sub_100773CCC((uint64_t)&unk_100E92C60);
  ForEach<>.init(_:content:)();
  uint64_t v49 = v155;
  uint64_t v161 = *(void *)(v155 + 64);
  sub_1007735C8(v40, (uint64_t)v45, (void (*)(void))v135);
  uint64_t v50 = swift_allocObject();
  sub_100773670((uint64_t)v45, v50 + v47, (void (*)(void))v134);
  swift_bridgeObjectRetain();
  ForEach<>.init(_:content:)();
  uint64_t v52 = v147;
  uint64_t v51 = v148;
  sub_1007735C8(v49 + *(int *)(v147 + 56), v148, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = v124;
    sub_100773670(v51, v124, (void (*)(void))type metadata accessor for DetailHeroChartActiveLollipopModel);
    uint64_t v54 = v125;
    sub_1007735C8(v53 + *(int *)(active + 20), v125, (void (*)(void))type metadata accessor for LollipopMarkModel);
    uint64_t v55 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v57 = v56;
    char v59 = v58;
    uint64_t v61 = v60;
    uint64_t v62 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v63 = v123;
    uint64_t v64 = v54 + *(int *)(v123 + 24);
    *(void *)uint64_t v64 = v62;
    *(void *)(v64 + 8) = v65;
    *(unsigned char *)(v64 + 16) = v66 & 1;
    *(void *)(v64 + 24) = v67;
    uint64_t v68 = v54 + *(int *)(v63 + 20);
    *(void *)uint64_t v68 = v55;
    *(void *)(v68 + 8) = v57;
    *(unsigned char *)(v68 + 16) = v59 & 1;
    *(void *)(v68 + 24) = v61;
    sub_1007735C8(v54, v154, (void (*)(void))type metadata accessor for LollipopMark);
    sub_10017DF08(&qword_100E92C68);
    swift_storeEnumTagMultiPayload();
    sub_10077361C(v54, (void (*)(void))type metadata accessor for LollipopMark);
    uint64_t v69 = type metadata accessor for DetailHeroChartActiveLollipopModel;
    uint64_t v70 = v53;
  }
  else
  {
    uint64_t v71 = v126;
    sub_1007735C8(v49 + *(int *)(v52 + 52), v126, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
    id v72 = [self secondaryLabelColor];
    uint64_t v73 = Color.init(_:)();
    uint64_t v137 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v75 = v74;
    LODWORD(v136) = v76;
    uint64_t v138 = v77;
    uint64_t v78 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v80 = v79;
    char v82 = v81;
    uint64_t v84 = v83;
    uint64_t v85 = v130;
    sub_1007735C8(v71, v130, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
    uint64_t v86 = (int *)v127;
    *(void *)(v85 + *(int *)(v127 + 20)) = v73;
    uint64_t v139 = (void (*)(void))type metadata accessor for PeakUpperMarkModel;
    sub_10077361C(v71, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
    *(void *)(v85 + v86[6]) = 0x4024000000000000;
    uint64_t v87 = v85 + v86[7];
    *(void *)uint64_t v87 = v137;
    *(void *)(v87 + 8) = v75;
    *(unsigned char *)(v87 + 16) = v136 & 1;
    *(void *)(v87 + 24) = v138;
    uint64_t v88 = v85 + v86[8];
    *(void *)uint64_t v88 = v78;
    *(void *)(v88 + 8) = v80;
    *(unsigned char *)(v88 + 16) = v82 & 1;
    *(void *)(v88 + 24) = v84;
    uint64_t v138 = type metadata accessor for PeakUpperMark;
    sub_100773670(v85, v140, (void (*)(void))type metadata accessor for PeakUpperMark);
    sub_1007735C8(v155 + *(int *)(v147 + 48), v71, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
    uint64_t v89 = static Color.white.getter();
    uint64_t v147 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v137 = v90;
    LODWORD(v136) = v91;
    uint64_t v155 = v92;
    uint64_t v93 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v95 = v94;
    LOBYTE(v73) = v96;
    uint64_t v98 = v97;
    uint64_t v99 = v128;
    sub_1007735C8(v71, v128, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
    *(void *)(v99 + v86[5]) = v89;
    sub_10077361C(v71, v139);
    *(void *)(v99 + v86[6]) = 0x4018000000000000;
    uint64_t v100 = v99 + v86[7];
    uint64_t v101 = v137;
    *(void *)uint64_t v100 = v147;
    *(void *)(v100 + 8) = v101;
    *(unsigned char *)(v100 + 16) = v136 & 1;
    *(void *)(v100 + 24) = v155;
    uint64_t v102 = v99 + v86[8];
    *(void *)uint64_t v102 = v93;
    *(void *)(v102 + 8) = v95;
    *(unsigned char *)(v102 + 16) = v73 & 1;
    *(void *)(v102 + 24) = v98;
    sub_100773670(v99, v85, (void (*)(void))v138);
    uint64_t v103 = v140;
    sub_1007735C8(v140, v99, (void (*)(void))type metadata accessor for PeakUpperMark);
    uint64_t v157 = v99;
    uint64_t v104 = v129;
    sub_1007735C8(v85, v129, (void (*)(void))type metadata accessor for PeakUpperMark);
    uint64_t v158 = v104;
    uint64_t v105 = v131;
    sub_1007691B4(&v157, v131);
    sub_10077361C(v104, (void (*)(void))type metadata accessor for PeakUpperMark);
    sub_10077361C(v99, (void (*)(void))type metadata accessor for PeakUpperMark);
    sub_10006DF38(v105, v154, &qword_100E92B58);
    sub_10017DF08(&qword_100E92C68);
    swift_storeEnumTagMultiPayload();
    sub_100178110(v105, &qword_100E92B58);
    sub_10077361C(v85, (void (*)(void))type metadata accessor for PeakUpperMark);
    sub_10077361C(v103, (void (*)(void))type metadata accessor for PeakUpperMark);
    uint64_t v69 = type metadata accessor for DetailHeroChartLollipopModel;
    uint64_t v70 = v148;
  }
  sub_10077361C(v70, (void (*)(void))v69);
  uint64_t v106 = (uint64_t)v150;
  uint64_t v107 = v151;
  (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v149, v156);
  uint64_t v157 = v106;
  uint64_t v108 = v143;
  uint64_t v109 = *(void (**)(char *, char *, uint64_t))(v143 + 16);
  uint64_t v110 = v141;
  uint64_t v111 = v152;
  uint64_t v112 = v144;
  v109(v141, v152, v144);
  uint64_t v158 = (uint64_t)v110;
  uint64_t v113 = v142;
  uint64_t v114 = v153;
  v109(v142, v153, v112);
  uint64_t v159 = v113;
  uint64_t v115 = v154;
  uint64_t v116 = v145;
  sub_10006DF38(v154, v145, &qword_100E92B48);
  uint64_t v160 = v116;
  sub_1007692E8(&v157, v146);
  sub_100178110(v115, &qword_100E92B48);
  uint64_t v117 = *(void (**)(char *, uint64_t))(v108 + 8);
  v117(v114, v112);
  v117(v111, v112);
  uint64_t v118 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
  uint64_t v119 = v156;
  v118(v149, v156);
  sub_100178110(v116, &qword_100E92B48);
  v117(v113, v112);
  v117(v110, v112);
  return ((uint64_t (*)(char *, uint64_t))v118)(v150, v119);
}

uint64_t sub_10076CA40(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)result + 16);
  if (v2)
  {
    uint64_t v4 = (void *)result;
    double v5 = *(double *)(*(void *)result + 8 * v2 + 24);
    double result = type metadata accessor for PrecipitationAveragesHeroChartView();
    double v6 = *(double *)(a2 + *(int *)(result + 24) + 88);
    if (v5 < v6)
    {
      swift_bridgeObjectRelease();
      sub_10017DF08(&qword_100E6B6D0);
      double result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_100C25ED0;
      *(void *)(result + 32) = 0;
      *(double *)(result + 40) = v6;
      void *v4 = result;
    }
  }
  return result;
}

uint64_t sub_10076CADC()
{
  uint64_t v1 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for PrecipitationAveragesHeroChartView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  sub_1007735C8(v0, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_100773670((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  swift_bridgeObjectRetain();
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_10017DF08(&qword_100E92BC0);
  type metadata accessor for Date();
  sub_1007732C8();
  return AxisMarks.init<A>(preset:position:values:content:)();
}

uint64_t sub_10076CD04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v3 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for PrecipitationAveragesHeroChartView();
  uint64_t v5 = v4 - 8;
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v22 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_10017DF08(&qword_100E92B90);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2 + *(int *)(v5 + 32);
  double v14 = *(double *)(v13 + 88);
  double v15 = *(double *)(v13 + 96);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.trailing.getter();
  if (v15 >= v14)
  {
    static AxisMarkValues.automatic.getter();
    sub_1007735C8(v2, (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
    unint64_t v19 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v20 = swift_allocObject();
    sub_100773670((uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
    sub_10017DF08(&qword_100E7D3E8);
    sub_1005015AC();
    AxisMarks.init(preset:position:values:content:)();
  }
  else
  {
    sub_10017DF08(&qword_100E6B6D0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_100C25ED0;
    *(void *)(v16 + 32) = 0;
    *(double *)(v16 + 40) = v14;
    sub_1007735C8(v2, (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
    unint64_t v17 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v18 = swift_allocObject();
    sub_100773670((uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
    sub_10017DF08(&qword_100E7D3E8);
    sub_1005015AC();
    AxisMarks.init<A>(preset:position:values:content:)();
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v23, v12, v9);
  sub_10017DF08(&qword_100E92BB8);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10076D14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6 = type metadata accessor for ChartProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PrecipitationAveragesHeroChartView();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  sub_1007735C8(a2, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  sub_100773670((uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v13, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v9, v6);
  *a3 = sub_100773110;
  a3[1] = (uint64_t (*)())v15;
  return result;
}

uint64_t sub_10076D348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = static Alignment.topLeading.getter();
  a4[1] = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E7D3C8);
  return sub_10076D3A8(a2, a3, a1, (uint64_t)a4 + *(int *)(v9 + 44));
}

uint64_t sub_10076D3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v37 = a2;
  uint64_t v41 = type metadata accessor for Date();
  uint64_t v35 = *(void *)(v41 - 8);
  uint64_t v6 = v35;
  __chkstk_darwin(v41);
  uint64_t v42 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v33[-v9];
  uint64_t v36 = &v33[-v9];
  uint64_t v11 = type metadata accessor for GeometryProxy();
  uint64_t v38 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v39 = v14;
  uint64_t v15 = type metadata accessor for ChartProxy();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v33[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10020D948(a1 + 16, (uint64_t)v43);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v18, v37, v15);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, v40, v11);
  uint64_t v19 = a1 + *(int *)(type metadata accessor for PrecipitationAveragesHeroChartView() + 24);
  uint64_t v20 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v22 = v10;
  uint64_t v23 = v41;
  v21(v22, v19 + *(int *)(v20 + 60), v41);
  v21(v42, v19 + *(int *)(v20 + 64), v23);
  uint64_t v40 = sub_100566144();
  uint64_t v37 = v24;
  int v34 = v25;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = (int *)type metadata accessor for LollipopChartOverlayView();
  *(void *)(a4 + v27[10]) = KeyPath;
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  sub_1001262E4(v43, a4);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v16 + 32))(a4 + v27[5], v18, v15);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v12 + 32))(a4 + v27[6], v39, v38);
  uint64_t v28 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v35 + 32);
  uint64_t v29 = v41;
  v28(a4 + v27[7], v36, v41);
  uint64_t result = ((uint64_t (*)(uint64_t, unsigned char *, uint64_t))v28)(a4 + v27[8], v42, v29);
  uint64_t v31 = a4 + v27[9];
  uint64_t v32 = v37;
  *(void *)uint64_t v31 = v40;
  *(void *)(v31 + 8) = v32;
  *(unsigned char *)(v31 + 16) = v34 & 1;
  return result;
}

uint64_t sub_10076D748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v120 = a2;
  uint64_t v123 = a3;
  uint64_t v98 = sub_10017DF08(&qword_100E77EE8);
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v94 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10017DF08(&qword_100E77ED0);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v99 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v96 = (char *)&v91 - v7;
  uint64_t v92 = type metadata accessor for PeakKnockoutMark();
  __chkstk_darwin(v92);
  uint64_t v95 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v91 - v10;
  uint64_t v11 = sub_10017DF08(&qword_100E92B28);
  __chkstk_darwin(v11 - 8);
  uint64_t v121 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v122 = (uint64_t)&v91 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E7D4E0);
  __chkstk_darwin(v15 - 8);
  uint64_t v111 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E77ED8);
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v127 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v21 - 8);
  uint64_t v102 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for LineMark();
  uint64_t v107 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v24 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10017DF08(&qword_100E7D2F8);
  uint64_t v114 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v104 = (char *)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10017DF08(&qword_100E92B18);
  uint64_t v117 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v106 = (char *)&v91 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10017DF08(&qword_100E92B08);
  uint64_t v119 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v109 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100E92C80);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v125 = v28;
  uint64_t v126 = v29;
  __chkstk_darwin(v28);
  uint64_t v113 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v124 = (char *)&v91 - v32;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v108 = a1;
  DetailChartDataElement.date.getter();
  uint64_t v110 = v20;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v127 + 8);
  v127 += 8;
  uint64_t v115 = v33;
  uint64_t v103 = v18;
  v33(v20, v18);
  LocalizedStringKey.init(stringLiteral:)();
  DetailChartDataElement.value.getter();
  v133[0] = v34;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  v133[0] = 0x65676172657641;
  v133[1] = 0xE700000000000000;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LineMark.init<A, B, C>(x:y:series:)();
  sub_100769CD4((uint64_t)v133);
  uint64_t v35 = v104;
  uint64_t v36 = v105;
  ChartContent.lineStyle(_:)();
  sub_10020CE78((uint64_t)v133);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v24, v36);
  uint64_t v37 = self;
  id v38 = [v37 systemGray2Color];
  uint64_t v132 = Color.init(uiColor:)();
  uint64_t v128 = v36;
  uint64_t v129 = &protocol witness table for LineMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = v106;
  uint64_t v41 = v112;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v35, v41);
  uint64_t v128 = v41;
  uint64_t v129 = &type metadata for Color;
  uint64_t v130 = (void *)OpaqueTypeConformance2;
  uint64_t v131 = &protocol witness table for Color;
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  uint64_t v43 = v109;
  uint64_t v44 = v116;
  ChartContent.interpolationMethod(_:)();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v40, v44);
  sub_10017DF08(&qword_100E92B10);
  uint64_t v128 = v44;
  uint64_t v129 = (void *)v42;
  swift_getOpaqueTypeConformance2();
  uint64_t v128 = type metadata accessor for RectangleMark();
  uint64_t v129 = &protocol witness table for RectangleMark;
  swift_getOpaqueTypeConformance2();
  uint64_t v45 = v113;
  uint64_t v46 = v118;
  ChartContent.mask<A>(content:)();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v43, v46);
  uint64_t v47 = (uint64_t)v45;
  (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v124, v45, v125);
  uint64_t v48 = v110;
  DetailChartDataElement.date.getter();
  type metadata accessor for PrecipitationAveragesHeroChartView();
  type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  LOBYTE(v42) = static Date.== infix(_:_:)();
  v115(v48, v103);
  if (v42)
  {
    uint64_t v49 = (uint64_t)v93;
    DetailChartDataElement.date.getter();
    DetailChartDataElement.value.getter();
    uint64_t v51 = v50;
    uint64_t v52 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v53 = v37;
    uint64_t v55 = v54;
    char v57 = v56;
    uint64_t v59 = v58;
    uint64_t v60 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v61 = (int *)v92;
    *(void *)(v49 + *(int *)(v92 + 20)) = v51;
    *(unsigned char *)(v49 + v61[6]) = 0;
    uint64_t v62 = v49 + v61[8];
    *(void *)uint64_t v62 = v60;
    *(void *)(v62 + 8) = v63;
    *(unsigned char *)(v62 + 16) = v64 & 1;
    *(void *)(v62 + 24) = v65;
    uint64_t v66 = v49 + v61[7];
    *(void *)uint64_t v66 = v52;
    *(void *)(v66 + 8) = v55;
    *(unsigned char *)(v66 + 16) = v57 & 1;
    *(void *)(v66 + 24) = v59;
    uint64_t v67 = v94;
    sub_10076E6AC(v94);
    id v68 = [v53 systemGray2Color];
    uint64_t v132 = Color.init(uiColor:)();
    uint64_t v69 = sub_10018C6DC(&qword_100E77EE0);
    uint64_t v70 = type metadata accessor for PointMark();
    uint64_t v71 = type metadata accessor for BasicChartSymbolShape();
    unint64_t v72 = sub_100773CCC((uint64_t)&qword_100E77F08);
    uint64_t v128 = v70;
    uint64_t v129 = (void *)v71;
    uint64_t v130 = &protocol witness table for PointMark;
    uint64_t v131 = (void *)v72;
    uint64_t v73 = swift_getOpaqueTypeConformance2();
    uint64_t v128 = v69;
    uint64_t v129 = (void *)v73;
    swift_getOpaqueTypeConformance2();
    uint64_t v74 = v99;
    uint64_t v75 = v98;
    ChartContent.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v67, v75);
    uint64_t v76 = v100;
    uint64_t v77 = v96;
    uint64_t v78 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v96, v74, v101);
    uint64_t v79 = v95;
    sub_1007735C8(v49, v95, (void (*)(void))type metadata accessor for PeakKnockoutMark);
    uint64_t v128 = v79;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v74, v77, v78);
    uint64_t v129 = v74;
    uint64_t v80 = v121;
    sub_10076955C(&v128, v121);
    char v81 = *(void (**)(char *, uint64_t))(v76 + 8);
    v81(v77, v78);
    sub_10077361C(v49, (void (*)(void))type metadata accessor for PeakKnockoutMark);
    v81(v74, v78);
    sub_10077361C(v79, (void (*)(void))type metadata accessor for PeakKnockoutMark);
    uint64_t v82 = sub_10017DF08(&qword_100E92B38);
    _s7Weather24LocationCompositionStateOwst_0(v80, 0, 1, v82);
    uint64_t v83 = v122;
    sub_10024D364(v80, v122, &qword_100E92B28);
    uint64_t v84 = v80;
  }
  else
  {
    uint64_t v85 = sub_10017DF08(&qword_100E92B38);
    uint64_t v83 = v122;
    _s7Weather24LocationCompositionStateOwst_0(v122, 1, 1, v85);
    uint64_t v84 = v121;
  }
  uint64_t v86 = v125;
  uint64_t v87 = v126;
  uint64_t v88 = v124;
  (*(void (**)(uint64_t, char *, uint64_t))(v126 + 16))(v47, v124, v125);
  uint64_t v128 = v47;
  sub_10006DF38(v83, v84, &qword_100E92B28);
  uint64_t v129 = (void *)v84;
  sub_100769724(&v128, v123);
  sub_100178110(v83, &qword_100E92B28);
  uint64_t v89 = *(void (**)(char *, uint64_t))(v87 + 8);
  v89(v88, v86);
  sub_100178110(v84, &qword_100E92B28);
  return ((uint64_t (*)(uint64_t, uint64_t))v89)(v47, v86);
}

uint64_t sub_10076E6AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v1 = type metadata accessor for BasicChartSymbolShape();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  uint64_t v33 = v2;
  __chkstk_darwin(v1);
  uint64_t v31 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E77ED8);
  __chkstk_darwin(v4 - 8);
  uint64_t v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v10 - 8);
  uint64_t v25 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for PointMark();
  uint64_t v28 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E77EE0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  DetailChartDataElement.date.getter();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LocalizedStringKey.init(stringLiteral:)();
  DetailChartDataElement.value.getter();
  uint64_t v35 = v18;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  PointMark.init<A, B>(x:y:)();
  uint64_t v19 = v31;
  static ChartSymbolShape<>.circle.getter();
  unint64_t v20 = sub_100773CCC((uint64_t)&qword_100E77F08);
  uint64_t v21 = v26;
  uint64_t v22 = v32;
  ChartContent.symbol<A>(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v21);
  uint64_t v35 = v21;
  uint64_t v36 = v22;
  uint64_t v37 = &protocol witness table for PointMark;
  unint64_t v38 = v20;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v29;
  ChartContent.symbolSize(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v23);
}

uint64_t sub_10076EB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v117 = a3;
  uint64_t v92 = sub_10017DF08(&qword_100E77EE8);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v88 = (uint64_t)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_10017DF08(&qword_100E77ED0);
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v93 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v90 = (char *)&v85 - v7;
  uint64_t v86 = type metadata accessor for PeakKnockoutMark();
  __chkstk_darwin(v86);
  uint64_t v89 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v87 = (char *)&v85 - v10;
  uint64_t v11 = sub_10017DF08(&qword_100E92B28);
  __chkstk_darwin(v11 - 8);
  uint64_t v115 = (uint64_t)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v116 = (uint64_t)&v85 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E7D4E0);
  __chkstk_darwin(v15 - 8);
  uint64_t v106 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E77ED8);
  __chkstk_darwin(v17 - 8);
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v121 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v21 - 8);
  char v96 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for LineMark();
  uint64_t v105 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10017DF08(&qword_100E7D2F8);
  uint64_t v108 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v100 = (char *)&v85 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10017DF08(&qword_100E92B18);
  uint64_t v111 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v101 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10017DF08(&qword_100E92B08);
  uint64_t v113 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v102 = (char *)&v85 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10017DF08(&qword_100E92C80);
  uint64_t v120 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v119 = (char *)&v85 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v118 = (char *)&v85 - v30;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v97 = a1;
  DetailChartDataElement.date.getter();
  uint64_t v104 = v20;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v121 + 8);
  v121 += 8;
  uint64_t v109 = v31;
  uint64_t v99 = v18;
  v31(v20, v18);
  LocalizedStringKey.init(stringLiteral:)();
  DetailChartDataElement.value.getter();
  v127[0] = v32;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  strcpy((char *)v127, "Precipitation");
  HIWORD(v127[1]) = -4864;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LineMark.init<A, B, C>(x:y:series:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v33 = v100;
  uint64_t v34 = v103;
  ChartContent.lineStyle(_:)();
  sub_10020CE78((uint64_t)v127);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v24, v34);
  uint64_t v126 = static Color.cyan.getter();
  uint64_t v122 = v34;
  uint64_t v123 = &protocol witness table for LineMark;
  uint64_t v35 = v98;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v101;
  uint64_t v38 = v107;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v33, v38);
  uint64_t v122 = v38;
  uint64_t v123 = &type metadata for Color;
  uint64_t v124 = (void *)OpaqueTypeConformance2;
  uint64_t v125 = &protocol witness table for Color;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = v102;
  uint64_t v41 = v110;
  ChartContent.interpolationMethod(_:)();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v37, v41);
  sub_10017DF08(&qword_100E92B10);
  uint64_t v122 = v41;
  uint64_t v123 = (void *)v39;
  swift_getOpaqueTypeConformance2();
  uint64_t v122 = type metadata accessor for RectangleMark();
  uint64_t v123 = &protocol witness table for RectangleMark;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v119;
  uint64_t v43 = v112;
  ChartContent.mask<A>(content:)();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v40, v43);
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v118, v42, v35);
  uint64_t v44 = v104;
  DetailChartDataElement.date.getter();
  type metadata accessor for PrecipitationAveragesHeroChartView();
  type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  LOBYTE(v39) = static Date.== infix(_:_:)();
  v109(v44, v99);
  if (v39)
  {
    uint64_t v45 = (uint64_t)v87;
    DetailChartDataElement.date.getter();
    DetailChartDataElement.value.getter();
    uint64_t v47 = v46;
    uint64_t v48 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v50 = v49;
    char v52 = v51;
    uint64_t v54 = v53;
    uint64_t v55 = LocalizedStringKey.init(stringLiteral:)();
    char v56 = (int *)v86;
    *(void *)(v45 + *(int *)(v86 + 20)) = v47;
    *(unsigned char *)(v45 + v56[6]) = 0;
    uint64_t v57 = v45 + v56[8];
    *(void *)uint64_t v57 = v55;
    *(void *)(v57 + 8) = v58;
    *(unsigned char *)(v57 + 16) = v59 & 1;
    *(void *)(v57 + 24) = v60;
    uint64_t v61 = v45 + v56[7];
    *(void *)uint64_t v61 = v48;
    *(void *)(v61 + 8) = v50;
    *(unsigned char *)(v61 + 16) = v52 & 1;
    *(void *)(v61 + 24) = v54;
    uint64_t v62 = v88;
    sub_10076E6AC(v88);
    uint64_t v126 = static Color.white.getter();
    uint64_t v63 = sub_10018C6DC(&qword_100E77EE0);
    uint64_t v64 = type metadata accessor for PointMark();
    uint64_t v65 = type metadata accessor for BasicChartSymbolShape();
    unint64_t v66 = sub_100773CCC((uint64_t)&qword_100E77F08);
    uint64_t v122 = v64;
    uint64_t v123 = (void *)v65;
    uint64_t v124 = &protocol witness table for PointMark;
    uint64_t v125 = (void *)v66;
    uint64_t v67 = swift_getOpaqueTypeConformance2();
    uint64_t v122 = v63;
    uint64_t v123 = (void *)v67;
    swift_getOpaqueTypeConformance2();
    id v68 = v93;
    uint64_t v69 = v92;
    ChartContent.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v62, v69);
    uint64_t v70 = v94;
    uint64_t v71 = v90;
    uint64_t v72 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v90, v68, v95);
    uint64_t v73 = v89;
    sub_1007735C8(v45, v89, (void (*)(void))type metadata accessor for PeakKnockoutMark);
    uint64_t v122 = v73;
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v68, v71, v72);
    uint64_t v123 = v68;
    uint64_t v74 = v115;
    sub_10076955C(&v122, v115);
    uint64_t v75 = *(void (**)(char *, uint64_t))(v70 + 8);
    v75(v71, v72);
    sub_10077361C(v45, (void (*)(void))type metadata accessor for PeakKnockoutMark);
    v75(v68, v72);
    sub_10077361C(v73, (void (*)(void))type metadata accessor for PeakKnockoutMark);
    uint64_t v76 = sub_10017DF08(&qword_100E92B38);
    _s7Weather24LocationCompositionStateOwst_0(v74, 0, 1, v76);
    uint64_t v77 = v116;
    sub_10024D364(v74, v116, &qword_100E92B28);
    uint64_t v78 = v74;
  }
  else
  {
    uint64_t v79 = sub_10017DF08(&qword_100E92B38);
    uint64_t v77 = v116;
    _s7Weather24LocationCompositionStateOwst_0(v116, 1, 1, v79);
    uint64_t v78 = v115;
  }
  uint64_t v81 = (uint64_t)v119;
  uint64_t v80 = v120;
  uint64_t v82 = v118;
  (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v119, v118, v35);
  uint64_t v122 = v81;
  sub_10006DF38(v77, v78, &qword_100E92B28);
  uint64_t v123 = (void *)v78;
  sub_100769724(&v122, v117);
  sub_100178110(v77, &qword_100E92B28);
  uint64_t v83 = *(void (**)(char *, uint64_t))(v80 + 8);
  v83(v82, v35);
  sub_100178110(v78, &qword_100E92B28);
  return ((uint64_t (*)(uint64_t, uint64_t))v83)(v81, v35);
}

uint64_t sub_10076FADC()
{
  uint64_t v0 = type metadata accessor for RectangleMark();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  RectangleMark.init(xStart:xEnd:yStart:yEnd:)();
  ChartContent.offset(x:yStart:yEnd:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v0);
}

uint64_t sub_10076FBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v197 = a3;
  uint64_t v5 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v5 - 8);
  uint64_t v181 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v7 - 8);
  uint64_t v186 = (char *)&v156 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_10017DF08(&qword_100E92C18);
  uint64_t v177 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v175 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v174 = (char *)&v156 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v12 - 8);
  uint64_t v180 = (char *)&v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for DetailChartDataElement();
  uint64_t v191 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v178 = (char *)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v185 = (char *)&v156 - v16;
  long long v199 = (void *)type metadata accessor for AxisValue();
  uint64_t v188 = *(v199 - 1);
  __chkstk_darwin(v199);
  uint64_t v187 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E92C08);
  __chkstk_darwin(v18 - 8);
  uint64_t v195 = (uint64_t)&v156 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v194 = (char *)&v156 - v21;
  uint64_t v22 = sub_10017DF08(&qword_100E7D468);
  __chkstk_darwin(v22 - 8);
  uint64_t v173 = (char *)&v156 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for AxisTick.Length();
  __chkstk_darwin(v24 - 8);
  uint64_t v163 = (char *)&v156 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for AxisTick();
  uint64_t v165 = *(void *)(v166 - 8);
  __chkstk_darwin(v166);
  uint64_t v164 = (char *)&v156 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_10017DF08(&qword_100E7D490);
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v168 = (char *)&v156 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v170 = (char *)&v156 - v29;
  uint64_t v30 = type metadata accessor for AxisGridLine();
  *(void *)&long long v162 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v156 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_10017DF08(&qword_100E7D410);
  uint64_t v167 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v182 = (char *)&v156 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v183 = (char *)&v156 - v35;
  uint64_t v36 = sub_10017DF08(&qword_100E92BE8);
  __chkstk_darwin(v36);
  uint64_t v169 = (uint64_t)&v156 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v179 = (uint64_t)&v156 - v39;
  uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v40 - 8);
  uint64_t v42 = (char *)&v156 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v156 - v44;
  uint64_t v46 = type metadata accessor for Date();
  uint64_t v47 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  int v202 = (char *)&v156 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  long long v200 = (char *)&v156 - v50;
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v156 - v52;
  uint64_t v54 = sub_10017DF08(&qword_100E92BD8);
  __chkstk_darwin(v54 - 8);
  uint64_t v193 = (uint64_t)&v156 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  long long v198 = (char *)&v156 - v57;
  AxisValue.as<A>(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46) == 1)
  {
    sub_100178110((uint64_t)v45, (uint64_t *)&unk_100E73CA0);
LABEL_5:
    uint64_t v58 = 1;
    uint64_t v59 = (uint64_t)v198;
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v53, v45, v46);
  if (AxisValue.isFirst.getter())
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v53, v46);
    goto LABEL_5;
  }
  uint64_t v161 = v53;
  uint64_t v192 = v47;
  uint64_t v201 = v46;
  char v60 = AxisValue.isLast.getter();
  uint64_t v190 = a1;
  uint64_t v176 = a2;
  uint64_t v160 = v36;
  if (v60)
  {
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_10058CC60();
    long long v159 = v205;
    long long v158 = v206;
    uint64_t v61 = v207;
    swift_endAccess();
    long long v214 = v159;
    long long v215 = v158;
    uint64_t v216 = v61;
    AxisGridLine.init(centered:stroke:)();
    swift_beginAccess();
    uint64_t v62 = sub_10058C87C();
    swift_endAccess();
    *(void *)&long long v211 = v62;
    uint64_t v63 = v182;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v162 + 8))(v32, v30);
    uint64_t v64 = v167;
    uint64_t v65 = v183;
    (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v183, v63, v184);
    static AxisTick.Length.longestLabel.getter();
    swift_beginAccess();
    sub_10058CC60();
    long long v162 = v208;
    long long v159 = v209;
    uint64_t v66 = v210;
    swift_endAccess();
    long long v211 = v162;
    long long v212 = v159;
    uint64_t v213 = v66;
    uint64_t v67 = v164;
    AxisTick.init(centered:length:stroke:)();
    swift_beginAccess();
    uint64_t v68 = sub_10058C87C();
    swift_endAccess();
    uint64_t v203 = v68;
    uint64_t v69 = v168;
    uint64_t v70 = v166;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v165 + 8))(v67, v70);
    uint64_t v71 = v171;
    uint64_t v72 = v170;
    uint64_t v73 = v172;
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v170, v69, v172);
    uint64_t v74 = v182;
    uint64_t v75 = v184;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v182, v65, v184);
    uint64_t v203 = (uint64_t)v74;
    uint64_t v76 = v74;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v69, v72, v73);
    uint64_t v204 = (uint64_t)v69;
    uint64_t v77 = (uint64_t)v173;
    sub_1009523C0();
    uint64_t v78 = *(void (**)(char *, uint64_t))(v71 + 8);
    v78(v69, v73);
    uint64_t v79 = *(void (**)(char *, uint64_t))(v64 + 8);
    v79(v76, v75);
    uint64_t v80 = v169;
    sub_10006DF38(v77, v169, &qword_100E7D468);
    sub_10017DF08(&qword_100E92C50);
    swift_storeEnumTagMultiPayload();
    sub_100178110(v77, &qword_100E7D468);
    v78(v72, v73);
    v79(v183, v75);
    uint64_t v47 = v192;
    uint64_t v46 = v201;
    (*(void (**)(char *, uint64_t))(v192 + 8))(v161, v201);
    uint64_t v81 = sub_10017DF08(&qword_100E92BF8);
    _s7Weather24LocationCompositionStateOwst_0(v80, 0, 1, v81);
    uint64_t v82 = v179;
    sub_10024D364(v80, v179, &qword_100E92BE8);
    uint64_t v59 = (uint64_t)v198;
  }
  else
  {
    uint64_t v83 = a2 + *(int *)(type metadata accessor for PrecipitationAveragesHeroChartView() + 24);
    uint64_t v84 = v83 + *(int *)(type metadata accessor for PrecipitationAveragesHeroChartViewModel() + 64);
    uint64_t v85 = v192;
    uint64_t v86 = v200;
    uint64_t v46 = v201;
    (*(void (**)(char *, uint64_t, uint64_t))(v192 + 16))(v200, v84, v201);
    sub_100773CCC((uint64_t)&qword_100E63980);
    uint64_t v87 = v161;
    char v88 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v91 = *(void (**)(char *, uint64_t))(v85 + 8);
    uint64_t v89 = v85 + 8;
    uint64_t v90 = v91;
    v91(v86, v46);
    uint64_t v59 = (uint64_t)v198;
    if (v88)
    {
      v90(v87, v46);
      uint64_t v92 = sub_10017DF08(&qword_100E92BF8);
      uint64_t v82 = v179;
      _s7Weather24LocationCompositionStateOwst_0(v179, 1, 1, v92);
    }
    else
    {
      *(void *)&long long v158 = v90;
      *(void *)&long long v159 = v89;
      if (qword_100E62450 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10058CD14();
      long long v157 = v205;
      long long v156 = v206;
      uint64_t v93 = v207;
      swift_endAccess();
      long long v214 = v157;
      long long v215 = v156;
      uint64_t v216 = v93;
      AxisGridLine.init(centered:stroke:)();
      swift_beginAccess();
      uint64_t v94 = sub_10058C87C();
      swift_endAccess();
      *(void *)&long long v211 = v94;
      uint64_t v95 = v182;
      AxisMark.foregroundStyle<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v162 + 8))(v32, v30);
      uint64_t v96 = v167;
      uint64_t v97 = v183;
      (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v183, v95, v184);
      static AxisTick.Length.longestLabel.getter();
      swift_beginAccess();
      sub_10058CD14();
      long long v162 = v208;
      long long v157 = v209;
      uint64_t v98 = v210;
      swift_endAccess();
      long long v211 = v162;
      long long v212 = v157;
      uint64_t v213 = v98;
      uint64_t v99 = v164;
      AxisTick.init(centered:length:stroke:)();
      swift_beginAccess();
      uint64_t v100 = sub_10058C87C();
      swift_endAccess();
      uint64_t v203 = v100;
      uint64_t v101 = v168;
      uint64_t v102 = v166;
      AxisMark.foregroundStyle<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v165 + 8))(v99, v102);
      uint64_t v103 = v171;
      uint64_t v104 = v170;
      uint64_t v105 = v172;
      (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v170, v101, v172);
      uint64_t v106 = v182;
      uint64_t v107 = v184;
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v182, v97, v184);
      uint64_t v203 = (uint64_t)v106;
      uint64_t v108 = v106;
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v101, v104, v105);
      uint64_t v204 = (uint64_t)v101;
      uint64_t v109 = (uint64_t)v173;
      sub_1009523C0();
      uint64_t v110 = *(void (**)(char *, uint64_t))(v103 + 8);
      v110(v101, v105);
      uint64_t v111 = *(void (**)(char *, uint64_t))(v96 + 8);
      v111(v108, v107);
      uint64_t v112 = v169;
      sub_10006DF38(v109, v169, &qword_100E7D468);
      sub_10017DF08(&qword_100E92C50);
      swift_storeEnumTagMultiPayload();
      sub_100178110(v109, &qword_100E7D468);
      v110(v104, v105);
      v111(v183, v107);
      uint64_t v46 = v201;
      ((void (*)(char *, uint64_t))v158)(v161, v201);
      uint64_t v113 = sub_10017DF08(&qword_100E92BF8);
      _s7Weather24LocationCompositionStateOwst_0(v112, 0, 1, v113);
      uint64_t v82 = v179;
      sub_10024D364(v112, v179, &qword_100E92BE8);
      uint64_t v59 = (uint64_t)v198;
    }
    uint64_t v47 = v192;
  }
  sub_10024D364(v82, v59, &qword_100E92BE8);
  uint64_t v58 = 0;
  a1 = v190;
  a2 = v176;
  uint64_t v36 = v160;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0(v59, v58, 1, v36);
  AxisValue.as<A>(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v46) == 1)
  {
    uint64_t v114 = (uint64_t *)&unk_100E73CA0;
    uint64_t v115 = (uint64_t)v42;
LABEL_33:
    sub_100178110(v115, v114);
    goto LABEL_34;
  }
  uint64_t v116 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  uint64_t v201 = v46;
  v116(v202, v42, v46);
  uint64_t v117 = *(int *)(type metadata accessor for PrecipitationAveragesHeroChartView() + 24);
  uint64_t v118 = a1;
  uint64_t v176 = a2;
  uint64_t v119 = a2 + v117;
  type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  char v120 = static Date.== infix(_:_:)();
  uint64_t v121 = v188;
  uint64_t v122 = *(void (**)(char *, uint64_t, void *))(v188 + 16);
  uint64_t v123 = v187;
  uint64_t v190 = v118;
  uint64_t v124 = v118;
  uint64_t v125 = v199;
  v122(v187, v124, v199);
  if (v120)
  {
    (*(void (**)(char *, void *))(v121 + 8))(v123, v125);
  }
  else
  {
    char v126 = AxisValue.isFirst.getter();
    (*(void (**)(char *, void *))(v121 + 8))(v123, v125);
    if ((v126 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v202, v201);
LABEL_34:
      uint64_t v139 = (uint64_t)v194;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 1, 1, v196);
      goto LABEL_35;
    }
  }
  uint64_t v192 = v47;
  uint64_t v127 = *(void *)(v119 + 64);
  uint64_t v128 = *(void *)(v127 + 16);
  if (v128)
  {
    long long v199 = *(void **)(v191 + 16);
    uint64_t v129 = v127 + ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80));
    uint64_t v130 = (void (**)(char *, uint64_t))(v192 + 8);
    uint64_t v131 = (void (**)(char *, uint64_t))(v191 + 8);
    uint64_t v132 = *(void *)(v191 + 72);
    uint64_t v188 = v127;
    swift_bridgeObjectRetain();
    uint64_t v133 = v189;
    uint64_t v134 = v178;
    uint64_t v135 = v200;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v199)(v134, v129, v133);
      DetailChartDataElement.date.getter();
      char v136 = static Date.== infix(_:_:)();
      (*v130)(v135, v201);
      if (v136) {
        break;
      }
      (*v131)(v134, v133);
      v129 += v132;
      if (!--v128)
      {
        uint64_t v137 = 1;
        uint64_t v138 = (uint64_t)v180;
        goto LABEL_30;
      }
    }
    uint64_t v138 = (uint64_t)v180;
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v180, v134, v133);
    uint64_t v137 = 0;
LABEL_30:
    uint64_t v59 = (uint64_t)v198;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v137 = 1;
    uint64_t v133 = v189;
    uint64_t v138 = (uint64_t)v180;
  }
  _s7Weather24LocationCompositionStateOwst_0(v138, v137, 1, v133);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v138, 1, v133) == 1)
  {
    (*(void (**)(char *, uint64_t))(v192 + 8))(v202, v201);
    uint64_t v114 = &qword_100E6B640;
    uint64_t v115 = v138;
    goto LABEL_33;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v185, v138, v133);
  if (AxisValue.isFirst.getter()) {
    uint64_t v143 = static AxisValueLabelCollisionResolution.disabled.getter();
  }
  else {
    uint64_t v143 = static AxisValueLabelCollisionResolution.automatic.getter();
  }
  __chkstk_darwin(v143);
  uint64_t v144 = v185;
  static AxisValueLabelOrientation.automatic.getter();
  uint64_t v154 = sub_10017DF08(&qword_100E92C20);
  unint64_t v155 = sub_10077322C((uint64_t)&unk_100E92C28);
  uint64_t v152 = sub_1007734CC;
  uint64_t v153 = &v150;
  char v151 = 1;
  uint64_t v150 = 0;
  uint64_t v145 = v175;
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  uint64_t v146 = *(void (**)(char *, char *, uint64_t))(v177 + 32);
  uint64_t v147 = v174;
  uint64_t v148 = v145;
  uint64_t v149 = v196;
  v146(v174, v148, v196);
  uint64_t v139 = (uint64_t)v194;
  v146(v194, v147, v149);
  _s7Weather24LocationCompositionStateOwst_0(v139, 0, 1, v149);
  (*(void (**)(char *, uint64_t))(v191 + 8))(v144, v189);
  (*(void (**)(char *, uint64_t))(v192 + 8))(v202, v201);
LABEL_35:
  uint64_t v140 = v193;
  sub_10006DF38(v59, v193, &qword_100E92BD8);
  uint64_t v203 = v140;
  uint64_t v141 = v195;
  sub_10006DF38(v139, v195, &qword_100E92C08);
  uint64_t v204 = v141;
  sub_1009525A8();
  sub_100178110(v139, &qword_100E92C08);
  sub_100178110(v59, &qword_100E92BD8);
  sub_100178110(v141, &qword_100E92C08);
  return sub_100178110(v140, &qword_100E92BD8);
}

uint64_t sub_10077154C@<X0>(uint64_t a1@<X8>)
{
  char v2 = AxisValue.isFirst.getter();
  sub_1007716C0(v2 & 1, (uint64_t)v26);
  uint64_t v3 = v26[0];
  uint64_t v4 = v26[1];
  char v5 = v27;
  long long v25 = v28;
  uint64_t v6 = v29;
  char v7 = v30;
  char v8 = v31;
  char v24 = v32;
  char v9 = static Edge.Set.horizontal.getter();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  EdgeInsets.init(_all:)();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v18 = static Edge.Set.vertical.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  char v33 = 0;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = v25;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 49) = v8;
  *(unsigned char *)(a1 + 50) = v24;
  *(unsigned char *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v17;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v20;
  *(void *)(a1 + 120) = v21;
  *(void *)(a1 + 128) = v22;
  *(void *)(a1 + 136) = v23;
  *(unsigned char *)(a1 + 144) = v33;
  return result;
}

uint64_t sub_1007716C0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  HIDWORD(v27) = a1;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = DetailChartDataElement.dateLabel.getter();
  uint64_t v29 = v7;
  sub_10014A85C();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11;
  DetailChartDataElement.date.getter();
  type metadata accessor for PrecipitationAveragesHeroChartView();
  type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  char v13 = static Date.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v13)
  {
    static Color.primary.getter();
  }
  else
  {
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_10058CB40();
    swift_endAccess();
  }
  uint64_t v14 = Text.foregroundColor(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  swift_release();
  sub_100191924(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CA14();
  swift_endAccess();
  uint64_t v19 = Text.font(_:)();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_release();
  sub_100191924(v14, v16, v18 & 1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_getKeyPath();
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v21;
  *(unsigned char *)(a2 + 16) = v23 & 1;
  *(void *)(a2 + 24) = v25;
  *(void *)(a2 + 32) = result;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(_WORD *)(a2 + 49) = BYTE4(v27) & 1;
  return result;
}

uint64_t sub_1007719A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v1 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v1 - 8);
  v38[1] = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v3 - 8);
  uint64_t v40 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E7D3F8);
  __chkstk_darwin(v5 - 8);
  uint64_t v42 = (uint64_t)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)v38 - v8;
  uint64_t v9 = type metadata accessor for AxisGridLine();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E7D410);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v38 - v18;
  uint64_t v48 = 0;
  long long v46 = 0u;
  long long v47 = 0u;
  AxisGridLine.init(centered:stroke:)();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v20 = sub_10058C87C();
  swift_endAccess();
  uint64_t v44 = (char *)v20;
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v13);
  AxisValue.as<A>(_:)();
  if (v45)
  {
    uint64_t v21 = 1;
LABEL_7:
    uint64_t v32 = (uint64_t)v41;
    goto LABEL_8;
  }
  double v22 = *(double *)&v44;
  char v23 = (char *)v39 + *(int *)(type metadata accessor for PrecipitationAveragesHeroChartView() + 24);
  unint64_t v24 = *((void *)v23 + 13);
  unint64_t v25 = *((void *)v23 + 14);
  unint64_t v26 = *((void *)v23 + 15);
  uint64_t v27 = (void (*)(uint64_t, uint64_t))v23[128];
  char v28 = AxisValue.isFirst.getter();
  char v29 = AxisValue.isLast.getter();
  uint64_t v30 = sub_1007E00C4(v28 & 1, v29 & 1, v24, v25, v26, v27, v22);
  uint64_t v21 = 1;
  if (!v31) {
    goto LABEL_7;
  }
  uint64_t v39 = v38;
  __chkstk_darwin(v30);
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  _OWORD v37[2] = sub_10017DF08(&qword_100E7D418);
  v37[3] = sub_10077322C((uint64_t)&unk_100E7D420);
  v37[0] = sub_100773224;
  v37[1] = v37;
  uint64_t v32 = (uint64_t)v41;
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = 0;
LABEL_8:
  uint64_t v33 = sub_10017DF08(&qword_100E7D408);
  _s7Weather24LocationCompositionStateOwst_0(v32, v21, 1, v33);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  uint64_t v44 = v16;
  uint64_t v34 = v42;
  sub_10006DF38(v32, v42, &qword_100E7D3F8);
  uint64_t v45 = v34;
  sub_1009524B4();
  sub_100178110(v32, &qword_100E7D3F8);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v14 + 8);
  v35(v19, v13);
  sub_100178110(v34, &qword_100E7D3F8);
  return ((uint64_t (*)(char *, uint64_t))v35)(v16, v13);
}

double sub_100771F34@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  char v8 = v7;
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CA14();
  swift_endAccess();
  uint64_t v9 = Text.font(_:)();
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release();
  char v14 = v13 & 1;
  sub_100191924(v4, v6, v8 & 1);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_10058CB40();
  swift_endAccess();
  uint64_t v15 = Text.foregroundColor(_:)();
  uint64_t v31 = v16;
  char v18 = v17;
  uint64_t v20 = v19;
  swift_release();
  sub_100191924(v9, v11, v14);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v9) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  static Alignment.leading.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a3 = v15;
  *(void *)(a3 + 8) = v31;
  *(unsigned char *)(a3 + 16) = v18 & 1;
  *(void *)(a3 + 24) = v20;
  *(void *)(a3 + 32) = KeyPath;
  *(void *)(a3 + 40) = 1;
  *(unsigned char *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 56) = v9;
  *(void *)(a3 + 64) = v23;
  *(void *)(a3 + 72) = v25;
  *(void *)(a3 + 80) = v27;
  *(void *)(a3 + 88) = v29;
  *(unsigned char *)(a3 + 96) = 0;
  *(void *)(a3 + 104) = a1;
  *(unsigned char *)(a3 + 112) = a2;
  *(void *)(a3 + 120) = v34;
  *(unsigned char *)(a3 + 128) = v35;
  *(void *)(a3 + 136) = v36;
  *(unsigned char *)(a3 + 144) = v37;
  *(void *)(a3 + 152) = v38;
  *(unsigned char *)(a3 + 160) = v39;
  *(void *)(a3 + 168) = v40;
  *(unsigned char *)(a3 + 176) = v41;
  *(void *)(a3 + 184) = v42;
  *(unsigned char *)(a3 + 192) = v43;
  double result = *(double *)&v44;
  *(_OWORD *)(a3 + 200) = v44;
  return result;
}

unint64_t sub_100772230()
{
  unint64_t result = qword_100E92A60;
  if (!qword_100E92A60)
  {
    sub_10018C6DC(&qword_100E92A50);
    sub_10024D5E4((uint64_t)&unk_100E92A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92A60);
  }
  return result;
}

uint64_t sub_1007722C8@<X0>(uint64_t a1@<X8>)
{
  return sub_10076BA18(*(void *)(v1 + 16), a1);
}

unint64_t sub_1007722D0()
{
  unint64_t result = qword_100E92AE0;
  if (!qword_100E92AE0)
  {
    sub_10018C6DC(&qword_100E92AD8);
    type metadata accessor for RectangleMark();
    swift_getOpaqueTypeConformance2();
    sub_1007723FC((uint64_t)&unk_100E92AE8);
    sub_1007736C4((uint64_t)&unk_100E92B40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92AE0);
  }
  return result;
}

unint64_t sub_1007723FC(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100772464()
{
  unint64_t result = qword_100E92AF8;
  if (!qword_100E92AF8)
  {
    sub_10018C6DC(&qword_100E92B00);
    sub_10018C6DC(&qword_100E92B08);
    sub_10018C6DC(&qword_100E92B10);
    sub_10018C6DC(&qword_100E92B18);
    sub_10018C6DC(&qword_100E7D2F8);
    type metadata accessor for LineMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    type metadata accessor for RectangleMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1007723FC((uint64_t)&unk_100E92B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92AF8);
  }
  return result;
}

unint64_t sub_10077265C()
{
  unint64_t result = qword_100E92B30;
  if (!qword_100E92B30)
  {
    sub_10018C6DC(&qword_100E92B38);
    sub_100773CCC((uint64_t)&unk_100E7D310);
    sub_10018C6DC(&qword_100E77EE8);
    sub_10018C6DC(&qword_100E77EE0);
    type metadata accessor for PointMark();
    type metadata accessor for BasicChartSymbolShape();
    sub_100773CCC((uint64_t)&qword_100E77F08);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92B30);
  }
  return result;
}

unint64_t sub_100772814()
{
  unint64_t result = qword_100E92B50;
  if (!qword_100E92B50)
  {
    sub_10018C6DC(&qword_100E92B58);
    sub_100773CCC((uint64_t)&unk_100E7D338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92B50);
  }
  return result;
}

uint64_t sub_1007728C4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PrecipitationAveragesHeroChartView();
  sub_1001627C0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_10076CA40(a1, v5);
}

uint64_t sub_100772914()
{
  return sub_10076CADC();
}

uint64_t sub_100772938@<X0>(uint64_t a1@<X8>)
{
  return sub_10076CD04(a1);
}

unint64_t sub_10077295C()
{
  unint64_t result = qword_100E92B80;
  if (!qword_100E92B80)
  {
    sub_10018C6DC(&qword_100E92B78);
    sub_10024D5E4((uint64_t)&unk_100E92B88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92B80);
  }
  return result;
}

uint64_t sub_1007729F8()
{
  uint64_t v0 = sub_1001638AC();
  sub_1001627C0(v0);
  uint64_t v1 = sub_10017F930();

  return sub_10076D14C(v1, v2, v3);
}

unint64_t sub_100772A3C()
{
  unint64_t result = qword_100E92BA0;
  if (!qword_100E92BA0)
  {
    sub_10018C6DC(&qword_100E92AB8);
    sub_100772ADC();
    sub_10024D5E4((uint64_t)&unk_100E7D3B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92BA0);
  }
  return result;
}

unint64_t sub_100772ADC()
{
  unint64_t result = qword_100E92BA8;
  if (!qword_100E92BA8)
  {
    sub_10018C6DC(&qword_100E92AB0);
    sub_10018C6DC(&qword_100E92AA0);
    sub_10018C6DC(&qword_100E7D370);
    sub_10018C6DC(&qword_100E92A98);
    sub_10018C6DC(&qword_100E92B78);
    sub_10018C6DC(&qword_100E92A90);
    sub_10018C6DC(&qword_100E92B68);
    sub_10018C6DC(&qword_100E92A88);
    type metadata accessor for AutomaticScaleDomain();
    type metadata accessor for PlotDimensionScaleRange();
    sub_10018C6DC(&qword_100E92A80);
    sub_10024D5E4((uint64_t)&unk_100E92B60);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100E92B70);
    swift_getOpaqueTypeConformance2();
    sub_10077295C();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100E7D378);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92BA8);
  }
  return result;
}

uint64_t sub_100772D78()
{
  uint64_t v1 = (int *)(type metadata accessor for PrecipitationAveragesHeroChartView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v13 = *(void *)(*(void *)v1 + 64);
  uint64_t v14 = type metadata accessor for ChartProxy();
  sub_100179C0C();
  uint64_t v4 = v3;
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = v0;
  uint64_t v6 = v0 + ((v2 + 16) & ~v2);
  sub_10018F6D8(*(void *)v6, *(unsigned char *)(v6 + 8));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v6 + 16);
  uint64_t v7 = v6 + v1[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v7 + 104), *(void **)(v7 + 112), *(void *)(v7 + 120), *(unsigned char *)(v7 + 128));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v9 = *(void (**)(void))(v8 + 8);
  sub_1001629EC();
  v9();
  type metadata accessor for PeakUpperMarkModel(0);
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001629EC();
  v9();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    sub_1001629EC();
    v9();
  }
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    type metadata accessor for AttributedString();
    sub_100162E4C();
    sub_100162F0C();
    v11();
    sub_1001631C0();
    sub_1001631C0();
    sub_1001631C0();
    sub_1001631C0();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_10:
  sub_1001629EC();
  v9();
  sub_1001629EC();
  v9();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v15 + ((((v2 + 16) & ~v2) + v13 + v5) & ~v5), v14);

  return swift_deallocObject();
}

uint64_t sub_100773110()
{
  uint64_t v3 = *(void *)(sub_1001638AC() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = type metadata accessor for ChartProxy();
  sub_1001627C0(v6);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10076D348(v0, v1 + v4, v8, v2);
}

uint64_t sub_1007731DC()
{
  uint64_t v1 = sub_1001638AC();
  sub_1001627C0(v1);
  return sub_1007719A0(v0);
}

double sub_100773224@<D0>(uint64_t a1@<X8>)
{
  return sub_100771F34(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_10077322C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1007732B0(uint64_t a1)
{
  return sub_100773570(a1, (uint64_t (*)(uint64_t))sub_10076FBB8);
}

unint64_t sub_1007732C8()
{
  unint64_t result = qword_100E92BC8;
  if (!qword_100E92BC8)
  {
    sub_10018C6DC(&qword_100E92BC0);
    sub_1007723FC((uint64_t)&unk_100E92BD0);
    sub_100773434();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92BC8);
  }
  return result;
}

unint64_t sub_100773384()
{
  return sub_1007723FC((uint64_t)&unk_100E92BE0);
}

unint64_t sub_1007733C0()
{
  unint64_t result = qword_100E92BF0;
  if (!qword_100E92BF0)
  {
    sub_10018C6DC(&qword_100E92BF8);
    sub_1005018E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92BF0);
  }
  return result;
}

unint64_t sub_100773434()
{
  unint64_t result = qword_100E92C00;
  if (!qword_100E92C00)
  {
    sub_10018C6DC(&qword_100E92C08);
    sub_10024D5E4((uint64_t)&unk_100E92C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92C00);
  }
  return result;
}

uint64_t sub_1007734CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10077154C(a1);
}

unint64_t sub_1007734D8()
{
  return sub_10077322C((uint64_t)&unk_100E92C30);
}

unint64_t sub_100773508()
{
  return sub_10077322C((uint64_t)&unk_100E92C40);
}

uint64_t sub_10077353C(uint64_t a1)
{
  return sub_100773570(a1, (uint64_t (*)(uint64_t))sub_10076D748);
}

uint64_t sub_100773558(uint64_t a1)
{
  return sub_100773570(a1, (uint64_t (*)(uint64_t))sub_10076EB94);
}

uint64_t sub_100773570(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = sub_1001638AC();
  sub_1001627C0(v2);
  uint64_t v3 = sub_10017F930();

  return a2(v3);
}

uint64_t sub_1007735C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10077361C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100773670(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

unint64_t sub_1007736C4(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    sub_100773CCC((uint64_t)&unk_100E7D340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesHeroChartStyle()
{
  return &type metadata for AveragesHeroChartStyle;
}

unint64_t sub_100773780()
{
  return sub_10024D5E4((uint64_t)&unk_100E92CA0);
}

unint64_t sub_1007737BC()
{
  unint64_t result = qword_100E92CC8;
  if (!qword_100E92CC8)
  {
    sub_10018C6DC(&qword_100E92CC0);
    sub_10024D5E4((uint64_t)&unk_100E92CD0);
    sub_10077385C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92CC8);
  }
  return result;
}

unint64_t sub_10077385C()
{
  unint64_t result = qword_100E92CE0;
  if (!qword_100E92CE0)
  {
    sub_10018C6DC(&qword_100E92CE8);
    sub_10018C6DC(&qword_100E92CF0);
    sub_10024D5E4((uint64_t)&unk_100E92CF8);
    swift_getOpaqueTypeConformance2();
    sub_100773940();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92CE0);
  }
  return result;
}

unint64_t sub_100773940()
{
  unint64_t result = qword_100E92D00;
  if (!qword_100E92D00)
  {
    sub_10018C6DC(&qword_100E92D08);
    type metadata accessor for ChartPointMarkSeries();
    sub_100773CCC((uint64_t)&unk_100E92D10);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92D00);
  }
  return result;
}

unint64_t sub_100773A14()
{
  unint64_t result = qword_100E92D20;
  if (!qword_100E92D20)
  {
    sub_10018C6DC(&qword_100E92D18);
    sub_10018C6DC(&qword_100E92D28);
    sub_100773ABC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92D20);
  }
  return result;
}

unint64_t sub_100773ABC()
{
  unint64_t result = qword_100E92D30;
  if (!qword_100E92D30)
  {
    sub_10018C6DC(&qword_100E92D28);
    sub_10018C6DC(&qword_100E92D38);
    sub_10018C6DC(&qword_100E92D40);
    type metadata accessor for PointMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92D30);
  }
  return result;
}

unint64_t sub_100773BF8()
{
  unint64_t result = qword_100E92D68;
  if (!qword_100E92D68)
  {
    sub_10018C6DC(&qword_100E92D60);
    type metadata accessor for ChartAreaSeries();
    sub_100773CCC((uint64_t)&unk_100E92D70);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92D68);
  }
  return result;
}

unint64_t sub_100773CCC(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100773D10()
{
  unint64_t result = qword_100E92D98;
  if (!qword_100E92D98)
  {
    sub_10018C6DC(&qword_100E92DA0);
    sub_100773BF8();
    sub_100773CCC((uint64_t)&unk_100E92D78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92D98);
  }
  return result;
}

_UNKNOWN **static WeatherFeatureFlags.allCases.getter()
{
  return &off_100E07BE8;
}

void sub_100773DD0(void *a1@<X8>)
{
  *a1 = &off_100E07BE8;
}

uint64_t WeatherFeatureFlags.isEnabled.getter(char a1)
{
  char v1 = a1 & 1;
  uint64_t v5 = &type metadata for WeatherFeatureFlags;
  unint64_t v6 = sub_100068B7C();
  v4[0] = v1;
  char v2 = isFeatureEnabled(_:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  return v2 & 1;
}

void WeatherFeatureFlags.domain.getter()
{
}

unint64_t sub_100773E48()
{
  unint64_t result = qword_100E92DB0;
  if (!qword_100E92DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92DB0);
  }
  return result;
}

uint64_t sub_100773E94()
{
  return sub_1001246C8(&qword_100E92DB8, &qword_100E92DC0);
}

unsigned char *storeEnumTagSinglePayload for WeatherFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100773F9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherFeatureFlags()
{
  return &type metadata for WeatherFeatureFlags;
}

uint64_t sub_100773FD4()
{
  return sub_10021E1CC((uint64_t (*)(void *, unint64_t, uint64_t, uint64_t))&dispatch thunk of AppConfigurationManagerType.removeObserver(_:));
}

uint64_t sub_100774000(uint64_t a1)
{
  type metadata accessor for AppConfiguration();
  sub_10017CE00();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v1);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  swift_retain();
  asyncMain(block:)();
  swift_release();
  return swift_release();
}

uint64_t sub_100774144(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t))(result + 16);
    swift_retain();
    swift_release();
    uint64_t v8 = type metadata accessor for AppConfiguration();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v5, a2, v8);
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_1001AAF58((uint64_t)v5, (uint64_t)v9, v7);
    sub_100016E7C((uint64_t)v9);
    sub_1001ABE70((uint64_t)v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_100774290()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1007742C8()
{
  type metadata accessor for AppConfiguration();
  sub_10017CE00();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v0);

  return swift_deallocObject();
}

uint64_t sub_100774368()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppConfiguration() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100774144(v2, v3);
}

unsigned char *storeEnumTagSinglePayload for TimeAction(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100774468);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeAction()
{
  return &type metadata for TimeAction;
}

unint64_t sub_1007744A4()
{
  unint64_t result = qword_100E92E78;
  if (!qword_100E92E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92E78);
  }
  return result;
}

uint64_t sub_1007744F0(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162E88();
  uint64_t v5 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for SearchLocation();
  sub_1000EB4E0(a1 + *(int *)(v12 + 32), (uint64_t)v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_1001781AC((uint64_t)v7, &qword_100E639E8);
    uint64_t v13 = *(uint64_t (**)(uint64_t))(v2 + 16);
    sub_100774A28(a1, v1);
    type metadata accessor for SearchViewAction();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ViewAction();
    sub_10019F094();
    swift_storeEnumTagMultiPayload();
    sub_10018035C();
    sub_1001AAF58(v1, (uint64_t)v16, v13);
    sub_1001781AC((uint64_t)v16, (uint64_t *)&unk_100EA01F0);
    sub_1001ABE70(v1);
    return swift_release();
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v15 = *(uint64_t (**)(uint64_t))(v2 + 16);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v9 + 16))(v1, v11, v8);
    type metadata accessor for SearchViewAction();
    sub_10019F094();
    type metadata accessor for ViewAction();
    sub_10019F094();
    swift_storeEnumTagMultiPayload();
    sub_10018035C();
    sub_1001AAF58(v1, (uint64_t)v16, v15);
    sub_1001781AC((uint64_t)v16, (uint64_t *)&unk_100EA01F0);
    sub_1001ABE70(v1);
    swift_release();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1007747A0(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 16);
  type metadata accessor for LocationOfInterest();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v1, a1);
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  sub_10019F094();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1001AAF58(v1, (uint64_t)v8, v5);
  sub_1001781AC((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v1);
  return swift_release();
}

uint64_t sub_1007748C0()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100162E88();
  int v3 = *(uint64_t (**)(uint64_t))(v1 + 16);
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  sub_10019F094();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_retain();
  sub_1001AAF58(v0, (uint64_t)v5, v3);
  sub_1001781AC((uint64_t)v5, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v0);
  return swift_release();
}

uint64_t sub_1007749A0()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  return v0;
}

uint64_t sub_1007749D0()
{
  sub_1007749A0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchInteractor()
{
  return self;
}

uint64_t sub_100774A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_100774A8C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v9;
  }
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[5];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_100195B7C(*(void *)v16, v18);
  *(void *)uint64_t v15 = v17;
  v15[8] = v18;
  uint64_t v190 = a3;
  uint64_t v19 = a3[7];
  uint64_t v187 = a2;
  uint64_t v188 = a1;
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  v20[*(int *)(v23 + 20)] = v21[*(int *)(v23 + 20)];
  v20[*(int *)(v23 + 24)] = v21[*(int *)(v23 + 24)];
  uint64_t v192 = (int *)type metadata accessor for DetailChartViewModel();
  uint64_t v193 = v20;
  uint64_t v24 = v192[5];
  uint64_t v25 = &v20[v24];
  uint64_t v191 = v21;
  uint64_t v26 = &v21[v24];
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)uint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = v27;
  uint64_t v28 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v29 = v28[5];
  uint64_t v30 = &v25[v29];
  uint64_t v31 = &v26[v29];
  uint64_t v32 = type metadata accessor for ChartKind();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  v33(v30, v31, v32);
  *(void *)&v25[v28[6]] = *(void *)&v26[v28[6]];
  uint64_t v34 = v28[7];
  char v35 = &v25[v34];
  uint64_t v36 = &v26[v34];
  uint64_t v37 = type metadata accessor for DetailChartExtrema();
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
  swift_bridgeObjectRetain();
  v38(v35, v36, v37);
  *(void *)&v25[v28[8]] = *(void *)&v26[v28[8]];
  *(void *)&v25[v28[9]] = *(void *)&v26[v28[9]];
  *(_OWORD *)&v25[v28[10]] = *(_OWORD *)&v26[v28[10]];
  uint64_t v39 = v28[11];
  uint64_t v40 = &v25[v39];
  char v41 = &v26[v39];
  uint64_t v42 = *(void **)v41;
  char v43 = (void *)*((void *)v41 + 1);
  uint64_t v44 = *((void *)v41 + 2);
  LOBYTE(v38) = v41[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v42, v43, v44, v38);
  *(void *)uint64_t v40 = v42;
  *((void *)v40 + 1) = v43;
  *((void *)v40 + 2) = v44;
  v40[24] = (char)v38;
  uint64_t v45 = v28[12];
  long long v46 = &v25[v45];
  long long v47 = &v26[v45];
  *(void *)&v25[v45] = *(void *)&v26[v45];
  uint64_t v48 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v49 = &v46[v48];
  uint64_t v50 = &v47[v48];
  uint64_t v51 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
  {
    uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
  }
  uint64_t v53 = v28[13];
  uint64_t v54 = &v25[v53];
  uint64_t v55 = &v26[v53];
  *(void *)uint64_t v54 = *(void *)v55;
  v54[8] = v55[8];
  uint64_t v56 = v28[14];
  uint64_t v57 = &v25[v56];
  uint64_t v58 = &v26[v56];
  uint64_t v59 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
  {
    uint64_t v60 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v57 = *(void *)v58;
    uint64_t v61 = *(int *)(v59 + 48);
    uint64_t v62 = &v57[v61];
    uint64_t v63 = &v58[v61];
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v51))
    {
      uint64_t v64 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v62, v63, v51);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v51);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
  }
  *(void *)&v25[v28[15]] = *(void *)&v26[v28[15]];
  uint64_t v65 = v28[16];
  uint64_t v66 = &v25[v65];
  uint64_t v67 = &v26[v65];
  uint64_t v68 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
  *(void *)&v25[v28[17]] = *(void *)&v26[v28[17]];
  uint64_t v69 = v28[18];
  uint64_t v70 = &v25[v69];
  uint64_t v71 = &v26[v69];
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
  swift_bridgeObjectRetain();
  v72(v70, v71, v51);
  v72(&v25[v28[19]], &v26[v28[19]], v51);
  uint64_t v186 = v72;
  v72(&v25[v28[20]], &v26[v28[20]], v51);
  uint64_t v73 = v28[21];
  uint64_t v74 = &v25[v73];
  uint64_t v75 = &v26[v73];
  uint64_t v76 = type metadata accessor for DetailChartDataElement();
  uint64_t v189 = v51;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
  {
    uint64_t v77 = sub_10017DF08(&qword_100E6B640);
    memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
  }
  *(void *)&v25[v28[22]] = *(void *)&v26[v28[22]];
  uint64_t v78 = v28[23];
  uint64_t v79 = &v25[v78];
  uint64_t v80 = &v26[v78];
  uint64_t v81 = type metadata accessor for ChartPeakMarkStyle();
  uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
  swift_bridgeObjectRetain();
  v82(v79, v80, v81);
  *(void *)&v25[v28[24]] = *(void *)&v26[v28[24]];
  *(void *)&v25[v28[25]] = *(void *)&v26[v28[25]];
  uint64_t v83 = v28[26];
  uint64_t v84 = &v25[v83];
  uint64_t v85 = &v26[v83];
  uint64_t v86 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
  swift_bridgeObjectRetain();
  v87(v84, v85, v86);
  uint64_t v88 = v28[27];
  uint64_t v89 = &v25[v88];
  uint64_t v90 = &v26[v88];
  uint64_t v91 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
  uint64_t v92 = v28[28];
  uint64_t v93 = &v25[v92];
  uint64_t v94 = &v26[v92];
  uint64_t v95 = *((void *)v94 + 1);
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = v95;
  uint64_t v96 = v28[29];
  uint64_t v97 = &v25[v96];
  uint64_t v98 = &v26[v96];
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = *(void *)v98;
  *((void *)v97 + 1) = v99;
  uint64_t v100 = v28[30];
  uint64_t v101 = &v25[v100];
  uint64_t v102 = &v26[v100];
  uint64_t v103 = *((void *)v102 + 1);
  *(void *)uint64_t v101 = *(void *)v102;
  *((void *)v101 + 1) = v103;
  uint64_t v104 = v28[31];
  uint64_t v105 = &v25[v104];
  uint64_t v106 = &v26[v104];
  uint64_t v107 = *((void *)v106 + 1);
  *(void *)uint64_t v105 = *(void *)v106;
  *((void *)v105 + 1) = v107;
  uint64_t v108 = v28[32];
  uint64_t v109 = &v25[v108];
  uint64_t v110 = &v26[v108];
  uint64_t v111 = *((void *)v110 + 1);
  *(void *)uint64_t v109 = *(void *)v110;
  *((void *)v109 + 1) = v111;
  uint64_t v112 = v28[33];
  uint64_t v113 = &v25[v112];
  uint64_t v114 = &v26[v112];
  uint64_t v115 = *((void *)v114 + 1);
  *(void *)uint64_t v113 = *(void *)v114;
  *((void *)v113 + 1) = v115;
  uint64_t v116 = v192[6];
  uint64_t v117 = &v193[v116];
  uint64_t v118 = v191;
  uint64_t v119 = &v191[v116];
  char v120 = (int *)type metadata accessor for LollipopViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, (uint64_t)v120))
  {
    uint64_t v123 = *((void *)v119 + 1);
    *(void *)uint64_t v117 = *(void *)v119;
    *((void *)v117 + 1) = v123;
    uint64_t v124 = v120[5];
    uint64_t v125 = &v117[v124];
    char v126 = &v119[v124];
    uint64_t v127 = type metadata accessor for DetailChartDataPoint();
    uint64_t v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
    swift_bridgeObjectRetain();
    v128(v125, v126, v127);
    *(void *)&v117[v120[6]] = *(void *)&v119[v120[6]];
    uint64_t v129 = v120[7];
    uint64_t v130 = &v117[v129];
    uint64_t v131 = &v119[v129];
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v137 = *((void *)v131 + 1);
      *(void *)uint64_t v130 = *(void *)v131;
      *((void *)v130 + 1) = v137;
      uint64_t v138 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v139 = v138[5];
      uint64_t v185 = &v130[v139];
      uint64_t v140 = &v131[v139];
      uint64_t v141 = type metadata accessor for AttributedString();
      uint64_t v142 = *(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16);
      swift_bridgeObjectRetain();
      v142(v185, v140, v141);
      uint64_t v143 = v138[6];
      uint64_t v144 = &v130[v143];
      uint64_t v145 = &v131[v143];
      uint64_t v146 = *((void *)v145 + 1);
      *(void *)uint64_t v144 = *(void *)v145;
      *((void *)v144 + 1) = v146;
      uint64_t v147 = v138[7];
      uint64_t v148 = &v130[v147];
      uint64_t v149 = &v131[v147];
      uint64_t v150 = *((void *)v149 + 1);
      *(void *)uint64_t v148 = *(void *)v149;
      *((void *)v148 + 1) = v150;
      uint64_t v151 = v138[8];
      uint64_t v152 = &v130[v151];
      uint64_t v153 = &v131[v151];
      uint64_t v154 = *((void *)v153 + 1);
      *(void *)uint64_t v152 = *(void *)v153;
      *((void *)v152 + 1) = v154;
      uint64_t v155 = v138[9];
      long long v156 = &v130[v155];
      long long v157 = &v131[v155];
      uint64_t v158 = *((void *)v157 + 1);
      *(void *)long long v156 = *(void *)v157;
      *((void *)v156 + 1) = v158;
      uint64_t v159 = v138[10];
      uint64_t v160 = &v130[v159];
      uint64_t v161 = &v131[v159];
      uint64_t v162 = *((void *)v161 + 1);
      *(void *)uint64_t v160 = *(void *)v161;
      *((void *)v160 + 1) = v162;
      v130[v138[11]] = v131[v138[11]];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v163 = *((void *)v131 + 1);
        *(void *)uint64_t v130 = *(void *)v131;
        *((void *)v130 + 1) = v163;
        uint64_t v164 = *((void *)v131 + 3);
        *((void *)v130 + 2) = *((void *)v131 + 2);
        *((void *)v130 + 3) = v164;
        uint64_t v165 = *((void *)v131 + 5);
        *((void *)v130 + 4) = *((void *)v131 + 4);
        *((void *)v130 + 5) = v165;
        goto LABEL_29;
      }
      uint64_t v133 = *((void *)v131 + 1);
      *(void *)uint64_t v130 = *(void *)v131;
      *((void *)v130 + 1) = v133;
      uint64_t v134 = *((void *)v131 + 3);
      *((void *)v130 + 2) = *((void *)v131 + 2);
      *((void *)v130 + 3) = v134;
      uint64_t v135 = *((void *)v131 + 5);
      *((void *)v130 + 4) = *((void *)v131 + 4);
      *((void *)v130 + 5) = v135;
      uint64_t v136 = *((void *)v131 + 7);
      *((void *)v130 + 6) = *((void *)v131 + 6);
      *((void *)v130 + 7) = v136;
      v130[64] = v131[64];
      v130[65] = v131[65];
    }
    swift_bridgeObjectRetain();
LABEL_29:
    uint64_t v122 = v187;
    uint64_t v9 = v188;
    uint64_t v118 = v191;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, (uint64_t)v120);
    goto LABEL_30;
  }
  uint64_t v121 = sub_10017DF08(&qword_100E82140);
  memcpy(v117, v119, *(void *)(*(void *)(v121 - 8) + 64));
  uint64_t v122 = v187;
  uint64_t v9 = v188;
LABEL_30:
  uint64_t v166 = v192[7];
  uint64_t v167 = &v193[v166];
  uint64_t v168 = &v118[v166];
  uint64_t v169 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v169))
  {
    uint64_t v170 = sub_10017DF08(&qword_100E820F0);
    memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v171 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v167, v168, v171);
    }
    else
    {
      uint64_t v172 = *((void *)v168 + 1);
      *(void *)uint64_t v167 = *(void *)v168;
      *((void *)v167 + 1) = v172;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v169);
  }
  uint64_t v173 = v190[9];
  *((unsigned char *)v9 + v190[8]) = *((unsigned char *)v122 + v190[8]);
  uint64_t v174 = (char *)v9 + v173;
  uint64_t v175 = (char *)v122 + v173;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122 + v173, 1, v189))
  {
    uint64_t v176 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
  }
  else
  {
    v186(v174, v175, v189);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v189);
  }
  uint64_t v177 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v174[*(int *)(v177 + 28)] = *(void *)&v175[*(int *)(v177 + 28)];
  uint64_t v178 = v190[10];
  uint64_t v179 = (uint64_t)v9 + v178;
  uint64_t v180 = (uint64_t)v122 + v178;
  long long v181 = *(_OWORD *)((char *)v122 + v178 + 24);
  *(_OWORD *)((char *)v9 + v178 + 24) = v181;
  uint64_t v182 = v181;
  uint64_t v183 = **(void (***)(uint64_t, uint64_t, uint64_t))(v181 - 8);
  swift_retain();
  v183(v179, v180, v182);
  *(void *)((char *)v9 + v190[11]) = *(void *)((char *)v122 + v190[11]);
  return v9;
}

uint64_t sub_100775804(uint64_t a1, int *a2)
{
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v47 = type metadata accessor for DetailChartViewModel();
  uint64_t v9 = v7 + *(int *)(v47 + 20);
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v11 = v9 + v10[5];
  uint64_t v12 = type metadata accessor for ChartKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v9 + v10[7];
  uint64_t v14 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v9 + v10[11]), *(void **)(v9 + v10[11] + 8), *(void *)(v9 + v10[11] + 16), *(unsigned char *)(v9 + v10[11] + 24));
  uint64_t v15 = v9 + v10[12];
  uint64_t v16 = v15 + *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v17 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = v9 + v10[14];
  uint64_t v19 = sub_10017DF08(&qword_100E6BF10);
  if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
  {
    swift_release();
    uint64_t v20 = v18 + *(int *)(v19 + 48);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v17)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v20, v17);
    }
  }
  uint64_t v21 = v9 + v10[16];
  uint64_t v22 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  v23(v9 + v10[18], v17);
  v23(v9 + v10[19], v17);
  v23(v9 + v10[20], v17);
  uint64_t v24 = v9 + v10[21];
  uint64_t v25 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v9 + v10[23];
  uint64_t v27 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  swift_bridgeObjectRelease();
  uint64_t v28 = v9 + v10[26];
  uint64_t v29 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  uint64_t v30 = v9 + v10[27];
  uint64_t v31 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v32 = v47;
  uint64_t v33 = v7 + *(int *)(v47 + 24);
  uint64_t v34 = type metadata accessor for LollipopViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = v33 + *(int *)(v34 + 20);
    uint64_t v36 = type metadata accessor for DetailChartDataPoint();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    uint64_t v37 = v33 + *(int *)(v34 + 28);
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v39 = v37 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
      uint64_t v40 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = v47;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v41 = v7 + *(int *)(v32 + 28);
  uint64_t v42 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v43 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v41, v43);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v44 = a1 + a2[9];
  if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v17)) {
    v23(v44, v17);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();
  uint64_t v45 = a1 + a2[10];

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v45);
}

void *sub_100775FEC(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    void *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100195B7C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v183 = a3;
  uint64_t v184 = a2;
  uint64_t v16 = a3[7];
  uint64_t v185 = a1;
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  v17[*(int *)(v20 + 20)] = v18[*(int *)(v20 + 20)];
  v17[*(int *)(v20 + 24)] = v18[*(int *)(v20 + 24)];
  uint64_t v186 = (int *)type metadata accessor for DetailChartViewModel();
  uint64_t v187 = v17;
  uint64_t v21 = v186[5];
  uint64_t v22 = &v17[v21];
  uint64_t v188 = v18;
  uint64_t v23 = &v18[v21];
  uint64_t v24 = *(void *)&v18[v21];
  uint64_t v25 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v24;
  *((void *)v22 + 1) = v25;
  uint64_t v26 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v27 = v26[5];
  uint64_t v28 = &v22[v27];
  uint64_t v29 = &v23[v27];
  uint64_t v30 = type metadata accessor for ChartKind();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  swift_bridgeObjectRetain();
  v31(v28, v29, v30);
  *(void *)&v22[v26[6]] = *(void *)&v23[v26[6]];
  uint64_t v32 = v26[7];
  uint64_t v33 = &v22[v32];
  uint64_t v34 = &v23[v32];
  uint64_t v35 = type metadata accessor for DetailChartExtrema();
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
  swift_bridgeObjectRetain();
  v36(v33, v34, v35);
  *(void *)&v22[v26[8]] = *(void *)&v23[v26[8]];
  *(void *)&v22[v26[9]] = *(void *)&v23[v26[9]];
  *(_OWORD *)&v22[v26[10]] = *(_OWORD *)&v23[v26[10]];
  uint64_t v37 = v26[11];
  uint64_t v38 = &v22[v37];
  uint64_t v39 = &v23[v37];
  uint64_t v40 = *(void **)v39;
  uint64_t v41 = (void *)*((void *)v39 + 1);
  uint64_t v42 = *((void *)v39 + 2);
  LOBYTE(v36) = v39[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v40, v41, v42, v36);
  *(void *)uint64_t v38 = v40;
  *((void *)v38 + 1) = v41;
  *((void *)v38 + 2) = v42;
  v38[24] = (char)v36;
  uint64_t v43 = v26[12];
  uint64_t v44 = &v22[v43];
  uint64_t v45 = &v23[v43];
  *(void *)&v22[v43] = *(void *)&v23[v43];
  uint64_t v46 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v47 = &v44[v46];
  uint64_t v48 = &v45[v46];
  uint64_t v49 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
  {
    uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
  }
  uint64_t v51 = v26[13];
  uint64_t v52 = &v22[v51];
  uint64_t v53 = &v23[v51];
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v53[8];
  uint64_t v54 = v26[14];
  uint64_t v55 = &v22[v54];
  uint64_t v56 = &v23[v54];
  uint64_t v57 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
  {
    uint64_t v58 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v55 = *(void *)v56;
    uint64_t v59 = *(int *)(v57 + 48);
    uint64_t v60 = &v55[v59];
    uint64_t v61 = &v56[v59];
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v49))
    {
      uint64_t v62 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v60, v61, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v49);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
  }
  *(void *)&v22[v26[15]] = *(void *)&v23[v26[15]];
  uint64_t v63 = v26[16];
  uint64_t v64 = &v22[v63];
  uint64_t v65 = &v23[v63];
  uint64_t v66 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  *(void *)&v22[v26[17]] = *(void *)&v23[v26[17]];
  uint64_t v67 = v26[18];
  uint64_t v68 = &v22[v67];
  uint64_t v69 = &v23[v67];
  uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
  swift_bridgeObjectRetain();
  v70(v68, v69, v49);
  v70(&v22[v26[19]], &v23[v26[19]], v49);
  uint64_t v182 = v70;
  v70(&v22[v26[20]], &v23[v26[20]], v49);
  uint64_t v71 = v26[21];
  uint64_t v72 = &v22[v71];
  uint64_t v73 = &v23[v71];
  uint64_t v74 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
  {
    uint64_t v75 = sub_10017DF08(&qword_100E6B640);
    memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
  }
  *(void *)&v22[v26[22]] = *(void *)&v23[v26[22]];
  uint64_t v76 = v26[23];
  uint64_t v77 = &v22[v76];
  uint64_t v78 = &v23[v76];
  uint64_t v79 = type metadata accessor for ChartPeakMarkStyle();
  uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
  swift_bridgeObjectRetain();
  v80(v77, v78, v79);
  *(void *)&v22[v26[24]] = *(void *)&v23[v26[24]];
  *(void *)&v22[v26[25]] = *(void *)&v23[v26[25]];
  uint64_t v81 = v26[26];
  uint64_t v82 = &v22[v81];
  uint64_t v83 = &v23[v81];
  uint64_t v84 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
  swift_bridgeObjectRetain();
  v85(v82, v83, v84);
  uint64_t v86 = v26[27];
  uint64_t v87 = &v22[v86];
  uint64_t v88 = &v23[v86];
  uint64_t v89 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
  uint64_t v90 = v26[28];
  uint64_t v91 = &v22[v90];
  uint64_t v92 = &v23[v90];
  uint64_t v93 = *((void *)v92 + 1);
  *(void *)uint64_t v91 = *(void *)v92;
  *((void *)v91 + 1) = v93;
  uint64_t v94 = v26[29];
  uint64_t v95 = &v22[v94];
  uint64_t v96 = &v23[v94];
  uint64_t v97 = *((void *)v96 + 1);
  *(void *)uint64_t v95 = *(void *)v96;
  *((void *)v95 + 1) = v97;
  uint64_t v98 = v26[30];
  uint64_t v99 = &v22[v98];
  uint64_t v100 = &v23[v98];
  uint64_t v101 = *((void *)v100 + 1);
  *(void *)uint64_t v99 = *(void *)v100;
  *((void *)v99 + 1) = v101;
  uint64_t v102 = v26[31];
  uint64_t v103 = &v22[v102];
  uint64_t v104 = &v23[v102];
  uint64_t v105 = *((void *)v104 + 1);
  *(void *)uint64_t v103 = *(void *)v104;
  *((void *)v103 + 1) = v105;
  uint64_t v106 = v26[32];
  uint64_t v107 = &v22[v106];
  uint64_t v108 = &v23[v106];
  uint64_t v109 = *((void *)v108 + 1);
  *(void *)uint64_t v107 = *(void *)v108;
  *((void *)v107 + 1) = v109;
  uint64_t v110 = v26[33];
  uint64_t v111 = &v22[v110];
  uint64_t v112 = &v23[v110];
  uint64_t v113 = *((void *)v112 + 1);
  *(void *)uint64_t v111 = *(void *)v112;
  *((void *)v111 + 1) = v113;
  uint64_t v114 = v186[6];
  uint64_t v115 = &v187[v114];
  uint64_t v116 = &v188[v114];
  uint64_t v117 = (int *)type metadata accessor for LollipopViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, (uint64_t)v117))
  {
    uint64_t v118 = sub_10017DF08(&qword_100E82140);
    memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
    goto LABEL_28;
  }
  uint64_t v119 = *((void *)v116 + 1);
  *(void *)uint64_t v115 = *(void *)v116;
  *((void *)v115 + 1) = v119;
  uint64_t v120 = v117[5];
  uint64_t v121 = &v115[v120];
  uint64_t v122 = &v116[v120];
  uint64_t v123 = type metadata accessor for DetailChartDataPoint();
  uint64_t v124 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
  swift_bridgeObjectRetain();
  v124(v121, v122, v123);
  *(void *)&v115[v117[6]] = *(void *)&v116[v117[6]];
  uint64_t v125 = v117[7];
  char v126 = &v115[v125];
  uint64_t v127 = &v116[v125];
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v133 = *((void *)v127 + 1);
    *(void *)char v126 = *(void *)v127;
    *((void *)v126 + 1) = v133;
    uint64_t v134 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v135 = v134[5];
    uint64_t v180 = &v127[v135];
    long long v181 = &v126[v135];
    uint64_t v136 = type metadata accessor for AttributedString();
    uint64_t v137 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
    swift_bridgeObjectRetain();
    v137(v181, v180, v136);
    uint64_t v138 = v134[6];
    uint64_t v139 = &v126[v138];
    uint64_t v140 = &v127[v138];
    uint64_t v141 = *((void *)v140 + 1);
    *(void *)uint64_t v139 = *(void *)v140;
    *((void *)v139 + 1) = v141;
    uint64_t v142 = v134[7];
    uint64_t v143 = &v126[v142];
    uint64_t v144 = &v127[v142];
    uint64_t v145 = *((void *)v144 + 1);
    *(void *)uint64_t v143 = *(void *)v144;
    *((void *)v143 + 1) = v145;
    uint64_t v146 = v134[8];
    uint64_t v147 = &v126[v146];
    uint64_t v148 = &v127[v146];
    uint64_t v149 = *((void *)v148 + 1);
    *(void *)uint64_t v147 = *(void *)v148;
    *((void *)v147 + 1) = v149;
    uint64_t v150 = v134[9];
    uint64_t v151 = &v126[v150];
    uint64_t v152 = &v127[v150];
    uint64_t v153 = *((void *)v152 + 1);
    *(void *)uint64_t v151 = *(void *)v152;
    *((void *)v151 + 1) = v153;
    uint64_t v154 = v134[10];
    uint64_t v155 = &v126[v154];
    long long v156 = &v127[v154];
    uint64_t v157 = *((void *)v156 + 1);
    *(void *)uint64_t v155 = *(void *)v156;
    *((void *)v155 + 1) = v157;
    v126[v134[11]] = v127[v134[11]];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v158 = *((void *)v127 + 1);
      *(void *)char v126 = *(void *)v127;
      *((void *)v126 + 1) = v158;
      uint64_t v159 = *((void *)v127 + 3);
      *((void *)v126 + 2) = *((void *)v127 + 2);
      *((void *)v126 + 3) = v159;
      uint64_t v160 = *((void *)v127 + 5);
      *((void *)v126 + 4) = *((void *)v127 + 4);
      *((void *)v126 + 5) = v160;
      goto LABEL_27;
    }
    uint64_t v129 = *((void *)v127 + 1);
    *(void *)char v126 = *(void *)v127;
    *((void *)v126 + 1) = v129;
    uint64_t v130 = *((void *)v127 + 3);
    *((void *)v126 + 2) = *((void *)v127 + 2);
    *((void *)v126 + 3) = v130;
    uint64_t v131 = *((void *)v127 + 5);
    *((void *)v126 + 4) = *((void *)v127 + 4);
    *((void *)v126 + 5) = v131;
    uint64_t v132 = *((void *)v127 + 7);
    *((void *)v126 + 6) = *((void *)v127 + 6);
    *((void *)v126 + 7) = v132;
    v126[64] = v127[64];
    v126[65] = v127[65];
  }
  swift_bridgeObjectRetain();
LABEL_27:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, (uint64_t)v117);
LABEL_28:
  uint64_t v161 = v186[7];
  uint64_t v162 = &v187[v161];
  uint64_t v163 = &v188[v161];
  uint64_t v164 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
  {
    uint64_t v165 = sub_10017DF08(&qword_100E820F0);
    memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v166 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v162, v163, v166);
    }
    else
    {
      uint64_t v167 = *((void *)v163 + 1);
      *(void *)uint64_t v162 = *(void *)v163;
      *((void *)v162 + 1) = v167;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v164);
  }
  uint64_t v168 = v183[9];
  *((unsigned char *)v185 + v183[8]) = *((unsigned char *)v184 + v183[8]);
  uint64_t v169 = (char *)v185 + v168;
  uint64_t v170 = (char *)v184 + v168;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v184 + v168, 1, v49))
  {
    uint64_t v171 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
  }
  else
  {
    v182(v169, v170, v49);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v49);
  }
  uint64_t v172 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v169[*(int *)(v172 + 28)] = *(void *)&v170[*(int *)(v172 + 28)];
  uint64_t v173 = v183[10];
  uint64_t v174 = (char *)v185 + v173;
  uint64_t v175 = (char *)v184 + v173;
  long long v176 = *(_OWORD *)((char *)v184 + v173 + 24);
  *(_OWORD *)((char *)v185 + v173 + 24) = v176;
  uint64_t v177 = v176;
  uint64_t v178 = **(void (***)(char *, char *, uint64_t))(v176 - 8);
  swift_retain();
  v178(v174, v175, v177);
  *(void *)((char *)v185 + v183[11]) = *(void *)((char *)v184 + v183[11]);
  return v185;
}

void *sub_100776D0C(uint64_t a1, void *a2, int *a3)
{
  uint64_t v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_10017DF4C(a1, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v5, a2, v6);
    }
    else
    {
      void *v5 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)v5 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_10017DF4C((uint64_t)v5 + v7, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)v5 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_100195B7C(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_10018F6D8(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)v5 + v18;
  uint64_t v220 = a2;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  v19[*(int *)(v22 + 20)] = v20[*(int *)(v22 + 20)];
  v19[*(int *)(v22 + 24)] = v20[*(int *)(v22 + 24)];
  uint64_t v223 = type metadata accessor for DetailChartViewModel();
  uint64_t v23 = *(int *)(v223 + 20);
  uint64_t v221 = v20;
  uint64_t v222 = v19;
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  *(void *)uint64_t v24 = *(void *)&v20[v23];
  *((void *)v24 + 1) = *(void *)&v20[v23 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v27 = v26[5];
  uint64_t v28 = &v24[v27];
  uint64_t v29 = &v25[v27];
  uint64_t v30 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v26[7];
  uint64_t v32 = &v24[v31];
  uint64_t v33 = &v25[v31];
  uint64_t v34 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v24[v26[9]] = *(void *)&v25[v26[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = v26[10];
  uint64_t v36 = &v24[v35];
  uint64_t v37 = &v25[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  uint64_t v38 = v26[11];
  uint64_t v39 = &v24[v38];
  uint64_t v40 = &v25[v38];
  id v41 = *(id *)v40;
  uint64_t v42 = (void *)*((void *)v40 + 1);
  uint64_t v43 = *((void *)v40 + 2);
  unsigned __int8 v44 = v40[24];
  sub_10027D4F8(*(id *)v40, v42, v43, v44);
  uint64_t v45 = *(void **)v39;
  uint64_t v46 = (void *)*((void *)v39 + 1);
  uint64_t v47 = *((void *)v39 + 2);
  *(void *)uint64_t v39 = v41;
  *((void *)v39 + 1) = v42;
  *((void *)v39 + 2) = v43;
  unsigned __int8 v48 = v39[24];
  v39[24] = v44;
  sub_10027D954(v45, v46, v47, v48);
  uint64_t v49 = v26[12];
  uint64_t v50 = &v24[v49];
  uint64_t v51 = &v25[v49];
  *(void *)&v24[v49] = *(void *)&v25[v49];
  uint64_t v52 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v53 = &v50[v52];
  uint64_t v54 = &v51[v52];
  uint64_t v55 = type metadata accessor for Date();
  LODWORD(v50) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v55);
  int v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55);
  uint64_t v219 = a3;
  if (v50)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v57 = *(void *)(v55 - 8);
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v53, v55);
LABEL_14:
    uint64_t v58 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 24))(v53, v54, v55);
LABEL_15:
  uint64_t v59 = v26[13];
  uint64_t v60 = &v24[v59];
  uint64_t v61 = &v25[v59];
  uint64_t v62 = *(void *)v61;
  v60[8] = v61[8];
  *(void *)uint64_t v60 = v62;
  uint64_t v63 = v26[14];
  uint64_t v64 = &v24[v63];
  uint64_t v65 = &v25[v63];
  uint64_t v66 = sub_10017DF08(&qword_100E6BF10);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  int v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if (v67)
  {
    if (!v68)
    {
      *(void *)uint64_t v64 = *(void *)v65;
      uint64_t v69 = *(int *)(v66 + 48);
      uint64_t v70 = &v64[v69];
      uint64_t v71 = &v65[v69];
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v55))
      {
        uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v70, v71, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v55);
      }
      uint64_t v81 = (uint64_t)v64;
      uint64_t v82 = v66;
      goto LABEL_29;
    }
    goto LABEL_21;
  }
  if (v68)
  {
    sub_10017DF4C((uint64_t)v64, &qword_100E6BF10);
LABEL_21:
    size_t v73 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v74 = v64;
    uint64_t v75 = v65;
LABEL_22:
    memcpy(v74, v75, v73);
    goto LABEL_30;
  }
  *(void *)uint64_t v64 = *(void *)v65;
  swift_retain();
  swift_release();
  uint64_t v76 = *(int *)(v66 + 48);
  uint64_t v77 = (uint64_t)&v64[v76];
  uint64_t v78 = (uint64_t)&v65[v76];
  int v79 = _s7Weather24LocationCompositionStateOwet_0(v77, 1, v55);
  int v80 = _s7Weather24LocationCompositionStateOwet_0(v78, 1, v55);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v77, v78, v55);
      uint64_t v81 = v77;
      uint64_t v82 = v55;
LABEL_29:
      _s7Weather24LocationCompositionStateOwst_0(v81, 0, 1, v82);
      goto LABEL_30;
    }
    goto LABEL_56;
  }
  uint64_t v173 = *(void *)(v55 - 8);
  if (v80)
  {
    (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v77, v55);
LABEL_56:
    size_t v73 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v74 = (void *)v77;
    uint64_t v75 = (const void *)v78;
    goto LABEL_22;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v173 + 24))(v77, v78, v55);
LABEL_30:
  *(void *)&v24[v26[15]] = *(void *)&v25[v26[15]];
  uint64_t v83 = v26[16];
  uint64_t v84 = &v24[v83];
  uint64_t v85 = &v25[v83];
  uint64_t v86 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 24))(v84, v85, v86);
  *(void *)&v24[v26[17]] = *(void *)&v25[v26[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v218 = *(void *)(v55 - 8);
  uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v218 + 24);
  v87(&v24[v26[18]], &v25[v26[18]], v55);
  v87(&v24[v26[19]], &v25[v26[19]], v55);
  uint64_t v217 = v87;
  v87(&v24[v26[20]], &v25[v26[20]], v55);
  uint64_t v88 = v26[21];
  uint64_t v89 = &v24[v88];
  uint64_t v90 = &v25[v88];
  uint64_t v91 = type metadata accessor for DetailChartDataElement();
  LODWORD(v84) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v91);
  int v92 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91);
  if (v84)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v91);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  uint64_t v93 = *(void *)(v91 - 8);
  if (v92)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v89, v91);
LABEL_35:
    uint64_t v94 = sub_10017DF08(&qword_100E6B640);
    memcpy(v89, v90, *(void *)(*(void *)(v94 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(char *, char *, uint64_t))(v93 + 24))(v89, v90, v91);
LABEL_36:
  uint64_t v95 = v221;
  *(void *)&v24[v26[22]] = *(void *)&v25[v26[22]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = v26[23];
  uint64_t v97 = &v24[v96];
  uint64_t v98 = &v25[v96];
  uint64_t v99 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 24))(v97, v98, v99);
  *(void *)&v24[v26[24]] = *(void *)&v25[v26[24]];
  *(void *)&v24[v26[25]] = *(void *)&v25[v26[25]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v100 = v26[26];
  uint64_t v101 = &v24[v100];
  uint64_t v102 = &v25[v100];
  uint64_t v103 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 24))(v101, v102, v103);
  uint64_t v104 = v26[27];
  uint64_t v105 = &v24[v104];
  uint64_t v106 = &v25[v104];
  uint64_t v107 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 24))(v105, v106, v107);
  uint64_t v108 = v26[28];
  uint64_t v109 = &v24[v108];
  uint64_t v110 = &v25[v108];
  *(void *)uint64_t v109 = *(void *)v110;
  *((void *)v109 + 1) = *((void *)v110 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v111 = v26[29];
  uint64_t v112 = &v24[v111];
  uint64_t v113 = &v25[v111];
  *(void *)uint64_t v112 = *(void *)v113;
  *((void *)v112 + 1) = *((void *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v114 = v26[30];
  uint64_t v115 = &v24[v114];
  uint64_t v116 = &v25[v114];
  *(void *)uint64_t v115 = *(void *)v116;
  *((void *)v115 + 1) = *((void *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v117 = v26[31];
  uint64_t v118 = &v24[v117];
  uint64_t v119 = &v25[v117];
  *(void *)uint64_t v118 = *(void *)v119;
  *((void *)v118 + 1) = *((void *)v119 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v120 = v26[32];
  uint64_t v121 = &v24[v120];
  uint64_t v122 = &v25[v120];
  *(void *)uint64_t v121 = *(void *)v122;
  *((void *)v121 + 1) = *((void *)v122 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v123 = v26[33];
  uint64_t v124 = &v24[v123];
  uint64_t v125 = &v25[v123];
  uint64_t v126 = *((void *)v125 + 1);
  *(void *)uint64_t v124 = *(void *)v125;
  *((void *)v124 + 1) = v126;
  swift_retain();
  swift_release();
  uint64_t v127 = v223;
  uint64_t v128 = *(int *)(v223 + 24);
  uint64_t v129 = v222;
  uint64_t v130 = &v222[v128];
  uint64_t v131 = &v221[v128];
  uint64_t v132 = (int *)type metadata accessor for LollipopViewModel();
  LODWORD(v105) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, (uint64_t)v132);
  int v133 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, (uint64_t)v132);
  if (v105)
  {
    if (!v133)
    {
      long long v215 = v5;
      *(void *)uint64_t v130 = *(void *)v131;
      *((void *)v130 + 1) = *((void *)v131 + 1);
      uint64_t v134 = v132[5];
      uint64_t v135 = &v130[v134];
      uint64_t v136 = &v131[v134];
      uint64_t v137 = type metadata accessor for DetailChartDataPoint();
      uint64_t v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
      swift_bridgeObjectRetain();
      v138(v135, v136, v137);
      *(void *)&v130[v132[6]] = *(void *)&v131[v132[6]];
      uint64_t v139 = v132[7];
      uint64_t v140 = &v130[v139];
      uint64_t v141 = &v131[v139];
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)uint64_t v140 = *(void *)v141;
        *((void *)v140 + 1) = *((void *)v141 + 1);
        uint64_t v154 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v155 = v154[5];
        uint64_t v213 = &v141[v155];
        long long v214 = &v140[v155];
        uint64_t v156 = type metadata accessor for AttributedString();
        uint64_t v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
        swift_bridgeObjectRetain();
        v157(v214, v213, v156);
        uint64_t v158 = v154[6];
        uint64_t v159 = &v140[v158];
        uint64_t v160 = &v141[v158];
        *(void *)uint64_t v159 = *(void *)v160;
        *((void *)v159 + 1) = *((void *)v160 + 1);
        uint64_t v161 = v154[7];
        uint64_t v162 = &v140[v161];
        uint64_t v163 = &v141[v161];
        *(void *)uint64_t v162 = *(void *)v163;
        *((void *)v162 + 1) = *((void *)v163 + 1);
        uint64_t v164 = v154[8];
        uint64_t v165 = &v140[v164];
        uint64_t v166 = &v141[v164];
        *(void *)uint64_t v165 = *(void *)v166;
        *((void *)v165 + 1) = *((void *)v166 + 1);
        uint64_t v167 = v154[9];
        uint64_t v168 = &v140[v167];
        uint64_t v169 = &v141[v167];
        *(void *)uint64_t v168 = *(void *)v169;
        *((void *)v168 + 1) = *((void *)v169 + 1);
        uint64_t v170 = v154[10];
        uint64_t v171 = &v140[v170];
        uint64_t v172 = &v141[v170];
        *(void *)uint64_t v171 = *(void *)v172;
        *((void *)v171 + 1) = *((void *)v172 + 1);
        v140[v154[11]] = v141[v154[11]];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(void *)uint64_t v140 = *(void *)v141;
          *((void *)v140 + 1) = *((void *)v141 + 1);
          *((void *)v140 + 2) = *((void *)v141 + 2);
          *((void *)v140 + 3) = *((void *)v141 + 3);
          *((void *)v140 + 4) = *((void *)v141 + 4);
          *((void *)v140 + 5) = *((void *)v141 + 5);
          goto LABEL_53;
        }
        *(void *)uint64_t v140 = *(void *)v141;
        *((void *)v140 + 1) = *((void *)v141 + 1);
        *((void *)v140 + 2) = *((void *)v141 + 2);
        *((void *)v140 + 3) = *((void *)v141 + 3);
        *((void *)v140 + 4) = *((void *)v141 + 4);
        *((void *)v140 + 5) = *((void *)v141 + 5);
        *((void *)v140 + 6) = *((void *)v141 + 6);
        *((void *)v140 + 7) = *((void *)v141 + 7);
        v140[64] = v141[64];
        v140[65] = v141[65];
      }
      swift_bridgeObjectRetain();
LABEL_53:
      uint64_t v5 = v215;
      uint64_t v129 = v222;
      uint64_t v127 = v223;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, (uint64_t)v132);
      uint64_t v144 = v220;
      uint64_t v95 = v221;
      goto LABEL_60;
    }
LABEL_43:
    uint64_t v143 = sub_10017DF08(&qword_100E82140);
    memcpy(v130, v131, *(void *)(*(void *)(v143 - 8) + 64));
    uint64_t v144 = v220;
    goto LABEL_60;
  }
  if (v133)
  {
    sub_100778234((uint64_t)v130, (void (*)(void))type metadata accessor for LollipopViewModel);
    goto LABEL_43;
  }
  *(void *)uint64_t v130 = *(void *)v131;
  *((void *)v130 + 1) = *((void *)v131 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v145 = v132[5];
  uint64_t v146 = &v130[v145];
  uint64_t v147 = &v131[v145];
  uint64_t v148 = type metadata accessor for DetailChartDataPoint();
  uint64_t v149 = v147;
  uint64_t v127 = v223;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 24))(v146, v149, v148);
  *(void *)&v130[v132[6]] = *(void *)&v131[v132[6]];
  uint64_t v144 = v220;
  if (v5 != v220)
  {
    uint64_t v150 = v132[7];
    uint64_t v151 = (uint64_t)&v130[v150];
    uint64_t v152 = &v131[v150];
    sub_100778234(v151, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    type metadata accessor for LollipopDetailViewModel(0);
    int v153 = swift_getEnumCaseMultiPayload();
    if (v153 == 2)
    {
      *(void *)uint64_t v151 = *(void *)v152;
      *(void *)(v151 + 8) = *((void *)v152 + 1);
      uint64_t v174 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v175 = v174[5];
      uint64_t v216 = v151 + v175;
      long long v176 = &v152[v175];
      uint64_t v177 = type metadata accessor for AttributedString();
      uint64_t v178 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v177 - 8) + 16);
      swift_bridgeObjectRetain();
      v178(v216, v176, v177);
      uint64_t v179 = v174[6];
      uint64_t v180 = (void *)(v151 + v179);
      long long v181 = &v152[v179];
      *uint64_t v180 = *(void *)v181;
      v180[1] = *((void *)v181 + 1);
      uint64_t v182 = v174[7];
      uint64_t v183 = (void *)(v151 + v182);
      uint64_t v184 = &v152[v182];
      *uint64_t v183 = *(void *)v184;
      v183[1] = *((void *)v184 + 1);
      uint64_t v185 = v174[8];
      uint64_t v186 = (void *)(v151 + v185);
      uint64_t v187 = &v152[v185];
      *uint64_t v186 = *(void *)v187;
      v186[1] = *((void *)v187 + 1);
      uint64_t v188 = v174[9];
      uint64_t v189 = (void *)(v151 + v188);
      uint64_t v190 = &v152[v188];
      *uint64_t v189 = *(void *)v190;
      v189[1] = *((void *)v190 + 1);
      uint64_t v191 = v174[10];
      uint64_t v192 = (void *)(v151 + v191);
      uint64_t v193 = &v152[v191];
      *uint64_t v192 = *(void *)v193;
      v192[1] = *((void *)v193 + 1);
      uint64_t v194 = v174[11];
      uint64_t v95 = v221;
      *(unsigned char *)(v151 + v194) = v152[v194];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v129 = v222;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v144 = v220;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(void *)uint64_t v151 = *(void *)v152;
      *(void *)(v151 + 8) = *((void *)v152 + 1);
      *(void *)(v151 + 16) = *((void *)v152 + 2);
      *(void *)(v151 + 24) = *((void *)v152 + 3);
      *(void *)(v151 + 32) = *((void *)v152 + 4);
      *(void *)(v151 + 40) = *((void *)v152 + 5);
      if (v153 == 1)
      {
        *(void *)(v151 + 48) = *((void *)v152 + 6);
        *(void *)(v151 + 56) = *((void *)v152 + 7);
        *(unsigned char *)(v151 + 64) = v152[64];
        *(unsigned char *)(v151 + 65) = v152[65];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v95 = v221;
        swift_bridgeObjectRetain();
        uint64_t v129 = v222;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v127 = v223;
  }
LABEL_60:
  uint64_t v195 = *(int *)(v127 + 28);
  uint64_t v196 = &v129[v195];
  uint64_t v197 = &v95[v195];
  uint64_t v198 = type metadata accessor for ConditionDetailChartFooterViewModel();
  int v199 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v198);
  int v200 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v198);
  if (v199)
  {
    if (!v200)
    {
      uint64_t v201 = v219;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v202 = type metadata accessor for TemperatureChartKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v196, v197, v202);
      }
      else
      {
        *(void *)uint64_t v196 = *(void *)v197;
        *((void *)v196 + 1) = *((void *)v197 + 1);
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v198);
      goto LABEL_74;
    }
LABEL_66:
    uint64_t v203 = sub_10017DF08(&qword_100E820F0);
    memcpy(v196, v197, *(void *)(*(void *)(v203 - 8) + 64));
    uint64_t v201 = v219;
    goto LABEL_74;
  }
  if (v200)
  {
    sub_100778234((uint64_t)v196, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    goto LABEL_66;
  }
  uint64_t v201 = v219;
  if (v5 != v144)
  {
    sub_100778234((uint64_t)v196, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v204 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v196, v197, v204);
    }
    else
    {
      *(void *)uint64_t v196 = *(void *)v197;
      *((void *)v196 + 1) = *((void *)v197 + 1);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_74:
  *((unsigned char *)v5 + v201[8]) = *((unsigned char *)v144 + v201[8]);
  uint64_t v205 = v201[9];
  long long v206 = (char *)v5 + v205;
  uint64_t v207 = (char *)v144 + v205;
  int v208 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5 + v205, 1, v55);
  int v209 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, v55);
  if (!v208)
  {
    if (!v209)
    {
      v217(v206, v207, v55);
      goto LABEL_80;
    }
    (*(void (**)(char *, uint64_t))(v218 + 8))(v206, v55);
    goto LABEL_79;
  }
  if (v209)
  {
LABEL_79:
    uint64_t v210 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v206, v207, *(void *)(*(void *)(v210 - 8) + 64));
    goto LABEL_80;
  }
  (*(void (**)(char *, char *, uint64_t))(v218 + 16))(v206, v207, v55);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v55);
LABEL_80:
  uint64_t v211 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v206[*(int *)(v211 + 28)] = *(void *)&v207[*(int *)(v211 + 28)];
  swift_retain();
  swift_release();
  sub_1000C1E18((void *)((char *)v5 + v201[10]), (void *)((char *)v144 + v201[10]));
  *(void *)((char *)v5 + v201[11]) = *(void *)((char *)v144 + v201[11]);
  return v5;
}

uint64_t sub_100778234(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return a1;
}

char *sub_100778284(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v117 = a3;
  uint64_t v118 = a2;
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  uint64_t v19 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  v17[*(int *)(v20 + 20)] = v18[*(int *)(v20 + 20)];
  v17[*(int *)(v20 + 24)] = v18[*(int *)(v20 + 24)];
  uint64_t v119 = v18;
  uint64_t v120 = type metadata accessor for DetailChartViewModel();
  uint64_t v21 = *(int *)(v120 + 20);
  uint64_t v22 = &v17[v21];
  uint64_t v23 = &v18[v21];
  *(_OWORD *)&v17[v21] = *(_OWORD *)&v18[v21];
  uint64_t v24 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v25 = v24[5];
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  uint64_t v28 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  *(void *)&v22[v24[6]] = *(void *)&v23[v24[6]];
  uint64_t v29 = v24[7];
  uint64_t v30 = &v22[v29];
  uint64_t v31 = &v23[v29];
  uint64_t v32 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  *(void *)&v22[v24[8]] = *(void *)&v23[v24[8]];
  *(void *)&v22[v24[9]] = *(void *)&v23[v24[9]];
  *(_OWORD *)&v22[v24[10]] = *(_OWORD *)&v23[v24[10]];
  uint64_t v33 = v24[11];
  uint64_t v34 = &v22[v33];
  uint64_t v35 = &v23[v33];
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 9) = *(_OWORD *)(v35 + 9);
  uint64_t v36 = v24[12];
  uint64_t v37 = &v22[v36];
  uint64_t v38 = &v23[v36];
  *(void *)&v22[v36] = *(void *)&v23[v36];
  uint64_t v39 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v40 = &v37[v39];
  id v41 = &v38[v39];
  uint64_t v42 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
  {
    uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
  }
  uint64_t v44 = v24[13];
  uint64_t v45 = &v22[v44];
  uint64_t v46 = &v23[v44];
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v46[8];
  uint64_t v47 = v24[14];
  unsigned __int8 v48 = &v22[v47];
  uint64_t v49 = &v23[v47];
  uint64_t v50 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
  {
    uint64_t v51 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    *(void *)unsigned __int8 v48 = *(void *)v49;
    uint64_t v52 = *(int *)(v50 + 48);
    uint64_t v53 = &v48[v52];
    uint64_t v54 = &v49[v52];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v42))
    {
      uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v53, v54, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v42);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
  }
  *(void *)&v22[v24[15]] = *(void *)&v23[v24[15]];
  uint64_t v56 = v24[16];
  uint64_t v57 = &v22[v56];
  uint64_t v58 = &v23[v56];
  uint64_t v59 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
  *(void *)&v22[v24[17]] = *(void *)&v23[v24[17]];
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32);
  v60(&v22[v24[18]], &v23[v24[18]], v42);
  v60(&v22[v24[19]], &v23[v24[19]], v42);
  uint64_t v116 = v60;
  v60(&v22[v24[20]], &v23[v24[20]], v42);
  uint64_t v61 = v24[21];
  uint64_t v62 = &v22[v61];
  uint64_t v63 = &v23[v61];
  uint64_t v64 = type metadata accessor for DetailChartDataElement();
  uint64_t v65 = v120;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
  {
    uint64_t v66 = sub_10017DF08(&qword_100E6B640);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
  }
  *(void *)&v22[v24[22]] = *(void *)&v23[v24[22]];
  uint64_t v67 = v24[23];
  int v68 = &v22[v67];
  uint64_t v69 = &v23[v67];
  uint64_t v70 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
  *(void *)&v22[v24[24]] = *(void *)&v23[v24[24]];
  *(void *)&v22[v24[25]] = *(void *)&v23[v24[25]];
  uint64_t v71 = v24[26];
  uint64_t v72 = &v22[v71];
  size_t v73 = &v23[v71];
  uint64_t v74 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
  uint64_t v75 = v24[27];
  uint64_t v76 = &v22[v75];
  uint64_t v77 = &v23[v75];
  uint64_t v78 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
  *(_OWORD *)&v22[v24[28]] = *(_OWORD *)&v23[v24[28]];
  *(_OWORD *)&v22[v24[29]] = *(_OWORD *)&v23[v24[29]];
  *(_OWORD *)&v22[v24[30]] = *(_OWORD *)&v23[v24[30]];
  *(_OWORD *)&v22[v24[31]] = *(_OWORD *)&v23[v24[31]];
  *(_OWORD *)&v22[v24[32]] = *(_OWORD *)&v23[v24[32]];
  *(_OWORD *)&v22[v24[33]] = *(_OWORD *)&v23[v24[33]];
  uint64_t v79 = *(int *)(v120 + 24);
  int v80 = &v17[v79];
  uint64_t v81 = &v119[v79];
  uint64_t v82 = (int *)type metadata accessor for LollipopViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, (uint64_t)v82))
  {
    uint64_t v83 = sub_10017DF08(&qword_100E82140);
    memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
    uint64_t v85 = v117;
    uint64_t v84 = v118;
  }
  else
  {
    *(_OWORD *)int v80 = *(_OWORD *)v81;
    uint64_t v86 = v82[5];
    uint64_t v87 = &v80[v86];
    uint64_t v88 = &v81[v86];
    uint64_t v89 = type metadata accessor for DetailChartDataPoint();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
    *(void *)&v80[v82[6]] = *(void *)&v81[v82[6]];
    uint64_t v90 = v82[7];
    uint64_t v91 = &v80[v90];
    int v92 = &v81[v90];
    uint64_t v93 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      uint64_t v94 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v95 = v94[5];
      uint64_t v114 = &v92[v95];
      uint64_t v115 = &v91[v95];
      uint64_t v96 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v115, v114, v96);
      *(_OWORD *)&v91[v94[6]] = *(_OWORD *)&v92[v94[6]];
      *(_OWORD *)&v91[v94[7]] = *(_OWORD *)&v92[v94[7]];
      *(_OWORD *)&v91[v94[8]] = *(_OWORD *)&v92[v94[8]];
      *(_OWORD *)&v91[v94[9]] = *(_OWORD *)&v92[v94[9]];
      *(_OWORD *)&v91[v94[10]] = *(_OWORD *)&v92[v94[10]];
      v91[v94[11]] = v92[v94[11]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    uint64_t v85 = v117;
    uint64_t v84 = v118;
    uint64_t v65 = v120;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, (uint64_t)v82);
  }
  uint64_t v97 = *(int *)(v65 + 28);
  uint64_t v98 = &v17[v97];
  uint64_t v99 = &v119[v97];
  uint64_t v100 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
  {
    uint64_t v101 = sub_10017DF08(&qword_100E820F0);
    memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v102 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v98, v99, v102);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
  }
  uint64_t v103 = v85[9];
  a1[v85[8]] = v84[v85[8]];
  uint64_t v104 = &a1[v103];
  uint64_t v105 = &v84[v103];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v84[v103], 1, v42))
  {
    uint64_t v106 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    v116(v104, v105, v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v42);
  }
  uint64_t v107 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v104[*(int *)(v107 + 28)] = *(void *)&v105[*(int *)(v107 + 28)];
  uint64_t v108 = v85[10];
  uint64_t v109 = v85[11];
  uint64_t v110 = &a1[v108];
  uint64_t v111 = &v84[v108];
  *((void *)v110 + 4) = *((void *)v111 + 4);
  long long v112 = *((_OWORD *)v111 + 1);
  *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
  *((_OWORD *)v110 + 1) = v112;
  *(void *)&a1[v109] = *(void *)&v84[v109];
  return a1;
}

char *sub_100778DE4(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C((uint64_t)a1, &qword_100E62CB8);
    uint64_t v6 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_10017DF4C((uint64_t)&a1[v8], &qword_100E66E50);
    uint64_t v11 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_10018F6D8(v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v195 = a2;
  uint64_t v196 = a1;
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  v20[*(int *)(v23 + 20)] = v21[*(int *)(v23 + 20)];
  v20[*(int *)(v23 + 24)] = v21[*(int *)(v23 + 24)];
  uint64_t v191 = v20;
  uint64_t v193 = type metadata accessor for DetailChartViewModel();
  uint64_t v24 = *(int *)(v193 + 20);
  uint64_t v25 = &v20[v24];
  uint64_t v194 = v21;
  uint64_t v26 = &v21[v24];
  uint64_t v27 = *(void *)&v21[v24 + 8];
  *(void *)uint64_t v25 = *(void *)&v21[v24];
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v29 = v28[5];
  uint64_t v30 = &v25[v29];
  uint64_t v31 = &v26[v29];
  uint64_t v32 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  *(void *)&v25[v28[6]] = *(void *)&v26[v28[6]];
  swift_bridgeObjectRelease();
  uint64_t v33 = v28[7];
  uint64_t v34 = &v25[v33];
  uint64_t v35 = &v26[v33];
  uint64_t v36 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  *(void *)&v25[v28[8]] = *(void *)&v26[v28[8]];
  swift_bridgeObjectRelease();
  *(void *)&v25[v28[9]] = *(void *)&v26[v28[9]];
  swift_bridgeObjectRelease();
  *(_OWORD *)&v25[v28[10]] = *(_OWORD *)&v26[v28[10]];
  uint64_t v37 = v28[11];
  uint64_t v38 = &v25[v37];
  uint64_t v39 = &v26[v37];
  uint64_t v40 = *((void *)v39 + 2);
  char v41 = v39[24];
  uint64_t v42 = *(void **)v38;
  uint64_t v43 = (void *)*((void *)v38 + 1);
  uint64_t v44 = *((void *)v38 + 2);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *((void *)v38 + 2) = v40;
  unsigned __int8 v45 = v38[24];
  v38[24] = v41;
  sub_10027D954(v42, v43, v44, v45);
  uint64_t v46 = v28[12];
  uint64_t v47 = &v25[v46];
  unsigned __int8 v48 = &v26[v46];
  *(void *)&v25[v46] = *(void *)&v26[v46];
  uint64_t v49 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v50 = &v47[v49];
  uint64_t v51 = &v48[v49];
  uint64_t v52 = type metadata accessor for Date();
  LODWORD(v48) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v52);
  int v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52);
  uint64_t v190 = a3;
  if (v48)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v54 = *(void *)(v52 - 8);
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v50, v52);
LABEL_13:
    uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v54 + 40))(v50, v51, v52);
LABEL_14:
  uint64_t v56 = v191;
  uint64_t v57 = v28[13];
  uint64_t v58 = &v25[v57];
  uint64_t v59 = &v26[v57];
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v59[8];
  uint64_t v60 = v28[14];
  uint64_t v61 = &v25[v60];
  uint64_t v62 = &v26[v60];
  uint64_t v63 = sub_10017DF08(&qword_100E6BF10);
  int v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v63);
  int v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63);
  if (v64)
  {
    if (!v65)
    {
      *(void *)uint64_t v61 = *(void *)v62;
      uint64_t v66 = *(int *)(v63 + 48);
      uint64_t v67 = &v61[v66];
      int v68 = &v62[v66];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v52))
      {
        uint64_t v69 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v67, v68, v52);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v52);
      }
      uint64_t v74 = (uint64_t)v61;
      uint64_t v75 = v63;
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v65)
  {
    sub_10017DF4C((uint64_t)v61, &qword_100E6BF10);
LABEL_20:
    uint64_t v70 = type metadata accessor for ChartViewModel.Background(0);
LABEL_21:
    memcpy(v61, v62, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_29;
  }
  *(void *)uint64_t v61 = *(void *)v62;
  swift_release();
  uint64_t v71 = *(int *)(v63 + 48);
  v61 += v71;
  v62 += v71;
  int v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v52);
  int v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v52);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v61, v62, v52);
      uint64_t v74 = (uint64_t)v61;
      uint64_t v75 = v52;
LABEL_28:
      _s7Weather24LocationCompositionStateOwst_0(v74, 0, 1, v75);
      goto LABEL_29;
    }
    goto LABEL_71;
  }
  uint64_t v187 = *(void *)(v52 - 8);
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v187 + 8))(v61, v52);
LABEL_71:
    uint64_t v70 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v187 + 40))(v61, v62, v52);
LABEL_29:
  *(void *)&v25[v28[15]] = *(void *)&v26[v28[15]];
  uint64_t v76 = v28[16];
  uint64_t v77 = &v25[v76];
  uint64_t v78 = &v26[v76];
  uint64_t v79 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
  *(void *)&v25[v28[17]] = *(void *)&v26[v28[17]];
  swift_bridgeObjectRelease();
  uint64_t v189 = *(void *)(v52 - 8);
  int v80 = *(void (**)(char *, char *, uint64_t))(v189 + 40);
  v80(&v25[v28[18]], &v26[v28[18]], v52);
  v80(&v25[v28[19]], &v26[v28[19]], v52);
  uint64_t v188 = v80;
  v80(&v25[v28[20]], &v26[v28[20]], v52);
  uint64_t v81 = v28[21];
  uint64_t v82 = &v25[v81];
  uint64_t v83 = &v26[v81];
  uint64_t v84 = type metadata accessor for DetailChartDataElement();
  LODWORD(v78) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v84);
  int v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84);
  if (v78)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  uint64_t v86 = *(void *)(v84 - 8);
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v82, v84);
LABEL_34:
    uint64_t v87 = sub_10017DF08(&qword_100E6B640);
    memcpy(v82, v83, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v86 + 40))(v82, v83, v84);
LABEL_35:
  *(void *)&v25[v28[22]] = *(void *)&v26[v28[22]];
  swift_bridgeObjectRelease();
  uint64_t v88 = v28[23];
  uint64_t v89 = &v25[v88];
  uint64_t v90 = &v26[v88];
  uint64_t v91 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 40))(v89, v90, v91);
  *(void *)&v25[v28[24]] = *(void *)&v26[v28[24]];
  *(void *)&v25[v28[25]] = *(void *)&v26[v28[25]];
  swift_bridgeObjectRelease();
  uint64_t v92 = v28[26];
  uint64_t v93 = &v25[v92];
  uint64_t v94 = &v26[v92];
  uint64_t v95 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 40))(v93, v94, v95);
  uint64_t v96 = v28[27];
  uint64_t v97 = &v25[v96];
  uint64_t v98 = &v26[v96];
  uint64_t v99 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 40))(v97, v98, v99);
  uint64_t v100 = v28[28];
  uint64_t v101 = &v25[v100];
  uint64_t v102 = &v26[v100];
  uint64_t v104 = *(void *)v102;
  uint64_t v103 = *((void *)v102 + 1);
  *(void *)uint64_t v101 = v104;
  *((void *)v101 + 1) = v103;
  swift_bridgeObjectRelease();
  uint64_t v105 = v28[29];
  uint64_t v106 = &v25[v105];
  uint64_t v107 = &v26[v105];
  uint64_t v109 = *(void *)v107;
  uint64_t v108 = *((void *)v107 + 1);
  *(void *)uint64_t v106 = v109;
  *((void *)v106 + 1) = v108;
  swift_bridgeObjectRelease();
  uint64_t v110 = v28[30];
  uint64_t v111 = &v25[v110];
  long long v112 = &v26[v110];
  uint64_t v114 = *(void *)v112;
  uint64_t v113 = *((void *)v112 + 1);
  *(void *)uint64_t v111 = v114;
  *((void *)v111 + 1) = v113;
  swift_bridgeObjectRelease();
  uint64_t v115 = v28[31];
  uint64_t v116 = &v25[v115];
  uint64_t v117 = &v26[v115];
  uint64_t v119 = *(void *)v117;
  uint64_t v118 = *((void *)v117 + 1);
  *(void *)uint64_t v116 = v119;
  *((void *)v116 + 1) = v118;
  swift_bridgeObjectRelease();
  uint64_t v120 = v28[32];
  uint64_t v121 = &v25[v120];
  uint64_t v122 = &v26[v120];
  uint64_t v124 = *(void *)v122;
  uint64_t v123 = *((void *)v122 + 1);
  *(void *)uint64_t v121 = v124;
  *((void *)v121 + 1) = v123;
  swift_bridgeObjectRelease();
  *(_OWORD *)&v25[v28[33]] = *(_OWORD *)&v26[v28[33]];
  swift_release();
  uint64_t v126 = v193;
  uint64_t v125 = v194;
  uint64_t v127 = *(int *)(v193 + 24);
  uint64_t v128 = &v191[v127];
  uint64_t v129 = &v194[v127];
  uint64_t v130 = (int *)type metadata accessor for LollipopViewModel();
  LODWORD(v97) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, (uint64_t)v130);
  int v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, (uint64_t)v130);
  if (!v97)
  {
    if (!v131)
    {
      uint64_t v151 = *((void *)v129 + 1);
      *(void *)uint64_t v128 = *(void *)v129;
      *((void *)v128 + 1) = v151;
      swift_bridgeObjectRelease();
      uint64_t v152 = v130[5];
      int v153 = &v128[v152];
      uint64_t v154 = &v129[v152];
      uint64_t v155 = type metadata accessor for DetailChartDataPoint();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 40))(v153, v154, v155);
      *(void *)&v128[v130[6]] = *(void *)&v129[v130[6]];
      if (v196 == v195) {
        goto LABEL_49;
      }
      uint64_t v156 = v130[7];
      uint64_t v157 = &v128[v156];
      uint64_t v158 = &v129[v156];
      sub_100778234((uint64_t)v157, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
      uint64_t v159 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)uint64_t v157 = *(_OWORD *)v158;
        uint64_t v160 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v161 = v160[5];
        uint64_t v162 = &v157[v161];
        uint64_t v192 = &v158[v161];
        uint64_t v163 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v162, v192, v163);
        *(_OWORD *)&v157[v160[6]] = *(_OWORD *)&v158[v160[6]];
        *(_OWORD *)&v157[v160[7]] = *(_OWORD *)&v158[v160[7]];
        *(_OWORD *)&v157[v160[8]] = *(_OWORD *)&v158[v160[8]];
        *(_OWORD *)&v157[v160[9]] = *(_OWORD *)&v158[v160[9]];
        *(_OWORD *)&v157[v160[10]] = *(_OWORD *)&v158[v160[10]];
        v157[v160[11]] = v158[v160[11]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_49;
      }
      size_t v148 = *(void *)(*(void *)(v159 - 8) + 64);
      uint64_t v149 = v157;
      uint64_t v150 = v158;
LABEL_42:
      memcpy(v149, v150, v148);
      goto LABEL_49;
    }
    sub_100778234((uint64_t)v128, (void (*)(void))type metadata accessor for LollipopViewModel);
LABEL_41:
    size_t v148 = *(void *)(*(void *)(sub_10017DF08(&qword_100E82140) - 8) + 64);
    uint64_t v149 = v128;
    uint64_t v150 = v129;
    goto LABEL_42;
  }
  if (v131) {
    goto LABEL_41;
  }
  *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
  uint64_t v132 = v130[5];
  int v133 = &v128[v132];
  uint64_t v134 = &v129[v132];
  uint64_t v135 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v133, v134, v135);
  *(void *)&v128[v130[6]] = *(void *)&v129[v130[6]];
  uint64_t v136 = v130[7];
  uint64_t v137 = &v128[v136];
  uint64_t v138 = &v129[v136];
  uint64_t v139 = type metadata accessor for LollipopDetailViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
    uint64_t v140 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v141 = v140[5];
    uint64_t v142 = &v137[v141];
    uint64_t v143 = &v138[v141];
    uint64_t v144 = type metadata accessor for AttributedString();
    uint64_t v145 = v142;
    uint64_t v56 = v191;
    uint64_t v146 = v143;
    uint64_t v125 = v194;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v145, v146, v144);
    *(_OWORD *)&v137[v140[6]] = *(_OWORD *)&v138[v140[6]];
    *(_OWORD *)&v137[v140[7]] = *(_OWORD *)&v138[v140[7]];
    *(_OWORD *)&v137[v140[8]] = *(_OWORD *)&v138[v140[8]];
    *(_OWORD *)&v137[v140[9]] = *(_OWORD *)&v138[v140[9]];
    *(_OWORD *)&v137[v140[10]] = *(_OWORD *)&v138[v140[10]];
    uint64_t v147 = v140[11];
    uint64_t v126 = v193;
    v137[v147] = v138[v147];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, (uint64_t)v130);
LABEL_49:
  uint64_t v164 = *(int *)(v126 + 28);
  uint64_t v165 = &v56[v164];
  uint64_t v166 = &v125[v164];
  uint64_t v167 = type metadata accessor for ConditionDetailChartFooterViewModel();
  int v168 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v165, 1, v167);
  int v169 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, v167);
  if (v168)
  {
    if (!v169)
    {
      uint64_t v171 = v195;
      uint64_t v170 = v196;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v172 = type metadata accessor for TemperatureChartKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 32))(v165, v166, v172);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v165, v166, *(void *)(*(void *)(v167 - 8) + 64));
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, v167);
      goto LABEL_61;
    }
LABEL_55:
    uint64_t v173 = sub_10017DF08(&qword_100E820F0);
    memcpy(v165, v166, *(void *)(*(void *)(v173 - 8) + 64));
    uint64_t v171 = v195;
    uint64_t v170 = v196;
    goto LABEL_61;
  }
  if (v169)
  {
    sub_100778234((uint64_t)v165, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    goto LABEL_55;
  }
  uint64_t v171 = v195;
  uint64_t v170 = v196;
  if (v196 != v195)
  {
    sub_100778234((uint64_t)v165, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v174 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v165, v166, v174);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v165, v166, *(void *)(*(void *)(v167 - 8) + 64));
    }
  }
LABEL_61:
  uint64_t v175 = v190[9];
  v170[v190[8]] = v171[v190[8]];
  long long v176 = &v170[v175];
  uint64_t v177 = &v171[v175];
  int v178 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v170[v175], 1, v52);
  int v179 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v52);
  if (!v178)
  {
    if (!v179)
    {
      v188(v176, v177, v52);
      goto LABEL_67;
    }
    (*(void (**)(char *, uint64_t))(v189 + 8))(v176, v52);
    goto LABEL_66;
  }
  if (v179)
  {
LABEL_66:
    uint64_t v180 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v176, v177, *(void *)(*(void *)(v180 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v176, v177, v52);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v52);
LABEL_67:
  uint64_t v181 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v176[*(int *)(v181 + 28)] = *(void *)&v177[*(int *)(v181 + 28)];
  swift_release();
  uint64_t v182 = v190[10];
  uint64_t v183 = &v170[v182];
  uint64_t v184 = &v171[v182];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v170[v182]);
  long long v185 = *((_OWORD *)v184 + 1);
  *(_OWORD *)uint64_t v183 = *(_OWORD *)v184;
  *((_OWORD *)v183 + 1) = v185;
  *((void *)v183 + 4) = *((void *)v184 + 4);
  *(void *)&v170[v190[11]] = *(void *)&v171[v190[11]];
  return v170;
}

uint64_t sub_100779FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100779FC0);
}

uint64_t sub_100779FC0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E63BF0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_10:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E6D908);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_9:
    uint64_t v9 = a1 + v12;
    goto LABEL_10;
  }
  type metadata accessor for DetailChartViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[7];
    goto LABEL_9;
  }
  sub_10017DF08(&qword_100E7DDF8);
  sub_100162F30();
  if (*(_DWORD *)(v16 + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = a3[9];
    goto LABEL_9;
  }
  unint64_t v18 = *(void *)(a1 + a3[10] + 24);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

uint64_t sub_10077A0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10077A0E0);
}

void sub_10077A0E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E63BF0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for DetailChartViewModel();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        sub_10017DF08(&qword_100E7DDF8);
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) != a3)
        {
          *(void *)(a1 + a4[10] + 24) = (a2 - 1);
          return;
        }
        uint64_t v10 = v17;
        uint64_t v14 = a4[9];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DetailChart(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E92F88);
}

void sub_10077A208()
{
  sub_100046D0C(319, (unint64_t *)&qword_100E63C70, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v0 <= 0x3F)
  {
    sub_100046D0C(319, (unint64_t *)&qword_100E6D980, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F)
    {
      type metadata accessor for DetailChartViewModel();
      if (v2 <= 0x3F)
      {
        sub_10022728C();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10077A3A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10077A3C4()
{
  sub_10017DF08(&qword_100E92FD8);
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = sub_10017DF08(&qword_100E92FE0);
  __chkstk_darwin(v5 - 8);
  sub_1001626E0();
  uint64_t v8 = (uint64_t *)(v7 - v6);
  sub_10017DF08(&qword_100E92FE8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = v0 + *(int *)(type metadata accessor for DetailChart(0) + 24);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_100195B7C(*(void *)v13, v15);
  sub_10014E71C();
  __int16 v17 = v16;
  sub_10018F6D8(v14, v15);
  if ((v17 & 0x100) != 0)
  {
    *(void *)uint64_t v12 = static HorizontalAlignment.leading.getter();
    *(void *)(v12 + 8) = 0;
    *(unsigned char *)(v12 + 16) = 1;
    uint64_t v20 = v12 + *(int *)(sub_10017DF08(&qword_100E92FF8) + 44);
    uint64_t *v8 = static Alignment.topLeading.getter();
    v8[1] = v21;
    uint64_t v22 = sub_10017DF08(&qword_100E93000);
    sub_10077A6E8(v0, (uint64_t)v8 + *(int *)(v22 + 44));
    sub_10006DF38((uint64_t)v8, v20, &qword_100E92FE0);
    sub_10017DF4C((uint64_t)v8, &qword_100E92FE0);
    sub_10006DF38(v12, v4, &qword_100E92FE8);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E7D900);
    sub_10024D5E4((uint64_t)&unk_100E92FF0);
    sub_1005BF02C();
    sub_1001A33A8();
    _ConditionalContent<>.init(storage:)();
    return sub_10017DF4C(v12, &qword_100E92FE8);
  }
  else
  {
    uint64_t v18 = static Color.clear.getter();
    type metadata accessor for DetailChartViewModel();
    type metadata accessor for ChartViewModel(0);
    static Alignment.center.getter();
    sub_1001638C8();
    _FrameLayout.init(width:height:alignment:)();
    *(void *)uint64_t v4 = v18;
    *(_WORD *)(v4 + 8) = 256;
    *(void *)(v4 + 16) = v23;
    *(unsigned char *)(v4 + 24) = v24;
    *(void *)(v4 + 32) = v25;
    *(unsigned char *)(v4 + 40) = v26;
    *(_OWORD *)(v4 + 48) = v27;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E7D900);
    sub_10024D5E4((uint64_t)&unk_100E92FF0);
    sub_1005BF02C();
    sub_1001A33A8();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_10077A6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = (int *)type metadata accessor for DetailChart(0);
  uint64_t v36 = *((void *)v3 - 1);
  __chkstk_darwin(v3);
  uint64_t v37 = v4;
  uint64_t v38 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E63BF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = type metadata accessor for ChartViewModel(0);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for ChartView(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E93008);
  __chkstk_darwin(v13);
  char v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10017DF08(&qword_100E93010);
  __chkstk_darwin(v35);
  __int16 v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1 + v3[7];
  uint64_t v19 = type metadata accessor for DetailChartViewModel();
  sub_1007801D8(v18 + *(int *)(v19 + 20), (uint64_t)v9, (void (*)(void))type metadata accessor for ChartViewModel);
  if (qword_100E62748 != -1) {
    swift_once();
  }
  long long v33 = xmmword_100F51D48;
  uint64_t v20 = qword_100F51D58;
  uint64_t v21 = qword_100F51D60;
  uint64_t v22 = *(void *)(a1 + v3[11]);
  sub_10020D948(a1 + v3[10], (uint64_t)v40);
  uint64_t *v7 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  sub_1007808EC((uint64_t)v9, (uint64_t)v12, (void (*)(void))type metadata accessor for ChartViewModel);
  uint64_t v23 = &v12[v10[5]];
  *(_OWORD *)uint64_t v23 = v33;
  *((void *)v23 + 2) = v20;
  *((void *)v23 + 3) = v21;
  *(void *)&v12[v10[6]] = v22;
  sub_1001262E4(v40, (uint64_t)&v12[v10[7]]);
  char v24 = &v12[v10[8]];
  *(void *)char v24 = swift_getKeyPath();
  v24[8] = 0;
  uint64_t v25 = (uint64_t *)&v12[v10[9]];
  *uint64_t v25 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  sub_10024D364((uint64_t)v7, (uint64_t)&v12[v10[10]], &qword_100E63BF0);
  Text.Measurements.init()();
  sub_1007801D8((uint64_t)v12, (uint64_t)v15, (void (*)(void))type metadata accessor for ChartView);
  char v26 = (uint64_t (**)())&v15[*(int *)(v13 + 36)];
  *char v26 = sub_100786A88;
  v26[1] = 0;
  sub_100778234((uint64_t)v12, (void (*)(void))type metadata accessor for ChartView);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006DF38((uint64_t)v15, (uint64_t)v17, &qword_100E93008);
  long long v27 = &v17[*(int *)(v35 + 36)];
  long long v28 = v40[1];
  *(_OWORD *)long long v27 = v40[0];
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v40[2];
  sub_10017DF4C((uint64_t)v15, &qword_100E93008);
  static Alignment.topLeading.getter();
  uint64_t v29 = v38;
  sub_1007801D8(a1, v38, (void (*)(void))type metadata accessor for DetailChart);
  unint64_t v30 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v31 = swift_allocObject();
  sub_1007808EC(v29, v31 + v30, (void (*)(void))type metadata accessor for DetailChart);
  sub_10017DF08(&qword_100E93018);
  sub_10078096C((uint64_t)&unk_100E93020);
  sub_10024D5E4((uint64_t)&unk_100E93038);
  View.chartOverlay<A>(alignment:content:)();
  swift_release();
  return sub_10017DF4C((uint64_t)v17, &qword_100E93010);
}

uint64_t sub_10077ACC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = static Alignment.topLeading.getter();
  a3[1] = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E93040);
  return sub_10077AD18(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_10077AD18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v370 = a3;
  uint64_t v366 = type metadata accessor for LocalCoordinateSpace();
  uint64_t v365 = *(void *)(v366 - 8);
  __chkstk_darwin(v366);
  uint64_t v364 = (char *)v292 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DetailChart(0);
  uint64_t v7 = v6 - 8;
  uint64_t v355 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v356 = v8;
  uint64_t v381 = (uint64_t)v292 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v360 = type metadata accessor for ChartDragGestureRecognizerRepresentable();
  uint64_t v358 = *(void *)(v360 - 8);
  __chkstk_darwin(v360);
  uint64_t v357 = (char *)v292 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v362 = sub_10017DF08(&qword_100E93048);
  uint64_t v361 = *(void *)(v362 - 8);
  __chkstk_darwin(v362);
  uint64_t v382 = (char *)v292 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v369 = sub_10017DF08(&qword_100E7B6E0);
  uint64_t v368 = *(void *)(v369 - 8);
  __chkstk_darwin(v369);
  uint64_t v367 = (char *)v292 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v363 = (char *)v292 - v13;
  uint64_t v321 = type metadata accessor for DetailChart.LollipopOverlayView(0);
  __chkstk_darwin(v321);
  uint64_t v322 = (char *)v292 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = sub_10017DF08(&qword_100E93050);
  __chkstk_darwin(v353);
  uint64_t v320 = (uint64_t)v292 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v319 = (uint64_t)v292 - v17;
  uint64_t v374 = type metadata accessor for DetailChartLollipopPoint();
  uint64_t v352 = *(void *)(v374 - 8);
  __chkstk_darwin(v374);
  uint64_t v350 = (char *)v292 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v351 = (char *)v292 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E7B6D8);
  __chkstk_darwin(v21 - 8);
  uint64_t v359 = (uint64_t)v292 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v380 = (uint64_t)v292 - v24;
  uint64_t v25 = sub_10017DF08(&qword_100E93058);
  __chkstk_darwin(v25 - 8);
  uint64_t v348 = (uint64_t)v292 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v379 = (uint64_t)v292 - v28;
  uint64_t v384 = type metadata accessor for ChartProxy();
  uint64_t v373 = *(void *)(v384 - 8);
  __chkstk_darwin(v384);
  uint64_t v349 = (char *)v292 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v375 = v29;
  __chkstk_darwin(v30);
  uint64_t v386 = (char *)v292 - v31;
  uint64_t v32 = sub_10017DF08(&qword_100E93060);
  uint64_t v338 = *(void *)(v32 - 8);
  uint64_t v339 = v32;
  __chkstk_darwin(v32);
  long long v337 = (char *)v292 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v334 = sub_10017DF08(&qword_100E93068);
  __chkstk_darwin(v334);
  uint64_t v336 = (char *)v292 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v347 = sub_10017DF08(&qword_100E93070);
  __chkstk_darwin(v347);
  uint64_t v335 = (uint64_t)v292 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10017DF08(&qword_100E7B6D0);
  __chkstk_darwin(v36 - 8);
  uint64_t v354 = (uint64_t)v292 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v378 = (uint64_t)v292 - v39;
  uint64_t v40 = type metadata accessor for IdentityTransition();
  uint64_t v298 = *(void *)(v40 - 8);
  uint64_t v299 = v40;
  __chkstk_darwin(v40);
  uint64_t v296 = (char *)v292 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v297 = (char *)v292 - v43;
  uint64_t v44 = type metadata accessor for ChartKind();
  uint64_t v306 = *(void *)(v44 - 8);
  uint64_t v307 = v44;
  __chkstk_darwin(v44);
  int v308 = (char *)v292 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10017DF08(&qword_100E93078);
  __chkstk_darwin(v46 - 8);
  uint64_t v311 = (uint64_t)v292 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  uint64_t v310 = (char *)v292 - v49;
  uint64_t v303 = sub_10017DF08(&qword_100E93080);
  __chkstk_darwin(v303);
  uint64_t v305 = (uint64_t)v292 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = sub_10017DF08(&qword_100E93088);
  __chkstk_darwin(v304);
  uint64_t v313 = (uint64_t)v292 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v312 = (uint64_t)v292 - v53;
  uint64_t v54 = type metadata accessor for ChartPastDataTreatment();
  uint64_t v301 = *(void *)(v54 - 8);
  uint64_t v302 = v54;
  __chkstk_darwin(v54);
  uint64_t v300 = (char *)v292 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = sub_10017DF08(&qword_100E93090);
  __chkstk_darwin(v346);
  uint64_t v309 = (uint64_t)v292 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  uint64_t v318 = (uint64_t)v292 - v58;
  uint64_t v59 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v59 - 8);
  *(void *)&double v345 = (char *)v292 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v372 = (void (*)(void))type metadata accessor for DetailChartDataElement();
  uint64_t v333 = *((void *)v372 - 1);
  __chkstk_darwin(v372);
  uint64_t v332 = (char *)v292 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10017DF08(&qword_100E7B6C8);
  __chkstk_darwin(v62 - 8);
  uint64_t v377 = (uint64_t)v292 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64);
  uint64_t v389 = (uint64_t)v292 - v65;
  uint64_t v66 = type metadata accessor for ChartOcclusionHashView.Style();
  __chkstk_darwin(v66 - 8);
  uint64_t v324 = (char *)v292 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v323 = sub_10017DF08(&qword_100E93098);
  __chkstk_darwin(v323);
  uint64_t v325 = (char *)v292 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v371 = sub_10017DF08(&qword_100E930A0);
  __chkstk_darwin(v371);
  uint64_t v295 = (uint64_t)v292 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v70);
  uint64_t v316 = (uint64_t)v292 - v71;
  __chkstk_darwin(v72);
  uint64_t v315 = (uint64_t)v292 - v73;
  uint64_t v74 = type metadata accessor for Date();
  uint64_t v343 = *(void *)(v74 - 8);
  uint64_t v344 = v74;
  __chkstk_darwin(v74);
  uint64_t v342 = (char *)v292 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10017DF08(&qword_100E7B6C0);
  __chkstk_darwin(v76 - 8);
  uint64_t v383 = (uint64_t)v292 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v78);
  uint64_t v314 = (uint64_t)v292 - v79;
  __chkstk_darwin(v80);
  uint64_t v391 = (uint64_t)v292 - v81;
  uint64_t v82 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v82 - 8);
  uint64_t v330 = (char *)v292 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for BlendMode();
  uint64_t v328 = *(void *)(v84 - 8);
  uint64_t KeyPath = v84;
  __chkstk_darwin(v84);
  uint64_t v327 = (char *)v292 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v326 = sub_10017DF08(&qword_100E930A8);
  __chkstk_darwin(v326);
  uint64_t v331 = (char *)v292 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10017DF08(&qword_100E930B0);
  __chkstk_darwin(v87);
  uint64_t v89 = (char *)v292 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for ChartDarkeningScrim();
  uint64_t v91 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v93 = (char *)v292 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10017DF08(&qword_100E7B6B0);
  __chkstk_darwin(v94 - 8);
  uint64_t v376 = (uint64_t)v292 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v96);
  uint64_t v388 = (uint64_t)v292 - v97;
  uint64_t v98 = *(int *)(v7 + 36);
  uint64_t v392 = a1;
  uint64_t v99 = a1 + v98;
  uint64_t v100 = *(int *)(type metadata accessor for DetailChartViewModel() + 20);
  uint64_t v317 = v99;
  uint64_t v101 = (char *)(v99 + v100);
  uint64_t v390 = (void (*)(void))type metadata accessor for ChartViewModel(0);
  uint64_t v102 = *((int *)v390 + 16);
  uint64_t v385 = v101;
  uint64_t v103 = &v101[v102];
  static ChartDarkeningScrim.dimmingEffect.getter();
  unint64_t v341 = sub_100780AB0((uint64_t)&unk_100E930B8);
  char v104 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  uint64_t v340 = *(void (**)(char *, uint64_t))(v91 + 8);
  v340(v93, v90);
  uint64_t v387 = a2;
  if (v104)
  {
    v292[1] = v103;
    int v293 = v89;
    uint64_t v294 = v87;
    static Color.black.getter();
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_10058CDD8();
    uint64_t v105 = Color.opacity(_:)();
    swift_release();
    uint64_t v107 = v327;
    uint64_t v106 = v328;
    uint64_t v108 = KeyPath;
    (*(void (**)(char *, void, uint64_t))(v328 + 104))(v327, enum case for BlendMode.destinationOut(_:), KeyPath);
    uint64_t v109 = (uint64_t)v330;
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v330, v107, v108);
    uint64_t v110 = (uint64_t)v331;
    sub_1007801D8(v109, (uint64_t)&v331[*(int *)(v326 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
    *(void *)uint64_t v110 = v105;
    *(_WORD *)(v110 + 8) = 256;
    swift_retain();
    sub_100778234(v109, (void (*)(void))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v107, v108);
    swift_release();
    uint64_t v111 = (uint64_t)v293;
    sub_10006DF38(v110, (uint64_t)v293, &qword_100E930A8);
    uint64_t v87 = v294;
    *(unsigned char *)(v111 + *(int *)(v294 + 36)) = 0;
    sub_10017DF4C(v110, &qword_100E930A8);
    uint64_t v112 = v111;
    uint64_t v113 = v388;
    sub_10024D364(v112, v388, &qword_100E930B0);
    uint64_t v114 = 0;
    uint64_t v115 = v387;
  }
  else
  {
    uint64_t v115 = a2;
    uint64_t v114 = 1;
    uint64_t v113 = v388;
  }
  uint64_t v116 = 1;
  _s7Weather24LocationCompositionStateOwst_0(v113, v114, 1, v87);
  static ChartDarkeningScrim.hashPatternEffect.getter();
  char v117 = dispatch thunk of SetAlgebra.isSuperset(of:)();
  v340(v93, v90);
  uint64_t v118 = v385;
  uint64_t v119 = v371;
  if (v117)
  {
    uint64_t v121 = v342;
    uint64_t v120 = v343;
    uint64_t v122 = v344;
    (*(void (**)(char *, char *, uint64_t))(v343 + 16))(v342, &v385[*((int *)v390 + 20)], v344);
    *(double *)&uint64_t v123 = COERCE_DOUBLE(ChartProxy.position<A>(forX:)());
    char v125 = v124;
    (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v122);
    double v126 = *(double *)&v123;
    if (v125) {
      double v126 = 0.0;
    }
    uint64_t v127 = v119;
    uint64_t v128 = v392;
    sub_10077D680(v126);
    ChartProxy.plotSize.getter();
    ChartProxy.plotSize.getter();
    static ChartOcclusionHashView.Style.default.getter();
    uint64_t v129 = (uint64_t)v325;
    ChartOcclusionHashView.init(width:height:style:)();
    uint64_t v130 = static Alignment.topLeading.getter();
    uint64_t v132 = v131;
    int v133 = v118;
    uint64_t v134 = (uint64_t *)(v129 + *(int *)(v323 + 36));
    uint64_t v135 = (uint64_t)v134 + *(int *)(sub_10017DF08(&qword_100E93198) + 36);
    uint64_t v136 = v128;
    uint64_t v119 = v127;
    sub_10077F144(v136, v135);
    *uint64_t v134 = v130;
    v134[1] = v132;
    uint64_t v118 = v133;
    uint64_t v137 = v316;
    sub_10006DF38(v129, v316, &qword_100E93098);
    *(unsigned char *)(v137 + *(int *)(v127 + 36)) = 0;
    sub_10017DF4C(v129, &qword_100E93098);
    uint64_t v138 = v137;
    uint64_t v139 = v315;
    sub_10024D364(v138, v315, &qword_100E930A0);
    sub_10024D364(v139, v391, &qword_100E930A0);
    uint64_t v116 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v391, v116, 1, v119);
  uint64_t v140 = *(void *)&v345;
  sub_10006DF38((uint64_t)&v118[*((int *)v390 + 21)], *(uint64_t *)&v345, &qword_100E6B640);
  uint64_t v141 = v372;
  int v142 = _s7Weather24LocationCompositionStateOwet_0(v140, 1, (uint64_t)v372);
  uint64_t v143 = v373;
  uint64_t v144 = v374;
  if (v142 == 1)
  {
    sub_10017DF4C(v140, &qword_100E6B640);
    uint64_t v145 = 1;
    uint64_t v146 = v389;
  }
  else
  {
    size_t v148 = v332;
    uint64_t v147 = v333;
    (*(void (**)(char *, uint64_t, void (*)(void)))(v333 + 32))(v332, v140, v141);
    uint64_t v149 = v342;
    DetailChartDataElement.date.getter();
    uint64_t v150 = v344;
    uint64_t v151 = ChartProxy.position<A>(forX:)();
    char v153 = v152;
    (*(void (**)(char *, uint64_t))(v343 + 8))(v149, v150);
    if ((v153 & 1) != 0
      || (DetailChartDataElement.value.getter(), v393[0] = v154, uint64_t v155 = ChartProxy.position<A>(forY:)(), (v156 & 1) != 0))
    {
      (*(void (**)(char *, void (*)(void)))(v147 + 8))(v148, v141);
      uint64_t v173 = sub_10017DF08(&qword_100E930F0);
      uint64_t v174 = v318;
      _s7Weather24LocationCompositionStateOwst_0(v318, 1, 1, v173);
      uint64_t v118 = v385;
    }
    else
    {
      double v345 = *(double *)&v155;
      uint64_t v157 = v392;
      double v158 = sub_10077D680(*(double *)&v151);
      uint64_t v160 = v300;
      uint64_t v159 = v301;
      uint64_t v161 = v302;
      (*(void (**)(char *, void, uint64_t))(v301 + 104))(v300, enum case for ChartPastDataTreatment.hashed(_:), v302);
      char v162 = static ChartPastDataTreatment.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v160, v161);
      if (v162)
      {
        ChartProxy.plotSize.getter();
        ChartProxy.plotSize.getter();
        static ChartOcclusionHashView.Style.default.getter();
        uint64_t v163 = (uint64_t)v325;
        ChartOcclusionHashView.init(width:height:style:)();
        uint64_t v164 = static Alignment.topLeading.getter();
        uint64_t v166 = v165;
        uint64_t v167 = (uint64_t *)(v163 + *(int *)(v323 + 36));
        uint64_t v168 = sub_10017DF08(&qword_100E93198);
        sub_10077F144(v157, (uint64_t)v167 + *(int *)(v168 + 36));
        uint64_t *v167 = v164;
        v167[1] = v166;
        uint64_t v169 = v295;
        sub_10006DF38(v163, v295, &qword_100E93098);
        uint64_t v170 = v371;
        *(unsigned char *)(v169 + *(int *)(v371 + 36)) = 0;
        sub_10017DF4C(v163, &qword_100E93098);
        uint64_t v171 = v314;
        sub_10024D364(v169, v314, &qword_100E930A0);
        uint64_t v172 = 0;
      }
      else
      {
        uint64_t v172 = 1;
        uint64_t v171 = v314;
        uint64_t v170 = v371;
      }
      _s7Weather24LocationCompositionStateOwst_0(v171, v172, 1, v170);
      static Color.black.getter();
      if (qword_100E62450 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10058CDD8();
      uint64_t v175 = Color.opacity(_:)();
      swift_release();
      uint64_t v177 = v327;
      uint64_t v176 = v328;
      uint64_t v178 = KeyPath;
      (*(void (**)(char *, void, uint64_t))(v328 + 104))(v327, enum case for BlendMode.destinationOut(_:), KeyPath);
      uint64_t v179 = (uint64_t)v330;
      (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v330, v177, v178);
      uint64_t v180 = (uint64_t)v331;
      sub_1007801D8(v179, (uint64_t)&v331[*(int *)(v326 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
      *(void *)uint64_t v180 = v175;
      *(_WORD *)(v180 + 8) = 256;
      swift_retain();
      sub_100778234(v179, (void (*)(void))&type metadata accessor for _BlendModeEffect);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v177, v178);
      swift_release();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v181 = v305;
      sub_10006DF38(v180, v305, &qword_100E930A8);
      uint64_t v182 = (_OWORD *)(v181 + *(int *)(v303 + 36));
      long long v183 = v412;
      *uint64_t v182 = v411;
      v182[1] = v183;
      v182[2] = v413;
      sub_10017DF4C(v180, &qword_100E930A8);
      uint64_t v184 = v313;
      sub_10006DF38(v181, v313, &qword_100E93080);
      *(unsigned char *)(v184 + *(int *)(v304 + 36)) = 0;
      sub_10017DF4C(v181, &qword_100E93080);
      sub_10024D364(v184, v312, &qword_100E93088);
      id v185 = [self secondarySystemFillColor];
      uint64_t v331 = (char *)Color.init(_:)();
      uint64_t v186 = v390;
      uint64_t v187 = v385;
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v371 = v414;
      LODWORD(v344) = v415;
      uint64_t v343 = v416;
      LODWORD(v342) = v417;
      uint64_t v340 = v419;
      unint64_t v341 = v418;
      uint64_t v188 = &v187[*((int *)v186 + 5)];
      uint64_t v190 = v306;
      uint64_t v189 = v307;
      uint64_t v191 = (uint64_t)v308;
      (*(void (**)(char *, char *, uint64_t))(v306 + 16))(v308, v188, v307);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v190 + 88))(v191, v189) == enum case for ChartKind.line(_:))
      {
        double v192 = v345;
        (*(void (**)(uint64_t, uint64_t))(v190 + 96))(v191, v189);
        uint64_t v193 = sub_10017DF08(&qword_100E6BEF8);
        sub_10017DF4C(v191 + *(int *)(v193 + 48), &qword_100E6BEC8);
        sub_10017DF4C(v191, &qword_100E6BEC8);
        uint64_t v330 = (char *)static Color.primary.getter();
        uint64_t KeyPath = swift_getKeyPath();
        sub_10058C80C();
        LODWORD(v328) = static Edge.Set.all.getter();
        EdgeInsets.init(_all:)();
        uint64_t v195 = v194;
        uint64_t v197 = v196;
        uint64_t v199 = v198;
        uint64_t v201 = v200;
        sub_10058CC10();
        sub_10058CC10();
        static Alignment.center.getter();
        _FrameLayout.init(width:height:alignment:)();
        uint64_t v202 = v420;
        char v203 = v421;
        char v204 = v423;
        uint64_t v327 = v424;
        uint64_t v325 = v422;
        uint64_t v326 = v425;
        double v205 = v158 - sub_10058CC10() * 0.5;
        double v206 = sub_10058CC10();
        char v404 = 0;
        double v207 = v192 - v206 * 0.5;
        char v402 = v203;
        char v400 = v204;
        v409[0] = *(_DWORD *)v405;
        *(_DWORD *)((char *)v409 + 3) = *(_DWORD *)&v405[3];
        v408[0] = *(_DWORD *)v403;
        *(_DWORD *)((char *)v408 + 3) = *(_DWORD *)&v403[3];
        v407[0] = *(_DWORD *)v401;
        *(_DWORD *)((char *)v407 + 3) = *(_DWORD *)&v401[3];
        *(_DWORD *)((char *)v406 + 3) = *(_DWORD *)&v399[3];
        v406[0] = *(_DWORD *)v399;
        int v208 = v297;
        IdentityTransition.init()();
        uint64_t v210 = v298;
        uint64_t v209 = v299;
        (*(void (**)(char *, char *, uint64_t))(v298 + 16))(v296, v208, v299);
        sub_100780AB0((uint64_t)&unk_100E93108);
        uint64_t v211 = AnyTransition.init<A>(_:)();
        v398[0] = v409[0];
        *(_DWORD *)((char *)v398 + 3) = *(_DWORD *)((char *)v409 + 3);
        v397[0] = v408[0];
        *(_DWORD *)((char *)v397 + 3) = *(_DWORD *)((char *)v408 + 3);
        v396[0] = v407[0];
        *(_DWORD *)((char *)v396 + 3) = *(_DWORD *)((char *)v407 + 3);
        *(_DWORD *)((char *)v395 + 3) = *(_DWORD *)((char *)v406 + 3);
        v395[0] = v406[0];
        (*(void (**)(char *, uint64_t))(v210 + 8))(v208, v209);
        uint64_t v171 = v314;
        v410[0] = KeyPath;
        v410[1] = v330;
        LOBYTE(v410[2]) = v328;
        *(_DWORD *)((char *)&v410[2] + 1) = v398[0];
        HIDWORD(v410[2]) = *(_DWORD *)((char *)v398 + 3);
        v410[3] = v195;
        v410[4] = v197;
        v410[5] = v199;
        v410[6] = v201;
        LOBYTE(v410[7]) = 0;
        *(_DWORD *)((char *)&v410[7] + 1) = v397[0];
        HIDWORD(v410[7]) = *(_DWORD *)((char *)v397 + 3);
        v410[8] = v202;
        LOBYTE(v410[9]) = v203;
        HIDWORD(v410[9]) = *(_DWORD *)((char *)v396 + 3);
        *(_DWORD *)((char *)&v410[9] + 1) = v396[0];
        v410[10] = v325;
        LOBYTE(v410[11]) = v204;
        HIDWORD(v410[11]) = *(_DWORD *)((char *)v395 + 3);
        *(_DWORD *)((char *)&v410[11] + 1) = v395[0];
        v410[12] = v327;
        v410[13] = v326;
        *(double *)&v410[14] = v205;
        *(double *)&v410[15] = v207;
        v410[16] = 0;
        *(double *)&v410[17] = v345;
        v410[18] = v211;
        memcpy(v393, v410, sizeof(v393));
        char v394 = 0;
        sub_10017DF08(&qword_100E93110);
        sub_100780F18((uint64_t)&unk_100E93118);
        uint64_t v212 = (uint64_t)v310;
        View.accessibilityHidden(_:)();
        sub_1007811C8((uint64_t)v410);
        uint64_t v213 = sub_10017DF08(&qword_100E930F8);
        uint64_t v214 = v212;
        uint64_t v215 = 0;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v191, v189);
        uint64_t v213 = sub_10017DF08(&qword_100E930F8);
        uint64_t v212 = (uint64_t)v310;
        uint64_t v214 = (uint64_t)v310;
        uint64_t v215 = 1;
      }
      _s7Weather24LocationCompositionStateOwst_0(v214, v215, 1, v213);
      uint64_t v143 = v373;
      uint64_t v216 = v171;
      uint64_t v217 = v383;
      sub_10006DF38(v216, v383, &qword_100E7B6C0);
      uint64_t v219 = v312;
      uint64_t v218 = v313;
      sub_10006DF38(v312, v313, &qword_100E93088);
      uint64_t v220 = v311;
      sub_10006DF38(v212, v311, &qword_100E93078);
      uint64_t v221 = v309;
      sub_10006DF38(v217, v309, &qword_100E7B6C0);
      uint64_t v222 = v212;
      uint64_t v223 = (int *)sub_10017DF08(&qword_100E93100);
      sub_10006DF38(v218, v221 + v223[12], &qword_100E93088);
      uint64_t v224 = v221 + v223[16];
      *(void *)uint64_t v224 = v331;
      *(_WORD *)(v224 + 8) = 256;
      *(void *)(v224 + 16) = v371;
      *(unsigned char *)(v224 + 24) = v344;
      *(void *)(v224 + 32) = v343;
      *(unsigned char *)(v224 + 40) = (_BYTE)v342;
      uint64_t v225 = v340;
      *(void *)(v224 + 48) = v341;
      *(void *)(v224 + 56) = v225;
      *(double *)(v224 + 64) = v158;
      *(void *)(v224 + 72) = 0;
      *(unsigned char *)(v224 + 80) = 0;
      sub_10006DF38(v220, v221 + v223[20], &qword_100E93078);
      swift_retain();
      sub_10017DF4C(v222, &qword_100E93078);
      sub_10017DF4C(v219, &qword_100E93088);
      sub_10017DF4C(v314, &qword_100E7B6C0);
      (*(void (**)(char *, void (*)(void)))(v333 + 8))(v332, v372);
      sub_10017DF4C(v220, &qword_100E93078);
      swift_release();
      sub_10017DF4C(v218, &qword_100E93088);
      sub_10017DF4C(v217, &qword_100E7B6C0);
      uint64_t v226 = sub_10017DF08(&qword_100E930F0);
      _s7Weather24LocationCompositionStateOwst_0(v221, 0, 1, v226);
      uint64_t v174 = v318;
      sub_10024D364(v221, v318, &qword_100E93090);
      uint64_t v118 = v385;
      uint64_t v115 = v387;
    }
    uint64_t v146 = v389;
    sub_10024D364(v174, v389, &qword_100E93090);
    uint64_t v145 = 0;
    uint64_t v144 = v374;
  }
  uint64_t v227 = 1;
  _s7Weather24LocationCompositionStateOwst_0(v146, v145, 1, v346);
  uint64_t v228 = *((int *)v390 + 9);
  if (*(void *)&v118[v228])
  {
    v393[0] = *(void *)&v118[v228];
    swift_getKeyPath();
    uint64_t v229 = v386;
    uint64_t v230 = v384;
    (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v386, v115, v384);
    unint64_t v231 = (*(unsigned __int8 *)(v143 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
    uint64_t v232 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v143 + 32))(v232 + v231, v229, v230);
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E7D4B8);
    sub_10017DF08(&qword_100E930D8);
    sub_10024D5E4((uint64_t)&unk_100E7D4C8);
    sub_100780E14();
    uint64_t v233 = v337;
    ForEach<>.init(_:id:content:)();
    uint64_t v235 = v338;
    uint64_t v234 = v339;
    uint64_t v236 = (uint64_t)v336;
    (*(void (**)(char *, char *, uint64_t))(v338 + 16))(v336, v233, v339);
    *(unsigned char *)(v236 + *(int *)(v334 + 36)) = 0;
    (*(void (**)(char *, uint64_t))(v235 + 8))(v233, v234);
    uint64_t v237 = v335;
    sub_10006DF38(v236, v335, &qword_100E93068);
    uint64_t v238 = v347;
    uint64_t v239 = (uint64_t (**)())(v237 + *(int *)(v347 + 36));
    *uint64_t v239 = sub_100455F54;
    v239[1] = 0;
    sub_10017DF4C(v236, &qword_100E93068);
    uint64_t v240 = v237;
    uint64_t v241 = v378;
    sub_10024D364(v240, v378, &qword_100E93070);
    uint64_t v227 = 0;
    uint64_t v242 = v380;
  }
  else
  {
    uint64_t v242 = v380;
    uint64_t v241 = v378;
    uint64_t v238 = v347;
  }
  _s7Weather24LocationCompositionStateOwst_0(v241, v227, 1, v238);
  uint64_t v243 = v379;
  sub_10077DA04(v115, v379);
  uint64_t v244 = v348;
  sub_10006DF38(v243, v348, &qword_100E93058);
  if (_s7Weather24LocationCompositionStateOwet_0(v244, 1, v144) == 1)
  {
    sub_10017DF4C(v244, &qword_100E93058);
    uint64_t v245 = 1;
    uint64_t v246 = v353;
    uint64_t v247 = v384;
  }
  else
  {
    uint64_t v248 = v244;
    uint64_t v250 = v351;
    uint64_t v249 = v352;
    uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v352 + 32);
    v251(v351, v248, v144);
    (*(void (**)(char *, char *, uint64_t))(v249 + 16))(v350, v250, v144);
    (*(void (**)(char *, uint64_t, uint64_t))(v143 + 16))(v349, v115, v384);
    if (*(void *)&v385[*((int *)v390 + 8)])
    {
      if (qword_100E62450 != -1) {
        swift_once();
      }
      swift_beginAccess();
      double v252 = *(double *)&xmmword_100F51798 + *((double *)&xmmword_100F51798 + 1) + *((double *)&xmmword_100F51798 + 1);
    }
    else
    {
      double v252 = 0.0;
    }
    uint64_t v253 = v384;
    uint64_t v255 = (int *)v321;
    uint64_t v254 = (uint64_t)v322;
    sub_1007801D8(v317, (uint64_t)&v322[*(int *)(v321 + 28)], (void (*)(void))type metadata accessor for DetailChartViewModel);
    v251((char *)v254, (uint64_t)v350, v144);
    (*(void (**)(uint64_t, char *, uint64_t))(v143 + 32))(v254 + v255[5], v349, v253);
    *(double *)(v254 + v255[6]) = v252;
    *(void *)(v254 + v255[8]) = 0x4034000000000000;
    *(void *)(v254 + v255[9]) = 0x4000000000000000;
    *(void *)(v254 + v255[10]) = 0x3FF0000000000000;
    uint64_t v256 = v320;
    sub_1007801D8(v254, v320, (void (*)(void))type metadata accessor for DetailChart.LollipopOverlayView);
    uint64_t v246 = v353;
    *(unsigned char *)(v256 + *(int *)(v353 + 36)) = 0;
    sub_100778234(v254, (void (*)(void))type metadata accessor for DetailChart.LollipopOverlayView);
    (*(void (**)(char *, uint64_t))(v352 + 8))(v351, v144);
    uint64_t v257 = v256;
    uint64_t v258 = v319;
    sub_10024D364(v257, v319, &qword_100E93050);
    sub_10024D364(v258, v242, &qword_100E93050);
    uint64_t v245 = 0;
    uint64_t v247 = v253;
  }
  _s7Weather24LocationCompositionStateOwst_0(v242, v245, 1, v246);
  v393[0] = static Color.clear.getter();
  LOWORD(v393[1]) = 256;
  BYTE2(v393[1]) = 0;
  uint64_t v390 = (void (*)(void))type metadata accessor for DetailChart;
  uint64_t v259 = v381;
  sub_1007801D8(v392, v381, (void (*)(void))type metadata accessor for DetailChart);
  uint64_t v385 = *(char **)(v143 + 16);
  uint64_t v260 = v386;
  ((void (*)(char *, uint64_t, uint64_t))v385)(v386, v387, v247);
  uint64_t v261 = *(unsigned __int8 *)(v355 + 80);
  uint64_t v262 = *(unsigned __int8 *)(v143 + 80);
  uint64_t v263 = v143;
  uint64_t v264 = (v261 + 16) & ~v261;
  uint64_t v384 = v264;
  v375 += (v356 + v262 + v264) & ~v262;
  uint64_t v265 = (v356 + v262 + v264) & ~v262;
  uint64_t v373 = v265;
  uint64_t v374 = v261 | v262 | 7;
  uint64_t v266 = v247;
  uint64_t v267 = swift_allocObject();
  uint64_t v372 = (void (*)(void))type metadata accessor for DetailChart;
  sub_1007808EC(v259, v267 + v264, (void (*)(void))type metadata accessor for DetailChart);
  uint64_t v371 = *(void *)(v263 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v371)(v267 + v265, v260, v266);
  uint64_t v268 = v357;
  ChartDragGestureRecognizerRepresentable.init(isRecognizedHandler:)();
  uint64_t v356 = sub_10017DF08(&qword_100E930C0);
  unint64_t v269 = sub_100780AFC();
  unint64_t v270 = sub_100780AB0((uint64_t)&unk_100E930D0);
  uint64_t v271 = v360;
  View.gesture<A>(_:)();
  (*(void (**)(char *, uint64_t))(v358 + 8))(v268, v271);
  swift_release();
  uint64_t v272 = v381;
  sub_1007801D8(v392, v381, v390);
  uint64_t v273 = v386;
  ((void (*)(char *, uint64_t, uint64_t))v385)(v386, v387, v266);
  uint64_t v274 = swift_allocObject();
  sub_1007808EC(v272, v274 + v384, v372);
  ((void (*)(uint64_t, char *, uint64_t))v371)(v274 + v373, v273, v266);
  uint64_t v275 = v364;
  static CoordinateSpaceProtocol<>.local.getter();
  v393[0] = v356;
  v393[1] = v271;
  v393[2] = v269;
  v393[3] = v270;
  swift_getOpaqueTypeConformance2();
  uint64_t v276 = v367;
  uint64_t v277 = v362;
  uint64_t v278 = v366;
  uint64_t v279 = v382;
  View.onContinuousHover<A>(coordinateSpace:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v365 + 8))(v275, v278);
  (*(void (**)(char *, uint64_t))(v361 + 8))(v279, v277);
  uint64_t v280 = v368;
  uint64_t v281 = v363;
  uint64_t v282 = v369;
  (*(void (**)(char *, char *, uint64_t))(v368 + 32))(v363, v276, v369);
  uint64_t v283 = v376;
  sub_10006DF38(v388, v376, &qword_100E7B6B0);
  v393[0] = v283;
  uint64_t v284 = v383;
  sub_10006DF38(v391, v383, &qword_100E7B6C0);
  v393[1] = v284;
  uint64_t v285 = v377;
  sub_10006DF38(v389, v377, &qword_100E7B6C8);
  v393[2] = v285;
  uint64_t v286 = v378;
  uint64_t v287 = v354;
  sub_10006DF38(v378, v354, &qword_100E7B6D0);
  v393[3] = v287;
  uint64_t v288 = v380;
  uint64_t v289 = v359;
  sub_10006DF38(v380, v359, &qword_100E7B6D8);
  v393[4] = v289;
  (*(void (**)(char *, char *, uint64_t))(v280 + 16))(v276, v281, v282);
  v393[5] = v276;
  sub_1004B9458((uint64_t)v393);
  uint64_t v290 = *(void (**)(char *, uint64_t))(v280 + 8);
  v290(v281, v282);
  sub_10017DF4C(v288, &qword_100E7B6D8);
  sub_10017DF4C(v379, &qword_100E93058);
  sub_10017DF4C(v286, &qword_100E7B6D0);
  sub_10017DF4C(v389, &qword_100E7B6C8);
  sub_10017DF4C(v391, &qword_100E7B6C0);
  sub_10017DF4C(v388, &qword_100E7B6B0);
  v290(v276, v282);
  sub_10017DF4C(v289, &qword_100E7B6D8);
  sub_10017DF4C(v287, &qword_100E7B6D0);
  sub_10017DF4C(v377, &qword_100E7B6C8);
  sub_10017DF4C(v383, &qword_100E7B6C0);
  return sub_10017DF4C(v376, &qword_100E7B6B0);
}

double sub_10077D680(double a1)
{
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - v7;
  sub_1001FF23C();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LayoutDirection.rightToLeft(_:), v2);
  char v9 = static LayoutDirection.== infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  if (v9)
  {
    type metadata accessor for DetailChart(0);
    type metadata accessor for DetailChartViewModel();
    type metadata accessor for ChartViewModel(0);
    type metadata accessor for Date();
    uint64_t v11 = ChartProxy.position<A>(forX:)();
    if ((v12 & 1) == 0)
    {
      double v13 = *(double *)&v11;
      double v14 = COERCE_DOUBLE(ChartProxy.position<A>(forX:)());
      if ((v15 & 1) == 0)
      {
        double v16 = v13;
        if (v13 <= v14) {
          double v16 = v14;
        }
        return v16 - a1;
      }
    }
  }
  return a1;
}

uint64_t sub_10077D868(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for ScaleLabel(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (void *)((char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  DetailChartDataElement.value.getter();
  v12[1] = v5;
  double v6 = COERCE_DOUBLE(ChartProxy.position<A>(forY:)());
  if (v7) {
    double v8 = 0.0;
  }
  else {
    double v8 = v6;
  }
  char v9 = (char *)v4 + v2[5];
  uint64_t v10 = type metadata accessor for DetailChartDataElement();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  void *v4 = 0x4010000000000000;
  *(double *)((char *)v4 + v2[6]) = v8;
  *((unsigned char *)v4 + v2[7]) = 1;
  *((unsigned char *)v4 + v2[8]) = 0;
  sub_100780AB0((uint64_t)&unk_100E930E8);
  View.accessibilityHidden(_:)();
  return sub_100778234((uint64_t)v4, (void (*)(void))type metadata accessor for ScaleLabel);
}

uint64_t sub_10077DA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  __chkstk_darwin(v4);
  double v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)v45 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E82140);
  __chkstk_darwin(v13 - 8);
  char v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DetailChartDataPoint();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v45 - v21;
  uint64_t v23 = type metadata accessor for DetailChart(0);
  if (*(unsigned char *)(v3 + *(int *)(v23 + 32))) {
    goto LABEL_4;
  }
  uint64_t v46 = v9;
  uint64_t v47 = v6;
  uint64_t v50 = v17;
  uint64_t v51 = v22;
  uint64_t v48 = v12;
  uint64_t v49 = v7;
  uint64_t v24 = v3 + *(int *)(v23 + 28);
  uint64_t v25 = type metadata accessor for DetailChartViewModel();
  sub_10006DF38(v24 + *(int *)(v25 + 24), (uint64_t)v15, &qword_100E82140);
  uint64_t v26 = type metadata accessor for LollipopViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v26) != 1)
  {
    v45[1] = v3;
    uint64_t v31 = v16;
    uint64_t v32 = v50;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v19, &v15[*(int *)(v26 + 20)], v31);
    sub_100778234((uint64_t)v15, (void (*)(void))type metadata accessor for LollipopViewModel);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v51, v19, v31);
    type metadata accessor for ChartViewModel(0);
    if (ChartKind.isBarChart.getter())
    {
      uint64_t v33 = v46;
      DetailChartDataPoint.date.getter();
      uint64_t v34 = v47;
      static Calendar.current.getter();
      uint64_t v35 = v48;
      Date.wc_addMinutes(_:calendar:)();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v53);
      uint64_t v36 = v54;
      uint64_t v37 = v49;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v49);
      uint64_t v28 = v56;
    }
    else
    {
      uint64_t v35 = v48;
      DetailChartDataPoint.date.getter();
      uint64_t v28 = v56;
      uint64_t v37 = v49;
      uint64_t v36 = v54;
    }
    uint64_t v38 = ChartProxy.position<A>(forX:)();
    if ((v39 & 1) == 0)
    {
      double v40 = *(double *)&v38;
      uint64_t v41 = v51;
      uint64_t v42 = DetailChartDataPoint.value.getter();
      if (v43)
      {
        sub_10077D680(v40);
        DetailChartLollipopPoint.init(x:y:)();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v41, v31);
        goto LABEL_15;
      }
      uint64_t v57 = v42;
      ChartProxy.position<A>(forY:)();
      if ((v44 & 1) == 0)
      {
        sub_10077D680(v40);
        DetailChartLollipopPoint.init(x:y:)();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v51, v31);
LABEL_15:
        uint64_t v27 = 0;
        goto LABEL_5;
      }
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v51, v31);
    uint64_t v27 = 1;
    goto LABEL_5;
  }
  sub_10017DF4C((uint64_t)v15, &qword_100E82140);
LABEL_4:
  uint64_t v27 = 1;
  uint64_t v28 = v56;
LABEL_5:
  uint64_t v29 = type metadata accessor for DetailChartLollipopPoint();
  return _s7Weather24LocationCompositionStateOwst_0(v28, v27, 1, v29);
}

uint64_t sub_10077DF48(uint64_t a1, double a2)
{
  uint64_t v99 = a1;
  uint64_t v89 = type metadata accessor for DetailChartSelection();
  __chkstk_darwin(v89);
  uint64_t v90 = (char *)v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v5 - 8);
  uint64_t v93 = (void *)((char *)v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v94 = (uint64_t)v79 - v8;
  uint64_t v96 = type metadata accessor for DetailChartDataElement();
  uint64_t v92 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v95 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v88 = (uint64_t)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v87 = (char *)v79 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v79 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v79 - v18;
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v98 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v91 = (char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v97 = (char *)v79 - v23;
  uint64_t v24 = type metadata accessor for LayoutDirection();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)v79 - v29;
  sub_1001FF23C();
  uint64_t v31 = *(void (**)(void))(v25 + 104);
  unsigned int v84 = enum case for LayoutDirection.rightToLeft(_:);
  uint64_t v85 = v25 + 104;
  uint64_t v83 = (void (*)(char *, void, uint64_t))v31;
  v31(v27);
  char v32 = static LayoutDirection.== infix(_:_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v25 + 8);
  v33(v27, v24);
  uint64_t v82 = v24;
  uint64_t v86 = v33;
  v33(v30, v24);
  double v34 = 0.0;
  if (v32)
  {
    double v35 = *(double *)(v2 + *(int *)(type metadata accessor for DetailChart(0) + 44));
    ChartProxy.plotSize.getter();
    double v34 = v35 - v36;
  }
  double v37 = a2 - v34;
  ChartProxy.value<A>(atX:as:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20) == 1)
  {
    sub_10017DF4C((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
    return sub_10077E878();
  }
  char v39 = v97;
  double v40 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
  v40(v97, v19, v20);
  uint64_t v41 = type metadata accessor for DetailChart(0);
  uint64_t v42 = *(int *)(v41 + 36);
  uint64_t v81 = v2;
  uint64_t v43 = v2 + v42;
  v79[0] = sub_10017DF08(&qword_100E7DDF8);
  v79[1] = v43;
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v20) == 1)
  {
    sub_10017DF4C((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
    uint64_t v44 = v20;
    uint64_t v45 = v39;
  }
  else
  {
    uint64_t v46 = v39;
    uint64_t v47 = v91;
    v40(v91, v16, v20);
    Date.timeIntervalSince(_:)();
    double v49 = fabs(v48);
    uint64_t v50 = *(void (**)(char *, uint64_t))(v98 + 8);
    v50(v47, v20);
    uint64_t v44 = v20;
    uint64_t v45 = v46;
    if (v49 < 60.0) {
      return ((uint64_t (*)(char *, uint64_t))v50)(v46, v44);
    }
  }
  uint64_t v80 = v44;
  uint64_t v51 = *(int *)(v41 + 28);
  uint64_t v91 = (char *)v41;
  uint64_t v52 = v81;
  uint64_t v53 = v81 + v51;
  uint64_t v54 = (uint64_t *)(v53 + *(int *)(type metadata accessor for DetailChartViewModel() + 20));
  uint64_t v55 = type metadata accessor for ChartViewModel(0);
  __chkstk_darwin(v55);
  v79[-2] = v45;
  swift_bridgeObjectRetain();
  uint64_t v56 = (uint64_t)v93;
  sub_100A970BC();
  swift_bridgeObjectRelease();
  uint64_t v57 = v94;
  sub_10024D364(v56, v94, &qword_100E6B640);
  uint64_t v58 = v96;
  if (_s7Weather24LocationCompositionStateOwet_0(v57, 1, v96) == 1)
  {
    (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v80);
    return sub_10017DF4C(v57, &qword_100E6B640);
  }
  uint64_t v93 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v95, v57, v58);
  *(double *)&uint64_t v59 = COERCE_DOUBLE(sub_10077F4E0(v52, v99));
  double v60 = 0.0;
  if (v61)
  {
    uint64_t v62 = v80;
LABEL_17:
    LODWORD(v94) = 1;
    goto LABEL_18;
  }
  uint64_t v62 = v80;
  double v63 = *(double *)&v59;
  sub_1001FF23C();
  uint64_t v64 = v82;
  v83(v27, v84, v82);
  char v65 = static LayoutDirection.== infix(_:_:)();
  uint64_t v66 = v86;
  v86(v27, v64);
  v66(v30, v64);
  BOOL v67 = v37 < v63;
  if (v65) {
    BOOL v67 = v37 > v63;
  }
  if (!v67) {
    goto LABEL_17;
  }
  double v60 = sub_10077D680(v63);
  LODWORD(v94) = 0;
LABEL_18:
  uint64_t v68 = v97;
  uint64_t v69 = v98;
  uint64_t v70 = v93[1];
  uint64_t v98 = *v93;
  uint64_t v71 = (int *)v89;
  uint64_t v72 = v90;
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  v73(&v90[*(int *)(v89 + 20)], (char *)v93 + *(int *)(v55 + 72), v62);
  uint64_t v74 = (char *)v72 + v71[6];
  v73(v74, v68, v62);
  swift_bridgeObjectRetain();
  DetailChartDataElement.date.getter();
  uint64_t v75 = v81;
  double v76 = sub_10077D680(v37);
  *uint64_t v72 = v98;
  v72[1] = v70;
  *(double *)((char *)v72 + v71[8]) = v76;
  uint64_t v77 = (double *)((char *)v72 + v71[9]);
  *uint64_t v77 = v60;
  *((unsigned char *)v77 + 8) = v94;
  uint64_t v78 = (uint64_t)v87;
  v73(v87, v74, v62);
  _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v62);
  sub_10006DF38(v78, v88, (uint64_t *)&unk_100E73CA0);
  State.wrappedValue.setter();
  sub_10017DF4C(v78, (uint64_t *)&unk_100E73CA0);
  sub_1001B1E64((void *)(v75 + *((int *)v91 + 10)), *(void *)(v75 + *((int *)v91 + 10) + 24));
  sub_100321354((uint64_t)v72);
  sub_100778234((uint64_t)v72, (void (*)(void))type metadata accessor for DetailChartSelection);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v95, v96);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v97, v62);
}

uint64_t sub_10077E878()
{
  uint64_t v1 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v7);
  uint64_t v8 = type metadata accessor for DetailChart(0);
  sub_10006DF38((uint64_t)v6, (uint64_t)v3, (uint64_t *)&unk_100E73CA0);
  sub_10017DF08(&qword_100E7DDF8);
  State.wrappedValue.setter();
  sub_10017DF4C((uint64_t)v6, (uint64_t *)&unk_100E73CA0);
  sub_1001B1E64((void *)(v0 + *(int *)(v8 + 40)), *(void *)(v0 + *(int *)(v8 + 40) + 24));
  return sub_100321428();
}

uint64_t sub_10077E994(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a3) {
    return sub_10077E878();
  }
  else {
    return sub_10077DF48(a5, *(double *)&a1);
  }
}

uint64_t sub_10077E9D0(double a1)
{
  type metadata accessor for DetailChart.LollipopOverlayView(0);
  type metadata accessor for DetailChartViewModel();
  type metadata accessor for ChartViewModel(0);
  if (ChartKind.isBarChart.getter())
  {
    double v2 = COERCE_DOUBLE(DetailChartLollipopPoint.y.getter());
    if (v3) {
      *(double *)&uint64_t result = 0.0;
    }
    else {
      *(double *)&uint64_t result = v2 + -1.0;
    }
  }
  else
  {
    *(double *)&uint64_t result = a1;
  }
  return result;
}

uint64_t sub_10077EA70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E93328);
  __chkstk_darwin(v4 - 8);
  uint64_t v74 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v73 = (char *)&v50 - v7;
  uint64_t v8 = sub_10017DF08(&qword_100E93330);
  sub_100162E4C();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v15 = (int *)type metadata accessor for DetailChart.LollipopOverlayView(0);
  uint64_t v16 = v1 + v15[7];
  uint64_t v17 = v16 + *(int *)(type metadata accessor for DetailChartViewModel() + 20);
  uint64_t v75 = *(void *)(v17 + *(int *)(type metadata accessor for ChartViewModel(0) + 40));
  uint64_t v18 = ChartProxy.position<A>(forY:)();
  if (v19 & 1) != 0 || (uint64_t v20 = sub_10077E9D0(*(double *)&v18), (v21))
  {
    uint64_t v41 = 1;
  }
  else
  {
    uint64_t v72 = v20;
    double v22 = *(double *)&v20;
    DetailChartLollipopPoint.x.getter();
    if (v22 <= 0.0)
    {
      uint64_t v42 = sub_10017DF08(&qword_100E93338);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 1, 1, v42);
    }
    else
    {
      uint64_t v70 = v14;
      uint64_t v71 = a1;
      double v24 = v23 + *(double *)(v1 + v15[10]) * -0.5;
      id v25 = [self systemBackgroundColor];
      uint64_t v69 = Color.init(_:)();
      if (qword_100E62450 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10058CE00();
      static Alignment.center.getter();
      sub_1001638C8();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v67 = v97;
      int v66 = v98;
      uint64_t v65 = v99;
      int v64 = v100;
      uint64_t v62 = v102;
      uint64_t v63 = v101;
      double v26 = v24 - sub_10058CE00();
      uint64_t v68 = static Color.white.getter();
      static Alignment.center.getter();
      sub_1001638C8();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v72 = v103;
      char v27 = v104;
      uint64_t v61 = v105;
      int v60 = v106;
      uint64_t v58 = v108;
      uint64_t v59 = v107;
      if (ChartKind.isBarChart.getter() & 1) != 0 || (uint64_t v28 = DetailChartLollipopPoint.y.getter(), (v29))
      {
        uint64_t v38 = sub_10017DF08(&qword_100E93340);
        uint64_t v37 = (uint64_t)v73;
        uint64_t v39 = (uint64_t)v73;
        uint64_t v40 = 1;
      }
      else
      {
        double v30 = *(double *)&v28;
        uint64_t v31 = static Alignment.center.getter();
        uint64_t v56 = v32;
        uint64_t v57 = v31;
        uint64_t v33 = v15[8];
        static Alignment.center.getter();
        sub_1001638C8();
        _FrameLayout.init(width:height:alignment:)();
        char v34 = v110;
        uint64_t v54 = v111;
        uint64_t v55 = v109;
        char v35 = v112;
        uint64_t v52 = v114;
        uint64_t v53 = v113;
        uint64_t v51 = static Color.white.getter();
        static Alignment.center.getter();
        sub_1001638C8();
        _FrameLayout.init(width:height:alignment:)();
        char v96 = v34;
        char v95 = v35;
        char v94 = v116;
        char v93 = v118;
        double v36 = *(double *)(v2 + v33) * 0.5;
        uint64_t v75 = v57;
        uint64_t v76 = v56;
        uint64_t v77 = v55;
        char v78 = v34;
        uint64_t v79 = v54;
        char v80 = v35;
        uint64_t v81 = v53;
        uint64_t v82 = v52;
        uint64_t v83 = v51;
        __int16 v84 = 256;
        uint64_t v85 = v115;
        char v86 = v116;
        uint64_t v87 = v117;
        char v88 = v118;
        long long v89 = v119;
        double v90 = v24 - v36;
        double v91 = v30 - v36;
        char v92 = 0;
        sub_10017DF08(&qword_100E93350);
        sub_100780F18((uint64_t)&unk_100E93358);
        uint64_t v37 = (uint64_t)v73;
        View.accessibilityHidden(_:)();
        swift_release();
        uint64_t v38 = sub_10017DF08(&qword_100E93340);
        uint64_t v39 = v37;
        uint64_t v40 = 0;
      }
      _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v38);
      uint64_t v43 = v74;
      sub_10006DF38(v37, v74, &qword_100E93328);
      uint64_t v44 = v68;
      *(void *)uint64_t v11 = v69;
      *((_WORD *)v11 + 4) = 256;
      *((void *)v11 + 2) = v67;
      v11[24] = v66;
      *((void *)v11 + 4) = v65;
      v11[40] = v64;
      uint64_t v45 = v62;
      *((void *)v11 + 6) = v63;
      *((void *)v11 + 7) = v45;
      *((double *)v11 + 8) = v26;
      *((void *)v11 + 9) = 0;
      v11[80] = 0;
      *((void *)v11 + 11) = v44;
      *((_WORD *)v11 + 48) = 256;
      *((void *)v11 + 13) = v72;
      v11[112] = v27;
      *((void *)v11 + 15) = v61;
      v11[128] = v60;
      uint64_t v46 = v58;
      *((void *)v11 + 17) = v59;
      *((void *)v11 + 18) = v46;
      *((double *)v11 + 19) = v24;
      *((void *)v11 + 20) = 0;
      v11[168] = 0;
      uint64_t v47 = sub_10017DF08(&qword_100E93348);
      sub_10006DF38(v43, (uint64_t)&v11[*(int *)(v47 + 64)], &qword_100E93328);
      swift_retain();
      swift_retain();
      sub_10017DF4C(v37, &qword_100E93328);
      sub_10017DF4C(v43, &qword_100E93328);
      swift_release();
      swift_release();
      uint64_t v48 = sub_10017DF08(&qword_100E93338);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v48);
      uint64_t v14 = v70;
      sub_10024D364((uint64_t)v11, (uint64_t)v70, &qword_100E93330);
      a1 = v71;
    }
    sub_10024D364((uint64_t)v14, a1, &qword_100E93330);
    uint64_t v41 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(a1, v41, 1, v8);
}

uint64_t sub_10077F0F0@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self systemBackgroundColor];
  uint64_t result = Color.init(_:)();
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = 256;
  return result;
}

uint64_t sub_10077F144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UnevenRoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10017DF08(&qword_100E931A0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + *(int *)(type metadata accessor for DetailChart(0) + 28);
  uint64_t v13 = v12 + *(int *)(type metadata accessor for DetailChartViewModel() + 20);
  *(void *)&v28[0] = *(void *)(v13 + *(int *)(type metadata accessor for ChartViewModel(0) + 40));
  ChartProxy.position<A>(forY:)();
  RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  double v22 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v23 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v24 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v22, v23, v24);
  void *v7 = v15;
  v7[1] = v17;
  _OWORD v7[2] = v19;
  v7[3] = v21;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1007801D8((uint64_t)v7, (uint64_t)v11, (void (*)(void))&type metadata accessor for UnevenRoundedRectangle);
  id v25 = &v11[*(int *)(v9 + 44)];
  long long v26 = v28[1];
  *(_OWORD *)id v25 = v28[0];
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v28[2];
  sub_100778234((uint64_t)v7, (void (*)(void))&type metadata accessor for UnevenRoundedRectangle);
  return sub_10024D364((uint64_t)v11, a2, &qword_100E931A0);
}

BOOL sub_10077F3A4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailChartDataElement.date.getter();
  Date.distance(to:)();
  double v5 = v4;
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  double v7 = fabs(v5);
  DetailChartDataElement.date.getter();
  Date.distance(to:)();
  double v9 = v8;
  v6(v3, v0);
  return v7 < fabs(v9);
}

uint64_t sub_10077F4E0(uint64_t a1, uint64_t a2)
{
  v23[1] = a2;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v7 - 8);
  double v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DetailChartDataElement();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(type metadata accessor for DetailChart(0) + 28);
  v23[0] = a1;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(int *)(type metadata accessor for DetailChartViewModel() + 20);
  uint64_t v17 = type metadata accessor for ChartViewModel(0);
  sub_10006DF38(v15 + v16 + *(int *)(v17 + 84), (uint64_t)v9, &qword_100E6B640);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_10017DF4C((uint64_t)v9, &qword_100E6B640);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    DetailChartDataElement.date.getter();
    uint64_t v18 = ChartProxy.position<A>(forX:)();
    char v20 = v19;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v20 & 1) == 0)
    {
      double v21 = sub_10077D680(*(double *)&v18);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return *(void *)&v21;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return 0;
}

uint64_t sub_10077F7A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v103 = a1;
  uint64_t v2 = type metadata accessor for BlendMode();
  uint64_t v101 = *(void *)(v2 - 8);
  uint64_t v102 = v2;
  __chkstk_darwin(v2);
  unsigned __int8 v100 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v94);
  char v96 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10017DF08(&qword_100E802C8);
  __chkstk_darwin(v98);
  uint64_t v99 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for DynamicTypeSize();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  char v86 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10017DF08(&qword_100E93300);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v82 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_10017DF08(&qword_100E93308);
  __chkstk_darwin(v81);
  uint64_t v83 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_10017DF08(&qword_100E93310);
  __chkstk_darwin(v89);
  char v92 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10017DF08(&qword_100E93318);
  __chkstk_darwin(v90);
  uint64_t v95 = (uint64_t)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10017DF08(&qword_100E93320);
  __chkstk_darwin(v91);
  char v93 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for ScaleLabel(0);
  uint64_t v97 = v1;
  DetailChartDataElement.valueLabel.getter();
  uint64_t v20 = static ChartValueLabel.with(label:)();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.TextStyle.caption2(_:), v7);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  char v29 = v28;
  swift_release();
  sub_100191924(v20, v22, v24);
  swift_bridgeObjectRelease();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CBA8();
  swift_endAccess();
  char v30 = v29 & 1;
  uint64_t v31 = Text.foregroundColor(_:)();
  uint64_t v33 = v32;
  char v35 = v34;
  uint64_t v37 = v36;
  swift_release();
  sub_100191924(v25, v27, v30);
  swift_bridgeObjectRelease();
  uint64_t v104 = v31;
  uint64_t v105 = v33;
  char v106 = v35 & 1;
  uint64_t v107 = v37;
  uint64_t v38 = v87;
  uint64_t v39 = v86;
  uint64_t v40 = v88;
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v86, enum case for DynamicTypeSize.medium(_:), v88);
  uint64_t v41 = v82;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  sub_100191924(v104, v105, v106);
  swift_bridgeObjectRelease();
  char v42 = static Edge.Set.all.getter();
  uint64_t v43 = v84;
  uint64_t v44 = (uint64_t)v83;
  uint64_t v45 = v85;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v83, v41, v85);
  uint64_t v46 = v44 + *(int *)(v81 + 36);
  *(unsigned char *)uint64_t v46 = v42;
  *(_OWORD *)(v46 + 8) = xmmword_100C57950;
  *(_OWORD *)(v46 + 24) = xmmword_100C57950;
  *(unsigned char *)(v46 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v45);
  uint64_t v47 = v96;
  uint64_t v48 = &v96[*(int *)(v94 + 20)];
  uint64_t v49 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v50 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v48, v49, v50);
  __asm { FMOV            V0.2D, #4.0 }
  *uint64_t v47 = _Q0;
  uint64_t v56 = v80;
  uint64_t v57 = v97;
  if (*((unsigned char *)v97 + *(int *)(v80 + 28)) == 1)
  {
    id v58 = [self systemBackgroundColor];
    uint64_t v59 = Color.init(_:)();
  }
  else
  {
    uint64_t v59 = static Color.clear.getter();
  }
  uint64_t v60 = v59;
  uint64_t v61 = v99;
  sub_1007801D8((uint64_t)v47, v99, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v62 = v98;
  *(void *)(v61 + *(int *)(v98 + 52)) = v60;
  *(_WORD *)(v61 + *(int *)(v62 + 56)) = 256;
  sub_100778234((uint64_t)v47, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v63 = static Alignment.center.getter();
  uint64_t v65 = v64;
  uint64_t v66 = (uint64_t)v92;
  uint64_t v67 = (uint64_t)&v92[*(int *)(v89 + 36)];
  sub_10006DF38(v61, v67, &qword_100E802C8);
  uint64_t v68 = (uint64_t *)(v67 + *(int *)(sub_10017DF08(&qword_100E802F8) + 36));
  uint64_t *v68 = v63;
  v68[1] = v65;
  sub_10006DF38(v44, v66, &qword_100E93308);
  sub_10017DF4C(v61, &qword_100E802C8);
  sub_10017DF4C(v44, &qword_100E93308);
  uint64_t v69 = *v57;
  double v70 = *(double *)((char *)v57 + *(int *)(v56 + 24)) + 1.0;
  uint64_t v71 = v95;
  sub_10006DF38(v66, v95, &qword_100E93310);
  uint64_t v72 = v71 + *(int *)(v90 + 36);
  *(void *)uint64_t v72 = v69;
  *(double *)(v72 + 8) = v70;
  sub_10017DF4C(v66, &qword_100E93310);
  uint64_t v74 = v100;
  uint64_t v73 = v101;
  if (*((unsigned char *)v57 + *(int *)(v56 + 32))) {
    uint64_t v75 = (unsigned int *)&enum case for BlendMode.destinationOut(_:);
  }
  else {
    uint64_t v75 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v76 = v102;
  (*(void (**)(char *, void, uint64_t))(v101 + 104))(v100, *v75, v102);
  uint64_t v77 = (uint64_t)v93;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(&v93[*(int *)(v91 + 36)], v74, v76);
  sub_10006DF38(v71, v77, &qword_100E93318);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v76);
  sub_10017DF4C(v71, &qword_100E93318);
  return sub_10024D364(v77, v103, &qword_100E93320);
}

uint64_t sub_1007801D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10078022C()
{
  type metadata accessor for DetailChart(0);
  sub_100179CD4();
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100179DC0();
    sub_100162F0C();
    v6();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100179DC0();
    sub_100162F0C();
    v7();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v5 + v0[6]), *(unsigned char *)(v5 + v0[6] + 8));
  uint64_t v8 = v5 + v0[7];
  type metadata accessor for ConditionDetailChartHeaderStringModel();
  sub_100179DC0();
  sub_100162F0C();
  v9();
  uint64_t v38 = type metadata accessor for DetailChartViewModel();
  uint64_t v10 = v8 + *(int *)(v38 + 20);
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for ChartViewModel(0);
  type metadata accessor for ChartKind();
  sub_100179DC0();
  sub_100162F0C();
  v12();
  swift_bridgeObjectRelease();
  type metadata accessor for DetailChartExtrema();
  sub_100179DC0();
  sub_100162F0C();
  v13();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v10 + *(int *)(v11 + 44)), *(void **)(v10 + *(int *)(v11 + 44) + 8), *(void *)(v10 + *(int *)(v11 + 44) + 16), *(unsigned char *)(v10 + *(int *)(v11 + 44) + 24));
  sub_10017DF08(&qword_100E6BF00);
  sub_10017E890();
  uint64_t v14 = type metadata accessor for Date();
  if (!sub_100182A28(v2))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v14);
  }
  uint64_t v16 = v10 + *(int *)(v11 + 56);
  uint64_t v17 = sub_10017DF08(&qword_100E6BF10);
  if (!sub_100188D64(v17))
  {
    swift_release();
    v16 += *(int *)(v3 + 48);
    if (!sub_100182A28(v16))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v14);
    }
  }
  sub_10017E890();
  type metadata accessor for ChartDarkeningScrim();
  sub_100179DC0();
  sub_100162F0C();
  v19();
  swift_bridgeObjectRelease();
  sub_100162880();
  uint64_t v21 = *(void (**)(void))(v20 + 8);
  sub_1001D1D60();
  v21();
  sub_1001D1D60();
  v21();
  sub_1001D1D60();
  v21();
  sub_10017E890();
  uint64_t v22 = type metadata accessor for DetailChartDataElement();
  if (!sub_100188D64(v22))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v16, v3);
  }
  swift_bridgeObjectRelease();
  sub_10017E890();
  type metadata accessor for ChartPeakMarkStyle();
  sub_100179DC0();
  sub_100162F0C();
  v24();
  swift_bridgeObjectRelease();
  sub_10017E890();
  type metadata accessor for ChartViewModelInterpolationMode();
  sub_100179DC0();
  sub_100162F0C();
  v25();
  sub_10017E890();
  type metadata accessor for ChartPastDataTreatment();
  sub_100179DC0();
  sub_100162F0C();
  v26();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  sub_1001631C0();
  swift_release();
  uint64_t v27 = v38;
  uint64_t v28 = v8 + *(int *)(v38 + 24);
  uint64_t v29 = type metadata accessor for LollipopViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DetailChartDataPoint();
    sub_100179DC0();
    sub_100162F0C();
    v30();
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      type metadata accessor for AttributedString();
      sub_100179DC0();
      sub_100162F0C();
      v32();
      sub_100185404();
      sub_100185404();
      sub_100185404();
      sub_100185404();
      uint64_t v27 = v38;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v33 = v8 + *(int *)(v27 + 28);
  uint64_t v34 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for TemperatureChartKind();
      sub_100179DC0();
      sub_100162F0C();
      v35();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v36 = v5 + v0[9];
  if (!sub_100182A28(v36)) {
    ((void (*)(uint64_t, uint64_t))v21)(v36, v14);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v5 + v0[10]);

  return swift_deallocObject();
}

uint64_t sub_1007808EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100780940(uint64_t a1)
{
  return sub_100780D7C(a1, type metadata accessor for DetailChart, (uint64_t (*)(uint64_t, uint64_t))sub_10077ACC0);
}

unint64_t sub_10078096C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1007809E4()
{
  unint64_t result = qword_100E93028;
  if (!qword_100E93028)
  {
    sub_10018C6DC(&qword_100E93008);
    sub_100780AB0((uint64_t)&unk_100E93030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E93028);
  }
  return result;
}

uint64_t type metadata accessor for DetailChart.LollipopOverlayView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E93200);
}

unint64_t sub_100780AB0(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100780AFC()
{
  unint64_t result = qword_100E930C8;
  if (!qword_100E930C8)
  {
    sub_10018C6DC(&qword_100E930C0);
    sub_10024D5E4((uint64_t)&qword_100E7D908);
    sub_10024D5E4((uint64_t)&qword_100E80338);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E930C8);
  }
  return result;
}

uint64_t sub_100780BC4(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = *(void *)(type metadata accessor for DetailChart(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(type metadata accessor for ChartProxy() - 8);
  return sub_10077E994(a1, a2, v6, v3 + v8, v3 + ((v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
}

uint64_t sub_100780CA4@<X0>(void *a1@<X8>)
{
  uint64_t result = DetailChartDataElement.value.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100780CD0()
{
  type metadata accessor for ChartProxy();
  sub_100179DC0();
  sub_100162F0C();
  v0();

  return swift_deallocObject();
}

uint64_t sub_100780D50(uint64_t a1)
{
  return sub_100780D7C(a1, (uint64_t (*)(void))&type metadata accessor for ChartProxy, (uint64_t (*)(uint64_t, uint64_t))sub_10077D868);
}

uint64_t sub_100780D7C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

unint64_t sub_100780E14()
{
  unint64_t result = qword_100E930E0;
  if (!qword_100E930E0)
  {
    sub_10018C6DC(&qword_100E930D8);
    sub_100780AB0((uint64_t)&unk_100E930E8);
    sub_100780AB0((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E930E0);
  }
  return result;
}

uint64_t type metadata accessor for ScaleLabel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E932A8);
}

unint64_t sub_100780F18(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    sub_100123BE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100780F94()
{
  unint64_t result = qword_100E93120;
  if (!qword_100E93120)
  {
    sub_10018C6DC(&qword_100E93128);
    sub_100781034();
    sub_10024D5E4((uint64_t)&qword_100E64438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E93120);
  }
  return result;
}

unint64_t sub_100781034()
{
  unint64_t result = qword_100E93130;
  if (!qword_100E93130)
  {
    sub_10018C6DC(&qword_100E93138);
    sub_10078096C((uint64_t)&unk_100E93140);
    sub_10024D5E4((uint64_t)&unk_100E93180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E93130);
  }
  return result;
}

unint64_t sub_100781100()
{
  return sub_10078096C((uint64_t)&unk_100E93150);
}

unint64_t sub_100781130()
{
  unint64_t result = qword_100E93160;
  if (!qword_100E93160)
  {
    sub_10018C6DC(&qword_100E93168);
    sub_10024D5E4((uint64_t)&unk_100E93170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E93160);
  }
  return result;
}

uint64_t sub_1007811C8(uint64_t a1)
{
  return a1;
}

BOOL sub_10078121C()
{
  return sub_10077F3A4();
}

void *sub_10078123C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v46 = *a2;
    *a1 = *a2;
    uint64_t v47 = (void *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v47;
  }
  uint64_t v7 = type metadata accessor for DetailChartLollipopPoint();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for ChartProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v172 = a2;
  uint64_t v173 = a1;
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  v13[*(int *)(v16 + 20)] = v14[*(int *)(v16 + 20)];
  v13[*(int *)(v16 + 24)] = v14[*(int *)(v16 + 24)];
  uint64_t v174 = (int *)type metadata accessor for DetailChartViewModel();
  uint64_t v175 = v13;
  uint64_t v17 = v174[5];
  uint64_t v18 = &v13[v17];
  uint64_t v176 = v14;
  uint64_t v19 = &v14[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v22 = v21[5];
  uint64_t v23 = &v18[v22];
  char v24 = &v19[v22];
  uint64_t v25 = type metadata accessor for ChartKind();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  v26(v23, v24, v25);
  *(void *)&v18[v21[6]] = *(void *)&v19[v21[6]];
  uint64_t v27 = v21[7];
  uint64_t v28 = &v18[v27];
  uint64_t v29 = &v19[v27];
  uint64_t v30 = type metadata accessor for DetailChartExtrema();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  swift_bridgeObjectRetain();
  v31(v28, v29, v30);
  *(void *)&v18[v21[8]] = *(void *)&v19[v21[8]];
  *(void *)&v18[v21[9]] = *(void *)&v19[v21[9]];
  *(_OWORD *)&v18[v21[10]] = *(_OWORD *)&v19[v21[10]];
  uint64_t v32 = v21[11];
  uint64_t v33 = &v18[v32];
  uint64_t v34 = &v19[v32];
  char v35 = *(void **)v34;
  uint64_t v36 = (void *)*((void *)v34 + 1);
  uint64_t v37 = *((void *)v34 + 2);
  LOBYTE(v31) = v34[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v35, v36, v37, v31);
  *(void *)uint64_t v33 = v35;
  *((void *)v33 + 1) = v36;
  *((void *)v33 + 2) = v37;
  v33[24] = (char)v31;
  uint64_t v38 = v21[12];
  uint64_t v39 = &v18[v38];
  uint64_t v40 = &v19[v38];
  *(void *)&v18[v38] = *(void *)&v19[v38];
  uint64_t v41 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  char v42 = &v39[v41];
  uint64_t v43 = &v40[v41];
  uint64_t v44 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  uint64_t v48 = v21[13];
  uint64_t v49 = &v18[v48];
  uint64_t v50 = &v19[v48];
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = v21[14];
  uint64_t v52 = &v18[v51];
  uint64_t v53 = &v19[v51];
  uint64_t v54 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
  {
    uint64_t v55 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v52 = *(void *)v53;
    uint64_t v56 = *(int *)(v54 + 48);
    uint64_t v57 = &v52[v56];
    id v58 = &v53[v56];
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v44))
    {
      uint64_t v59 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v57, v58, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v44);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
  }
  *(void *)&v18[v21[15]] = *(void *)&v19[v21[15]];
  uint64_t v60 = v21[16];
  uint64_t v61 = &v18[v60];
  uint64_t v62 = &v19[v60];
  uint64_t v63 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
  *(void *)&v18[v21[17]] = *(void *)&v19[v21[17]];
  uint64_t v64 = v21[18];
  uint64_t v65 = &v18[v64];
  uint64_t v66 = &v19[v64];
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
  swift_bridgeObjectRetain();
  v67(v65, v66, v44);
  v67(&v18[v21[19]], &v19[v21[19]], v44);
  v67(&v18[v21[20]], &v19[v21[20]], v44);
  uint64_t v68 = v21[21];
  uint64_t v69 = &v18[v68];
  double v70 = &v19[v68];
  uint64_t v71 = type metadata accessor for DetailChartDataElement();
  uint64_t v171 = a3;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71))
  {
    uint64_t v72 = sub_10017DF08(&qword_100E6B640);
    memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
  }
  *(void *)&v18[v21[22]] = *(void *)&v19[v21[22]];
  uint64_t v73 = v21[23];
  uint64_t v74 = &v18[v73];
  uint64_t v75 = &v19[v73];
  uint64_t v76 = type metadata accessor for ChartPeakMarkStyle();
  uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
  swift_bridgeObjectRetain();
  v77(v74, v75, v76);
  *(void *)&v18[v21[24]] = *(void *)&v19[v21[24]];
  *(void *)&v18[v21[25]] = *(void *)&v19[v21[25]];
  uint64_t v78 = v21[26];
  uint64_t v79 = &v18[v78];
  uint64_t v80 = &v19[v78];
  uint64_t v81 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
  swift_bridgeObjectRetain();
  v82(v79, v80, v81);
  uint64_t v83 = v21[27];
  uint64_t v84 = &v18[v83];
  uint64_t v85 = &v19[v83];
  uint64_t v86 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
  uint64_t v87 = v21[28];
  uint64_t v88 = &v18[v87];
  uint64_t v89 = &v19[v87];
  uint64_t v90 = *((void *)v89 + 1);
  *(void *)uint64_t v88 = *(void *)v89;
  *((void *)v88 + 1) = v90;
  uint64_t v91 = v21[29];
  char v92 = &v18[v91];
  char v93 = &v19[v91];
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)char v92 = *(void *)v93;
  *((void *)v92 + 1) = v94;
  uint64_t v95 = v21[30];
  char v96 = &v18[v95];
  uint64_t v97 = &v19[v95];
  uint64_t v98 = *((void *)v97 + 1);
  *(void *)char v96 = *(void *)v97;
  *((void *)v96 + 1) = v98;
  uint64_t v99 = v21[31];
  unsigned __int8 v100 = &v18[v99];
  uint64_t v101 = &v19[v99];
  uint64_t v102 = *((void *)v101 + 1);
  *(void *)unsigned __int8 v100 = *(void *)v101;
  *((void *)v100 + 1) = v102;
  uint64_t v103 = v21[32];
  uint64_t v104 = &v18[v103];
  uint64_t v105 = &v19[v103];
  uint64_t v106 = *((void *)v105 + 1);
  *(void *)uint64_t v104 = *(void *)v105;
  *((void *)v104 + 1) = v106;
  uint64_t v107 = v21[33];
  uint64_t v108 = &v18[v107];
  uint64_t v109 = &v19[v107];
  uint64_t v110 = *((void *)v109 + 1);
  *(void *)uint64_t v108 = *(void *)v109;
  *((void *)v108 + 1) = v110;
  uint64_t v111 = v174[6];
  char v112 = &v175[v111];
  uint64_t v113 = &v176[v111];
  uint64_t v114 = (int *)type metadata accessor for LollipopViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, (uint64_t)v114))
  {
    uint64_t v118 = *((void *)v113 + 1);
    *(void *)char v112 = *(void *)v113;
    *((void *)v112 + 1) = v118;
    uint64_t v119 = v114[5];
    uint64_t v120 = &v112[v119];
    uint64_t v121 = &v113[v119];
    uint64_t v122 = type metadata accessor for DetailChartDataPoint();
    uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
    swift_bridgeObjectRetain();
    v123(v120, v121, v122);
    *(void *)&v112[v114[6]] = *(void *)&v113[v114[6]];
    uint64_t v124 = v114[7];
    char v125 = &v112[v124];
    double v126 = &v113[v124];
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v132 = *((void *)v126 + 1);
      *(void *)char v125 = *(void *)v126;
      *((void *)v125 + 1) = v132;
      int v133 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v134 = v133[5];
      uint64_t v170 = &v125[v134];
      uint64_t v135 = &v126[v134];
      uint64_t v136 = type metadata accessor for AttributedString();
      uint64_t v137 = *(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16);
      swift_bridgeObjectRetain();
      v137(v170, v135, v136);
      uint64_t v138 = v133[6];
      uint64_t v139 = &v125[v138];
      uint64_t v140 = &v126[v138];
      uint64_t v141 = *((void *)v140 + 1);
      *(void *)uint64_t v139 = *(void *)v140;
      *((void *)v139 + 1) = v141;
      uint64_t v142 = v133[7];
      uint64_t v143 = &v125[v142];
      uint64_t v144 = &v126[v142];
      uint64_t v145 = *((void *)v144 + 1);
      *(void *)uint64_t v143 = *(void *)v144;
      *((void *)v143 + 1) = v145;
      uint64_t v146 = v133[8];
      uint64_t v147 = &v125[v146];
      size_t v148 = &v126[v146];
      uint64_t v149 = *((void *)v148 + 1);
      *(void *)uint64_t v147 = *(void *)v148;
      *((void *)v147 + 1) = v149;
      uint64_t v150 = v133[9];
      uint64_t v151 = &v125[v150];
      char v152 = &v126[v150];
      uint64_t v153 = *((void *)v152 + 1);
      *(void *)uint64_t v151 = *(void *)v152;
      *((void *)v151 + 1) = v153;
      uint64_t v154 = v133[10];
      uint64_t v155 = &v125[v154];
      char v156 = &v126[v154];
      uint64_t v157 = *((void *)v156 + 1);
      *(void *)uint64_t v155 = *(void *)v156;
      *((void *)v155 + 1) = v157;
      v125[v133[11]] = v126[v133[11]];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v158 = *((void *)v126 + 1);
        *(void *)char v125 = *(void *)v126;
        *((void *)v125 + 1) = v158;
        uint64_t v159 = *((void *)v126 + 3);
        *((void *)v125 + 2) = *((void *)v126 + 2);
        *((void *)v125 + 3) = v159;
        uint64_t v160 = *((void *)v126 + 5);
        *((void *)v125 + 4) = *((void *)v126 + 4);
        *((void *)v125 + 5) = v160;
        goto LABEL_23;
      }
      uint64_t v128 = *((void *)v126 + 1);
      *(void *)char v125 = *(void *)v126;
      *((void *)v125 + 1) = v128;
      uint64_t v129 = *((void *)v126 + 3);
      *((void *)v125 + 2) = *((void *)v126 + 2);
      *((void *)v125 + 3) = v129;
      uint64_t v130 = *((void *)v126 + 5);
      *((void *)v125 + 4) = *((void *)v126 + 4);
      *((void *)v125 + 5) = v130;
      uint64_t v131 = *((void *)v126 + 7);
      *((void *)v125 + 6) = *((void *)v126 + 6);
      *((void *)v125 + 7) = v131;
      v125[64] = v126[64];
      v125[65] = v126[65];
    }
    swift_bridgeObjectRetain();
LABEL_23:
    char v116 = v172;
    uint64_t v47 = v173;
    uint64_t v117 = v171;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, (uint64_t)v114);
    goto LABEL_24;
  }
  uint64_t v115 = sub_10017DF08(&qword_100E82140);
  memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
  char v116 = v172;
  uint64_t v47 = v173;
  uint64_t v117 = v171;
LABEL_24:
  uint64_t v161 = v174[7];
  char v162 = &v175[v161];
  uint64_t v163 = &v176[v161];
  uint64_t v164 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
  {
    uint64_t v165 = sub_10017DF08(&qword_100E820F0);
    memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v166 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v162, v163, v166);
    }
    else
    {
      uint64_t v167 = *((void *)v163 + 1);
      *(void *)char v162 = *(void *)v163;
      *((void *)v162 + 1) = v167;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v164);
  }
  uint64_t v168 = v117[9];
  *(void *)((char *)v47 + v117[8]) = *(void *)((char *)v116 + v117[8]);
  *(void *)((char *)v47 + v168) = *(void *)((char *)v116 + v168);
  *(void *)((char *)v47 + v117[10]) = *(void *)((char *)v116 + v117[10]);
  return v47;
}

uint64_t sub_100781DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartLollipopPoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = (int *)type metadata accessor for DetailChartViewModel();
  uint64_t v10 = v7 + v9[5];
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v12 = v10 + v11[5];
  uint64_t v13 = type metadata accessor for ChartKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = v10 + v11[7];
  uint64_t v15 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v10 + v11[11]), *(void **)(v10 + v11[11] + 8), *(void *)(v10 + v11[11] + 16), *(unsigned char *)(v10 + v11[11] + 24));
  uint64_t v16 = v10 + v11[12];
  uint64_t v17 = v16 + *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v18 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  uint64_t v19 = v10 + v11[14];
  uint64_t v20 = sub_10017DF08(&qword_100E6BF10);
  if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
  {
    swift_release();
    uint64_t v21 = v19 + *(int *)(v20 + 48);
    if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v21, v18);
    }
  }
  uint64_t v22 = v10 + v11[16];
  uint64_t v23 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  swift_bridgeObjectRelease();
  char v24 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
  v24(v10 + v11[18], v18);
  v24(v10 + v11[19], v18);
  v24(v10 + v11[20], v18);
  uint64_t v25 = v10 + v11[21];
  uint64_t v26 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v10 + v11[23];
  uint64_t v28 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = v10 + v11[26];
  uint64_t v30 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  uint64_t v31 = v10 + v11[27];
  uint64_t v32 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v33 = v7 + v9[6];
  uint64_t v34 = type metadata accessor for LollipopViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = v33 + *(int *)(v34 + 20);
    uint64_t v36 = type metadata accessor for DetailChartDataPoint();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    uint64_t v37 = v33 + *(int *)(v34 + 28);
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v39 = v37 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
      uint64_t v40 = type metadata accessor for AttributedString();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  uint64_t v41 = v7 + v9[7];
  uint64_t v42 = type metadata accessor for ConditionDetailChartFooterViewModel();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v41, 1, v42);
  if (!result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v44 = type metadata accessor for TemperatureChartKind();
      uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8);
      return v45(v41, v44);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}